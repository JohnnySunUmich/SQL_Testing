SELECT America, Asia, Europe FROM (SELECT @am:=0, @as:=0, @eu:=0) t, (SELECT @am:=@am + 1 AS row_id, name AS America FROM student WHERE continent = 'America' ORDER BY America) AS t2 LEFT JOIN (SELECT @as:=@as + 1 AS row_id, name AS Asia FROM student WHERE continent = 'Asia' ORDER BY Asia) AS t3 ON t2.row_id = t3.row_id LEFT JOIN (SELECT @eu:=@eu + 1 AS row_id, name AS Europe FROM student WHERE continent = 'Europe' ORDER BY Europe) AS t4 ON t2.row_id = t4.row_id
SELECT America, Asia, Europe FROM (SELECT @am:=0, @as:=0, @eu:=0) t, (SELECT @as:= @as + 1 AS asid, name AS Asia FROM student WHERE continent = "Asia" ORDER BY Asia) t1 RIGHT JOIN (SELECT @am:=@am +1 AS amid, name AS America FROM Student WHERE continent = "America" ORDER BY America) t2 ON asid = amid LEFT JOIN (SELECT @eu:=@eu +1 AS euid, name AS Europe FROM Student WHERE continent = 'Europe' ORDER BY Europe) t3 ON euid = amid
SELECT America, Asia, Europe FROM (SELECT @as:=0, @am:=0, @eu:=0) t, (SELECT @as:=@as + 1 AS asid, name AS Asia FROM student WHERE continent = 'Asia' ORDER BY Asia) AS t1 RIGHT JOIN (SELECT @am:=@am + 1 AS amid, name AS America FROM student WHERE continent = 'America' ORDER BY America) AS t2 ON asid = amid LEFT JOIN (SELECT @eu:=@eu + 1 AS euid, name AS Europe FROM student WHERE continent = 'Europe' ORDER BY Europe) AS t3 ON amid = euid
SELECT America, Asia, Europe FROM (SELECT @asrn:=0, @amrn:=0, @eurn:=0) t, (SELECT @amrn:=@amrn+1 AS row_num, name AS America FROM student WHERE continent = 'America' ORDER BY name ) am LEFT JOIN (SELECT @asrn:=@asrn+1 AS row_num, name AS Asia FROM student WHERE continent = 'Asia' ORDER BY name ) ais ON am.row_num = ais.row_num LEFT JOIN (SELECT @eurn:=@eurn+1 AS row_num, name AS Europe FROM student WHERE continent = 'Europe' ORDER BY name ) e ON am.row_num = e.row_num
SELECT America, Asia, Europe FROM (SELECT name AS America, row_number() over(order by name) AS rn FROM student WHERE continent='America') a LEFT JOIN (SELECT name AS Asia, row_number() over(order by name) AS rn FROM student WHERE continent='Asia') s ON a.rn=s.rn LEFT JOIN (SELECT name AS Europe, row_number() over(order by name) AS rn FROM student WHERE continent='Europe') e ON a.rn=e.rn
SELECT MAX(America) AS America, MAX(Asia) AS Asia, MAX(Europe) AS Europe FROM (SELECT CASE WHEN continent = 'America' THEN name END AS America, CASE WHEN continent = 'Asia' THEN name END AS Asia, CASE WHEN continent = 'Europe' THEN name END AS Europe, ROW_NUMBER() OVER(PARTITION BY Continent ORDER BY name) AS rn FROM student) AS t GROUP BY rn
SELECT MAX(America) AS America, MAX(Asia) as Asia, MAX(Europe) AS Europe FROM ( SELECT CASE WHEN continent = 'America' THEN @r1 := @r1 + 1 WHEN continent = 'Asia' THEN @r2 := @r2 + 1 WHEN continent = 'Europe' THEN @r3 := @r3 + 1 END row_id, CASE WHEN continent = 'America' THEN name END America, CASE WHEN continent = 'Asia' THEN name END Asia, CASE WHEN continent = 'Europe' THEN name END Europe FROM student, (SELECT @r1 := 0, @r2 := 0, @r3 := 0) AS row_id ORDER BY name ) t GROUP BY row_id
SELECT MAX(America) AS America, MAX(Asia) as Asia, MAX(Europe) AS Europe FROM ( SELECT CASE WHEN continent = 'America' THEN @r1 := @r1 + 1 WHEN continent = 'Asia' THEN @r2 := @r2 + 1 WHEN continent = 'Europe' THEN @r3 := @r3 + 1 END row_id, CASE WHEN continent = 'America' THEN name END America, CASE WHEN continent = 'Asia' THEN name END Asia, CASE WHEN continent = 'Europe' THEN name END Europe FROM student, (SELECT @r1 := 0, @r2 := 0, @r3 := 0) tmp ORDER BY name) t GROUP BY row_id
SELECT MAX(CASE WHEN continent = 'America' THEN name ELSE null END) AS America, MAX(CASE WHEN continent = 'Asia' THEN name ELSE null END) AS Asia, MAX(CASE WHEN continent = 'Europe' THEN name ELSE null END) AS Europe FROM ( SELECT name, continent, ROW_NUMBER() OVER (PARTITION BY continent ORDER BY name ASC) AS rk FROM student ) AS tmp GROUP BY rk ORDER BY rk
SELECT MAX(CASE WHEN continent = 'America' THEN name END )AS America, MAX(CASE WHEN continent = 'Asia' THEN name END )AS Asia, MAX(CASE WHEN continent = 'Europe' THEN name END )AS Europe FROM (SELECT *, ROW_NUMBER()OVER(PARTITION BY continent ORDER BY name) AS row_id FROM student) AS t GROUP BY row_id
SELECT MAX(CASE WHEN continent = 'America' THEN name END) AS 'America', MAX(CASE WHEN continent = 'Asia' THEN name END) AS 'Asia', MAX(CASE WHEN continent = 'Europe' THEN name END) AS 'Europe' FROM (SELECT *, ROW_NUMBER () OVER (PARTITION BY continent ORDER BY name) AS rn FROM student) t GROUP BY t.rn
SELECT MAX(CASE WHEN continent = 'America' THEN name END) AS America, MAX(CASE WHEN continent = 'Asia' THEN name END) AS Asia, MAX(CASE WHEN continent = 'Europe' THEN name END) AS Europe FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY continent ORDER BY name) AS row_id FROM student) t GROUP BY row_id
SELECT MAX(CASE WHEN continent = 'America' THEN name END) AS America, MAX(CASE WHEN continent = 'Asia' THEN name END) AS Asia, MAX(CASE WHEN continent = 'Europe' THEN name END) AS Europe FROM (SELECT *, ROW_NUMBER() OVER(PARTITION BY continent ORDER BY name) AS row_id FROM student) t1 GROUP BY row_id
SELECT MAX(CASE WHEN continent = 'America' THEN name END) AS America, MAX(CASE WHEN continent = 'Asia' THEN name END) AS Asia, MAX(CASE WHEN continent = 'Europe' THEN name END) AS Europe FROM (SELECT *, ROW_NUMBER()OVER(PARTITION BY continent ORDER BY name) AS row_id FROM student) AS t GROUP BY row_id
SELECT MAX(CASE WHEN continent = 'America' THEN name END) as America, MAX(CASE WHEN continent = 'Asia' THEN name END) as Asia, MAX(CASE WHEN continent = 'Europe' THEN name END) as Europe FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY continent ORDER BY name) as rn FROM student) a GROUP BY rn
SELECT MAX(CASE WHEN continent='America' THEN name END) AS America , MAX(CASE WHEN continent='Asia' THEN name END) AS Asia , MAX(CASE WHEN continent='Europe' THEN name END) AS Europe FROM (SELECT * , ROW_NUMBER() OVER (PARTITION BY continent ORDER BY name) AS roll_number FROM student) a GROUP BY roll_number
SELECT MAX(CASE WHEN continent='America' THEN name END) AS America ,MAX(CASE WHEN continent='Asia' THEN name END) AS Asia ,MAX(CASE WHEN continent='Europe' THEN name END) AS Europe FROM (SELECT * ,ROW_NUMBER() OVER (PARTITION BY continent ORDER BY name) AS rn FROM student) stu GROUP BY rn
SELECT MAX(CASE WHEN continent='America' THEN name END) as 'America' , MAX(CASE WHEN continent='Asia' THEN name END) as 'Asia', MAX(CASE WHEN continent='Europe' THEN name END) as 'Europe' FROM (SELECT *, row_number()OVER(PARTITION BY continent ORDER BY name) as 'row_id' from student) t GROUP by row_id
SELECT MAX(a.America) America, MAX(a.Asia) Asia, MAX(a.Europe) Europe FROM ( SELECT CASE WHEN continent = "America" THEN name END America, CASE WHEN continent = "Asia" THEN name END Asia, CASE WHEN continent = "Europe" THEN name END Europe, ROW_NUMBER()OVER(PARTITION BY continent ORDER BY name) rnb FROM student )a GROUP BY a.rnb
SELECT MIN(America) AS 'America', MIN(Asia) AS 'Asia', MIN(Europe) AS 'Europe' FROM (SELECT CASE WHEN continent = 'America' THEN @r1 := @r1 + 1 WHEN continent = 'Asia' THEN @r2 := @r2 + 1 WHEN continent = 'Europe' THEN @r3 := @r3 + 1 END 'row_num', CASE WHEN continent = 'America' THEN name END 'America', CASE WHEN continent = 'Asia' THEN name END 'Asia', CASE WHEN continent = 'Europe' THEN name END 'Europe' FROM (SELECT @r1 := 0, @r2 := 0, @r3 := 0) a, student ORDER BY name) b GROUP BY row_num
SELECT MIN(America) AS America, MIN(Asia) AS Asia, MIN(Europe) AS Europe FROM (SELECT CASE WHEN continent = 'America' THEN name END AS America, CASE WHEN continent = 'Asia' THEN name END AS Asia, CASE WHEN continent = 'Europe' THEN name END AS Europe, ROW_NUMBER() OVER(PARTITION BY Continent ORDER BY name) AS rn FROM student) AS t GROUP BY rn
SELECT MIN(America) As 'America', MIN(Asia) As 'Asia', MIN(Europe) As 'Europe' FROM ( SELECT CASE WHEN continent='America' THEN name End As 'America', CASE WHEN continent='Asia' THEN name End As 'Asia', CASE WHEN continent='Europe' THEN name End As 'Europe', ROW_NUMBER() OVER(PARTITION BY continent ORDER BY name) As rnk FROM student ) As t GROUP BY rnk
SELECT MIN(CASE WHEN continent = 'America' THEN name END) AS 'America', MIN(CASE WHEN continent = 'Asia' THEN name END) AS 'Asia', MIN(CASE WHEN continent = 'Europe' THEN name END) AS 'Europe' FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY continent ORDER BY name) AS rn FROM student ) a GROUP BY rn
SELECT MIN(CASE WHEN continent = 'America' THEN name END) AS America, MIN(CASE WHEN continent = 'Asia' THEN name END) AS Asia, MIN(CASE WHEN continent = 'Europe' THEN name END) AS Europe FROM (SELECT *, ROW_NUMBER()OVER(PARTITION BY continent ORDER BY name) AS row_id FROM student) AS t GROUP BY row_id
SELECT ifnull(min(am), null) AS America, ifnull(min(asia), null) AS Asia, ifnull(min(eu), null) AS Europe FROM (SELECT row_number() over (partition BY continent ORDER BY name) row_num, (CASE WHEN continent = 'America' then name END) am, (CASE WHEN continent = 'Asia' then name END) asia, (CASE WHEN continent = 'Europe' then name END) eu FROM student) tmp GROUP BY row_num
SELECT max(America) as America,max(Asia) as Asia,max(Europe) as Europe FROM (select case when continent='America' then name else null end as America, case when continent='Asia' then name else null end as Asia, case when continent='Europe' then name else null end as Europe, row_number()over(partition by continent order by name) as r from student) a group by r
Select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from ( Select a.RNK, Case When continent = "America" Then name else Null End as America, Case When continent = "Asia" Then name else Null End as Asia, Case When continent = "Europe" Then name else Null End as Europe from (Select row_number() over(partition by continent order by name) as RNK, name, continent from student) a ) b Group by RNK
WITH AM AS (SELECT NAME, ROW_NUMBER() OVER (ORDER BY NAME) AS RNK FROM STUDENT WHERE CONTINENT = 'America'), ASI AS (SELECT NAME, ROW_NUMBER() OVER (ORDER BY NAME) AS RNK FROM STUDENT WHERE CONTINENT = 'Asia'), EU AS (SELECT NAME, ROW_NUMBER() OVER (ORDER BY NAME) AS RNK FROM STUDENT WHERE CONTINENT = 'Europe') SELECT AM.NAME AS AMERICA, ASI.NAME AS ASIA, EU.NAME AS EUROPE FROM AM LEFT JOIN ASI ON AM.RNK = ASI.RNK LEFT JOIN EU ON EU.RNK = AM.RNK
WITH CTE AS( select *, ROW_NUMBER() OVER(PARTITION BY continent ORDER by name ASC) as "row_id" from student ) select MAX(CASE WHEN continent = "America" THEN name END) AS "America", MAX(CASE WHEN continent = "Asia" THEN name END) As "Asia", MAX(CASE WHEN continent = "Europe" THEN name END) AS "Europe" from CTE group by row_id
WITH CTE1 AS ( SELECT *, ROW_NUMBER() OVER(PARTITION BY continent ORDER BY name) AS row_id FROM student ), CTE2 AS ( SELECT row_id, CASE WHEN continent = 'America' THEN name ELSE NULL END AS America, CASE WHEN continent = 'Asia' THEN name ELSE NULL END AS Asia, CASE WHEN continent = 'Europe' THEN name ELSE NULL END AS Europe FROM CTE1 ) SELECT max(America) as America, min(Asia) AS Asia, max(Europe) AS Europe FROM CTE2 GROUP BY row_id
WITH CTE1 AS ( SELECT name AS Asia, ROW_NUMBER() OVER (ORDER BY name) AS id FROM student WHERE continent = 'Asia'), CTE2 AS ( SELECT name AS Europe, ROW_NUMBER() OVER (ORDER BY name) AS id FROM student WHERE continent = 'Europe' ), CTE3 AS ( SELECT name AS America, ROW_NUMBER() OVER (ORDER BY name) AS id FROM student WHERE continent = 'America' ), CTE4 AS ( SELECT CTE3.id, America, Asia FROM CTE3 LEFT JOIN CTE1 ON CTE3.id = CTE1.id) SELECT America, Asia, Europe FROM CTE4 LEFT JOIN CTE2 ON CTE4.id = CTE2.id
WITH CTE1 AS ( SELECT name, continent, ROW_NUMBER() OVER(PARTITION BY continent ORDER BY name ASC) as rn FROM student ), CTE2 AS ( SELECT rn, CASE WHEN continent = 'America' THEN name ELSE NULL END as America, CASE WHEN continent = 'Asia' THEN name ELSE NULL END as Asia, CASE WHEN continent = 'Europe' THEN name ELSE NULL END as Europe FROM CTE1 ) SELECT MAX(America) AS America, MAX(Asia) AS Asia, MAX(Europe) AS Europe FROM CTE2 GROUP BY rn
WITH CTE_AM AS (Select NAME, row_number() OVER(order by name) as rno from student where continent = 'America'), CTE_ASIA AS (Select NAME, row_number() OVER(order by name) as rno from student where continent = 'Asia'), CTE_EUR AS (Select NAME, row_number() OVER(order by name) as rno from student where continent = 'Europe') Select AM.Name as America, ASI.Name as Asia, EUR.Name as Europe from CTE_AM AM left join CTE_ASIA ASI ON AM.rno = ASI.rno LEFT JOIN CTE_EUR EUR on AM.rno = EUR.rno
WITH TEMP AS( SELECT CASE WHEN CONTINENT = 'AMERICA' THEN NAME ELSE NULL END AS AMERICA, CASE WHEN CONTINENT = 'aSIA' THEN NAME ELSE NULL END AS ASIA, CASE WHEN CONTINENT = 'EUROPE' THEN NAME ELSE NULL END AS EUROPE, ROW_NUMBER() OVER(PARTITION BY CONTINENT ORDER BY NAME ASC) AS R FROM STUDENT ) SELECT MAX(AMERICA) AS AMERICA, MAX(ASIA) AS ASIA, MAX(EUROPE) AS EUROPE FROM TEMP GROUP BY R
WITH TEMP AS( select case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe, row_number() over (partition by continent order by name ASC) as rownum from student ) SELECT MAX(AMERICA) AS AMERICA, MAX(ASIA) AS ASIA, MAX(EUROPE) AS EUROPE FROM TEMP GROUP BY ROWNUM
WITH america AS ( SELECT name AS America, ROW_NUMBER() OVER (ORDER BY name) AS rn FROM student WHERE continent = 'America' ), asia AS ( SELECT name as Asia, ROW_NUMBER() OVER (ORDER BY name) AS rn FROM student WHERE continent = 'Asia' ), europe AS ( SELECT name AS Europe, ROW_NUMBER() OVER (ORDER BY name) AS rn FROM student WHERE continent = 'Europe' ) SELECT America, Asia, Europe FROM america LEFT OUTER JOIN asia ON america.rn = asia.rn LEFT OUTER JOIN europe ON america.rn = europe.rn
WITH america_table AS ( SELECT name as America, ROW_NUMBER() OVER() as rownum FROM student WHERE continent = 'America' ORDER BY name ), asia_table AS ( SELECT name as Asia, ROW_NUMBER() OVER() as rownum FROM student WHERE continent = 'Asia' ORDER BY name ), europe_table AS ( SELECT name as Europe, ROW_NUMBER() OVER() as rownum FROM student WHERE continent = 'Europe' ORDER BY name ) SELECT M.America, S.Asia, E.Europe FROM america_table M LEFT JOIN asia_table S ON M.rownum=S.rownum LEFT JOIN europe_table E ON M.rownum=E.rownum
WITH continent_rank AS ( SELECT (case when continent = "America" then name else NULL END)as America, (case when continent = "Asia" then name else NULL END)as Asia, (case when continent = "Europe" then name else NULL END)as Europe, ROW_NUMBER() OVER (PARTITION BY continent ORDER BY name ASC) as rn FROM student ) select max(America) America,max(Asia) Asia,max(Europe) Europe FROM continent_rank group by rn
WITH pivot AS ( SELECT (if(continent = 'America' , name , null) ) America , (if(continent = 'Asia' , name , null )) Asia , (if(continent = 'Europe' , name , null)) Europe , row_number() OVER(PARTITION BY continent ORDER BY name) AS rn FROM Student ) SELECT min(America) AS America, min(Asia) AS Asia, min(Europe) AS Europe FROM pivot GROUP BY rn
WITH pivot AS ( SELECT CASE WHEN continent = 'America' THEN name END AS America, CASE WHEN continent = 'Asia' THEN name END AS Asia, CASE WHEN continent = 'Europe' THEN name END AS Europe, ROW_NUMBER() OVER(PARTITION BY continent ORDER BY name) AS rn FROM Student ) SELECT min(America) AS America, min(Asia) AS Asia, min(Europe) AS Europe FROM pivot GROUP BY rn
WITH s1 AS (SELECT ROW_NUMBER() OVER (ORDER BY name) id, name AS 'America' FROM student WHERE continent = 'America'), s2 AS (SELECT ROW_NUMBER() OVER (ORDER BY name) id, name AS 'Asia' FROM student WHERE continent = 'Asia'), s3 AS (SELECT ROW_NUMBER() OVER (ORDER BY name) id, name AS 'Europe' FROM student WHERE continent = 'Europe') SELECT America, Asia, Europe FROM s2 RIGHT JOIN s1 ON s1.id = s2.id LEFT JOIN s3 ON s1.id = s3.id
WITH t AS (SELECT (CASE WHEN continent = 'America' THEN name END) AS America ,(CASE WHEN continent = 'Asia' THEN name END) AS Asia ,(CASE WHEN continent = 'Europe' THEN name END) AS Europe ,ROW_NUMBER() OVER (PARTITION BY continent ORDER BY name) AS rnk FROM student) SELECT MAX(America) America, MAX(Asia) Asia, MAX(Europe) Europe FROM t GROUP BY rnk
WITH t1 AS ( SELECT ROW_NUMBER() OVER() rn, America FROM ( SELECT CASE WHEN continent = 'America' THEN name END AS America FROM student ) t WHERE America IS NOT NULL ORDER BY America ), t2 AS ( SELECT ROW_NUMBER() OVER() rn, Asia FROM ( SELECT CASE WHEN continent = 'Asia' THEN name END AS Asia FROM student ) t WHERE Asia IS NOT NULL ORDER BY Asia ), t3 AS ( SELECT ROW_NUMBER() OVER() rn, Europe FROM ( SELECT CASE WHEN continent = 'Europe' THEN name END AS Europe FROM student ) t WHERE Europe IS NOT NULL ORDER BY Europe ) (SELECT America, Asia, Europe FROM t1 LEFT JOIN t2 ON t1.rn = t2.rn LEFT JOIN t3 ON t3.rn = t1.rn) UNION (SELECT America, Asia, Europe FROM t2 LEFT JOIN t1 ON t1.rn = t2.rn LEFT JOIN t3 ON t3.rn = t2.rn) UNION (SELECT America, Asia, Europe FROM t3 LEFT JOIN t1 ON t1.rn = t3.rn LEFT JOIN t2 ON t3.rn = t2.rn)
WITH t1 AS (SELECT *, ROW_NUMBER() OVER(PARTITION BY continent ORDER BY name) AS row_id FROM student) SELECT MIN(CASE WHEN continent = 'America' THEN name END) AS America, MIN(CASE WHEN continent = 'Asia' THEN name END) AS Asia, MIN(CASE WHEN continent = 'Europe' THEN name END) AS Europe FROM t1 GROUP BY row_id
WITH t1 AS (SELECT name, CASE WHEN continent = 'America' THEN 1 ELSE 0 END AS America, CASE WHEN continent = 'Europe' THEN 1 ELSE 0 END AS Europe, CASE WHEN continent = 'Asia' THEN 1 ELSE 0 END AS Asia FROM student), t2 AS (SELECT ROW_NUMBER() OVER () id, name America FROM t1 WHERE America != 0 ORDER BY 2), t3 AS (SELECT ROW_NUMBER() OVER () id, name Europe FROM t1 WHERE Europe != 0 ORDER BY 2), t4 AS (SELECT ROW_NUMBER() OVER () id, name Asia FROM t1 WHERE Asia != 0 ORDER BY 2) SELECT t2.America, t4.Asia, t3.Europe FROM t2 LEFT JOIN t3 ON t2.id = t3.id LEFT JOIN t4 ON t2.id = t4.id
WITH temp AS ( SELECT CASE WHEN continent = 'America' THEN name ELSE Null END AS America, CASE WHEN continent = 'Asia' THEN name ELSE Null END AS Asia, CASE WHEN continent = 'Europe' THEN name ELSE Null END AS Europe, ROW_NUMBER() OVER(PARTITION BY continent ORDER BY name) AS rk FROM student ) SELECT MAX(America) As America, MAX(Asia) AS Asia, MAX(Europe) AS Europe FROM temp GROUP BY rk
With cte as ( Select *, row_number() over (partition by continent order by name) AS row_id From student ) Select Max(Case When continent = 'America' Then name End) 'America', Max(Case When continent = 'Asia' Then name End) 'Asia', Max(Case When continent = 'Europe' Then name End) 'Europe' From cte Group by row_id
With cte as ( Select *, row_number() over (partition by continent order by name) AS row_id From student ) Select max(Case When continent = 'America' Then name End) 'America', max(Case When continent = 'Asia' Then name End) 'Asia', max(Case When continent = 'Europe' Then name End) 'Europe' From cte Group by row_id
select Ame.name as America, Asi.name as Asia, Eur.name as Europe from (select name, row_number() over(order by name) as rno from student where continent = 'America')Ame left join (select name, row_number() over(order by name) as rno from student where continent = 'Asia')Asi on Ame.rno=Asi.rno left join (select name, row_number() over(order by name) as rno from student where continent = 'Europe')Eur on Ame.rno=Eur.rno
select America, Asia, Europe from ( (select name America, row_number () over (order by name) as rw from student where continent = 'America') usa left join (select name Asia, row_number () over (order by name) as rw from student where continent = 'Asia') asia on usa.rw = asia.rw left join (select name Europe, row_number () over (order by name) as rw from student where continent = 'Europe') eu on usa.rw = eu.rw )
select America, Asia, Europe from ( select name as America, row_number() over (order by name) as rn from student where continent = 'America' ) as a left join ( select name as Asia, row_number() over (order by name) as rn from student where continent = 'Asia' ) as b on a.rn = b.rn left join ( select name as Europe, row_number() over (order by name) as rn from student where continent = 'Europe' ) as c on a.rn = c.rn
select America, Asia, Europe from ( select name as America, row_number() over (order by name) as rn from student where continent = 'America' ) as america left join( select name as Asia, row_number() over (order by name) as rn from student where continent = 'Asia' ) as asia on america.rn = asia.rn left join ( select name as Europe, row_number() over (order by name) as rn from student where continent = 'Europe' ) as europe on america.rn = europe.rn
select America, Asia, Europe from (select @as:=0, @am:=0, @eu:=0) t, (SELECT @am:=@am + 1 AS amid, name AS America FROM student WHERE continent = 'America' ORDER BY America) T1 LEFT JOIN (SELECT @as:=@as + 1 AS asid, name AS Asia FROM student WHERE continent = 'Asia' ORDER BY Asia) AS t2 ON asid = amid LEFT JOIN (SELECT @eu:=@eu + 1 AS euid, name AS Europe FROM student WHERE continent = 'Europe' ORDER BY Europe) AS t3 ON amid = euid
select America, Asia, Europe from (select America, Asia, r1 from (select name as America, row_number() over(order by name) r1 from student where continent='America') a left join (select name as Asia, row_number() over(order by name) r2 from student where continent='Asia') b on r1=r2) d left join (select name as Europe, row_number() over(order by name) r3 from student where continent='Europe') c on r1 =r3
select America, Asia, Europe from (select case when continent='America' then name else null end as America, row_number() over(order by isnull(America), name asc) as row_num from student) a left join (select case when continent='Asia' then name else null end as Asia, row_number() over(order by isnull(Asia),name asc) as row_num from student) b on a.row_num = b.row_num left join (select row_number() over( order by isnull(Europe),name asc) as row_num, case when continent='Europe' then name else null end as Europe from student) c on a.row_num=c.row_num where America is not null
select a.America,b.Asia,c.Europe from (select name as America ,row_number() over(order by name) as rk from student where continent = "America") a left join (select name as Asia ,row_number() over(order by name) as rk from student where continent = "Asia") b on a.rk = b.rk left join (select name as Europe ,row_number() over(order by name) as rk from student where continent = "Europe") c on a.rk = c.rk order by a.America
select a.america, b.asia, c.europe from ( select name as america, row_number() over() as rn from student where continent='America' order by 1 ) a left join ( select name as asia, row_number() over() as rn from student where continent='Asia' order by 1 ) b on b.rn=a.rn left join ( select name as europe, row_number() over() as rn from student where continent='Europe' order by 1 ) c on c.rn=a.rn
select max((case when continent = "America" then name end)) as America, max((case when continent = "Asia" then name end)) as Asia, max((case when continent = "Europe" then name end)) as Europe from (select *, row_number () over (partition by continent order by name) as row_num from student)a group by row_num
select max(America) AS America, max(Asia) AS Asia, max(Europe) AS Europe from ( select case when continent = 'America' then name end as America, case when continent = 'Europe' then name end as Europe, case when continent = 'Asia' then name end as Asia, row_number() over(partition by continent order by name) as rn from student ) as tb1 group by rn
select max(America) as America , max(Asia) as Asia, max(Europe) as Europe from (select case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe, row_number() over (partition by continent order by name) as rn from student ) aaa group by rn order by America, Asia, europe
select max(America) as America , max(Asia) as Asia, max(Europe) as Europe from (select case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe, row_number() over (partition by continent order by name) as rownum from student ) a group by rownum
select max(America) as America , max(Asia) as Asia, max(Europe) as Europe from (select case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe, row_number() over (partition by continent order by name) as rownum from student ) t1 group by rownum
select max(America) as America, max(Asia) Asia, max(Europe) Europe from (select case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe, row_number() over(partition by continent order by name) as rn from student ) a group by rn
select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from ( select case when continent = 'America' then name end as America, case when continent = 'Asia' then name end as Asia, case when continent = 'Europe' then name end as Europe, row_number() over (partition by continent order by name) as rownum from student ) a group by rownum
select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from ( select case when continent="America" then name end as "America", case when continent="Asia" then name end as "Asia", case when continent="Europe" then name end as "Europe", row_number() over(partition by continent order by name) as row_n from student ) t group by row_n
select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from (select case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe, row_number() over(partition by continent order by name) as rn from student) as a group by rn
select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from (select case when continent = 'America' then name else null end as America, case when continent = 'Europe' then name else null end as Europe, case when continent = 'Asia' then name else null end as Asia, row_number() over (partition by continent order by name) as 'rownum' from student) t group by rownum
select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from (select case when continent = 'America' then name end as America, case when continent = 'Asia' then name end as Asia, case when continent = 'Europe' then name end as Europe, row_number() over (partition by continent order by name) as row_num from student) t group by row_num
select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from (select row_number() over (partition by continent order by name) as number, case when continent = 'America' then name end America, case when continent = 'Asia' then name end Asia, case when continent = 'Europe' then name end europe from student order by name) as t1 group by number
select max(case continent when 'America' then name end) as America, max(case continent when 'Asia' then name end) as Asia, max(case continent when 'Europe' then name end) as Europe from (select *, row_number()over(partition by continent order by name) as row_id from student ) as a group by row_id
select max(case when continent = 'America' then name end) as America, max(case when continent = 'Asia' then name end) as Asia, max(case when continent = 'Europe' then name end) as Europe from (select *, row_number() over (partition by continent order by name) as row_id from student) as t group by row_id
select max(case when continent = 'America' then name end) as America, max(case when continent = 'Asia' then name end) as Asia, max(case when continent = 'Europe' then name end) as Europe from (select *, row_number() over(partition by continent order by name) as row_id from student) as t group by row_id
select max(case when continent='America' then name else null end) as America , max(case when continent='Asia' then name else null end) as Asia , max(case when continent='Europe' then name else null end) as Europe from (select name, continent, row_number() over (partition by continent order by name) as r from student) x group by r
select max(case when continent='America' then name else null end) as America, max(case when continent='Asia' then name else null end) as Asia, max(case when continent='Europe' then name else null end) as Europe from(select *, row_number() over(partition by continent order by name) as rown from student)temp group by rown
select max(case when continent='America' then name end) America, max(case when continent='Asia' then name end) Asia, max(case when continent='Europe' then name end) Europe from (select *, row_number() over(partition by continent order by name) roww from student) temp group by roww
select max(case when continent='America' then name end) as America, max(case when continent='Asia' then name end) as Asia, max(case when continent='Europe' then name end) as Europe from (select *, row_number() over(partition by continent order by name) as row_id from student)res group by row_id
select min(America) as America ,min(Asia) as Asia ,min(Europe) as Europe from( select case when continent = 'America' then @amer:=@amer+1 when continent = 'Asia' then @asia:=@asia+1 when continent = 'Europe' then @europe:=@europe+1 end as num ,case when continent = 'America' then name end as America ,case when continent = 'Asia' then name end as Asia ,case when continent = 'Europe' then name end as Europe from (select name ,continent from student order by continent,name ) orderstudent,(select @amer:=0,@asia:=0,@europe:=0) as temp ) as country group by num
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from ( select case when continent = 'America' then name else null end as 'America', case when continent = 'Asia' then name else null end as 'Asia', case when continent = 'Europe' then name else null end as 'Europe', row_number() over(partition by continent order by name) as rnk from student) s group by rnk
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from ( select rnk, case when continent = 'America' then name else null end as 'America', case when continent = 'Asia' then name else null end as 'Asia', case when continent = 'Europe' then name else null end as 'Europe' from ( select name, continent, row_number() over(partition by continent order by name) as rnk from student ) as tab ) as tab1 group by rnk
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from (select (case when continent ='America' then @am:= @am+1 when continent = 'Asia' then @as:=@as+1 when continent = 'Europe' then @eu:=@eu+1 end) as row_num, (case when continent ='America' then name end) as 'America', (case when continent = 'Asia' then name end) as 'Asia', (case when continent = 'Europe' then name end) as 'Europe' from student, (select @am:= 0, @as:= 0, @eu:= 0) as temp order by name) as pivoted group by row_num
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from (select case when continent = 'America' then @am:=@am+1 when continent = 'Asia' then @as:=@as+1 when continent = 'Europe' then @eu:=@eu+1 end as rowline, case when continent = 'America' then name end as America, case when continent = 'Asia' then name end as Asia, case when continent = 'Europe' then name end as Europe from student, (select @am:=0, @as := 0, @eu:=0) temp order by name) t group by rowline
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from (select case when continent = 'America' then name else null end as 'America', case when continent = 'Asia' then name else null end as 'Asia', case when continent = 'Europe' then name else null end as 'Europe', row_number() over(partition by continent order by name) as row_stu from student) temp1 group by row_stu
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from (select case when continent = 'America' then name end as America, case when continent = 'Asia' then name end as Asia, case when continent = 'Europe' then name end as Europe, row_number() over(partition by continent order by name) as rn from student) sq group by rn
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from (select case when continent='America' then name end as America, case when continent='Asia' then name end as Asia, case when continent='Europe' then name end as Europe, row_number () over(partition by continent order by name) as ranks from student) as t1 group by ranks
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from (select row_numbers, case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe from (select *, row_number() over(partition by continent order by name) as row_numbers from student) as t1) as t2 group by row_numbers
select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from (select rowy, case when continent = 'America' then name else null end as America, case when continent = 'Europe' then name else null end as Europe, case when continent = 'Asia' then name else null end as Asia from (select *, row_number() over(partition by continent order by name) as rowy from student) t1) t2 group by rowy
select min(case when continent='America' then name end) as America, min(case when continent='Asia' then name end) as Asia, min(case when continent='Europe' then name end) as Europe from( select name, continent, row_number() over(partition by continent order by name) as row_id from student ) r group by row_id
select t1.name as America, t2.name as Asia, t3.name as Europe from (select row_number() over() as id, name from Student where continent = 'America' order by name) as t1 left outer JOIN (select row_number() over() as id, name from Student where continent = 'Asia' order by name) as t2 on t1.id = t2.id left outer JOIN (select row_number() over() as id, name from Student where continent = 'Europe' order by name) as t3 on t1.id = t3.id
with A as (select name as 'America', row_number() over (order by name) as 'america_rn' from student where continent = 'America'), B as (select name as 'Asia',row_number() over(order by name) as 'asia_rn' from student where continent = 'Asia'), C as (select name as 'Europe',row_number() over (order by name) as 'europe_rn' from student where continent = 'Europe') select America, Asia, Europe from A left join B on A.america_rn = B.asia_rn left join C on A.america_rn = C.europe_rn
with America as (select name as America, row_number() over(order by name) as num from student where continent = 'America'), Asia as (select name as Asia, row_number() over(order by name) as num from student where continent = 'Asia'), Europe as (select name as Europe, row_number() over(order by name) as num from student where continent = 'Europe') select America, Asia, Europe from America left join Asia on America.num = Asia.num left join Europe on America.num = Europe.num
with amer as ( select row_number() over(order by name) as id, name as America from student where continent = 'America' ), asia as ( select row_number() over(order by name) as id, name as Asia from student where continent = 'Asia' ), euro as ( select row_number() over(order by name) as id, name as Europe from student where continent = 'Europe' ) select America, Asia, Europe from amer left join asia on amer.id=asia.id left join euro on amer.id=euro.id
with america as ( select name, row_number() over (order by name asc) as rank_no from student where continent = 'America' ), asia as ( select name, row_number() over (order by name asc) as rank_no from student where continent = 'Asia' ), europe as ( select name, row_number() over (order by name asc) as rank_no from student where continent = 'Europe' ) select am.name as America, a.name as Asia, e.name as Europe from america am left join asia a on am.rank_no = a.rank_no left join europe e on am.rank_no = e.rank_no
with america as (select row_number() over (order by name) as 'row_number', name from student where continent = 'america' ), asia as (select row_number() over (order by name) as 'row_number', name from student where continent = 'asia' ), europe as (select row_number() over (order by name) as 'row_number', name from student where continent = 'europe' ) select america.name as america, asia.name as asia, europe.name as europe from america left join asia on america.row_number = asia.row_number left join europe on america.row_number = europe.row_number
with america as (select row_number() over (order by name) as 'row_number', name from student where continent = 'america' order by name), asia as (select row_number() over (order by name) as 'row_number', name from student where continent = 'asia' order by name), europe as (select row_number() over (order by name) as 'row_number', name from student where continent = 'europe' order by name) select america.name as america, asia.name as asia, europe.name as europe from america left join asia on america.row_number = asia.row_number left join europe on america.row_number = europe.row_number
with countryinfo as (select name , continent , row_number() over(partition by continent order by name) as rn from student) select america , asia , europe from (select rn , max(case when continent = 'America' then name end) as America, max(case when continent = 'Asia' then name end) as Asia, max(case when continent = 'Europe' then name end) as Europe from countryinfo group by 1) a
with cte as ( select CASE continent when 'America' THEN name ELSE NULL END America, CASE continent when 'Asia' THEN name ELSE NULL END Asia, CASE continent when 'Europe' THEN name ELSE NULL END Europe FROM student), cte1 as( select row_number() over(order by CASE WHEN America is NULL THEN 1 ELSE 0 END, America) rn, America from cte ), cte2 as( select row_number() over(order by CASE WHEN Asia is NULL THEN 1 ELSE 0 END, Asia) rn, Asia from cte ), cte3 as( select row_number() over(order by CASE WHEN Europe is NULL THEN 1 ELSE 0 END, Europe) rn, Europe from cte ) select cte1.America,cte2.Asia,cte3.Europe from cte1 left join cte2 on cte1.rn = cte2.rn left join cte3 on cte1.rn=cte3.rn where America is not NULL
with cte as ( select case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe, row_number() over(partition by continent order by name) as row_num from student ) select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from cte group by row_num
with cte as ( select case when continent ='America' then name end as America, case when continent ='Europe' then name end as Europe, case when continent ='Asia' then name end as Asia, row_number() over (partition by continent order by name) as rn from student) select min(America) as America,min(Asia) as Asia, min(Europe) as Europe from cte group by rn
with cte as ( select if(continent='America',name,null) as America, if(continent='Asia',name,null) as Asia, if(continent='Europe',name,null) as Europe, row_number() over(partition by continent order by name) as myrank from student) select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from cte group by myrank
with cte as ( select name, continent, row_number() over (partition by continent order by name) as rnk from student ), cte1 as ( select rnk, case when continent = 'America' then name else null end as 'America', case when continent = 'Asia' then name else null end as 'Asia', case when continent = 'Europe' then name else null end as 'Europe' from cte ) select max(America) as 'America', max(Asia) as 'Asia', max(Europe) as 'Europe' from cte1 group by rnk
with cte as ( select name, continent, row_number() over(partition by continent order by name asc) as row_num from student ), america as ( select row_num, name as America from cte where continent = 'America' ), asia as ( select row_num, name as Asia from cte where continent = 'Asia' ), europe as ( select row_num, name as Europe from cte where continent = 'Europe' ) select America, Asia, Europe from america left join asia on america.row_num = asia.row_num left join europe on america.row_num = europe.row_num
with cte as (select *, row_number() over(partition by continent order by name) as rown from student) select max(case when continent='America' then name else null end) as America, max(case when continent='Asia' then name else null end) as Asia, max(case when continent='Europe' then name else null end) as Europe from cte group by rown
with cte as (select name, row_number() over() as rn from student where continent = 'America' order by name ), cte2 as (select name, row_number() over() as rn from student where continent = 'Europe' order by name ), cte3 as (select name, row_number() over() as rn from student where continent = 'Asia' order by name ) select cte.name as america, cte3.name as Asia, cte2.name as Europe from cte left join cte2 on (cte.rn = cte2.rn) left join cte3 on (cte.rn = cte3.rn)
with cte as (select name,continent,row_number()over(partition by continent order by name)as r from student), am as ( select r,name as America from cte where continent="America" ), asi as ( select r,name as Asia from cte where continent="Asia"), eu as ( select r,name as Europe from cte where continent="Europe") select distinct America,Asia,Europe from am left join asi on am.r=asi.r left join eu on am.r=eu.r
with cte as( select *, row_number() over(partition by continent order by name) as r_num from student ) select max(case when continent = 'America' then name end) America, max(case when continent = 'Asia' then name end) Asia, max(case when continent = 'Europe' then name end) Europe from cte group by r_num
with cte as( select name, case when continent = "America" then name end 'America', case when continent = "Asia" then name end 'Asia', case when continent = "Europe" then name end 'Europe', row_number() over(partition by continent order by name) as rn from student ) select America, Asia, Europe from( select distinct rn from cte ) a left join ( select rn, America from cte where America is not null ) b on a.rn = b.rn left join ( select rn, Asia from cte where Asia is not null ) c on a.rn = c.rn left join ( select rn, Europe from cte where Europe is not null ) d on a.rn = d.rn
with cte1 as(select if(continent='America', name, null) as America, if(continent='Asia', name, null) as Asia, if(continent='Europe', name, null) as Europe, row_number() over(partition by continent order by name) as rnk from student) select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from cte1 group by rnk
with cte_am as (select name, row_number() over(order by name) as rn from student where continent = 'America'), cte_as as (select name, row_number() over(order by name) as rn from student where continent = 'Asia'), cte_eu as (select name, row_number() over(order by name) as rn from student where continent = 'Europe') select am.name as America, as1.name as Asia, eu.name as Europe from cte_am am left outer join cte_as as1 on am.rn = as1.rn left outer join cte_eu eu on am.rn = eu.rn
with cts as ( SELECT *, ROW_NUMBER()OVER(PARTITION BY continent ORDER BY name) as 'row_id' from student) SELECT MAX(CASE WHEN continent='America' THEN name END) as America, MAX(CASE WHEN continent='Asia' THEN name END) as Asia, MAX(CASE WHEN continent='Europe' THEN name END) as Europe FROM cts GROUP BY row_id
with murica as ( select name as america, row_number() over(order by name) as row_num from student where continent = 'America' ), asia as ( select name as asia, row_number() over(order by name) as row_num from student where continent = 'Asia' ), europe as ( select name as europe, row_number() over(order by name) as row_num from student where continent = 'Europe' ) select america, asia, europe from murica a left join asia aa on a.row_num = aa.row_num left join europe e on a.row_num = e.row_num
with pivot as ( select (case when a.continent = 'America' then a.name else null end) as America, (case when a.continent = 'Asia' then a.name else null end) as Asia, (case when a.continent = 'Europe' then a.name else null end) as Europe, ROW_NUMBER() OVER(PARTITION BY continent ORDER BY name) AS rn from student a ) select max(America) as America, max(Asia) as Asia, max(Europe) as Europe from pivot group by rn
with pivot as ( select case when continent = 'America' then name end as 'America', case when continent = 'Asia' then name end as 'Asia', case when continent = 'Europe' then name end as 'Europe', row_number() over(partition by continent order by name) as row_num from student order by 1,2,3) select min(america) as 'America', min(Asia) as 'Asia', min(Europe) as 'Europe' from pivot group by row_num
with pivot as ( select case when continent = 'America' then name end as America, case when continent = 'Europe' then name end as Europe, case when continent = 'Asia' then name end as Asia, row_number() over(partition by continent order by name) as row_num from student ) select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from pivot group by row_num
with pivot as ( select case when continent ='America' then name end as America, case when continent ='Asia' then name end as Asia, case when continent = 'Europe' then name end as Europe, row_number() over(partition by continent order by name) as row_num from student ) select min(America) as America, min(Asia) as Asia, min(Europe) as Europe from pivot group by row_num
with pivot as ( select row_number() over(partition by continent order by name) rn, case when continent='America' then name end as "America", case when continent='Asia' then name end as "Asia", case when continent='Europe' then name end as "Europe" from student ) select min(America) as America,min(Asia) as Asia,min(Europe) as Europe from pivot group by rn
with students as ( select * , row_number() over (partition by continent order by name) as row_num from student ) select america.name as America , asia.name as Asia , europe.name as Europe from (select * from students where continent = 'America') america left outer join (select * from students where continent = 'Asia') asia on america.row_num = asia.row_num left outer join (select * from students where continent = 'Europe') europe on america.row_num = europe.row_num
with t as (select name, continent, row_number() over(partition by continent order by name) as rnk from student) select distinct t1.name as America, t2.name as Asia, t3.name as Europe from (select * from t where continent = 'America') t1 left join (select * from t where continent = 'Asia') t2 on t1.rnk = t2.rnk left join (select * from t where continent = 'Europe') t3 on t1.rnk = t3.rnk
with t1 as ( SELECT name As 'America', ROW_NUMBER() OVER(ORDER BY name) As 'rnk' FROM student WHERE continent='America'), t2 as ( SELECT name As 'Asia', ROW_NUMBER() OVER(ORDER BY name) As 'rnk' FROM student WHERE continent='Asia'), t3 as ( SELECT name As 'Europe', ROW_NUMBER() OVER(ORDER BY name) As 'rnk' FROM student WHERE continent='Europe') SELECT t1.America, t2.Asia, t3.Europe FROM (t1 LEFT JOIN t2 ON t1.rnk=t2.rnk) LEFT JOIN t3 ON t1.rnk=t3.rnk
with t1 as (select name as America, row_number() over(order by name) as row_nbr from student where continent='America' order by 1 ), t2 as (select name as Asia, row_number() over(order by name) as row_nbr from student where continent='Asia' order by 1 ), t3 as (select name as Europe, row_number() over(order by name) as row_nbr from student where continent='Europe' order by 1 ) select America, Asia, Europe from t1 left join t2 on t1.row_nbr=t2.row_nbr left join t3 on t1.row_nbr=t3.row_nbr
with t1 as( select name as America, row_number() over (order by name) as rnk from student where continent = 'America' ), t2 as( select name as Asia, row_number() over (order by name) as rnk from student where continent = 'Asia' ), t3 as( select name as Europe, row_number() over (order by name) as rnk from student where continent = 'Europe' ) select America, Asia, Europe from t1 left join t2 on t1.rnk = t2.rnk left join t3 on t1.rnk = t3.rnk
with table1 as (select case when continent = 'America' then name else null end as America, case when continent = 'Asia' then name else null end as Asia, case when continent = 'Europe' then name else null end as Europe, row_number() over (partition by continent order by name) as rownum from student ) select max(America) as America , max(Asia) as Asia, max(Europe) as Europe from table1 group by rownum
with tmp1 as (select name as America, row_number() over (order by name) as row_nbr from student where continent='America' order by 1 ), tmp2 as (select name as Asia, row_number() over (order by name) as row_nbr from student where continent='Asia' order by 1 ), tmp3 as (select name as Europe, row_number() over (order by name) as row_nbr from student where continent='Europe' order by 1 ) select America, Asia, Europe from tmp1 a left join tmp2 b using (row_nbr) left join tmp3 c using (row_nbr)
with usa as (select name as America, row_number() over(order by name) as rw from student where continent = 'America'), asia as (select name as Asia, row_number() over(order by name) as rw from student where continent = 'Asia'), europe as (select name as Europe, row_number() over(order by name) as rw from student where continent = 'Europe') select America, Asia, Europe from usa left join asia using(rw) left join europe using(rw)
