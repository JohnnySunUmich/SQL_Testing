SELECT A.machine_id ,Round(AVG(B.timestamp - A.timestamp),3) AS "processing_time" FROM (SELECT * FROM Activity WHERE activity_type = 'start') A LEFT JOIN (SELECT * FROM Activity WHERE activity_type = 'end') B ON A.machine_id=B.machine_id AND A.process_id=B.process_id GROUP BY machine_id
SELECT A.machine_id, ROUND(AVG(B.timestamp - A.timestamp), 3) AS processing_time FROM Activity A JOIN Activity B ON A.machine_id = B.machine_id AND A.process_id = B.process_id AND A.activity_type = 'start' AND B.activity_type = 'end' GROUP BY A.machine_id
SELECT A1.machine_id, ROUND(AVG(A2.timestamp - A1.timestamp),3) AS processing_time FROM Activity A1 JOIN Activity A2 ON A1.machine_id = A2.machine_id AND A1.process_id = A2.process_id AND A1.activity_type = 'start' AND A2.activity_type = 'end' GROUP BY 1
SELECT E.MACHINE_ID, ROUND(SUM(E.TIMESTAMP - S.TIMESTAMP) / COUNT(E.PROCESS_ID), 3) PROCESSING_TIME FROM ACTIVITY E, ACTIVITY S WHERE E.ACTIVITY_TYPE = 'end' AND S.ACTIVITY_TYPE = 'start' AND E.MACHINE_ID = S.MACHINE_ID GROUP BY E.MACHINE_ID
SELECT a.machine_id, ROUND(AVG(a.duration), 3) AS processing_time FROM ( SELECT machine_id, process_id, (MAX(timestamp) - MIN(timestamp)) AS duration FROM Activity GROUP BY 1, 2 ) a GROUP BY a.machine_id
SELECT a.machine_id, ROUND(AVG(b.endtime-a.timestamp),3) AS processing_time FROM Activity AS a JOIN (SELECT machine_id, process_id, timestamp AS endtime FROM Activity WHERE activity_type = 'end' ) AS b ON a.machine_id=b.machine_id AND a.process_id = b.process_id WHERE a.activity_type = 'start' GROUP BY a.machine_id ORDER BY a.machine_id
SELECT a.machine_id, ROUND(AVG(b.timestamp - a.timestamp),3) AS processing_time FROM Activity a JOIN Activity b ON a.machine_id = b.machine_id AND a.process_id = b.process_id AND a.activity_type <> b.activity_type WHERE a.activity_type = 'start' GROUP BY a.machine_id
SELECT a.machine_id, round(avg(b.timestamp-a.timestamp),3) AS processing_time FROM Activity a join Activity b ON a.machine_id = b.machine_id AND a.process_id = b.process_id AND a.activity_type='start' AND b.activity_type='end' GROUP BY 1
SELECT a.machine_id,ROUND(AVG(b.timestamp - a.timestamp),3) as processing_time FROM Activity a LEFT JOIN Activity b ON a.machine_id=b.machine_id AND a.process_id = b.process_id WHERE a.activity_type = 'start' AND b.activity_type = 'end' GROUP BY 1
SELECT a.machine_id,ROUND(SUM(a.end_time-a.start_time)/COUNT(a.process_id),3) AS processing_time FROM (SELECT machine_id,process_id, MAX(CASE WHEN activity_type = "start" THEN timestamp END) AS start_time, MAX(CASE WHEN activity_type = "end" THEN timestamp END) AS end_time FROM Activity GROUP BY machine_id,process_id) a GROUP BY a.machine_id
SELECT a1.machine_id, (round(avg(a2.timestamp - a1.timestamp), 3)) as processing_time FROM Activity a1, Activity a2 WHERE a1.machine_id = a2.machine_id and a1.process_id = a2.process_id and a1.activity_type = 'start' and a2.activity_type = 'end' GROUP BY a1.machine_id
SELECT a1.machine_id, ROUND((AVG(a2.timestamp - a1.timestamp)),3) AS processing_time FROM Activity a1 JOIN Activity a2 ON a1.machine_id = a2.machine_id AND a1.process_id = a2.process_id WHERE a2.activity_type = 'end' AND a1.activity_type = 'start' GROUP BY a1.machine_id
SELECT a1.machine_id, ROUND(AVG(a2.timestamp - a1.timestamp),3) AS processing_time FROM Activity a1 JOIN Activity a2 ON a1.machine_id = a2.machine_id AND a1.process_id = a2.process_id WHERE a1.activity_type = 'start' AND a2.activity_type = 'end' GROUP BY a1.machine_id
SELECT a1.machine_id, ROUND(AVG(a2.timestamp - a1.timestamp),3) as processing_time FROM Activity a1 JOIN Activity a2 WHERE a1.machine_id = a2.machine_id AND a1.process_id = a2.process_id AND a1.activity_type = "start" AND a2.activity_type = "end" GROUP BY machine_id
SELECT counted.machine_id, ROUND(sum(counted.diff)/count(*), 3) as processing_time from (SELECT a.machine_id, a.process_id, a.activity_type,(b.timestamp - a.timestamp) as diff FROM Activity a, Activity b where(a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end')) counted GROUP by machine_id
SELECT distinct machine_id, round(sum(case when activity_type='end' then timestamp else -timestamp end) /count(distinct(process_id)),3) as processing_time FROM Activity GROUP BY machine_id
SELECT machine_id, ROUND( (SUM(CASE WHEN activity_type = 'end' then timestamp end) - SUM(CASE WHEN activity_type = 'start' then timestamp end)) / COUNT(DISTINCT process_id) ,3) as 'processing_time' FROM Activity GROUP BY machine_id
SELECT machine_id, ROUND( (SUM(CASE WHEN activity_type='end' THEN timestamp END)- SUM(CASE WHEN activity_type='start' THEN timestamp END))/ COUNT(DISTINCT process_id),3) AS processing_time FROM Activity GROUP BY machine_id
SELECT machine_id, ROUND( AVG(time), 3 ) as processing_time FROM( SELECT machine_id, process_id, SUM(IF(activity_type='start', -timestamp, timestamp)) as time FROM activity GROUP BY machine_id, process_id )a GROUP BY machine_id
SELECT machine_id, ROUND((SUM(CASE WHEN activity_type = "end" THEN timestamp ELSE -timestamp END)/COUNT(DISTINCT process_id)),3) as processing_time FROM Activity GROUP BY 1
SELECT machine_id, ROUND((SUM(CASE WHEN activity_type = 'start' THEN (-1)*timestamp ELSE timestamp END)/((COUNT(process_id))/2)),3) AS processing_time FROM Activity A1 GROUP BY machine_id
SELECT machine_id, ROUND((SUM(CASE WHEN activity_type="end" THEN timestamp END) - SUM(CASE WHEN activity_type="start" THEN timestamp END))/COUNT(DISTINCT process_id),3) AS processing_time FROM Activity GROUP BY machine_id
SELECT machine_id, ROUND(AVG(diff), 3) as processing_time FROM (SELECT machine_id, process_id, (MAX(timestamp) - MIN(timestamp)) as diff FROM Activity a GROUP BY machine_id, process_id) t GROUP BY machine_id
SELECT machine_id, ROUND(AVG(dur),3) processing_time FROM (SELECT a1.machine_id, a1.process_id, a2.timestamp-a1.timestamp dur FROM Activity a1 JOIN Activity a2 WHERE a1.activity_type != a2.activity_type and a1.machine_id = a2.machine_id and a1.process_id = a2.process_id) a3 WHERE a3.dur > 0 GROUP BY 1
SELECT machine_id, ROUND(AVG(duration), 3) AS processing_time FROM ( SELECT machine_id, process_id, SUM(CASE WHEN activity_type = 'start' THEN 0 - timestamp ELSE timestamp END) AS duration FROM Activity GROUP BY machine_id, process_id ) t GROUP BY machine_id
SELECT machine_id, ROUND(AVG(duration),3) AS processing_time FROM ( SELECT machine_id, process_id, SUM(CASE WHEN activity_type = 'end' THEN timestamp ELSE NULL END) - SUM(CASE WHEN activity_type = 'start' THEN timestamp ELSE NULL END) AS duration FROM activity GROUP BY machine_id, process_id ) t GROUP BY 1
SELECT machine_id, ROUND(AVG(process_time), 3) AS processing_time FROM ( SELECT machine_id, process_id, SUM(CASE WHEN activity_type = 'end' THEN timestamp ELSE -timestamp END) AS process_time FROM activity GROUP BY 1, 2 ) t GROUP BY 1
SELECT machine_id, ROUND(AVG(processing_time), 3) AS processing_time FROM ( SELECT machine_id, MAX(timestamp) - MIN(timestamp) AS processing_time FROM Activity GROUP BY machine_id, process_id ) AS T GROUP BY machine_id
SELECT machine_id, ROUND(AVG(runtime),3) AS processing_time FROM ( SELECT machine_id, process_id, Round(MAX(timestamp)- MIN(timestamp),3) AS runtime FROM Activity GROUP BY 1,2 )tbl GROUP BY 1
SELECT machine_id, ROUND(AVG(t), 3) as processing_time FROM (SELECT machine_id, process_id, last_value(timestamp) OVER w - FIRST_VALUE(timestamp) OVER w as t FROM Activity WINDOW w AS (PARTITION BY machine_id, process_id ORDER BY activity_type)) b GROUP BY machine_id
SELECT machine_id, ROUND(SUM(CASE WHEN activity_type = "end" THEN timestamp ELSE -timestamp END)/COUNT(DISTINCT process_id), 3) AS processing_time FROM Activity GROUP BY 1
SELECT machine_id, ROUND(SUM(CASE WHEN activity_type = "end" THEN timestamp ELSE -timestamp END)/COUNT(DISTINCT process_id), 3) AS processing_time FROM Activity GROUP BY machine_Id
SELECT machine_id, ROUND(SUM(CASE WHEN activity_type = "end" THEN timestamp ELSE -timestamp END)/COUNT(DISTINCT process_id), 3) AS processing_time FROM Activity GROUP BY machine_id ORDER BY machine_id
SELECT machine_id, ROUND(SUM(CASE WHEN activity_type = 'end' THEN timestamp ELSE -timestamp END) / COUNT(DISTINCT process_id),3)AS processing_time FROM Activity GROUP BY 1
SELECT machine_id, ROUND(SUM(CASE WHEN activity_type = 'end' THEN timestamp ELSE 0 END - CASE WHEN activity_type = 'start' THEN timestamp ELSE 0 END)/COUNT(DISTINCT process_id), 3) AS processing_time FROM activity GROUP BY machine_id
SELECT machine_id, ROUND(SUM(CASE WHEN activity_type = 'end' then timestamp ELSE -timestamp END) / (COUNT(process_id)/2),3) as processing_time FROM Activity GROUP BY 1
SELECT machine_id, ROUND(SUM(CASE WHEN activity_type = 'start' THEN -timestamp WHEN activity_type = 'end' THEN timestamp ELSE 0 END) / COUNT(DISTINCT process_id), 3) AS processing_time FROM Activity GROUP BY 1
SELECT machine_id, ROUND(SUM(CASE WHEN activity_type='end' THEN timestamp ELSE -1*timestamp END)/ COUNT(DISTINCT(process_id)),3) AS processing_time FROM Activity GROUP BY machine_id
SELECT machine_id, ROUND(SUM(IF(activity_type='start', -timestamp, timestamp)) / COUNT(DISTINCT(process_id)), 3) AS processing_time FROM Activity GROUP BY machine_id ORDER BY machine_id
SELECT machine_id, ROUND(avg(diff),3) as processing_time FROM ( SELECT a.machine_id, (a.timestamp - b.timestamp) as diff FROM Activity a, Activity b WHERE a.machine_id = b.machine_id AND a.process_id = b.process_id AND a.activity_type = 'end' AND b.activity_type = 'start' ) tmp GROUP BY machine_id ORDER BY machine_id
SELECT machine_id, round(SUM(end_time - start_time) / COUNT(DISTINCT process_id), 3) as processing_time FROM (SELECT machine_id, process_id, timestamp as start_time, LAG(timestamp, 1) OVER (PARTITION BY machine_id, process_id ORDER BY activity_type DESC) as end_time FROM Activity) A GROUP BY machine_id
SELECT s.machine_id, ROUND(AVG(e.timestamp - s.timestamp), 3) as processing_time FROM (SELECT machine_id, process_id, timestamp FROM Activity WHERE activity_type = 'start') as S JOIN (SELECT machine_id, process_id, timestamp FROM Activity WHERE activity_type = 'end') as E ON S.machine_id = E.machine_id AND S.process_id = E.process_id GROUP BY machine_id
SELECT s.machine_id, ROUND(AVG(e.timestamp - s.timestamp), 3) as processing_time FROM Activity s JOIN Activity e ON s.machine_id = e.machine_id AND s.process_id = e.process_id AND s.activity_type = 'start' AND e.activity_type = 'end' GROUP BY machine_id
SELECT s.machine_id, ROUND(AVG(e.timestamp-s.timestamp), 3) AS processing_time FROM Activity s JOIN Activity e ON s.machine_id = e.machine_id AND s.process_id = e.process_id AND s.activity_type = 'start' AND e.activity_type = 'end' GROUP BY s.machine_id
SELECT s.machine_id, ROUND(AVG(e.timestamp-s.timestamp), 3) AS processing_time FROM Activity s JOIN Activity e ON s.machine_id = e.machine_id and s.process_id=e.process_id and s.activity_type='start' and e.activity_type='end' group by machine_id
SELECT s.machine_id, ROUND(AVG(e.timestamp-s.timestamp),3) AS processing_time FROM ( SELECT * FROM activity WHERE activity_type = 'start' ) AS s INNER JOIN ( SELECT * FROM activity WHERE activity_type = 'end' )AS e ON s.machine_id = e.machine_id AND s.process_id = e.process_id GROUP BY s.machine_id
SELECT s.machine_id, round(AVG(e.timestamp - s.timestamp), 3) AS processing_time FROM Activity s JOIN Activity e ON s.machine_id = e.machine_id AND s.process_id = e.process_id AND s.activity_type = 'start' AND e.activity_type = 'end' GROUP BY s.machine_id
SELECT sub1.machine_id, round(sum(sub2.timestamp-sub1.timestamp)/count(*),3) as processing_time FROM Activity sub1 LEFT JOIN Activity sub2 ON sub1.machine_id = sub2.machine_id WHERE sub1.process_id=sub2.process_id and sub1.activity_type = "start" and sub2.activity_type="end" GROUP BY 1
SELECT t1.machine_id, ROUND(AVG(t2.timestamp - t1.timestamp), 3) AS processing_time FROM (SELECT machine_id, process_id, timestamp FROM Activity WHERE activity_type = 'start') t1 JOIN (SELECT machine_id, process_id, timestamp FROM Activity WHERE activity_type = 'end') t2 ON t1.machine_id = t2.machine_id AND t1.process_id = t2.process_id GROUP BY machine_id
SELECT t1.machine_id, ROUND(AVG(t2.timestamp - t1.timestamp), 3) AS processing_time FROM Activity AS t1 INNER JOIN Activity AS t2 ON t1.machine_id = t2.machine_id AND t1.process_id = t2.process_id AND t1.activity_type = 'start' AND t2.activity_type = 'end' GROUP BY t1.machine_id
SELECT t_start.machine_id, round(avg(t_end.timestamp- t_start.timestamp),3) as processing_time FROM Activity as t_start join Activity as t_end on t_start.machine_id = t_end.machine_id and t_start.process_id = t_end.process_id where t_start.activity_type = 'start' and t_end.activity_type = 'end' group by t_start.machine_id
Select a.machine_id, round(avg(a.timestamp - b.timestamp),3) as processing_time From (Select machine_id,process_id, timestamp From Activity Where activity_type = 'end' Group By machine_id,process_id) a join (Select machine_id,process_id, timestamp From Activity Where activity_type = 'start' Group By machine_id,process_id) b on a.machine_id = b.machine_id and a.process_id = b.process_id Group By a.machine_id
Select machine_id as machine_id, round(sum(if(activity_type='start',-1,1)*timestamp)/count(distinct(process_id)),3) as processing_time From Activity Group by machine_id
Select machine_id,ROUND((SUM(strtTime)+SUM(endTime))/count(process_id),3) as processing_time from(Select process_id ,machine_id,SUM(case when activity_type='start' then -1*timestamp end) as strtTime ,SUM(case when activity_type='end' then timestamp end) as endTime from Activity group by process_id ,machine_id) t group by machine_id
Select s.machine_id, ROUND(AVG(e.timestamp-s.timestamp),3) as processing_time from Activity s join Activity e on s.machine_id=e.machine_id AND s.process_id=e.process_id AND s.activity_type='start' AND e.activity_type='end' group by s.machine_id
Select temp.machine_id, round(avg(end-begin), 3) processing_time From(Select A.machine_id, A.timestamp begin, B.timestamp end From Activity A, Activity B Where A.activity_type = "start" and B.activity_type = "end" and A.process_id = B.process_id and A.machine_id = B.machine_id) temp Group by temp.machine_id
WITH CTE AS ( SELECT MACHINE_ID, PROCESS_ID, SUM(CASE WHEN ACTIVITY_TYPE = 'start' THEN TIMESTAMP ELSE NULL END) AS START_TIME, SUM(CASE WHEN ACTIVITY_TYPE = 'end' THEN TIMESTAMP ELSE NULL END) AS END_TIME FROM ACTIVITY GROUP BY MACHINE_ID, PROCESS_ID ) SELECT MACHINE_ID, Round((SUM(END_TIME-START_TIME)/COUNT(PROCESS_ID) ),3) AS PROCESSING_TIME FROM CTE GROUP BY MACHINE_ID
WITH CTE AS ( select a.machine_id, a.timestamp - b.timestamp as 'processing_time' from Activity a left join Activity b on a.machine_id = b.machine_id and a.process_id = b.process_id where a.activity_type <> b.activity_type and a.activity_type = 'end' ) select cte.machine_id, round(avg(cte.processing_time),3) as 'processing_time' from cte group by cte.machine_id order by cte.machine_id ASC
WITH CTE as (SELECT machine_id, process_id, case when activity_type='start' THEN timestamp ELSE NULL END as start_time, case when activity_type='end' THEN timestamp ELSE NULL END as end_time FROM Activity) SELECT machine_id, ROUND((SUM(end_time)-SUM(start_time))/COUNT(distinct process_id),3) AS processing_time FROM CTE GROUP BY 1
WITH Mac_time AS (SELECT machine_id, process_id, SUM(CASE WHEN activity_type = 'start' THEN timestamp END) AS start_time, SUM(CASE WHEN activity_type = 'end' THEN timestamp END) AS end_time FROM Activity GROUP BY 1,2), process_time AS (SELECT machine_id, process_id, (end_time-start_time) AS processing_time FROM Mac_time) SELECT machine_id, ROUND(AVG(processing_time),3) AS processing_time FROM process_time GROUP BY 1
WITH S as ( SELECT machine_id, process_id, timestamp as start_time FROM Activity WHERE activity_type = 'start' ), E as ( SELECT machine_id, process_id, timestamp as end_time FROM Activity WHERE activity_type = 'end' ) SELECT e.machine_id as machine_id, round(SUM(e.end_time - s.start_time)/COUNT(1),3) as processing_time FROM S s INNER JOIN E e ON e.machine_id = s.machine_id AND e.process_id = s.process_id GROUP BY e.machine_id
WITH base_table AS ( SELECT s.machine_id AS machine_id, s.process_id AS process_id, (e_ts - s_ts) AS process_ts FROM (SELECT machine_id, process_id, timestamp AS s_ts FROM Activity WHERE activity_type = "start") AS s LEFT JOIN (SELECT machine_id, process_id, timestamp AS e_ts FROM Activity WHERE activity_type = "end") AS e USING ( machine_id, process_id) GROUP BY 1,2,3 ) SELECT machine_id, ROUND(AVG(process_ts), 3) AS processing_time FROM base_table GROUP BY 1
WITH machine_process AS ( SELECT machine_id, process_id, MAX(timestamp) - MIN(timestamp) AS time_taken FROM activity GROUP BY machine_id, process_id ) SELECT machine_id, ROUND(AVG(time_taken), 3) AS processing_time FROM machine_process GROUP BY machine_id ORDER BY 1
WITH process_times AS (SELECT a1.machine_id, a1.process_id, (a2.timestamp - a1.timestamp) AS process_time FROM Activity a1 INNER JOIN Activity a2 ON a1.machine_id = a2.machine_id AND a1.process_id = a2.process_id AND a1.activity_type = 'start' AND a2.activity_type = 'end') SELECT machine_id, ROUND(AVG(process_time), 3) AS processing_time FROM process_times GROUP BY 1 ORDER BY 1
WITH src AS ( SELECT machine_id, SUM(CASE WHEN activity_type = 'end' THEN timestamp ELSE -timestamp END) processing_time FROM Activity GROUP BY machine_id, process_id) SELECT machine_id, ROUND(AVG(processing_time), 3) processing_time FROM src GROUP BY machine_id ORDER BY machine_id
WITH start_cte AS (SELECT machine_id, process_id, timestamp FROM Activity WHERE 1=1 AND activity_type='start') , end_cte AS (SELECT machine_id, process_id, timestamp FROM Activity WHERE 1=1 AND activity_type='end') SELECT sc.machine_id, round(SUM(ec.timestamp-sc.timestamp)/count(*),3) processing_time FROM start_cte sc, end_cte ec WHERE 1=1 AND sc.machine_id=ec.machine_id AND sc.process_id=ec.process_id GROUP BY sc.machine_id
WITH start_table AS ( SELECT * FROM activity WHERE activity_type = 'start' ), end_table AS ( SELECT * FROM activity WHERE activity_type = 'end' ), temp AS ( SELECT start_table.machine_id, start_table.process_id, start_table.timestamp AS start_time, end_table.timestamp AS end_time FROM start_table JOIN end_table ON start_table.machine_id = end_table.machine_id AND start_table.process_id = end_table.process_id ) SELECT machine_id, ROUND(AVG(end_time - start_time),3) AS processing_time FROM temp GROUP BY machine_id
WITH start_time AS( SELECT machine_id, process_id,timestamp FROM Activity WHERE activity_type = 'start' GROUP BY machine_id, process_id ORDER BY machine_id ), end_time AS( SELECT machine_id, process_id,timestamp FROM Activity WHERE activity_type = 'end' GROUP BY machine_id, process_id ORDER BY machine_id ), duration AS( SELECT s.machine_id, ROUND(e.timestamp - s.timestamp, 3) AS durations FROM start_time s JOIN end_time e ON s.machine_id = e.machine_id AND s.process_id = e.process_id ) SELECT machine_id, ROUND(AVG(durations),3) AS 'processing_time' FROM duration GROUP BY machine_id ORDER BY machine_id
WITH table1 AS (SELECT machine_id, MAX(timestamp) - MIN(timestamp) AS processing_time FROM Activity GROUP BY machine_id, process_id) SELECT machine_id, ROUND(AVG(processing_time),3) AS processing_time FROM table1 GROUP BY machine_id
WITH tbl1 AS( SELECT machine_id , process_id , activity_type , LEAD(timestamp) OVER(PARTITION BY machine_id, process_id ORDER BY activity_type DESC) - timestamp AS duration FROM Activity), tbl2 AS( SELECT * FROM tbl1 WHERE activity_type='end') SELECT machine_id , ROUND(AVG(-1*duration),3) AS processing_time FROM tbl2 GROUP BY machine_id
WITH times as ( SELECT a.machine_id, a.process_id, CASE WHEN activity_type = 'start' THEN timestamp END as start_time, CASE WHEN activity_type = 'end' THEN timestamp END as end_time FROM activity a ), avgs as ( SELECT machine_id, process_id, SUM(end_time) - SUM(start_time) as time_diff FROM times GROUP BY 1,2 ) SELECT machine_id, ROUND(SUM(time_diff) / COUNT(process_id),3) as processing_time FROM avgs GROUP BY 1 ORDER BY 1
sELECT A1.machine_id, ROUND(AVG(A2.timestamp - A1.timestamp),3) AS processing_time FROM Activity AS A1 INNER JOIN Activity AS A2 ON A1.machine_id = A2.machine_id AND A1.process_id = A1.process_id AND A1.activity_type = 'start' AND A2.activity_type = 'end' GROUP BY A1.machine_id
select A1.machine_id, round(avg(A1.timestamp- A2.timestamp),3) as processing_time from Activity A1 join Activity A2 on A1.machine_id = A2.machine_id and A1.process_id = A2.process_id and A1.activity_type = 'end' and A2.activity_type = 'start' group by 1
select a.machine_id as machine_id, ROUND((a.end_timestamp-a.start_timestamp)/a.process_count,3) as processing_time FROM (select machine_id,Count(distinct process_id) as process_count, SUM(case when activity_type = 'start' then timestamp ELSE 0 END ) as start_timestamp, SUM(case when activity_type = 'end' then timestamp ELSE 0 END ) as end_timestamp from Activity GROUP BY machine_id ) a GROUP BY machine_id
select a.machine_id, round(AVG(b.timestamp - a.timestamp), 3) AS processing_time from Activity a join Activity b ON a.machine_id = b.machine_id AND a.process_id = b.process_id AND a.activity_type = 'start' AND b.activity_type = 'end' GROUP BY 1
select a.machine_id, round(avg(a.timestamp-b.timestamp),3) as processing_time from activity a join activity b on a.machine_id = b.machine_id where a.activity_type = 'end' and b.activity_type = 'start' group by a.machine_id
select a.machine_id, round(avg(act_end.timestamp-a.timestamp),3) as processing_time from Activity a left join ( select * from Activity where activity_type='end' ) act_end on a.machine_id=act_end.machine_id and a.process_id=act_end.process_id where a.activity_type='start' group by machine_id
select a.machine_id, round(avg(b.timestamp - a.timestamp), 3) as processing_time from (select * from activity where activity_type = 'start') a join (select * from activity where activity_type = 'end') b on a.machine_id =b.machine_id and a.process_id = b.process_id group by a.machine_id
select a.machine_id, round(avg(b.timestamp - a.timestamp), 3) as processing_time from (select machine_id, process_id, timestamp from Activity where activity_type = 'start' ) a inner join (select machine_id, process_id, timestamp from Activity where activity_type = 'end' ) b on a.machine_id = b.machine_id and a.process_id = b.process_id group by a.machine_id
select a.machine_id, round(avg(b.timestamp - a.timestamp), 3) as processing_time from Activity a inner join Activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end' group by machine_id
select a.machine_id, round(avg(b.timestamp - a.timestamp), 3) as processing_time from Activity a join Activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end' group by a.machine_id
select a.machine_id, round(avg(b.timestamp - a.timestamp), 3) as processing_time from activity a inner join activity b on a.machine_id = b.machine_id and a.process_id = b.process_id WHERE a.activity_type = 'start' and b.activity_type = 'end' group by 1
select a.machine_id, round(avg(b.timestamp - a.timestamp), 3) as processing_time from activity a join activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end' group by 1
select a.machine_id, round(avg(b.timestamp - a.timestamp), 3) as processing_time from activity a join activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end' group by machine_id
select a.machine_id, round(avg(b.timestamp - a.timestamp),3) as processing_time from activity a join activity b on ( a.machine_id = b.machine_id and a.process_id = b.process_id) where a.activity_type = 'start' and b.activity_type = 'end' group by machine_id
select a.machine_id, round(avg(b.timestamp -a.timestamp),3) as processing_time from Activity a join Activity b on a.machine_id =b.machine_id and a.process_id=b.process_id where a.activity_type ='start' and b.activity_type ='end' group by a.machine_id order by machine_id asc
select a.machine_id, round(avg(b.timestamp-a.timestamp),3) as processing_time from (select * from activity where activity_type='start')a join (select * from activity where activity_type='end')b on a.machine_id=b.machine_id and a.process_id=b.process_id group by 1
select a.machine_id, round(avg(b.timestamp-a.timestamp),3) as processing_time from Activity a join Activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end' group by 1
select a.machine_id, round(avg(b.timestamp-a.timestamp),3) as processing_time from activity a join activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and (a.activity_type = "start" and b.activity_type = "end") group by machine_id
select a.machine_id, round(avg(b.timestamp-a.timestamp),3) as processing_time from activity a join activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = "start" and b.activity_type = "end" group by a.machine_id
select a.machine_id, round(avg(b.timestamp-a.timestamp),3) as processing_time from activity a join activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end' group by a.machine_id
select a.machine_id, round(avg(b.timestamp-a.timestamp),3) as processing_time from activity a join activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type='end' group by a.machine_id
select a.machine_id, round(avg(b.timestamp-a.timestamp),3) processing_time from activity a, activity b where a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end' group by a.machine_id
select a.machine_id, round(avg(b.timestamp-a.timestamp),3)as processing_time from Activity a inner join Activity b on a. machine_id=b.machine_id where a. activity_type != b.activity_type and a.machine_id=b.machine_id and a.process_id=b.process_id and b.timestamp>a.timestamp group by a.machine_id
select a.machine_id, round(sum(proctime)/count(machine_id),3) as processing_time from ( select machine_id,process_id, max(timestamp) - min(timestamp) as proctime from Activity group by 1,2) a group by a.machine_id
select a.machine_id,round(sum(b.end-a.start)/count(b.end-a.start),3) as 'processing_time' from (select machine_id,process_id, timestamp as 'start' from Activity where activity_type ='start') a inner join (select machine_id,process_id, timestamp as 'end' from Activity where activity_type ='end') b on a.machine_id=b.machine_id and a.process_id=b.process_id group by a.machine_id
select a1.machine_id, ROUND(AVG(abs(a1.timestamp - a2.timestamp)),3) as processing_time from Activity a1 inner join Activity a2 on a1.machine_id = a2.machine_id and a1.process_id = a2.process_id and a1.activity_type <> a2.activity_type group by 1
select a1.machine_id, Round(AVG(a2.timestamp - a1.timestamp),3)as processing_time from activity a1 left join activity a2 on a1.machine_id = a2.machine_id and a1.process_id = a2.process_id where a1.activity_type != a2.activity_type and a1.activity_type = 'start' group by a1.machine_id
select a1.machine_id, round(avg(a1.timestamp-a2.timestamp),3) as processing_time from activity as a1 join activity as a2 on a1.machine_id=a2.machine_id and a1.process_id=a2.process_id and a2.activity_type = 'start' and a1.activity_type = 'end' group by a1.machine_id
select a1.machine_id, round(avg(a2.timestamp - a1.timestamp), 3) as processing_time from Activity a1 join Activity a2 on a1.machine_id = a2.machine_id and a1.process_id = a2.process_id where a1.activity_type = 'start' and a2.activity_type = 'end' group by a1.machine_id
select a1.machine_id, round(avg(a2.timestamp - a1.timestamp), 3) processing_time from activity a1 inner join activity a2 on a1.machine_id = a2.machine_id and a1.process_id = a2.process_id and a1.activity_type = 'start' and a2.activity_type = 'end' group by a1.machine_id
select a1.machine_id, round(avg(a2.timestamp -a1.timestamp),3) as processing_time from Activity a1 join Activity a2 on a1.machine_id = a2.machine_id and a1.process_id = a2.process_id and a1.activity_type ='start' and a2.activity_type ='end' group by a1.machine_id
select a1.machine_id, round(avg(a2.timestamp-a1.timestamp),3) as processing_time from Activity a1, Activity a2 where a1.activity_type = "start" and a2.activity_type = "end" and a1.machine_id = a2.machine_id and a1.process_id = a2. process_id group by a1.machine_id
select a1.machine_id, round(avg(a2.timestamp-a1.timestamp),3) as processing_time from Activity as a1 join Activity as a2 on (a1.machine_id = a2.machine_id) and (a1.process_id = a2.process_id) and (a2.timestamp > a1.timestamp) group by machine_id
select a1.machine_id,round(avg(a2.timestamp-a1.timestamp),3) as processing_time from Activity a1 join Activity a2 on a1.machine_id=a2.machine_id and a1.process_id=a2.process_id where a1.activity_type='start' and a2.activity_type='end' group by a1.machine_id
select activity_start.machine_id ,round(avg(activity_end.timestamp - activity_start.timestamp), 3) processing_time from Activity activity_start inner join Activity activity_end on activity_start.machine_id = activity_end.machine_id and activity_start.process_id = activity_end.process_id and activity_start.activity_type = 'start' and activity_end.activity_type = 'end' group by activity_start.machine_id
select b.machine_id, round(avg(a.timestamp - b.timestamp), 3) as processing_time from activity b join activity a on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'end' and b.activity_type = 'start' group by a.machine_id
select distinct a.machine_id, round(avg(b.timestamp-a.timestamp),3) as processing_time from Activity a join Activity b on a.machine_id=b.machine_id and a.activity_type='start' and b.Activity_type='end' group by a.machine_id
select distinct machine_id, round(sum(if(activity_type = 'start', -timestamp, timestamp)) / count(distinct process_id), 3) as processing_time from Activity group by machine_id
select machine_id , ROUND(avg(diff_time),3) as processing_time FROM ( select machine_id , process_id , SUM(CASE WHEN activity_type = 'end' then timestamp else 0 end) - SUM(CASE WHEN activity_type = 'start' then timestamp else 0 end) as diff_time from activity group by 1 ,2 ) AGG group by 1
select machine_id , round(2*avg(if(activity_type='end', timestamp, -1* timestamp)), 3) as processing_time from Activity group by machine_id
select machine_id , round(avg(duration),3) as processing_time from ( select s.machine_id , s.process_id , sum(case when e.activity_type = 'end' then e.timestamp end - case when s.activity_type = 'start' then s.timestamp end) as duration from activity s join activity e on s.machine_id = e.machine_id and s.process_id = e.process_id group by 1,2 ) a group by 1 order by 1
select machine_id , round(avg(endt-startt),3) as processing_time from (select distinct machine_id ,process_id , sum(case when activity_type = 'start' then timestamp end) as startt , sum(case when activity_type = 'end' then timestamp end) as endt from Activity group by 1,2) t1 group by 1
select machine_id , round(avg(processing_time),3) as processing_time from ( select machine_id , process_id , avg(case when activity_type = 'end' then timestamp else null end) - avg(case when activity_type = 'start' then timestamp else null end) as processing_time from Activity group by machine_id , process_id ) x group by machine_id
select machine_id , round(sum(if(activity_type = 'start', -1, 1) *timestamp)/count(distinct process_id),3) as processing_time from activity group by machine_id
select machine_id, ROUND((SUM(CASE WHEN activity_type = 'end' then timestamp else 0 end) - SUM(CASE WHEN activity_type = 'start' then timestamp else 0 end)) / count(distinct process_id),3) as processing_time from Activity group by 1
select machine_id, ROUND(AVG((case when activity_type="start" then -1 else 1 end)*timestamp)*2, 3) as processing_time from Activity A group by machine_id
select machine_id, ROUND(AVG(time),3) processing_time from ( select machine_id, MAX(timestamp)-MIN(timestamp) time from Activity group by machine_id, process_id ) mp group by 1
select machine_id, ROUND(avg(diff_time),3) as processing_time from ( select machine_id, process_id, sum(case when activity_type = 'end' then timestamp else 0 end) - sum(case when activity_type = 'start' then timestamp else 0 end) as diff_time from activity group by 1 ,2 ) AGG group by 1
select machine_id, Round(sum(if(activity_type='start',-timestamp,timestamp))/count(distinct process_id),3) as processing_time from activity group by machine_id
select machine_id, ifnull(round(avg(processing_time),3),0)as processing_time from ( select a1.machine_id, a1.process_id, a1.timestamp - a2.timestamp as processing_time from (Select * from Activity where activity_type = 'end') a1 left join (Select * from Activity where activity_type = 'start') a2 on a1.machine_id = a2.machine_id and a1.process_id = a2.process_id ) c group by 1
select machine_id, round( ( sum(case when activity_type = 'end' then timestamp else 0 end) - sum(case when activity_type = 'start' then timestamp else 0 end) )/count(distinct process_id), 3) as processing_time from Activity group by 1 order by 1
select machine_id, round(((sum(case when activity_type='end' then timestamp else 0 end)- sum(case when activity_type='start' then timestamp else 0 end))/count(distinct process_id)),3) as processing_time from activity group by machine_id
select machine_id, round((sum(case when activity_type = "end" then timestamp end)-sum(case when activity_type = "start" then timestamp end))/count(distinct(process_id)),3) as processing_time from Activity group by machine_id
select machine_id, round((sum(case when activity_type = 'end' then timestamp else 0 end) - sum(case when activity_type = 'start' then timestamp else 0 end)) / count(distinct(process_id)),3) as 'processing_time' from Activity group by machine_id
select machine_id, round((sum(case when activity_type = 'end' then timestamp end) - sum(case when activity_type = 'start' then timestamp end)) / count(distinct process_id), 3) as processing_time from Activity group by machine_id
select machine_id, round((sum(if(activity_type = "end",timestamp,-timestamp)))/count(distinct process_id),3) processing_time from Activity group by machine_id
select machine_id, round((sum(if(activity_type = 'end', timestamp, 0)) - sum(if(activity_type = 'start', timestamp, 0))) / count(distinct process_id), 3) as processing_time from Activity group by 1
select machine_id, round((sum(if(activity_type="end",timestamp,null))-sum(if(activity_type="start",timestamp,null)))/count(if(activity_type="end",1,null)),3) as processing_time from activity group by machine_id
select machine_id, round(2*sum(case when activity_type = 'start' then -1*timestamp else timestamp end)/count(process_id),3) as processing_time from Activity group by machine_id
select machine_id, round(avg( case when activity_type = 'start' then -timestamp when activity_type = 'end' then timestamp end )*2, 3) as processing_time from Activity group by machine_id
select machine_id, round(avg(case when activity_type = "start" then 0-timestamp else timestamp end)*2 ,3) as processing_time from Activity group by 1
select machine_id, round(avg(case when activity_type = 'start' then -1*timestamp else timestamp end)*2, 3) processing_time from activity group by machine_id
select machine_id, round(avg(case when activity_type= 'start' then -timestamp else timestamp end)*2,3) as processing_time from Activity group by 1
select machine_id, round(avg(dur), 3) processing_time from ( select machine_id, (timestamp - lead(timestamp, 1) over(partition by machine_id, process_id order by activity_type desc)) dur from activity ) t where dur is not null group by machine_id
select machine_id, round(avg(duration),3) as processing_time from (select machine_id, process_id, sum(case when activity_type='end' then timestamp end) - sum(case when activity_type='start' then timestamp end) as duration from Activity group by machine_id, process_id) as tbl group by machine_id
select machine_id, round(avg(end_time - start_time),3) as processing_time from (select a1.machine_id as machine_id, a1.process_id as process_id, a1.timestamp as start_time, a2.timestamp as end_time from Activity a1 join Activity a2 on a1.activity_type = 'start' and a2.activity_type = 'end' and a1.machine_id = a2.machine_id and a1.process_id = a2.process_id group by a1.machine_id,a1.process_id) t group by machine_id
select machine_id, round(avg(end_ts - start_ts),3) processing_time from ( select machine_id,lead(timestamp,1)over(partition by machine_id,process_id order by activity_type) end_ts, timestamp start_ts from Activity) a group by machine_id
select machine_id, round(avg(processing),3) as processing_time from (select machine_id, process_id, activity_type, timestamp - lag(timestamp,1,null) over (partition by machine_id,process_id order by timestamp asc) as processing from Activity) as a where activity_type='end' group by 1
select machine_id, round(avg(processing_time),3) as processing_time from( select a.machine_id, a.process_id, end_time-start_time as processing_time from (select machine_id, process_id, timestamp as start_time from Activity where activity_type ='start') a join (select machine_id, process_id, timestamp as end_time from Activity where activity_type ='end') b on a.machine_id = b.machine_id and a.process_id =b.process_id )c group by machine_id
select machine_id, round(avg(total), 3) as processing_time from (select machine_id, process_id, timestamp - lag(timestamp) over(partition by process_id, machine_id order by activity_type) as total from Activity) d group by machine_id
select machine_id, round(avg(tp),3) as processing_time from (select a.machine_id, a.timestamp-b.timestamp as tp from Activity a join Activity b where a.machine_id= b.machine_id and a.process_id=b.process_id and a.activity_type='end' and b.activity_type='start') t group by machine_id
select machine_id, round(sum(case when activity_type = 'end' then timestamp else -timestamp end) / count(distinct process_id), 3) as processing_time from activity group by machine_id
select machine_id, round(sum(case when activity_type = 'start' then -1*timestamp else timestamp end)/count(distinct process_id), 3) processing_time from activity group by machine_id
select machine_id, round(sum(case when activity_type = 'start' then -1*timestamp else timestamp end)/count(distinct process_id),3) as processing_time from activity group by 1 order by 1
select machine_id, round(sum(case when activity_type = 'start' then -timestamp else timestamp end) / count(distinct process_id), 3) as processing_time from activity group by machine_id
select machine_id, round(sum(case when activity_type = 'start' then -timestamp when activity_type = 'end' then timestamp end)/cast(count(distinct process_id) as float), 3) processing_time from activity group by machine_id
select machine_id, round(sum(case when activity_type="start" then -1*timestamp else timestamp end)/count(distinct process_id),3) as processing_time from activity group by machine_id
select machine_id, round(sum(case when activity_type='end' then timestamp else -timestamp end)/count(distinct process_id),3) as processing_time from Activity group by machine_id
select machine_id, round(sum(case when activity_type='start' then -1*timestamp else timestamp end)/count(distinct process_id),3) as processing_time from Activity group by machine_id
select machine_id, round(sum(case when activity_type='start' then -timestamp else timestamp end)/count(distinct process_id),3) as processing_time from Activity group by 1
select machine_id, round(sum(end-start)/count(machine_id),3) as processing_time from( select distinct machine_id, process_id, (select timestamp from activity b where b.machine_id=a.machine_id and b.process_id=a.process_id and b.activity_type='start') as start, (select timestamp from activity c where c.machine_id=a.machine_id and c.process_id=a.process_id and c.activity_type='end') as end from activity a)T group by machine_id
select machine_id, round(sum(end_time - start_time) / count(distinct process_id), 3) as processing_time from ( select machine_id, process_id, max(case when activity_type = 'start' then `timestamp` end) as start_time, max(case when activity_type = 'end' then `timestamp` end) as end_time from activity group by machine_id, process_id ) as a group by machine_id
select machine_id, round(sum(end_time-start_time)/count(*),3) as processing_time from (select machine_id, process_id, sum(case when activity_type = 'start' then timestamp else 0 end) as start_time, sum(case when activity_type = 'end' then timestamp else 0 end) as end_time from Activity group by 1,2)a group by 1
select machine_id, round(sum(if(activity_type = 'start', Activity.timestamp * (-1), Activity.timestamp)) / count(distinct process_id), 3) as processing_time from Activity group by machine_id
select machine_id, round(sum(if(activity_type="start", -timestamp, timestamp))/count(distinct process_id),3) as processing_time from Activity group by machine_id
select machine_id, round(sum(if(activity_type="start", -timestamp,timestamp))/count( distinct process_id),3)as processing_time from Activity group by machine_id
select machine_id, round(sum(if(activity_type='start',-timestamp,timestamp))/count(distinct(process_id)),3) as processing_time from activity group by machine_id
select machine_id, round(sum(processing_time)/count(process_id),3) processing_time from ( select distinct a1.machine_id, a1.process_id, a2.timestamp-a1.timestamp processing_time from Activity a1 join Activity a2 on a1.machine_id=a2.machine_id and a1.process_id=a2.process_id where a1.activity_type='start' and a2.activity_type='end' )t group by 1
select machine_id, round(sum(runtime)/count(process_id),3) as processing_time from( select machine_id,process_id, sum(case when activity_type = 'end' then timestamp end) - sum(case when activity_type = 'start' then timestamp end) as runtime from Activity group by 1,2 )tmp group by 1
select machine_id, round(sum(time_diff)/count(*), 3) as processing_time from ( select a.machine_id, a.process_id, b.timestamp - a.timestamp as time_diff from activity a inner join activity b on a.machine_id = b.machine_id and a.process_id = b.process_id and a.activity_type = 'start' and b.activity_type = 'end') c group by machine_id order by machine_id
select machine_id,round(avg(case when activity_type = 'start' then 0-timestamp else timestamp end)*2,3) as processing_time from Activity group by machine_id order by machine_id
select machine_id,round(avg(processing_time),3) as processing_time from ( select machine_id,process_id, max(timestamp)- Min(timestamp) as processing_time from Activity group by machine_id,process_id) as f group by machine_id
select machine_id,round(avg(processing_time),3) as processing_time from( select machine_id,process_id, max(timestamp) - min(timestamp) as processing_time from activity group by 1,2 order by 1,2) sub group by 1 order by 1
select machine_id,round(ifnull((sum(case when activity_type='end' then timestamp else 0 end)-sum(case when activity_type='start' then timestamp else 0 end))/count(distinct process_id),0),3) as processing_time from Activity group by 1 order by 1
select round((sum(case when activity_type = 'end' then timestamp else 0 end) - sum(case when activity_type = 'start' then timestamp else 0 end))/count(distinct process_id),3) as processing_time, machine_id from Activity group by machine_id
select s.machine_id , round(avg(e.timestamp-s.timestamp),3) as processing_time from Activity s join Activity e where s.machine_id = e.machine_id and s.process_id=e.process_id and s.activity_type = 'start' and e.activity_type='end' group by s.machine_id
select s.machine_id, round(avg((e.timestamp - s.timestamp)),3) as processing_time from Activity s join Activity e on s.machine_id=e.machine_id where s.activity_type='start' and e.activity_type='end' and s.process_id=e.process_id group by s.machine_id
select s.machine_id, round(avg(e.timestamp - s.timestamp), 3) as processing_time from activity s join activity e on s.machine_id = e.machine_id and s.process_id = e.process_id and s.activity_type = 'start' and e.activity_type = 'end' group by s.machine_id order by s.machine_id
select s.machine_id, round(avg(e.timestamp - s.timestamp),3) as processing_time from ( select * from activity where activity_type = 'start' ) s inner join ( select * from activity where activity_type = 'end' ) e on s.machine_id = e.machine_id and s.process_id = e.process_id group by s.machine_id
select s.machine_id, round(avg(e.timestamp - s.timestamp),3) as processing_time from Activity s join Activity e on s.machine_id = e.machine_id and s.process_id = e.process_id and s.activity_type='start' and e.activity_type = 'end' group by s.machine_id
select s.machine_id, round(avg(e.timestamp-s.timestamp),3) as processing_time from activity s join activity e on s.machine_id = e.machine_id and s.process_id = e.process_id and s.activity_type='start' and e.activity_type = 'end' group by s.machine_id
select s.machine_id, round(avg(e.timestamp-s.timestamp),3) processing_time from Activity s join Activity e on s.machine_id = e.machine_id and s.process_id = e.process_id and s.activity_type = 'start' and e.activity_type = 'end' group by s.machine_id
select s.machine_id, round(avg(e.timestamp-s.timestamp),3) processing_time from Activity s join Activity e on s.machine_id=e.machine_id and s.process_id = e.process_id and s.activity_type ="start" and e.activity_type="end" group by s.machine_id
select s.machine_id,round(avg(e.timestamp-s.timestamp),3) as processing_time from (select * from activity where activity_type = 'start')s inner join (select * from activity where activity_type = 'end')e on s.machine_id = e.machine_id and s.process_id = e.process_id group by s.machine_id
select s1.machine_id, round(sum(s2.process_time * 1.0/ s1.no_of_process),3) as processing_time from ( select machine_id, count(distinct(process_id)) as no_of_process from activity group by machine_id )s1 inner join ( select a1.machine_id, a1.process_id, a1.timestamp - a2.timestamp as process_time from (select * from activity where activity_type = 'end')a1 inner join (select * from activity where activity_type = 'start') a2 on a1.machine_id = a2.machine_id and a1.process_id = a2.process_id )s2 on s1.machine_id = s2.machine_id group by s1.machine_id
select t1.machine_id as machine_id, round(avg(t2.timestamp - t1.timestamp),3) as processing_time from activity as t1 join activity as t2 on t1.machine_id = t2.machine_id and t1.process_id = t2.process_id and t1.activity_type!=t2.activity_type and t1.activity_type='start' group by t1.machine_id
select t1.machine_id, round(avg(t2.timestamp - t1.timestamp),3) as processing_time from activity t1 join activity t2 on t1.machine_id = t2.machine_id and t1.process_id = t2.process_id where t2.timestamp > t1.timestamp group by t1.machine_id order by t1.machine_id
select t1.machine_id, round(avg(t2.timestamp-t1.timestamp), 3) as processing_time from Activity t1 inner join Activity t2 on t1.machine_id = t2.machine_id and t1.process_id = t2.process_id and t1.activity_type = 'start' and t2.activity_type = 'end' group by t1.machine_id
select t_start.machine_id, round(avg(t_end.timestamp - t_start.timestamp),3) as processing_time from Activity as t_start join Activity as t_end on t_start.machine_id = t_end.machine_id where t_start.activity_type = 'start' and t_end.activity_type = 'end' group by machine_id
select temp.machine_id,round(avg(t),3) as processing_time from ( select a.machine_id,a.process_id, abs(a.timestamp-b.timestamp) as t from activity a join activity b on a.machine_id=b.machine_id and a.process_id=b.process_id and a.activity_type<> b.activity_type group by 1,2 ) temp group by temp.machine_id
with a as (select machine_id, process_id, max(timestamp) - min(timestamp) as duration from Activity group by machine_id, process_id) select machine_id, round(avg(duration), 3) as processing_time from a group by machine_id
with cte as ( select machine_id, process_id, case when activity_type = "start" then -1 * timestamp else timestamp end as time from Activity ) select machine_id, round(sum(time)/count(distinct process_id),3) as processing_time from cte group by machine_id
with cte as ( select machine_id, process_id, max(timestamp)- min(timestamp) duration from activity group by machine_id, process_id ) select machine_id, round(avg(duration),3) as processing_time from cte group by machine_id
with cte as ( select machine_id, sum(case when activity_type='end' then timestamp else 0 end) end1, sum(case when activity_type='start' then timestamp else 0 end) start1 from Activity group by machine_id) select machine_id, round((end1-start1)/(select count(distinct process_id) from activity),3) processing_time from cte group by machine_id
with cte as (select a1.machine_id, a1.process_id, (a2.timestamp - a1.timestamp) as duration from activity as a1 join activity as a2 where a1.machine_id = a2.machine_id and a1.process_id = a2.process_id and a1.activity_type = 'start' and a2.activity_type = 'end' group by a1.machine_id, a1.process_id) select machine_id, round(avg(duration), 3) as processing_time from cte group by machine_id order by machine_id asc
with cte as( select machine_id, count(distinct process_id) as process_cnt, sum(case when activity_type = 'start' then -1*timestamp when activity_type = 'end' then 1*timestamp else null end) as process_time from activity group by machine_id, process_id) select machine_id, round(avg(process_time),3) as processing_time from cte group by machine_id
with cte as( select machine_id, process_id, sum(case when activity_type = 'start' then timestamp*(-1) else timestamp end) as sum_time from Activity group by machine_id, process_id) select machine_id, round(avg(sum_time),3) as processing_time from cte group by machine_id
with cte1 as ( select machine_id , process_id , SUM(CASE WHEN activity_type = 'end' then timestamp else 0 end) - SUM(CASE WHEN activity_type = 'start' then timestamp else 0 end) as diff_time from activity group by 1 ,2 ) select machine_id , ROUND(avg(diff_time),3) as processing_time from cte1 group by 1
with cte_tab as ( select machine_id, process_id, (sum(case when activity_type='end' then timestamp else 0 end)-sum(case when activity_type='start' then timestamp else 0 end)) as processing_time_diff from Activity group by machine_id, process_id ) select machine_id, round(sum(processing_time_diff)/count(1),3) as processing_time from cte_tab group by machine_id
with differences as (select a1.machine_id, (a2.timestamp-a1.timestamp) as timedifference from activity a1 join activity a2 on a1.machine_id = a2.machine_id and a1.process_id = a2.process_id and a1.activity_type='start' and a2.activity_type='end') select machine_id, round(avg(timedifference),3) as processing_time from differences group by 1
with e as (select machine_id, process_id, timestamp as end_time from activity where activity_type = 'end'), s as (select machine_id, process_id, timestamp as start_time from activity where activity_type = 'start') select e.machine_id, round(avg(e.end_time-s.start_time),3) as processing_time from e join s on e.machine_id = s.machine_id and e.process_id = s.process_id group by e.machine_id
with e as (select machine_id, process_id, timestamp as end_time from activity where activity_type = 'end'), s as (select machine_id, process_id, timestamp as start_time from activity where activity_type = 'start') select e.machine_id, round(sum(end_time - start_time)/count(e.process_id),3) as processing_time from e join s on e.machine_id = s.machine_id and e.process_id = s.process_id group by e.machine_id
with mstart as ( select machine_id, process_id, timestamp from Activity where activity_type = "start" ), mend as ( select machine_id, process_id, timestamp from Activity where activity_type = "end" ), time_diff as ( select s.machine_id, s.process_id, e.timestamp - s.timestamp as t_diff from mstart as s join mend as e on s.process_id = e.process_id and s.machine_id = e.machine_id ) select machine_id, round(avg(t_diff), 3) as processing_time from time_diff group by machine_id
with n_process_id as ( select count(distinct process_id) as `count` from activity ) select t1.machine_id, round(sum(t2.timestamp - t1.timestamp) / (select `count` from n_process_id), 3) as processing_time from activity t1 join activity t2 on (t2.machine_id = t1.machine_id and t2.process_id = t1.process_id) where t1.activity_type = 'start' and t2.activity_type = 'end' group by t1.machine_id
with start as (select * from Activity where activity_type = 'start'), end as (select * from Activity where activity_type = 'end') Select s.machine_id, round(avg(e.timestamp - s.timestamp), 3) as processing_time from start s join end e on s.machine_id = e.machine_id and s.process_id = e.process_id group by machine_id
with start_tab as(select machine_id, process_id, timestamp start_time from Activity where activity_type = 'start'), end_tab as (select machine_id, process_id, timestamp end_time from Activity where activity_type = 'end') select end_tab.machine_id, round(avg(end_tab.end_time - start_tab.start_time),3) processing_time from start_tab join end_tab on end_tab.machine_id = start_tab.machine_id and end_tab.process_id = start_tab.process_id group by machine_id
with starttime as (select machine_id, process_id, activity_type, sum(case when activity_type='start' then timestamp else 0 end)as starttime from activity group by machine_id,process_id), endtime as (select machine_id, process_id, activity_type, sum(case when activity_type='end' then timestamp else 0 end)as endtime from activity group by machine_id,process_id) , base as (select s.machine_id, s.process_id, sum(e.endtime-s.starttime) as diff from starttime s inner join endtime e on s.machine_id=e.machine_id and s.process_id=e.process_id group by s.machine_id,s.process_id) select machine_id,avg(av) as processing_time from ( select *,round(avg(diff) over(partition by machine_id ),3) as av from base)t group by machine_id
with t as ( select machine_id,process_id,activity_type, timestamp as sts, lead(timestamp) over(partition by machine_id,process_id order by timestamp) as ets from activity ) select machine_id,cast(avg(ets-sts) as decimal(26,3)) as processing_time from t where activity_type='start' group by 1
with tb as ( select machine_id, process_id, (sum(case when activity_type = 'end' then timestamp else null end) - sum(case when activity_type = 'start' then timestamp else null end)) as time_period from Activity group by machine_id, process_id) select machine_id, round(sum(time_period)/count(time_period), 3) as processing_time from tb group by machine_id
with td as ( select a1.machine_id, a1.process_id, a1.timestamp as start_ts, a2.timestamp as end_ts from activity a1 join activity a2 on a1.machine_id=a2.machine_id and a1.process_id=a2.process_id and a1.activity_type='start' and a2.activity_type='end' ) select machine_id, round(sum(end_ts-start_ts)/count(*),3) as processing_time from td group by machine_id
with temp as ( select machine_id, timestamp, case when activity_type = 'start' then -1 else 1 end as type from Activity ) select machine_id, round(avg(timestamp*type)*2,3) as processing_time from temp group by machine_id
with x as ( select machine_id, process_id, activity_type, timestamp-coalesce(lag(timestamp)over(partition by machine_id,process_id order by activity_type),0) as diff from Activity ) select machine_id, round(avg(diff),3) as processing_time from x where activity_type='end' group by machine_id
with x as (select machine_id, round (sum(total) /count( machine_id),3) as processing_time from (select s.machine_id, s.process_id, abs (s.timestamp - e.timestamp) as total from activity s inner join activity e on s.machine_id = e.machine_id and e.process_id =s.process_id where s.activity_type= 'start' and e.activity_type = 'end') p group by machine_id ) select * from x
