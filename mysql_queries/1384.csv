SELECT a.product_id, b.product_name, a.report_year, a.total_amount FROM ( SELECT product_id, '2018' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2018-12-31'), GREATEST(period_start, '2018-01-01')) + 1) AS total_amount FROM Sales WHERE YEAR(period_start) = 2018 OR YEAR(period_end) = 2018 UNION ALL SELECT product_id, '2019' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01')) + 1) AS total_amount FROM Sales WHERE YEAR(period_start) <= 2019 AND YEAR(period_end) >= 2019 UNION ALL SELECT product_id, '2020' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01')) + 1) AS total_amount FROM Sales WHERE YEAR(period_start) = 2020 OR YEAR(period_end) = 2020 ) a JOIN Product b ON a.product_id = b.product_id ORDER BY a.product_id, a.report_year
SELECT a.product_id, b.product_name, a.report_year, a.total_amount FROM ( SELECT product_id, '2018' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2018-12-31'), GREATEST(period_start, '2018-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)<=2018 AND YEAR(period_end)>=2018 UNION ALL SELECT product_id, '2019' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)<=2019 AND YEAR(period_end)>=2019 UNION ALL SELECT product_id, '2020' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)<=2020 AND YEAR(period_end)>=2020 ) a LEFT JOIN Product b ON a.product_id = b.product_id ORDER BY a.product_id, a.report_year
SELECT a.product_id, b.product_name, a.report_year, a.total_amount FROM ( SELECT product_id, '2018' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2018-12-31'), GREATEST(period_start, '2018-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)<=2018 AND YEAR(period_end)>=2018 UNION ALL SELECT product_id, '2019' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)<=2019 AND YEAR(period_end)>=2019 UNION ALL SELECT product_id, '2020' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)=2020 OR YEAR(period_end)=2020 ) a LEFT JOIN Product b ON a.product_id = b.product_id ORDER BY a.product_id, a.report_year
SELECT a.product_id, b.product_name, a.report_year, a.total_amount FROM ( SELECT product_id, '2018' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2018-12-31'), GREATEST(period_start, '2018-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)=2018 OR YEAR(period_end)=2018 UNION ALL SELECT product_id, '2019' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)<=2019 AND YEAR(period_end)>=2019 UNION ALL SELECT product_id, '2020' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)=2020 OR YEAR(period_end)=2020 ) a JOIN Product b ON a.product_id = b.product_id ORDER BY a.product_id, a.report_year
SELECT a.product_id, b.product_name, a.report_year, a.total_amount FROM ( SELECT product_id, '2018' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2018-12-31'), GREATEST(period_start, '2018-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)=2018 OR YEAR(period_end)=2018 UNION ALL SELECT product_id, '2019' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)<=2019 AND YEAR(period_end)>=2019 UNION ALL SELECT product_id, '2020' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)=2020 OR YEAR(period_end)=2020 ) a LEFT JOIN Product b ON a.product_id = b.product_id ORDER BY a.product_id, a.report_year
SELECT a.product_id, b.product_name, a.report_year, a.total_amount FROM ( SELECT product_id, '2018' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2018-12-31'), GREATEST(period_start, '2018-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)=2018 OR YEAR(period_end)=2018 UNION SELECT product_id, '2019' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)<=2019 AND YEAR(period_end)>=2019 UNION SELECT product_id, '2020' AS report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01'))+1) AS total_amount FROM Sales WHERE YEAR(period_start)=2020 OR YEAR(period_end)=2020 ) a LEFT JOIN Product b ON a.product_id = b.product_id ORDER BY a.product_id, a.report_year
SELECT a.product_id, b.product_name, a.report_year, a.total_amount FROM (select product_id, '2018' as report_year , average_daily_sales * (datediff(least(period_end,'2018-12-31') , greatest(period_start, '2018-01-01'))+1) AS total_amount from Sales where year(period_start) = 2018 or year(period_end) = 2018 union all select product_id, '2019' as report_year , average_daily_sales * (datediff(least(period_end,'2019-12-31') , greatest(period_start, '2019-01-01'))+1) AS total_amount from Sales where year(period_start) <= 2019 and year(period_end) >= 2019 union all select product_id, '2020' as report_year , average_daily_sales * (datediff(least(period_end,'2020-12-31') , greatest(period_start, '2020-01-01'))+1) AS total_amount from Sales where year(period_start) = 2020 or year(period_end) = 2020)a LEFT JOIN Product b ON a.product_id = b.product_id ORDER BY a.product_id, a.report_year
SELECT a.product_id, p.product_name, a.report_year, a.total_amount FROM ( SELECT product_id, '2018' report_year, (DATEDIFF(LEAST('2018-12-31', period_end), GREATEST(period_start, '2018-01-01')) + 1) * average_daily_sales total_amount FROM Sales UNION ALL SELECT product_id, '2019' report_year, (DATEDIFF(LEAST('2019-12-31', period_end), GREATEST(period_start, '2019-01-01')) + 1) * average_daily_sales total_amount FROM Sales UNION ALL SELECT product_id, '2020' report_year, (DATEDIFF(LEAST('2020-12-31', period_end), GREATEST(period_start, '2020-01-01')) + 1) * average_daily_sales total_amount FROM Sales ) a LEFT JOIN Product p ON p.product_id = a.product_id WHERE a.total_amount > 0 ORDER BY a.product_id, a.report_year
SELECT a.product_id, p.product_name, a.report_year, a.total_amount FROM ( SELECT product_id, '2018' report_year, (DATEDIFF(LEAST('2018-12-31', period_end), GREATEST(period_start, '2018-01-01')) + 1) * average_daily_sales total_amount FROM Sales WHERE YEAR(period_start) = 2018 OR YEAR(period_end) = 2018 UNION ALL SELECT product_id, '2019' report_year, (DATEDIFF(LEAST('2019-12-31', period_end), GREATEST(period_start, '2019-01-01')) + 1) * average_daily_sales total_amount FROM Sales WHERE YEAR(period_start) <= 2019 AND YEAR(period_end) >= 2019 UNION ALL SELECT product_id, '2020' report_year, (DATEDIFF(LEAST('2020-12-31', period_end), GREATEST(period_start, '2020-01-01')) + 1) * average_daily_sales total_amount FROM Sales WHERE YEAR(period_start) = 2020 OR YEAR(period_end) = 2020 ) a LEFT JOIN Product p ON p.product_id = a.product_id ORDER BY a.product_id, a.report_year
SELECT product_id, product_name, report_year, total_amount FROM (SELECT product_id, '2018' AS report_year, (DATEDIFF(LEAST(period_end,'2018-12-31'), period_start) + 1) * average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start) = '2018' OR YEAR(period_end) = '2018' UNION SELECT product_id, '2019' AS report_year, (DATEDIFF(LEAST(period_end,'2019-12-31'), GREATEST(period_start,'2019-01-01')) + 1) * average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start) <= '2019' AND YEAR(period_end) >= '2019' UNION SELECT product_id, '2020' AS report_year, (DATEDIFF(period_end, GREATEST(period_start,'2020-01-01')) + 1) * average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start) = '2020' OR YEAR(period_end) = '2020') TEMP JOIN Product USING(product_id) ORDER BY 1,3
SELECT s.product_id AS product_id, product_name AS product_name, CAST(report_year AS CHAR) AS report_year, total_amount AS total_amount FROM ( SELECT product_id, YEAR(period_start) AS report_year, CASE WHEN YEAR(period_end) = YEAR(period_start) THEN (DATEDIFF(period_end, period_start) + 1) * average_daily_sales WHEN YEAR(period_end) - YEAR(period_start) > 0 THEN (DATEDIFF(CONCAT(YEAR(period_start), "-", "12-31"), period_start) + 1) * average_daily_sales END AS total_amount FROM Sales UNION SELECT product_id, YEAR(period_start) + 1 AS report_year, CASE WHEN YEAR(period_end) - YEAR(period_start) = 1 THEN (DATEDIFF(period_end, CONCAT(YEAR(period_end), "-", "01-01")) + 1) * average_daily_sales WHEN YEAR(period_end) - YEAR(period_start) > 1 THEN (DATEDIFF(CONCAT(YEAR(period_start) + 1, "-", "12-31"), CONCAT(YEAR(period_start) + 1, "-", "01-01")) + 1) * average_daily_sales END AS total_amount FROM Sales UNION SELECT product_id, YEAR(period_start) + 2 AS report_year, CASE WHEN YEAR(period_end) - YEAR(period_start) = 2 THEN (DATEDIFF(period_end, CONCAT(YEAR(period_end), "-", "01-01")) + 1) * average_daily_sales END AS total_amount FROM Sales ) AS s, Product AS p WHERE s.product_id = p.product_id AND total_amount IS NOT NULL GROUP BY product_id, report_year ORDER BY product_id, report_year
SELECT s.product_id, p.product_name, report_year, total_amount FROM ( SELECT product_id, '2018' AS report_year, (DATEDIFF(LEAST('2018-12-31', period_end), GREATEST('2018-01-01', period_start)) + 1) * average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start)=2018 OR YEAR(period_end)=2018 UNION ALL SELECT product_id, '2019' AS report_year, (DATEDIFF(LEAST('2019-12-31', period_end), GREATEST('2019-01-01', period_start)) + 1) * average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start)<=2019 AND YEAR(period_end)>=2019 UNION ALL SELECT product_id, '2020' AS report_year, (DATEDIFF(LEAST('2020-12-31', period_end), GREATEST('2020-01-01', period_start)) + 1) * average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start)=2020 OR YEAR(period_end)=2020 ) s JOIN Product p USING(product_id) ORDER BY s.product_id, report_year
SELECT t.product_id, p.product_name, report_year, total_amount FROM ( SELECT product_id, '2018' AS report_year, (DATEDIFF(LEAST(period_end, '2018-12-31'), GREATEST(period_start, '2018-01-01'))+1)*average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start) = 2018 OR YEAR(period_end) = 2018 UNION ALL SELECT product_id, '2019' AS report_year, (DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01'))+1)*average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start) <= 2019 AND YEAR(period_end) >= 2019 UNION ALL SELECT product_id, '2020' AS report_year, (DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01'))+1)*average_daily_sales AS total_amount FROM Sales WHERE YEAR(period_start) = 2020 OR YEAR(period_end) = 2020 ) t JOIN Product p ON t.product_id = p.product_id ORDER BY 1, 3
SELECT temp.product_id, P.product_name, temp.report_year, temp.total_amount FROM (SELECT average_daily_sales*(DATEDIFF(LEAST(period_end, '2018-12-31'),GREATEST(period_start, '2018-01-01')) + 1) AS total_amount, '2018' AS report_year, product_id FROM SALES WHERE period_start <= '2018-12-31' AND period_end >= '2018-01-01' UNION ALL SELECT average_daily_sales*(DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01')) + 1) AS total_amount, '2019' AS report_year, product_id FROM SALES WHERE period_start <= '2019-12-31' AND period_end >= '2019-01-01' UNION ALL SELECT average_daily_sales*(DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01')) + 1) AS total_amount, '2020' AS report_year, product_id FROM SALES WHERE period_start <= '2020-12-31' AND period_end >= '2020-01-01') AS temp LEFT JOIN Product AS P ON P.product_id = temp.product_id ORDER BY temp.product_id, temp.report_year
SELECT temp.product_id,product_name,report_year,total_amount FROM (SELECT product_id,'2018' AS report_year, average_daily_sales*(DATEDIFF(LEAST(period_end,'2018-12-31'),GREATEST(period_start,'2018-01-01'))+1) AS total_amount FROM Sales WHERE period_end>='2018-01-01' AND period_start<='2018-12-31' UNION SELECT product_id,'2019', average_daily_sales*(DATEDIFF(LEAST(period_end,'2019-12-31'),GREATEST(period_start,'2019-01-01'))+1) FROM Sales WHERE period_end>='2019-01-01' AND period_start<='2019-12-31' UNION SELECT product_id,'2020', average_daily_sales*(DATEDIFF(LEAST(period_end,'2020-12-31'),GREATEST(period_start,'2020-01-01'))+1) FROM Sales WHERE period_end>='2020-01-01' AND period_start<='2020-12-31') AS temp INNER JOIN Product ON Product.product_id=temp.product_id ORDER BY temp.product_id,report_year
SELECT temp.product_id,product_name,report_year,total_amount FROM (SELECT product_id,'2018' AS report_year, average_daily_sales*(DATEDIFF(LEAST(period_end,'2018-12-31'),GREATEST(period_start,'2018-01-01'))+1) AS total_amount FROM Sales WHERE period_end>='2018-01-01' AND period_start<='2018-12-31' UNION SELECT product_id,'2019', average_daily_sales*(DATEDIFF(LEAST(period_end,'2019-12-31'),GREATEST(period_start,'2019-01-01'))+1) FROM Sales WHERE period_end>='2019-01-01' AND period_start<='2019-12-31' UNION SELECT product_id,'2020', average_daily_sales*(DATEDIFF(LEAST(period_end,'2020-12-31'),GREATEST(period_start,'2020-01-01'))+1) FROM Sales WHERE period_end>='2020-01-01' AND period_start<='2020-12-31') AS temp INNER JOIN Product USING(product_id) ORDER BY temp.product_id,report_year
SELECT u.product_id product_id, p.product_name product_name, report_year, total_amount FROM ( SELECT product_id, '2018' report_year, (DATEDIFF(LEAST(period_end,'2018-12-31'),period_start)+1)*average_daily_sales total_amount FROM sales WHERE period_start<='2018-12-31' UNION SELECT product_id, '2019' report_year, (DATEDIFF(LEAST(period_end,'2019-12-31'),GREATEST(period_start,'2019-01-01'))+1)*average_daily_sales total_amount FROM sales WHERE period_start<='2019-12-31' UNION SELECT product_id, '2020' report_year, (DATEDIFF(period_end,GREATEST(period_start,'2020-01-01'))+1)*average_daily_sales total_amount FROM sales ) u JOIN product p ON u.product_id=p.product_id WHERE total_amount>0 ORDER BY 1,3
WITH CTE AS ( SELECT product_id, CASE WHEN (period_start BETWEEN '2018-01-01' AND '2018-12-31') AND (period_end BETWEEN '2018-01-01' AND '2018-12-31') THEN DATEDIFF(period_end, period_start)+1 WHEN period_start BETWEEN '2018-01-01' AND '2018-12-31' AND period_end > '2018-12-31' THEN DATEDIFF('2018-12-31',period_start)+1 WHEN period_start < '2018-01-01' AND (period_end BETWEEN '2018-01-01' AND '2018-12-31') THEN DATEDIFF(period_end, '2018-01-01')+1 WHEN period_start < '2018-01-01' AND period_end > '2018-12-31' THEN 365 ELSE 0 END AS year_2018, CASE WHEN (period_start BETWEEN '2019-01-01' AND '2019-12-31') AND (period_end BETWEEN '2019-01-01' AND '2019-12-31') THEN DATEDIFF(period_end, period_start)+1 WHEN period_start BETWEEN '2019-01-01' AND '2019-12-31' AND period_end > '2019-12-31' THEN DATEDIFF('2019-12-31',period_start)+1 WHEN period_start < '2019-01-01' AND (period_end BETWEEN '2019-01-01' AND '2019-12-31') THEN DATEDIFF(period_end, '2019-01-01')+1 WHEN period_start < '2019-01-01' AND period_end > '2019-12-31' THEN 365 ELSE 0 END AS year_2019, CASE WHEN (period_start BETWEEN '2020-01-01' AND '2020-12-31') AND (period_end BETWEEN '2020-01-01' AND '2020-12-31') THEN DATEDIFF(period_end, period_start)+1 WHEN period_start BETWEEN '2020-01-01' AND '2020-12-31' AND period_end > '2020-12-31' THEN DATEDIFF('2020-12-31',period_start)+1 WHEN period_start < '2020-01-01' AND (period_end BETWEEN '2020-01-01' AND '2020-12-31') THEN DATEDIFF(period_end, '2020-01-01')+1 WHEN period_start < '2020-01-01' AND period_end > '2020-12-31' THEN 365 ELSE 0 END AS year_2020, average_daily_sales FROM Sales ), CTE2 AS ( SELECT d1.product_id, d2.product_name, average_daily_sales*year_2018 as total_amount_2018, average_daily_sales*year_2019 as total_amount_2019, average_daily_sales*year_2020 as total_amount_2020 FROM CTE AS d1 JOIN Product AS d2 ON d1.product_id = d2.product_id ) SELECT product_id, product_name, '2018' as report_year, total_amount_2018 as total_amount FROM CTE2 WHERE total_amount_2018 != 0 UNION SELECT product_id, product_name, '2019' as report_year, total_amount_2019 FROM CTE2 WHERE total_amount_2019 != 0 UNION SELECT product_id, product_name, '2020' as report_year, total_amount_2020 FROM CTE2 WHERE total_amount_2020 != 0 ORDER BY 1, 3
WITH CTE1 AS ( SELECT product_id, (CASE WHEN YEAR(period_start) = 2018 THEN CASE WHEN YEAR(period_end) = 2018 THEN DATEDIFF(period_end, period_start)+1 ELSE DATEDIFF('2019-01-01', period_start) END ELSE 0 END) AS yr2018, (CASE WHEN YEAR(period_start) = 2019 AND YEAR(period_end) = 2019 THEN DATEDIFF(period_end, period_start)+1 WHEN YEAR(period_start) = 2018 AND YEAR(period_end) = 2019 THEN DATEDIFF(period_end, '2018-12-31') WHEN YEAR(period_start) = 2018 AND YEAR(period_end) = 2020 THEN 365 WHEN YEAR(period_start) = 2019 AND YEAR(period_end) = 2020 THEN DATEDIFF('2020-01-01', period_start) ELSE 0 END) AS yr2019, (CASE WHEN YEAR(period_start) = 2020 AND YEAR(period_end) = 2020 THEN DATEDIFF(period_end, period_start)+1 WHEN YEAR(period_start) < 2020 AND YEAR(period_end) = 2020 THEN DATEDIFF(period_end, '2019-12-31') ELSE 0 END) AS yr2020, average_daily_sales FROM Sales), CTE2 AS ( SELECT CTE1.product_id, product_name, yr2018, yr2019, yr2020, average_daily_sales FROM CTE1 JOIN Product ON CTE1.product_id = Product.product_id), CTE3 AS ( SELECT product_id, product_name, '2018' AS report_year, SUM(yr2018*average_daily_sales) AS total_amount FROM CTE2 GROUP BY product_id, product_name HAVING total_amount != 0 UNION ALL SELECT product_id, product_name, '2019' AS report_year, SUM(yr2019*average_daily_sales) AS total_amount FROM CTE2 GROUP BY product_id, product_name HAVING total_amount != 0 UNION ALL SELECT product_id, product_name, '2020' AS report_year, SUM(yr2020*average_daily_sales) AS total_amount FROM CTE2 GROUP BY product_id, product_name HAVING total_amount != 0) SELECT * FROM CTE3 ORDER BY product_id, report_year
WITH RECURSIVE CTE AS ( SELECT product_id, average_daily_sales, period_start, period_end FROM Sales UNION ALL SELECT product_id, average_daily_sales, DATE_ADD(period_start, INTERVAL 1 DAY) AS period_start, period_end FROM CTE WHERE period_start < period_end) SELECT c.product_id, p.product_name, DATE_FORMAT(c.period_start, '%Y') AS report_year, COUNT(c.period_start) * c.average_daily_sales AS total_amount FROM CTE AS c JOIN Product AS p ON p.product_id = c.product_id GROUP BY c.product_id, DATE_FORMAT(c.period_start, '%Y') ORDER BY c.product_id, report_year
WITH RECURSIVE CTE AS (SELECT MIN(period_start) as date FROM Sales UNION ALL SELECT DATE_ADD(date, INTERVAL 1 day) FROM CTE WHERE date <= (SELECT MAX(period_end) FROM Sales)) SELECT s.product_id, p.product_name, DATE_FORMAT(e.date, '%Y') as report_year, SUM(s.average_daily_sales) AS total_amount FROM Sales s JOIN Product p ON p.product_id = s.product_id JOIN CTE e ON s.period_start <= e.date AND s.period_end >= e.date GROUP BY 1, 3 ORDER BY 1, 3
WITH RECURSIVE CTE AS (SELECT MIN(period_start) as date FROM Sales UNION ALL SELECT DATE_ADD(date, INTERVAL 1 day) FROM CTE WHERE date <= ALL (SELECT MAX(period_end) FROM Sales)) SELECT s.product_id, p.product_name, LEFT(e.date,4) as report_year, SUM(s.average_daily_sales) as total_amount FROM Sales s JOIN Product p ON p.product_id = s.product_id JOIN CTE e ON s.period_start<=e.date AND s.period_end>=e.date GROUP BY 1,2,3 ORDER BY 1,3
WITH RECURSIVE CTE AS (SELECT MIN(period_start) as date FROM Sales UNION ALL SELECT DATE_ADD(date, INTERVAL 1 day) FROM CTE WHERE date <= ALL (SELECT MAX(period_end) FROM Sales)) select s.product_id, p.product_name, substring((cte.date),1,4) as report_year, sum(s.average_daily_sales) as total_amount from Sales s join cte on s.period_start <= cte.date and s.period_end >= cte.date join Product p on p.product_id = s.product_id group by s.product_id,year(cte.date) order by s.product_id, report_year
WITH RECURSIVE CTE1 as ( SELECT product_id, period_start, period_end, average_daily_sales FROM Sales s UNION ALL SELECT product_id, DATE_ADD(period_start, INTERVAL 1 day) as period_start, period_end, average_daily_sales FROM CTE1 ct WHERE ct.period_start < ct.period_end ) SELECT product_id, product_name, report_year, total_amount FROM ( SELECT c.product_id as product_id, product_name, DATE_FORMAT(period_start,'%Y') as report_year, COUNT(period_start)*average_daily_sales as total_amount FROM CTE1 c LEFT JOIN Product p ON c.product_id = p.product_id GROUP BY product_id, product_name, report_year ) v ORDER BY product_id ASC, report_year ASC
WITH RECURSIVE Cte AS ( SELECT product_id, period_start, period_end, average_daily_sales, YEAR(period_start) AS report_year FROM Sales UNION SELECT Cte.product_id, Sales.period_start, Sales.period_end, Sales.average_daily_sales, Cte.report_year + 1 FROM Cte LEFT JOIN Sales ON Sales.product_id = Cte.product_id WHERE Cte.report_year < YEAR(Sales.period_end) ) SELECT Cte.product_id, product_name, CAST(report_year AS CHAR) AS report_year, (CASE WHEN YEAR(period_start) = YEAR(period_end) THEN DATEDIFF(period_end, period_start) + 1 WHEN YEAR(period_start) = report_year THEN DATEDIFF(DATE(CONCAT(report_year,"-12-31")), period_start) + 1 WHEN YEAR(period_end) = report_year THEN DATEDIFF(period_end, DATE(CONCAT(report_year,"-01-01"))) + 1 ELSE DATEDIFF(DATE(CONCAT(report_year,"-12-31")), DATE(CONCAT(report_year,"-01-01"))) + 1 END) * average_daily_sales AS total_amount FROM Cte LEFT JOIN Product ON Product.product_id = Cte.product_id ORDER BY 1, 3
WITH RECURSIVE TEMP AS (SELECT MIN(YEAR(PERIOD_START)) AS YEAR, MAX(YEAR(PERIOD_END)) AS MYEAR FROM SALES UNION SELECT YEAR+1 , MYEAR FROM TEMP WHERE YEAR <= MYEAR), TEMP2 AS (SELECT S.PRODUCT_ID, CASE WHEN YEAR(S.PERIOD_START) = T.YEAR THEN S.PERIOD_START ELSE CONCAT(T.YEAR,'-01-01') END AS PERIOD_START, CASE WHEN YEAR(S.PERIOD_END) = T.YEAR THEN S.PERIOD_END ELSE CONCAT(T.YEAR,'-12-31') END AS PERIOD_END, S.AVERAGE_DAILY_SALES FROM SALES S, TEMP T WHERE YEAR(S.PERIOD_START) <= T.YEAR AND YEAR(S.PERIOD_END) >= T.YEAR) SELECT CAST(P.PRODUCT_ID AS CHAR) PRODUCT_ID, P.PRODUCT_NAME, CAST(YEAR(T.PERIOD_START) AS CHAR) AS REPORT_YEAR, (DATEDIFF(T.PERIOD_END,T.PERIOD_START)+1)*T.AVERAGE_DAILY_SALES AS TOTAL_AMOUNT FROM PRODUCT P, TEMP2 T WHERE P.PRODUCT_ID = T.PRODUCT_ID ORDER BY 1,3
WITH RECURSIVE cte AS ( SELECT *, CAST(CONCAT(YEAR(period_start),'-01-01') AS date) AS stt, CAST(CONCAT(YEAR(period_start),'-12-31') AS date) AS nd FROM Sales UNION ALL SELECT product_id, period_start,period_end,average_daily_sales, CAST(CONCAT(YEAR(stt)+1,'-01-01') AS date) AS stt, CAST(CONCAT(YEAR(nd)+1,'-12-31') AS date) AS nd FROM cte WHERE YEAR(stt) < YEAR(period_end) AND YEAR(nd) < YEAR(period_end) ) SELECT sub.product_id, product_name, LEFT(start_dt,4) AS report_year, SUM((DATEDIFF(end_dt,start_dt)+1)*average_daily_sales) AS total_amount FROM Product p INNER JOIN ( SELECT product_id, CASE WHEN YEAR(period_start) = YEAR(stt) THEN period_start ELSE stt END AS start_dt, CASE WHEN YEAR(period_end)=YEAR(nd) THEN period_end ELSE nd END AS end_dt, average_daily_sales FROM cte ) sub ON p.product_id = sub.product_id GROUP BY sub.product_id, product_name,LEFT(start_dt,4) ORDER BY product_id, report_year
WITH RECURSIVE cte AS ( SELECT product_id, period_start, period_end, average_daily_sales FROM Sales UNION ALL SELECT product_id, DATE_ADD(period_start, INTERVAL 1 DAY) AS period_start, period_end, average_daily_sales FROM cte WHERE DATE_ADD(period_start, INTERVAL 1 DAY) <= period_end ) SELECT cte. product_id, product_name, DATE_FORMAT(period_start, '%Y') AS report_year, SUM(average_daily_sales) AS total_amount FROM cte INNER JOIN Product p USING (product_id) GROUP BY product_name, report_year ORDER BY product_id, report_year
WITH RECURSIVE cte AS (SELECT MIN(period_start) AS day FROM Sales UNION ALL SELECT DATE_ADD(day, INTERVAL 1 DAY) AS day FROM cte WHERE day <= ALL(SELECT MAX(period_end) FROM Sales)) SELECT s.product_id, p.product_name, LEFT(day, 4) AS report_year, SUM(average_daily_sales) AS total_amount FROM Product p JOIN Sales s ON p.product_id = s.product_id JOIN cte c ON c.day >= s.period_start AND c.day <= s.period_end GROUP BY 1, 2, 3 ORDER BY 1, 3
WITH RECURSIVE cte AS( SELECT product_id, average_daily_sales, period_start, period_end FROM sales UNION ALL SELECT product_id, average_daily_sales, DATE_ADD(period_start, INTERVAL 1 DAY) AS period_start, period_end FROM cte WHERE period_start < period_end ) SELECT c.product_id, p.product_name, DATE_FORMAT(c.period_start, "%Y") AS report_year, COUNT(c.period_start)*c.average_daily_sales AS total_amount FROM cte c JOIN product p ON p.product_id = c.product_id GROUP BY 1,2,3 ORDER BY 1, 3
WITH RECURSIVE cte AS( SELECT product_id, average_daily_sales, period_start, period_end FROM sales UNION ALL SELECT product_id, average_daily_sales, DATE_ADD(period_start, INTERVAL 1 DAY) AS period_start, period_end FROM cte WHERE period_start < period_end ) SELECT c.product_id, p.product_name, DATE_FORMAT(c.period_start, "%Y") AS report_year, COUNT(c.period_start)*c.average_daily_sales AS total_amount FROM cte c JOIN product p ON p.product_id = c.product_id GROUP BY c.product_id, p.product_name, DATE_FORMAT(c.period_start, "%Y") ORDER BY c.product_id,DATE_FORMAT(c.period_start, "%Y")
WITH RECURSIVE cte AS( SELECT product_id, average_daily_sales, period_start, period_end FROM sales UNION ALL SELECT product_id, average_daily_sales, DATE_ADD(period_start, INTERVAL 1 DAY) AS period_start, period_end FROM cte WHERE period_start < period_end ) SELECT c.product_id, p.product_name, DATE_FORMAT(c.period_start, "%Y") AS report_year, COUNT(c.period_start)*c.average_daily_sales AS total_amount FROM cte c JOIN product p ON p.product_id = c.product_id GROUP BY c.product_id, p.product_name, report_year ORDER BY c.product_id, report_year
WITH RECURSIVE dates AS ( SELECT min(period_start) AS min_date, max(period_end) As max_date FROM Sales UNION ALL SELECT DATE_ADD(min_date, INTERVAL 1 DAY), max_date FROM dates WHERe min_date < max_date ) SELECT CONVERT(product_id, char) AS product_id, product_name, CONVERT(report_year, char) AS report_year, sum(average_daily_sales) AS total_amount FROM ( SELECT ina.product_id, ina.product_name, YEAR(inc.min_date) AS report_year, inb.average_daily_sales FROM product AS ina LEFT JOIN Sales AS inb ON ina.product_id = inb.product_id LEFT JOIN dates AS inc ON inc.min_date BETWEEN inb.period_start AND inb.period_end ) AS ind GROUP BY product_id, product_name, report_year ORDER BY product_id, report_year
WITH RECURSIVE report_years AS ( SELECT product_id, YEAR(period_start) AS report_year, period_start AS interval_start, IF(YEAR(period_start) = YEAR(period_end), period_end, STR_TO_DATE(CONCAT(YEAR(period_start), '-12-31'), '%Y-%m-%d')) AS interval_end, period_end, average_daily_sales FROM Sales UNION SELECT product_id, report_year+1, STR_TO_DATE(CONCAT(report_year+1, '-01-01'), '%Y-%m-%d') AS interval_start, IF(report_year+1 = YEAR(period_end), period_end, STR_TO_DATE(CONCAT(report_year+1, '-12-31'), '%Y-%m-%d')) AS interval_end, period_end, average_daily_sales FROM report_years WHERE report_year < YEAR(period_end) ) SELECT r.product_id, p.product_name, CAST(r.report_year AS CHAR) AS report_year, average_daily_sales * (DATEDIFF(r.interval_end, r.interval_start)+1) AS total_amount FROM report_years r LEFT JOIN Product p ON r.product_id = p.product_id ORDER BY r.product_id, r.report_year
WITH RECURSIVE years_table AS ( SELECT * FROM Sales UNION ALL SELECT product_id, DATE_ADD(period_start, INTERVAL 1 DAY), period_end, average_daily_sales FROM years_table WHERE period_start < period_end ) SELECT a.product_id, product_name, DATE_FORMAT(period_start, "%Y") AS report_year, COUNT(*) * average_daily_sales AS total_amount FROM years_table a JOIN Product b ON a.product_id = b.product_id GROUP BY 1, 2, 3 ORDER BY 1, 3
WITH S0 AS (SELECT product_id, period_start, period_end, YEAR(period_start) AS year_start, YEAR(period_end) AS year_end, average_daily_sales FROM Sales), S1 AS (SELECT product_id, year_start AS report_year, (DATEDIFF(period_end, period_start)+1) * average_daily_sales AS total_amount FROM S0 WHERE year_start = year_end), S2 AS (SELECT product_id, "2018" AS report_year, (DATEDIFF("2018-12-31", period_start)+1) * average_daily_sales AS total_amount FROM S0 WHERE year_start + 2 = year_end UNION SELECT product_id, "2019" AS report_year, (DATEDIFF("2019-12-31", "2019-01-01")+1) * average_daily_sales AS total_amount FROM S0 WHERE year_start + 2 = year_end UNION SELECT product_id, "2020" AS report_year, (DATEDIFF(period_END, "2020-01-01")+1) * average_daily_sales AS total_amount FROM S0 WHERE year_start + 2 = year_end), S3 AS (SELECT product_id, year_start AS report_year, (DATEDIFF(CONCAT(year_start,"-12-31"), period_start)+1) * average_daily_sales AS total_amount FROM S0 WHERE year_start + 1 = year_end UNION SELECT product_id, year_end AS report_year, (DATEDIFF(period_end, CONCAT(year_end,"-01-01"))+1) * average_daily_sales AS total_amount FROM S0 WHERE year_start + 1 = year_end), S4 AS (SELECT * FROM S1 UNION SELECT * FROM S2 UNION SELECT * FROM S3) SELECT S4.product_id, product_name, report_year, total_amount FROM S4 INNER JOIN Product ON S4.product_id = Product.product_id ORDER BY product_id ASC, report_year ASC
WITH T1 AS ( SELECT * FROM ( SELECT product_id, '2018' AS year, (DATEDIFF(LEAST('2018-12-31', period_end), GREATEST('2018-01-01', period_start))+1)*average_daily_sales AS total_sales FROM Sales WHERE YEAR(period_start) = 2018 OR YEAR(period_end) = 2018 GROUP BY product_id, year UNION ALL SELECT product_id, '2019' AS year, (DATEDIFF(LEAST('2019-12-31', period_end), GREATEST('2019-01-01', period_start))+1)*average_daily_sales AS total_sales FROM Sales WHERE YEAR(period_start) <= 2019 AND YEAR(period_end) >= 2019 GROUP BY product_id, year UNION ALL SELECT product_id, '2020' AS year, (DATEDIFF(LEAST('2020-12-31', period_end), GREATEST('2020-01-01', period_start))+1)*average_daily_sales AS total_sales FROM Sales WHERE YEAR(period_start) = 2020 OR YEAR(period_end) = 2020 GROUP BY product_id, year ) A ) SELECT T1.product_id, P.product_name, T1.year as report_year, T1.total_sales as total_amount FROM T1 INNER JOIN Product P ON T1.product_id = P.product_id ORDER BY T1.product_id, report_year
WITH a AS ( SELECT product_id, (CASE WHEN YEAR(period_start)=2018 AND YEAR(period_end) = 2018 THEN DATEDIFF(period_end, period_start)+1 WHEN YEAR(period_start) = 2018 AND YEAR(period_end)!=2018 THEN DATEDIFF('2018-12-31', period_start)+1 ELSE 0 END)*average_daily_sales AS day18, (CASE WHEN YEAR(period_start) = 2019 AND YEAR(period_end) = 2019 THEN DATEDIFF(period_end, period_start)+1 WHEN YEAR(period_start) = 2019 AND YEAR(period_end)!=2019 THEN DATEDIFF('2019-12-31', period_start)+1 WHEN YEAR(period_start) = 2018 AND YEAR(period_end) = 2019 THEN DATEDIFF(period_end, '2019-01-01')+1 WHEN YEAR(period_start) = 2018 AND YEAR(period_end) = 2020 THEN DATEDIFF('2019-12-31', '2019-01-01')+1 ELSE 0 END)*average_daily_sales AS day19, (CASE WHEN YEAR(period_start) = 2020 AND Year(period_end) = 2020 THEN DATEDIFF(period_end, period_start)+1 WHEN YEAR(period_start)!=2020 AND YEAR(period_end) = 2020 THEN DATEDIFF(period_end, '2020-01-01')+1 ELSE 0 END)*average_daily_sales AS day20 FROM Sales), b AS ( SELECT product_id, '2018' AS report_year, day18 AS total_amount FROM a WHERE day18!=0 UNION ALL SELECT product_id, '2019', day19 FROM a WHERE day19!=0 UNION ALL SELECT product_id, '2020', day20 FROM a WHERE day20!=0) SELECT b.product_id, Product.product_name, b.report_year, b.total_amount FROM b JOIN Product ON b.product_id = Product.product_id ORDER BY product_id, report_year
WITH c1 AS (SELECT s.product_id ,p.product_name ,(DATEDIFF(LEAST('2018-12-31',s.period_end),GREATEST('2018-01-01',s.period_start)) + 1) * average_daily_sales AS sales_18 ,(DATEDIFF(LEAST('2019-12-31',s.period_end),GREATEST('2019-01-01',s.period_start)) + 1) * average_daily_sales AS sales_19 ,(DATEDIFF(LEAST('2020-12-31',s.period_end),GREATEST('2020-01-01',s.period_start)) + 1) * average_daily_sales AS sales_20 FROM Sales s JOIN Product p ON s.product_id = p.product_id) SELECT product_id ,product_name ,'2018' AS report_year ,sales_18 AS total_amount FROM c1 WHERE sales_18 > 0 UNION ALL SELECT product_id ,product_name ,'2019' AS report_year ,sales_19 AS total_amount FROM c1 WHERE sales_19 > 0 UNION ALL SELECT product_id ,product_name ,'2020' AS report_year ,sales_20 AS total_amount FROM c1 WHERE sales_20 > 0 ORDER BY 1,3
WITH cte1 as (SELECT *, EXTRACT(year from period_start) as year_start, EXTRACT(year from period_end) as year_end, CASE WHEN EXTRACT(year from period_start) = EXTRACT(year from period_end) THEN DATEDIFF(period_end, period_start) + 1 ELSE DATEDIFF(DATE(CONCAT(EXTRACT(year from period_start), "-12-31")), period_start)+1 END as days_year_start, CASE WHEN EXTRACT(year from period_start) = EXTRACT(year from period_end) THEN 0 ELSE DATEDIFF(period_end, DATE(CONCAT(EXTRACT(year from period_end), "-01-01"))) +1 END as days_year_end FROM Sales), cte2 as (SELECT product_id, average_daily_sales, year_start as year, days_year_start as days FROM cte1 UNION ALL SELECT product_id, average_daily_sales, year_end as year, days_year_end as days FROM cte1 UNION ALL select product_id, average_daily_sales, 2019 as year, 365 as days FROM cte1 where year_end-year_start > 1) SELECT a.product_id, b.product_name, CAST(a.year as char) as report_year, sum(a.days * a.average_daily_sales) as total_amount FROM cte2 as a LEFT JOIN product as b ON a.product_id = b.product_id GROUP BY a.product_id, b.product_name, a.year ORDER BY product_id, report_year
WITH eighteen AS ( SELECT product_id, period_start, period_end, DATEDIFF(period_end, period_start) +1 AS total_days, average_daily_sales FROM ( SELECT product_id, period_start, CASE WHEN period_end >'2018-12-31' THEN '2018-12-31' ELSE period_end END AS period_end, average_daily_sales FROM Sales WHERE period_start between '2018-01-01' AND '2018-12-31' )X) , nighteen AS ( SELECT product_id, period_start, period_end, DATEDIFF(period_end, period_start) +1 AS total_days, average_daily_sales FROM ( SELECT product_id, CASE WHEN period_start <'2019-01-01' THEN '2019-01-01' ELSE period_start END AS period_start, CASE WHEN period_end > '2019-12-31' THEN '2019-12-31' ELSE period_end END AS period_end, average_daily_sales FROM (SELECT * FROM Sales WHERE period_start <'2019-12-31' AND period_end >= '2019-01-01' )A ) AA ), twenty As ( SELECT product_id, period_start, period_end, DATEDIFF(period_end, period_start) +1 AS total_days, average_daily_sales FROM ( SELECT product_id, CASE WHEN period_start <'2020-01-01' THEN '2020-01-01' ELSE period_start END AS period_start, period_end, average_daily_sales FROM ( SELECT * FROM Sales WHERE period_start < '2020-12-31' AND period_end >= '2020-01-01')B )BB) SELECT c.product_id, p.product_name,DATE_FORMAT(c.period_start,"%Y") AS report_year, c.total_days*average_daily_sales AS total_amount FROM (SELECT * FROM eighteen UNION ALL SELECT * FROM nighteen UNION ALL SELECT * FROM twenty) c LEFT JOIN Product p ON c.product_id = p.product_id ORDER BY 1,3
WITH recursive cte AS( SELECT MIN(period_start) as date FROM Sales UNION ALL SELECT date_add(date, INTERVAL 1 day) FROM CTE WHERE date<=(SELECT MAX(period_end) FROM sales) ) SELECT s.product_id, p.product_name, DATE_FORMAT(cte.date, "%Y") report_year, SUM(s.average_daily_sales) AS total_amount FROM Sales AS s JOIN Product AS p ON s.product_id=p.product_id LEFT JOIN cte ON cte.date BETWEEN s.period_start and s.period_end GROUP BY s.product_id, p.product_name, report_year ORDER BY s.product_id,report_year
WITH recursive cte(product_id, period_start, period_end, average_daily_sales,curr_date) AS ( SELECT product_id, period_start, period_end, average_daily_sales, period_start AS curr_date FROM Sales UNION ALL SELECT product_id, period_start, period_end, average_daily_sales, date_add(curr_date, interval 1 day) AS curr_date FROM cte WHERE date_add(curr_date, interval 1 day) <= period_end) SELECT C.product_id, product_name, CAST(EXTRACT(YEAR FROM curr_date) AS CHAR) AS report_year, SUM(average_daily_sales) AS total_amount FROM cte C JOIN Product ON C.product_id = Product.product_id GROUP BY 1,2,3 ORDER BY 1,3
WITH recursive cte(product_id, period_start, period_end, average_daily_sales,curr_date) AS ( SELECT product_id, period_start, period_end, average_daily_sales, period_start AS curr_date FROM Sales UNION ALL SELECT product_id, period_start, period_end, average_daily_sales, date_add(curr_date, interval 1 day) as curr_date FROM cte WHERE date_add(curr_date, interval 1 day) <= period_end ) SELECT C.product_id, product_name, CAST(EXTRACT(YEAR FROM curr_date) AS NCHAR) AS report_year, SUM(average_daily_sales) AS total_amount FROM cte C INNER JOIN Product P ON C.product_id=P.product_id GROUP BY C.product_id, product_name, CAST(EXTRACT(YEAR FROM curr_date) AS NCHAR) ORDER BY C.product_id, report_year
WITH recursive cte(product_id, period_start, period_end, average_daily_sales,curr_date) AS ( SELECT product_id, period_start, period_end, average_daily_sales, period_start AS curr_date FROM Sales UNION ALL SELECT product_id, period_start, period_end, average_daily_sales, date_add(curr_date, interval 1 day) as curr_date FROM cte WHERE date_add(curr_date, interval 1 day) <= period_end ) select c.product_id, p.product_name, cast(year(c.curr_date) as nchar) as report_year, sum(average_daily_sales) as total_amount from cte c join Product p using (product_id) group by c.product_id, p.product_name, cast(year(c.curr_date) as nchar) order by c.product_id, report_year
WITH recursive t AS (SELECT * FROM sales UNION ALL SELECT product_id, date_add(period_start, INTERVAL 1 DAY), period_end, average_daily_sales FROM t WHERE period_start < period_end) SELECT t.product_id, product_name, date_format(period_start, "%Y") AS report_year, COUNT(*)*average_daily_sales AS total_amount FROM t JOIN Product ON t.product_id = product.product_id GROUP BY product_id, report_year ORDER BY product_id, product_id
WITH recursive t1 as (select * from sales union all select product_id, date_add(period_start, interval 1 day), period_end, average_daily_sales from t1 where period_start < period_end ) select t1.product_id, p.product_name, cast(year(period_start) AS NCHAR) as report_year, count(period_start) * average_daily_sales as total_amount from t1 INNER join product as p on t1.product_id = p.product_id group by 1, 3 order by 1, 3
WITH recursive time_period AS ( SELECT *, CAST(CONCAT(EXTRACT(YEAR FROM period_start),'-01-01') AS DATE) AS lower_bound, CAST(CONCAT(EXTRACT(YEAR FROM period_start),'-12-31') AS DATE) AS upper_bound FROM sales UNION ALL SELECT product_id, period_start, period_end, average_daily_sales, CAST(CONCAT(EXTRACT(YEAR FROM lower_bound)+1,'-01-01') AS DATE) AS lower_bound, CAST(CONCAT(EXTRACT(YEAR FROM upper_bound)+1,'-12-31') AS DATE) AS upper_bound FROM time_period WHERE EXTRACT(YEAR FROM upper_bound) < EXTRACT(YEAR FROM period_end) ) SELECT combined.product_id, product_name, CAST(EXTRACT(YEAR FROM start_date) AS CHAR) AS report_year, (DATEDIFF(end_date, start_date) + 1) * average_daily_sales AS total_amount FROM ( SELECT product_id, CASE WHEN EXTRACT(YEAR FROM period_start) = EXTRACT(YEAR FROM lower_bound) THEN period_start ELSE lower_bound END AS start_date, CASE WHEN EXTRACT(YEAR FROM period_end) = EXTRACT(YEAR FROM upper_bound) THEN period_end ELSE upper_bound END AS end_date, average_daily_sales FROM time_period ) AS combined LEFT JOIN product ON combined.product_id = product.product_id ORDER BY 1, 3
WITH recursive years as ( SELECT 2018 cyear, 2020 max_year UNION ALL SELECT cyear+1 cyear, max_year FROM years WHERE cyear<max_year ) , mast as( SELECT *, IF(IF(DATEDIFF(DATE('2018-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2018-12-31'),period_start))<0, 0, IF(DATEDIFF(DATE('2018-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2018-12-31'),period_start))+1)*average_daily_sales sales_2018, (IF(IF(DATEDIFF(DATE('2019-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2019-12-31'),period_start))<0, 0, IF(DATEDIFF(DATE('2019-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2019-12-31'),period_start))+1)- IF(IF(DATEDIFF(DATE('2018-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2018-12-31'),period_start))<0, 0, IF(DATEDIFF(DATE('2018-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2018-12-31'),period_start))+1))*average_daily_sales sales_2019, (IF(IF(DATEDIFF(DATE('2020-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2020-12-31'),period_start))<0, 0, IF(DATEDIFF(DATE('2020-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2020-12-31'),period_start))+1)-(IF(IF(DATEDIFF(DATE('2019-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2019-12-31'),period_start))<0, 0, IF(DATEDIFF(DATE('2019-12-31'),period_start)>DATEDIFF(period_end,period_start),DATEDIFF(period_end,period_start),DATEDIFF(DATE('2019-12-31'),period_start))+1)))*average_daily_sales sales_2020, 2018 year_2018, 2019 year_2019, 2020 year_2020 FROM sales ) , jtab as ( SELECT cyear, product_id, sales_2018 FROM years JOIN mast on cyear=year_2018 UNION all ( SELECT cyear, product_id, sales_2019 FROM years JOIN mast on cyear=year_2019 ) UNION all ( SELECT cyear, product_id, sales_2020 FROM years JOIN mast on cyear=year_2020 ) ) SELECT CAST(p.product_id as CHAR) product_id, product_name, CAST(cyear as CHAR) report_year, sales_2018 total_amount FROM jtab JOIN product p USING (product_id) WHERE sales_2018>0 ORDER BY 1,3
WITH s AS ( SELECT sales.product_id product_id, product_name, period_start, period_end, average_daily_sales FROM sales JOIN product ON sales.product_id=product.product_id ), s_2018 AS ( SELECT product_id, product_name, "2018" report_year, CASE WHEN period_end<='2018-12-31' THEN average_daily_sales*(DATEDIFF(period_end, period_start)+1) WHEN period_start<='2018-12-31' THEN average_daily_sales*(DATEDIFF('2018-12-31',period_start)+1) ELSE 0 END total_amount FROM s ), s_2019 AS ( SELECT s.product_id product_id, s.product_name product_name, "2019" report_year, CASE WHEN period_end<='2019-12-31' THEN average_daily_sales*(DATEDIFF(period_end, period_start)+1) WHEN period_start<='2019-12-31' THEN average_daily_sales*(DATEDIFF('2019-12-31',period_start)+1) ELSE 0 END - s_2018.total_amount total_amount FROM s JOIN s_2018 ON s.product_id=s_2018.product_id ), s_2020 AS ( SELECT s.product_id product_id, s.product_name product_name, "2020" report_year, CASE WHEN period_end<='2020-12-31' THEN average_daily_sales*(DATEDIFF(period_end, period_start)+1) WHEN period_start<='2020-12-31' THEN average_daily_sales*(DATEDIFF('2020-12-31',period_start)+1) ELSE 0 END - s_2018.total_amount - s_2019.total_amount total_amount FROM s JOIN s_2018 ON s.product_id=s_2018.product_id JOIN s_2019 ON s.product_id=s_2019.product_id ) SELECT * FROM ( SELECT * FROM s_2018 UNION SELECT * FROM s_2019 UNION SELECT * FROM s_2020 ORDER BY product_id, report_year ) u WHERE total_amount>0
WITH sales_2018 AS ( SELECT product_id, period_start, adj_period_end AS period_end, average_daily_sales, DATEDIFF(adj_period_end, period_start) + 1 AS num_days, "2018" AS report_year FROM (SELECT *, CASE WHEN period_end > "2018-12-31" THEN "2018-12-31" ELSE period_end END AS adj_period_end FROM Sales WHERE period_start < "2019-01-01") sub ), sales_2019 AS ( SELECT product_id, adj_period_start AS period_start, adj_period_end AS period_end, average_daily_sales, DATEDIFF(adj_period_end, adj_period_start) + 1 AS num_days, "2019" AS report_year FROM (SELECT *, CASE WHEN period_start < "2019-01-01" THEN "2019-01-01" ELSE period_start END AS adj_period_start, CASE WHEN period_end > "2019-12-31" THEN "2019-12-31" ELSE period_end END AS adj_period_end FROM Sales WHERE period_start < "2020-01-01" AND period_end > "2018-12-31") sub ), sales_2020 AS ( SELECT *, DATEDIFF(period_end, "2019-12-31") AS num_days, "2020" AS report_year FROM Sales WHERE period_end > "2019-12-31" ) SELECT sub.product_id, product_name, report_year, SUM(num_days) * average_daily_sales AS total_amount FROM (( SELECT * FROM sales_2018 ) UNION ALL ( SELECT * FROM sales_2019 ) UNION ALL ( SELECT * FROM sales_2020 )) sub LEFT JOIN Product p ON p.product_id = sub.product_id GROUP BY 1, 2, 3 ORDER BY 1, 2
WITH sales_by_year AS ( SELECT product_id , average_daily_sales * GREATEST(DATEDIFF(LEAST('2018-12-31', period_end), GREATEST(period_start, '2018-01-01'))+1, 0) AS sales_2018 , average_daily_sales * GREATEST(DATEDIFF(LEAST('2019-12-31', period_end), GREATEST(period_start, '2019-01-01'))+1, 0) AS sales_2019 , average_daily_sales * GREATEST(DATEDIFF(LEAST('2020-12-31', period_end), GREATEST(period_start, '2020-01-01'))+1, 0) AS sales_2020 FROM Sales ) , sales_by_year_unpivot AS ( SELECT product_id , '2018' AS report_year , sales_2018 AS total_amount FROM sales_by_year UNION ALL SELECT product_id , '2019' AS report_year , sales_2019 AS total_amount FROM sales_by_year UNION ALL SELECT product_id , '2020' AS report_year , sales_2020 AS total_amount FROM sales_by_year ) SELECT CAST(a.product_id AS CHAR) AS PRODUCT_ID , a.product_name AS PRODUCT_NAME , b.report_year AS REPORT_YEAR , b.total_amount AS TOTAL_AMOUNT FROM Product AS a JOIN sales_by_year_unpivot AS b ON a.product_id = b.product_id WHERE b.total_amount <> 0 ORDER BY CAST(a.product_id AS CHAR) , b.report_year
WITH t AS ( SELECT product_id, CASE WHEN period_end < '2018-01-01' OR period_start > '2018-12-31' THEN 0 WHEN period_start < '2018-01-01' AND period_end > '2018-12-31' THEN DATEDIFF('2018-12-31', '2018-01-01') + 1 WHEN period_start >= '2018-01-01' AND period_end <= '2018-12-31' THEN DATEDIFF(period_end, period_start) + 1 WHEN period_start >= '2018-01-01' AND period_end > '2018-12-31' THEN DATEDIFF('2018-12-31', period_start) + 1 ELSE DATEDIFF(period_end, '2018-01-01') + 1 END AS days_18, CASE WHEN period_end < '2019-01-01' OR period_start > '2019-12-31' THEN 0 WHEN period_start < '2019-01-01' AND period_end > '2019-12-31' THEN DATEDIFF('2019-12-31', '2019-01-01') + 1 WHEN period_start >= '2019-01-01' AND period_end <= '2019-12-31' THEN DATEDIFF(period_end, period_start) + 1 WHEN period_start >= '2019-01-01' AND period_end > '2019-12-31' THEN DATEDIFF('2019-12-31', period_start) + 1 ELSE DATEDIFF(period_end, '2019-01-01') + 1 END AS days_19, CASE WHEN period_end < '2020-01-01' OR period_start > '2020-12-31' THEN 0 WHEN period_start < '2020-01-01' AND period_end > '2020-12-31' THEN DATEDIFF('2020-12-31', '2020-01-01') + 1 WHEN period_start >= '2020-01-01' AND period_end <= '2020-12-31' THEN DATEDIFF(period_end, period_start) + 1 WHEN period_start >= '2020-01-01' AND period_end > '2020-12-31' THEN DATEDIFF('2020-12-31', period_start) + 1 ELSE DATEDIFF(period_end, '2020-01-01') + 1 END AS days_20 FROM Sales ) SELECT * FROM ( SELECT s.product_id, product_name, '2018' AS report_year, days_18 * average_daily_sales AS total_amount FROM Sales s INNER JOIN Product p ON s.product_id = p.product_id INNER JOIN t ON s.product_id = t.product_id AND days_18 > 0 UNION SELECT s.product_id, product_name, '2019' AS report_year, days_19 * average_daily_sales AS total_amount FROM Sales s INNER JOIN Product p ON s.product_id = p.product_id INNER JOIN t ON s.product_id = t.product_id AND days_19 > 0 UNION SELECT s.product_id, product_name, '2020' AS report_year, days_20 * average_daily_sales AS total_amount FROM Sales s INNER JOIN Product p ON s.product_id = p.product_id INNER JOIN t ON s.product_id = t.product_id AND days_20 > 0 ) t ORDER BY product_id, report_year
WITH t1 AS (SELECT p.product_id,p.product_name, '2018' as report_year, CASE WHEN YEAR(s.period_start)='2018' AND YEAR(s.period_end)='2018' THEN DATEDIFF(s.period_end,s.period_start) + 1 WHEN YEAR(s.period_start)='2018' AND YEAR(s.period_end)>'2018' THEN DATEDIFF('2018-12-31',s.period_start) + 1 ELSE 0 END as year_days FROM product p JOIN sales s USING(product_id) GROUP BY 1,2 UNION SELECT p.product_id,p.product_name,'2019' as report_year, CASE WHEN YEAR(s.period_start)='2019' AND YEAR(s.period_end)='2019' THEN DATEDIFF(s.period_end,s.period_start) + 1 WHEN YEAR(s.period_start)='2019' AND YEAR(s.period_end) >'2019' THEN DATEDIFF('2019-12-31',s.period_start) + 1 WHEN YEAR(s.period_start)='2018' AND YEAR(s.period_end)='2019' THEN DATEDIFF(s.period_end,'2019-01-01') + 1 WHEN YEAR(s.period_start)='2018' AND YEAR(s.period_end)='2020' THEN 365 ELSE 0 END as year_days FROM product p JOIN sales s USING(product_id) GROUP BY 1,2 UNION SELECT p.product_id,p.product_name,'2020' as report_year, CASE WHEN YEAR(s.period_start)='2020' AND YEAR(s.period_end)='2020' THEN DATEDIFF(s.period_end,s.period_start) + 1 WHEN YEAR(s.period_start) < '2020' AND YEAR(s.period_end) ='2020' THEN DATEDIFF(s.period_end,'2020-01-01') + 1 ELSE 0 END as year_days FROM product p JOIN sales s USING(product_id) GROUP BY 1,2) SELECT CONVERT(t.product_id, CHAR) as product_id, t.product_name, t.report_year, t.year_days * s.average_daily_sales as total_amount FROM t1 t JOIN sales s USING(product_id) WHERE t.year_days>0 ORDER BY 1,3
WITH table2018 AS ( SELECT s.product_id ,p.product_name ,'2018' AS 'report_year' ,(DATEDIFF(LEAST(s.period_end, '2018-12-31') , GREATEST(s.period_start, '2018-01-01')) + 1) * s.average_daily_sales AS 'total_amount' FROM Sales s LEFT JOIN Product p ON s.product_id = p.product_id WHERE '2018-01-01' BETWEEN s.period_start AND s.period_end OR s.period_start BETWEEN '2018-01-01' AND '2018-12-31' ), table2019 AS ( SELECT s.product_id ,p.product_name ,'2019' AS 'report_year' ,(DATEDIFF(LEAST(s.period_end, '2019-12-31') , GREATEST(s.period_start, '2019-01-01')) + 1) * s.average_daily_sales AS 'total_amount' FROM Sales s LEFT JOIN Product p ON s.product_id = p.product_id WHERE '2019-01-01' BETWEEN s.period_start AND s.period_end OR s.period_start BETWEEN '2019-01-01' AND '2019-12-31' ), table2020 AS ( SELECT s.product_id ,p.product_name ,'2020' AS 'report_year' ,(DATEDIFF(LEAST(s.period_end, '2020-12-31') , GREATEST(s.period_start, '2020-01-01')) + 1) * s.average_daily_sales AS 'total_amount' FROM Sales s LEFT JOIN Product p ON s.product_id = p.product_id WHERE '2020-01-01' BETWEEN s.period_start AND s.period_end OR s.period_start BETWEEN '2020-01-01' AND '2020-12-31' ) SELECT * FROM table2018 UNION ALL (SELECT * FROM table2019) UNION ALL (SELECT * FROM table2020) ORDER BY product_id ASC, report_year ASC
WITH table2018 AS ( SELECT s.product_id ,p.product_name ,'2018' AS 'report_year' ,(DATEDIFF(LEAST(s.period_end, '2018-12-31') , GREATEST(s.period_start, '2018-01-01')) + 1) * s.average_daily_sales AS 'total_amount' FROM Sales s LEFT JOIN Product p ON s.product_id = p.product_id WHERE YEAR(s.period_start) <= 2018 AND YEAR(s.period_end) >= 2018 ), table2019 AS ( SELECT s.product_id ,p.product_name ,'2019' AS 'report_year' ,(DATEDIFF(LEAST(s.period_end, '2019-12-31') , GREATEST(s.period_start, '2019-01-01')) + 1) * s.average_daily_sales AS 'total_amount' FROM Sales s LEFT JOIN Product p ON s.product_id = p.product_id WHERE YEAR(s.period_start) <= 2019 AND YEAR(s.period_end) >= 2019 ), table2020 AS ( SELECT s.product_id ,p.product_name ,'2020' AS 'report_year' ,(DATEDIFF(LEAST(s.period_end, '2020-12-31') , GREATEST(s.period_start, '2020-01-01')) + 1) * s.average_daily_sales AS 'total_amount' FROM Sales s LEFT JOIN Product p ON s.product_id = p.product_id WHERE YEAR(s.period_start) <= 2020 AND YEAR(s.period_end) >= 2020 ) SELECT * FROM table2018 UNION ALL (SELECT * FROM table2019) UNION ALL (SELECT * FROM table2020) ORDER BY product_id ASC, report_year ASC
WITH tmp AS ( SELECT product_id, product_name, report_year, average_daily_sales * days AS total_amount FROM ( SELECT ina.product_id, ina.product_name, inb.average_daily_sales, "2018" AS report_year, DATEDIFF(least(STR_TO_DATE("2018-12-31", "%Y-%m-%d"), inb.period_end), greatest("2018-01-01", inb.period_start)) + 1 AS days FROM Product AS ina JOIN Sales AS inb ON ina.product_id = inb.product_id HAVING days > 0 ) AS inc UNION ALL SELECT product_id, product_name, report_year, average_daily_sales * days AS total_amount FROM ( SELECT ina.product_id, ina.product_name, inb.average_daily_sales, "2019" AS report_year, DATEDIFF(least(STR_TO_DATE("2019-12-31", "%Y-%m-%d"), inb.period_end), greatest("2019-01-01", inb.period_start)) + 1 AS days FROM Product AS ina JOIN Sales AS inb ON ina.product_id = inb.product_id HAVING days > 0 ) AS inc UNION ALL SELECT product_id, product_name, report_year, average_daily_sales * days AS total_amount FROM ( SELECT ina.product_id, ina.product_name, inb.average_daily_sales, "2020" AS report_year, DATEDIFF(least(STR_TO_DATE("2020-12-31", "%Y-%m-%d"), inb.period_end), greatest("2020-01-01", inb.period_start)) + 1 AS days FROM Product AS ina JOIN Sales AS inb ON ina.product_id = inb.product_id HAVING days > 0 ) AS inc ) SELECT CONVERT(product_id, char) AS product_id, product_name, report_year, total_amount FROM tmp ORDER BY product_id, report_year
WITH tmp AS ( SELECT product_id, report_year, average_daily_sales * days AS total_amount FROM ( SELECT product_id, average_daily_sales, "2018" AS report_year, DATEDIFF(least("2018-12-31", period_end), greatest("2018-01-01", period_start)) + 1 AS days FROM Sales HAVING days > 0 ) AS inc UNION ALL SELECT product_id, report_year, average_daily_sales * days AS total_amount FROM ( SELECT product_id, average_daily_sales, "2019" AS report_year, DATEDIFF(least("2019-12-31", period_end), greatest("2019-01-01", period_start)) + 1 AS days FROM Sales HAVING days > 0 ) AS inc UNION ALL SELECT product_id, report_year, average_daily_sales * days AS total_amount FROM ( SELECT product_id, average_daily_sales, "2020" AS report_year, DATEDIFF(least("2020-12-31", period_end), greatest("2020-01-01", period_start)) + 1 AS days FROM Sales HAVING days > 0 ) AS inc ) SELECT ina.product_id, product_name, report_year, total_amount FROM tmp AS ina, product AS inb WHERE ina.product_id = inb.product_id ORDER BY product_id, report_year
WITH total_sales AS ( SELECT s.product_id, p.product_name, ((CASE WHEN YEAR(period_start) = 2018 AND YEAR(period_end) = 2018 THEN DATEDIFF(period_end, period_start) WHEN YEAR(period_start) = 2018 AND YEAR(period_end) > 2018 THEN DATEDIFF('2018-12-31', period_start) END) + 1) * average_daily_sales AS sales_in_2018, ((CASE WHEN YEAR(period_start) < 2019 AND YEAR(period_end) = 2019 THEN DATEDIFF(period_end, '2019-01-01') WHEN YEAR(period_start) = 2019 AND YEAR(period_end) = 2019 THEN DATEDIFF(period_end, period_start) WHEN YEAR(period_start) = 2019 AND YEAR(period_end) > 2019 THEN DATEDIFF('2019-12-31', period_start) WHEN YEAR(period_start) < 2019 AND YEAR(period_end) > 2019 THEN DATEDIFF('2019-12-31', '2019-01-01') END) + 1) * average_daily_sales AS sales_in_2019, ((CASE WHEN YEAR(period_start) < 2020 AND YEAR(period_end) = 2020 THEN DATEDIFF(period_end, '2020-01-01') WHEN YEAR(period_start) = 2020 AND YEAR(period_end) = 2020 THEN DATEDIFF(period_end, period_start) END) + 1) * average_daily_sales AS sales_in_2020 FROM Sales s JOIN Product p ON s.product_id = p.product_id ) (SELECT product_id, product_name, '2018' AS report_year, SUM(sales_in_2018) AS total_amount FROM total_sales WHERE sales_in_2018 IS NOT NULL GROUP BY 1,2,3 UNION SELECT product_id, product_name, '2019' AS report_year, SUM(sales_in_2019) AS total_amount FROM total_sales WHERE sales_in_2019 IS NOT NULL GROUP BY 1,2,3 UNION SELECT product_id, product_name, '2020' AS report_year, SUM(sales_in_2020) AS total_amount FROM total_sales WHERE sales_in_2020 IS NOT NULL GROUP BY 1,2,3) ORDER BY 1,3
With RECURSIVE d as ( SELECT min(period_start) as day FROM sales UNION ALL SELECT DATE_ADD(day, INTERVAL 1 day) as day FROM d WHERE day <= (SELECT max(period_end) FROM Sales) ) SELECT s.product_id, p.product_name, LEFT(d.day, 4) as report_year, SUM(average_daily_sales) as total_amount FROM Sales s LEFT JOIN Product p ON s.product_id = p.product_id JOIN d ON d.day BETWEEN period_start AND period_end GROUP BY 1, 2, 3 ORDER BY 1,2
With T1 as (Select '2018' as report_year Union Select '2019' as report_year Union Select '2020' as report_year), T2 as (Select product_id, Case When period_start < '2019-01-01' And period_end > '2018-12-31' Then DateDiff('2019-01-01', period_start)*average_daily_sales When period_start < '2019-01-01' Then (DateDiff(period_end, period_start)+1)*average_daily_sales Else 0 End As amt_2018, Case When period_start < '2019-01-01' AND period_end > '2019-12-31' THEN 365*average_daily_sales WHEN period_start > '2019-12-31' AND period_end > '2019-12-31' THEN 0 WHEN period_end > '2019-12-31' THEN DateDiff('2020-01-01',period_start)*average_daily_sales When period_start < '2019-01-01' AND period_end > '2018-12-31' THEN DateDiff(period_end, '2018-12-31')*average_daily_sales WHEN period_end > '2018-12-31' THEN (DateDiff(period_end,period_start)+1)*average_daily_sales Else 0 End as amt_2019, Case When period_end > '2019-12-31' Then DateDiff(period_end,'2019-12-31')*average_daily_sales Else 0 End As amt_2020 From Sales) Select * From (Select Cast(Product_1.product_id as char) as product_id, Product_1.product_name, Product_1.report_year, Case When Product_1.report_year = '2018' Then amt_2018 When Product_1.report_year = '2019' Then amt_2019 Else amt_2020 End As total_amount From (Select * From Product Cross Join T1) as Product_1 Join T2 Where Product_1.product_id = T2.product_id) as Product_2 Where total_amount > 0 Order By product_id, report_year
With T1 as (Select '2018' as report_year Union Select '2019' as report_year Union Select '2020' as report_year), T2 as (Select product_id, Case When period_start < '2019-01-01' Then (DateDiff(Least('2018-12-31',period_end), period_start)+1)*average_daily_sales Else 0 End As amt_2018, Case When Year(period_start) <= '2019' And Year(period_end) >= '2019' Then (DateDiff(Least('2019-12-31',period_end), Greatest('2019-01-01',period_start))+1)*average_daily_sales Else 0 End as amt_2019, Case When period_end > '2019-12-31' Then (DateDiff(period_end,Greatest('2020-01-01',period_start))+1)*average_daily_sales Else 0 End As amt_2020 From Sales) Select * From (Select Cast(Product_1.product_id as char) as product_id, Product_1.product_name, Product_1.report_year, Case When Product_1.report_year = '2018' Then amt_2018 When Product_1.report_year = '2019' Then amt_2019 Else amt_2020 End As total_amount From (Select * From Product Cross Join T1) as Product_1 Join T2 Where Product_1.product_id = T2.product_id) as Product_2 Where total_amount > 0 Order By product_id, report_year
select a.product_id, b.product_name, a.report_year, a.total total_amount from (select product_id, '2018' report_year, average_daily_sales * (datediff(least(period_end, '2018-12-31'), greatest(period_start, '2018-01-01'))+1) total from Sales where year(period_start)=2018 or year(period_end)=2018 union all select product_id, '2019' report_year, average_daily_sales * (datediff(least(period_end, '2019-12-31'), greatest(period_start, '2019-01-01'))+1) total from Sales where year(period_start)<=2019 and year(period_end)>=2019 union all select product_id, '2020' report_year, average_daily_sales * (datediff(least(period_end, '2020-12-31'), greatest(period_start, '2020-01-01'))+1) total from Sales where year(period_start)=2020 or year(period_end)=2020) a left join Product b on a.product_id = b.product_id order by 1, 3
select s.product_id, product_name, '2018' as report_year, sum( case when '2018' between left(period_start, 4) and left(period_end, 4) then (datediff(least('2018-12-31', period_end), greatest('2018-01-01', period_start)) + 1) * average_daily_sales else 0 end ) as total_amount from Sales s join Product p on s.product_id = p.product_id group by s.product_id having total_amount > 0 union all select s.product_id, product_name, '2019' as report_year, sum( case when '2019' between left(period_start, 4) and left(period_end, 4) then (datediff(least('2019-12-31', period_end), greatest('2019-01-01', period_start)) + 1) * average_daily_sales else 0 end ) as total_amount from Sales s join Product p on s.product_id = p.product_id group by s.product_id having total_amount > 0 union all select s.product_id, product_name, '2020' as report_year, sum( case when '2020' between left(period_start, 4) and left(period_end, 4) then (datediff(least('2020-12-31', period_end), greatest('2020-01-01', period_start)) + 1) * average_daily_sales else 0 end ) as total_amount from Sales s join Product p on s.product_id = p.product_id group by s.product_id having total_amount > 0 order by 1, 3
select t.product_id, product_name, report_year, total total_amount from (select product_id, '2018' report_year, average_daily_sales * (datediff(least(period_end, '2018-12-31'), greatest(period_start, '2018-01-01'))+1) total from Sales where year(period_start) = 2018 or year(period_end) = 2018 union select product_id, '2019' report_year, average_daily_sales * (datediff(least(period_end, '2019-12-31'), greatest(period_start, '2019-01-01'))+1) total from Sales where year(period_start) <= 2019 and year(period_end) >= 2019 union select product_id, '2020' report_year, average_daily_sales * (datediff(least(period_end, '2020-12-31'), greatest(period_start, '2020-01-01'))+1) total from Sales where year(period_start) = 2020 or year(period_end) = 2020) t join Product p on t.product_id = p.product_id order by 1, 3
select t.product_id, product_name, report_year, total_amount from product a join ( select product_id, '2018' report_year, (datediff(least(period_end,'2018-12-31'), greatest(period_start, '2018-01-01')) + 1 )*average_daily_sales total_amount from sales a where year (period_start) ='2018' or year(period_end) ='2018' union all select product_id, '2019' report_year, (datediff(least(period_end,'2019-12-31'), greatest(period_start,'2019-01-01')) + 1 )*average_daily_sales total_amount from sales a where year (period_start) <='2019' and year(period_end) >='2019' union all select product_id, '2020' report_year, (datediff(least(period_end,'2020-12-31'), greatest(period_start, '2020-01-01')) + 1 )*average_daily_sales total_amount from sales a where year (period_start) ='2020' or year(period_end) ='2020' ) t using(product_id) order by 1,3
select t3.product_id,p.product_name,year as report_year,amount as total_amount from ( select product_id,year,if(period_start>end or period_end<start,-1,(1+datediff(if(period_end>end,end,period_end),if(period_start<start,start,period_start)))*average_daily_sales) as amount from ( select * from Sales join ( select '2018' as year, '2018-01-01' as start, '2018-12-31' as end union all select '2019' as year, '2019-01-01' as start, '2019-12-31' as end union all select '2020' as year, '2020-01-01' as start, '2020-12-31' as end )t1 )t2 )t3 join Product p where t3.product_id=p.product_id and t3.amount>-1 order by t3.product_id, report_year
select temp.product_id, p.product_name, temp.report_year, temp.total_amount from (select product_id, average_daily_sales * (datediff(least(period_end, '2018-12-31'), greatest(period_start, '2018-01-01'))+1) as total_amount, '2018' as report_year from Sales where year(period_start) = 2018 or year(period_end) = 2018 union all select product_id, average_daily_sales * (datediff(least(period_end, '2019-12-31'), greatest(period_start, '2019-01-01'))+1) as total_amount, '2019' as report_year from Sales where year(period_start) <= 2019 and year(period_end) >= 2019 union all select product_id, average_daily_sales * (datediff(least(period_end, '2020-12-31'), greatest(period_start, '2020-01-01'))+1) as total_amount, '2020' as report_year from Sales where year(period_start) = 2020 or year(period_end) = 2020 ) temp left join Product p on temp.product_id = p.product_id order by product_id, report_year
select u.product_id, p.product_name, u.report_year, u.total_amount from (select product_id, '2018' as report_year, (datediff(if(period_end<='2018-12-31', period_end, '2018-12-31'), if(period_start>='2018-01-01', period_start, '2018-01-01'))+1)*average_daily_sales as total_amount from Sales union all select product_id, '2019' as report_year, (datediff(if(period_end<='2019-12-31', period_end, '2019-12-31'), if(period_start>='2019-01-01', period_start, '2019-01-01'))+1)*average_daily_sales as total_amount from Sales union all select product_id, '2020' as report_year, (datediff(if(period_end<='2020-12-31', period_end, '2020-12-31'), if(period_start>='2020-01-01', period_start, '2020-01-01'))+1)*average_daily_sales as total_amount from Sales) u join Product p on u.product_id = p.product_id where u.total_amount >=0 order by u.product_id, report_year
with RECURSIVE sales_daily as ( select product_id, period_start, period_end, average_daily_sales , period_start as dur from sales union all select product_id, period_start, period_end, average_daily_sales , date_add(dur, interval 1 day) dur from sales_daily where dur <period_end ) select s.product_id, p.product_name, LEFT(s.dur,4) as report_year, sum(s.average_daily_sales) as total_amount from sales_daily s join product p on s.product_id = p.product_id where LEFT(s.dur,4) between 2018 and 2020 group by s.product_id, report_year order by s.product_id, report_year
with RECURSIVE sales_daily as ( select product_id, period_start, period_end, average_daily_sales , period_start as dur from sales union all select product_id, period_start, period_end, average_daily_sales , date_add(dur, interval 1 day) dur from sales_daily where dur <period_end ) select sd.product_id product_id, (select p.product_name from product p where p.product_id=sd.product_id) product_name , cast(year(sd.dur)as char(4)) report_year , sum(sd.average_daily_sales)total_amount from sales_daily sd group by sd.product_id, year(sd.dur) order by 1, 3
with Recursive cte as (select product_id,Year(period_start) as yr from sales union select product_id, yr+1 as yr from cte S1 where yr<(select YEAR(period_end) from sales S2 where S2.product_id= S1.product_id)) select C.product_id,product_name, cast(C.yr as CHAR)as report_year, (Case when YEAR(period_start)= Year(period_end) then (Datediff(period_end,period_start)+1)*average_daily_sales when yr= YEAR(period_start) then (Datediff(concat(yr,'-12-31'),period_start)+1)*average_daily_sales when yr= YEAR(period_end) then (Datediff(period_end, concat(yr,'-01-01'))+1)*average_daily_sales else 365*average_daily_sales end ) as total_amount from cte C left join Sales S on C.product_id= S.product_id join Product P on S.product_id = P.product_id order by C.product_id, yr
with Report as ( select product_id, sum(greatest(0, (datediff(least(period_end, '2018-12-31'), greatest(period_start, '2018-01-01')) + 1) * average_daily_sales) )as amount_2018, sum(greatest(0, (datediff(least(period_end, '2019-12-31'), greatest(period_start, '2019-01-01')) + 1) * average_daily_sales) )as amount_2019, sum(greatest(0, (datediff(least(period_end, '2020-12-31'), greatest(period_start, '2020-01-01')) + 1) * average_daily_sales) )as amount_2020 from Sales group by 1 ) select * from ( select Report.product_id, product_name, '2018' as 'report_year', amount_2018 as 'total_amount' from Report join Product on Report.product_id = Product.product_id where amount_2018 > 0 union all select Report.product_id, product_name, '2019' as 'report_year', amount_2019 as 'total_amount' from Report join Product on Report.product_id = Product.product_id where amount_2019 > 0 union all select Report.product_id, product_name, '2020' as 'report_year', amount_2020 as 'total_amount' from Report join Product on Report.product_id = Product.product_id where amount_2020 > 0 ) tmp order by 1, 3
with a as (select product_id, '2018' as report_year, (datediff(least(period_end, "2018-12-31"), greatest(period_start, "2018-01-01"))+1)*average_daily_sales as total_amount from Sales where period_start <= "2018-12-31" and period_end >= "2018-01-01" union all select product_id, '2019' as report_year, (datediff(least(period_end, "2019-12-31"), greatest(period_start, "2019-01-01"))+1)*average_daily_sales as total_amount from Sales where period_start <= "2019-12-31" and period_end >= "2019-01-01" union all select product_id, '2020' as report_year, (datediff(least(period_end, "2020-12-31"), greatest(period_start, "2020-01-01"))+1)*average_daily_sales as total_amount from Sales where period_start <= "2020-12-31" and period_end >= "2020-01-01") select a.product_id, product_name, report_year, total_amount from a join Product p on a.product_id = p.product_id order by 1,3
with a as( select *, if(least(datediff('2018-12-31',period_start)+1,365) - greatest(datediff('2018-12-31',period_end),0) < 0,0,least(datediff('2018-12-31',period_start)+1,365) - greatest(datediff('2018-12-31',period_end),0) ) *average_daily_sales 'y18', if(least(datediff('2019-12-31',period_start)+1,365) - greatest(datediff('2019-12-31',period_end),0) < 0,0,least(datediff('2019-12-31',period_start)+1,365) - greatest(datediff('2019-12-31',period_end),0) ) *average_daily_sales 'y19', if(least(datediff('2020-12-31',period_start)+1,366) - greatest(datediff('2020-12-31',period_end),0) < 0,0,least(datediff('2020-12-31',period_start)+1,366 ) - greatest(datediff('2020-12-31',period_end),0) ) *average_daily_sales 'y20' from Sales), uni as( select product_id, '2018' report_year, y18 as total_amount from a union select product_id, '2019' report_year, y19 as total_amount from a union select product_id, '2020' report_year, y20 as total_amount from a ) select u.product_id, product_name , report_year, total_amount from uni u join Product p on u.product_id=p.product_id where total_amount !=0 order by product_id,report_year
with a as( select product_id, average_daily_sales, case when period_start<='2018-12-31' and period_end>='2019-01-01' then datediff('2018-12-31', period_start)+1 when period_end<='2018-12-31' then datediff(period_end, period_start)+1 else 0 end as sales_2018, case when period_start>='2019-01-01' and period_start<='2019-12-31' and period_end>='2020-01-01' then datediff('2019-12-31', period_start)+1 when period_start<='2018-12-31' and period_end>='2020-01-01' then 365 when period_start<='2018-12-31' and period_end>='2019-01-01' and period_end<'2019-12-31' then datediff(period_end, '2019-01-01')+1 when period_start>='2019-01-01' and period_end<='2019-12-31' then datediff(period_end, period_start)+1 else 0 end as sales_2019, case when period_start>='2018-01-01' and period_end>='2020-01-01' then datediff(period_end, '2020-01-01')+1 when period_start>='2020-01-01' then datediff(period_end, period_start)+1 else 0 end as sales_2020 from sales), s_2018 as( select a.product_id, p.product_name, '2018' as report_year, a.sales_2018*a.average_daily_sales as total_amount from a join product p on a.product_id=p.product_id where a.sales_2018 != 0), s_2019 as ( select a.product_id, p.product_name, '2019' as report_year, a.sales_2019*a.average_daily_sales as total_amount from a join product p on a.product_id=p.product_id where a.sales_2019 != 0), s_2020 as( select a.product_id, p.product_name, '2020' as report_year, a.sales_2020*a.average_daily_sales as total_amount from a join product p on a.product_id=p.product_id where a.sales_2020 != 0) select * from s_2018 union all select * from s_2019 union all select * from s_2020 order by product_id, report_year
with anual_sales as ( select product_id, "2018" report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2018-12-31'), GREATEST(period_start, '2018-01-01'))+1) total_amount from Sales where YEAR(period_start)=2018 OR YEAR(period_end)=2018 union all select product_id, "2019" report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2019-12-31'), GREATEST(period_start, '2019-01-01'))+1) total_amount from Sales where YEAR(period_start)<=2019 AND YEAR(period_end)>=2019 union all select product_id, "2020" report_year, average_daily_sales * (DATEDIFF(LEAST(period_end, '2020-12-31'), GREATEST(period_start, '2020-01-01'))+1) total_amount from Sales where YEAR(period_start)=2020 OR YEAR(period_end)=2020 ) select a.product_id, product_name, report_year, total_amount from Product p join anual_sales a on p.product_id = a.product_id order by a.product_id, a.report_year
with cte as ( select *, (DATEDIFF(period_end,period_start)+1)*average_daily_sales as total_sales , case when period_start>'2018-12-31' then 0 when period_end<='2018-12-31' then (DATEDIFF(period_end,period_start)+1)*average_daily_sales else (DATEDIFF('2018-12-31',period_start)+1)*average_daily_sales end as sales_2018, case when period_end<'2020-01-01' then 0 when period_start>='2020-01-01' then (DATEDIFF(period_end,period_start)+1)*average_daily_sales else (DATEDIFF(period_end,'2020-01-01')+1)*average_daily_sales end as sales_2020 from sales) select a.product_id, b.product_name, c.report_year, c.total_amount from sales a left join product b on a.product_id=b.product_id left join ( select product_id,"2018" as report_year,sales_2018 as total_amount from cte union all select product_id,"2020" as report_year,sales_2020 as total_amount from cte union all select product_id,"2019" as report_year,total_sales-sales_2020 -sales_2018 as total_amount from cte ) c on a.product_id=c.product_id where c.total_amount>0 order by 1,3
with cte as ( select Sales.product_id, case when year(period_start) = 2018 and year(period_end) = 2018 then datediff(period_end,period_start)+1 when year(period_start) = 2018 and year(period_end) != 2018 then datediff("2019-01-01",period_start) else 0 end as n2018, case when year(period_start) = 2018 and year(period_end) = 2020 then 365 when year(period_start) = 2019 and year(period_end) = 2020 then datediff("2020-01-01",period_start) when year(period_start) = 2019 and year(period_end) = 2019 then datediff(period_end,period_start)+1 when year(period_start) = 2018 and year(period_end) = 2019 then datediff(period_end,"2019-01-01")+1 else 0 end as n2019, case when year(period_start) < 2020 and year(period_end) = 2020 then datediff(period_end,"2019-12-31") when year(period_start) = 2020 then datediff(period_end,period_start)+1 else 0 end as n2020, average_daily_sales, product_name from Sales join Product on Sales.product_id = Product.product_id ) select product_id,product_name,"2018" as report_year,average_daily_sales*n2018 as total_amount from cte where n2018 != 0 union all select product_id,product_name,"2019" as report_year,average_daily_sales*n2019 as total_amount from cte where n2019 != 0 union all select product_id,product_name,"2020" as report_year,average_daily_sales*n2020 as total_amount from cte where n2020 != 0 order by product_id,report_year
with cte as ( select product_id , '2018' as report_year , case when year(period_start)=2018 and year(period_end)=2018 then (datediff(period_end, period_start)+1) * average_daily_sales when year(period_start)=2018 and year(period_end)>2018 then datediff('2019-01-01', period_start) * average_daily_sales end as year_sale from sales union select product_id , '2019' as report_year , case when year(period_start)<2019 and year(period_end)=2019 then (datediff(period_end, '2019-01-01')+1) * average_daily_sales when year(period_start)<2019 and year(period_end)>2019 then (datediff('2020-01-01', '2019-01-01')) * average_daily_sales when year(period_start)=2019 and year(period_end)=2019 then (datediff(period_end, period_start)+1) * average_daily_sales when year(period_start)=2019 and year(period_end)>2019 then datediff('2020-01-01', period_start) * average_daily_sales end as year_sale from sales union select product_id , '2020' as report_year , case when year(period_start)<2020 and year(period_end)=2020 then (datediff(period_end, '2020-01-01')+1) * average_daily_sales when year(period_start)<2020 and year(period_end)>2020 then (datediff('2021-01-01', '2020-01-01')) * average_daily_sales when year(period_start)=2020 and year(period_end)=2020 then (datediff(period_end, period_start)+1) * average_daily_sales when year(period_start)=2020 and year(period_end)>2020 then datediff('2021-01-01', period_start) * average_daily_sales end as year_sale from sales ) select cte.product_id , product_name , report_year , year_sale as total_amount from cte join product on product.product_id=cte.product_id where year_sale is not null group by 1, 3 order by 1, 3
with cte as ( select product_id, '2018' as report_year, (datediff((case when period_end >= '2018-12-31' then '2018-12-31' else period_end end ),(case when period_start <= '2018-01-01' then '2018-01-01' else period_start end))+1) * average_daily_sales as total_sales from sales where '2018' between year(period_start) and year(period_end) union all select product_id, '2019' as report_year, (datediff((case when period_end >= '2019-12-31' then '2019-12-31' else period_end end ),(case when period_start <= '2019-01-01' then '2019-01-01' else period_start end))+1) * average_daily_sales as total_sales from sales where '2019' between year(period_start) and year(period_end) union all select product_id, '2020' as report_year, (datediff((case when period_end >= '2020-12-31' then '2020-12-31' else period_end end ),(case when period_start <= '2020-01-01' then '2020-01-01' else period_start end))+1) * average_daily_sales as total_sales from sales where '2020' between year(period_start) and year(period_end) ) select a.product_id, b.product_name, a.report_year, a.total_sales as total_amount from cte a join product b on a.product_id = b.product_id order by 1 ,3
with cte as ( select product_id, case when year(period_start) = 2018 and year(period_end) = 2018 then TIMESTAMPDIFF(day, period_start, period_end)+1 when year(period_start) = 2018 and year(period_end) > 2018 then TIMESTAMPDIFF(day, period_start, '2019-01-01') else 0 end * average_daily_sales as year_2018, case when year(period_start) = 2019 and year(period_end) = 2019 then TIMESTAMPDIFF(day, period_start, period_end)+1 when year(period_start) < 2019 and year(period_end) = 2019 then TIMESTAMPDIFF(day, '2019-01-01', period_end)+1 when year(period_start) = 2019 and year(period_end) > 2019 then TIMESTAMPDIFF(day, period_start, '2020-01-01') when year(period_start) < 2019 and year(period_end) > 2019 then 365 else 0 end * average_daily_sales as year_2019, case when year(period_start) = 2020 and year(period_end) = 2020 then TIMESTAMPDIFF(day, period_start, period_end)+1 when year(period_start) < 2020 and year(period_end) = 2020 then TIMESTAMPDIFF(day, '2020-01-01', period_end)+1 else 0 end * average_daily_sales as year_2020 from sales), cte2 as ( select product_id, '2018' as report_year, year_2018 as total_amount from cte union all select product_id, '2019' as report_year, year_2019 as total_amount from cte union all select product_id, '2020' as report_year, year_2020 as total_amount from cte ) select cte2.product_id, product_name, report_year, total_amount from cte2 left join product p on cte2.product_id = p.product_id where total_amount != 0 order by product_id, report_year
with cte1 as ( select date('2018-01-01') as start_date , date('2018-12-31') as end_date union all select date('2019-01-01') , date('2019-12-31') union all select date('2020-01-01') , date('2020-12-31') ), cte2 as ( select sa.product_id , sa.average_daily_sales , cast(year(c1.start_date) as char) as report_year , case when sa.period_start >= c1.start_date and sa.period_end <= c1.end_date then datediff(sa.period_end, sa.period_start) + 1 when sa.period_start >= c1.start_date and sa.period_end >= c1.end_date then datediff(c1.end_date, sa.period_start) + 1 when sa.period_start <= c1.start_date and sa.period_end >= c1.end_date then datediff(c1.end_date, c1.start_date) + 1 when sa.period_start <= c1.start_date and sa.period_end <= c1.end_date then datediff(sa.period_end, c1.start_date) + 1 end as date_diff from sales as sa cross join cte1 as c1 ) select c2.product_id , pr.product_name , c2.report_year , sum(c2.average_daily_sales * c2.date_diff) as total_amount from cte2 as c2 inner join product as pr on c2.product_id = pr.product_id where c2.date_diff > 0 group by 1,2,3 order by product_id asc , product_name asc , report_year asc
with d as ( select '2018' as yr, '2018-01-01' sy, '2018-12-31' ey union all select '2019' as yr, '2019-01-01' sy, '2019-12-31' ey union all select '2020' as yr, '2020-01-01' sy, '2020-12-31' ey ) ,s as ( select product_id, yr, greatest(sy,s.period_start) as ps, least(ey,s.period_end ) as pe ,average_daily_sales as ads from Sales s inner join d on s.period_start <= d.ey and s.period_end >= d.sy ) select s.product_id, p.product_name, s.yr as report_year, (ads) * (datediff(pe,ps)+1) as total_amount from s inner join Product p on s.product_id = p.product_id order by s.product_id,s.yr
with distinct_years as ( select year(period_start) as years from Sales union select year(period_end) as years from Sales order by years ) select sub.product_id, p.product_name, cast(sub.years as CHAR) as report_year, sum(sub.average_daily_sales * sub.day_counts) as total_amount from ( select b.product_id, b.average_daily_sales, a.years, case when a.years = year(b.period_start) and a.years = year(b.period_end) then DATEDIFF(b.period_end, b.period_start)+1 when a.years = year(b.period_start) then DATEDIFF(DATE(CONCAT(a.years, '-12-31')), b.period_start)+1 when a.years = year(b.period_end) then DATEDIFF(b.period_end, DATE(CONCAT(a.years, '-01-01')))+1 else DATEDIFF(DATE(CONCAT(a.years, '-12-31')), DATE(CONCAT(a.years, '-01-01')))+1 end as day_counts from distinct_years as a left join Sales as b on a.years between year(b.period_start) and year(b.period_end) where b.product_id is not null order by b.product_id ) sub left join Product as p using (product_id) group by sub.product_id, p.product_name, sub.years order by sub.product_id, sub.years
with flat_sales as (select * from sales s1 where year(period_start) = year(period_end) union select product_id, period_start, case when year(period_start) = 2018 then '2018-12-31' when year(period_start) = 2019 then '2019-12-31' else '2020-12-31' end as period_end, average_daily_sales from sales s2 where year(period_start) = year(period_end)-1 union select product_id, case when year(period_end) = 2018 then '2018-01-01' when year(period_end) = 2019 then '2019-01-01' else '2020-01-01' end as period_start, period_end, average_daily_sales from sales s3 where year(period_start) = year(period_end)-1 union select product_id, period_start, '2018-12-31', average_daily_sales from sales s4 where year(period_start) = year(period_end)-2 union select product_id, '2019-01-01', '2019-12-31', average_daily_sales from sales s5 where year(period_start) = year(period_end)-2 union select product_id, '2020-01-01', period_end, average_daily_sales from sales s6 where year(period_start) = year(period_end)-2 ) select fs.product_id, p.product_name, convert(year(period_end),char) as report_year, sum((datediff(fs.period_end,fs.period_start)+1)*fs.average_daily_sales) as total_amount from flat_sales fs, product p where fs.product_id = p.product_id group by fs.product_id, p.product_name, year(period_end) order by fs.product_id, year(period_end)
with recursive a as ( select * from sales union all select product_id, date_add(period_start, interval 1 day), period_end, average_daily_sales from a where period_start < period_end) select a.product_id, p.product_name, date_format(a.period_start, '%Y') as report_year, count(a.product_id) * a.average_daily_sales as total_amount from a join product p on a.product_id = p.product_id group by 1,3 order by 1,3
with recursive a as( select min(period_start) as m from Sales union all select date_add(m, interval 1 day) as m from a where m < (select max(period_end) from Sales)) select s.product_id, p.product_name, left(a.m, 4) as report_year, s.average_daily_sales*count(a.m) as total_amount from Sales s join a on a.m between s.period_start and s.period_end left join Product p on p.product_id = s.product_id group by 1,3 order by 1,3
with recursive caltable AS( SELECT MIN(period_start) as day FROM Sales UNION ALL SELECT date_add(day, INTERVAL 1 DAY) as day FROM caltable WHERE day<(SELECT max(period_end) from sales) ) SELECT s.product_id, p.product_name, DATE_FORMAT(c.day, "%Y") report_year, sum(s.average_daily_sales ) as total_amount from sales as s join caltable as c ON c.day between s.period_start and s.period_end join product as p using(product_id) GROUP BY s.product_id, p.product_name,year(c.day) ORDER BY s.product_id,year(c.day)
with recursive caltable as( select min(period_start) as day from sales union all select date_add(day, INTERVAL 1 DAY) as day from caltable where day<(select max(period_end) from sales) ) select s.product_id, p.product_name, date_format(c.day, "%Y") as report_year, sum(average_daily_sales) as total_amount from caltable as c join sales as s on c.day between s.period_start and s.period_end join product as p on s.product_id=p.product_id group by s.product_id, year(c.day) order by s.product_id, report_year
with recursive cte (report_year) as ( select 2018 union all select report_year + 1 from cte where report_year <= 2020 ) select s.product_id, p.product_name, CAST(report_year as CHAR(4)) as report_year, case when year(period_start) = year(period_end) then datediff(period_end, period_start) + 1 when year(period_start) <> year(period_end) and report_year = year(period_start) then datediff(concat(report_year,"-12-31"), period_start) + 1 when year(period_start) <> year(period_end) and report_year = year(period_end) then datediff(period_end, concat(report_year,"-1-1")) + 1 else datediff(concat(report_year,'-12-31'), concat(report_year,'-1-1')) + 1 end * average_daily_sales as total_amount from cte right join sales s on cte.report_year>= year(period_start) and cte.report_year<= year(period_end) left join product p on s.product_id = p.product_id order by s.product_id, report_year
with recursive cte as ( select * from sales union all select product_id, date_add(period_start, INTERVAL 1 DAY) as period_start, period_end, average_daily_sales from cte where period_start < period_end) select cte.product_id, product_name, date_format(period_start, "%Y") as report_year, count(*)*average_daily_sales as total_amount from cte join product on cte.product_id = product.product_id group by 1, 3 order by 1, 3
with recursive cte as ( select min(period_start) as date from Sales union all select DATE_ADD(date, INTERVAL 1 day) as date from cte where date <= (select max(period_end) from Sales) ) select s.product_id as product_id, p.product_name as product_name, LEFT(c.date, 4) as report_year, sum(s.average_daily_sales) as total_amount from Sales s inner join Product p on s.product_id = p.product_id inner join cte c on c.date >= s.period_start and c.date <= s.period_end group by 1,2,3 order by 1,3
with recursive cte as ( select min(period_start) as date from sales union select date_add(date, INTERVAL 1 day) from cte where date <= (select max(period_end) from sales) ) , joined as ( select sales.product_id , product.product_name , period_start , period_end , average_daily_sales from sales left join product on sales.product_id = product.product_id ) SELECT joined.product_id , joined.product_name , LEFT(e.date, 4) as report_year , SUM(joined.average_daily_sales) as total_amount FROM joined JOIN CTE e ON joined.period_start<=e.date AND joined.period_end>=e.date GROUP BY product_id, product_name, report_year ORDER BY product_id, report_year
with recursive cte as ( select min(period_start) as date from sales union select date_add(date, INTERVAL 1 day) from cte where date <= (select max(period_end) from sales) ) SELECT s.product_id , p.product_name , LEFT(e.date,4) as report_year , SUM(s.average_daily_sales) as total_amount FROM Sales s JOIN Product p ON p.product_id = s.product_id JOIN CTE e ON s.period_start<=e.date AND s.period_end>=e.date GROUP BY product_id, product_name, report_year ORDER BY product_id, report_year
with recursive cte as ( select min(period_start) as date from sales union select date_add(date, INTERVAL 1 day) from cte where date <= (select max(period_end) from sales) ) SELECT s.product_id, p.product_name, LEFT(e.date,4) as report_year, SUM(s.average_daily_sales) as total_amount FROM Sales s JOIN Product p ON p.product_id = s.product_id JOIN CTE e ON s.period_start<=e.date AND s.period_end>=e.date GROUP BY product_id, product_name, report_year ORDER BY product_id, report_year
with recursive cte as ( select min(period_start) as day from sales UNION ALL select date_add(day, interval 1 day) from cte where day< all(select max(period_end) from sales) ) select b.product_id, c.product_name, cast(extract(year from a.day) as char) as report_year, sum(average_daily_sales) as total_amount from cte a join sales b on a.day >= b.period_start and a.day<= b.period_end inner join product c on b.product_id = c.product_id group by 1, 3 order by 1, 3
with recursive cte as ( select min(period_start) as start_date from sales union all select DATE_ADD(start_date, INTERVAL 1 DAY) from cte where start_date < (select max(period_end) from Sales) ) select CAST(product_id as CHAR) as product_id, product_name, CAST(YEAR(start_date) as CHAR) as report_year, sum(average_daily_sales) as total_amount from (select p.product_id, p.product_name, cte.start_date, s.average_daily_sales from cte left join Sales as s on cte.start_date >= s.period_start and cte.start_date <= s.period_end right join Product as p on p.product_id = s.product_id) as temp group by 1,3 order by 1,3
with recursive cte as ( select product_id , period_start , period_end, average_daily_sales from Sales union all select product_id , date_add(period_start,interval 1 day)period_start ,period_end, average_daily_sales from cte where date_add(period_start,interval 1 day) <= period_end ) select cast(b.product_id as char(50)) product_id , b.product_name , left(period_start,4) report_year , sum(average_daily_sales) total_amount from cte a inner join Product b on a.product_id = b.product_id group by 1,2 ,year(period_start) order by 1,3
with recursive cte as ( select product_id ,period_start ,period_end ,average_daily_sales from Sales union all select product_id ,period_start + interval 1 DAY period_start ,period_end ,average_daily_sales from cte where period_start < period_end ) select a.product_id ,b.product_name ,convert(year(period_start), CHAR) report_year ,sum(a.average_daily_sales) total_amount from cte a left join Product b on a.product_id = b.product_id group by 1,2,3 order by 1,3
with recursive cte as ( select product_id ,period_start ,period_end ,average_daily_sales from Sales union select product_id ,period_start + interval 1 DAY period_start ,period_end ,average_daily_sales from cte where period_start < period_end ) select a.product_id ,b.product_name ,convert(year(period_start), CHAR) report_year ,sum(a.average_daily_sales) total_amount from cte a left join Product b on a.product_id = b.product_id group by 1,2,3 order by 1,3
with recursive cte as ( select product_id, period_start, period_end, average_daily_sales, period_start as newDt from Sales UNION ALL select product_id, period_start, period_end, average_daily_sales, DATE_ADD(newDt, interval 1 day) as newDt from cte where newDt < period_end ) select concat(P.product_id, '') product_id, P.product_name, concat(year(C.newDt), '') report_year, sum(C.average_daily_sales) total_amount from Product P inner join cte C on P.product_id = C.product_id group by 1, 2, 3 order by 1, 3
with recursive cte as (select min(year(period_start)) as start_year, max(year(period_end)) as end_year from sales), cte1 as (select start_year as report_year from cte union all select report_year + 1 from cte1,cte where report_year < end_year) select Sales.product_id, Product.product_name, cast(cte1.report_year as char) as report_year, (datediff( case when year(period_end) <> cte1.report_year then cast(concat(cast(cte1.report_year as char),'12','31') as date) else period_end end, case when year(period_start) <> cte1.report_year then cast(concat(cast(cte1.report_year as char),'01','01') as date) else period_start end ) + 1) * average_daily_sales as total_amount from Sales left join Product on Sales.product_id = Product.product_id left join cte1 on cte1.report_year >= year(period_start) and cte1.report_year <= year(period_end) order by 1,3
with recursive cte as (select product_id, average_daily_sales, period_end, period_start as cur_date from Sales UNION select product_id, average_daily_sales, period_end, date_add(cur_date, interval 1 day) as cur_date from cte where date_add(cur_date, interval 1 day)<=period_end) select cte.product_id, product_name, CAST(year(cur_date) as NCHAR) as report_year, sum(average_daily_sales) as total_amount from cte join Product p ON cte.product_id = p.product_id where cur_date between '2018-01-01' AND '2020-12-31' group by cte.product_id, year(cur_date) order by 1, 3
with recursive cte as (select product_id, period_start, period_end, average_daily_sales, period_start as current_dt from Sales UNION ALL select product_id, period_start, period_end, average_daily_sales, date_add(current_dt, interval 1 day) as current_dt from cte where date_add(current_dt, interval 1 day) <= period_end) select c.product_id, p.product_name, CAST(EXTRACT(YEAR from current_dt) as NCHAR) as report_year, sum(average_daily_sales) as total_amount from cte c join Product p ON c.product_id = p.product_id GROUP BY c.product_id, YEAR(current_dt) Order by c.product_id, report_year
with recursive cte as (select product_id, period_start, period_end, average_daily_sales, period_start as dur from Sales union all (select product_id, period_start, period_end, average_daily_sales, date_add(dur, interval 1 day) as dur from cte where dur < period_end)) select sd.product_id product_id, (select p.product_name from product p where p.product_id=sd.product_id) product_name, cast(year(sd.dur) as char(4)) as report_year, sum(sd.average_daily_sales) as total_amount from cte sd group by 1, 3 order by 1
with recursive cte as( select (select min(period_start) from Sales) as sale_date union all select date_add(sale_date, interval 1 day) as sale_date from cte where sale_date < (select max(period_end) from Sales) ) select s.product_id, p.product_name, left(c.sale_date,4) as report_year, sum(s.average_daily_sales) as total_amount from cte c join Sales s on c.sale_date between s.period_start and s.period_end join Product p on s.product_id = p.product_id group by 1,2,3 order by 1,3
with recursive cte as( select * from Sales union all select product_id, DATE_ADD(period_start, INTERVAL 1 DAY) as period_start, period_end, average_daily_sales from cte where period_start < period_end ) select cte.product_id, p.product_name, DATE_FORMAT(cte.period_start,"%Y") as report_year, sum(cte.average_daily_sales) as total_amount from cte join Product p on p.product_id = cte.product_id group by 1,2,3 order by 1
with recursive cte as( select min(period_start) as date from sales union select date_add(date, INTERVAL 1 day) from cte where date <= (select max(period_end) from sales) ) , joined as ( select sales.product_id , product.product_name , period_start , period_end , average_daily_sales from sales left join product on sales.product_id = product.product_id ) SELECT joined.product_id , joined.product_name , LEFT(e.date, 4) as report_year , SUM(joined.average_daily_sales) as total_amount FROM joined JOIN CTE e ON joined.period_start<=e.date AND joined.period_end>=e.date GROUP BY product_id, product_name, report_year ORDER BY product_id, report_year
with recursive cte as( select product_id, average_daily_sales, period_start, period_end from Sales UNION ALL select product_id, average_daily_sales, date_add(period_start, interval 1 day) period_start, period_end from cte where period_start < period_end ) select c.product_id, p.product_name, date_format(c.period_start, "%Y") report_year, count(c.period_start)*c.average_daily_sales total_amount from cte c join Product p on p.product_id = c.product_id group by 1,2,3 order by 1,3
with recursive cte as( select product_id, average_daily_sales, period_start, period_end from Sales UNION ALL select product_id, average_daily_sales, date_add(period_start, interval 1 day) period_start, period_end from cte where period_start < period_end ) select c.product_id, p.product_name, date_format(period_start, "%Y") as report_year, sum(average_daily_sales) as total_amount from cte c join Product p on c.product_id = p.product_id where 2018 <= year(period_start) and 2020 >= year(period_start) group by 1, 2, 3 order by 1,3
with recursive cte(product_id, period_start, period_end, average_daily_sales, curr_date) as ( select product_id, period_start, period_end, average_daily_sales, period_start as curr_date from sales union all select product_id, period_start, period_end, average_daily_sales, date_add(curr_date, interval 1 day) as curr_date from cte where date_add(curr_date, interval 1 day) <= period_end ) select c.product_id, product_name, cast(extract(year from curr_date) as nchar) as report_year, sum(average_daily_sales) as total_amount from cte c inner join product p on c.product_id = p.product_id group by c.product_id, product_name, cast(extract(year from curr_date) as nchar) order by c.product_id, report_year
with recursive cte(product_id, period_start, period_end, average_daily_sales, current_dt) as (select product_id, period_start, period_end, average_daily_sales, period_start as current_dt from Sales UNION ALL select product_id, period_start, period_end, average_daily_sales, date_add(current_dt, interval 1 day) as current_dt from cte where date_add(current_dt, interval 1 day) <= period_end) select c.product_id, p.product_name, CAST(EXTRACT(YEAR from current_dt) as NCHAR) as report_year, sum(average_daily_sales) as total_amount from cte c join Product p ON c.product_id = p.product_id GROUP BY c.product_id, YEAR(current_dt) Order by c.product_id, report_year
with recursive cte(s_date, e_date) as ( select min(period_start) as s_date, max(period_end) as e_date from sales union all select date_add(s_date, interval 1 day) as s_date, e_date from cte where s_date < e_date ) select cast(p.product_id as char(100)) as product_id, p.product_name, cast(year(s_date) as char(10)) as report_year, sum(average_daily_sales) as total_amount from product p left join sales s on p.product_id = s.product_id left join cte on cte.s_date between s.period_start and s.period_end group by product_id, product_name, year(s_date) order by 1, 3
with recursive cte(yr) as( select 2018 union all select yr + 1 from cte where yr < 2020 ) select temp.product_id as product_id, product_name, cast(report_year as char) as report_year, total_amount from product p right join ( select yr as report_year, CASE WHEN yr = YEAR(period_start) AND yr = YEAR(period_end) THEN (DATEDIFF(period_end, period_start) + 1) * average_daily_sales WHEN yr = YEAR(period_start) AND yr < YEAR(period_end) THEN (DATEDIFF(CONCAT(yr, '-12-31'), period_start) + 1) * average_daily_sales WHEN yr > YEAR(period_start) AND yr < YEAR(period_end) THEN DAYOFYEAR(CONCAT(yr,'-12-31')) * average_daily_sales WHEN yr > YEAR(period_start) AND yr = YEAR(period_end) THEN DAYOFYEAR(period_end) * average_daily_sales END AS total_amount, s.* from cte, sales s where yr between year(period_start) and year(period_end) ) temp on p.product_id = temp.product_id order by temp.product_id, report_year
with recursive cte1 as ( select min(period_start) as d1 from sales union all select date_add(d1, interval 1 day) as d1 from cte1 where d1 <= (select max(period_end) from sales) ) select product_id, product_name, left(d1, 4) as report_year, sum(average_daily_sales) as total_amount from sales s join product using (product_id) join cte1 c on s.period_start <= c.d1 and s.period_end >= c.d1 group by 1,2,3 order by 1,3
with recursive cte1 as (select min(period_start) as d1 from sales union all select date_add(d1, interval 1 day) as d1 from cte1 where d1 <= (select max(period_end) from sales) ) select product_id, product_name, left(d1, 4) as report_year, sum(average_daily_sales) as total_amount from sales s join product using(product_id) join cte1 c on s.period_start <= c.d1 and s.period_end >= c.d1 group by 1,2,3 order by 1,3
with recursive cte_spine as ( select min(period_start) as calendar_date from Sales union all select date_add(calendar_date, interval 1 day) from cte_spine where calendar_date < ( select max(period_end) from Sales ) ), cte_join_agg as ( select cast(p.product_id as nchar) as product_id, product_name, cast(year(calendar_date) as nchar) as report_year, sum(coalesce(average_daily_sales, 0)) as total_amount from cte_spine as sp left join Sales on sp.calendar_date between Sales.period_start and Sales.period_end left join Product as p on p.product_id = Sales.product_id group by 1, 2, 3 having total_amount > 0 order by 1, 3 ) select * from cte_join_agg
with recursive d AS( SELECT min(period_start) AS calendar_date FROM Sales UNION ALL SELECT date_add(calendar_date, interval 1 day) FROM d WHERE calendar_date< (SELECT max(period_end) FROM Sales)) SELECT product_id, product_name, report_year, day*average_daily_sales AS total_amount FROM (SELECT s.product_id, product_name, calendar_date, convert(extract(year from calendar_date), char) AS report_year, count(calendar_date) AS day, average_daily_sales FROM d JOIN Sales s ON d.calendar_date BETWEEN s.period_start AND s.period_end JOIN Product p ON s.product_id=p.product_id GROUP BY 1, 4) t ORDER BY 1, 3
with recursive daily_sales as (select product_id, period_start, period_end, average_daily_sales, period_start as dur from Sales union all select product_id, period_start, period_end, average_daily_sales, date_add(dur, interval 1 day) as dur from daily_sales where dur < period_end) select ds.product_id product_id, (select p.product_name from Product p where p.product_id = ds.product_id) product_name, cast(year(ds.dur) as char(4)) report_year, sum(ds.average_daily_sales) total_amount from daily_sales ds group by 1,3 order by 1,3
with recursive date_d as ( select min(period_start) as 'report_date' from Sales union select date_add(report_date, interval 1 day) from date_d where report_date < (select max(period_end) from Sales) ) select Sales.product_id, product_name, substring(report_date, 1, 4) as 'report_year', sum(average_daily_sales) as 'total_amount' from Product join Sales using(product_id) join date_d on period_start <= report_date and report_date <= period_end group by product_id, report_year order by product_id, report_year
with recursive date_tbl as ( select min(period_start) as day from sales union select date_add(day, interval 1 day) as day from date_tbl where day < (select max(period_end) from sales) ) select s.product_id , product_name , cast(year(day) as char) as report_year , sum(average_daily_sales) as total_amount from date_tbl right join sales s on date_tbl.day <= period_end and date_tbl.day >= period_start join product p on p.product_id=s.product_id group by 1,3 order by 1,3
with recursive dates as ( select min(period_start) as dte from sales union all select date_add(dte, interval 1 day) as dte from dates where dte < (select max(period_end) from sales) ) select s.product_id, p.product_name, date_format(d.dte, '%Y') as report_year, sum(s.average_daily_sales) as total_amount from sales s left join dates d on d.dte between s.period_start and s.period_end inner join product p using (product_id) group by 1, 2, 3 order by 1, 3
with recursive dates as ( select product_id, average_daily_sales, period_end, period_start as year_start, LEAST(CONCAT(YEAR(period_start), '-12-31'), period_end) as year_end from Sales UNION ALL select product_id, average_daily_sales, period_end, CONCAT(YEAR(year_start) + 1, '-01-01'), LEAST(CONCAT(YEAR(year_start) + 1, '-12-31'), period_end) from dates where CONCAT(YEAR(year_start) + 1, '-01-01') <= period_end ) select product_id, product_name, Cast(Year(year_start) as CHAR) as report_year, (datediff(year_end, year_start) + 1) * average_daily_sales as total_amount from dates d join Product p USING (product_id) ORDER BY product_id, report_year
with recursive dates_cte as ( select min(period_start) as dt from sales union all select date_add(dt, interval 1 day ) as dt from dates_cte where date_add(dt, interval 1 day ) <= (select max(period_end) from sales) ) select b.product_id, c.product_name, cast(extract(year from dt) as char) as report_year, sum(average_daily_sales) as total_amount from dates_cte a, sales b, product c where a.dt between b.period_start and b.period_end and b.product_id = c.product_id group by b.product_id, c.product_name, extract(year from dt) order by product_id, extract(year from dt)
with recursive dt as (select Min(period_start) AS startdate, Max(period_end) AS enddate from Sales UNION ALL Select date_add(startdate, Interval 1 DAY) AS startdate, enddate from dt where startdate < enddate) select s.product_id,product_name, cast(YEAR(startdate) as char(20)) as report_year, sum(average_daily_sales ) as total_amount from Sales s Left Join dt ON dt.startdate BETWEEN period_start AND period_end Left Join product p on p.product_id= s.product_id group by s.product_id, YEAR(startdate) order by s.product_id, report_year
with recursive period as (select product_id, '2018-01-01' as start_date, '2018-12-31' as end_date from product union all select product_id, date_add(start_date, interval 1 year) as start_date, date_add(end_date, interval 1 year) as end_date from period where year(start_date)<2020), sales_new as (select s.*,p.start_date,p.end_date from period p join sales s on p.product_id = s.product_id where year(p.start_date) between year(s.period_start) and year(period_end)), sales_final as (select product_id, average_daily_sales, case when period_start > start_date then period_start else start_date end as period_start, case when period_end < end_date then period_end else end_date end as period_end from sales_new) select product_id, product_name, left(period_end,4) as report_year, (datediff(period_end,period_start)+1)*average_daily_sales as total_amount from sales_final join Product using(product_id) order by 1,3
with recursive rcte as (SELECT min(period_start) as dt from sales union all SELECT DATE_ADD(dt, INTERVAL 1 day) as dt from rcte where dt <= (SELECT max(period_end) from sales)) SELECT s.product_id, p.product_name, LEFT(r.dt,4) as report_year, SUM(s.average_daily_sales) as total_amount FROM Sales s JOIN Product p ON p.product_id = s.product_id JOIN rcte r ON s.period_start<=r.dt AND s.period_end>=r.dt GROUP BY 1,2,3 ORDER BY 1,3
with recursive reports as ( select product_id ,period_start ,period_end ,average_daily_sales ,year(period_start) as report_year from Sales union all select product_id ,period_start ,period_end ,average_daily_sales ,report_year+1 from reports where year(period_end) > report_year ) select report.product_id ,prod.product_name ,cast(report.report_year as char(10)) as report_year ,( (case when year(period_start)=report_year and year(period_end) = report_year then datediff(period_end,period_start) when year(period_start)=report_year and year(period_end) > report_year then datediff(concat(report_year,'-12-31'),period_start) when year(period_start)<report_year and year(period_end) > report_year then datediff(concat(report_year,'-12-31'),concat(report_year,'-01-01')) else datediff(period_end,concat(report_year,'-01-01')) end )+1)*average_daily_sales as total_amount from reports report join Product prod on report.product_id = prod.product_id order by product_id,report_year
with recursive reports as ( select product_id ,period_start ,period_end ,average_daily_sales ,year(period_start) as report_year from Sales union all select product_id ,period_start ,period_end ,average_daily_sales ,report_year+1 from reports where year(period_end) > report_year ) select report.product_id ,prod.product_name ,cast(report.report_year as char(10)) as report_year ,sum(( (case when year(period_start)=report_year and year(period_end) = report_year then datediff(period_end,period_start) when year(period_start)=report_year and year(period_end) > report_year then datediff(concat(report_year,'-12-31'),period_start) when year(period_start)<report_year and year(period_end) > report_year then datediff(concat(report_year,'-12-31'),concat(report_year,'-01-01')) else datediff(period_end,concat(report_year,'-01-01')) end )+1)*average_daily_sales) as total_amount from reports report join Product prod on report.product_id = prod.product_id group by report.product_id,prod.product_name,report.report_year order by product_id,report_year
with recursive seq as (select product_id, YEAR(period_start) as report_year, YEAR(period_end) as year_end from sales union all select product_id, report_year+1, year_end from seq where report_year < year_end) select s.product_id, p.product_name, convert(seq.report_year, CHAR) as report_year, case when YEAR(period_start) = YEAR(period_end) then s.average_daily_sales * (DATEDIFF(period_end, period_start)+1) when YEAR(period_start) = report_year then (DATEDIFF(DATE(CONCAT(YEAR(period_start),"-12-31")),period_start)+1) * s.average_daily_sales when YEAR(period_end) = report_year then (DATEDIFF(period_end, DATE(CONCAT(YEAR(period_end),"-01-01")))+1) * s.average_daily_sales else 365*s.average_daily_sales end as total_amount from sales s left join seq on s.product_id = seq.product_id left join product p on s.product_id = p.product_id order by 1,3
with recursive t1 as (select * from sales union all select product_id, date_add(period_start, INTERVAL 1 DAY), period_end, average_daily_sales from t1 where period_start < period_end) select t1.product_id, product_name, date_format(period_start, "%Y") as report_year, count(*)*average_daily_sales as total_amount from t1 join product on t1.product_id = product.product_id group by 1, 3 order by 1, 3
with recursive t1 as (select * from sales union all select product_id, date_add(period_start, INTERVAL 1 DAY), period_end, average_daily_sales from t1 where period_start < period_end) select t1.product_id, product_name, date_format(period_start, "%Y") as report_year, count(*)*average_daily_sales as total_amount from t1 join product on t1.product_id = product.product_id group by 1,2, 3 order by 1, 3
with recursive t1 as (select * from sales union all select product_id, date_add(period_start, INTERVAL 1 DAY), period_end, average_daily_sales from t1 where period_start < period_end) select t1.product_id, product_name, date_format(period_start, "%Y") as report_year, sum(average_daily_sales) as total_amount from t1 join product on t1.product_id = product.product_id group by 1, 3 order by 1, 3
with recursive t1 as (select * from sales union all select product_id, date_add(period_start, INTERVAL 1 DAY), period_end, average_daily_sales from t1 where period_start < period_end) select t1.product_id, product_name, left(period_start,4) as report_year, count(*)*average_daily_sales as total_amount from t1 join product on t1.product_id = product.product_id group by 1, 3 order by 1, 3
with recursive t1 as (select * from sales union all select product_id, date_add(period_start, INTERVAL 1 DAY), period_end, average_daily_sales from t1 where period_start < period_end) select t1.product_id,product_name,date_format(period_start,"%Y") report_year, count(*)*average_daily_sales as total_amount from t1 left join Product p using(product_id) group by 1,2,3 order by 1,3
with recursive t1(n) as ( SELECT 2018 UNION ALL SELECT n+1 FROM t1 WHERE n<2020 ), t2 as ( SELECT CAST(p.PRODUCT_ID AS CHAR) PRODUCT_ID ,p.PRODUCT_NAME ,CASE WHEN s.period_start > CAST(CONCAT(CAST(T1.n AS CHAR), '-01-01') AS DATE) THEN s.period_start ELSE CAST(CONCAT(CAST(T1.n AS CHAR), '-01-01') AS DATE) END period_start_new ,CASE WHEN s.period_end < CAST(CONCAT(CAST(T1.n AS CHAR), '-12-31') AS DATE) THEN s.period_end ELSE CAST(CONCAT(CAST(T1.n AS CHAR), '-12-31') AS DATE) END period_end_new, s.average_daily_sales FROM Sales s LEFT OUTER JOIN T1 ON T1.n BETWEEN year(period_start) and year(period_end) INNER JOIN PRODUCT p ON s.product_id = p.product_id ) SELECT PRODUCT_ID ,PRODUCT_NAME ,CAST(year(period_end_new) AS CHAR) report_year ,(DATEDIFF(period_end_new, period_start_new)+1) * average_daily_sales total_amount FROm T2 ORDER BY PRODUCT_ID, REPORT_YEAR
with recursive taco as (select min(period_start) as date from Sales union all select date_add(date, interval 1 day) from taco where date <= (select max(period_end) from sales)) select s.product_id, p.product_name, left(taco.date, 4) as report_year, sum(s.average_daily_sales) as total_amount from Sales s join Product p using(product_id) join taco on s.period_start <= taco.date and s.period_end >= taco.date group by 1, 2, 3 order by 1, 3
with recursive tmp as ( select product_id, period_start, period_end, average_daily_sales from sales union select product_id, date_add(period_start, interval 1 day) period_start, period_end, average_daily_sales from tmp where period_start < period_end ) select a.product_id, product_name, report_year, total_amount from ( select product_id, left(period_start,4) report_year, (average_daily_sales * count(*)) total_amount from tmp group by product_id, report_year ) a join Product b on a.product_id = b.product_id order by product_id, report_year
with recursive year_ranges as( select min(year(period_start)) as yr from sales union all select yr + 1 from year_ranges where yr < (select max(year(period_end)) from sales) ) select s.product_id, p.product_name, CAST(yr as char) as report_year, (CASE when year(period_start) = yr and year(period_end) = yr then datediff(period_end, period_start) + 1 when year(period_start) = yr then datediff((concat(yr, '-12-31')), period_start) + 1 when year(period_end) = yr then datediff(period_end, (concat(yr, '-01-01'))) + 1 else DAYOFYEAR(concat(yr, '-12-31')) end) * average_daily_sales as total_amount from product p left join sales s on s.product_id = p.product_id join year_ranges r on yr between year(period_start) and year(period_end) order by product_id, report_year
with recursive yearin as ( select product_id, year(period_start) yr, period_end from sales s union all select product_id, yr+1, period_end from yearin where yr < year(period_end)) select cast(p.product_id as char) product_id, product_name, cast(yr as char) report_year, (case when yr = year(period_start) and yr = year(s.period_end) then (datediff(s.period_end,period_start)+1) * average_daily_sales when yr = year(period_start) and yr!= year(s.period_end) then (datediff(concat(yr,"-12-31"),period_start)+1)* average_daily_sales when yr = year(s.period_end) and yr!= year(period_start) then (datediff(s.period_end, concat(yr,"-01-01"))+1)*average_daily_sales else dayofyear(concat(yr,"-12-31"))*average_daily_sales end) total_amount from product p join sales s on p.product_id = s.product_id join yearin y on y.product_id = s.product_id order by product_id, report_year
with recursive years as ( select 2018 as yr UNION ALL select yr+1 from years where yr < 2020 ) select CAST(p.product_id as CHAR(50)) as product_id ,p.product_name ,CAST(y.yr as CHAR(4)) as report_year ,SUM((datediff(LEAST(period_end,CAST(CONCAT(yr,'-12-31') as DATE)),GREATEST(period_start,CAST(CONCAT(yr,'-01-01') as DATE)))+1)*average_daily_sales) as total_amount from Product p LEFT JOIN Sales s on p.product_id = s.product_id LEFT JOIN years y on year(period_start) = y.yr or year(period_end) = y.yr or (year(period_start) < y.yr and y.yr < year(period_end)) group by p.product_id, p.product_name, y.yr order by product_id, report_year
with recursive yr as ( Select min(year(period_start)) as minyr FROM Sales UNION ALL select minyr+1 from yr where minyr<(select max(year(period_end)) from sales)) SELECT s.product_id, p.product_name,cast(minyr as char) as report_year, average_daily_sales*(case when year(period_start)=minyr and year(period_end)=minyr then datediff(period_end,period_start)+1 when year(period_start)=minyr then datediff((concat(minyr,'-12-31')),period_start)+1 when year(period_end)=minyr then datediff(period_end,(concat(minyr,'-01-01')))+1 else dayofyear(concat(minyr,'-12-31'))end ) as total_amount FROM Product as p JOIN sales as s on p.product_id = s.product_id JOIN yr ON minyr between year(period_start) and year(period_end) order by product_id,report_year
with recursive yrr as ( select min(year(period_start)) yr from sales union all select yr+1 from yrr where yr< (select max(year(period_end)) from sales ) ) select product_id,product_name, CAST(report_year as CHAR) report_year, total_amount from ( select s.product_id, p.product_name, yr report_year, average_daily_sales * (case when year(period_start) = yr and year(period_end) = yr then datediff(period_end,period_start)+1 when yr = year(period_start) then datediff( concat(yr,'-12-31'),period_start ) +1 when yr = year(period_end) then datediff( period_end, concat(yr,'-01-01') ) +1 else 365 end )as total_amount, period_start, period_end from sales s inner join product p on s.product_id = p.product_id join yrr order by s.product_id) x where report_year between year(period_start) and year(period_end) ORDER BY 1,3
with s as ( select product_id, '2018' as report_year, case when datediff(least(period_end, '2018-12-31'), greatest(period_start, '2018-01-01')) >= 0 then (datediff(least(period_end, '2018-12-31'), greatest(period_start, '2018-01-01')) + 1)*average_daily_sales else 0 end as total_amount from Sales union select product_id, '2019' as report_year, case when datediff(least(period_end, '2019-12-31'), greatest(period_start, '2019-01-01')) >= 0 then (datediff(least(period_end, '2019-12-31'), greatest(period_start, '2019-01-01')) + 1)*average_daily_sales else 0 end as total_amount from Sales union select product_id, '2020' as report_year, case when datediff(least(period_end, '2020-12-31'), greatest(period_start, '2020-01-01')) >= 0 then (datediff(least(period_end, '2020-12-31'), greatest(period_start, '2020-01-01')) + 1)*average_daily_sales else 0 end as total_amount from Sales) select s.product_id, product_name, report_year, total_amount from s join Product p on s.product_id = p.product_id where total_amount > 0 order by 1, 3
with sales_2018 as ( select t1.product_id, t2.product_name, cast(year(t1.period_start) as CHAR) as report_year, (datediff(t1.period_end, t1.period_start) + 1) * t1.average_daily_sales as total_amount from ( select product_id, case when year(period_start) = 2018 then period_start else date('2018-01-01') end as period_start, case when year(period_end) = 2018 then period_end else date('2018-12-31') end as period_end, average_daily_sales from sales where year(period_start) <= 2018 and year(period_end) >= 2018 ) t1 join product t2 on t2.product_id = t1.product_id ), sales_2019 as ( select t1.product_id, t2.product_name, cast(year(t1.period_start) as CHAR) as report_year, (datediff(t1.period_end, t1.period_start) + 1) * t1.average_daily_sales as total_amount from ( select product_id, case when year(period_start) = 2019 then period_start else date('2019-01-01') end as period_start, case when year(period_end) = 2019 then period_end else date('2019-12-31') end as period_end, average_daily_sales from sales where year(period_start) <= 2019 and year(period_end) >= 2019 ) t1 join product t2 on t2.product_id = t1.product_id ), sales_2020 as ( select t1.product_id, t2.product_name, cast(year(t1.period_start) as CHAR) as report_year, (datediff(t1.period_end, t1.period_start) + 1) * t1.average_daily_sales as total_amount from ( select product_id, case when year(period_start) = 2020 then period_start else date('2020-01-01') end as period_start, case when year(period_end) = 2020 then period_end else date('2020-12-31') end as period_end, average_daily_sales from sales where year(period_start) <= 2020 and year(period_end) >= 2020 ) t1 join product t2 on t2.product_id = t1.product_id ) select * from ( select * from sales_2018 union all select * from sales_2019 union all select * from sales_2020 ) t order by product_id asc, report_year asc
with t as (select product_id, average_daily_sales, case when year(period_start) = '2018' and year(period_end) = '2018' then datediff(period_end,period_start)+1 when year(period_start) = '2018' and year(period_end) > '2018' then datediff('2018-12-31',period_start)+1 when year(period_start) < '2018' and year(period_end) > '2018' then datediff('2019-12-31','2019-1-1')+1 when year(period_start) < '2018' and year(period_end) = '2018' then datediff(period_end,'2019-1-1')+1 else 0 end as 2018_, case when year(period_start) < '2019' and year(period_end) = '2019' then datediff(period_end,'2019-1-1')+1 when year(period_start) < '2019' and year(period_end) > '2019' then datediff('2019-12-31','2019-1-1')+1 when year(period_start) = '2019' and year(period_end) = '2019' then datediff(period_end,period_start)+1 when year(period_start) = '2019' and year(period_end) > '2019' then datediff('2019-12-31',period_start)+1 else 0 end as 2019_, case when year(period_start) < '2020' and year(period_end) = '2020' then datediff(period_end,'2020-1-1')+1 when year(period_start) < '2020' and year(period_end) > '2020' then datediff('2020-12-31','2020-1-1')+1 when year(period_start) = '2020' and year(period_end) = '2020' then datediff(period_end,period_start)+1 else 0 end as 2020_ from Sales) select * from (select product_id, product_name, '2018' as report_year, 2018_*average_daily_sales as total_amount from t join Product using(product_id) where 2018_ <> 0 union all select product_id, product_name, '2019' as report_year, 2019_*average_daily_sales as total_amount from t join Product using(product_id) where 2019_ <> 0 union all select product_id, product_name, '2020' as report_year, 2020_*average_daily_sales as total_amount from t join Product using(product_id) where 2020_ <> 0) t order by product_id,report_year
with t1 as (select *, if(datediff("2018-12-31", period_start) + 1 > 0, datediff("2018-12-31", period_start) + 1, 0) as s_2018, if(datediff("2019-12-31", period_start) + 1 > 0, datediff("2019-12-31", period_start) + 1, 0) as s_2019, if(datediff("2020-12-31", period_start) + 1 > 0, datediff("2020-12-31", period_start) + 1, 0) as s_2020, if(datediff("2018-12-31", period_end) > 0, datediff("2018-12-31", period_end), 0) as e_2018, if(datediff("2019-12-31", period_end) > 0, datediff("2019-12-31", period_end), 0) as e_2019, if(datediff("2020-12-31", period_end) > 0, datediff("2020-12-31", period_end), 0) as e_2020 from Sales ), t2 as (select product_id, average_daily_sales, (s_2018 - e_2018) as d_2018, (s_2019 - e_2019 - (s_2018 - e_2018)) as d_2019, (s_2020 - e_2020 - (s_2019 - e_2019)) as d_2020 from t1), t3 (product_id, report_year, total_amount) as (select product_id, "2018", average_daily_sales * d_2018 from t2 where d_2018 > 0 union all select product_id, "2019", average_daily_sales * d_2019 from t2 where d_2019 > 0 union all select product_id, "2020", average_daily_sales * d_2020 from t2 where d_2020 > 0 ) select t3.product_id, product_name, report_year, total_amount from t3 left join Product p on t3.product_id = p.product_id order by product_id, report_year
with t1 as(select product_id, average_daily_sales*(datediff(least('2018-12-31',period_end), greatest('2018-01-01',period_start))+1) 2018sales, average_daily_sales*(datediff(least('2019-12-31',period_end), greatest('2019-01-01',period_start))+1) 2019sales, average_daily_sales*(datediff(least('2020-12-31',period_end), greatest('2020-01-01',period_start))+1) 2020sales from Sales), t2 as (select product_id, '2018' report_year, 2018sales total_amount from t1 where 2018sales>0 union all select product_id, '2019' report_year, 2019sales total_amount from t1 where 2019sales>0 union all select product_id, '2020' report_year, 2020sales total_amount from t1 where 2020sales>0 order by 1,2) select t2.product_id , product_name , report_year,total_amount from t2 join Product p on t2.product_id=p.product_id
with table2018 as( select product_id, (1+DATEDIFF(LEAST(period_end,'2018-12-31'),period_start))*average_daily_sales total_amount, '2018' report_year from Sales where year(period_start)=2018 or year(period_end)=2018 ), table2019 as( select product_id, (1+DATEDIFF(LEAST(period_end,'2019-12-31'),GREATEST(period_start,'2019-01-01')))*average_daily_sales total_amount, '2019' report_year from Sales where year(period_start)<=2019 and year(period_end)>=2019 ), table2020 as( select product_id, (1+DATEDIFF(LEAST(period_end,'2020-12-31'),GREATEST(period_start,'2020-01-01')))*average_daily_sales total_amount, '2020' report_year from Sales where year(period_start)=2020 or year(period_end)=2020 ), t as( select * from table2018 UNION ALL select * from table2019 UNION ALL select * from table2020) select t.product_id,product_name,report_year,total_amount from t join Product on Product.product_id=t.product_id order by product_id,report_year
with tbY as ( select "2018" as report_year, '2018-01-01' as start, '2018-12-31' as end union all select "2019", '2019-01-01', '2019-12-31' union all select "2020", '2020-01-01', '2020-12-31' ), tbS as( select s.*, tbY.report_year, 1+ datediff(case when s.period_end < tbY.end then s.period_end else tbY.end end ,case when s.period_start > tbY.start then s.period_start else tbY.start end) as days from Sales as s join tbY where s.period_end >= tbY.start and s.period_start <= tbY.end ) select tbS.product_id, p.product_name, tbS.report_year, tbS.average_daily_sales * days as total_amount from tbS join Product as p on tbS.product_id = p.product_id order by product_id, tbs.report_year
with tbY as ( select "2018" as report_year, '2018-01-01' as start, '2018-12-31' as end union all select "2019", '2019-01-01', '2019-12-31' union all select "2020", '2020-01-01', '2020-12-31' ), tbS as( select s.*, tbY.report_year, 1+ datediff(case when s.period_end < tbY.end then s.period_end else tbY.end end ,case when s.period_start > tbY.start then s.period_start else tbY.start end) as days from Sales as s, tbY where s.period_end >= tbY.start and s.period_start <= tbY.end ) select tbS.product_id, p.product_name, tbS.report_year, tbS.average_daily_sales * days as total_amount from tbS join Product as p on tbS.product_id = p.product_id order by product_id, tbs.report_year
with tem as( select *, case when period_start >= '2018-01-01' and period_end <= '2018-12-31' then (datediff(period_end, period_start) + 1) when period_start between '2018-01-01' and '2018-12-31'and period_end >= '2019-01-01' then (datediff('2018-12-31', period_start) + 1) else 0 end as days_2018, case when period_start <= '2018-12-31' and period_end between '2019-01-01' and '2019-12-31' then (datediff(period_end, '2019-01-01') + 1) when period_start <= '2018-12-31' and period_end > '2019-12-31' then (datediff('2019-12-31', '2019-01-01') + 1) when period_start >='2019-01-01' and period_end between '2019-01-01' and '2019-12-31' then (datediff(period_end, period_start) + 1) when period_start >='2019-01-01' and period_end > '2019-12-31' then (datediff('2019-12-31', period_start) + 1) else 0 end as days_2019, case when period_start <= '2019-12-31' and period_end between '2020-01-01' and '2020-12-31' then (datediff(period_end, '2020-01-01') + 1) when period_start >='2020-01-01' and period_end <= '2020-12-31' then (datediff(period_end, period_start) + 1) else 0 end as days_2020 from sales), tem1 as ( select a.*, b.product_name from tem a left join product b on a.product_id = b.product_id ) select product_id, product_name, '2018' as report_year, days_2018 * average_daily_sales as total_amount from tem1 where days_2018>0 union (select product_id, product_name, '2019' as report_year, days_2019 * average_daily_sales as total_amount from tem1 where days_2019>0) union (select product_id, product_name, '2020' as report_year, days_2020 * average_daily_sales as total_amount from tem1 where days_2020>0) order by product_id, report_year
with temp as (select '2018-01-01' as start_date, '2018-12-31' as end_date union all select '2019-01-01' as start_date, '2019-12-31' as end_date union all select '2020-01-01' as start_date, '2020-12-31' as end_date) select * from ( select sales.product_id, product_name, cast(year(start_date) as char) as report_year, case when year(period_start) = year(start_date) and year(period_end) = year(end_date) then datediff(period_end+interval 1 DAY, period_start)*average_daily_sales when year(period_start) = year(start_date) and year(period_end) > year(end_date) then datediff(end_date+interval 1 DAY, period_start)*average_daily_sales when year(period_start) < year(start_date) and year(period_end) > year(end_date) then datediff(end_date+interval 1 DAY, start_date)*average_daily_sales when year(period_start) < year(start_date) and year(period_end) = year(end_date) then datediff(period_end+interval 1 DAY, start_date)*average_daily_sales end as total_amount from sales join product on sales.product_id = product.product_id join temp ) as annual_sales where total_amount is not null order by product_id, report_year
with tmp as ( select *, case when year(period_start)=2018 then period_start end as start_18, case when year(period_end)>2018 then '2018-12-31' else period_end end as end_18, case when year(period_start)<2019 then '2019-01-01' when year(period_start)=2019 then period_start end as start_19, case when year(period_end)=2019 then period_end when year(period_end)>2019 then '2019-12-31' end as end_19, case when year(period_start)<2020 then '2020-01-01' when year(period_start)=2020 then period_start end as start_20, case when year(period_end)=2020 then period_end end as end_20 from sales order by 1), tmp2 as ( select a.product_id,product_name, period_start,period_end, average_daily_sales, ifnull(datediff(end_18,start_18)+1,0) as days_18, ifnull(datediff(end_19,start_19)+1,0) as days_19, ifnull(datediff(end_20,start_20)+1,0) as days_20 from tmp a inner join product b on a.product_id=b.product_id order by 1) select product_id, product_name, '2018' as report_year, average_daily_sales*days_18 as total_amount from tmp2 where days_18>0 union select product_id, product_name, '2019' as report_year, average_daily_sales*days_19 as total_amount from tmp2 where days_19>0 union select product_id, product_name, '2020' as report_year, average_daily_sales*days_20 as total_amount from tmp2 where days_20>0 order by 1,3
with tmp as ( select product_id, '2018' as report_year, average_daily_sales * (datediff(least(period_end, '2018-12-31'), greatest(period_start, '2018-01-01')) + 1) as total_amount from sales where year(period_start) = 2018 union select product_id, '2019' as report_year, average_daily_sales * (datediff(least(period_end, '2019-12-31'), greatest(period_start, '2019-01-01')) + 1) as total_amount from sales where year(period_start) <= 2019 and year(period_end) >= 2019 union select product_id, '2020' as report_year, average_daily_sales * (datediff(least(period_end, '2020-12-31'), greatest(period_start, '2020-01-01')) + 1) as total_amount from sales where year(period_end) = 2020 ) select product_id, product_name, report_year, total_amount from tmp natural join product order by 1, 3
with tmp as (select product_id, '2018' as report_year, average_daily_sales * (datediff(least(period_end,'2018-12-31'), period_start) + 1) as total_amount from sales where year(period_start)=2018 union select product_id, '2019' as report_year, average_daily_sales * (datediff(least(period_end,'2019-12-31'), greatest(period_start,'2019-01-01')) + 1) as total_amount from sales where year(period_start)<=2019 and year(period_end)>=2019 union select product_id, '2020' as report_year, average_daily_sales * (datediff(period_end, greatest(period_start,'2020-01-01')) + 1) as total_amount from sales where year(period_end)=2020 ) select a.product_id, product_name, report_year, total_amount from tmp a inner join product b on a.product_id=b.product_id order by 1,3
with tmp2018 as (select product_id, '2018' as report_year, period_start, if(period_end > '2018-12-31', date('2018-12-31'), period_end) as period_end, average_daily_sales from sales where period_start < '2019-01-01'), tmp2019 as (select product_id, '2019' as report_year, if(period_start < '2019-01-01', date('2019-01-01'), period_start) as period_start, if(period_end > '2019-12-31', date('2019-12-31'), period_end) as period_end, average_daily_sales from sales where period_start < '2020-01-01' and period_end > '2018-12-31'), tmp2020 as (select product_id, '2020' as report_year, if(period_start < '2020-01-01', date('2020-01-01'), period_start) as period_start, period_end, average_daily_sales from sales where period_end > '2019-12-31') (select a.product_id, product_name, report_year, average_daily_sales * (datediff(period_end, period_start) + 1) as total_amount from tmp2018 a join product b on a.product_id = b.product_id) union all (select a.product_id, product_name, report_year, average_daily_sales * (datediff(period_end, period_start) + 1) as total_amount from tmp2019 a join product b on a.product_id = b.product_id) union all (select a.product_id, product_name, report_year, average_daily_sales * (datediff(period_end, period_start) + 1) as total_amount from tmp2020 a join product b on a.product_id = b.product_id) order by product_id, report_year
