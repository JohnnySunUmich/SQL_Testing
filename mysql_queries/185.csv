SELECT A.Name As Department, B.Name As Employee ,B.Salary FROM Department A JOIN (SELECT DepartmentId,Name, Salary, DENSE_RANK()OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) As r FROM Employee) B ON A.Id=B.DepartmentId AND r<=3
SELECT B.Department, B.Employee, B.Salary FROM (SELECT D.Name as Department, E.Name as Employee, E.Salary, DENSE_RANK() OVER (PARTITION BY E.DepartmentId ORDER BY E.Salary DESC) as Rk FROM Employee as E LEFT JOIN Department as D ON E.DepartmentId = D.Id) as B WHERE B.RK<=3 AND B.Department is NOT NULL
SELECT B.NAME AS Department ,A.NAME AS EMPLOYEE,A.SALARY AS SALARY FROM ( SELECT ID,NAME,SALARY ,DepartmentId, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS RNK FROM Employee) A INNER JOIN Department B ON A.DepartmentId=B.ID WHERE RNK<=3
SELECT B.Name AS Department, A.Name AS Employee, A.Salary AS Salary FROM Employee A INNER JOIN Department B ON A.DepartmentId = B.Id WHERE 3 > ( SELECT count(DISTINCT(e2.Salary)) from Employee e2 Where e2.Salary > A.Salary AND A.DepartmentId = e2.DepartmentId )
SELECT C.Department, C.Name as Employee, C.Salary From ( SELECT A.Name, A.Salary, A.DepartmentId, Dense_Rank() OVER(Partition BY A.DepartmentID Order By A.Salary DESC) as r_n, B.Name as Department FROM Employee A, Department B where A.DepartmentId = B.Id) C where C.r_n<=3
SELECT D.NAME AS DEPARTMENT, E.NAME AS EMPLOYEE, SALARY FROM (SELECT *, DENSE_RANK() OVER(PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) AS RANKS FROM EMPLOYEE) E JOIN DEPARTMENT D ON E.DEPARTMENTID = D.ID WHERE RANKS <= 3
SELECT D.NAME Department ,E.NAME Employee ,E.Salary FROM DEPARTMENT D INNER JOIN (SELECT * ,DENSE_RANK() OVER (PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) ROW_NUM FROM EMPLOYEE) E ON D.ID = E.DEPARTMENTID AND E.ROW_NUM <= 3
SELECT D.NAME Department, E.NAME Employee, E.SALARY Salary FROM EMPLOYEE E JOIN DEPARTMENT D ON E.DEPARTMENTID=D.ID WHERE ( SELECT COUNT(DISTINCT E2.SALARY) FROM EMPLOYEE E2 WHERE E2.SALARY > E.SALARY AND E2.DEPARTMENTID=E.DEPARTMENTID ) < 3 ORDER BY D.NAME ASC, Salary DESC
SELECT D.Name AS "Department", E.Name AS Employee, E.Salary FROM (SELECT DepartmentId, Name, Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS r FROM Employee) E JOIN Department D WHERE E.DepartmentId = D.Id AND r <=3
SELECT D.Name AS 'Department', E1.Name AS 'Employee', E1.Salary FROM Employee AS E1 JOIN Department AS D ON E1.DepartmentId = D.Id WHERE ( SELECT COUNT(DISTINCT Salary) FROM Employee AS E2 WHERE E2.Salary > E1.Salary AND E2.DepartmentId = E1.DepartmentId ) < 3
SELECT D.Name AS Department , E.Name AS Employee , E.Salary as Salary FROM Employee AS E INNER JOIN Department AS D ON E.DepartmentId = D.Id WHERE 3 > (SELECT COUNT(DISTINCT E2.Salary) FROM Employee as E2 WHERE E2.Salary > E.Salary AND E.DepartmentId= E2.DepartmentId)
SELECT D.Name AS Department, A.Name AS Employee, A.Salary FROM Department AS D INNER JOIN ( SELECT E1.DepartmentID, E1.Name, E1.Salary, COUNT(DISTINCT E2.SALARY) AS rnk FROM Employee E1 INNER JOIN Employee E2 ON E1.DepartmentID = E2.DepartmentID WHERE E1.Salary <= E2.Salary GROUP BY E1.DepartmentId, E1.Name, E1.Salary ) A ON D.Id = A.DepartmentID WHERE rnk <= 3 ORDER BY Department, Salary DESC, Employee
SELECT D.Name AS Department, E.Name AS Employee, E.Salary AS Salary FROM (SELECT *, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS S_Rank FROM Employee ) AS E JOIN Department AS D ON E.DepartmentId = D.Id WHERE S_Rank BETWEEN 1 AND 3
SELECT D.Name AS Department, E.Name AS Employee, E.Salary AS Salary FROM Employee AS E JOIN Department AS D ON E.DepartmentId = D.Id WHERE (SELECT COUNT(DISTINCT T.Salary) FROM Employee AS T WHERE T.DepartmentId = E.DepartmentId AND Salary>E.Salary) <= 2
SELECT D.Name AS Department, E.Name AS Employee, E.Salary AS Salary FROM Employee E INNER JOIN Department D ON E.DepartmentId = D.Id WHERE (SELECT COUNT(DISTINCT(Salary)) FROM Employee WHERE DepartmentId = E.DepartmentId AND Salary > E.Salary) < 3 ORDER by E.DepartmentId, E.Salary DESC
SELECT D.Name AS Department, E.Name AS Employee, E.Salary AS Salary FROM Employee E, Department D WHERE(SELECT COUNT(DISTINCT(Salary)) from Employee WHERE DepartmentId = E.DepartmentId AND Salary > E.Salary) in (0,1,2) AND E.DepartmentId = D.Id order by E.DepartmentId, E.Salary DESC
SELECT D.Name AS Department, T.Name as Employee, Salary FROM ( SELECT Employee.Name AS Name, Employee.Salary AS Salary, DepartmentId AS Id, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS SalaryRank FROM Employee ) AS T INNER JOIN Department AS D ON T.Id = D.Id WHERE T.SalaryRank <= 3 ORDER BY T.SalaryRank
SELECT D.Name as "Department", E.Employee, E.Salary FROM (SELECT Name as "Employee",Salary as Salary, DepartmentId, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) as myrank FROM Employee) as E INNER JOIN Department D ON D.Id=E.DepartmentId WHERE myrank<4
SELECT D.Name as Department , E.Name as Employee, E.Salary From Employee E JOIN Department D ON E.DepartmentId = D.Id WHERE 3> (select count(distinct e2.salary) from employee e2 where e2.salary>e.salary AND e.DepartmentId = e2.DepartmentId)
SELECT D.Name as Department, E.Name as Employee, E.Salary FROM Department D, Employee E, Employee E2 WHERE D.ID = E.DepartmentId and E.DepartmentId = E2.DepartmentId and E.Salary <= E2.Salary group by D.ID,E.Name having count(distinct E2.Salary) <= 3 order by D.Name, E.Salary desc
SELECT D.Name as Department, E.Name as Employee, E.Salary as Salary FROM Employee AS E INNER JOIN DEPARTMENT AS D ON E.DepartmentId=D.Id WHERE 3 > (SELECT COUNT(DISTINCT Salary) FROM Employee AS ESQ WHERE E.DepartmentId=ESQ.DepartmentId AND E.Salary<ESQ.Salary)
SELECT D.Name as Department, E.Name as Employee, E.Salary as Salary from Employee E inner Join Department D on E.DepartmentId = D.Id where (Select Count(distinct(Salary)) from Employee where DepartmentId = E.DepartmentId and salary > E.Salary) <3 order by E.DepartmentId, E.Salary DESC
SELECT D.Name as Department, E1.Name as Employee, E1.Salary as Salary FROM Employee as E1, Department as D WHERE ( SELECT Count(Distinct E2.Salary) FROM Employee as E2 WHERE E1.DepartmentId = E2.DepartmentId and E2.Salary > E1.Salary ) < 3 and E1.DepartmentId = D.Id
SELECT D.Name as Department, T.Employee, T.Salary FROM (SELECT E.DepartmentId, E.Name as Employee, E.Salary, DENSE_RANK() OVER (PARTITION BY E.DepartmentId ORDER BY E.Salary DESC) Rnk FROM Employee E) T JOIN Department D ON T.DepartmentId = D.Id WHERE T.Rnk <= 3
SELECT D.Name as Department, T.Name as Employee, T.Salary as Salary FROM (SELECT Id, Name, Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) as 'ranking', DepartmentId FROM Employee) as T JOIN Department D ON T.DepartmentId = D.Id WHERE T.ranking < 4
SELECT D.Name as Department, a.Name as Employee, Salary FROM (SELECT E.*, DENSE_RANK() OVER (Partition by DepartmentId Order by Salary desc) as ERank FROM Employee E) a join Department D on a.DepartmentId = D.Id Where ERank < 4
SELECT D.name "Department", E.name "Employee", E.salary FROM employee E JOIN department D on E.departmentid = D.id WHERE (SELECT COUNT(DISTINCT(E1.salary)) FROM employee E1 WHERE E.salary < E1.salary AND D.id = E1.departmentid ) < 3
SELECT D.name AS department, E.name AS employee, E.salary FROM (SELECT *, dense_rank() over (partition by departmentid order by salary desc) as D_rank FROM employee AS E order by departmentid, D_rank) AS E JOIN department AS D on D.id = E.departmentid where D_rank <= 3
SELECT DEP.NAME AS DEPARTMENT, EMP.NAME AS EMPLOYEE, SALARY FROM ( SELECT NAME, SALARY, DepartmentId ,DENSE_RANK() OVER (PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) AS 'SALARY_RANK' FROM EMPLOYEE) EMP inner JOIN DEPARTMENT DEP ON EMP.DEPARTMENTID = DEP.ID WHERE SALARY_RANK <=3
SELECT DEPARTMENT, EMPLOYEE, SALARY FROM ( SELECT D.NAME AS Department, E.NAME AS Employee, SALARY AS Salary, DENSE_RANK() OVER(PARTITION BY D.NAME ORDER BY E.SALARY DESC) AS RNK FROM EMPLOYEE E JOIN DEPARTMENT D ON E.DEPARTMENTID = D.ID ) A WHERE RNK <= 3
SELECT DEPARTMENT, EMPLOYEE, SALARY FROM ( SELECT D.NAME DEPARTMENT, E.NAME EMPLOYEE, E.SALARY, DENSE_RANK() OVER (PARTITION BY D.NAME ORDER BY E.SALARY DESC) AS SALARY_RANK FROM EMPLOYEE E INNER JOIN DEPARTMENT D ON E.DEPARTMENTID = D.ID ) ED WHERE SALARY_RANK <=3
SELECT DEPARTMENT, EMPLOYEE, SALARY FROM ( SELECT D.NAME DEPARTMENT, E.NAME EMPLOYEE, E.SALARY, DENSE_RANK() OVER(PARTITION BY D.NAME ORDER BY E.SALARY DESC) RNK FROM EMPLOYEE E LEFT JOIN DEPARTMENT D ON E.DEPARTMENTID = D.ID ) T WHERE RNK <= 3 AND DEPARTMENT IS NOT NULL
SELECT DISTINCT b.Name as Department, a.Name as Employee, a.Salary FROM Department b, Employee a, (SELECT Salary, DepartmentId, dense_rank() OVER( PARTITION BY DepartmentId ORDER BY Salary DESC) as rnk FROM Employee) c WHERE b.Id = a.DepartmentId and c.rnk <=3 and c.DepartmentId = a.DepartmentId and a.Salary >= c.Salary ORDER BY 1,3 DESC, 2 DESC
SELECT Department , Employee , Salary FROM ( SELECT d.Name as Department , e.Name as Employee , e.Salary , DENSE_RANK() OVER (Partition by d.Name ORDER BY e.Salary DESC) as dept_rk FROM Employee e INNER JOIN Department d ON e.DepartmentID = d.ID ) a WHERE dept_rk <= 3
SELECT Department, Employee, Salary FROM ( SELECT *, DENSE_RANK() OVER(PARTITION BY Department ORDER BY Salary DESC) AS salary_rank FROM ( SELECT e.Name AS Employee, e.Salary AS Salary, d.Name AS Department FROM Employee e LEFT JOIN Department d ON e.DepartmentId = d.Id ) t ) tt WHERE salary_rank <= 3 AND Department IS NOT NULL
SELECT Department, Employee, Salary FROM ( SELECT D.Name AS Department, E.Name AS Employee, E.Salary, DENSE_RANK() OVER(PARTITION BY D.Name ORDER BY E.Salary DESC) AS salary_rank FROM Employee AS E JOIN Department AS D ON E.DepartmentId = D.Id ) AS inner_table WHERE salary_rank <= 3
SELECT Department, Employee, Salary FROM ( SELECT D.Name AS Department, E.Name as Employee, Salary, Dense_Rank() Over (Partition by DepartmentId Order by Salary DESC) AS Salary_Rank FROM Employee AS E INNER JOIN Department AS D ON E.DepartmentId = D.Id )as subquery WHERE subquery.Salary_Rank <= 3 ORDER BY Department,Salary_Rank
SELECT Department, Employee, Salary FROM ( SELECT D.Name as Department, Salary, E.Name as Employee, DENSE_RANK() OVER(PARTITION BY D.Name ORDER BY Salary DESC) as ran FROM Employee as E JOIN Department as D ON E.DepartmentId = D.Id ) as a where ran <=3
SELECT Department, Employee, Salary FROM ( SELECT Department.Name AS Department, Employee.Name AS Employee, Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS RANK_SALARY FROM Employee INNER JOIN Department ON Employee.DepartmentId = Department.Id ) SQ WHERE SQ.RANK_SALARY <= 3 ORDER BY Department
SELECT Department, Employee, Salary FROM ( SELECT d.Name AS 'Department', e.Name AS 'Employee', e.Salary AS 'Salary', DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS 'rank' FROM Employee e JOIN Department d ON e.DepartmentId = d.Id ) t1 WHERE t1.rank <= 3
SELECT Department, Employee, Salary FROM ( SELECT d.Name AS Department , e.Name AS Employee , Salary , DENSE_RANK() OVER(PARTITION BY d.Id ORDER BY Salary DESC) AS dsrnk FROM Employee e INNER JOIN Department d ON e.DepartmentId = d.Id ) temp WHERE dsrnk <=3
SELECT Department, Employee, Salary FROM ( SELECT d.Name AS Department, E.Name AS Employee, E.Salary, E.DepartmentId, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS ranking FROM Employee E JOIN Department D ON E.DepartmentId = D.Id ) table_rank WHERE ranking <=3
SELECT Department, Employee, Salary FROM ( SELECT d.Name AS Department, e.Name AS Employee, e.Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS SalaryRnk FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) a WHERE SalaryRnk < 4
SELECT Department, Employee, Salary FROM ( SELECT d.Name Department, e.Name Employee, e.Salary, DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) salary_rank FROM Employee e JOIN Department d ON e.DepartmentId = d.Id ) ranked_salaries WHERE salary_rank <= 3
SELECT Department, Employee, Salary FROM ( SELECT d.Name as Department, e.Name as Employee, Salary, DENSE_RANK() OVER (Partition by e.DepartmentId Order by Salary DESC) salaryRank From Employee e Join Department d On e.DepartmentId = d.Id) s Where salaryRank < 4
SELECT Department, Employee, Salary FROM ( SELECT d.Name as Department, e.Name as Employee, e.Salary as Salary, DENSE_RANK () OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC ) sal_rank FROM Employee e JOIN Department d ON e.DepartmentId = d.ID ) T WHERE sal_rank <= 3
SELECT Department, Employee, Salary FROM ( SELECT d.Name as Department, e.Name as Employee, e.Salary,DENSE_RANK() OVER (PARTITION BY d.Name ORDER BY e.Salary DESC) as sal_rank FROM Employee e LEFT JOIN Department d ON e.DepartmentId = d.Id WHERE d.Id IS NOT NULL ) a WHERE sal_rank <=3
SELECT Department, Employee, Salary FROM ( SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary, dense_rank() OVER(PARTITION BY d.name ORDER BY e.salary DESC) AS r FROM employee e JOIN department d ON e.DepartmentId = d.Id) tmp WHERE r <= 3
SELECT Department, Employee, Salary FROM ( SELECT d2.name as Department, d1.Name as Employee, d1.Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS ranking FROM Employee as d1 JOIN Department as d2 ON d1.DepartmentId = d2.Id) as sub WHERE ranking IN (1,2,3)
SELECT Department, Employee, Salary FROM ( SELECT inb.Name AS Department, ina.Name AS Employee, ina.Salary, DENSE_RANK () OVER (PARTITION BY ina.DepartmentId ORDER BY Salary DESC) AS r_number FROM Employee AS ina JOIN Department AS inb ON ina.DepartmentId = inb.Id ) AS inc WHERE r_number <= 3
SELECT Department, Employee, Salary FROM (SELECT *,DENSE_RANK() OVER (PARTITION BY a.Department ORDER BY Salary DESC) as r FROM (SELECT Department.Name as `Department`, Employee.Name as `Employee`, Salary FROM Employee JOIN Department ON DepartmentID = Department.ID) a) q WHERE q.r = 1 OR q.r = 2 OR q.r = 3
SELECT Department, Employee, Salary FROM (SELECT DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) as DR, d.Name as Department, e.Name as Employee, e.Salary as Salary FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) t Where DR IN (1,2,3)
SELECT Department, Employee, Salary FROM (SELECT Department.Name AS Department, Employee.Name AS Employee, Salary, dense_rank() OVER (partition by Department.Name order by Salary desc) AS d_rank FROM Employee join Department on Employee.DepartmentId = Department.ID) AS R WHERE d_rank < 4
SELECT Department, Employee, Salary FROM (SELECT d.Name AS Department , e.Name AS Employee , e.Salary , DENSE_RANK() OVER(PARTITION BY d.Name ORDER BY Salary DESC) AS rnk FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) s WHERE rnk <= 3
SELECT Department, Employee, Salary FROM (SELECT d.Name AS Department, e.Name AS Employee, Salary, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS rk FROM Employee e, Department d WHERE e.DepartmentId = d.Id) tmp WHERE rk <=3
SELECT Department, Employee, Salary FROM (SELECT d.Name as Department, e.Name as 'Employee', e.Salary as Salary, DENSE_RANK() OVER(PARTITION BY e.DepartmentId Order by e.Salary DESC) AS rnk FROM Department as d JOIN Employee as e ON d.Id = e.DepartmentId ) as t WHERE rnk <= 3
SELECT Department, Employee, Salary FROM (SELECT d.name AS Department, e.Name AS Employee, e.Salary, DENSE_RANK() OVER(partition by d.name ORDER BY e.Salary DESC) AS r FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) AS temp WHERE r <= 3
SELECT Department, Employee, Salary FROM (SELECT d.name AS Department, e.name AS Employee, Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS rnk FROM Employee AS e JOIN Department AS d ON e.DepartmentId=d.Id) AS subquery WHERE rnk<=3
SELECT Department, Employee, Salary FROM( SELECT d.Name AS Department, e.Name AS Employee, e.Salary AS Salary, DENSE_RANK() OVER (PARTITION BY d.Name ORDER BY e.Salary DESC) AS row_num FROM Employee e INNER JOIN Department d ON d.Id = e.DepartmentId ) t WHERE row_num < 4
SELECT Department, Employee, Salary FROM( SELECT d.Name as Department, e.Name as Employee , Salary, DENSE_RANK() OVER (PARTITION BY d.NAME ORDER BY Salary DESC) as rk FROM Employee e JOIN Department d ON e.DepartmentId = d.Id )t WHERE rk <= 3
SELECT Department, Employee, Salary FROM( SELECT d.Name as Department, e.Name as Employee, Salary, DENSE_RANK() OVER( PARTITION BY e.DepartmentId ORDER BY Salary DESC) AS rank_num From Employee e JOIN Department d ON e.DepartmentId = d.Id) t where rank_num <=3 order by 1,3 DESC
SELECT Department, Employee, Salary FROM( SELECT d.name as Department, e.name as Employee, Salary, DENSE_RANK() OVER(PARTITION BY d.id ORDER BY salary DESC) as dRank FROM Employee e JOIN Department d ON e.departmentId=d.id ) as k WHERE dRank<=3
SELECT Department, Employee, salary FROM ( SELECT DENSE_RANK() OVER(PARTITION BY e.departmentid ORDER BY salary DESC) AS r, d.name AS Department, e.name AS Employee, salary FROM employee e JOIN department d ON e.departmentid = d.id ) AS ranked WHERE r <= 3
SELECT Department, Name AS Employee, Salary FROM (SELECT e.*, d.Name AS Department, DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) AS rnk FROM Employee e JOIN Department d ON e.DepartmentId=d.Id) t WHERE rnk=1 OR rnk=2 OR rnk=3
SELECT Department, employee, salary FROM ( SELECT d.name AS Department , e.name AS employee , e.salary , DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY e.salary DESC) AS drk FROM Employee e JOIN Department d ON e.DepartmentId= d.Id ) t WHERE t.drk <= 3
SELECT Department, employee, salary FROM ( SELECT d.name AS Department , e.name AS employee , e.salary , DENSE_RANK() OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS drk FROM Employee e JOIN Department d ON e.DepartmentId= d.Id ) t WHERE t.drk <= 3
SELECT Department,Employee, Salary FROM ( SELECT D.Name as 'Department', E.Name as 'Employee', E.Salary, dense_rank() OVER (partition by DepartmentId ORDER BY Salary DESC) as 'SalaryRank' FROM Employee E JOIN Department D ON D.ID = E.DepartmentId) a WHERE SalaryRank <= 3
SELECT Department,Employee, Salary FROM ( SELECT b.name as Department, a.name as Employee, a.Salary, DENSE_RANK() OVER (PARTITION BY b.name ORDER BY a.Salary DESC) as rnk FROM Employee a INNER JOIN Department b ON a.DepartmentId = b.id ) rankings where rnk < 4
SELECT Department.NAME AS Department, Employee_partition.Name As Employee, Employee_partition.Salary AS Salary FROM (SELECT Name, DepartmentId, Salary, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS R FROM Employee) As Employee_partition JOIN Department ON Department.Id = Employee_partition.DepartmentId WHERE R >= 1 AND R <=3
SELECT Department.Name AS Department, E.Name AS Employee, E.Salary FROM( SELECT Employee.*, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Employee.Salary DESC) AS sal_rank FROM Employee ) E JOIN Department ON E.DepartmentId = Department.Id WHERE sal_rank <= 3
SELECT Department.Name AS Department, Employee.Name AS Employee, Employee.Salary FROM (SELECT DepartmentId, MIN(Salary) AS Salary FROM (SELECT DepartmentId, Salary, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS row_num FROM Employee) temp_temp_table WHERE row_num < 4 GROUP BY DepartmentId) temp_table JOIN Department JOIN Employee ON temp_table.DepartmentId = Department.Id AND Employee.DepartmentId = temp_table.DepartmentId AND Employee.Salary >= temp_table.Salary
SELECT Department.Name As Department, Ranked.Name As Employee, Salary FROM (SELECT *, DENSE_RANK() OVER (PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) as PayRank FROM EMPLOYEE) AS RANKED JOIN DEPARTMENT ON RANKED.DEPARTMENTID = DEPARTMENT.ID WHERE PayRank <= 3
SELECT Department.Name as "Department", r.Name as "Employee", r.Salary AS "Salary" FROM ( SELECT Employee.*, Dense_Rank() OVER ( PARTITION BY DepartmentId ORDER BY Salary DESC ) AS "Rank" From Employee ) r JOIN Department ON r.DepartmentId = Department.Id WHERE r.Rank <= 3
SELECT Department.Name as Department, e1.Name as Employee, Salary FROM Department JOIN Employee e1 ON e1.DepartmentId = Department.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT Department.Name as Department, e1.Name as Employee, e1.Salary FROM Employee e1 INNER JOIN Department ON e1.DepartmentId = Department.Id WHERE (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.DepartmentId = e1.DepartmentId AND e2.Salary > e1.Salary) < 3
SELECT Department.Name as Department, e1.Name as Employee, e1.Salary as Salary FROM Employee as e1 INNER JOIN Department ON e1.DepartmentId = Department.Id WHERE 3 > ( SELECT count(DISTINCT e2.Salary) FROM Employee as e2 WHERE e2.Salary > e1.Salary AND e2.DepartmentId = e1.DepartmentId ) ORDER BY Department, Salary DESC
SELECT Department.name AS Department, e1.Name AS Employee, e1.Salary FROM Department INNER JOIN Employee e1 on e1.DepartmentId = Department.Id WHERE 3 > ( SELECT COUNT(distinct(e2.Salary)) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT Employee, Department, Salary FROM ( SELECT Employee.Name AS 'Employee', Department.Name AS 'Department', Salary , DENSE_RANK() OVER (PARTITION BY Department.Name ORDER BY Salary DESC) Ranking FROM Employee INNER JOIN Department ON Employee.DepartmentId = Department.Id ) AS Emp2 WHERE Ranking=1 OR Ranking=2 OR Ranking=3
SELECT Name as 'Department', Employee, Salary FROM ( SELECT Salary, Name as 'Employee', DepartmentId, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) as salaryRank FROM Employee) as withSalaryRank LEFT JOIN Department ON withSalaryRank.DepartmentId = Department.Id WHERE salaryRank < 4 AND Name IS NOT NULL
SELECT Name as Department, Employee, Salary FROM (SELECT Employee, DepartmentId, Salary FROM (SELECT Name as Employee, DepartmentId, Salary, DENSE_RANK() OVER ( PARTITION BY DepartmentId ORDER BY Salary DESC ) as RankVal FROM Employee) a WHERE RankVal <= 3) b JOIN Department c ON (b.DepartmentId = c.Id)
SELECT RES.Department, RES.Employee, RES.Salary FROM (SELECT D.NAME AS Department, E.NAME AS Employee, E.SALARY AS Salary, DENSE_RANK() OVER(PARTITION BY D.NAME ORDER BY E.SALARY DESC) AS DEP_TOP FROM EMPLOYEE E, DEPARTMENT D WHERE E.DEPARTMENTID = D.ID) RES WHERE RES.DEP_TOP <= 3
SELECT SQ2.Name Department, SQ2.EName Employee, SQ2.Salary FROM (SELECT SQ1.Name, SQ1.EName, SQ1.Salary, DENSE_RANK() OVER (PARTITION BY SQ1.Name ORDER BY SQ1.SALARY DESC) AS 'sal_rank' FROM( SELECT E.ID EID, E.Name EName, E.Salary, E.DepartmentID, D.Id, D.Name FROM Employee AS E LEFT JOIN Department AS D ON E.DepartmentID = D.ID) AS SQ1 ORDER BY SQ1.Name, SQ1.Salary DESC, SQ1.EName) AS SQ2 WHERE SQ2.sal_rank <=3 AND SQ2.Name IS NOT NULL
SELECT T.DepartmentName Department, T.EmployeeName Employee, T.Salary Salary FROM ( SELECT E.Name EmployeeName, E.Salary Salary, E.DepartmentId DepartmentId, D.Name DepartmentName, DENSE_RANK() OVER (PARTITION BY D.Name ORDER BY E.Salary DESC) salary_rank FROM Employee E INNER JOIN Department D ON E.DepartmentID = D.Id ) T WHERE salary_rank <= 3
SELECT a.Department, a.Employee, a. Salary FROM (SELECT d.Name as Department, e.Name as Employee, e.Salary as Salary, DENSE_RANK() OVER(partition by d.Name order by e.Salary desc) as rank_inner FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) as a WHERE a.rank_inner <= 3
SELECT a.Department, a.Employee, a. Salary FROM (SELECT d.Name as Department, e.Name as Employee, e.Salary as Salary, DENSE_RANK() OVER(partition by d.Name order by e.Salary desc) as rank_inner FROM Employee e JOIN Department d WHERE e.DepartmentId = d.Id) as a WHERE a.rank_inner <= 3
SELECT a.Department, a.Employee, a.Salary FROM ( Select b.Name as Department,a.Name as Employee,a.salary As Salary, DENSE_RANK() over (PARTITION BY b.Name ORDER BY a.Salary DESC) as dept_sal_rank from Employee a INNER JOIN Department b ON a.DepartmentId = b.Id ) a where a.dept_sal_Rank <=3
SELECT a.Department,a.Employee,a.Salary FROM ( SELECT d.Name as Department,e.Name as Employee,Salary,DENSE_RANK() OVER(Partition by DepartmentID Order by Salary DESC) As rango FROM Employee e JOIN Department d ON d.ID=e.DepartmentID) a WHERE a.rango<4
SELECT a.DeptName as Department, a.Name as Employee, a.Salary as Salary FROM (SELECT e.Name as Name ,e.Salary as Salary,d.Name as DeptName,DENSE_RANK() OVER(PARTITION BY d.Name ORDER BY e.Salary DESC) AS 'Rank' FROM Employee as e LEFT JOIN Department AS d ON e.DepartmentId = d.Id ORDER BY 'Rank') as a WHERE (a.Rank <= 3) AND (a.DeptName is not NULL)
SELECT b.Name AS Department, a.Name AS Employee, a.Salary FROM Employee a JOIN Department b ON a.DepartmentId = b.Id AND 3 > ( SELECT COUNT(DISTINCT e.Salary) FROM Employee e WHERE a.DepartmentId = e.DepartmentId AND e.Salary > a.Salary )
SELECT b.Name Department, a.Name Employee, a.Salary FROM ( SELECT Name, Salary, DepartmentId, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) DR FROM Employee ) a JOIN Department b ON a.DepartmentId = b.Id WHERE DR <= 3
SELECT c.Department, c.Employee, c.Salary FROM ( SELECT e.Name Employee, Salary, d.Name Department, DENSE_RANK() OVER( PARTITION BY d.Name ORDER BY Salary DESC ) AS salary_rank FROM Employee AS e INNER JOIN Department AS d WHERE e.DepartmentId = d.Id ) AS c WHERE salary_rank <= 3
SELECT d.Name 'Department', e1.Name 'Employee', e1.Salary FROM Employee e1 INNER JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT(e2.Salary)) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS "Department", e.Name AS "Employee", e.Salary FROM (SELECT Id, Name, Salary, DepartmentId, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) sal_rank FROM Employee ) e JOIN Department d ON e.DepartmentId = d.id WHERE e.sal_rank <= 3
SELECT d.Name AS "Department", f.Name AS "Employee", f.Salary as "Salary" FROM (SELECT e.Name, e.Salary, e.DepartmentId, DENSE_RANK() OVER(PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) AS "Rank" FROM Employee e) f JOIN Department d ON d.Id = f.DepartmentId WHERE f.Rank <= 3
SELECT d.Name AS 'Department', e.Name AS 'Employee', e.Salary FROM Employee AS e INNER JOIN Department AS d ON e.DepartmentId = d.id WHERE 3 > (SELECT COUNT(DISTINCT Salary) FROM Employee WHERE e.Salary < Salary &amp;&amp; DepartmentId = e.DepartmentId)
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Department d JOIN Employee e1 ON d.Id = e1.DepartmentId JOIN Employee e2 ON e1.DepartmentId = e2.DepartmentId AND e1.Salary <= e2.Salary GROUP BY e1.DepartmentId, e1.Id HAVING COUNT(DISTINCT e2.Salary) <= 3
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Department d JOIN Employee e1 ON d.Id = e1.DepartmentId JOIN Employee e2 ON e1.DepartmentId = e2.DepartmentId AND e1.Salary <= e2.Salary GROUP BY e1.Id HAVING COUNT(DISTINCT e2.Salary) <= 3
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee AS e1 JOIN Department AS d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId)
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId ) < 3
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e1.DepartmentId = e2.DepartmentId AND e2.Salary > e1.Salary )
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId)
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > (Select count(distinct e2.salary) from Employee e2 where e2.Salary > e1. Salary AND e1.DepartmentID = e2.DepartmentID)
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3> (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id where 3 > (select count(distinct salary) from employee e2 where e2.salary > e1.salary and e1.DepartmentId =e2.DepartmentId)
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM Employee e1 inner JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERe e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId)
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary FROM employee e1 JOIN department d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary from Employee e1 JOIN Department d ON e1.DepartmentId = d.Id where 3 > ( select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS 'Department', e1.name AS 'Employee', e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS 'Department', sub.Name AS 'Employee', sub.Salary FROM (SELECT e.*, DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) AS Deprank FROM Employee e) sub JOIN Department d ON sub.DepartmentId = d.Id WHERE Deprank <=3
SELECT d.Name AS Department , e1.Name AS Employee, e1.Salary AS Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e1.DepartmentId = e2.DepartmentId AND e1.Salary < e2.Salary )
SELECT d.Name AS Department ,T.Name AS Employee, T.Salary FROM (SELECT DepartmentId, Name , Salary , DENSE_RANK() OVER (PARTITION BY DepartmentID ORDER BY Salary DESC ) as A FROM Employee ) AS T JOIN Department AS d ON T.DepartmentId = d.Id WHERE T.A <4
SELECT d.Name AS Department, a.Name AS Employee, a.Salary FROM (SELECT e.*, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS DeptRank FROM Employee e) a JOIN Department d ON a.DepartmentId = d.Id WHERE a.DeptRank <= 3
SELECT d.Name AS Department, e.Name AS Employee , e.Salary FROM Employee AS e, Employee as e1, Department AS d WHERE e.DepartmentId = d.Id AND e1.DepartmentId = e.DepartmentId AND e1.Salary >= e.Salary GROUP BY e.Id HAVING COUNT(DISTINCT e1.Salary) <= 3
SELECT d.Name AS Department, e.Name AS Employee, Salary FROM Employee e JOIN Department d ON e.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT Salary) FROM Employee WHERE e.DepartmentId = DepartmentId AND Salary > e.Salary )
SELECT d.Name AS Department, e.Name AS Employee, Salary FROM Employee e JOIN Department d ON e.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e.Salary AND e.DepartmentId = e2.DepartmentId)
SELECT d.Name AS Department, e.Name AS Employee, e.Salary FROM ( SELECT DISTINCT Salary, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY SALARY DESC) AS rankk, DepartmentId FROM Employee ) topbydep JOIN Employee e ON e.Salary = topbydep.Salary AND e.DepartmentId = topbydep.DepartmentId JOIN Department d ON topbydep.DepartmentId = d.Id WHERE topbydep.rankk < 4
SELECT d.Name AS Department, e.Name AS Employee, e.Salary FROM Department d JOIN Employee e ON d.Id = e.DepartmentId JOIN (SELECT Id, DepartmentId, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary Desc) AS 'rank' FROM Employee ) r ON e.Id = r.Id AND d.Id = r.DepartmentId WHERE r.rank = 1 OR r.rank = 2 OR r.rank = 3
SELECT d.Name AS Department, e.Name AS Employee, e.Salary FROM Employee e JOIN Department d on e.DepartmentId = d.Id WHERE (SELECT COUNT(DISTINCT Salary) FROM Employee WHERE Salary > e.Salary AND DepartmentId = d.Id) < 3 ORDER BY d.Name, e.Salary DESC
SELECT d.Name AS Department, e.Name AS Employee, e.Salary FROM Employee e JOIN Department d on e.DepartmentId = d.Id WHERE (SELECT COUNT(DISTINCT Salary) FROM Employee WHERE Salary > e.Salary AND DepartmentId = d.Id) < 3 ORDER BY e.Salary DESC
SELECT d.Name AS Department, e.Name AS Employee, e.Salary FROM Employee e, Department d, (SELECT MIN(Salary) AS Salary, DepartmentId FROM ( SELECT Salary, DepartmentId FROM ( SELECT Salary, DepartmentId, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS Num FROM Employee) m WHERE m.Num <=3 ) t GROUP BY DepartmentId ) r WHERE e.DepartmentId = d.Id AND r.DepartmentId = d.Id AND r.Salary <= e.Salary
SELECT d.Name AS Department, e.Name AS Employee, e.Salary FROM( SELECT *, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS salary_rank FROM Employee) e JOIN Department d ON d.Id = e.DepartmentId WHERE salary_rank <4
SELECT d.Name AS Department, e.Name AS employee, e.Salary AS Salary FROM Employee e LEFT JOIN Department d ON e.DepartmentId = d.Id WHERE ( SELECT COUNT(DISTINCT Salary) FROM Employee WHERE DepartmentId = e.DepartmentId AND Salary > e.Salary) <= 2 AND d.Id IS NOT NULL
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary AS Salary FROM Department d JOIN Employee e1 ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT count(distinct e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary AS Salary FROM Employee e1 INNER JOIN Department d ON e1.DepartmentId = d.Id WHERE (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e2.DepartmentId = e1.DepartmentId ) < 3
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary AS Salary FROM Employee e1 INNER JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT e2.salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e2.DepartmentId = e1.DepartmentId )
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary AS Salary FROM Employee e1 INNER JOIN Department d ON e1.DepartmentId = d.id WHERE 3 > ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary FROM (Employee as e1 JOIN Department as d ON e1.DepartmentId = d.Id) LEFT JOIN Employee AS e2 ON e1.DepartmentId = e2.DepartmentId AND e1.Salary <= e2.Salary GROUP BY e1.Id HAVING count(distinct e2.Salary) <= 3 ORDER BY e1.DepartmentId, e1.Salary DESC
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary FROM Department d JOIN Employee e1 ON d.Id = e1.DepartmentId WHERE 3 > ( SELECT COUNT(DISTINCT(SALARY)) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary FROM Employee AS e1 JOIN Department AS d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary and e2.DepartmentId = e1.DepartmentId)
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary FROM Employee e1 INNER JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId)
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary FROM Employee e1 JOIN Department d ON d.Id = e1.DepartmentId WHERE 3 > ( SELECT COUNT(DISTINCT(e2.Salary)) FROM Employee e2 WHERE e1.DepartmentId = e2.DepartmentId AND e1.Salary < e2.Salary ) ORDER BY e1.Name, e1.Salary DESC
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentID = d.Id WHERE 3 > (SELECT(COUNT(DISTINCT e2.Salary)) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId)
SELECT d.Name AS Department, e1.Name AS Employee, e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId)
SELECT d.Name AS Department, e2.Name AS Employee, e2.Salary FROM ( Department d LEFT JOIN (SELECT e.*, DENSE_RANK() OVER ( PARTITION BY e.DepartmentId ORDER BY e.Salary DESC ) as r FROM Employee e) e2 ON e2.DepartmentId = d.Id ) WHERE e2.r <= 3
SELECT d.Name AS Department, tmp.Employee AS Employee, tmp.Salary AS Salary FROM Department d JOIN (SELECT e1.Name AS Employee, e1.Salary, e1.DepartmentId FROM Employee e1, Employee e2 WHERE e2.Salary >= e1.Salary AND e1.DepartmentId = e2.DepartmentId GROUP BY e1.Id HAVING COUNT(DISTINCT e2.Salary) <= 3) tmp ON tmp.DepartmentId = d.Id
SELECT d.Name AS Department, tmp.Name AS Employee, tmp.Salary FROM Department AS d LEFT JOIN (SELECT *, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS SalaryRank FROM Employee) AS tmp ON d.Id = tmp.DepartmentId WHERE SalaryRank <= 3
SELECT d.Name As Department, emp.Name As Employee, emp.Salary FROM (SELECT e.Name, e.DepartmentId, e.Salary , DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS R FROM Employee e) AS emp join Department d where d.Id = emp.DepartmentId AND emp.R <=3
SELECT d.Name Department, E.Name Employee,E.Salary FROM Employee E join Department d on E.DepartmentId = d.Id WHERE (SELECT COUNT(DISTINCT Salary) FROM Employee E1 WHERE E1.DepartmentId = E.DepartmentId AND E1.Salary >= E.Salary) <= 3
SELECT d.Name Department, e.Name Employee, Salary FROM Employee e JOIN Department d ON e.DepartmentId = d.Id WHERE 3>= (select count(*) FROM (SELECT distinct Salary s, DepartmentId y FROM Employee ) t WHERE e.Salary <= s and e.DepartmentId = y )
SELECT d.Name Department, e.Name Employee, e.Salary FROM Department d LEFT JOIN (SELECT *, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) d_sal_rank FROM Employee) e ON d.Id = e.DepartmentId WHERE d_sal_rank <=3 ORDER BY Department, Salary DESC
SELECT d.Name Department, e.Name Employee, e.Salary FROM Employee e LEFT JOIN Department d ON d.Id = e.DepartmentId WHERE 3 > (SELECT COUNT(DISTINCT Salary) FROM Employee WHERE Salary > e.Salary AND DepartmentId = e.DepartmentId) HAVING d.Name IS NOT NULL
SELECT d.Name Department, e1.Name Employee, Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId)
SELECT d.Name Department, sub.Employee, sub.Salary FROM (SELECT e.DepartmentId, e.Name Employee, e.Salary, DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) ranks FROM Employee e ) sub JOIN Department d on sub.DepartmentId = d.Id WHERE ranks <= 3 ORDER BY Department, Salary DESC
SELECT d.Name Department, t.name Employee, t.Salary FROM (SELECT name, salary, departmentid, dense_rank()OVER(PARTITION BY departmentid ORDER BY salary DESC) rnk FROM employee) t JOIN department d ON t.departmentid=d.id WHERE t.rnk<4
SELECT d.Name as "Department", a.Name as "Employee", a.Salary FROM ( SELECT Salary, Name, DepartmentId, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) as "rank" FROM Employee ) a LEFT JOIN Department d ON a.DepartmentId = d.Id WHERE a.rank <= 3 and d.Name IS NOT NULL
SELECT d.Name as "Department", e.Name as "Employee", e.Salary as "Salary" FROM Employee as e JOIN Department as d ON e.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 Where e2.Salary > e.Salary AND e.DepartmentId = e2.DepartmentId )
SELECT d.Name as "Department", e1.Name as "Employee", e1.Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId)
SELECT d.Name as "Department", e1.Name as "Employee", e1.Salary as "Salary" FROM Employee e1 JOIN Department d ON d.id = e1.DepartmentId WHERE 3 > ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
SELECT d.Name as 'Department' ,a.Name as 'Employee', a.Salary as 'Salary' FROM( SELECT e.DepartmentId, e.Name, e.Salary, DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) as RNK FROM Employee e ) A INNER JOIN Department d ON d.Id = A.DepartmentId WHERE RNK <= 3
SELECT d.Name as 'Department', e1.Name as 'Employee', Salary FROM Employee e1 JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e1.Departmentid = e2.DepartmentId AND e2.Salary > e1.Salary )
SELECT d.Name as Department , t1.Employee as Employee , t1.Salary as Salary FROM ( SELECT e.DepartmentId , e.Name as Employee , e.Salary as Salary , DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) AS rank_ FROM Employee e) t1 INNER JOIN Department d ON d.Id = t1.DepartmentId WHERE t1.rank_ <= 3
SELECT d.Name as Department, RankData.Name as Employee, RankData.Salary FROM (SELECT Id, Name, DepartmentId, Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) as SalaryRank FROM Employee ) RankData INNER JOIN Department d ON d.Id = RankData.DepartmentId WHERE RankData.SalaryRank <= 3
SELECT d.Name as Department, e.Name as Employee, e.Salary FROM Department d RIGHT JOIN ( SELECT DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) as salary_rank, Id, Name, Salary, DepartmentId FROM Employee ) e ON e.DepartmentId = d.Id WHERE e.salary_rank <= 3 and d.Name is not Null
SELECT d.Name as Department, e.Name as Employee, e.Salary FROM Employee AS e JOIN Department AS d ON e.DepartmentId = d.Id WHERE NOT EXISTS ( SELECT 1 FROM Employee AS ex WHERE ex.DepartmentId = e.DepartmentId AND ex.Salary > e.Salary HAVING COUNT(DISTINCT ex.Salary) >= 3 )
SELECT d.Name as Department, e.Name as Employee, e.Salary FROM Employee as e Join Department as d on e.DepartmentId = d.Id Left Join ( SELECT Salary, DepartmentId, rank() over( Partition by DepartmentId Order by Salary Desc) as rnk FROM Employee Group by DepartmentId, Salary ) as t on t.Salary = e.Salary AND t.DepartmentId = e.DepartmentId Where t.rnk <= 3
SELECT d.Name as Department, e.Name as Employee, e.Salary as Salary FROM Employee e JOIN ( SELECT DepartmentId, Salary, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) as row_cnt FROM ( SELECT DepartmentId, Salary FROM Employee GROUP BY DepartmentId, Salary ) a ) b ON e.DepartmentId = b.DepartmentId AND e.Salary = b.Salary JOIN Department d on e.DepartmentId = d.Id WHERE b.row_cnt <= 3
SELECT d.Name as Department, e.Name as Employee, e.Salary from Employee e JOIN Department d ON e.DepartmentId = d.Id WHERE (SELECT COUNT( distinct e2.Salary ) from Employee e2 where e2.Salary > e.Salary and e2.DepartmentId = e.DepartmentId ) < 3
SELECT d.Name as Department, e1.Name as Employee, e1.Salary FROM Department d JOIN Employee e1 ON d.Id = e1.DepartmentId JOIN Employee e2 ON e1.DepartmentId = e2.DepartmentId AND e1.Salary <= e2.Salary GROUP BY 1, e1.DepartmentId, e1.Name HAVING COUNT(DISTINCT e2.Salary) <= 3
SELECT d.Name as Department, e1.Name as Employee, e1.Salary as Salary FROM Employee as e1 INNER JOIN Department d ON e1.DepartmentId = d.Id WHERE 3 > ( SELECT COUNT(DISTINCT Salary) FROM Employee as e2 WHERE e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId ) ORDER BY d.Name ASC, e1.Salary DESC
SELECT d.Name as `Department`,rank_list1.Name as `Employee`, rank_list1.Salary FROM ( SELECT *,DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS RankP FROM Employee ) rank_list1 inner join Department as d on d.Id = rank_list1.DepartmentId WHERE RankP <=3
SELECT d.name AS 'Department', e1.name AS 'Employee', e1.salary FROM Employee e1 JOIN Department d ON d.id = e1.DepartmentId WHERE (SELECT count(distinct(e2.salary)) FROM Employee e2 WHERE e2.salary > e1.salary AND e1.departmentId = e2.departmentId) < 3
SELECT d.name AS Department, e.name AS Employee, e.salary FROM department d JOIN ( SELECT DepartmentId, Name, Salary, DENSE_RANK() OVER(PARTITION BY departmentid ORDER BY salary DESC) AS rnk FROM employee ) e ON d.id = e.departmentid WHERE e.rnk IN (1,2,3)
SELECT d.name AS Department, e1.Name AS Employee, e1.Salary AS Salary FROM Employee e1 JOIN Employee e2 JOIN Department d WHERE e1.DepartmentId = e2.DepartmentId AND e1.Salary <= e2.Salary AND d.id = e2.DepartmentId GROUP BY d.name, e1.id HAVING COUNT(DISTINCT(e2.Salary)) <= 3 ORDER BY d.name, salary DESC
SELECT d.name AS Department, y.name AS Employee, y.salary FROM (SELECT * FROM employee AS e WHERE (departmentid, salary) IN (SELECT x.departmentid, x.salary FROM (SELECT departmentid, salary, DENSE_RANK() OVER(PARTITION BY departmentid ORDER BY salary DESC) s_rank FROM employee) AS x WHERE s_rank IN (1,2,3))) AS y JOIN department d ON (y.departmentid=d.id)
SELECT d.name AS department, e.name AS employee, salary FROM employee e LEFT JOIN department d ON e.departmentid = d.id WHERE 3 >= (select count(distinct e2.salary) from employee e2 where e2.salary >= e.salary and e2.departmentid = e.departmentid) AND d.name IS NOT NULL
SELECT d.name AS department, e1.Name AS employee, e1.Salary AS salary FROM Employee e1 INNER JOIN Department d ON e1.departmentId = d.id WHERE ( SELECT COUNT(DISTINCT e2.salary) FROM Employee e2 WHERE e1.departmentId = e2.departmentId AND e2.salary > e1.salary ) < 3
SELECT d.name Department, e.Name Employee, Salary FROM Employee e JOIN Department d ON e.DepartmentId = d.Id WHERE (SELECT count(distinct salary) FROM Employee WHERE e.DepartmentId = DepartmentId and salary > e.salary) < 3
SELECT d.name Department, e.name Employee, e.Salary FROM (SELECT *, DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) salaryRank FROM employee) e INNER JOIN department d ON e.departmentId = d.id WHERE e.salaryRank <= 3
SELECT d.name as "Department" ,e1.Name as "Employee" , e1.Salary as "Salary" FROM Employee e1 JOIN Employee e2 JOIN Department d WHERE e1.DepartmentId = e2.DepartmentId AND e1.Salary <= e2.Salary AND d.id = e2.DepartmentId GROUP BY d.name,e1.id HAVING COUNT(DISTINCT(e2.Salary)) <= 3
SELECT d.name as "Department" ,e1.Name as "Employee" , e1.Salary as "Salary" FROM Employee e1 JOIN Employee e2 JOIN Department d WHERE e1.DepartmentId = e2.DepartmentId AND e1.Salary <= e2.Salary AND d.id = e2.DepartmentId GROUP BY d.name,e1.id HAVING COUNT(DISTINCT(e2.Salary)) <= 3 order by d.name , salary desc
SELECT d.name as "Department", e1.Name as "Employee", e1.Salary as "Salary" FROM Employee e1 JOIN Employee e2 JOIN Department d WHERE e1.DepartmentId = e2.DepartmentId AND e1.Salary <= e2.Salary AND d.Id = e2.DepartmentId GROUP BY d.name, e1.id HAVING COUNT(DISTINCT(e2.Salary)) <= 3 ORDER BY d.name, salary DESC
SELECT d.name as 'Department', e1.name as 'Employee', e1.salary FROM employee e1 JOIN department d ON e1.departmentID = d.id WHERE 3 > ( SELECT count(distinct e2.salary) FROM employee e2 WHERE e2.salary > e1.salary AND e1.departmentid = e2.departmentid )
SELECT d.name as Department, e.name as Employee, Salary FROM Department d JOIN (SELECT DepartmentId, Name, Salary, dense_rank() Over(Partition by DepartmentId Order by Salary DESC) as rnk FROM Employee) e ON d.Id = e.DepartmentId WHERE rnk < 4
SELECT d.name as Department, e1.name as Employee, e1.salary FROM employee e1 JOIN department d ON e1.departmentid = d.id WHERE ( SELECT COUNT(DISTINCT e2.salary) FROM employee e2 WHERE e2.salary > e1.salary AND e2.departmentid = e1.departmentid ) < 3
SELECT dep.Name AS 'Department', emp1.Name AS 'Employee', emp1.Salary FROM Employee emp1 JOIN Department dep ON dep.Id = emp1.DepartmentId WHERE 3 > ( SELECT COUNT(DISTINCT emp2.Salary) FROM Employee emp2 WHERE emp2.Salary > emp1.Salary AND emp2.DepartmentId = emp1.DepartmentId )
SELECT department, employee, salary FROM ( SELECT d.name AS department,e.name AS employee, salary, DENSE_RANK() OVER (PARTITION BY departmentid ORDER BY salary DESC) AS rnk FROM employee e INNER JOIN department d ON e.departmentid = d.id ) a WHERE rnk <= 3
SELECT department, employee, salary FROM ( SELECT e.name AS 'employee', e.salary, DENSE_RANK() OVER(PARTITION BY e.departmentid ORDER BY e.salary DESC) AS row_num, d.name AS 'department' FROM employee e JOIN department d ON e.departmentid = d.id ) a WHERE row_num <=3
SELECT department, employee, salary FROM (SELECT b.name as Department , a.name as Employee , salary , DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) as salary_level FROM employee a inner join Department b on a.DepartmentId = b.id) c WHERE salary_level <= 3
SELECT department,employee,salary FROM( SELECT D.NAME as Department,E.NAME as employee,E.SALARY, DENSE_RANK() OVER(PARTITION BY E.departmentid order by salary DESC) AS RNK FROM EMPLOYEE AS E INNER JOIN DEPARTMENT AS D ON E.DEPARTMENTID=D.ID ) X WHERE RNK<=3
SELECT dept.Name AS Department, emp.Name AS Employee, emp.Salary AS Salary FROM (SELECT e.Id, e.Name, e.Salary, e.DepartmentId, DENSE_RANK() OVER(PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) DeptRank FROM Employee e) emp JOIN Department dept ON emp.DepartmentId=dept.Id WHERE DeptRank<=3
SELECT dept.department ,dept.employee ,dept.salary FROM( SELECT d.name AS department ,e.name AS employee ,e.salary ,dense_rank() over(partition by d.id order by e.salary desc) as 'rank' FROM employee e INNER JOIN department d ON e.departmentid = d.id ) dept WHERE dept.rank <= 3
SELECT distinct R.Department, Employee.Name AS Employee, R.Salary as Salary FROM (SELECT DepartmentId, Department.Name AS Department, Salary, DENSE_RANK() OVER(PARTITION BY Employee.DepartmentId ORDER BY Salary DESC) AS rankedSalary from Employee join Department on Department.Id = Employee.DepartmentId) AS R LEFT JOIN Employee ON Employee.Salary = R.Salary AND Employee.DepartmentId = R.DepartmentId WHERE rankedSalary < 4
SELECT dp.Name AS Department, ep.Name AS Employee, ep.Salary AS Salary FROM ( SELECT *, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS rnk FROM Employee ) AS ep INNER JOIN Department dp ON dp.Id = ep.DepartmentId AND ep.rnk < 4 ORDER BY DepartmentId, Salary
SELECT dp.Name AS Department, ep.Name AS Employee, ep.Salary AS Salary FROM ( SELECT *, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS rnk FROM Employee ) AS ep INNER JOIN Department dp ON dp.Id = ep.DepartmentId WHERE ep.rnk < 4 ORDER BY DepartmentId, Salary
SELECT e.Salary, Department, Employee FROM ( SELECT e.DepartmentId, e.Salary, d.Name AS Department, e.Name AS Employee, dense_rank() over (PARTITION BY d.Name ORDER BY e.Salary desc) as Ranking FROM Employee e JOIN Department d on e.DepartmentId = d.Id) e join Department d on d.Id = E.DepartmentId where Ranking <= 3
SELECT ed.Department, ed.Employee, ed.Salary FROM ( SELECT d.name as Department,e.name as Employee, e.salary as Salary, DENSE_RANK() OVER (partition by DepartmentId order by Salary desc) as 'Rank' FROM Employee e JOIN Department d ON e.DepartmentId = d.Id ) ed WHERE ed.Rank <= 3
SELECT n2 AS Department, n1 AS Employee, Salary FROM ( SELECT a.Salary, a.name AS n1, b.name as n2, departmentId, dense_rank() OVER (partition by DepartmentId order by salary DESC) AS r FROM Employee AS a INNER JOIN Department as b ON departmentId = b.id ) AS temp WHERE r < 4
SELECT ranked.Department, ranked.NAME as Employee, ranked.Salary as Salary FROM ( SELECT Employee.*, Department.NAME as Department, DENSE_RANK() OVER (PARTITION BY Department.Name ORDER BY Salary DESC) AS ranks FROM Employee JOIN Department ON Employee.DepartmentId = Department.ID ) ranked WHERE ranks <= 3
SELECT ranked.Department, ranked.NAME as Employee, ranked.Salary as Salary FROM ( SELECT Employee.*, Department.NAME as Department, dense_rank() OVER (PARTITION BY Department.Name ORDER BY Salary DESC) AS ranks FROM Employee JOIN Department ON Employee.DepartmentId = Department.ID ) ranked WHERE ranks <= 3
SELECT t.Department, t.Employee, t.Salary FROM (SELECT d.Name AS Department, e.Name AS Employee, e.Salary AS Salary, DENSE_RANK() OVER (Partition BY d.Id ORDER BY e.Salary DESC) AS rk FROM Employee e INNER JOIN Department d ON e.DepartmentId = d.Id) AS t WHERE t.rk < 4
SELECT t.Department, t.Employee, t.Salary FROM (SELECT d.Name as Department, e.Name as Employee, e.Salary, DENSE_RANK()OVER(PARTITION BY d.Name ORDER BY e.Salary DESC) as 'rank' FROM Employee e JOIN Department d ON e.DepartmentId=d.Id) t WHERE t.rank <=3
SELECT t1.Department, t1.Name as Employee, t1.Salary FROM ( SELECT d.Name as Department, e.Name, e.Salary, dense_rank() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) as rnk FROM Employee e JOIN Department d ON d.Id = e.DepartmentId ) t1 WHERE t1.rnk <= 3
SELECT t1.Department, t1.Name as Employee, t1.Salary FROM (SELECT d.Name as Department, e.Name as Name, e.Salary as Salary, DENSE_RANK() OVER (PARTITION BY d.Name ORDER BY e.Salary DESC) as df FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) t1 WHERE t1.df <=3
SELECT t1.Department,t1.Employee,t1.Salary FROM (SELECT d.name as Department,e.name as Employee,e.Salary,DENSE_RANK () OVER (PARTITION BY D.name ORDER BY e.Salary DESC) as salaryrank FROM Employee e INNER JOIN Department d ON e.DepartmentId=d.Id) AS t1 WHERE t1.salaryrank <= 3
SELECT t2.Name AS Department, t1.Name AS Employee, t1.Salary FROM (SELECT *, dense_rank() over (PARTITION BY DepartmentId ORDER BY Salary DESC) AS r FROM Employee) AS t1 INNER JOIN Department AS t2 on t1.DepartmentId = t2.Id WHERE r <= 3
SELECT t2.Name AS Department, t1.Name AS Employee, t1.Salary FROM (SELECT e.*, dense_rank() over (partition by DepartmentId order by Salary desc) as DeptPayRank from Employee e ) t1 JOIN Department t2 ON t2.Id = t1.DepartmentId WHERE DeptPayRank <= 3
SELECT t2.Name AS Department, t1.Name AS Employee, t1.Salary FROM Employee as t1 JOIN Department as t2 ON t1.DepartmentId = t2.Id WHERE 3 > (SELECT COUNT(DISTINCT t3.Salary) FROM Employee t3 WHERE t3.Salary > t1.Salary AND t1.DepartmentId = t3.DepartmentId )
SELECT tb2.Name AS Department, tb1.Name AS Employee, tb1.Salary AS Salary FROM Employee as tb1 INNER JOIN Department as tb2 ON tb1.DepartmentId = tb2.Id WHERE (SELECT count(DISTINCT Salary) FROM Employee as tb3 WHERE tb3.DepartmentId = tb1.DepartmentId AND tb3.Salary > tb1.Salary) < 3
SELECT tbl.Department,tbl.Employee,tbl.Salary FROM ( select dep.Name as Department, emp.Name as Employee, emp.Salary, dense_rank() over(partition by dep.Name order by emp.Salary desc) as rnk from Employee as emp inner join Department as dep ON dep.id = emp.DepartmentId) as tbl WHERE tbl.rnk <=3
SELECT tmp.Department, tmp.Employee, tmp.Salary FROM (SELECT d.Name AS 'Department', e.Name AS 'Employee', e.Salary, DENSE_RANK() OVER (PARTITION BY d.Name ORDER BY e.Salary DESC) AS 'Rnk' FROM Department d JOIN Employee e ON d.Id = e.DepartmentId) AS tmp WHERE tmp.Rnk = 1 OR tmp.Rnk = 2 OR tmp.Rnk = 3
Select D.Name as Department, E.Name as Employee, E.Salary as Salary From Employee E Join Department D On E.DepartmentId = D.Id where 3> ( select count(Distinct Salary) From Employee E2 where E2.Salary> E.Salary and E2.DepartmentId=E.DepartmentId ) order by E.Salary DESC
Select D.Name as Department, Em.Name as Employee, Em.Salary From ( Select e.*, dense_rank() over(partition by DepartmentId Order by Salary desc) as Deptrank from Employee as e) as Em Join Department as D on Em.DepartmentId=D.id where Deptrank <=3
Select Department, Employee, Salary from ( Select Department.Name as Department, Employee.Name as Employee, Employee.Salary as Salary, dense_rank() over (partition by Department.Name order by Employee.Salary desc) as rnk from Employee inner join Department on Employee.DepartmentId = Department.Id ) e where rnk <= 3
Select Department, Employee, Salary from (Select D.Id, e.Name as Employee, d.Name as Department, Salary, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY SALARY desc) rank1 from Employee e join Department d on e.DepartmentId = d.Id )d1 where rank1 <= 3
Select Department, Employee, Salary from (Select a.Name as Employee ,b.Name as Department,a.Salary, dense_rank() over(partition by b.Name order by a.Salary desc)as row_num from Employee a join Department b on a.DepartmentId = b.Id)as a where row_num<= 3 group by 1,2,3
Select Department, Employee, Salary from (Select d.Name as Department, e.Name as Employee, Salary, Dense_Rank() over (Partition by d.Name Order by Salary DESC) as number from Employee e Join Department d On e.DepartmentId = d.Id) x Where number = 1 or number = 2 or number = 3
Select Department, Employee, Salary from (select d.Name as 'Department', e.Name as 'Employee', e.Salary as 'Salary', dense_rank() over (partition by departmentId order by Salary desc) as 'rnk' from employee e join department d on e.departmentid = d.id) T1 Where rnk <= 3
Select Department, Employee,Salary from ( Select d.Name as Department, e.Name as Employee, e.Salary as Salary, Dense_Rank() over (Partition by DepartmentId order by Salary desc) as A from employee e Join Department d on e.DepartmentId = d.Id) as t where t.A < 4
Select Department, Employee,Salary from (select D.Name as Department , E.Name as Employee, E.Salary as Salary, dense_rank() over (partition by DepartmentId order by E.Salary Desc) as rnk from Employee as E join Department as D on E.DepartmentId =D.Id order by 1) as tab1 where rnk in (1,2,3)
Select Department,Employee,salary from ( select D.Name as Department, E.name as Employee, E.salary, Dense_Rank() over(partition by E.DepartmentId order by E.salary desc) as Rowno from employee E join Department D on E.DepartmentId =D.Id )As K where Rowno <=3
Select Department.Name as 'Department', rankTbl.Name as 'Employee', rankTbl.Salary from (Select *, dense_rank() OVER (Partition by DepartmentId Order By Salary DESC) as 'SalRank' from Employee ) rankTbl join Department on rankTbl.DepartmentId = Department.Id where rankTbl.SalRank <= 3
Select SalaryReport.Department,SalaryReport.Employee,SalaryReport.Salary From (Select B.Name as Department, A.Name AS Employee, Coalesce(A.Salary,0) as Salary , dense_rank() Over(Partition By A.DepartmentId order by Coalesce(A.salary,0) Desc) AS Ranked_Salaries from Employee A Left JOIN Department B on A.DepartmentId = B.ID Where B.Name IS NOT NULL )SalaryReport Where Ranked_Salaries <4
Select a.Dept as Department, a.Empl as Employee, a.Sal as Salary From (Select D.Name as Dept ,E.Name as Empl, E.Salary as Sal, Dense_Rank() Over(Partition by E.DepartmentId Order by Salary DESC) as abcd From Employee E Join Department D On D.Id = E.DepartmentID) as a Where abcd <= 3
Select b.Name as 'department', t.Name as 'employee', t.salary From Employee t join Department b on t.DepartmentID = b.ID Where (select count(distinct e.salary) from Employee e where e.salary > t.salary and t.DepartmentID = e.DepartmentID) < 3
Select c.Department,c.Employee,c.Salary From (Select a.Name as `Employee`,a.Salary,DENSE_RANK() OVER ( PARTITION BY a.DepartmentId ORDER BY a.Salary DESC) as rnk,b.Name as `Department` from Employee a JOIN Department as b ON a.DepartmentId=b.ID) c WHERE c.rnk<=3
Select d.Name As Department, t1.Name As Employee, t1.Salary From Employee t1 Join Department d On t1.DepartmentId = d.Id Where 3 > (Select Count(Distinct Salary) From Employee t2 Where t2.Salary > t1.Salary And t1.DepartmentId = t2.DepartmentId)
Select d.Name Department, e.name Employee, Salary FROM Employee e JOIN Department d ON e.DepartmentId = d.Id WHERE 3>= ( SELECT count(*) rnk FROM (SELECT distinct Salary x, DepartmentId y FROM Employee ) t WHERE Salary <= x and DepartmentId = y )
Select d.Name Department, e2.Name Employee, Salary From (Select *, dense_rank() over (partition by DepartmentId Order by Salary desc) salaryrank From Employee e ) e2 join Department d On e2.DepartmentId = d.Id Where salaryrank<=3
Select d.Name as 'Department', e1.Name as 'Employee', e1.Salary From Employee e1 Join Department d On e1.DepartmentId = d.Id Where 3 > ( Select Count(Distinct e2.Salary) From Employee e2 Where e2.Salary > e1.Salary And e1.DepartmentId = e2.DepartmentId )
Select d.Name as 'Department', x.Name as Employee, x.salary as salary from (select e.Name, DepartmentId, Salary, dense_rank() over (Partition by DepartmentID Order by Salary Desc) as rnk from Employee e)x join Department d on x.DepartmentId = d.ID where rnk<=3
Select d.Name as Department, a.Name as Employee, a.Salary as Salary from Employee a Join Department d on a.DepartmentId = d.Id where 3 > (Select count(distinct e2.salary) from Employee e2 where e2.Salary > a.Salary AND a.DepartmentId = e2.DepartmentId )
Select d.Name as Department, e.Name as Employee, e.Salary From Employee e Join Department d on e.DepartmentId = d.Id Where (Select Count(Distinct Salary) From Employee Where Salary > e.Salary And DepartmentId = d.Id) <3 Order By d.Name, e.Salary DESC
Select d.Name as Department, e.Name as Employee, e.Salary from Department d, Employee e where d.id = e.departmentid and (select count(distinct e1.salary) from employee e1 where e1.departmentid = d.id and e.salary < e1.salary) < 3
Select d.Name as Department, e.Name as Employee, e.Salary from Department d, Employee e where e.DepartmentId=d.Id and (Select count(distinct Salary) From Employee where DepartmentId=d.Id and Salary>e.Salary)<3 order by e.departmentid, e.salary desc
Select d.Name as Department, e.Name as Employee, e.Salary from employee e join department d on e.departmentid=d.id where (Select count(distinct e2.Salary) From Employee e2 where e2.DepartmentId=d.Id and e2.Salary>e.Salary)<3 order by e.departmentid, e.salary desc
Select d.name as Department, e.name as Employee, e.salary as Salary from Employee e, Department d where e.departmentId = d.id and 3 > ( select count(distinct e1.salary) from Employee e1 where e.salary < e1.salary and e1.departmentId = d.id )
Select d.name as Department, e1.Name as Employee, e1.Salary from Employee as e1 inner join Department as d on e1.DepartmentId = d.Id where 3 > (Select count(Distinct e2.Salary) from Employee as e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId)
Select d.name as department, a.name as Employee, Salary From Department d JOIN ( Select Id , Name , Salary , DepartmentId , Dense_Rank() OVER (Partition By DepartmentID Order By Salary DESC) as Rank_ From Employee ) a ON d.id = a.departmentId WHERE Rank_ <= 3
Select dep.Name as 'Department', emp.Name as 'Employee', emp.Salary as 'Salary' From ( Select Name, Salary, DepartmentId, Dense_Rank() over (Partition by DepartmentId order by Salary Desc) as 'rnk' From Employee ) emp JOIN ( Select * From Department ) dep On emp.DepartmentId=dep.Id where emp.rnk<4
Select dep.Name as Department, emp.Name as Employee, emp.Salary From Department as dep, Employee as emp Where emp.DepartmentId = dep.Id And (Select count(distinct Salary) From Employee where DepartmentId = dep.Id and Salary > emp.Salary) < 3
Select dep.Name as Department, emp.Name as Employee, emp.Salary from Department dep, Employee emp where emp.DepartmentId = dep.Id and (Select count(distinct Salary) From Employee where DepartmentId=dep.Id and Salary>emp.Salary)<3
Select dep.Name as Department, emp.Name as Employee, emp.Salary from Department dep, Employee emp where emp.DepartmentId=dep.Id and (Select count(distinct Salary) From Employee where DepartmentId=dep.Id and Salary>emp.Salary)<3
Select dept.name as Department, emp.name as employee, emp.salary as salary from (Select Name, Salary, DepartmentID, dense_Rank() OVER(PArtition by DepartmentID order by salary desc) as dnsrnk from Employee) as emp Inner join Department as dept on dept.id = emp.DepartmentID Where emp.dnsrnk < 4
WITH CTE AS ( SELECT D.NAME AS DEPARTMENT, E.NAME AS EMPLOYEE, SALARY,DENSE_RANK() OVER(PARTITION BY D.NAME ORDER BY SALARY DESC) AS RNK FROM EMPLOYEE E JOIN DEPARTMENT D ON E.DEPARTMENTID=D.ID ) SELECT DEPARTMENT,EMPLOYEE,SALARY FROM CTE WHERE RNK <=3
WITH CTE AS ( SELECT d1.Name as Employee, d1.Salary, d2.Name as Department, DENSE_RANK() OVER(PARTITION BY d2.Name ORDER BY d1.Salary DESC) as ranking FROM Employee as d1 JOIN Department as d2 ON d1.DepartmentId = d2.Id ) SELECT Department, Employee, Salary FROM CTE WHERE ranking IN (1,2,3)
WITH CTE AS( SELECT Employee.Name As Employee,Employee.DepartmentId, Employee.Salary, Department.ID ,Department.Name As Department_name FROM Employee INNER JOIN Department ON Employee.DepartmentId = Department.Id), CTE2 AS (SELECT Department_name AS Department, Employee, Salary, DENSE_RANK() OVER(PARTITION BY Department_name ORDER BY Salary Desc) As Ranking FROM CTE) SELECT Department, Employee, Salary FROM CTE2 WHERE Ranking = 1 OR Ranking = 2 OR Ranking = 3
WITH CTE AS( SELECT b.Name AS Department, a.Name AS Employee, a.Salary, DENSE_RANK() OVER (PARTITION BY a.DepartmentId ORDER BY a.Salary DESC) AS R1 FROM Employee a JOIN Department b ON a.DepartmentId = b.Id ) SELECT Department, Employee, Salary FROM CTE WHERE R1 IN (1,2,3)
WITH CTE AS(SELECT Department.Name As Department ,Employee.Name As Employee, Employee.Salary AS Salary, DENSE_RANK() OVER(PARTITION BY Department.Name ORDER BY Employee.Salary DESC) AS Ranking FROM Employee INNER JOIN Department ON Department.Id = Employee.DepartmentId) SELECT Department, Employee, Salary FROM CTE WHERE Ranking = 1 OR Ranking = 2 OR Ranking = 3
WITH DepartmentSalaryRanking AS (SELECT DepartmentId ,Name AS Employee ,Salary ,DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS Rk FROM Employee) SELECT D.Name AS Department ,DSR.Employee ,DSR.Salary FROM DepartmentSalaryRanking DSR INNER JOIN Department D ON D.Id = DSR.DepartmentId WHERE Rk <= 3
WITH DeptSalaryRank AS ( SELECT DepartmentId, Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS "DeptRank" FROM Employee), EmployeeSubset AS ( SELECT DISTINCT A.Name, A.DepartmentId, A.Salary FROM Employee A LEFT JOIN DeptSalaryRank B ON (A.DepartmentId = B.DepartmentId) AND (A.Salary = B.Salary) WHERE B.DeptRank <= 3) SELECT D.Name AS "Department", E.Name AS "Employee", E.Salary AS "Salary" FROM Department D INNER JOIN EmployeeSubset E ON E.DepartmentId = D.Id
WITH Dept_Emp as( select D.Name as Department, E.Name as Employee, Salary from Department D inner join Employee E ON D.Id=E.DepartmentId ) select Department, Employee, Salary from ( select Department,Employee,Salary, DENSE_RANK() over (partition by Department order by Salary desc) as ranks from Dept_Emp) aa where aa.ranks<=3
WITH E AS ( SELECT e.Name, e.Salary, e.DepartmentId, DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) AS RNK FROM Employee e ) SELECT d.Name as Department, E.Name as Employee, E.Salary FROM E JOIN Department d ON E.DepartmentId = d.Id WHERE E.RNK <= 3
WITH ED AS (SELECT D.NAME AS DEPARTMENT, E.NAME AS EMPLOYEE, E.SALARY, DENSE_RANK()OVER(PARTITION BY E.DEPARTMENTID order by SALARY DESC) AS SALRANK FROM EMPLOYEE E JOIN DEPARTMENT D ON E.DEPARTMENTID = D.ID ) SELECT ED.DEPARTMENT, ED.EMPLOYEE, ED.SALARY FROM ED WHERE ED.SALRANK <=3
WITH Employee_salary_ranked AS ( SELECT *, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY SALARY DESC) AS salary_rank FROM Employee ) SELECT d.Name AS department, e.Name AS Employee, e.Salary FROM Employee_salary_ranked e JOIN Department d On e.DepartmentId = d.Id WHERE e.salary_rank < 4 ORDER BY 3 DESC
WITH Employee_salary_ranked AS ( SELECT *, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY SALARY DESC) AS salary_rank FROM Employee ) SELECT d.Name AS department, e.Name AS Employee, e.Salary FROM Employee_salary_ranked e JOIN Department d On e.DepartmentId = d.Id WHERE e.salary_rank IN (1,2,3) ORDER BY 3 DESC
WITH Final AS (SELECT E.Name AS Employee, E.Salary AS Salary, D.Name AS Department, DENSE_RANK() OVER(PARTITION BY D.Name ORDER BY E.Salary DESC) AS rk FROM Employee E JOIN Department D ON E.DepartmentId = D.Id) SELECT Department, Employee, Salary FROM Final WHERE rk<=3
WITH RANKING AS ( SELECT Department.Name as Department, Employee.Name as Employee, Employee.Salary as Salary, DENSE_RANK() OVER (PARTITION BY Department.Name ORDER BY Employee.Salary DESC) RANKS FROM Department, Employee WHERE Employee.DepartmentId = Department.ID) SELECT Department, Employee, Salary from Ranking where ranks <4
WITH ROW_EMPLOYEE AS ( SELECT ID, NAME, SALARY, DEPARTMENTID, DENSE_RANK() OVER(PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) AS RANKING FROM EMPLOYEE ) SELECT DEPARTMENT.NAME AS DEPARTMENT, ROW_EMPLOYEE.NAME AS EMPLOYEE, ROW_EMPLOYEE.SALARY AS SALARY FROM ROW_EMPLOYEE JOIN DEPARTMENT ON ROW_EMPLOYEE.DEPARTMENTID = DEPARTMENT.ID WHERE RANKING <= 3
WITH Ranking as ( SELECT name, salary, DepartmentId, dense_rank() over (partition by DepartmentId order by Salary DESC) as ranks FROM Employee ) Select d.Name as Department, r.name as Employee, r.salary FROM Ranking as r JOIN Department as d on r.DepartmentId = d.Id WHERE ranks <= 3
WITH T1 AS ( select departmentid, name, salary, dense_rank() over (partition by departmentid order by salary desc) as rank1 from employee ) select b.name as department, a.name as employee, a.salary from T1 a inner join department b on a.departmentid = b.id where a.rank1 <=3
WITH T1 AS (SELECT * FROM (SELECT Salary, DepartmentId, ROW_NUMBER() OVER (Partition BY DepartmentId ORDER BY Salary) AS Rownum FROM (SELECT Salary, DepartmentId, DENSE_RANK() OVER (Partition BY DepartmentId ORDER BY Salary DESC) AS r FROM Employee) AS X WHERE r <= 3) AS Y WHERE Y.Rownum = 1) SELECT e.Name AS Employee, d.Name AS Department, e.Salary FROM Employee e LEFT JOIN Department d ON e.DepartmentId = d.Id LEFT JOIN T1 t ON e.DepartmentId = t.DepartmentId WHERE e.Salary >= t.Salary AND d.Name IS NOT NULL
WITH TEMP AS ( SELECT D.Name "DEPARTMENT",E.Name "EMPLOYEE",E.salary 'SALARY',DENSE_RANK() OVER (PARTITION BY D.Name ORDER BY E.Salary DESC) AS "PRIORITY" FROM EMPLOYEE E JOIN DEPARTMENT D ON E.DepartmentId=D.Id ) SELECT DEPARTMENT,EMPLOYEE,SALARY FROM TEMP WHERE PRIORITY IN (1,2,3)
WITH TEMP AS (SELECT D.NAME AS DEPARTMENT, E.NAME AS EMPLOYEE, E.SALARY AS SALARY, DENSE_RANK() OVER (PARTITION BY D.NAME ORDER BY E.SALARY DESC) AS RNK FROM EMPLOYEE E, DEPARTMENT D WHERE E.DEPARTMENTID = D.ID) SELECT DEPARTMENT, EMPLOYEE, SALARY FROM TEMP WHERE RNK <= 3
WITH THREE(Salary, DepartmentId, Srank) AS ( SELECT Salary, DepartmentId, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS srank FROM Employee ) SELECT Department.Name as Department, Employee.Name as Employee, Employee.Salary as Salary FROM Employee JOIN ( SELECT MIN(Salary) as Salary, DepartmentId FROM THREE WHERE srank<=3 GROUP BY DepartmentId ) AS THIRD_SALARY ON Employee.DepartmentId=THIRD_SALARY.DepartmentId JOIN Department ON Department.Id=Employee.DepartmentId WHERE Employee.Salary >= THIRD_SALARY.Salary
WITH a AS ( SELECT * , DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) as "ranks" FROM Employee ) SELECT d.Name Department, c.Name Employee, a.Salary FROM a JOIN Department d ON a.DepartmentId=d.Id JOIN Employee c ON c.Id=a.Id WHERE ranks <= 3
WITH a AS ( SELECT Employee.Name, salary, department.name AS department FROM Employee JOIN department ON Employee.departmentid = department.id), b AS ( SELECT department, name, salary, DENSE_RANK() OVER (PARTITION BY department ORDER BY salary DESC) AS rks FROM a) SELECT department, name AS employee, salary FROM b WHERE rks<4
WITH agg as ( SELECT DepartmentId, Name, Salary, dense_rank() over (partition by DepartmentId order by Salary desc) AS salary_rank FROM Employee ) SELECT d.Name AS 'Department', a.Name AS 'Employee', a.Salary AS 'Salary' FROM agg AS a JOIN department AS d ON a.departmentid=d.id WHERE a.salary_rank<=3
WITH cte AS ( SELECT *, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS rnk FROM Employee ) SELECT d.Name AS Department, c.Name AS Employee, c.Salary AS Salary FROM cte c JOIN Department d ON (c.DepartmentId = d.Id) WHERE c.rnk < 4
WITH cte AS ( SELECT Name, Salary, DepartmentId, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS rnk FROM Employee ) SELECT d.Name AS Department, cte.Name as Employee, Salary FROM cte INNER JOIN Department d ON d.id = cte.DepartmentId WHERE rnk<4
WITH cte AS ( SELECT d.Name AS Department, e.Name AS Employee, e.Salary, DENSE_RANK() OVER(PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) AS Rnk FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) SELECT Department, Employee, Salary FROM cte WHERE Rnk <= 3
WITH cte AS (SELECT d.Name AS Department, e.Name AS Employee, Salary, DENSE_RANK() OVER(PARTITION BY e.DepartmentId ORDER BY Salary DESC) AS ranking FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) SELECT Department, Employee, Salary FROM cte WHERE ranking = 1 OR ranking = 2 OR ranking = 3
WITH cte as( SELECT b.Name as Department, a.Name as Employee, a.Salary as Salary, DENSE_RANK() OVER(PARTITION BY b.Name ORDER BY a.Salary DESC) AS rank_num FROM Employee as a INNER JOIN Department AS b ON a.DepartmentId = b.Id ) SELECT Department, Employee, Salary FROM cte WHERE rank_num = 1 OR rank_num = 2 OR rank_num = 3
WITH cte as( SELECT b.Name as Department, a.Name as Employee, a.Salary as Salary, DENSE_RANK() OVER(PARTITION BY b.Name ORDER BY a.Salary DESC) AS rank_num FROM Employee as a INNER JOIN Department AS b ON a.DepartmentId = b.Id ) SELECT Department, Employee, Salary FROM cte WHERE rank_num IN (1,2,3)
WITH cte as( SELECT b.Name as Department, a.Name as Employee, a.Salary, DENSE_RANK() OVER(PARTITION BY b.Name ORDER BY a.Salary DESC) AS rank_num FROM Employee as a INNER JOIN Department AS b ON a.DepartmentId = b.Id ) SELECT Department, Employee, Salary FROM cte WHERE rank_num = 1 OR rank_num = 2 OR rank_num = 3
WITH distinct_salaries AS( Select Distinct DepartmentId, Salary From Employee ORDER BY Salary DESC ) , dept_sal_rank AS ( SELECT DepartmentId, Salary, ROW_NUMBER() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) Salary_Rank FROM distinct_salaries ) SELECT b.Name as Department, a.Name as Employee, a.Salary FROM Employee a INNER JOIN Department b ON a.DepartmentId=b.Id INNER JOIN dept_sal_rank c ON a.DepartmentId=c.DepartmentId AND a.Salary=c.Salary WHERE c.Salary_Rank<=3
WITH emp_rank AS ( SELECT d.Name as Department , e.Name as Employee , e.Salary , DENSE_RANK() OVER(PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) as salary_rank FROM Employee e JOIN Department d ON e.DepartmentId = d.Id ) SELECT Department , Employee , Salary FROM emp_rank where salary_rank < 4
WITH emp_w_rank AS ( SELECT d.Name AS Department, e.Name As Employee, e.Salary, DENSE_RANK() OVER(PARTITION BY d.Name ORDER BY e.Salary DESC) AS rank_id FROM Employee e JOIN Department d ON e.DepartmentId = d.Id ) SELECT Department, Employee, Salary FROM emp_w_rank WHERE rank_id <= 3
WITH fulltable AS (SELECT d.Name AS department_name, d.Id AS department_id, e.Name as employee_name, Salary,e.Id AS employee_id FROM Employee e INNER JOIN Department d ON e.DepartmentId = d.Id) SELECT department_name AS Department, employee_name AS Employee, Salary FROM (SELECT department_name, employee_name, Salary, DENSE_RANK() OVER (PARTITION BY department_name ORDER BY Salary DESC) r FROM fulltable) a WHERE r<=3
WITH highestThree AS (SELECT D.name AS Department, E.name AS Employee, E.Salary, DENSE_RANK() OVER(PARTITION BY D.name ORDER BY Salary DESC) rank_num FROM Employee E INNER JOIN Department D ON E.DepartmentId = D.Id ) SELECT Department, Employee, Salary FROM highestThree WHERE rank_num = 1 OR rank_num = 2 OR rank_num = 3
WITH ranked_salary AS ( SELECT d.Name AS Department, e.Name AS Employee, e.Salary, DENSE_RANK() OVER (PARTITION BY d.Name ORDER BY e. Salary DESC) AS s_rank FROM Employee e JOIN Department d ON e.DepartmentId = d.Id ) SELECT Department, Employee, Salary FROM ranked_salary WHERE s_rank <= 3
WITH ranking as (SELECT a.Name as Employee, a.Salary, b.Name as Department, DENSE_RANK() OVER(PARTITION BY a.DepartmentId ORDER BY a.Salary DESC) as r FROM Employee a INNER JOIN Department b ON a.DepartmentId = b.Id ) SELECT Department, Employee, Salary FROM ranking WHERE r <= 3
WITH ranking_finder AS ( SELECT *, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS salary_rk FROM Employee ) SELECT d.Name AS Department, rf.Name AS Employee, rf.Salary FROM ranking_finder rf JOIN Department d ON rf.DepartmentId = d.Id AND rf.salary_rk <= 3
WITH rankings AS( SELECT *, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary Desc) pos FROM Employee ) SELECT d.Name as 'Department', r.Name as 'Employee', r.Salary FROM Department d, rankings r WHERE r.pos < 4 AND d.Id = r.DepartmentId
WITH sal_ranking as ( SELECT DepartmentId, name, salary, dense_rank() over(partition by DepartmentId order by salary desc) as rnk FROM employee) select d.name as department, s.name as employee, s.salary from sal_ranking s JOIN department d ON s.DepartmentId = d.id where s.rnk <= 3 order by s.salary
WITH sals AS( select distinct departmentid, salary from employee order by departmentid asc, salary desc), topdistinct AS ( select distinct departmentid, salary, row_number() over w as 'rnk' from sals window w as (partition by departmentid order by departmentid asc, salary desc)) select d1.name as Department, e1.name as Employee, e1.salary as Salary from topdistinct tp left join employee e1 on tp.departmentid = e1.departmentid and tp.salary = e1.salary left join department d1 on tp.departmentid = d1.id WHERE tp.rnk < 4 AND d1.name IS NOT NULL ORDER BY tp.departmentid asc, e1.salary desc
WITH solution_stg AS ( SELECT d.Name AS Department, e.Name AS Employee, Salary, DENSE_RANK() OVER (PARTITION BY d.Name ORDER BY Salary DESC) as rnk FROM Employee e INNER JOIN Department d ON e.DepartmentId = d.Id ) SELECT Department, Employee, Salary FROM solution_stg WHERE rnk <= 3
WITH t AS ( SELECT d.Name AS Department, e.Name AS Employee, e.Salary, DENSE_RANK() OVER(PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) AS rnk FROM Employee e JOIN Department d ON e.DepartmentId = d.Id ) SELECT Department, Employee, Salary FROM t WHERE rnk <=3
WITH t1 as (SELECT *, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) as salaryRank FROM Employee) SELECT Department.Name as `Department`, t1.Name as Employee, t1.Salary FROM t1 JOIN Department ON Department.Id = t1.DepartmentId WHERE salaryRank<=3 ORDER BY `Department`, Salary DESC
WITH table1 AS ( SELECT Department.Name AS Department, Employee.Name AS Employee, Salary FROM Employee INNER JOIN Department ON DepartmentId = Department.Id ), table2 AS ( SELECT * FROM ( SELECT Department, Employee, Salary, DENSE_RANK() OVER (PARTITION BY Department ORDER BY Salary DESC) AS ran FROM table1 ) t WHERE ran<=3 ) SELECT Department, Employee, Salary FROM table2
WITH table1 AS( SELECT Id, Name, Salary, DepartmentId, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) as ranking FROM EMPLOYEE ), table2 AS( SELECT Id, Name, Salary, DepartmentId, ranking FROM table1 WHERE (ranking = 1) OR (ranking = 2) OR (ranking = 3) ) SELECT Department.Name as Department, table2.Name as Employee, table2.Salary FROM table2 JOIN Department on Department.Id = table2.DepartmentId
WITH temp AS( SELECT *, dense_rank() OVER (PARTITION BY departmentid ORDER BY Salary DESC) as salary_rank FROM employee ) SELECT d.name as department, t.name as employee, salary FROM temp t JOIN department d ON t.departmentid = d.id WHERE t.salary_rank <=3 ORDER BY department, salary DESC
WITH tmp AS( SELECT Department.Name AS Department, Employee.Name AS Employee, Salary, DENSE_RANK() OVER( PARTITION BY DepartmentId ORDER BY Salary DESC ) AS rnk FROM Department JOIN Employee ON Department.Id = DepartmentId ) SELECT Department, Employee, Salary FROM tmp WHERE rnk <= 3
WITH topSalary AS ( SELECT DepartmentId, Name, Salary, DENSE_RANK() OVER( PARTITION BY DepartmentId ORDER BY Salary DESC ) as Top FROM Employee ) SELECT Department.Name as Department, topSalary.Name as Employee, topSalary.Salary FROM topSalary JOIN Department ON topSalary.DepartmentId = Department.Id WHERE topSalary.Top < 4
WITH top_salaries as (SELECT *, RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary Desc) as rank_salary FROM (SELECT DISTINCT Salary, DepartmentId FROM Employee) as temp_a) SELECT b.name as Department, a.Name as Employee, a.Salary FROM Employee as a LEFT JOIN Department as b ON a.DepartmentId = b.Id WHERE (DepartmentId, Salary) in (SELECT DepartmentId, Salary FROM top_salaries WHERE rank_salary <= 3) AND b.name is not NULL
With added_rank as (SELECT d.Name AS Department, e.Name AS Employee, e. Salary as Salary, DENSE_RANK () OVER (PARTITION BY d.Name ORDER BY e.SALARY DESC) AS rank_number FROM Employee e JOIN Department d on e.DepartmentId = d.Id) SELECT Department, Employee, Salary FROM added_rank WHERE rank_number <= 3
With dep_emp as ( SELECT d.Name as Department, e.Name as Employee, Salary From Employee e inner join Department d on e.DepartmentId = d.Id ), ranking as ( SELECT Department, Employee, Salary, dense_rank() over (partition by department order by Salary desc) r from dep_emp ) SELECT Department, Employee, Salary FROM ranking where r <= 3
With mmm as (Select D.Name as Department, E.Name as Employee, E.Salary, Dense_rank() over (partition by DepartmentId order by Salary Desc) rnk from Employee E Join Department D On E.DepartmentId=D.Id) Select Department, Employee, Salary From mmm where rnk in (1,2,3)
With ranked AS ( SELECT Name , Salary, DepartmentId , DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS ranks FROM Employee) Select Department.Name AS `Department`, ranked.name AS `Employee`, ranked.Salary From ranked join Department on ranked.DepartmentId = Department.Id Where ranks in (1,2,3)
With temp as (select Name,Salary,DEpartmentId, DENSE_RANK()over(partition by DepartmentId order by Salary desc) as rnk from Employee) select d.Name as Department, temp.Name as Employee, temp.Salary from Department d left join temp on d.Id = temp.DepartmentID where rnk<=3
With top_3 As (Select a.Id, a.Salary, a.DepartmentId From Employee As a Left Join Employee As b On a.Salary < b.Salary And a.DepartmentId = b.DepartmentId Group By a.Id Having Count(Distinct b.Salary) + 1 <= 3) Select b.Name As Department, a.Name As Employee, a.Salary As Salary From Employee as a Join Department as b On a.DepartmentId = b.Id Where (a.Salary, a.DepartmentId) in (Select Salary, DepartmentId From top_3)
dense_rank() over(partition by Department.Name order by Employee.Salary desc) as rank_count from Employee join Department on Employee.DepartmentId = Department.Id) as mytable where mytable.rank_count<=3
from Employee e, Department d where e.DepartmentID=d.Id and 3>( select count(distinct Salary) from Employee where Salary > e.Salary and DepartmentId=e.DepartmentId )
inner join Department d1 on e1.DepartmentId = d1.ID where 3 > (select count(distinct e2.salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId)
select B.Name as 'department', A.Name as 'Employee', A.Salary from ( select *, dense_rank()over(partition by e.departmentid order by e.salary desc) as sal_rank from employee e) as A join department as B on A.departmentid=b.id where A.sal_rank<=3
select B.Name as Department, A.Name as Employee, A.Salary from (select ID, Name, Salary, DepartmentId, Dense_Rank() over(partition by DepartmentId order by Salary desc) salrank from Employee) A inner join Department B on (A.DepartmentId = B.Id) where A.salrank < 4
select B.Name as Department, A.name as Employee, A.Salary from (select *, dense_rank() over (partition by DepartmentId order by Salary desc) as Rank1 from employee) as A inner join Department as B on A.DepartmentId = B.Id where A.Rank1 <4
select D.Name Department, E1.Name Employee ,E1.Salary from Employee E1 , Department D where E1.DepartmentId = D.Id and (select count(distinct E2.Salary) from Employee E2 where E2.Salary >E1.Salary and E1.DepartmentId = E2.DepartmentId )<3
select D.Name as "Department", E.Name as "Employee", E.salary as "Salary" from Employee E join Department D on E.DepartmentId = D.Id where 3 > (Select count(distinct(salary)) from Employee E2 where E.salary < E2.salary and E.DepartmentId = E2.DepartmentId )
select D.Name as Department, E.Name as Employee, E.Salary as Salary from Employee E inner join Department D on E.DepartmentId = D.Id where (E.DepartmentId, E.Salary) in ( select DepartmentId, Salary from ( select *, @rank := case when @placehold = Salary and @placehold1 = DepartmentId then @rank when @placehold <> Salary and @placehold1 = DepartmentId then @rank + 1 else @rank := 1 end as r, @placehold := Salary, @placehold1 := DepartmentId from Employee, (select @rank := 1, @placehold := 0, @placehold1 := 0) init order by DepartmentId, Salary desc ) temp where r <= 3 )
select D.Name as Department, E.Name as Employee, E.Salary from Department D, Employee E, Employee E2 where D.Id = E.DepartmentId and E.departmentId = E2.DepartmentId and E.Salary <= E2.Salary group by D.Name, E.Name, E.Salary having count(distinct E2.Salary) <= 3 order by D.name, E.salary desc
select D.Name as Department, E.Name as Employee, E.Salary from Department D, Employee E, Employee E2 where d.Id = E.DepartmentId and E.departmentId = E2.DepartmentId and E.Salary <= E2.Salary group by E.Name having count(distinct E2.Salary) <= 3 order by D.name, E.salary desc
select D.Name as Department, E1.Name as Employee, E1.Salary from Employee as E1 join Department as D on D.Id = E1.DepartmentId where 3 > ( select count(distinct(E2.Salary)) from Employee as E2 where E2.Salary > E1.Salary and E2.DepartmentId = E1.DepartmentId)
select D.Name as Department, E1.name as Employee, E1.salary as Salary from Employee as E1 join Department as D on E1.DepartmentId=D.Id where 3 > ( select count(distinct E2.salary) from Employee E2 where E2.salary > E1.salary and e1.DepartmentId = e2.DepartmentId )
select D.name as department, E.name as employee, E.salary from (select *, dense_rank() over (partition by departmentid order by salary desc) as rank_sal from employee) as E inner join department as d on D.id = E.departmentid where rank_sal<=3
select DE.Department, DE.Employee, DE.Salary from (SELECT D.Name as Department, E.Name as Employee, E.Salary, dense_rank() over (Partition by E.DepartmentId order by Salary DESC) as Rank_ID FROM Employee E join Department D ON E.DepartmentId = D.Id) DE where Rank_ID <=3 order by DE.Salary DESC
select Department , Employee , Salary from ( select b.Name Department , a.Name Employee , Salary , dense_rank() over (partition by b.Name order by Salary desc) rnk from Employee a join Department b on a.Departmentid = b.id )x where rnk <=3
select Department , Employee, Salary from (select t2.Name as Department, t1.Name as Employee, t1.Salary, dense_rank() over (partition by t1.DepartmentId order by t1.salary desc) as rk from Employee t1 join Department t2 on t1.DepartmentID=t2.Id ) t where rk<4
select Department ,Employee ,Salary FROM ( select d.Name as Department ,e.Name as Employee ,e.Salary as Salary ,DENSE_RANK() over ( partition by d.Id order by e.Salary desc ) dr From Employee e join Department d on e.DepartmentId = d.Id ) tmp where dr <=3
select Department ,Employee ,Salary from ( select d.name 'Department' , e.Name 'Employee' ,e.Salary ,DENSE_RANK() over (partition by e.DepartmentId order by e.salary desc) ranky from Employee e join Department d on e.DepartmentId = d.Id ) a where ranky<=3
select Department ,Employee ,Salary from ( select d.name Department ,e.name Employee ,Salary ,dense_rank() over(partition by DepartmentId order by salary desc) rnk from employee e join Department d on e.DepartmentId = d.Id ) tmp where rnk <= 3
select Department ,Employee ,Salary from (SELECT d.name as Department ,e.name as Employee ,e.Salary ,DENSE_RANK()OVER(PARTITION BY DepartmentId ORDER BY Salary desc) as rn FROM Employee e join Department d on e.DepartmentId = d.Id) t where rn in (1,2,3)
select Department, Employee, Salary From ( select d.Name as Department, e.Name as Employee, e.Salary, dense_rank() over (partition by e.DepartmentId order by Salary desc) as rnk from Employee e inner join Department d on e.DepartmentId=d.Id )tmp where tmp.rnk<=3
select Department, Employee, Salary from ( select d.Name as Department, e.Name as Employee, Salary, dense_rank() over (partition by d.Name order by Salary desc) as ranking from Department as d join Employee as e on d.Id = e.DepartmentId ) as t where ranking <= 3 order by Department, Salary desc
select Department, Employee, Salary from ( select d.Name as Department, e.Name as Employee, e.Salary, Dense_RANK() OVER ( PARTITION BY d.Name ORDER BY e.Salary desc) salary_rank from Employee e inner join Department d on d.Id =e.DepartmentId ) t where salary_rank <= 3
select Department, Employee, Salary from ( select d.Name as Department, e.Name as Employee, e.Salary, dense_rank () over (partition by e.DepartmentId order by e.Salary desc) as rnk from Employee e inner join Department d on e.DepartmentId = d.Id ) temp where rnk <= 3
select Department, Employee, Salary from ( select d.Name as Department, e.Name as Employee, e.Salary, dense_rank() over(partition by d.Name order by e.Salary desc) as 'rowNum' from Employee e join Department d on e.DepartmentId = d.Id ) t where rowNum <= 3
select Department, Employee, Salary from ( select d.Name as `Department`, e.Name as `Employee`, e.salary as `Salary`, DENSE_RANK() OVER(partition by e.DepartmentId order by Salary Desc) as salary_rank from employee e JOIN department d ON e.departmentId = d.id ) tmp Where tmp.salary_rank <= 3
select Department, Employee, Salary from ( select d.name Department, e.name Employee, e.Salary, dense_rank() over (partition by d.id order by e.Salary desc) salary_rank from Employee e join Department d on e.DepartmentId = d.Id ) emp where salary_rank <=3
select Department, Employee, Salary from ( select d.name Department, e.name Employee, e.Salary, dense_rank() over (partition by d.id order by e.Salary desc) salary_rank from Employee e join Department d on e.DepartmentId = d.Id ) emp where salary_rank <=3 order by Department, Salary desc, Employee
select Department, Employee, Salary from ( select e.Name as Employee, e.Salary, dense_rank() over (partition by d.name order by e.Salary desc) as rank_salary, d.Name as Department from Employee e join Department d on e.DepartmentId = d.Id ) as a where rank_salary < 4
select Department, Employee, Salary from (select D.Name as Department, E.Name as Employee, Salary, dense_rank() over (partition by E.DepartmentId order by E.Salary DESC) as 'cnt' from Employee E join Department D on E.DepartmentId = D.Id) S1 where cnt between 1 and 3
select Department, Employee, Salary from (select a.Name as Department, b.Name as Employee, b.Salary, dense_rank() OVER (PARTITION BY b.DepartmentId ORDER BY b.Salary DESC) as rk from Department a join Employee b on a.Id = b.DepartmentId) c where rk <=3
select Department, Employee, Salary from (select b.Name as Department, a.Name as Employee, a.Salary, dense_rank() over (partition by b.Name order by a.Salary desc) as 'Rank' from Employee a left join Department b on a.DepartmentId = b.Id where b.Name is not null) as t where t.Rank <=3
select Department, Employee, Salary from (select d.Name Department, e.Name Employee, dense_rank() over (partition by DepartmentId order by Salary desc) rk, Salary from Employee e join Department d on e.DepartmentId = d.Id ) a where rk <= 3
select Department, Employee, Salary from (select d.Name as Department, e.Name as Employee, e.Salary, dense_rank() over(partition by d.Name order by e.Salary desc) as rn from Employee as e left join Department as d on d.Id = e.DepartmentId) as temp where rn<=3 and Department is not null
select Department, Employee, Salary from (select d.name Department, e.name Employee, e.salary, dense_rank() over (partition by DepartmentID order by salary desc)'rank' from employee e join department d on e.departmentid = d.id) t where t.rank<=3
select Department, Employee, Salary from (select d.name as Department, e.Name as Employee, Salary, dense_rank() over (partition by d.name order by Salary desc) as Salary_rank from Employee e left join Department d on e.DepartmentId = d.Id) a where Salary_rank <= 3 and Department is not null and Employee is not null
select Department, Employee, Salary from (select d.name as Department, e.name as Employee, e.salary as Salary, dense_rank() over(partition by d.name order by Salary desc) as 'ranking' from Employee as e join Department as d on e.DepartmentId = d.Id) as t where ranking <=3
select Department, Employee, Salary from (select d.name as Department,e.name as Employee,e.salary as Salary, dense_rank() over (partition by departmentid order by salary desc) as de from employee e join department d on e.departmentid = d.id) a where de <= 3
select Department, Employee, Salary from( select D.Name as Department, E.Name as Employee,E.Salary,dense_rank() over (partition by D.Name order by E.Salary desc) rn from Employee E inner join Department D on E.DepartmentId = D.ID )z where rn in (1,2,3)
select Department, Employee, Salary from( select d.Name Department, e.Name Employee, e.Salary, dense_rank() over(partition by d.Name order by e.Salary desc) as rank1 from Employee e inner join Department d on e.DepartmentId = d.Id) as a where rank1<=3
select Department, Employee, Salary from(select Department.Name as Department, Employee.Name as Employee, Salary,dense_rank() over (partition by DepartmentId order by Salary desc) as 'Rank' from Employee inner join Department on Employee.DepartmentId=Department.Id) as X where X.Rank<=3
select Department, Employee, Salary from(select e.name as employee, d.name as department, salary, dense_rank() over(partition by departmentid order by salary desc) as ranka from employee e join department d on d.id = departmentid)x where x.ranka <= 3
select Department, Employee, salary from (select b.Name as Department, a.Name as Employee, a.salary, dense_rank() over(partition by a.DepartmentId order by a.Salary desc) as salaryorder from Employee a join Department b on a.DepartmentId = b.Id) as foo where salaryorder <= 3
select Department, Employee,Salary from ( select d.name as Department, e.name as Employee, Salary, Dense_rank() over(partition by DepartmentId order by salary desc) as r from employee e join Department d on e.departmentId=d.id )a where r<= 3 order by 1,3
select Department, Employee,Salary from (select Department, Employee,Salary, dense_rank() over(partition by Department order by Salary DESC) rk from (select e.Name as Employee, e.Salary, d.Name as Department from Employee e join Department d on e.DepartmentId = d.Id) a) b where rk <= 3
select Department, Employee,Salary from (select d.Name as Department, e.Name as Employee,Salary, dense_rank() over (partition by d.Name order by Salary desc) as rank_a from Employee e join Department d on e.DepartmentId = d.Id) a where rank_a<=3
select Department, Employee,Salary from (select d.name as Department , e.name as Employee, salary, Dense_rank() over(partition by d.name order by salary desc) as rk from employee as e join department as d on e.departmentid=d.id) as a where rk<=3
select Department, Name as Employee, Salary from ( select a.*,b.Name as Department, dense_rank() over(partition by DepartmentId order by Salary desc) as rk from Employee as a left join Department as b on a.DepartmentId=b.Id ) as c where rk<=3 and Department is not null
select Department, Name as Employee, Salary from ( select e.*, d.Name as Department, dense_rank() over(partition by e.DePartmentID order by Salary desc) as salary_rank from Employee as e inner join Department as d on e.DepartmentId=d.Id ) as a where salary_rank<=3
select Department, Name as Employee, Salary from (select e.Name ,Salary ,dense_rank() OVER(partition by e.DepartmentId order by e.Salary desc) as ranked_salary ,d.Name as `Department` from Employee e inner join Department d on d.Id = e.DepartmentId) tmp where ranked_salary <= 3 order by 1 asc, 3 desc
select Department,Employee, Salary from (select b.Name as Department, a.Name as Employee, Salary, dense_rank() over(partition by DepartmentId order by a.Salary Desc) as num from Employee a join Department b on a.DepartmentId=b.Id ) c where num<=3
select Department,Employee, Salary from (select d.name as Department, e.name as Employee, e.salary, dense_rank() over (partition by d.name order by e.salary desc)as r from Employee e join Department d on e.DepartmentId = d.Id) a where r <4 order by Department
select Department,Employee,Salary from ( SELECT d.Name as Department,e.Name as Employee,e.salary,dense_rank() over (partition by d.id order by e.salary desc) as salary_rank from employee e join department d on e.departmentid=d.id) as a where salary_rank<4
select Department,Employee,Salary from ( select d.Name Department,e.Name Employee, e.Salary,dense_rank() over (partition by e.DepartmentId order by e.Salary desc) `rank` from Employee e join Department d on e.DepartmentId=d.Id ) a where `rank`<4
select Department,Employee,Salary from ( select d.Name as Department,e.Name as Employee,coalesce(e.Salary,0) as Salary,dense_rank() over (partition by d.Name order by e.Salary desc) as emp_rank from Employee e join Department d on e.DepartmentId = d.Id ) t1 where emp_rank < 4
select Department,Employee,Salary from (select D.Name as Department, E.Name as Employee, E.Salary, dense_rank() over (partition by D.Id order by E.Salary desc) Rnk from Employee E join Department D on E.DepartmentId=D.Id) As T where Rnk <= 3
select Department,Employee,Salary from (select d.name Department,e.name Employee,e.salary salary ,dense_rank() over(partition by e.DepartmentId order by salary desc) rnk from employee e inner join Department d on e.DepartmentId=d.Id )z where rnk<=3
select Department,Employee,Salary from( select Department.Name as 'Department',Employee.Name as 'Employee',Employee.Salary ,DENSE_RANK() OVER (PARTITION BY Employee.DepartmentId ORDER BY Employee.Salary DESC) as salary_rank from Employee inner join Department on Employee.DepartmentId = Department.Id group by Employee.Salary,Employee.DepartmentId,Employee.Name ) temp_table where salary_rank<= 3
select Department,Name as Employee,Salary from (select Department.Name as Department,Employee.Name,Salary,DepartmentId,dense_rank() over (partition by DepartmentId order by Salary desc) as SortedSalaryRank from Employee join Department on Employee.DepartmentId=Department.Id) as sub1 where SortedSalaryRank<=3
select Department.Name As Department, Employee.Name As Employee, Employee.Salary From Employee Join Department On Employee.DepartmentId = Department.Id WHERE (Employee.ID, Employee.Salary) in ( select ID, Salary FROM (select *, DENSE_RANK() OVER (Partition By DepartmentID ORDER BY Salary DESC) As salary_rank FROM Employee) As temp WHERE salary_rank <=3)
select Department.Name as Department ,Employee.Name as Employee, Employee.Salary from Employee Join Department on Department.Id = Employee.DepartmentId Join ( select DepartmentId, Salary , dense_rank () over (partition by DepartmentID order by Salary desc ) as RowRank from Employee ) RK on RK.DepartmentId = Department.Id and Employee.Salary = RK.Salary where RK.RowRank<=3 group by Department.Name ,Employee.Salary ,Employee.Name
select Department.Name as Department, e1.Name as Employee, Salary from Employee as e1 inner join Department on e1.DepartmentId = Department.Id where 3 > (select count(distinct e2.Salary) from employee as e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId ) order by Department.Name, Salary desc
select Department.Name as Department, e1.Name as Employee, Salary from Employee e1 join Department on Department.Id = e1.DepartmentId where 3 > (select count(distinct e2.Salary) from Employee e2 where e2.DepartmentId = e1.DepartmentId and e2.Salary > e1.Salary )
select Department.Name as Department, e1.Name as Employee, e1.Salary as Salary from Employee e1 join Department on e1.DepartmentId = Department.Id where ( select count(distinct e2.Salary) from Employee e2 where e2.DepartmentId = e1.DepartmentId and e1.Salary < e2.Salary ) <3
select Department.Name as Department, e1.Name as Employee, e1.salary from Employee e1 inner join Department on e1.DepartmentId = Department.id where 3 > (select count(Distinct e2.salary) from Employee e2 where e2.salary > e1.salary and e1.DepartmentId = e2.DepartmentId )
select Department.Name as Department, e1.Name as Employee,Salary from Employee as e1 join Department on e1.DepartmentId = Department.Id where 3 > (select count(distinct e2.Salary) from Employee as e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select Department.Name as Department, e1.Name as Employee,e1.Salary from Employee as e1 join Department on e1.DepartmentId = Department.Id where 3 > (select count(distinct e2.Salary) from Employee as e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select Department.Name as Department, x.Name as Employee, Salary from (select *, dense_rank() over (partition by DepartmentId order by Salary Desc) as `rank` from Employee) x join Department on x.departmentId = Department.id where `rank` <= 3
select Department.Name as Department,Employee.Name as Employee,Salary from Employee,Department where Employee.DepartmentId = Department.Id and Employee.Id not in (select D.Id from Employee as A, Employee as B, Employee as C, Employee as D where A.Salary > B.Salary and B.Salary > C.Salary and C.Salary > D.Salary and A.DepartmentId = B.DepartmentId and A.DepartmentId = C.DepartmentId and A.DepartmentId = D.DepartmentId)
select E.Salary, Department, Employee from ( select E.DepartmentId, E.Salary, D.Name as Department, E.Name as Employee, dense_rank() over (partition by D.Name order by E.Salary desc) as Ranking from Employee E join Department D on E.DepartmentId = D.Id where E.DepartmentId in (select Id from Department) ) E join Department D on D.Id = E.DepartmentId where Ranking <= 3
select Employee, Department, Salary from (select e.name as Employee, d.name as Department, e.Salary, Dense_rank () Over (Partition by d.name Order by e.salary desc) as ranking from Employee as e Join Department as d On e.departmentid = d.id) as new where new.ranking <= 3
select Name as Department, Employee, Salary from ( SELECT d.Name, e.Name as Employee, e.Salary, dense_rank() OVER(PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) as rank1 from Employee e left join Department d on e.DepartmentId = d.Id where d.Id is not null ) T where rank1 <= 3
select SalaryRank.DepartmentName as "Department",Employee.Name as "Employee",Employee.Salary from Employee,(select Department.Id as DepartmentId,Department.Name as DepartmentName,rank() over(partition by DepartmentId order by Salary desc) as "Rank" ,Employee.Salary from Employee inner join Department on Employee.DepartmentId = Department.Id group by DepartmentId,Salary order by DepartmentId,Salary desc) as SalaryRank where Employee.Salary = SalaryRank.Salary and Employee.DepartmentId = SalaryRank.DepartmentId and SalaryRank.Rank <= 3 order by Employee.DepartmentId,Employee.Salary desc,Employee.Id desc
select `Department`, `Employee`, `Salary` from ( select d.Name as `Department`, e.Name as `Employee`, e.Salary as `Salary`, dense_rank() over (partition by DepartmentId order by Salary desc) as `dense_rank` from Employee e join Department d on e.DepartmentId = d.Id ) sub where `dense_rank` <= 3
select a as Department, b as Employee, Salary from (select department.name as a, employee.name as b, salary, dense_rank() over (partition by department.name order by salary desc) as Rnk from employee join department on employee.departmentid = department.id) as NEwTable where Newtable.rnk<=3 order by rnk
select a.Department, a.Employee, a.Salary from ( select b.Name Department, e.Name Employee, e.salary, dense_rank() OVER ( PARTITION BY b.Name ORDER BY e.salary DESC ) salary_order from Employee e left join Department b on e.DepartmentId = b.Id ) a where salary_order<=3 and department is not null order by Department, Salary desc
select a.Department, a.Employee, a.Salary from ( select b.Name as Department, a.Name as Employee, a.Salary as Salary, Dense_rank() over (Partition by b.Name order by a.Salary DESC) as dept_sal_rank from Employee a Inner join Department b on a.departmentid = b.Id ) a where a.dept_sal_rank <= 3
select a.department department, a.employee employee, a.salary salary from (select dense_rank() over (partition by d.name order by salary desc) as ranking, d.name department, e.name employee, salary from employee e join department d on e.departmentid = d.id) a where a.ranking <=3
select a.department_name as Department, a.name as Employee, a.salary From (select e.name, d.name as department_name, e.salary, e.departmentid, dense_rank () over (partition by departmentid order by salary desc) rnk from employee e join department d on e.departmentid = d.id ) a where a.rnk <= 3
select a.name as department, b.name as employee, salary from (select *, dense_rank() over(partition by departmentid order by salary desc) as ranks from employee) b inner join department a on a.id = b.departmentid where ranks <= 3
select a.name as department, b.name as employee, salary from (select name, salary, departmentid, dense_rank() over(partition by departmentid order by salary desc) as `rank` from employee) b inner join department a on a.id = b.departmentid where `rank` <= 3
select a.name as department, b.name as employee, salary from (select name, salary, departmentid, dense_rank() over(partition by departmentid order by salary desc) as ranks from employee) b inner join department a on a.id = b.departmentid where ranks <= 3
select aa.Department, aa.Employee, aa.Salary from( select d.Name as Department, e.Name as Employee, e.Salary, DENSE_RANK() OVER(PARTITION BY e.DepartmentId ORDER BY e.Salary DESC ) Salary_rank from Employee e join Department d on e.DepartmentId = d.Id ) aa where Salary_rank in(1,2,3)
select anon_1.department as Department, anon_1.name as Employee, anon_1.salary as Salary from ( select e.name, e.salary, d.name as department, dense_rank() over ( partition by e.departmentid order by e.salary desc ) as salary_rank from employee e join department d on e.departmentid = d.id ) anon_1 where anon_1.salary_rank <= 3
select b.Name AS 'Department', a.Name AS 'Employee', a.Salary from Employee a JOIN Department b on a.DepartmentId = b. Id where 3 > (select count(distinct c.Salary) from Employee c where c.Salary > a.Salary and c.DepartmentId = a.DepartmentId )
select b.Name as 'Department',a.Name as 'Employee', a.Salary from (SELECT e.*, dense_rank() OVER (partition by DepartmentId ORDER BY Salary DESC) AS sal_rank FROM Employee e) AS a join Department b on a.DepartmentId=b.Id where sal_rank<=3
select b.name as "Department",a.name as "Employee",a.salary as "Salary" from ( select * from ( select dense_rank()over(partition by departmentid order by salary desc) as sal_rank, name, salary,departmentid from employee ) as t where t.sal_rank<=3 ) a inner join department b on a.departmentid=b.id
select b.name as Department , a.name as Employee, a.salary from (select *, dense_rank() over(partition by departmentid order by salary desc) as `rank` from employee) a join department b on a.departmentid = b.id where a.rank <4
select b.name as Department, a.Name as Employee, a.Salary from ( select *, dense_rank () over (partition by DepartmentId order by Salary desc) as rk from Employee)a join Department b on a.DepartmentId=b.Id where a.rk<=3
select b.name as Department, a.name as Employee, salary from (select *, dense_rank() over (partition by departmentid order by salary desc) as max_salary from Employee) a,Department b where a.departmentid = b.id and a.max_salary <= 3
select b.name as Department, a.name as employee, a.salary from (select *, dense_rank() over(partition by DepartmentId order by salary desc) as rnk from employee) a join Department b ON a.DepartmentId=b.id where a.rnk<=3
select b.name as Department,a.name as Employee, a.salary from employee a join department b on a.departmentId = b.Id where 3> (select count(distinct c.salary) from employee c where c.salary>a.salary and a.departmentId = c.departmentId)
select b.name as department, a.name as employee, a.salary as salary from (select name, departmentid, salary, dense_rank() over (partition by departmentid order by salary desc) as rk from employee) a join department b on a.departmentid = b.id where rk < 4
select b.name as department, a.name as employee, salary from (select *, dense_rank() over(partition by departmentid order by salary desc) as ranks from employee) a inner join department b on a.departmentid = b.id where ranks <= 3
select b.name department, a.name employee, salary from (select *, dense_rank() over(partition by departmentid order by salary desc) rnk from employee) a join department b on a.departmentid = b.id where rnk between 1 and 3
select c.Department as Department, c.Name as Employee, c.Salary from (select a.Name, a.Salary, b.Name as Department, dense_rank() over(partition by DepartmentId order by Salary desc) as rnk from Employee a left join Department b on a.DepartmentId = b.Id) c where rnk <= 3 and Department is not null
select c.Department, c.Employee, c.Salary from ( select b.name as Department, a.name as Employee, a.salary as Salary, dense_rank() over(partition by departmentid order by salary desc) as rnk from employee a, department b where a.departmentid = b.id ) c where rnk<=3
select c.Department, c.Employee, c.Salary from( select d.name as Department, e.name as Employee, e.Salary as Salary, DENSE_RANK() over (partition by d.name order by e.salary desc) as dept_salary_rank from Employee e inner join Department d on e.DepartmentId = d.id ) c where c.dept_salary_rank <= 3
select c.department, c.employee, c.salary from (select b.name as department, a.name as employee, a.salary, dense_rank() over(partition by departmentid order by salary desc) as rnk from employee a inner join department b on a.departmentid = b.id) c where rnk < 4
select c.department, c.employee, c.salary from( select d.name as department, e.name as employee, e.salary as salary, dense_rank() over (partition by d.name order by e.salary desc) as dept_salary_rank from employee e inner join department d on e.departmentid = d.id ) as c where c.dept_salary_rank <= 3
select c.name as Department, final.name as Employee, final.salary as Salary from (select a.* from (select *, row_number() over (partition by departmentid order by salary desc) as rn from (select distinct salary, departmentid from employee) as dis) as top join employee a on a.salary=top.salary and a.departmentid=top.departmentid where top.rn<=3) as final join department c on final.departmentid=c.id
select d.Name 'Department', e.Name 'Employee', e.Salary from (select Name, Salary, DepartmentId, dense_rank() over (partition by DepartmentId order by Salary desc) as 'Rank' from Employee) e, Department d where e.DepartmentId = d.Id and e.Rank < 4
select d.Name AS 'Department', e.Name AS 'Employee', e.Salary from Employee e join Department d on e.DepartmentId = d.Id where 3 > (select count(distinct e2.Salary) from Employee e2 where e2.Salary > e.Salary and e.DepartmentId = e2.DepartmentId)
select d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary from Employee e1 join department d on e1.DepartmentId = d.Id where ( select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )<3
select d.Name AS 'Department', e1.Name AS 'Employee', e1.Salary from Employee e1 join department d on e1.DepartmentId = d.Id where 3 > (select count(distinct e2.salary) from Employee e2 where e2.Salary>e1.Salary AND e1.DepartmentId = e2.DepartmentId)
select d.Name AS 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 JOIN Department d ON d.Id = e1.DepartmentId where 3 > ( select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary AND e2.DepartmentId = e1.DepartmentId )
select d.Name AS Department, e1.name as Employee, e1.Salary from Employee e1 JOIN Department d ON e1.DepartmentId = d.Id where 3> ( select count(distinct e2.Salary) FROM employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name As 'Department' , e1.Name As 'Employee' , e1.Salary As 'Salary' From Employee e1 JOIN Department d on e1.departmentId = d.Id where 3>( select count(Distinct e2.Salary) from Employee e2 where e2.DepartmentId = e1.DepartmentId AND e2.Salary > e1.Salary )
select d.Name Department, e.Name Employee, e.Salary from Department d, ( select dense_rank() over (partition by DepartmentId order by Salary desc) rn, Name, Salary, DepartmentId from Employee ) e where e.DepartmentId = d.Id and e.rn <= 3
select d.Name Department, e.Name Employee, e.Salary from Employee e inner join department d on e.DepartmentId=d.Id where 3>(select count(DISTINCT e2.Salary) from Employee e2 where e2.Salary>e.Salary AND e.DepartmentId = e2.DepartmentId )
select d.Name Department, e.Name Employee, e.Salary from Employee e join department d on e.DepartmentId=d.Id where 3>(select count(DISTINCT e2.Salary) from Employee e2 where e2.Salary>e.Salary AND e.DepartmentId = e2.DepartmentId )
select d.Name Department, e1.Name Employee, e1.Salary Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > ( Select count(distinct salary) from Employee e2 where e2.Salary> e1.Salary and e2.DepartmentId = e1.DepartmentId)
select d.Name Department, e1.Name Employee, e1.Salary from Employee as e1 join Department as d on e1.DepartmentId = d.Id where 3 > (select count(distinct(e2.Salary)) from Employee as e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId)
select d.Name Department, e1.Name Employee, e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > (select count(distinct(e2.Salary)) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name Department,e1.Name Employee,Salary from Employee e1 inner join Department d on e1.DepartmentId=d.Id where 3 > ( select count(distinct salary) from Employee e2 where e2.DepartmentId=e1.DepartmentId and e2.Salary>e1.Salary )
select d.Name `Department`, e.Name `Employee`, e.Salary from (select Name, Salary, DepartmentId, dense_rank() over ( partition by DepartmentId order by Salary desc) r from Employee) as e join Department d on e.DepartmentId = d.Id where e.r <= 3
select d.Name as "Department", e.Name "Employee", e.Salary from Employee e join Department d on d.Id = e.DepartmentId where 3> (select count(distinct Salary) from Employee where Salary > e.Salary and e.DepartmentId = Employee.DepartmentId)
select d.Name as "Department", e.Name as "Employee", e.salary from employee e join Department d on e.DepartmentId = d.id where 3 > (select count(distinct es.salary) from employee es where es.salary > e.salary and e.DepartmentId = es.DepartmentId)
select d.Name as "Department", e1.Name as 'Employee', e1.Salary from Employee e1, Department d where e1.DepartmentId = d.Id and 3> ( select count(distinct(e2.Salary)) from Employee e2 where e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
select d.Name as "Department", t1.Name as "Employee", t1.Salary from ( select DepartmentId, Name, Salary, DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary desc) as "rank" from employee) t1 join department d on t1.DepartmentId = d.id where t1.rank <= 3
select d.Name as 'Department', a.Name as 'Employee', a.Salary as 'Salary' from (select e.*, Dense_Rank() over (partition by e.DepartmentId order by e.Salary desc) as ran from employee e ) a join Department d on a.DepartmentId = d.Id where ran <=3
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 JOIN Department d ON e1.DepartmentId = d.Id where 3 > ( select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 join Department d on (d.Id = e1.DepartmentId) where 3 > (select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary and e2.DepartmentId = e1.DepartmentId)
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where ( select count(distinct e2.salary) from Employee e2 where e2.salary > e1.salary and e1.DepartmentId = e2.DepartmentId )<3
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > ( select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId ) order by Department,Salary DESC
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > ( select count(distinct e2.salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > ( select count(distinct e2.salary) from Employee e2 where e2.salary > e1.salary and e1.DepartmentId = e2.DepartmentId )
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > ( select count(distinct(e2.salary)) from employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > (select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name as 'Department', e1.Name as 'Employee', e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > (select count(distinct(e2.Salary)) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name as 'Department', e1.Name as 'Employee',e1.Salary from Employee e1 join Department d on e1.DepartmentId=d.Id where 3>( select count(distinct e2.salary) from Employee e2 where e2.Salary>e1.Salary and e1.DepartmentId=e2.DepartmentId )
select d.Name as 'Department', e3.Name as 'Employee', e3.Salary from (select * from Employee e1 where 3 > (select count(distinct e2.Salary) from employee e2 where e2.salary > e1.salary and e1.DepartmentId = e2.DepartmentId) ) e3 inner join Department d on e3.DepartmentId = d.Id
select d.Name as 'Department',e.Name as 'Employee' , e.Salary as 'Salary' from Employee e inner join Department d on d.Id = e.DepartmentId where (select count(Distinct e2.salary) from Employee e2 where e2.salary > e.salary and e.DepartmentId = e2.DepartmentId) < 3
select d.Name as 'Department',e.Name as 'Employee',e .Salary from ( select * , dense_rank() over (partition by DepartmentId order by Salary desc) as 'rank' from Employee) as e join Department d on e.DepartmentId=d.Id where e.rank <=3 order by d.Name asc ,Salary desc
select d.Name as Department , e.Employee , e.Salary from (select Name as Employee , Salary ,DepartmentID ,dense_rank() over (partition by DepartmentID order by Salary desc) as rn from Employee)e , Department d where e.DepartmentID = d.ID and rn < 4
select d.Name as Department , e1.Name as Employee, e1.Salary as Salary from Employee as e1 join Department as d on e1.DepartmentId = d.ID where 3 > ( select count(Distinct e2.Salary) from Employee as e2 where e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId )
select d.Name as Department, a. Name as Employee, a. Salary from ( select e.*, dense_rank() over (partition by DepartmentId order by Salary desc) as DeptPayRank from Employee e ) a join Department d on a. DepartmentId = d. Id where DeptPayRank <=3
select d.Name as Department, a.Name as Employee, Salary from (select * from ( select DepartmentId , Name, Salary, dense_rank() over(partition by DepartmentId order by Salary desc) as rnk from Employee) sub where rnk <= 3) a join Department d on a.DepartmentId = d.Id
select d.Name as Department, a.Name as Employee, a.Salary from (select *, dense_rank() over (partition by DepartmentId order by Salary desc) as DeptPayRank from Employee ) a join Department d on a.DepartmentId = d.Id where DeptPayRank <= 3
select d.Name as Department, e.Name as Employee, Salary from Employee e join Department d on e.DepartmentId = d.Id where ( select count(distinct e_t.Salary) from Employee e_t where e_t.Salary > e.Salary and e.DepartmentId = e_t.DepartmentId ) < 3
select d.Name as Department, e.Name as Employee, Salary from Employee e join Department d on e.DepartmentId=d.Id join (SELECT e1.Id, count(distinct e2.Salary) as rk from Employee e1 join employee e2 on e1.Salary<=e2.Salary and e1.DepartmentId=e2.DepartmentId group by 1 ) temp on temp.Id=e.Id where rk<=3
select d.Name as Department, e.Name as Employee, e.Salary FROM Employee as e JOIN Department as d ON d.Id = e.DepartmentId WHERE (select count(distinct salary) from employee e2 where e2.salary>e.salary and e2.DepartmentId = e.DepartmentId) < 3 ORDER BY Salary DESC
select d.Name as Department, e.Name as Employee, e.Salary FROM Employee e JOIN Department d ON e.DepartmentId = d.Id WHERE 3 > (select count(distinct e2.salary) from employee e2 where e2.salary > e.salary and e.DepartmentId = e2.DepartmentId)
select d.Name as Department, e.Name as Employee, e.Salary as Salary from ( select *, dense_rank() over(partition by DepartmentId order by Salary desc) as rank_num from Employee )e join Department d on e.DepartmentId = d.Id where rank_num <=3
select d.Name as Department, e.Name as Employee, e.Salary as Salary from Department as d, Employee as e where d.id = e.DepartmentId and 3 > ( select count(distinct salary) from Employee where e.DepartmentId = Employee.DepartmentId and Employee.Salary > e.Salary )
select d.Name as Department, e.Name as Employee, e.Salary as Salary from Employee e join Department d on e.DepartmentId=d.Id where (select count(distinct a.Salary) from Employee a where a.DepartmentId=e.DepartmentId and a.Salary>e.Salary)<3
select d.Name as Department, e.Name as Employee, e.Salary from (select *, dense_rank() over(partition by DepartmentId order by Salary DESC) as ranks from Employee) e join Department d on e.DepartmentId = d.Id where e.ranks<=3
select d.Name as Department, e.Name as Employee, e.Salary from (select e1.Name,e1.Salary, e1.DepartmentId from Employee e1 join employee e2 on e1.DepartmentId = e2.DepartmentId and e1.Salary <= e2.Salary group by e1.Id having count(distinct e2.Salary) <=3) e join department d on e.DepartmentId = d.Id order by d.Name, e.Salary Desc
select d.Name as Department, e.Name as Employee, e.Salary from Department d inner join Employee e on d.Id=e.DepartmentId where 3 > (select count(distinct e2.salary) from Employee e2 where e.salary < e2.salary and e2.DepartmentId=e.DepartmentId)
select d.Name as Department, e.Name as Employee, e.Salary from Department d join Employee e on d.Id=e.DepartmentId where 3 > (select count(distinct e2.salary) from Employee e2 where e.salary < e2.salary and e2.DepartmentId=e.DepartmentId)
select d.Name as Department, e.Name as Employee, e.Salary from Employee e inner join Department d on (e.DepartmentId = d.Id) where (select count(distinct e1.Salary) from Employee e1 where e.DepartmentId = e1.DepartmentId and e1.Salary > e.Salary) < 3
select d.Name as Department, e.Name as Employee, e.Salary from Employee e join Department d on d.Id= e.DepartmentId where 3 > ( select count(distinct e2.Salary) from Employee e2 where e.Salary < e2.Salary and e.DepartmentId=e2.DepartmentId )
select d.Name as Department, e.Name as Employee, e.Salary from Employee e join Department d on e.DepartmentId = d.Id where (select count(distinct salary) from employee e2 where e2.DepartmentId = e.DepartmentId and e2.salary > e.salary) < 3
select d.Name as Department, e.Name as Employee, e.Salary from Employee e join Department d on e.DepartmentId = d.Id where 3 > ( select count(distinct e2.Salary) as s2 from Employee e2 where e2.Salary > e.Salary and e2.DepartmentId = e.DepartmentId )
select d.Name as Department, e.Name as Employee, e.Salary from Employee e right join (select Salary, DepartmentId from (select Salary, DepartmentId, count(1) over (partition by DepartmentId order by Salary desc) as rk from (select distinct Salary, DepartmentId from Employee)unique_salary)with_rank where rk <= 3)top_3 on e.Salary = top_3.Salary and e.DepartmentId = top_3.DepartmentId left join Department d on d.Id = e.DepartmentId where d.Name is not null
select d.Name as Department, e1.Name as Employee, e1.Salary as Salary from Employee e1 join Department d on e1.DepartmentId=d.Id where 3 > (select count(distinct Salary)from Employee e2 where e2.Salary > e1.Salary and e2.DepartmentId=d.Id)
select d.Name as Department, e1.Name as Employee, e1.Salary from Employee e1 inner join Department d on e1.DepartmentID = d.Id where 3 > (select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name as Department, e1.Name as Employee, e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > ( select count(distinct e2.salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name as Department, e1.Name as Employee, e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > ( select count(distinct(e2.Salary)) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId )
select d.Name as Department, e1.Name as Employee, e1.Salary from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > (select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId)
select d.Name as Department, e1.Name as Employee, e1.Salary from Employee e1 left join Employee e2 on e1.Salary <= e2.Salary and e1.DepartmentId = e2.DepartmentId inner join Department d on e1.DepartmentId = d.Id group by d.Name, e1.Name having count(distinct e2.DepartmentId, e2.Salary) <= 3
select d.Name as Department, e1.Name as Employee, e1.Salary from Employee e1, department d where 3 > (select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId ) and e1.DepartmentId=d.Id
select d.Name as Department, rank_table.Name as Employee, rank_table.Salary as Salary from (select Name, Salary, DepartmentId, DENSE_RANK() OVER w as salary_rank from Employee WINDOW w as (partition by DepartmentId order by Salary DESC)) rank_table join Department d on rank_table.DepartmentId = d.Id where salary_rank < 4
select d.Name as Department, t.Name as Employee, t.Salary from Department d join (select *, dense_rank() over (partition by DepartmentId order by Salary desc) as rnk from Employee) t on d.Id = t.DepartmentId where rnk <= 3
select d.Name as Department, tmp.Name as Employee, tmp.Salary from ( select Name, Salary, DepartmentId, dense_rank() over(partition by DepartmentId order by Salary desc) as drk from Employee) tmp join Department d on tmp.DepartmentId = d.Id where tmp.drk <= 3
select d.Name as Department,e.Name as Employee,Salary from department d, (select *,dense_rank()over(partition by departmentid order by salary desc)r from employee) e where d.id=e.departmentid and e.r in (1,2,3)
select d.Name as Department,e.Name as Employee,e.Salary as Salary from Employee e join Department d ON e.DepartmentId=d.Id where (select count(DISTINCT e1.Salary) from Employee e1 where e1.DepartmentId=e.DepartmentId and e1.Salary>e.Salary) < 3 order by d.Name,e.Salary DESC
select d.Name as Department,e.Name as Employee,e.Salary from Department d,Employee e where d.Id=e.DepartmentId and 3>( select count(distinct Salary) from Employee where Salary>e.Salary and DepartmentId = e.DepartmentId )
select d.Name as Department,e.Name as Employee,e.Salary from Employee e join Department d on e.DepartmentId = d.Id where 3>(select count(distinct Salary) from Employee ee where ee.Salary>e.Salary and e.DepartmentId=ee.DepartmentId)
select d.Name as department,a.name as employee,a.salary from (select dense_rank() over(partition by DepartmentId order by Salary desc) as ranking, Name, salary, departmentId from employee) as a join department d on d.id=a.departmentid where a.ranking<=3
select d.department, d.employee, d.salary from (select b.name as department, a.name as employee, a.salary, dense_rank()over(partition by b.name order by salary desc) as c from employee a join department b on a.departmentid=b.id) d where c<4
select d.name "Department", e.name "Employee", e.salary "Salary" from Employee e join Department d on e.DepartmentId = d.Id where (select count(distinct Salary) from Employee e2 where e.DepartmentId = e2.DepartmentId and e.Salary<e2.Salary) <3
select d.name Department ,e1.name Employee,e1.Salary from Employee e1 join Department d on d.Id=e1.DepartmentId where (select count(distinct e2.salary) from Employee e2 where e2.salary > e1.salary and e1.DepartmentId = e2.DepartmentId)<3
select d.name Department, a.name Employee, Salary from (select *,dense_rank()over(partition by departmentid order by salary desc) rk from employee) a join department d on d.id=a.departmentid where rk <=3
select d.name Department, e.name employee, e.salary from (select *, dense_rank() over ( partition by DepartmentId order by salary desc ) as `salary_rank` from employee) e, Department d where e.DepartmentId = d.id and salary_rank <= 3
select d.name Department,e1.name Employee, e1.Salary from department d join employee e1 on d.id=e1.departmentid where (select count(distinct e2.salary) from employee e2 where e2.salary>e1.salary and e2.departmentid = e1.departmentid)<3
select d.name as 'Department' ,e1.name as 'Employee',e1.salary from Employee e1 join Department d on e1.DepartmentId=d.Id where 3>( select count(distinct e2.salary) from Employee e2 where e2.salary>e1.salary And e1.DepartmentId=e2.DepartmentId )
select d.name as 'Department', A.name as 'Employee', A.salary as 'Salary' from ( select departmentid, name, id, salary, dense_rank() over(partition by departmentid order by salary desc) 'salary_order' from employee e )A inner join department d on d.id=A.departmentid where A.salary_order<=3
select d.name as 'Department', a.name as 'Employee', a.salary from( select Name, Salary, Departmentid, Dense_rank() over ( Partition by Departmentid Order by Salary desc) as rk from Employee) as a join department d on a.departmentid = d.id where rk <= 3
select d.name as 'Department', e.name as 'Employee', e.salary as 'Salary' from employee e inner join department d on (e.departmentId = d.id) where (select count(distinct e1.salary) from employee e1 where e1.departmentId = d.id and e.salary < e1.salary) < 3
select d.name as 'Department', e1.Name as 'Employee', e1.salary from Employee e1 join department d on e1.departmentId= d.id where 3 > (select count(distinct e2.salary) from employee e2 where e2.salary > e1.salary and e1.departmentid = e2.departmentid)
select d.name as 'Department', tab.name as 'Employee', tab.salary as 'Salary' from (select *, dense_rank() over(partition by departmentid order by salary desc) as rank_aa from employee) as tab join department d on tab.DepartmentId = d.id where tab.rank_aa < 4
select d.name as 'Department',e.name as 'Employee',e.Salary from department d,employee e where d.id=e.departmentid and (select count(distinct salary) from employee where departmentid=e.departmentid and salary>e.salary)<3
select d.name as 'Department',r1.name as 'Employee',r1.salary as 'Salary' from (select departmentid,name,salary,dense_rank()over(partition by departmentid order by salary desc) as RK from employee)r1 join department d on d.id=r1.departmentid where r1.RK<=3 order by d.name
select d.name as 'department', e2.name as 'employee', e2.salary from employee as e2 inner join department as d on e2.departmentid = d.id where 3> (select count(distinct salary) from employee as e1 where e2.salary < e1.salary and e1.departmentid = e2.departmentid)
select d.name as Department , e.name as Employee , Salary from employee e join Department d on e.DepartmentId = d.Id where 3 > (select count(distinct salary) from employee where salary > e.salary and DepartmentId = e.DepartmentId)
select d.name as Department ,e.name as Employee ,e.Salary from (select *,dense_rank() over (partition by DepartmentId order by salary desc) as n from Employee) e join Department d on e.Departmentid = d.id where e.n<=3
select d.name as Department, a.name as Employee, a. Salary from( select e.*, dense_rank() over (partition by e.departmentID order by salary desc) as deptrank from employee e )a join department d on a.departmentid = d.id where deptrank<=3
select d.name as Department, a.name as Employee, a.salary as Salary from(select e.*, dense_rank() over(partition by departmentID order by salary desc) as rank1 from employee e) a join department d on a.departmentid = d.id where a.rank1 <= 3
select d.name as Department, e.name as Employee, Salary from ( select DepartmentId, Salary, Name, dense_rank() over (PARTITION BY DepartmentId ORDER BY salary DESC)rnum from employee) e join department d where e.departmentid=d.id and rnum<4 order by department
select d.name as Department, e.name as Employee, Salary from ( select dense_rank() over ( PARTITION BY DepartmentId ORDER BY salary DESC) rownum, DepartmentId, Salary, Name from employee) e join department d where e.departmentid=d.id and rownum <4 order by department
select d.name as Department, e.name as Employee, Salary from (select *, dense_rank() over(partition by DepartmentId order by Salary Desc) as 'rank' from Employee) e join Department d on e.DepartmentId=d.Id where e.rank<=3 order by d.id, e.rank
select d.name as Department, e.name as Employee, e.Salary from (select name,salary, departmentId ,dense_rank()over(partition by departmentId order by salary desc) as rk from employee )e left join department d on d.id=e.departmentid where e.rk<=3 and d.name is not null
select d.name as Department, e.name as Employee, e.salary as Salary from Department D, Employee E, Employee E2 where D.id = e.departmentid and e.departmentid = e2.departmentid and e.salary <=e2.salary group by d.id, e.name having count(distinct e2.salary) <=3 order by d.name, e.salary desc
select d.name as Department, e.name as Employee, e.salary as Salary from department d , (select name,salary,departmentid,dense_Rank() over (partition by departmentid order by salary desc) as topsal from employee ) e where e.departmentid=d.id and e.topsal in (1,2,3)
select d.name as Department, e.name as Employee, e.salary as Salary from employee as e join department as d on e.departmentid = d.id where 3 > ( select count(distinct e2.salary) from employee as e2 where e.departmentid = e2.departmentid and e.salary < e2.salary )
select d.name as Department, e.name as Employee, e.salary as Salary from employee as e join department as d on e.departmentid = d.id where 3 > (select count(distinct e1.salary) from employee e1 where e.salary < e1.salary and e.departmentid = e1.departmentid)
select d.name as Department, e.name as Employee, e.salary from employee e, department d where ( select count(distinct salary) from employee where departmentid = e.departmentid and salary > e.salary ) < 3 and e.departmentid = d.id order by e.salary desc
select d.name as Department, e.name as Employee, salary as Salary FROM employee e JOIN department d ON d.id = e.departmentId WHERE (departmentId, salary ) in ( SELeCt distinct departmentID, salary FROM ( SELECT departmentId, salary , dense_rank() OVER(Partition by departmentId ORDER BY salary DESC) as salary_rank FROM employee )a WHERE salary_rank <=3 )
select d.name as Department, e.name as Employee, salary as Salary from ( SELECT NAME, salary, departmentid, DENSE_RANK() OVER (PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) row_num FROM EMPLOYEE ) e LEFT JOIN DEPARTMENT D ON e.DEPARTMENTID=D.ID where row_num<=3 and d.name is not null order by 3
select d.name as Department, e.name as Employee,e.salary from Employee e inner join Department as d on e.DepartmentId = d.id where 3 > ( SELECT COUNT(distinct e1.Salary) FROM Employee AS e1 WHERE e1.Salary > e.Salary AND e1.DepartmentID = e.DepartmentID ) order by d.id ASC, e.salary Desc
select d.name as Department, e.name as employee, e.salary as Salary from employee as e inner join department as d on e.departmentid= d.id where (select count(distinct salary) from employee where departmentid= e.departmentid and salary > e.salary) < 3 order by e.departmentid, e.salary desc
select d.name as Department, e1.name as Employee, e1.Salary from Employee e1,Department d where e1.DepartmentId = d.Id and 3 >( select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary and e1.DepartmentId = e2.DepartmentId)
select d.name as Department, e1.name as Employee, e1.salary as Salary from EMPLOYEE e1 join Department d ON e1.DepartmentId=d.Id where 3>(select count(distinct salary) FROM EMPLOYEE e2 where e1.DepartmentId=e2.departmentId and e1.salary < e2.salary)
select d.name as Department, e1.name as Employee, e1.salary as Salary from employee as e1 join department as d on d.id = e1.departmentid where (select count(distinct(e2.salary)) from employee as e2 where e2.salary > e1.salary and e1.departmentid = e2.departmentid) < 3
select d.name as Department, temp.name as Employee, temp.salary from (select name, salary, DepartmentId, dense_rank() over (Partition by DepartmentId order by salary desc) as ranks from employee) as temp join Department d on d.Id = temp.DepartmentId where ranks <= 3
select d.name as Department,e.name as Employee,e.Salary from department d join (select id,name,salary,departmentid,dense_rank() over (partition by departmentid order by salary desc) as temprank from Employee)as e on d.id=e.departmentid where temprank<=3
select d.name as Department,f.name as Employee,f.salary from (select e.*,dense_rank() over(Partition by e.departmentid order by e.salary desc) as ranking from employee e)f inner join department d on d.id=f.departmentid where f.ranking<=3
select d.name as department, a.name as employee, a.salary as salary from (select *, dense_rank()over(partition by DepartmentId order by salary desc) as rnk from employee)a inner join department d on a.DepartmentId = d.id where rnk <= 3 group by 1,2,3 order by 1,2,3 desc
select d.name as department, e.name as employee, e.salary as salary from (select e1.name as name , e1.salary, departmentid as id from employee e1 where 3 > ( select count(distinct e2.salary) from employee e2 where e2.salary >e1.salary and e1.departmentid = e2.departmentid)) as E join department as d on d.id = e.id
select d.name as department, e.name as employee, e.salary as salary from department d, (select *, dense_rank() over (partition by departmentid order by salary desc) as rank_s from employee) e where d.id = e.departmentid and e.rank_s <= 3
select d.name as department, e.name as employee, e.salary as salary from employee e, department d where d.id = e.departmentid and 3 > (select count(distinct e2.salary) from employee e2 where e2.salary > e.salary and e2.departmentid = e.departmentid)
select d.name as department, e.name as employee, e.salary from employee e join department d on e.departmentid = d.id where 3 > (select count(distinct(salary)) from employee e2 where e2.salary > e.salary and e2.departmentid = e.departmentid)
select d.name as department, e1.name as Employee, e1.Salary from employee as e1 join department as d on e1.departmentid = d.id where 3> (select count(distinct e2.salary) from employee as e2 where e2.salary > e1.salary and e2.departmentid = e1.departmentid)
select d.name as department, y.name as employee, y.salary as salary from ( select * from ( select *, dense_rank() over(partition by departmentid order by salary desc) as rk from employee ) x where x.rk <= 3 ) y join department d on y.departmentid = d.id
select d.name as department,e.name as Employee,e.salary from employee e inner join ( select id, departmentid,salary, dense_rank() over(partition by departmentid order by salary desc) as rnk from employee) A on e.departmentid=A.departmentid and e.id=A.id inner join department d on d.id=e.departmentid where A.rnk<=3
select d.name as department,e.name as employee,e.salary from employee e join department d on e.departmentid = d.id where 3 > ( select count(distinct e2.salary) from employee e2 where e2.salary > e.salary and e2.departmentid = e.departmentid )
select d.name as department,t.name as employee, salary FROM (select departmentId, name, salary, dense_rank()over(partition by DepartmentID order by salary DESC) as ranking from employee ) as t join department as d on d.id= t.departmentid where ranking <=3 order by department
select d.name department, e1.name employee, e1.salary salary from employee e1 join employee e2 join department d on e1.departmentid=e2.departmentid and e1.salary<=e2.salary and d.id=e2.departmentid group by 1,2,3 having count(distinct(e2.salary))<=3
select de.name as department, em.name as employee, salary from(select departmentid, name, salary, dense_rank()over(partition by departmentid order by salary desc)as r from employee)em join department de on de.id=em.departmentid where r<=3
select depTable.Name as Department , empTable.Name as Employee , empTable.Salary Salary from Department depTable inner join Employee empTable on empTable.DepartmentId = depTable.Id where Salary in ( select empTable2.Salary from Employee as empTable2 inner join (select empTable3.Salary salary2 from Employee as empTable3 inner join Department depTable2 on empTable3.DepartmentId = depTable2.Id where depTable.Id = depTable2.Id group by empTable3.Salary order by empTable3.Salary desc limit 0,3 )any on empTable2.Salary = any.salary2 and depTable.Id = empTable2.DepartmentId )
select department , employee, salary from ( select d.name as department, e.name as employee, sum(e.salary) as salary, dense_rank () over(partition by d.name order by sum(e.salary)desc ) as dr from employee e inner join department d on e.departmentid=d.id group by 1 ,2 )sub where sub.dr<=3
select department, Employee, salary from( select d.Name as department, e.Name as Employee, salary, dense_rank() over(partition by e.DepartmentId order by Salary desc) as ran from Employee e join Department d on e.DepartmentId = d.Id) a where ran < 4
select department, employee, salary from ( select d.name as department, e.name employee, e.salary, dense_rank() over(partition by e.departmentid order by salary desc) as rnk from employee e join department d on d.id=e.departmentid ) tmp where tmp.rnk<=3
select department, employee, salary from ( select e.name as employee, e.salary as salary, d.name as department, dense_rank() over (partition by e.departmentid order by salary desc) as rk from employee e join department d on e.departmentid = d.id ) as temp where rk < 4
select department, employee, salary from (select d.name as department, a.name as employee, a.salary, DENSE_RANK() over(partition by departmentID order by salary desc) as r from employee a inner join department d on a.departmentid=d.id) a where r<=3
select department, employee, salary from (select d.name as department, e.name as employee, e.salary as salary, dense_rank() over (partition by d.name order by e.salary desc) as rn from department d inner join employee e on d.id = e.departmentid) a where rn <=3
select department, employee, salary from (select d.name as department, e.name as employee, e.salary as salary, dense_rank() over (partition by d.name order by e.salary desc) as rnk from employee e join department d on d.id = e.departmentid )x where x.rnk <=3
select department, employee, salary from (select d.name as department,e.name as employee, e.salary, dense_rank() over(partition by e.departmentid order by e.salary desc) as ranking from employee e join department d on e.departmentid = d.id) t where ranking <=3
select department, employee, salary from (select departmentid, a.name department, b.name employee, salary, dense_rank() over (partition by departmentid order by salary desc) `rank` from employee b inner join department a on a.id = b.departmentid ) t where `rank` <= 3
select department, employee, salary from (select departmentid, a.name department, b.name employee, salary, dense_rank() over (partition by departmentid order by salary desc) `rank` from employee b join department a on a.id = b.departmentid ) t where `rank` <= 3
select department, employee, salary from (select e1.id, e1.name as employee, e1.salary, e1.departmentid, dense_rank() over (partition by e1.departmentid order by e1.salary desc) rk, ifnull(e2.name,null) as department from employee e1 join department e2 on e1.departmentid = e2.id) t where rk < 4
select department, name as Employee, salary from ( select e.*, d.name as department, dense_rank() over(partition by e.departmentid order by salary desc) as dr from employee e inner join department d on(e.departmentid = d.id) ) a where dr <= 3
select department, name as employee, salary from ( select b.name as department, a.*, dense_rank() over (partition by DepartmentId order by salary desc) as rnk from employee a inner join department b on a.DepartmentId =b.id) t where rnk<=3
select department,Employee,Salary from (select d.name as department,e.name as Employee,salary,dense_rank()over(partition by e.departmentid order by Salary desc) as r from Employee e left join Department d on d.id=e.departmentid) as t1 where r between 1 and 3 and department is not null
select department,employee, salary from (select b.name as department, a.name as employee, salary, dense_rank()over(partition by departmentid order by salary desc) as rnk from employee a left join department b on a.departmentid = b.id) c where rnk in (1,2,3) and department is not null
select department,employee, salary from (select d.name as department,e.name as Employee, e.salary as Salary,dense_rank() over (partition by departmentId order by salary desc) as rn from employee e join department d on e.departmentid = d.id) a where rn<4
select department.name as "Department", e.name as "Employee", e.salary from (select departmentid,name, salary, dense_rank() over (partition by departmentid order by salary desc) as r from employee) e join department on department.id = e.departmentid where r <= 3
select dept.name Department, emp.name Employee, emp.salary Salary from ( select departmentid , name , salary , dense_rank() over( partition by departmentid order by salary desc) ranking from employee ) emp, department dept where dept.id = emp.departmentid and emp.ranking < 4
select distinct d.Name Department, e.Name Employee, e.Salary from Department d join Employee e on d.Id = e.DepartmentId where e.Salary in (select Top3Salary from (select distinct e2.Salary Top3Salary from Employee e2 where e.DepartmentId = e2.DepartmentId order by e2.Salary desc limit 0,3) as t) order by Department asc, Salary desc
select distinct t3.Department, t4.Name as Employee, t4.Salary from (select t2.Name as Department, t2.Id as DepartmentId, t1.Salary, DENSE_RANK() over (partition by t2.Id order by t1.Salary desc) as Salary_rank from Employee t1 inner join Department t2 on t1.DepartmentId = t2.Id) t3 inner join Employee t4 on t3.DepartmentId = t4.DepartmentId and t4.Salary >= t3.Salary AND t3.Salary_rank<=3
select dp.Name as 'Department', ep.Name as 'Employee', ep.Salary as 'Salary' from ( select e.*, dense_rank() over (partition by DepartmentId order by Salary desc) as Deptpayrank from Employee as e ) as ep inner join Department as dp on dp.Id=ep.DepartmentID where Deptpayrank <=3
select dp.Name as 'Department', ep.Name as 'Employee', ep.Salary as 'Salary' from Employee as ep inner join Department as dp on dp.Id=ep.DepartmentID where 3> ( select count(distinct epe.Salary) from Employee epe where epe.Salary > ep.Salary and ep.DepartmentId = epe.DepartmentId )
select e.Department Department, e.Employee Employee, e.Salary Salary from (select d.Name Department, d.Id DepartmentId, e.Name Employee, e.Salary Salary, DENSE_RANK() OVER (order by e.DepartmentId, e.Salary desc) my_rank from Employee e, Department d where e.DepartmentId=d.Id order by e.DepartmentId, e.Salary desc) e, (select t.DepartmentId, min(t.my_rank) top_rank from (select d.Id DepartmentId, DENSE_RANK() OVER (order by e.DepartmentId, e.Salary desc) my_rank from Employee e, Department d where e.DepartmentId=d.Id order by e.DepartmentId, e.Salary desc ) t group by DepartmentId) d where e.DepartmentId=d.DepartmentId and my_rank <= top_rank + 2
select e1.Name as Employee, e1.Salary, d.Name as Department from Employee e1 join Department d on e1.DepartmentId = d.Id where 3 > (select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary and e2.DepartmentId = e1.DepartmentId)
select h.department, h.employee, h.salary from ( select b.name as department, a.name as employee, a.salary, dense_rank() over(partition by b.name order by a.salary desc) as rnk from employee a left join department b on a.departmentid=b.id where b.name is not null ) h where h.rnk<=3
select j.Department, j.Employee, j.salary from( select d.name Department, e.name Employee, e.salary, dense_rank() over( partition by e.departmentid order by e.salary desc ) ranking from employee e, department d where e.DepartmentId = d.id ) j where ranking <= 3
select m.Name Department, e.Name Employee, Salary from Employee e join ( select (DENSE_RANK() over (partition by DepartmentId order by Salary desc)) r, d.Name, e2.Id from Employee e2 join Department d on d.Id = e2.DepartmentId ) m on m.Id = e.Id where r <= 3
select name as Department, Employee, Salary from ( select e1.Name as 'Employee', e1.Salary, e1.departmentId from Employee e1 where 3 > ( select count(distinct e2.Salary) from Employee e2 where e2.Salary > e1.Salary AND e1.DepartmentId = e2.DepartmentId ) )e join department on department.id=e.departmentId
select q.department, q.employee, q.Salary from (select salary as 'Salary', d.name as department, e.name as employee, dense_rank() over(partition by departmentid order by salary desc) as ranking from employee e join department d on e.departmentid = d.id)q where q.ranking in (1,2,3)
select r.dept Department, r.name Employee, r.salary Salary from ( select e.Name name, e.Salary salary, d.Name dept, dense_rank() over (partition by e.DepartmentId order by salary desc) as salary_rank from Employee e inner join Department d on e.DepartmentId = d.Id) r where r.salary_rank <= 3
select t.Department, t.Employee, t.Salary from ( select d.Name as Department, e.Name as Employee, e.Salary, dense_rank() over(partition by DepartmentId order by Salary desc) as r from Employee as e inner join Department as d on e.DepartmentId = d.Id) as t where t.r <=3
select t.Department, t.Employee, t.Salary from ( select e.Name as Employee, e.Salary, d.Name as Department, DENSE_RANK() over(PARTITION BY DepartmentId order by Salary desc) as rnk from Employee e join Department d on e.DepartmentId = d.Id ) t where t.rnk <= 3
select t.Department, t.Employee, t.Salary from (select d.name as Department, e.name as Employee, e.salary as Salary, dense_rank() over (partition by departmentid order by salary desc) cnt from employee e join department d on e.departmentid=d.id) t where t.cnt<=3
select t.Department, t.Employee,t.Salary from (select b.Name as Department, a.Name as Employee, Salary, dense_rank()over(partition by a.DepartmentId order by a.Salary desc ) as rnk from Employee a left join Department b on a.DepartmentID=b.ID) t where rnk<=3 and Department is not null
select t.Department,Employee,t.Salary from (select d.Name Department,e.Name Employee,e.Salary Salary, dense_rank() over(partition by e.DepartmentID order by e.salary desc) 'Max_salary' from Employee e join Department d on e.DepartmentId=d.Id)t where t.Max_salary<4
select t1.Department, t1.Employee, t1.Salary from ( select d.name as Department, e.name as Employee, e.salary as Salary, DENSE_RANK() over (partition by d.name order by e.salary desc) as myrank from employee e inner join department d on e.departmentid = d.id ) as t1 where t1.myrank <= 3 order by 3 desc
select t2.name as department, t1.name as employee, t1.salary as salary from employee t1 join department t2 on t2.id = t1.departmentid where ( select count(distinct t3.salary) from employee t3 where t3.departmentid = t1.departmentid and t3.salary > t1.salary ) <= 2
select t3.name as department, t1.name as employee, t1.salary from employee t1 join department t3 on t1.departmentid = t3.id where (select count(distinct t2.salary) from employee t2 where t1.departmentid = t2.departmentid and t2.salary > t1.salary) < 3
select tD.Name as 'Department', tE1.Name as 'Employee', tE1.Salary from Employee as tE1 Inner join Department as tD on tE1.DepartmentId = tD.Id Left join Employee as tE2 on tE1.DepartmentId = tE2.DepartmentId and tE1.Salary <= tE2.Salary group by tE1.DepartmentId, tE1.Id having count(distinct tE2.Salary) <= 3 order by tE1.DepartmentId, tE1.Salary desc
select tD.Name as 'Department', tE1.Name as 'Employee', tE1.Salary from Employee as tE1 Inner join Department as tD on tE1.DepartmentId = tD.Id Left join Employee as tE2 on tE1.DepartmentId = tE2.DepartmentId and tE1.Salary <= tE2.Salary group by tE1.Id having count(distinct tE2.Salary) <= 3 order by tE1.DepartmentId, tE1.Salary desc
select tb.Name Department, tc.Name Employee, tc.topsalary Salary from (select departmentid, salary as topsalary, name, DENSE_RANK() over(partition by departmentid order by salary desc) num from employee) tc join Department tb on tc.departmentid = tb.id where tc.num <= 3
select temp.Name as "Employee", temp.Salary , d.Name as "Department" from (select DepartmentId, Name, Salary, dense_rank() over (partition by DepartmentId order by Salary desc) as rank_sal from Employee)temp , Department d where temp.DepartmentId = d.Id and rank_sal < 4
select temp.Name as "Employee", temp.Salary , d.Name as "Department" from (select DepartmentId, Name, Salary, dense_rank() over (partition by DepartmentId order by Salary desc) as rank_sal from Employee)temp inner join Department d on temp.DepartmentId = d.Id and rank_sal < 4
select tmpRNk.DeptName as Department, tmpRNK.Name as Employee, tmpRNK.Salary as Salary from (select Employee.Name, Salary, Department.Name as DeptName, dense_rank() over (partition by DepartmentId order by Salary desc) as rnk from Employee, Department where Employee.DepartmentId=Department.Id) as tmpRNK where rnk <=3
select top.Department, top.Employee, top.Salary from ( select d.Name "Department", e.Salary, e.Name "Employee", dense_rank() over ( partition by e.DepartmentId order by e.Salary desc ) d_rank from Employee e inner join Department d on d.Id = e.DepartmentId ) top where d_rank <= 3
with All_Employee as ( select *, dense_rank() over(partition by departmentID order by salary desc) as rank_employee from Employee ) select D.Name as Department, E.Name as Employee, E.Salary from All_Employee E join Department D on E.DepartmentID = D.ID where rank_employee <= 3
with CTE as (SELECT e.Name as Employee, e.Salary as Salary , d.Name as Department, dense_rank() OVER (PARTITION BY e.DepartmentId ORDER BY e.Salary DESC) as rnk FROM Employee e JOIN Department d ON e.DepartmentId = d.Id) SELECT Department, Employee, Salary FROM CTE WHERE rnk <=3
with CTE as (Select dense_rank()over(partition by departmentid order by salary desc) as rid, b.name as department, a.name as employee, a.salary From employee a join department b On a.departmentid=b.id) SELECT department, employee, salary FROM CTE where rid<=3
with CTE as (select *, dense_rank() over(partition by DepartmentId order by salary desc) as rnk from Employee) select d.name as department,c.name as employee,c.salary from cte c join department d on c.DepartmentId = d.id where rnk <=3
with CTE as (select name, salary, departmentid, dense_rank() over(partition by departmentid order by Salary desc) as ranked_sal_by_dept from employee) select d.name as Department, cte.name as Employee, Salary from CTE inner join department d on cte.departmentid=d.id where ranked_sal_by_dept<=3
with E as ( select Name, Salary, DepartmentId, dense_rank() over(partition by DepartmentId order by Salary desc) as rnk from Employee ) select D.Name as 'Department', E.Name as 'Employee', E.Salary from Department as D inner join E on D.Id=E.DepartmentId where E.rnk<=3
with Employee_salary_rank as ( select Name, Salary, DepartmentId, dense_rank() over(partition by DepartmentId order by Salary desc) as salary_rank from Employee ) select Department.Name as Department, Employee_salary_rank.Name as Employee, Salary from Employee_salary_rank join Department on (Department.Id = Employee_salary_rank.DepartmentId) where salary_rank <= 3
with Sal_rank as (select d.Name as Department,e.Name as Employee,e.Salary, (Dense_Rank() over (partition by e.DepartmentId order by e.Salary DESC)) as rk from Employee e join Department d on e.DepartmentId=d.Id ) select s.Department,s.Employee,s.Salary from Sal_rank s where rk<=3
with Salary_Rank as ( select d.Name as Department, e.Name as Employee, Salary, dense_rank() over (partition by d.Name order by Salary desc) s_rank from Employee e left join Department d on e.DepartmentId = d.Id) select Department, Employee, Salary from Salary_Rank where s_rank <= 3 and Department is not NULL
with T as ( select D.Name as 'Department', E.Name as 'Employee', E.Salary as 'Salary', DENSE_RANK() OVER (PARTITION BY D.Name ORDER BY E.Salary desc) rank_num from Employee as E join Department as D on E.DepartmentId = D.Id) select Department, Employee, Salary from T where rank_num <= 3
with T as (select COALESCE(d.Name) as 'Department', e.Name as 'Employee', e.Salary as 'Salary', dense_rank() over (partition by DepartmentId order by Salary desc) as 'R' from employee e left join Department d on e.DepartmentID = d.Id) select Department, Employee, Salary from t where R <=3 and Department is not null
with T1 as ( select E.name as employee ,E.salary ,D.name as department ,dense_rank() over (partition by D.name order by E.salary desc) as d_rnk from Employee as E join Department as D on E.DepartmentId = D.Id ) select department ,employee ,salary from T1 where d_rnk <= 3
with Top3_Salary as ( select * from (select *, rank() over(partition by DepartmentId order by Salary desc) as salary_rank from (select distinct Salary, DepartmentId from Employee) t) t1 where salary_rank <= 3 ) select d.Name as Department, e.Name as Employee, Salary from Employee e join Department d on e.DepartmentId = d.Id where (Salary, DepartmentId) in (select Salary, DepartmentId from Top3_Salary)
with a as( select *, dense_rank() over (partition by departmentid order by salary desc) rk from employee) select d.name Department, a.name Employee, a.salary Salary from department d left join a on d.id=a.departmentid where rk<=3
with base as (select a.*, b.Name as Department from Employee a inner join Department b on a.DepartmentId = b.Id ) select Department, Employee, Salary from (select Department, Name as Employee, Salary, dense_rank() over (partition by Department order by Salary desc) as rnk from base ) as a where rnk <= 3
with cte AS( select e.*, dense_rank() over (partition by DepartmentId order by Salary DESC) AS R from Employee e) select D.Name AS "Department", cte.Name AS "Employee", Salary from cte join Department D on cte.DepartmentId = D.Id where R <= 3
with cte as ( select Name as Employee, Salary, DepartmentId, dense_rank() over(partition by departmentid order by Salary desc) as rank_n from Employee order by Departmentid asc, salary desc) select a.Name as Department, b.Employee, b.Salary from Department as a join cte b on a.Id = b.departmentid where b.rank_n<=3 order by department asc, b.Salary desc
with cte as ( select a.name as Employee ,a.salary , b.name as Department , dense_rank()over(partition by b.name order by a.salary desc ) as rank_s from Employee a join Department b on a.DepartmentId = b.id ) select Department, Employee, salary from cte where rank_s <=3 order by Department,rank_s
with cte as ( select b.name as department, a.name as employee, a.salary, dense_rank() over (partition by b.name order by a.salary desc) rn from employee a join department b on a.departmentid = b.id ) select department, employee, salary from cte where rn <= 3
with cte as ( select d.Name as Department, e.Name as Employee, e.Salary, dense_rank() over (partition by e.DepartmentId order by e.Salary desc) as rk from Employee e JOIN Department d on e.DepartmentId=d.Id) select Department, Employee, Salary from cte where rk<=3
with cte as ( select d.name as 'Department', e.name as 'Employee', e.salary as 'Salary', dense_rank() over (partition by e.departmentid order by e.salary desc) as rnk from employee e join department d on e.departmentid=d.id ) select Department, Employee, Salary from cte where rnk <=3
with cte as ( select d.name as Department, e.name as Employee, Salary, DENSE_RANK () over(partition by d.name order by salary desc) as rnk from employee e join Department d on e.departmentID = d.id ) select Department, Employee, Salary from cte where rnk <= 3
with cte as (SELECT d.Name as Department, e.Name as Employee, e.Salary, DENSE_RANK()OVER(PARTITION BY e.DepartmentId ORDER BY e.Salary DESC ) as "RNK" FROM Employee e JOIN Department d ON e.DepartmentId = d.Id ) SELECT Department, Employee, Salary FROM cte WHERE RNK<=3
with cte as (select * from (SELECT Name, DepartmentId, Salary, DENSE_RANK() OVER(PARTITION By DepartmentId ORDER BY Salary DESC) as d_rnk from Employee) t WHERE t.d_rnk <= 3) select d.name as Department, c.Name as Employee, c.Salary as Salary from cte c Join Department d on c.DepartmentId = d.Id
with cte as (select D.Name as Department, E.Name as Employee, E.Salary as Salary, DENSE_RANK() OVER(PARTITION BY D.NAME ORDER BY SALARY DESC) as rnk from Employee E inner join Department D on E.DepartmentId = D.Id ) select cte.Department,cte.Employee,cte.Salary from cte where cte.rnk <= 3
with cte as (select Department.Name as Department,Employee.Name as Employee, Salary, dense_rank() over(partition by DepartmentId order by Salary desc) rnk from Employee join Department on Employee.DepartmentId = Department.id) select Department,Employee,Salary from cte where rnk < 4
with cte as (select Department.Name as Department,Employee.Name as Employee, Salary, dense_rank() over(partition by DepartmentId order by Salary desc) rnk from Employee join Department on Employee.DepartmentId = Department.id) select Department,Employee,Salary from cte where rnk in (1,2,3)
with cte as (select Name , salary , DepartmentId ,dense_rank()over ( partition by DepartmentId order by salary DESC) as rnk from employee) select d.Name as Department , cte.Name as Employee , salary from cte join Department d on cte.DepartmentId = d.Id where rnk <= 3
with cte as (select Name, DepartmentId, Salary, dense_rank() over(partition by DepartmentId order by Salary desc) as rnk from Employee) select d.Name Department, c.Name Employee, c.Salary Salary from cte c join Department d on c.DepartmentId = d.id where rnk < 4
with cte as (select e.name as Employee, e.salary, d.name as Department, dense_rank()over(partition by departmentid order by salary desc) as ranking from Employee e, Department d where e.departmentid = d.id) select department, employee, salary from cte where ranking <=3
with cte as (select e.name as Employee, salary, d.name as Department, dense_rank()over(partition by departmentid order by salary desc) as rnk from Employee e, Department d where e.departmentid = d.id) select department, employee, salary from cte where rnk <=3
with cte as( select Employee.Name as `Employee`,Employee.salary, Department.Name as `Department` from Employee join Department on Employee.DepartmentId = Department.Id order by Department.Name ) select e1.Department, e1.Employee , e1.Salary from cte e1 where 3>( select Count(distinct salary) from cte e2 where e2.salary>e1.salary and e2.Department = e1.department )
with cte as( select b.name as Department,a.Name as Employee, a.Salary,dense_rank() over(partition by a.DepartmentID order by Salary desc) as rnk from Employee a inner join Department b on a.DepartmentID=b.Id) select Department,Employee,Salary from cte where rnk<=3
with cte1 as ( select Name , Salary , DepartmentId , dense_rank() over (partition by DepartmentId order by Salary desc) as r from Employee ) select d.Name as Department , cte1.Name as Employee , cte1.Salary as Salary from cte1 inner join Department as d on d.Id = cte1.DepartmentId where cte1.r IN (1,2,3)
with cte1 as (select d.name as 'Department', e.name as 'Employee', salary, dense_rank() over (partition by d.name order by salary desc) as 'ranking' from employee e join department d on e.departmentId = d.id) select Department, Employee, Salary from cte1 where ranking <= 3
with d1 as( select Name, Salary, DepartmentId, DENSE_RANK() OVER(PARTITION BY DepartmentId Order by Salary DESC) as drank from Employee ) select d.Name as Department, e.Name as Employee, d1.Salary from Employee e join Department d on d.Id = e.DepartmentId join d1 on d1.DepartmentId = e.DepartmentId and d1.Name = e.Name where d1.drank <= 3
with dataset as( select e.id , e.name as employee , salary , departmentid , d.name as department , dense_rank() over(partition by departmentid order by salary desc) as dept_sal_rank from employee e join department d on e.departmentid=d.id ) select department , employee , salary from dataset where dept_sal_rank<=3
with dense_prep as ( select DepartmentId ,Salary from Employee group by DepartmentId ,Salary ) ,salary_rnk as ( select DepartmentId ,Salary ,row_number() over (partition by DepartmentId order by Salary Desc) as sal_dense_rnk from dense_prep ) select c.Name as Department ,b.Name as Employee ,a.Salary from salary_rnk a inner join employee b on a.DepartmentId = b.DepartmentId and a.Salary = b.Salary inner join Department c on a.DepartmentId = c.Id where a.sal_dense_rnk <= 3
with dept_top_3 as( select * from (select departmentid,dense_rank() over(partition by departmentId order by salary desc) as d_rank,salary from employee) table1 where d_rank<=3) select distinct department.name as department,e.name as employee,e.salary from employee e inner join dept_top_3 d on e.departmentId=d.departmentId and e.salary >=d.salary inner join department on e.departmentid=department.id
with emp as (select Name, Salary, DepartmentId, dense_rank() over (partition by DepartmentId order by Salary desc) as 'Rank' from Employee) select A.Name as Department, B.Name as Employee, B.Salary as Salary from Department A inner join emp B on B.Rank<=3 and A.Id = B.DepartmentId
with emp_w_sal_rank as ( select DepartmentId, Name Employee, Salary, dense_rank() over (partition by DepartmentId order by Salary DESC) drnk from Employee ) select dept.Name Department, emp.Employee, emp.Salary from (select * from emp_w_sal_rank where drnk <= 3) emp join Department dept on ( emp.DepartmentId = dept.id )
with emp_w_sal_rank as ( select DepartmentId, Name Employee, Salary, dense_rank() over (partition by DepartmentId order by Salary DESC) drnk from Employee ) select dept.Name Department, emp_w_sal_rank.Employee, emp_w_sal_rank.Salary from emp_w_sal_rank join Department dept on ( emp_w_sal_rank.DepartmentId = dept.id ) where drnk <= 3
with employee_salary_rank as (select a.Name as Employee, a.Salary, dense_rank() over(partition by a.DepartmentId order by a.Salary DESC ) as salary_rank, b.name as Department from Employee a join Department b on a.DepartmentId = b.Id) select Department, Employee, Salary from employee_salary_rank where salary_rank <= 3
with etc as (select d.name as department, e.name as employee, e.salary, dense_rank() over (partition by d.id order by e.salary desc) as rnk from employee e join department d on e.departmentid=d.id) select department, employee, salary from etc where rnk <= 3
with highest_salary as ( select d.name as Department, e.name as Employee, Salary, dense_rank()over(partition by departmentid order by salary desc) r from Employee e join department d on e.departmentId = d.id ) Select Department,Employee,Salary from highest_salary where r <=3
with highestsalary as( Select department.Name as Department , Employee.Name as Employee, salary, dense_rank()over(partition by employee.departmentId order by salary desc) r from employee join department on employee.departmentid = department.id) select Department,Employee,salary from highestsalary where r <=3
with joined as ( select department.name as department, employee.name as employee, salary, dense_rank() over ( partition by departmentid order by salary desc ) as salary_rank from employee join department on employee.departmentid = department.id ) select department, employee, salary from joined where salary_rank < 4
with max_salaries as ( select id , salary from ( select departmentId as id , Salary , row_number() over (partition by departmentid order by salary desc) as rn from Employee group by 1, 2 ) a where rn < 4 ) select distinct d.name as Department , e.name as Employee , e.salary as Salary from employee e inner join department d on e.departmentid = d.id left join max_salaries ms on e.DepartmentId = ms.id where e.salary >= ms.salary
with minSalary as ( with salRank as ( with depSal as (select distinct ee.salary as salary, ee.departmentid as did from Employee as ee) select salary as salary, did as did, rank() over (partition by did order by salary desc) as ranknum from depSal) select did, min(salary) as mins from salRank where ranknum<=3 group by did) select d.name as Department , e.name as Employee, e.salary as Salary from Employee as e join Department as d join minSalary as m on m.did=e.DepartmentId and d.id=m.did where e.salary>= m.mins
with new as ( select e.id, e.name, e.salary, e.departmentid, d.name as 'department_name', dense_rank() over(partition by d.name order by e.salary desc) as ranking from employee e join department d on e.departmentid = d.id ) select department_name as 'Department', name as 'Employee', salary from new where ranking <=3 order by department_name
with order_salary as ( SELECT distinct salary,DepartmentId FROM employee), adding_rown as ( select T1.* , ROW_NUMBER() OVER(ORDER BY DepartmentId,salary deSC) as sorder from order_salary t1 ), max_oder_dep as ( select departmentid,min(sorder) as minsorder, max(sorder) as maxsorder from adding_rown group by departmentid) , third_max as ( select t1.* from adding_rown t1 inner join max_oder_dep t2 on t1.departmentid=t2.departmentid and ( t1.sorder=t2.minsorder+2 or (t2.minsorder+2 >t2.maxsorder and t1.sorder=t2.maxsorder) ) ) select d.name as department, e.name as employee, e.salary from employee e inner join third_max t on e.departmentid=t.departmentid and e.salary >= t.salary left join department d on e.departmentid=d.id where d.id is not null
with pay_by_department as ( select d.Name as Department, e.Name as Employee, e.Salary, dense_rank() over (partition by d.Name order by e.Salary desc) as pay_rank from Employee e join Department d on d.Id = e.DepartmentId ) select Department, Employee, Salary from pay_by_department where pay_rank <= 3
with rank_employees as ( select Name, Salary, DepartmentId, dense_rank() over (partition by DepartmentId order by Salary desc) as salary_rank from Employee ) select d.Name as Department, re.Name as Employee, re.Salary from rank_employees as re join Department as d on re.DepartmentId = d.ID where salary_rank <= 3
with rank_sal_dt as ( select b.name as Department,a.name as Employee,a.salary,dense_rank() over(partition by b.name order by a.salary desc) as rank_salary from Employee as a inner join department as b on a. departmentid=b.id) select Department,Employee,Salary from rank_sal_dt where rank_salary <=3 order by Department,Salary desc,Employee
with rank_salary as( select *, dense_rank()over(partition by departmentid order by salary desc) as dr from employee) select d.name as Department, rs.name as Employee, rs.Salary from rank_salary as rs join department as d on rs.departmentid = d.id where rs.dr in (1,2,3)
with ranked as (select id, name, Salary, departmentid, dense_rank() over (partition by departmentid order by salary desc) as sal_rank from employee), high_earners as (select id, name, salary, departmentid from ranked where sal_rank <= 3) select d.Name as "Department", h.name as Employee, h.Salary as "Salary" from high_earners h join department d on h.departmentid = d.id
with ranked_salaries as ( select Name as Employee, Salary, DepartmentId, dense_rank() over(partition by DepartmentId order by Salary desc) as `rank` from Employee ) select Department.Name as Department, Employee, Salary from ranked_salaries join Department on (ranked_salaries.DepartmentId = Department.Id) where `rank` <= 3
with ranking as ( select d.name as department, e.name as employee, e.salary as salary, DENSE_RANK() OVER(partition by d.id order by salary desc) r from department d INNER JOIN employee e ON e.departmentid = d.id ) select department, employee, salary from ranking where r <= 3
with ranking as ( select d.name as department, e.name as employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name order by e.salary desc) r from department d INNER JOIN employee e ON e.departmentid = d.id ) select department, employee, salary from ranking where r < 4
with ranking as (select d.Name as Department, e.name as Employee, e.Salary as Salary, dense_rank() over(partition by d.id order by e.Salary DESC) as Salary_Rank from Employee e, Department d where e.DepartmentId=d.Id ) select Department, Employee, Salary from ranking where salary_rank<=3
with ranking as (select d.name as department, e.name as employee, e.salary as salary, dense_rank() over (partition by d.id order by e.salary desc) as r from department d inner join employee e on d.Id=e.DepartmentId ) select department,employee,salary from ranking where r<=3
with rankit as( select d.Name as Department, e.Name as Employee, e.Salary, DENSE_RANK() OVER(partition by DepartmentId order by Salary desc) as rank_num from Employee e join Department d on d.Id = e.DepartmentId) select Department, Employee, Salary from rankit where rank_num between 1 and 3 order by Department desc
with rnk_tb as (select b.name as Department,a.name as Employee, a.Salary, dense_rank() over (partition by a.departmentid order by salary desc ) as rnk from employee a, department b where a.departmentid=b.id) select t.department,t.employee, t.salary from rnk_tb t where rnk <=3
with sal_dept as ( select Name as employee, DepartmentId, Salary, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) as dept_rank from Employee ) select d.Name as Department, e.employee as Employee, e.Salary from sal_dept as e JOIN Department as d on e.DepartmentId=d.Id where e.dept_rank <=3
with salary as ( select ID, dense_rank() over (partition by DepartmentID order by salary desc) as rnk from Employee ) select d.Name as Department,e.Name as Employee, e.Salary from Department d join Employee e on d.ID = e.DepartmentID join salary s on s.ID = e.ID where rnk IN (1,2,3) order by d.Name,rnk
with salary_rank(Id, Ranking) as (select Id, dense_rank() over (partition by DepartmentId order by Salary desc) from Employee) select D.Name as Department, E.Name as Employee, E.Salary as Salary from Employee E natural join salary_rank join Department as D on E.DepartmentId = D.Id where salary_rank.Ranking <= 3
with sub as (select *,dense_rank() over (partition by departmentID order by salary desc) as ranking from employee) select d.name Department ,s.name Employee, salary Salary from sub s join department d on s.departmentid = d.id where ranking<=3
with t1 as (select *, dense_rank() over(partition by departmentid order by salary desc) denserank from employee) select d1.name as 'Department', t1.name as 'Employee', t1.salary as 'Salary' from department d1 join t1 on t1.departmentid = d1.id where t1.denserank in (1,2,3)
with tE as ( select e1.departmentid, e1.salary, e1.name from employee as e1 left join employee as e2 on e1.departmentid = e2.departmentid and e1.salary < e2.salary group by e1.departmentid, e1.salary, e1.name having count(distinct e2.salary) < 3 ) select d.name as Department, tE.name as Employee, tE.salary as Salary from tE join department as d on tE.departmentid = d.id
with tbl as (select b.Name as Department , a.Name as Employee , a.Salary , dense_rank() over (partition by b.Name order by a.Salary desc) as rnk from Employee a inner join Department b on a.departmentid = b.id ) select department , employee , salary from tbl where rnk = 1 or rnk = 2 or rnk = 3 order by department , salary
with tbl as (select name, DepartmentId, salary, DENSE_RANK() over(partition by DepartmentId order by salary desc) as rn from employee) select d.name as Department, tbl.name as Employee, salary from tbl join department d on tbl.DepartmentId = d.id where rn = 1 or rn = 2 or rn = 3
with temp as (select a.name, a.salary, departmentid, case when @c=0 then @b:=1 when @a=departmentid and @d!=salary then @b:=@b+1 when @a=departmentid and @d=salary then @b:=@b else @b:=1 end as counter, @a:=departmentid, @d:=salary, @c:=@c+1 from Employee a, (select @a:=0,@b:=0,@c:=0,@d:=0) x order by a.departmentid, a.salary desc ) select b.name Department, a.name Employee, a.salary Salary from temp a join Department b on a.departmentid=b.id where a.counter<=3
with temp(name, id, salary, rnk) as ( select name, departmentid, salary, dense_rank() over (partition by departmentid order by salary desc) as rnk from employee ) select d.name as Department, t.name as Employee, t.salary as Salary from department d, temp t where t.id = d.id and t.rnk <4 order by department asc,salary desc
with temp_table as ( Select D.Name as Department, E.Name as Employee, E.Salary as Salary, dense_rank() over (partition by D.Id order by Salary desc) as rn from Employee E join Department D on E.DepartmentId = D.Id ) select Department, Employee, Salary from temp_table where rn <=3
with temp_tbl as ( select d.name as Department,i.name as Employee,Salary,dense_rank() over (partition by departmentid order by salary desc) as rnk from employee i,department d where i.departmentid=d.id) select Department,Employee,Salary from temp_tbl where rnk<4
with topThree as (select e.salary as Salary,e.Name as Employee, d.name as Department, dense_rank() over(partition by e.departmentId order by e.salary desc) as ranking from employee e join department d on e.departmentid=d.id ) select Department,Employee ,Salary from topThree where ranking in (1,2,3)
with top_salary as ( select Name, Salary, DepartmentId, dense_rank() over(partition by DepartmentId order by Salary desc) as ranking from Employee ) select d.Name as Department ,t.Name as Employee ,t.Salary as Salary from top_salary t join Department d on t.DepartmentId = d.id where t.ranking <= 3
with top_salary1 as (select Name, Salary, DepartmentId, DENSE_RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary Desc) as dnse_rank from Employee) select Department.Name as Department, top_salary1.Name as Employee, top_salary1.Salary from top_salary1 inner join Department on top_salary1.DepartmentId = Department.Id where dnse_rank <= 3
with top_three_salaries as( select name, salary, departmentId, dense_rank() over(partition by departmentId order by salary desc) dr from employee ) select d.name Department, tts.name Employee, tts.salary Salary from top_three_salaries tts join department d on tts.departmentId = d.id where dr < 4
with top_three_salary as( select departmentid,salary, rank() over(partition by departmentid order by salary desc) as salary_rank from (select distinct departmentid,salary from employee) s ) select d.name as Department, e.name as Employee, e.salary as Salary from employee e inner join department d on e.departmentid=d.id inner join (select distinct departmentid,salary from top_three_salary where salary_rank <=3) t on e.departmentid=t.departmentid and e.salary=t.salary
with total as ( select e.*, d.Name as Department from Employee as e join Department as d on e.DepartmentId = d.Id ) select t.Department, t.Name as Employee, t.Salary from total as t join total as u on t.Department = u.Department where t.Salary <= u.Salary group by t.Department, Employee, t.Salary having count(distinct u.Salary) <= 3
with w1 as ( Select *, Dense_Rank() over (partition by DepartmentId order by Salary desc ) as "Rank" from Employee ) Select Department.Name as "Department" , w1.Name as "Employee", w1.Salary as "Salary" from w1 join Department on Department.Id = w1.DepartmentId where w1.Rank <=3 order by Department.Name , w1.Salary desc
with w1 as ( Select *, Dense_Rank() over (partition by DepartmentId order by Salary desc ) as "Rank" from Employee ) Select Department.Name as "Department" , w1.Name as "Employee", w1.Salary as "Salary" from w1 join Department on Department.Id = w1.DepartmentId where w1.Rank = 1 or w1.Rank =2 or w1.Rank = 3 order by Department.Name , w1.Salary desc
