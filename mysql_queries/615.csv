SELECT A.pay_month, department_id, (CASE WHEN depart_avg > comp_avg THEN "higher" WHEN depart_avg = comp_avg THEN "same" ELSE "lower" END) AS comparison FROM (SELECT SUBSTRING(pay_date, 1, 7) AS pay_month, department_id, AVG(amount) AS depart_avg FROM salary INNER JOIN employee ON salary.employee_id = employee.employee_id GROUP BY SUBSTRING(pay_date, 1, 7), department_id) A INNER JOIN (SELECT SUBSTRING(pay_date, 1, 7) AS pay_month, AVG(amount) AS comp_avg FROM salary GROUP BY SUBSTRING(pay_date, 1, 7)) B ON A.pay_month = B.pay_month
SELECT DISTINCT (CASE WHEN MONTH(B.pay_date) - 10 < 0 THEN CONCAT(CONVERT(YEAR(B.pay_date), CHAR), CONCAT('-0',CONVERT(MONTH(B.pay_date), CHAR))) ELSE CONCAT(CONVERT(YEAR(B.pay_date), CHAR), CONCAT('-',CONVERT(MONTH(B.pay_date), CHAR))) END) AS pay_month, B.dep AS department_id, (CASE WHEN B.sal > C.pay THEN 'higher' WHEN B.sal < C.pay THEN 'lower' ELSE 'same' END) comparison FROM (SELECT A.dep, A.pay_date, AVG(A.sal) sal FROM (SELECT E.department_id AS dep, S.amount sal, S.pay_date FROM salary S LEFT JOIN employee E ON S.employee_id = E.employee_id) AS A GROUP BY A.dep, A.pay_date) B LEFT JOIN (SELECT pay_date, AVG(amount) pay FROM salary GROUP BY pay_date) C ON B.pay_date = C.pay_date
SELECT DISTINCT date_format(pay_date, '%Y-%m') as pay_month, department_id, CASE WHEN AVG(amount) OVER(PARTITION BY department_id, pay_date) > AVG(amount) OVER(PARTITION BY pay_date) THEN 'higher' WHEN AVG(amount) OVER(PARTITION BY department_id, pay_date) < AVG(amount) OVER(PARTITION BY pay_date) THEN 'lower' ELSE 'same' END AS comparison FROM salary JOIN employee ON salary.employee_id = employee.employee_id ORDER BY pay_month DESC, department_id ASC
SELECT DISTINCT pay_month, department_id, (CASE WHEN department_avg_salary > company_avg_salary THEN 'higher' WHEN department_avg_salary < company_avg_salary THEN 'lower' WHEN department_avg_salary = company_avg_salary THEN 'same' END) AS comparison FROM ( SELECT A.employee_id, amount, pay_date,department_id, LEFT(pay_date,7) as pay_month, AVG(amount) OVER(PARTITION BY A.pay_date) AS company_avg_salary, AVG(amount) OVER(PARTITION BY A.pay_date, B.department_id) AS department_avg_salary FROM salary AS A JOIN employee AS B ON A.employee_id = B.employee_id) AS temp
SELECT DISTINCT pay_month, department_id, CASE WHEN department_avg > company_avg THEN 'higher' WHEN department_avg < company_avg THEN 'lower' ELSE 'same' END AS comparison FROM (SELECT s.*, e.department_id, LEFT(s.pay_date, 7) AS pay_month, AVG(amount) OVER(PARTITION BY LEFT(s.pay_date, 7)) AS company_avg, AVG(amount) OVER(PARTITION BY LEFT(s.pay_date, 7), e.department_id) AS department_avg FROM salary s JOIN employee e ON s.employee_id = e.employee_Id ) tmp ORDER BY pay_month DESC, department_id
SELECT DISTINCT pay_month, department_id, CASE WHEN department_avg > month_avg THEN 'higher' WHEN department_avg = month_avg THEN 'same' WHEN department_avg < month_avg THEN 'lower' END AS comparison FROM (SELECT DATE_FORMAT(pay_date, '%Y-%m') AS pay_month, department_id, AVG(amount) OVER(PARTITION BY DATE_FORMAT(pay_date, '%Y-%m')) AS month_avg, AVG(amount) OVER(PARTITION BY DATE_FORMAT(pay_date, '%Y-%m'), department_id) AS department_avg FROM salary s JOIN employee e ON s.employee_id = e.employee_id) a
SELECT SUBSTRING(a.pay_date,1,7) AS 'pay_month' , b.department_id , CASE WHEN ROUND(SUM(a.amount)/c.employee_count,2) > d.company_avg THEN 'higher' WHEN ROUND(SUM(a.amount)/c.employee_count,2) < d.company_avg THEN 'lower' ELSE 'same' END AS 'comparison' FROM salary a LEFT JOIN employee b ON a.employee_id=b.employee_id LEFT JOIN (SELECT department_id , COUNT(DISTINCT employee_id) AS 'employee_count' FROM employee GROUP BY department_id) c ON b.department_id=c.department_id LEFT JOIN (SELECT SUBSTRING(pay_date,1,7) AS 'pay_date' , ROUND(AVG(amount),2) AS 'company_avg' FROM salary GROUP BY SUBSTRING(pay_date,1,7)) d ON SUBSTRING(a.pay_date,1,7)=SUBSTRING(d.pay_date,1,7) GROUP BY b.department_id ,SUBSTRING(a.pay_date,1,7)
SELECT Sub.pay_month, Sub.department_id, CASE WHEN Sub.dpt_avg > Sub.company_avg THEN 'higher' WHEN Sub.dpt_avg < Sub.company_avg THEN 'lower' ELSE 'same' END AS comparison FROM ( SELECT S.*, E.department_id, AVG(S.amount) OVER (PARTITION BY S.pay_date) AS company_avg, AVG(S.amount) OVER (PARTITION BY S.pay_date, E.department_id) AS dpt_avg, DATE_FORMAT(S.pay_date, '%Y-%m') AS pay_month FROM salary S LEFT JOIN employee E ON S.employee_id = E.employee_id ORDER BY S.id ) Sub GROUP BY Sub.pay_month, Sub.department_id ORDER BY Sub.pay_month DESC, Sub.department_id
SELECT a.pay_month , a.department_id , CASE WHEN a.avg_dept_sal > a.avg_comp_sal then 'higher' WHEN a.avg_dept_sal = a.avg_comp_sal then 'same' ELSE 'lower' END AS comparison FROM ( SELECT DISTINCT LEFT(pay_date, 7) AS pay_month , e.department_id , AVG(amount) OVER(PARTITION BY LEFT(pay_date, 7)) AS avg_comp_sal , AVG(amount) OVER(PARTITION BY LEFT(pay_date, 7), e.department_id) AS avg_dept_sal FROM salary s JOIN employee e ON s.employee_id = e.employee_id )a order by a.pay_month DESC
SELECT department_salary.pay_month AS pay_month, department_id, CASE WHEN department_avg > company_avg THEN 'higher' WHEN department_avg < company_avg THEN 'lower' ELSE 'same' END AS comparison FROM ( SELECT department_id, AVG(amount) AS department_avg, DATE_FORMAT(pay_date, '%Y-%m') AS pay_month FROM salary JOIN employee ON salary.employee_id = employee.employee_id GROUP BY department_id, pay_month ) AS department_salary JOIN ( SELECT AVG(amount) AS company_avg, DATE_FORMAT(pay_date, '%Y-%m') AS pay_month FROM salary GROUP BY pay_month ) AS company_salary ON department_salary.pay_month = company_salary.pay_month
SELECT distinct C.pay_month, C.department_id, CASE WHEN dept_salary>cmpy_salary then 'higher' WHEN dept_salary<cmpy_salary then 'lower' ELSE 'same' END AS comparison FROM (SELECT LEFT(pay_date,7) as pay_month, B.department_id, AVG(amount) OVER (PARTITION BY B.department_id, LEFT(pay_date,7)) AS dept_salary ,AVG(amount) OVER (PARTITION BY LEFT(pay_date,7)) AS cmpy_salary FROM salary A INNER JOIN employee B ON A.employee_id = B.employee_id)C
SELECT pay_month, department_id, CASE WHEN CompanyAverage = departmentAverage then "same" WHEN CompanyAverage < departmentAverage then"higher" ELSE "lower" END AS comparison FROM (SELECT DISTINCT DATE_FORMAT(pay_date, "%Y-%m") as pay_month, department_id, AVG(amount) Over(Partition by DATE_FORMAT(pay_date, "%Y-%m")) as CompanyAverage , AVG(amount) Over(Partition by DATE_FORMAT(pay_date, "%Y-%m"),department_id) as departmentAverage FROM EMPLOYEE E LEFT JOIN SALARY S ON E.employee_id =S.employee_id ) MonthlyDeptCompAvg
SELECT pay_month, department_id, CASE WHEN CompanyAverage = departmentAverage then "same" WHEN CompanyAverage < departmentAverage then"higher" ELSE "lower" END AS comparison FROM (SELECT DISTINCT DATE_FORMAT(pay_date, "%Y-%m") as pay_month, department_id, AVG(amount) Over(Partition by DATE_FORMAT(pay_date, "%Y-%m")) as CompanyAverage , AVG(amount) Over(Partition by DATE_FORMAT(pay_date, "%Y-%m"),department_id) as departmentAverage FROM EMPLOYEE E LEFT JOIN SALARY S ON E.employee_id =S.employee_id ) MonthlyDeptCompAvg Order by pay_month DESC, department_id
SELECT pay_month, department_id, comparison FROM ( SELECT LEFT(pay_date, 7) AS pay_month, department_id, CASE WHEN AVG(amount) OVER (PARTITION BY LEFT(pay_date, 7), department_id) > AVG(amount) OVER (PARTITION BY LEFT(pay_date, 7)) THEN 'higher' WHEN AVG(amount) OVER (PARTITION BY LEFT(pay_date, 7), department_id) = AVG(amount) OVER (PARTITION BY LEFT(pay_date, 7)) THEN 'same' ELSE 'lower' END AS comparison, ROW_NUMBER() OVER (PARTITION BY LEFT(pay_date, 7), department_id) AS row_ct FROM salary s INNER JOIN employee e ON s.employee_id = e.employee_id ) sub WHERE row_ct = 1 ORDER BY pay_month DESC, department_id
SELECT pay_month,department_id,(CASE WHEN dep_avg>company_avg THEN "higher" WHEN dep_avg=company_avg THEN "same" WHEN dep_avg<company_avg THEN "lower" END) AS comparison FROM (SELECT DISTINCT SUBSTRING(pay_date,1,7) AS pay_month,department_id, AVG(amount)OVER(PARTITION BY SUBSTRING(pay_date,1,7),department_id) AS dep_avg ,AVG(amount)OVER(PARTITION BY SUBSTRING(pay_date,1,7)) AS company_avg FROM salary JOIN employee comparison USING (employee_id)) AS temp
SELECT t.pay_month ,t.department_id ,CASE WHEN t.dept_salary>t1.company_salary THEN 'higher' WHEN t.dept_salary<t1.company_salary THEN 'lower' WHEN t.dept_salary=t1.company_salary THEN 'same' END comparison FROM (SELECT AVG(s.amount) dept_salary, e.department_id, date_format(pay_date,'%Y-%m') pay_month FROM salary s INNER JOIN employee e ON e.employee_id=s.employee_id GROUP BY e.department_id ,date_format(s.pay_date,'%Y-%m'))t INNER JOIN (SELECT AVG(s.amount) company_salary, date_format(s.pay_date,'%Y-%m') pay_month FROM salary s INNER JOIN employee e ON e.employee_id=s.employee_id GROUP BY date_format(s.pay_date,'%Y-%m') )t1 ON t.pay_month=t1.pay_month
SELECT t.pay_month,t.department_id, CASE WHEN t.aavg > t2.cavg THEN 'higher' WHEN t.aavg < t2.cavg THEN 'lower' WHEN t.aavg = t2.cavg THEN 'same' END AS comparison FROM (SELECT LEFT(pay_date,7) AS pay_month, department_id, AVG(amount) AS aavg FROM salary s JOIN employee e ON s.employee_id = e.employee_id GROUP BY pay_month, department_id) t JOIN (SELECT LEFT(pay_date,7) AS pay_month, department_id, AVG(amount) AS cavg FROM salary s JOIN employee e ON s.employee_id = e.employee_id GROUP BY pay_month) t2 ON t.pay_month = t2.pay_month
SELECT tt1.pay_month, tt1.department_id, CASE WHEN tt1.avg > tt2.avg_month THEN 'higher' WHEN tt1.avg < tt2.avg_month THEN 'lower' WHEN tt1.avg = tt2.avg_month THEN 'same' END as comparison FROM ( SELECT avg(amount) as avg, department_id, pay_month FROM ( SELECT e.department_id, s.amount, date_format(pay_date, '%Y-%m') as pay_month FROM salary s JOIN employee e ON s.employee_id = e.employee_id ORDER BY pay_month ) as t1 GROUP BY department_id, pay_month ) as tt1 JOIN ( SELECT avg(amount) as avg_month, pay_month FROM ( SELECT e.department_id, s.amount, date_format(pay_date, '%Y-%m') as pay_month FROM salary s JOIN employee e ON s.employee_id = e.employee_id ORDER BY pay_month ) as t2 GROUP BY pay_month ) as tt2 ON tt1.pay_month = tt2.pay_month
Select R.pay_month, R.department_id, (Case when R.department_avg > C.company_avg then 'higher' when R.department_avg = C.company_avg then 'same' else 'lower' end) as comparison From (Select Left(S.pay_date, 7) as pay_month, E.department_id, Avg(S.amount) as department_avg From Salary as S Join employee E on S.employee_id = E.employee_id Group by E.department_id, pay_month) R Join (Select Left(pay_date, 7) as pay_month, Avg(amount) AS company_avg From salary Group by pay_month) C on R.pay_month = C.pay_month Order by 1,2
Select dept_month_salary.pay_month, dept_month_salary.department_id, Case When dept_month_salary.dept_avg_salary > comp_month_salary.comp_avg_salary Then 'higher' When dept_month_salary.dept_avg_salary = comp_month_salary.comp_avg_salary Then 'same' Else 'lower' End As comparison From (Select SubStr(pay_date ,1,7) as pay_month, employee.department_id as department_id, AVG(amount) as dept_avg_salary From salary Left Join employee On salary.employee_id = employee.employee_id Group By employee.department_id, SubStr(pay_date ,1,7)) as dept_month_salary Left Join (Select SubStr(pay_date ,1,7) as pay_month, AVG(amount) as comp_avg_salary From salary Group By SubStr(pay_date ,1,7)) as comp_month_salary On dept_month_salary.pay_month = comp_month_salary.pay_month
WITH A AS (SELECT LEFT(S1.PAY_DATE,7) AS MONTH, E1.DEPARTMENT_ID, AVG(S1.AMOUNT) AS ES FROM EMPLOYEE E1 JOIN SALARY S1 ON E1.EMPLOYEE_ID = S1.EMPLOYEE_ID GROUP BY MONTH, E1.DEPARTMENT_ID), C AS (SELECT LEFT(S2.PAY_DATE,7) AS M, AVG(S2.AMOUNT) AS CS FROM SALARY S2 GROUP BY M) SELECT A.MONTH AS PAY_MONTH, A.DEPARTMENT_ID, CASE WHEN ES > CS THEN 'higher' WHEN ES < CS THEN 'lower' ELSE 'same' END AS COMPARISON FROM A JOIN C ON A.MONTH = C.M
WITH A AS (SELECT LEFT(S1.PAY_DATE,7) AS MONTH, E1.DEPARTMENT_ID, AVG(S1.AMOUNT) AS SAL FROM EMPLOYEE E1 JOIN SALARY S1 ON E1.EMPLOYEE_ID = S1.EMPLOYEE_ID GROUP BY MONTH, E1.DEPARTMENT_ID), C AS (SELECT LEFT(S2.PAY_DATE,7) AS M, AVG(S2.AMOUNT) AS CAL FROM SALARY S2 GROUP BY M) SELECT A.MONTH AS PAY_MONTH, A.DEPARTMENT_ID, CASE WHEN SAL > CAL THEN 'higher' WHEN SAL < CAL THEN 'lower' ELSE 'same' END AS COMPARISON FROM A JOIN C ON A.MONTH = C.M
WITH Averages as ( select s.id, s.employee_id, e.department_id, s.amount, date_format(pay_date, '%Y-%m') as pay_month, avg(amount) over (partition by pay_date order by pay_date) as CompAvg, avg(amount) over (partition by pay_date, e.department_id order by pay_date, e.department_id ) as DeptAvg from salary as s join employee as e on s.employee_id = e.employee_id ) select distinct pay_month, department_id, CASE WHEN DeptAvg > CompAvg THEN 'higher' WHEN DeptAvg < CompAvg THEN 'lower' ELSE 'same' END as comparison from Averages
WITH COMPANY_AVG AS ( SELECT DATE_FORMAT(PAY_DATE,'%Y-%m') pay_month ,AVG(AMOUNT) pay_avg FROM SALARY GROUP BY 1 ) , DEPARTMENT_AVG AS ( SELECT E.DEPARTMENT_ID ,DATE_FORMAT(PAY_DATE,'%Y-%m') pay_month ,AVG(AMOUNT) dept_avg FROM SALARY S JOIN EMPLOYEE E ON S.EMPLOYEE_ID=E.EMPLOYEE_ID GROUP BY 1,2 ) SELECT CA.PAY_MONTH pay_month ,DA.DEPARTMENT_ID department_id ,CASE WHEN DEPT_AVG > PAY_AVG THEN 'higher' WHEN DEPT_AVG < PAY_AVG THEN 'lower' ELSE 'same' END AS comparison FROM COMPANY_AVG CA JOIN DEPARTMENT_AVG DA ON CA.PAY_MONTH = DA.PAY_MONTH
WITH COMPANY_AVG_SAL AS ( SELECT DATE_FORMAT(pay_date, '%Y-%m') AS pay_month, AVG(s.amount) AS co_avg FROM salary s GROUP BY 1 ), dept_avg AS ( SELECT DATE_FORMAT(s.pay_date, '%Y-%m') AS pay_month, e.department_id, AVG(s.amount) AS dept_avg FROM salary s INNER JOIN employee e ON s.employee_id = e.employee_id GROUP BY 1, 2 ) SELECT da.pay_month, da.department_id, CASE WHEN da.dept_avg > cas.co_avg THEN 'higher' WHEN da.dept_avg < cas.co_avg THEN 'lower' ELSE 'same' END AS 'comparison' FROM dept_avg da INNER JOIN COMPANY_AVG_SAL cas ON da.pay_month = cas.pay_month
WITH CTE AS ( SELECT SUBSTRING(pay_date,1,7) pay_month, AVG(amount) comp_avg FROM salary GROUP BY SUBSTRING(pay_date,1,7) ), CTE1 AS ( SELECT SUBSTRING(s.pay_date,1,7) pay_month, e.department_id, AVG(s.amount) dept_avg FROM salary s INNER JOIN employee e ON s.employee_id=e.employee_id GROUP BY SUBSTRING(s.pay_date,1,7), e.department_id ) SELECT c1.pay_month, c2.department_id, CASE WHEN c2.dept_avg=c1.comp_avg THEN 'same' WHEN c2.dept_avg>c1.comp_avg THEN 'higher' ELSE 'lower' END comparison FROM CTE c1 INNER JOIN CTE1 C2 ON C1.pay_month=C2.pay_month
WITH CTE AS (SELECT LEFT(pay_date,7) pay_month, department_id, AVG(amount) OVER(PARTITION BY MONTH(pay_date)) company_avg, AVG(amount) OVER(PARTITION BY MONTH(pay_date), department_id) department_avg FROM salary S1 JOIN employee E1 ON S1.employee_id = E1.employee_id) SELECT DISTINCT pay_month, department_id, (CASE WHEN department_avg > company_avg THEN 'higher' WHEN department_avg < company_avg THEN 'lower' ELSE 'same' END) comparison FROM CTE
WITH CTE AS (SELECT e.department_id, LEFT(s.pay_date,7) as pay_month, AVG(amount)OVER(PARTITION BY e.department_id,LEFT(s.pay_date,7)) as dept_avg, AVG(amount) OVER(PARTITION BY LEFT(s.pay_date,7)) as comp_avg FROM salary s JOIN employee e ON s.employee_id = e.employee_id) SELECT pay_month, department_id, CASE WHEN dept_avg > comp_avg then 'higher' WHEN dept_avg < comp_avg then 'lower' ELSE 'same' END AS comparison FROM cte GROUP BY 1,2
WITH CTE AS( SELECT ID,S.EMPLOYEE_ID,AMOUNT,PAY_DATE,DEPARTMENT_ID,AVG(AMOUNT) OVER(PARTITION BY PAY_DATE) AS COM_AVG, AVG(AMOUNT) OVER(PARTITION BY PAY_DATE,DEPARTMENT_ID) AS D_AVG FROM SALARY S LEFT JOIN EMPLOYEE E ON S.EMPLOYEE_ID=E.EMPLOYEE_ID ) SELECT DATE_FORMAT(PAY_DATE,'%Y-%m') AS pay_month,department_id, CASE WHEN COM_AVG<D_AVG THEN 'higher' WHEN COM_AVG>D_AVG THEN 'lower' else 'same' END AS comparison FROM CTE GROUP BY DEPARTMENT_ID,DATE_FORMAT(PAY_DATE,'%Y-%m') order by DATE_FORMAT(PAY_DATE,'%Y-%m') desc
WITH CTE1 AS( SELECT department_id, LEFT(pay_date, 7) AS pay_month, AVG(amount) OVER (Partition by LEFT(pay_date, 7), department_id) AS avg_by_dep FROM salary a JOIN employee b ON a.employee_id = b.employee_id), CTE2 AS( SELECT AVG(amount) AS comp_avg, LEFT(pay_date, 7) AS pay_month FROM salary GROUP BY pay_month) SELECT DISTINCT CTE2.pay_month, CTE1.department_id, CASE WHEN avg_by_dep > comp_avg THEN 'higher' WHEN avg_by_dep < comp_avg THEN 'lower' ELSE 'same' END AS comparison FROM CTE1 JOIN CTE2 ON CTE1.pay_month = CTE2.pay_month
WITH CompanyAverage AS (SELECT LEFT(pay_date,7) AS month ,AVG(amount) AS CmpyAvgPerMonth FROM salary GROUP BY LEFT(pay_date,7)), DepartmentAverage AS (SELECT LEFT(S.pay_date,7) AS month ,E.department_id ,AVG(amount) AS DptAvgPerMonth FROM salary S INNER JOIN employee E ON E.employee_id = S.employee_id GROUP BY LEFT(S.pay_date,7),E.department_id) SELECT DA.month AS pay_month ,DA.department_id ,CASE WHEN CA.CmpyAvgPerMonth > DA.DptAvgPerMonth THEN 'lower' WHEN CA.CmpyAvgPerMonth < DA.DptAvgPerMonth THEN 'higher' ELSE 'same' END AS comparison FROM DepartmentAverage DA INNER JOIN CompanyAverage CA ON CA.month = DA.month
WITH T AS ( SELECT a.*, LEFT(a.pay_date, 7) AS pay_month, b.department_id FROM salary a LEFT JOIN employee b ON a.employee_id = b.employee_id ) SELECT pay_month, department_id, CASE WHEN dept_avg > company_avg THEN 'higher' WHEN dept_avg < company_avg THEN 'lower' ELSE 'same' END AS comparison FROM ( SELECT DISTINCT pay_month, department_id, AVG(amount) OVER(PARTITION BY pay_month) AS company_avg, AVG(amount) OVER(PARTITION BY pay_month, department_id) AS dept_avg FROM T ORDER BY pay_month DESC, department_id ) a
WITH T AS ( SELECT a.*, LEFT(a.pay_date, 7) AS pay_month, b.department_id FROM salary a LEFT JOIN employee b ON a.employee_id = b.employee_id ), CP_AVERAGE AS ( SELECT pay_month, AVG(amount) AS cp_avg FROM T GROUP BY 1 ), DPT_AVERAGE AS ( SELECT pay_month, department_id, AVG(amount) AS dpt_avg FROM T GROUP BY 1,2 ) SELECT a.pay_month, a.department_id, CASE WHEN a.dpt_avg > b.cp_avg THEN 'higher' WHEN a.dpt_avg < b.cp_avg THEN 'lower' ELSE 'same' END AS comparison FROM DPT_AVERAGE a JOIN CP_AVERAGE b ON a.pay_month = b.pay_month ORDER BY 1 DESC, 2
WITH TEMP AS ( SELECT LEFT(a.pay_date,7) AS pay_month, b.department_id, AVG(a.amount) AS department_salary FROM salary a LEFT JOIN employee b ON a.employee_id =b.employee_id GROUP BY 1,2) SELECT d.pay_month, d.department_id, CASE WHEN d.department_salary > c.company_salary THEN "higher" WHEN d.department_salary < c.company_salary THEN "lower" ELSE "same" END AS comparison FROM TEMP d LEFT JOIN ( SELECT LEFT(pay_date,7) AS pay_month, AVG(amount) AS company_salary FROM salary GROUP BY 1) c ON d.pay_month=c.pay_month ORDER BY 1 DESC, 2 ASC
WITH TEMP AS (SELECT DISTINCT SUBSTR(S.PAY_DATE,1,7) AS PAY_MONTH, E.DEPARTMENT_ID, AVG(S.AMOUNT) OVER (PARTITION BY SUBSTR(S.PAY_DATE,1,7),E.DEPARTMENT_ID) AS DEPT_AVG, AVG(S.AMOUNT) OVER (PARTITION BY SUBSTR(S.PAY_DATE,1,7)) AS COMP_AVG FROM SALARY S, EMPLOYEE E WHERE S.EMPLOYEE_ID = E.EMPLOYEE_ID) SELECT PAY_MONTH, DEPARTMENT_ID, CASE WHEN DEPT_AVG>COMP_AVG THEN 'higher' WHEN DEPT_AVG<COMP_AVG THEN 'lower' ELSE 'same' END AS COMPARISON FROM TEMP
WITH ac AS (SELECT LEFT(pay_date,7) AS cpay_month, AVG(amount) AS avg_com FROM salary GROUP BY LEFT(pay_date,7)), ae AS (SELECT LEFT(s.pay_date,7) AS epay_month, d.department_id, AVG(s.amount) AS avg_emp FROM salary s JOIN employee d ON s.employee_id = d.employee_id GROUP BY LEFT(s.pay_date,7), d.department_id) SELECT ae.epay_month as pay_month, ae.department_id, (CASE WHEN avg_emp > avg_com THEN 'higher' WHEN avg_emp < avg_com THEN 'lower' ELSE 'same' END) as 'comparison' FROM ae JOIN ac on ae.epay_month = ac.cpay_month
WITH ave_salary AS( SELECT LEFT(pay_date,7) as dates, avg(amount) as ave_comp FROM salary GROUP BY LEFT(pay_date,7) ), ave_dep AS( SELECT department_id,avg(ifnull(amount,0)) as dep_ave,LEFT(pay_date,7) as dates FROM employee LEFT JOIN salary on employee.employee_id = salary.employee_id GROUP BY department_id,LEFT(pay_date,7) ), full_table AS( SELECT ave_salary.dates as pay_month, ave_dep.department_id as department_id,dep_ave,ave_comp FROM ave_dep LEFT JOIN ave_salary on ave_dep.dates = ave_salary.dates ) SELECT pay_month,department_id, case when dep_ave > ave_comp then 'higher' when dep_ave < ave_comp then 'lower' else 'same' end as comparison FROM full_table
WITH avg_by_dept AS ( SELECT SUBSTR(pay_date,1,7) AS pay_month, e.department_id, SUM(s.amount)/COUNT(1) AS dept_avg_per_mon FROM salary s JOIN employee e ON s.employee_id = e.employee_id GROUP BY 1,2 ), avg_by_company AS ( SELECT SUBSTR(pay_date,1,7) AS pay_month, SUM(amount)/COUNT(1) AS cmpy_avg_per_mon FROM salary GROUP BY 1 ) SELECT d.pay_month, d.department_id, CASE WHEN d.dept_avg_per_mon > c.cmpy_avg_per_mon THEN 'higher' WHEN d.dept_avg_per_mon < c.cmpy_avg_per_mon THEN 'lower' ELSE 'same' END AS comparison FROM avg_by_dept d JOIN avg_by_company c ON d.pay_month = c.pay_month
WITH avg_salary AS( SELECT DATE_FORMAT(s.pay_date, '%Y-%m') pay_month, e.department_id department_id, AVG(s.amount) OVER(PARTITION BY DATE_FORMAT(s.pay_date, '%Y-%m'), e.department_id) dept_avg, AVG(s.amount) OVER(PARTITION BY DATE_FORMAT(s.pay_date, '%Y-%m')) company_avg FROM salary s LEFT JOIN employee e ON s.employee_id = e.employee_id ) SELECT DISTINCT pay_month, department_id, CASE WHEN dept_avg > company_avg THEN 'higher' WHEN dept_avg < company_avg THEN 'lower' ELSE 'same' END AS comparison FROM avg_salary ORDER BY 1 DESC, 2 ASC
WITH combined AS ( SELECT department_id, salary.employee_id, amount, DATE_FORMAT(pay_date,'%Y-%m') AS pay_month FROM salary JOIN employee ON salary.employee_id = employee.employee_id ), department_average AS ( SELECT AVG(amount) AS department_mean, department_id, pay_month FROM combined GROUP BY department_id, pay_month ), company_average AS ( SELECT AVG(amount) AS company_mean, pay_month FROM combined GROUP BY pay_month ) SELECT department_average.pay_month, department_average.department_id, CASE WHEN department_average.department_mean > company_average.company_mean THEN 'higher' WHEN department_average.department_mean < company_average.company_mean THEN 'lower' ELSE 'same' END AS comparison FROM department_average JOIN company_average WHERE department_average.pay_month = company_average.pay_month
WITH company AS (SELECT left(pay_date,7) as pay_month, avg(amount) AS com_avg FROM salary GROUP BY pay_month), department AS (SELECT left(pay_date,7) AS pay_month, department_id, avg(amount) as dep_avg FROM salary s JOIN employee e ON s.employee_id=e.employee_id GROUP BY left(pay_date,7), department_id) SELECT d.pay_month, d.department_id, CASE WHEN d.dep_avg<c.com_avg THEN 'lower' WHEN d.dep_avg>c.com_avg THEN 'higher' ELSE 'same' END AS comparison FROM department d LEFT JOIN company c ON d.pay_month=c.pay_month
WITH company_average AS ( SELECT LEFT(pay_date, 7) AS pay_month, AVG(amount) AS amount FROM salary GROUP BY pay_month ) SELECT sub.pay_month, sub.department_id, CASE WHEN sub.department_average > ca.amount THEN 'higher' WHEN sub.department_average < ca.amount THEN 'lower' ELSE 'same' END AS comparison FROM ( SELECT LEFT(pay_date, 7) AS pay_month, e.department_id, AVG(s.amount) AS department_average FROM salary s INNER JOIN employee e ON s.employee_id = e.employee_id GROUP BY pay_month, e.department_id ) sub INNER JOIN company_average ca ON sub.pay_month = ca.pay_month
WITH company_avg_monthly AS ( SELECT EXTRACT(YEAR FROM pay_date) AS yr, EXTRACT(MONTH FROM pay_date) AS mth, AVG(AMOUNT) AS avg_comp_salary FROM salary GROUP BY EXTRACT(MONTH FROM pay_date) ORDER BY 1 ), dep_avg_monthly AS ( SELECT EXTRACT(YEAR FROM pay_date) AS yr, LPAD(EXTRACT(MONTH FROM pay_date), 2, 0) AS mth, employee.department_id, AVG(amount) AS avg_dep_salary FROM salary LEFT JOIN employee ON employee.employee_id = salary.employee_id GROUP BY EXTRACT(MONTH FROM pay_date), employee.department_id ORDER BY 1, 2 ), combined AS ( SELECT CAST(dam.yr AS CHAR) AS yr, CAST(dam.mth AS CHAR) AS mth, dam.department_id, dam.avg_dep_salary, cam.avg_comp_salary FROM dep_avg_monthly AS dam JOIN company_avg_monthly AS cam ON (dam.yr = cam.yr) AND (dam.mth = cam.mth) ) SELECT CONCAT(yr,'-', mth) AS pay_month, department_id, CASE WHEN avg_dep_salary > avg_comp_salary THEN 'higher' WHEN avg_dep_salary < avg_comp_salary THEN 'lower' ELSE 'same' END AS comparison FROM combined
WITH company_avg_salary AS ( SELECT SUBSTRING(pay_date, 1, 7) AS pay_month, AVG(amount) AS avg_salary FROM salary GROUP BY pay_month ) , department_avg_salary AS ( SELECT SUBSTRING(s.pay_date, 1, 7) AS pay_month, e.department_id, AVG(s.amount) as avg_salary FROM salary s JOIN employee e ON s.employee_id = e.employee_id GROUP BY pay_month, e.department_id ) SELECT d.pay_month, d.department_id, CASE WHEN c.avg_salary > d.avg_salary THEN 'lower' WHEN c.avg_salary = d.avg_salary THEN 'same' ELSE 'higher' END AS comparison FROM company_avg_salary c JOIN department_avg_salary d ON c.pay_month = d.pay_month
WITH dep AS (SELECT SUBSTRING(pay_date,1,7) AS pay_month,department_id,AVG(amount) AS dep_avg FROM salary JOIN employee USING(employee_id) GROUP BY SUBSTRING(pay_date,1,7),department_id), com AS (SELECT SUBSTRING(pay_date,1,7) AS pay_month,AVG(amount) AS company_avg FROM salary GROUP BY SUBSTRING(pay_date,1,7)) SELECT pay_month,department_id,(CASE WHEN dep_avg>company_avg THEN "higher" WHEN dep_avg=company_avg THEN "same" WHEN dep_avg<company_avg THEN "lower" END) AS comparison FROM dep JOIN com USING(pay_month)
WITH dep_cum_salary AS ( SELECT DATE_FORMAT(s.pay_date,'%Y-%m') as pay_month, e.department_id , SUM(s.amount) dep_salary , count(s.amount) dep_count FROM salary as s JOIN employee as e ON s.employee_id = e.employee_id GROUP BY pay_month, e.department_id ), avg_salary AS ( SELECT pay_month,department_id, dep_salary/dep_count dep_avg_salary, SUM(dep_salary) OVER (PARTITION BY pay_month)/SUM(dep_count) OVER (PARTITION BY pay_month) as comp_avg_salary FROM dep_cum_salary) SELECT pay_month, department_id , (CASE WHEN dep_avg_salary>comp_avg_salary THEN 'higher' WHEN dep_avg_salary<comp_avg_salary THEN 'lower' ELSE 'same' END)comparison FROM avg_salary
WITH depart_combine AS ( SELECT s.pay_date , s.amount , e.department_id FROM salary s JOIN employee e ON s.employee_id = e.employee_id ), month_avg AS ( SELECT DATE_FORMAT(pay_date, '%Y-%m') as month ,AVG(amount) as comp_avg FROM depart_combine GROUP BY 1 ), depart_avg AS ( SELECT DATE_FORMAT(pay_date, '%Y-%m') as month ,department_id ,AVG(amount) as depart_avg FROM depart_combine GROUP BY 1,2 ) SELECT da.month AS pay_month ,da.department_id ,CASE WHEN depart_avg < comp_avg THEN 'lower' WHEN depart_avg > comp_avg THEN 'higher' ELSE 'same' END AS comparison FROM depart_avg da JOIN month_avg ma ON da.month = ma.month
WITH dept AS (SELECT SUBSTRING(pay_date, 1,7) AS PAY_MONTH, department_id, AVG(amount) AS dept_amount from salary INNER JOIN employee USING(employee_id) GROUP BY 1,2), comp AS (SELECT SUBSTRING(pay_date, 1,7) AS PAY_MONTH, AVG(amount) AS comp_amount from salary INNER JOIN employee USING(employee_id) GROUP BY 1) SELECT PAY_MONTH AS pay_month, department_id, CASE WHEN dept_amount > (SELECT comp_amount FROM comp WHERE comp.PAY_MONTH = dept.PAY_MONTH) THEN 'higher' WHEN dept_amount = (SELECT comp_amount FROM comp WHERE comp.PAY_MONTH = dept.PAY_MONTH) THEN 'same' ELSE 'lower' END AS comparison FROM dept
WITH dept_avg AS ( SELECT s.amount, s.pay_date, e.department_id, AVG(s.amount) AS 'avg' FROM salary AS s LEFT JOIN employee AS e ON s.employee_id = e.employee_id GROUP BY MONTH(s.pay_date), e.department_id ), comp_avg AS ( SELECT s.amount, s.pay_date, e.department_id, AVG(s.amount) AS 'avg' FROM salary AS s LEFT JOIN employee AS e ON s.employee_id = e.employee_id GROUP BY MONTH(s.pay_date) ) SELECT SUBSTRING(d.pay_date, 1, 7) AS 'pay_month', d.department_id, CASE WHEN d.avg > c.avg THEN 'higher' WHEN d.avg < c.avg THEN 'lower' ELSE 'same' END AS 'comparison' FROM dept_avg AS d LEFT JOIN comp_avg AS c ON MONTH(d.pay_date) = MONTH(c.pay_date)
WITH emp_salary AS ( SELECT e.employee_id, department_id, amount, DATE_FORMAT(pay_date, "%Y-%m") AS pay_month FROM employee e JOIN salary s ON e.employee_id=s.employee_id ), comp_avg_salary AS ( SELECT pay_month, AVG(amount) as avg_salary FROM emp_salary GROUP BY pay_month ), department_avg_salary AS ( SELECT pay_month, department_id, AVG(amount) as avg_salary FROM emp_salary GROUP BY pay_month, department_id ) SELECT cas.pay_month, department_id, CASE WHEN cas.avg_salary = das.avg_salary THEN 'same' WHEN cas.avg_salary > das.avg_salary THEN 'lower' ELSE 'higher' END as comparison FROM department_avg_salary das JOIN comp_avg_salary cas ON das.pay_month = cas.pay_month
WITH full_table AS (SELECT s.employee_id, amount, DATE_FORMAT(pay_date,'%Y-%m') AS pay_month, department_id FROM salary s LEFT JOIN employee e ON s.employee_id = e.employee_id) SELECT DISTINCT pay_month, department_id, CASE WHEN d_avg = c_avg THEN 'same' WHEN d_avg < c_avg THEN 'lower' ELSE 'higher' END AS comparison FROM (SELECT pay_month, department_id, AVG(amount) OVER(PARTITION BY pay_month, department_id) AS d_avg, AVG(amount) OVER(PARTITION BY pay_month) AS c_avg FROM full_table) a ORDER BY pay_month DESC, department_id
WITH joined AS( SELECT s.employee_id, DATE_FORMAT(pay_date, '%Y-%m') AS pay_month, amount, department_id FROM salary s LEFT JOIN employee e ON s.employee_id = e.employee_id), company_avg AS ( SELECT pay_month, AVG(amount) AS average_salary FROM joined GROUP BY pay_month), avg_pay_department AS( SELECT pay_month,department_id, AVG(amount) AS department_average_salary FROM joined GROUP BY pay_month,department_id) SELECT apd.pay_month, apd.department_id, CASE WHEN department_average_salary < average_salary THEN "lower" WHEN department_average_salary > average_salary THEN "higher" ELSE "same" END comparison FROM avg_pay_department apd LEFT JOIN company_avg ca ON apd.pay_month = ca.pay_month
WITH monthly_avgs AS ( SELECT DISTINCT LEFT(s.pay_date,7) AS pay_month, e.department_id, AVG(s.amount) OVER (PARTITION BY MONTH(s.pay_date), e.department_id) AS dept_avg, AVG(s.amount) OVER (PARTITION BY MONTH(s.pay_date)) AS company_avg FROM salary s LEFT JOIN employee e ON s.employee_id = e.employee_id ) SELECT pay_month, department_id, CASE WHEN dept_avg < company_avg THEN 'lower' WHEN dept_avg = company_avg THEN 'same' WHEN dept_avg > company_avg THEN 'higher' END AS comparison FROM monthly_avgs ORDER BY pay_month DESC, department_id
WITH monthly_dept_salary AS ( SELECT SUBSTR(s.pay_date, 1, 7) AS pay_month, e.department_id, AVG(amount) AS avg_amount FROM employee AS e INNER JOIN salary AS s ON e.employee_id = s.employee_id GROUP BY e.department_id, SUBSTR(s.pay_date, 1, 7) ), monthly_salary AS ( SELECT SUBSTR(s.pay_date, 1, 7) AS pay_month, AVG(amount) AS avg_amount FROM employee AS e INNER JOIN salary AS s ON e.employee_id = s.employee_id GROUP BY SUBSTR(s.pay_date, 1, 7) ) SELECT mds.pay_month, department_id, CASE WHEN mds.avg_amount > ms.avg_amount THEN 'higher' WHEN mds.avg_amount < ms.avg_amount THEN 'lower' ELSE 'same' END AS comparison FROM monthly_dept_salary AS mds INNER JOIN monthly_salary AS ms ON mds.pay_month = ms.pay_month
WITH salarytable AS( SELECT s.employee_id, e.department_id, date_format(pay_date, "%Y-%m") as pay_month, s.amount as amount FROM salary as s JOIN employee as e using (employee_id) ) SELECT distinct pay_month, department_id, CASE WHEN avgsalary_dept>avgsalary_comp THEN "higher" WHEN avgsalary_dept<avgsalary_comp THEN "lower" ELSE "same" END as comparison FROM( select distinct department_id, pay_month, AVG(amount)OVER(PARTITION By pay_month,department_id) as avgsalary_dept, AVG(amount)OVER(PARTITION By pay_month) as avgsalary_comp FROM salarytable )a
WITH t1 AS ( SELECT LEFT(pay_date, 7) AS pay_month, e.department_id, AVG(amount) AS avg_amount_dept FROM salary s JOIN employee e ON s.employee_id = e.employee_id GROUP BY pay_month, e.department_id ), t2 AS ( SELECT LEFT(pay_date, 7) AS pay_month, AVG(amount) AS avg_amount FROM salary s JOIN employee e ON s.employee_id = e.employee_id GROUP BY pay_month ) SELECT t1.pay_month, t1.department_id, CASE WHEN t1.avg_amount_dept < t2.avg_amount THEN 'lower' WHEN t1.avg_amount_dept > t2.avg_amount THEN 'higher' ELSE 'same' END AS comparison FROM t1 JOIN t2 ON t1.pay_month = t2.pay_month
WITH t1 AS ( SELECT pay_month, department_id, AVG(amount) OVER(PARTITION BY pay_month, department_id) dept_avg, AVG(amount) OVER(PARTITION BY pay_month) com_avg FROM ( SELECT DATE_FORMAT(pay_date, '%Y-%m') pay_month, s.employee_id, amount, department_id FROM salary s LEFT JOIN employee e ON s.employee_id = e.employee_id ) t ) SELECT DISTINCT pay_month, department_id, CASE WHEN dept_avg > com_avg THEN 'higher' WHEN dept_avg = com_avg THEN 'same' WHEN dept_avg < com_avg THEN 'lower' END AS comparison FROM t1 ORDER BY pay_month DESC
WITH t1 AS (SELECT salary.*,employee.department_id FROM salary LEFT JOIN employee ON salary.employee_id = employee.employee_id), t2 AS (SELECT department_id,SUBSTRING(pay_date,1,7) AS pay_month,AVG(amount) as money FROM t1 GROUP BY department_id,SUBSTRING(pay_date,1,7)), t3 AS (SELECT SUBSTRING(pay_date,1,7) AS pay_month,AVG(amount) as money FROM t1 GROUP BY SUBSTRING(pay_date,1,7)) SELECT t2.pay_month,t2.department_id,CASE WHEN t2.money > t3.money THEN 'higher' WHEN t2.money < t3.money THEN 'lower' ELSE 'same' END AS comparison FROM t2 LEFT JOIN t3 ON t2.pay_month = t3.pay_month
WITH t1 AS (SELECT t2.employee_id, amount, pay_date, department_id, DATE_FORMAT(pay_date, '%Y-%m') AS pay_month, AVG(amount) OVER(PARTITION BY t2.pay_date) AS company_avg_salary, AVG(amount) OVER(PARTITION BY t2.pay_date, t3.department_id) AS department_avg_salary FROM salary AS t2 INNER JOIN employee AS t3 ON t2.employee_id = t3.employee_id) SELECT DISTINCT pay_month, department_id, (CASE WHEN department_avg_salary > company_avg_salary THEN 'higher' WHEN department_avg_salary < company_avg_salary THEN 'lower' WHEN department_avg_salary = company_avg_salary THEN 'same' END) AS comparison FROM t1
WITH table1 AS( SELECT employee_id, department_id, amount, DATE_FORMAT(pay_date, '%Y-%m') AS pay_month FROM salary s INNER JOIN employee e USING(employee_id) ), table2 AS( SELECT DISTINCT pay_month, department_id, AVG(amount)OVER(PARTITION BY pay_month, department_id) AS avg_dept FROM table1 ), table3 AS( SELECT DATE_FORMAT(pay_date,'%Y-%m') AS pay_month, AVG(amount) AS avg_comp FROM salary GROUP BY pay_month ) SELECT pay_month, department_id, (CASE WHEN avg_dept > avg_comp THEN 'higher' WHEN avg_dept = avg_comp THEN 'same' ELSE 'lower' END) AS comparison FROM table2 INNER JOIN table3 USING(pay_month)
WITH tmp AS ( SELECT id, employee_id, amount, pay_date, DATE_FORMAT(pay_date, '%Y-%m') AS pay_month FROM salary ) SELECT DISTINCT a.pay_month, a.department_id, (CASE WHEN a.depart_avg > a.company_avg THEN 'higher' WHEN a.depart_avg < a.company_avg THEN 'lower' ELSE 'same' END) AS comparison FROM ( SELECT t.pay_month, e.department_id, AVG(t.amount) OVER (PARTITION BY t.pay_month) AS company_avg, AVG(t.amount) OVER (PARTITION BY t.pay_month, e.department_id) AS depart_avg FROM tmp t LEFT JOIN employee e ON t.employee_id=e.employee_id ) a
WITH tmp AS (SELECT s.*, e.department_id FROM salary s JOIN employee e ON s.employee_id = e.employee_id), tmp2 AS (SELECT SUBSTRING(pay_date, 1, 7) AS pay_month, AVG(amount) avg1 FROM tmp GROUP BY pay_month), tmp3 AS (SELECT SUBSTRING(pay_date, 1, 7) AS pay_month, department_id, AVG(amount) avg2 FROM tmp GROUP BY pay_month, department_id) SELECT t3.pay_month, t3.department_id, (CASE WHEN t3.avg2 > t2.avg1 THEN 'higher' WHEN t3.avg2 = t2.avg1 THEN 'same' ELSE 'lower' END) AS 'comparison' FROM tmp3 t3 LEFT JOIN tmp2 t2 ON t3.pay_month = t2.pay_month
With Depavg_Sal as ( Select date_format(s.pay_date,'%Y-%m') pay_month, e.department_id, Avg(s.amount) Avg_Sal from salary s left join employee e on s.employee_id = e.employee_id group by 1,2 order by 1 desc,2 ), Compavg_Sal as ( Select date_format(s.pay_date,'%Y-%m') pay_month, Avg(s.amount) AvgSalc from salary s left join employee e on s.employee_id = e.employee_id group by 1 ) Select d1.pay_month, d1.department_id, CASE WHEN d1.Avg_Sal = c1.AvgSalc THEN 'same' WHEN d1.Avg_Sal > c1.AvgSalc THEN 'higher' ELSE 'lower' END AS comparison from Depavg_Sal d1 join Compavg_Sal c1 on d1.pay_month = c1.pay_month order by 1 desc,2
With company as ( Select DATE_FORMAT(pay_date,'%Y-%m') as pay_month, avg(amount) as month_avg From salary Group by DATE_FORMAT(pay_date,'%Y-%m')), department as ( Select department_id, DATE_FORMAT(pay_date,'%Y-%m') as pay_month, avg(amount) as dep_month_avg From Salary a Join Employee b on a.employee_id = b.employee_id Group by department_id, DATE_FORMAT(pay_date,'%Y-%m')) Select a.pay_month, a.department_id, case when dep_month_avg > month_avg then 'higher' when dep_month_avg = month_avg then 'same' when dep_month_avg < month_avg then 'lower' end as comparison From department a Join company b on a.pay_month = b.pay_month
With t as ( Select *,left(pay_date,7) as pay_month from salary ) Select c.pay_month,c.department_id, case when c.avg_sal > c.avg_sal_overall then 'higher' when c.avg_sal = c.avg_sal_overall then 'same' when c.avg_sal < c.avg_sal_overall then 'lower' end as comparison from ( Select b.pay_month,a.department_id,avg(b.amount) as avg_sal,(Select avg(q.amount) from t q where q.pay_month = b.pay_month group by q.pay_month ) as avg_sal_overall from (employee a) left join (t b) on a.employee_id=b.employee_id group by b.pay_month,a.department_id )c
select a.pay_month, department_id, (case when dept_avg > comp_avg then "higher" when dept_avg < comp_avg then "lower" else "same" end) as comparison from (select department_id, avg(amount) as dept_avg, date_format(pay_date, "%Y-%m") as pay_month from employee e left join salary s on e.employee_id = s.employee_id group by department_id, pay_month order by pay_month desc, department_id) a join (select avg(amount) as comp_avg, date_format(pay_date, "%Y-%m") as pay_month from salary group by pay_month) b on a.pay_month = b.pay_month
select a.pay_month,a.department_id, case when a.average<b.average then'lower' when a.average=b.average then 'same' when a.average>b.average then 'higher' end comparison from (select DATE_FORMAT(pay_date,'%Y-%m') pay_month,department_id,avg(amount) average from salary s , employee e where s.employee_id=e.employee_id group by pay_month,department_id) a join (select DATE_FORMAT(pay_date,'%Y-%m') pay_month,avg(amount) average from salary group by pay_month) b on a.pay_month=b.pay_month
select a.s as pay_month, a.department_id,(case when a.avg_de_salary < b.avg_salary then 'lower' when a.avg_de_salary > b.avg_salary then 'higher' else 'same' end) as comparison from (select Date_format(pay_date, '%Y-%m') as s, department_id, round(avg(amount),2) as avg_de_salary from salary s, employee e where s.employee_id = e.employee_id group by s, department_id) a join ( select Date_format(pay_date, '%Y-%m') as s, round(avg(amount),2) as avg_salary from salary group by s ) b on a.s = b.s
select c.pay_month, a.department_id, case when a.avg_dept_amount > c.avg_amt then "higher" when a.avg_dept_amount < c.avg_amt then "lower" else "same" end as comparison from (select avg(a.amount) avg_dept_amount, b.department_id, date_format(a.pay_date, '%Y-%m') as pay_month from salary a inner join employee b on (a.employee_id = b.employee_id) group by 2,3) as a inner join ( select avg(amount) as avg_amt, date_format(pay_date,'%Y-%m') as pay_month from ( select a.amount, a.pay_date, b.department_id from salary as a inner join employee as b on a.employee_id = b.employee_id ) ab group by 2 ) c on (a.pay_month = c.pay_month)
select c.pay_month, c.department_id, case when average_dept > average_comp then 'higher' when average_dept < average_comp then 'lower' else 'same' end comparison from ( select left(pay_date,7) pay_month, b.department_id, sum(amount)/count(*) average_dept from salary a join employee b on a.employee_id = b.employee_id group by left(pay_date,7), b.department_id ) c left join ( select left(pay_date,7) pay_month, sum(amount)/count(*) average_comp from salary group by left(pay_date,7) ) d on c.pay_month = d.pay_month
select d.pay_month, d.department_id, case when c.company_avg<d.department_avg then 'higher' when c.company_avg>d.department_avg then 'lower' else 'same' end as comparison from (select avg(amount) as company_avg, date_format(pay_date, '%Y-%m') as pay_month from salary group by date_format(pay_date, '%Y-%m')) as c join (select b.department_id, avg(amount) as department_avg, date_format(pay_date, '%Y-%m') as pay_month from salary as a left join employee as b on a.employee_id=b.employee_id group by date_format(pay_date, '%Y-%m'), department_id) as d on c.pay_month=d.pay_month order by d.pay_month, d.department_id
select d.pay_month,department_id, case when avg_department > company_avg then 'higher' when avg_department < company_avg then 'lower' else 'same' end as comparison from ( select department_id,avg(amount) as avg_department,substring(pay_date,1,7) as pay_month from salary a join employee b on a.employee_id=b.employee_id group by department_id,pay_month)d join (select avg(amount) as company_avg,substring(pay_date,1,7) as pay_month from salary group by pay_month )e on d.pay_month=e.pay_month
select da.month pay_month,department_id, case when department_average > company_average then 'higher' when department_average < company_average then 'lower' when department_average = company_average then 'same' end as comparison from (select substr(pay_date,1,7) month,department_id,avg(amount) department_average from salary join employee on salary.employee_id = employee.employee_id group by 1,2) da join (select substr(pay_date,1,7) month,avg(amount) company_average from salary group by 1) ca on da.month = ca.month
select dep.pay_month, department_id, case when dep_avg > cmp_avg then 'higher' when dep_avg < cmp_avg then 'lower' else 'same' end comparison from (select left(pay_date, 7) pay_month, department_id, avg(amount) dep_avg from salary s, employee e where s.employee_id = e.employee_id group by 1,2) dep join (select left(pay_date, 7) pay_month, avg(amount) cmp_avg from salary group by 1) cmp on dep.pay_month = cmp.pay_month
select department_salary.pay_month, department_id, case when department_avg>company_avg then 'higher' when department_avg<company_avg then 'lower' else 'same' end as comparison from ( select department_id, avg(amount) as department_avg, date_format(pay_date, '%Y-%m') as pay_month from salary join employee on salary.employee_id = employee.employee_id group by department_id, pay_month ) as department_salary join ( select avg(amount) as company_avg, date_format(pay_date, '%Y-%m') as pay_month from salary group by date_format(pay_date, '%Y-%m') ) as company_salary on department_salary.pay_month = company_salary.pay_month
select department_salary.pay_month, department_id, case when department_avg>company_avg then 'higher' when department_avg<company_avg then 'lower' else 'same' end as comparison from (select department_id, avg(amount) as department_avg, date_format(pay_date, '%Y-%m') as pay_month from salary join employee on salary.employee_id=employee.employee_id group by department_id, pay_month) as department_salary join (select avg(amount) as company_avg, date_format(pay_date, '%Y-%m') as pay_month from salary group by date_format(pay_date, '%Y-%m')) as company_salary on department_salary.pay_month=company_salary.pay_month
select dept.pay_month, department_id, case when deptAvgSal>comAvgSal then 'higher' when deptAvgSal<comAvgSal then 'lower' else 'same' end as comparison from (select DATE_FORMAT(pay_date,'%Y-%m') as pay_month, department_id, sum(s.amount)/count(*) deptAvgSal from salary s join employee e on s.employee_id=e.employee_id group by DATE_FORMAT(pay_date,'%Y%m'), department_id order by DATE_FORMAT(pay_date,'%Y%m') desc, department_id) as dept join (select DATE_FORMAT(pay_date,'%Y-%m') as pay_month, sum(s.amount)/count(*) comAvgSal from salary s join employee e on s.employee_id=e.employee_id group by DATE_FORMAT(pay_date,'%Y%m') order by DATE_FORMAT(pay_date,'%Y%m') desc) as com on dept.pay_month=com.pay_month
select dept.pay_month, dept.department_id, CASE when comp.comp_avg > dept.dept_avg then 'lower' when comp.comp_avg < dept.dept_avg then 'higher' else 'same' END as comparison from (select date_format(pay_date, '%Y-%m') as pay_month, avg(amount) comp_avg from salary s group by pay_month) as comp join (select e.department_id, date_format(pay_date, '%Y-%m') as pay_month, avg(amount) dept_avg from salary s , employee e where s.employee_id = e.employee_id group by e.department_id, pay_month) as dept on comp.pay_month = dept.pay_month
select dept.pay_month, dept.department_id, case when dept.avg_dept_salary > company.avg_company_salary then 'higher' when dept.avg_dept_salary < company.avg_company_salary then 'lower' else 'same' end as comparison from (select left(s.pay_date, 7) as pay_month, e.department_id, avg(s.amount) as avg_dept_salary from salary s inner join employee e on s.employee_id = e.employee_id group by pay_month, department_id) dept left join (select left(s.pay_date, 7) as pay_month, e.department_id, avg(s.amount) as avg_company_salary from salary s inner join employee e on s.employee_id = e.employee_id group by pay_month) company on dept.pay_month = company.pay_month group by dept.pay_month, dept.department_id
select dept.pay_month, dept.department_id, case when dept.dept_salary > com.com_salary then 'higher' when dept.dept_salary < com.com_salary then 'lower' else 'same' end as comparison from (select substr(s.pay_date, 1, 7) as pay_month, e.department_id, avg(amount) as dept_salary from salary as s join employee as e on s.employee_id = e.employee_id group by 1, 2) as dept join (select substr(pay_date, 1, 7) as pay_month, avg(amount) as com_salary from salary group by 1) as com on dept.pay_month = com.pay_month
select distinct * from ( select substring(pay_date, 1, 7) pay_month, department_id, CASE when avg_dept_sal > avg_sal THEN 'higher' WHEN avg_dept_sal = avg_sal THEN 'same' else 'lower' end comparison from ( select s.*, e.department_id, AVG(amount) over (partition by e.department_id, substring(pay_date, 1, 7)) avg_dept_sal, AVG(amount) over (partition by substring(pay_date, 1, 7)) avg_sal from salary s inner join employee e on s.employee_id = e.employee_id ) a )b order by pay_month desc, department_id, comparison
select distinct date_format(pay_date, '%Y-%m') as pay_month, department_id, case when avg(amount) over(partition by department_id, pay_date) > avg(amount) over(partition by pay_date) then 'higher' when avg(amount) over(partition by department_id, pay_date) < avg(amount) over(partition by pay_date) then 'lower' else 'same' end as comparison from salary as s left join employee as e on s.employee_id = e.employee_id order by 1 desc, 2 asc
select distinct date_format(u.pay_date, '%Y-%m') as pay_month, u.department_id, (case when u.dpt_avg < u.comp_avg then 'lower' when u.dpt_avg > u.comp_avg then 'higher' when u.dpt_avg = u.comp_avg then 'same' end) as comparison from ( select t.*, avg(t.amount) over (partition by t.department_id, t.pay_date ) as dpt_avg, avg(t.amount) over (partition by t.pay_date ) as comp_avg from (select a.*, b.department_id from salary a inner join employee b on a.employee_id = b.employee_id) t) u order by u.pay_date desc, u.department_id asc
select distinct left(pay_date,7) as pay_month, department_id, case when davg>cavg then 'higher' when davg=cavg then 'same' else 'lower' end as comparison from ( select id, s.employee_id, department_id, amount, pay_date, avg(amount) over (partition by left(pay_date,7)) as cavg, avg(amount) over (partition by left(pay_date,7),department_id) as davg from salary s join employee e on s.employee_id=e.employee_id )a order by 1 desc, 2
select distinct pay_month, department_id, (case when dept_avg> com_avg then 'higher' when dept_avg<com_avg then 'lower' else 'same' end ) as comparison from ( select left(pay_date,7) as pay_month, department_id, avg(amount) over(partition by left(pay_date,7), department_id) as dept_avg, avg(amount) over(partition by left(pay_date,7)) as com_avg from salary right join employee on salary.employee_id = employee.employee_id ) as src order by pay_month desc, department_id
select distinct pay_month, department_id, case when avg_dep > avg_comp then 'higher' when avg_dep = avg_comp then 'same' else 'lower' end as comparison from ( select date_format(a.pay_date,'%Y-%m') as pay_month, b.department_id, avg(amount)over(partition by date_format(a.pay_date,'%Y-%m'),department_id) as avg_dep, avg(amount)over(partition by date_format(a.pay_date,'%Y-%m')) as avg_comp from salary a left join employee b on a.employee_id = b.employee_id ) cte order by pay_month, department_id
select distinct pay_month, department_id, case when avg_dep > avg_comp then 'higher' when avg_dep = avg_comp then 'same' else 'lower' end as comparison from ( select left(a.pay_date,7) as pay_month, b.department_id, avg(amount)over(partition by left(a.pay_date,7),department_id) as avg_dep, avg(amount)over(partition by left(a.pay_date,7)) as avg_comp from salary a left join employee b on a.employee_id = b.employee_id ) cte order by pay_month, department_id
select distinct pay_month, department_id, case when avg_dept>avg_salary then 'higher' when avg_dept< avg_salary then 'lower' else 'same' end as comparison from( select substr(pay_date,1,7) as pay_month, department_id, avg(amount) over (partition by substr(pay_date,1,7)) as avg_salary, avg(amount) over(partition by department_id,substr(pay_date,1,7)) as avg_dept from salary as a inner join employee as b on a.employee_id=b.employee_id ) as x order by pay_month desc
select distinct pay_month, department_id, case when company_avg > dept_avg then 'lower' when company_avg < dept_avg then 'higher' else 'same'end as comparison FROM ( SELECT left(pay_date,7) AS pay_month, amount, department_id, avg(amount) over (partition by department_id, pay_date) dept_avg, avg(amount) over (partition by pay_date) company_avg from salary s inner join employee e on s.employee_id = e.employee_id ) a
select distinct pay_month, department_id, case when department_salary < company_salary then 'lower' when department_salary > company_salary then 'higher' when department_salary = company_salary then 'same' end as comparison from ( select date_format(pay_date, '%Y-%m') as pay_month, department_id, avg(amount) over (partition by date_format(pay_date, '%Y-%m'), department_id) as department_salary, avg(amount) over (partition by date_format(pay_date, '%Y-%m')) as company_salary from salary s join employee e on s.employee_id = e.employee_id ) avg_salary
select distinct pay_month,department_id, case when deptsal > globalsal then 'higher' when deptsal < globalsal then 'lower' else 'same' end as comparison from (select date_format(pay_date,'%Y-%m') as pay_month, department_id, avg(amount) over (partition by date_format(pay_date,'%Y-%m'),department_id) as deptsal,avg(amount) over (partition by date_format(pay_date,'%Y-%m')) as globalsal from salary s inner join employee e on s.employee_id = e.employee_id) as t order by pay_month desc,department_id
select distinct substring(pay_date, 1, 7) as pay_month , department_id , case when tmp.company_avg > avg(amount) over(partition by department_id, substring(pay_date, 1,7)) then 'lower' when tmp.company_avg < avg(amount) over(partition by department_id, substring(pay_date, 1,7)) then 'higher' else 'same' end as comparison from salary s join employee e using(employee_id) join ( select substring(pay_date, 1, 7) as pay_month , avg(amount) as company_avg from salary group by 1 ) tmp on tmp.pay_month=substring(pay_date, 1, 7)
select left(sal.pay_date,7) as pay_month ,emp.department_id department_id ,case when round(ifnull(avg(sal.amount),0),4) > round(avg_company.avg_company_salary,4) then 'higher' when round(ifnull(avg(sal.amount),0),4) < round(avg_company.avg_company_salary,4) then 'lower' else 'same' end as comparison from employee emp left join salary sal on emp.employee_id = sal.employee_id left join ( select left(pay_date,7) as pay_month ,avg(amount) as avg_company_salary from salary group by pay_month ) avg_company on left(sal.pay_date,7) = avg_company.pay_month group by pay_month, department_id
select left(temp.pay_date,7) as pay_month, temp.department_id, case when temp.a_avg>temp.c_avg then "higher" when temp.a_avg<temp.c_avg then "lower" else "same" end as comparison from (select s.id,s.employee_id,e.department_id, s.amount, s.pay_date, avg(s.amount) over (partition by left(s.pay_date,7), e.department_id) as a_avg, avg(s.amount) over (partition by left(s.pay_date,7)) as c_avg from salary s inner join employee e on e.employee_id=s.employee_id ) as temp group by left(temp.pay_date,7), temp.department_id
select month pay_month, department_id, case when avg_d > avg_o then 'higher' when avg_d < avg_o then 'lower' else 'same' end comparison from (select s.employee_id, department_id, left(pay_date,7) month, avg(amount) over(partition by department_id, left(pay_date,7) order by left(pay_date,7)) avg_d, avg(amount) over(partition by left(pay_date,7) order by left(pay_date,7)) avg_o from salary s, employee e where s.employee_id = e.employee_id) temp group by 1,2
select pay_month, department_id, (case when dep_avg > com_avg then 'higher' when dep_avg < com_avg then 'lower' else 'same' end) as comparison from( select left(pay_date,7) as pay_month, department_id, avg(amount) over (partition by left(pay_date,7), department_id) as dep_avg, avg(amount) over (partition by left(pay_date,7) rows between unbounded preceding and unbounded following) as com_avg from salary s join employee e on s.employee_id = e.employee_id) tbl group by 1,2
select pay_month, department_id, (case when dep_avg > company_avg then 'higher' when dep_avg < company_avg then 'lower' else 'same' end) as comparison from (select left(pay_date,7) as pay_month, department_id, avg(amount) as dep_avg from salary s, employee e where s.employee_id=e.employee_id group by pay_month, department_id) t1, (select avg(amount) as company_avg, left(pay_date,7) as month from salary group by month) t2 where t1.pay_month=t2.month
select pay_month, department_id, (case when dept_avg_sal=comp_avg_sal then "same" when dept_avg_sal<comp_avg_sal then "lower" else "higher" end) comparison from (select DISTINCT LEFT(pay_date,7) as pay_month, department_id, avg(amount) over (partition by LEFT(pay_date,7),department_id) as dept_avg_sal, avg(amount) over (partition by LEFT(pay_date,7)) as comp_avg_sal from salary s left join employee e on e.employee_id = s.employee_id) A
select pay_month, department_id, (case when dept_avg_sal=comp_avg_sal then "same" when dept_avg_sal<comp_avg_sal then "lower" else "higher" end) comparison from (select LEFT(pay_date,7) as pay_month, department_id, avg(amount) as dept_avg_sal, (select avg(amount) from salary where LEFT(pay_date,7) = pay_month) as comp_avg_sal from salary s left join employee e on e.employee_id = s.employee_id group by pay_month,department_id) A
select pay_month, department_id, (case when dpt_avg > month_avg then 'higher' when dpt_avg = month_avg then 'same' else 'lower' end) 'comparison' from (select b.pay_month, department_id, dpt_avg, month_avg from (select pay_month, department_id, avg(amount) as dpt_avg from (select department_id, amount,substr(pay_date,1,7) as 'pay_month' from salary s, employee e where s.employee_id = e.employee_id) a group by a.pay_month, a.department_id) b join (select pay_month, avg(amount) as month_avg from (select department_id, amount,substr(pay_date,1,7) as 'pay_month' from salary s, employee e where s.employee_id = e.employee_id) d group by pay_month) as c on b.pay_month=c.pay_month) final order by pay_month desc, department_id asc
select pay_month, department_id, CASE WHEN average_dept_month > average_month THEN 'higher' when average_dept_month < average_month THEN 'lower' else 'same' end as comparison from ( select distinct e.department_id, left(pay_date,7) as pay_month, avg(amount) over (partition by left(pay_date,7),e.department_id) as average_dept_month, avg(amount) over (partition by left(pay_date,7)) as average_month from salary s left join employee e on s.employee_id = e.employee_id ) ASD order by pay_month desc
select pay_month, department_id, case when dept_avg > comp_avg then 'higher' when dept_avg < comp_avg then 'lower' else 'same' end comparison from ( select date_format(b.pay_date, '%Y-%m') pay_month, a.department_id, avg(b.amount) dept_avg, d.comp_avg from employee a inner join salary b on (a.employee_id = b.employee_id) inner join (select date_format(c.pay_date, '%Y-%m') pay_month, avg(c.amount) comp_avg from salary c group by date_format(c.pay_date, '%Y-%m')) d on ( date_format(b.pay_date, '%Y-%m') = d.pay_month) group by date_format(b.pay_date, '%Y-%m'), department_id, d.comp_avg) final
select pay_month, department_id, case when dept_salary > company_salary then 'higher' when dept_salary < company_salary then 'lower' else 'same' end as comparison from ( select date_format(pay_date, '%Y-%m') as pay_month, department_id, avg(amount) as dept_salary from salary join employee using (employee_id) group by 1, 2 ) temp2 join ( select date_format(pay_date, '%Y-%m') as pay_month, avg(amount) as company_salary from salary group by pay_month ) temp using (pay_month) order by pay_month
select pay_month,department_id , case when e_sal > c_sal then 'higher' when e_sal < c_sal then 'lower' when e_sal = c_sal then 'same' end as comparison from ( select avg(amount) e_sal, avg(cmp_avg) c_sal , department_id, date_format(pay_date, '%Y-%m') pay_month from employee e , salary s , ( select avg(amount) cmp_avg ,date_format(pay_date, '%Y-%m') date from employee e , salary s where e.employee_id = s.employee_id group by 2) b where e.employee_id = s.employee_id and date_format(s.pay_date,'%Y-%m') = b.date group by 3,4 ) xx
select result.pay_month, result.department_id, case when dept_avg>comp_avg then 'higher' when dept_avg<comp_avg then 'lower' else 'same' end as comparison from ( select department_id,avg(amount) as dept_avg,date_format(pay_date,'%Y-%m') as pay_month from salary join employee on salary.employee_id=employee.employee_id group by department_id,pay_month) as result join ( select avg(amount) as comp_avg,date_format(pay_date,'%Y-%m') as pay_month from salary group by pay_month) as comp on result.pay_month=comp.pay_month
select s1.pay_month, s2.department_id, case when s2.avg_department_salary > s1.avg_company_salary then 'higher' when s2.avg_department_salary = s1.avg_company_salary then 'same' else 'lower' end as comparison from( select date_format(pay_date,'%Y-%m') as pay_month, avg(amount) as avg_company_salary from salary group by pay_month ) s1 join ( select date_format(pay_date,'%Y-%m') as pay_month, department_id, avg(amount) as avg_department_salary from salary s join employee e on s.employee_id = e.employee_id group by pay_month, department_id ) s2 on s1.pay_month = s2.pay_month
select s1.pay_month, s2.department_id, case when s2.avg_department_salary > s1.avg_company_salary then 'higher' when s2.avg_department_salary = s1.avg_company_salary then 'same' else 'lower' end as comparison from( select substring(pay_date,1,7) as pay_month, avg(amount) as avg_company_salary from salary group by pay_month ) s1 join ( select substring(pay_date,1,7) as pay_month, department_id, avg(amount) as avg_department_salary from salary s join employee e on s.employee_id = e.employee_id group by pay_month, department_id ) s2 on s1.pay_month = s2.pay_month
select t.pay_month, t.department_id, case when d_avg>c_avg then 'higher' when d_avg=c_avg then 'same' when d_avg<c_avg then 'lower' end as comparison from (select pay_month, department_id, avg(amount) as d_avg from ( select s.*, DATE_FORMAT(pay_date, '%Y-%m') as pay_month, d.department_id from salary s join employee d on s.employee_id=d.employee_id ) e group by pay_month, department_id) t join ( select pay_month, avg(amount) as c_avg from ( select sal.*, DATE_FORMAT(pay_date, '%Y-%m') as pay_month, dep.department_id from salary sal join employee dep on sal.employee_id=dep.employee_id ) emp group by pay_month ) l on t.pay_month=l.pay_month
select t1.pay_month as pay_month, department_id, case when t1.average_month>t2.average_month then 'higher' when t1.average_month<t2.average_month then 'lower' else 'same' end as comparison from ( select LEFT(pay_date, 7) as pay_month, department_id, avg(amount) as average_month from employee, salary where employee.employee_id = salary.employee_id group by pay_month, department_id ) t1 JOIN ( select LEFT(pay_date, 7) as pay_month, avg(amount) as average_month from salary group by pay_month ) t2 ON t1.pay_month = t2.pay_month order by department_id, pay_month
select t1.pay_month, t1.department_id, case when t1.department_salary > t2.company_salary then "higher" when t1.department_salary < t2.company_salary then "lower" else "same" end as "comparison" from ((select left(s.pay_date, 7) pay_month, e.department_id, avg(s.amount) department_salary from salary s, employee e where s.employee_id = e.employee_id group by e.department_id, pay_month) as t1 left join (select left(s.pay_date, 7) pay_month, avg(s.amount) company_salary from salary s, employee e where s.employee_id = e.employee_id group by pay_month) as t2 on t1.pay_month = t2.pay_month) order by pay_month desc, department_id
select x.pay_mon as pay_month,x.department_id, case when x.avg_amt=y.t_avg_amt then "same" when x.avg_amt<y.t_avg_amt then "lower" else "higher" end as comparison from (select e.department_id,s.pay_mon,avg(s.amount) as avg_amt from (select employee_id,amount,substr(pay_date,1,7) as pay_mon from salary) s left join employee e on s.employee_id=e.employee_id group by s.pay_mon,e.department_id) x left join (select y.pay_mon,avg(amount) as t_avg_amt from (select substr(pay_date,1,7) as pay_mon,amount from salary ) y group by y.pay_mon) y on x.pay_mon=y.pay_mon order by 1 desc,2 asc
with A as( select date_format(pay_date, '%Y-%m') as "pay_month", department_id, avg(amount) as "dep_avg" from salary s join employee e on s.employee_id = e.employee_id group by 2,1 ), b as( select date_format(pay_date, '%Y-%m') as "pay_month", avg(amount) as "mon_avg" from salary s join employee e on s.employee_id = e.employee_id group by 1 ) select A.pay_month, A.department_id, case when A.dep_avg > B.mon_avg then "higher" when A.dep_avg < B.mon_avg then "lower" else "same" end as "comparison" from A join B on A.pay_month = B.pay_month
with CTE AS ( select LEFT(s.pay_date,7) as pay_month,e.department_id as department_id, AVG(s.amount) OVER(PARTITION BY s.pay_date) as company_avg, AVG(s.amount) OVER(Partition By e.department_id,s.pay_date) as department_avg from salary s, employee e where e.employee_id = s.employee_id ) select pay_month,department_id , (CASE WHEN department_avg > company_avg THEN "higher" WHEN department_avg < company_avg THEN "lower" WHEN department_avg = company_avg THEN "same" END) as comparison from CTE group by pay_month,department_id
with a as(select avg(amount) as tot_avg, DATE_format(pay_date,'%Y-%m') as pay_month from salary group by DATE_format(pay_date,'%Y-%m')), b as (select DATE_format(pay_date,'%Y-%m') as pay_month , e.department_id, avg(s.amount) as dept_avg from employee e join salary s on e.employee_id = s.employee_id group by DATE_format(pay_date,'%Y-%m'), e.department_id) select a.pay_month, b.department_id, case when b.dept_avg > a.tot_avg then 'higher' when b.dept_avg < a.tot_avg then 'lower' else 'same' end as comparison from a join b on a.pay_month = b.pay_month
with avg_comp_salary AS ( SELECT pay_date, AVG(amount) AS avg_salary FROM salary GROUP BY pay_date ), avg_dpt_salary AS ( SELECT s.pay_date, e.department_id, AVG(s.amount) AS avg_salary FROM salary s INNER JOIN employee e ON s.employee_id = e.employee_id GROUP BY e.department_id , s.pay_date ) SELECT DISTINCT DATE_FORMAT(avg_comp_salary.pay_date, '%Y-%m') AS pay_month, avg_dpt_salary.department_id, CASE WHEN avg_comp_salary.avg_salary = avg_dpt_salary.avg_salary THEN 'same' WHEN avg_comp_salary.avg_salary < avg_dpt_salary.avg_salary THEN 'higher' WHEN avg_comp_salary.avg_salary > avg_dpt_salary.avg_salary THEN 'lower' ELSE NULL END AS comparison FROM avg_comp_salary INNER JOIN avg_dpt_salary ON avg_comp_salary.pay_date = avg_dpt_salary.pay_date
with avg_monthly as( select DATE_FORMAT(pay_date,'%Y-%m') as month, avg(s.amount) as avg_month from salary s join employee e on s.employee_id = e.employee_id group by month(s.pay_date) ), avg_department as( select e.department_id, DATE_FORMAT(pay_date,'%Y-%m') as month, avg(s.amount) as avg_dep_month from salary s join employee e on s.employee_id = e.employee_id group by month(s.pay_date), e.department_id ) select ad.month as pay_month, ad.department_id, (case when avg_dep_month > avg_month then 'higher' when avg_dep_month < avg_month then 'lower' else 'same' end) as comparison from avg_department ad join avg_monthly am on ad.month = am.month
with avg_salary as ( select date_format(pay_date, '%Y-%m') as pay_month, avg(amount) as avg_pay from salary s group by 1 ) , dep_salary as ( select date_format(pay_date, '%Y-%m') as pay_month, e.department_id, avg(amount) as avg_dep_pay from employee e inner join salary s on s.employee_id = e.employee_id group by 1,2 ) select d.pay_month, d.department_id, case when avg_dep_pay > a.avg_pay then 'higher' when avg_dep_pay < a.avg_pay then 'lower' else 'same' end as comparison from dep_salary d left join avg_salary a on a.pay_month = d.pay_month order by 1,2
with c as ( select date_format(pay_date, '%Y-%m') as pay_month, department_id, avg(amount) over(partition by date_format(pay_date, '%Y-%m')) as a, avg(amount) over(partition by date_format(pay_date, '%Y-%m'), department_id) as b from salary s inner join employee e on s.employee_id = e.employee_id ) select distinct pay_month, department_id, case when b > a then 'higher' when b < a then 'lower' else 'same' end as comparison from c order by pay_month desc, department_id
with cmp as ( select left(pay_date,7) as month, avg(amount) as cm_avg from salary group by 1 ) ,dept as ( select department_id, left(pay_date,7) as month, avg(amount) dpt_avg from salary s join employee e on s.employee_id=e.employee_id group by 1,2 ) select cmp.month as pay_month, department_id, case when cm_avg>dpt_avg then "lower" when cm_avg<dpt_avg then "higher" else "same" end as comparison from cmp left join dept on cmp.month=dept.month
with comp_avg as (select left(pay_date,7) as pay_month, sum(amount)/count(*) as average from salary group by left(pay_date,7)), dept_avg as ( select left(s.pay_date,7) as pay_month, d.department_id, sum(s.amount)/count(*) as average from salary s, employee d where s.employee_id = d.employee_id group by left(s.pay_date,7), d.department_id ) select comp_avg.pay_month, dept_avg.department_id, case when dept_avg.average>comp_avg.average then 'higher' when dept_avg.average = comp_avg.average then 'same' else 'lower' end as comparison from comp_avg, dept_avg where comp_avg.pay_month = dept_avg.pay_month
with company as ( select date_format(pay_date, '%Y-%m') as pay_month, sum(amount) / count(*) as company_average from salary group by pay_month ), department as ( select t2.department_id, date_format(t1.pay_date, '%Y-%m') as pay_month, sum(t1.amount) / count(*) as department_average from salary t1 join employee t2 on t2.employee_id = t1.employee_id group by t2.department_id, pay_month ) select t1.pay_month, t1.department_id, case when t1.department_average > t2.company_average then 'higher' when t1.department_average < t2.company_average then 'lower' else 'same' end as comparison from department t1 join company t2 on t2.pay_month = t1.pay_month order by t1.pay_month desc, t1.department_id asc
with company_avg_sal As ( select substr(pay_date,1,7) pay_month,avg(amount) comp_avg_sal from salary group by 1 ), dept_avg_salary AS ( select substr(pay_date,1,7) pay_month,department_id, avg(amount) dept_avg_sal from Salary s inner join employee e on s.employee_id = e.employee_id group by 1,department_id ) select cs.pay_month, department_id, case when dept_avg_sal > cs.comp_avg_sal then 'higher' when dept_avg_sal = comp_avg_sal then 'same' when dept_avg_sal < comp_avg_sal then 'lower' end as comparison from company_avg_sal cs inner join dept_avg_salary ds on cs.pay_month = ds.pay_month
with compavg as ( select substring(pay_date , 1,7) as pay_month, avg(amount) as avgcompsalary from salary group by 1) , avgdept as (select distinct substring(pay_date , 1,7) as pay_month,department_id, avg(amount) as deptavgsalary from salary join employee on employee.employee_id = salary.employee_id group by 1,2) select k2.pay_month, k2.department_id , case when deptavgsalary > avgcompsalary then 'higher' when deptavgsalary < avgcompsalary then 'lower' else 'same' end as comparison from compavg k1 join avgdept k2 on k2.pay_month = k1.pay_month
with ct as (select a.pay_date, b.department_id, avg(a.amount) over(partition by a.pay_date) as company_avg, avg(a.amount) over(partition by a.pay_date, b.department_id ) as dep_avg from salary a join employee b on a.employee_id = b.employee_id order by 1 desc, 2 ) select substring(pay_date,1,7) as pay_month, department_id, case when dep_avg > company_avg then 'higher' when dep_avg < company_avg then 'lower' else 'same' end as comparison from ct group by 1, 2
with cte as ( SELECT LEFT(pay_date ,7) as pay_month, department_id, AVG(amount)OVER(PARTITION BY pay_date) as 'Avg_all', AVG(amount)OVER(PARTITION by pay_date, department_id) as 'Avg_dep' FROM salary JOIN employee USING(employee_id)) SELECT pay_month, department_id, (CASE WHEN Avg_dep >Avg_all THEN 'higher' WHEN Avg_dep <Avg_all THEN 'lower' ELSE 'same' END) as comparison FROM cte GROUP BY 1,2
with cte as ( SELECT Left(pay_date,7) as pay_month,department_id, AVG(amount)OVER(PARTITION BY pay_date) as 'com_avg', AVG(amount)OVER(PARTITION BY department_id, pay_date) as 'dep_avg' FROM salary join employee USING(employee_id)) SELECT distinct pay_month, department_id, (CASE WHEN dep_avg>com_avg THEN 'higher' WHEN dep_avg<com_avg THEN 'lower' ELSE 'same' END) as comparison FROM cte ORDER BY pay_month DESC, department_id
with cte as ( SELECT date_format(pay_date,'%Y-%m') as pay_month, department_id, avg(amount) over (Partition by department_id,date_format(pay_date,'%Y-%m')) as depar_monthly_avg, avg(amount) over(PARTITION by date_format(pay_date,'%Y-%m')) as company_monthly_avg from salary join employee on salary.employee_id=employee.employee_id) SELECT distinct pay_month, department_id, case when depar_monthly_avg > company_monthly_avg then 'higher' when depar_monthly_avg < company_monthly_avg then 'lower' else 'same' end as comparison FROM cte order by 1 desc,2
with cte as ( select avg(amount) avg_salary_company, date_format(pay_date,"%Y-%m") as pay_month from salary s join employee e on s.employee_id=e.employee_id group by date_format(pay_date,"%Y-%m") ) ,cte2 as (select avg(amount) as avg_salary_department, department_id, date_format(pay_date,"%Y-%m") as pay_month from salary s join employee e on s.employee_id=e.employee_id group by department_id,date_format(pay_date,"%Y-%m") ) select cte.pay_month as pay_month, department_id, case when avg_salary_department > avg_salary_company then 'higher' when avg_salary_department < avg_salary_company then 'lower' else 'same' end as comparison from cte join cte2 on cte2.pay_month=cte.pay_month
with cte as ( select date_format(pay_date, '%Y-%m') as pay_month, amount, department_id from salary s left join employee e on s.employee_id = e.employee_id ), cte2 as ( select pay_month, avg(amount) as c_amt from cte group by pay_month), cte3 as ( select pay_month, department_id, avg(amount) as d_amt from cte group by pay_month, department_id) select cte3.pay_month, department_id, (case when d_amt > c_amt then 'higher' when d_amt = c_amt then 'same' else 'lower' end) as comparison from cte3 left join cte2 on cte3.pay_month = cte2.pay_month
with cte as ( select date_format(pay_date, '%Y-%m') month, avg(amount) avg_salary from salary s join employee e on s.employee_id=e.employee_id group by date_format(pay_date, '%Y-%m')) , cte2 as ( select department_id,date_format(pay_date, '%Y-%m') mon, avg(amount) amt from salary s join employee e on s.employee_id=e.employee_id group by department_id, date_format(pay_date, '%Y-%m') ) select c.month pay_month, d.department_id, (case when c.avg_salary<d.amt then 'higher' when c.avg_salary>d.amt then 'lower' else 'same' end) comparison from cte c join cte2 d on c.month=d.mon
with cte as ( select date_format(pay_date,'%Y-%m') as pay_month,avg(amount) comp_avg from salary group by date_format(pay_date,'%Y-%m') ) select date_format(salary.pay_date,'%Y-%m') as pay_month,employee.department_id, CASE WHEN round(AVG(salary.amount),2) > round(cte.comp_avg,2) THEN 'higher' WHEN round(AVG(salary.amount),2) < round(cte.comp_avg,2) THEN 'lower' ELSE 'same' END as comparison from salary inner join employee on employee.employee_id = salary.employee_id inner join cte on cte.pay_month = date_format(pay_date,'%Y-%m') group by date_format(pay_date,'%Y-%m'),employee.department_id
with cte as ( select date_format(s.pay_date,'%Y-%m') as pay_month, e.department_id, avg(s.amount) as avg_amount from salary s join employee e on s.employee_id = e.employee_id group by pay_month, e.department_id ), cte1 as ( select date_format(pay_date,'%Y-%m') as pay_month, avg(amount) as am from salary group by pay_month ) select cte1.pay_month, cte.department_id, case when cte.avg_amount> cte1.am then 'higher' when cte.avg_amount<cte1.am then 'lower' when cte.avg_amount=cte1.am then 'same' else null end as comparison from cte left join cte1 on cte.pay_month= cte1.pay_month
with cte as ( select date_format(s.pay_date,'%Y-%m') as pay_month, e.department_id, avg(s.amount) as avg_amount from salary s join employee e on s.employee_id = e.employee_id group by pay_month, e.department_id ), cte1 as ( select date_format(pay_date,'%Y-%m') as pay_month,avg(amount) as am from salary group by pay_month ) select cte1.pay_month, cte.department_id, case when cte.avg_amount> cte1.am then 'higher' when cte.avg_amount<cte1.am then 'lower' when cte.avg_amount=cte1.am then 'same' else null end as comparison from cte left join cte1 on cte.pay_month= cte1.pay_month
with cte as ( select department_id,avg(amount) as amt,pay_date from (select department_id,amount,substr(pay_date,1,7) as pay_date from salary join employee on salary.employee_id = employee.employee_id)t1 group by pay_date,department_id ) , cte1 as ( select cte.department_id,cte.pay_date,cte.amt,gamt from cte join (select avg(amount) as gamt,substr(pay_date,1,7) as pay_date from salary group by substr(pay_date,1,7))t1 on t1.pay_date = cte.pay_date ) select pay_date as pay_month,department_id, case when amt > gamt then "higher" when amt = gamt then "same" else "lower" end as comparison from cte1
with cte as ( select left(z.pay_date,7) as pay_month ,z.department_id as department_id ,avg(z.avg_comp) as avg_com, avg(z.avg_dept) as avg_dept from ( select a.pay_date,b.department_id,avg(a.amount)over(partition by month(a.pay_date)) as avg_comp, avg(a.amount) over (partition by month (a.pay_date),b.department_id) as avg_dept from salary a join employee b on a.employee_id=b.employee_id) z group by left(z.pay_date,7),z.department_id) select pay_month,department_id, case when avg_dept> avg_com then 'higher' when avg_dept< avg_com then 'lower' when avg_dept= avg_com then 'same' end as Comparison from cte
with cte as ( select substr(pay_date,1,7) as pay_month, avg(amount) as comp_avg from salary group by 1), cte1 as (select substr(pay_date,1,7) as pay_month, department_id, avg(amount) as dep_avg from salary x join employee y on x.employee_id = y.employee_id group by 1,2) select a.pay_month, b.department_id, case when b.dep_avg < a.comp_avg then 'lower' when b.dep_avg = a.comp_avg then 'same' else 'higher' end as comparison from cte a left join cte1 b on a.pay_month = b.pay_month
with cte as ( with cte as ( with cte as ( Select s.employee_id,s.amount,s.pay_date,e.department_id, avg(s.amount) over(partition by month(pay_date)) as 'monthly_average' from salary s inner join employee e on s.employee_id = e.employee_id ) Select *, avg(amount) over(partition by month(pay_date),department_id) as 'department_average' from cte ) Select left(pay_date,7) as 'pay_month',monthly_average,department_average,department_id from cte group by left(pay_date,7),department_id ) Select pay_month , department_id, case when department_average > monthly_average then 'higher' when department_average < monthly_average then 'lower' when department_average = monthly_average then 'same' end as 'comparison' from cte
with cte as (select *, avg(amount) over(partition by pay_month) comp1, avg(amount) over(partition by department_id, pay_month) comp2 from(select s.id, s.employee_id, s.amount, date_format(s.pay_date, '%Y-%m') pay_month, e. department_id from salary s left join employee e using(employee_id)) a order by pay_month) select distinct pay_month, department_id, (case when comp2>comp1 then 'higher' when comp2 = comp1 then 'same' else 'lower' end) as comparison from cte
with cte as (select Date_format(pay_date,'%Y-%m') as pay_month,E.department_id, avg(amount) as avg_dept_salary from employee E left join salary S on S.employee_id=E.employee_id group by pay_month,department_id) , cte1 as (select Date_format(pay_date,'%Y-%m') as pay_month, avg(amount) as avg_monthly_salary from salary group by pay_month) select C.pay_month, C.department_id, Case when avg_dept_salary>avg_monthly_salary then 'higher' when avg_dept_salary<avg_monthly_salary then 'lower' else 'same' end as comparison from cte C join cte1 C1 on C.pay_month=C1.pay_month
with cte as (select date_format(pay_date,'%Y-%m') as pay_month, department_id, avg(amount) as avg_dep from salary join employee using(employee_id) group by 1,2 ), cte_1 as (select date_format(pay_date,'%Y-%m') as pay_month, avg(amount) as avg_month from salary group by 1 ) select pay_month, department_id, case when avg_dep > avg_month then 'higher' when avg_dep = avg_month then 'same' else 'lower' end as comparison from cte join cte_1 using (pay_month)
with cte as (select department_id , substring(pay_date , 1,7) as pay, Avg(amount) as tot_ave from salary join employee on salary.employee_id = employee.employee_id group by 2 order by 1 ) , cte1 as (select department_id , substring(pay_date , 1,7) as pay, Avg(amount) as ave from salary join employee on salary.employee_id = employee.employee_id group by 1, 2 order by 1 ) select cte1.pay as pay_month , cte1.department_id , (if (tot_ave > ave , 'lower' , if(tot_ave < ave , 'higher' , 'same'))) comparison from cte join cte1 on cte.pay = cte1.pay
with cte as (select department_id, amount, date_format(pay_date, '%Y-%m') as pay_month from salary join employee using (employee_id)) select dep.pay_month, dep.department_id, case when department < company then 'lower' when department = company then 'same' when department > company then 'higher' end as comparison from( select pay_month, department_id,avg(amount) as department from cte group by pay_month, department_id) dep join (select pay_month, department_id, avg(amount) as company from cte group by pay_month) com on dep.pay_month = com.pay_month
with cte as (select department_id, date_format(pay_date, '%Y-%m') as pay_month, avg(amount) over(partition by pay_date, department_id) as dept_avg, avg(amount) over(partition by pay_date) as company_avg from salary s join employee e on s.employee_id = e.employee_id ) select distinct pay_month, department_id, (case when dept_avg>company_avg then 'higher' when dept_avg<company_avg then 'lower' else 'same' end) as comparison from cte order by pay_month desc, department_id
with cte as (select left(pay_date, 7) as pay_month, department_id, avg(amount) over (partition by left(pay_date, 7), department_id) as avg_dep, avg(amount) over (partition by left(pay_date, 7)) as avg_comp from salary s join employee e on s.employee_id = e.employee_id) select distinct(pay_month), department_id, (case when avg_dep>avg_comp then "higher" when avg_dep<avg_comp then "lower" else "same" end) as comparison from cte
with cte as (select left(pay_date,7) as month, avg(amount) as company_avg from salary group by month(pay_date)), cte2 as (select left(pay_date,7) as month, e.department_id, avg(amount) as department_avg from employee e join salary s using(employee_id) group by left(pay_date,7), e.department_id) select month as pay_month, department_id, (case when department_avg > company_avg then 'higher' when department_avg < company_avg then 'lower' else 'same' end) as comparison from cte join cte2 using(month)
with cte as( select left(pay_date,7) as month,round(avg(amount),2) as avg_Cmp from salary group by 1 ) select left(pay_date,7) as pay_month, department_id, case when round(avg(s.amount),2) > (select avg_Cmp from cte where month = left(s.pay_date,7)) then 'higher' when round(avg(s.amount),2) < (select avg_Cmp from cte where month = left(s.pay_date,7)) then 'lower' else 'same' end as comparison from salary s join employee e on s.employee_id = e.employee_id group by 1,2 order by 1 desc, 2 asc
with cte as( select s.employee_id, amount, pay_date, e.department_id, avg(amount) as department_avg from salary s left join employee e on s.employee_id = e.employee_id group by e.department_id, month(pay_date) ), cte2 as ( select pay_date,avg(amount) as cmp_avg from salary group by month(pay_date) ) select substring(cte.pay_date,1,7) as pay_month, department_id, (case when department_avg>cmp_avg then 'higher' when department_avg<cmp_avg then 'lower' else 'same' end) comparison from cte left join cte2 on cte.pay_date = cte2.pay_date
with cte1 as ( select left(s.pay_date,7) as pay_date, e.department_id, avg(amount) as avg_dept_amount from salary s left join employee e on e.employee_id = s.employee_id group by left(s.pay_date,7), e.department_id ) , cte2 as ( select left(s.pay_date,7) as pay_date, avg(amount) as avg_month_amount from salary s group by left(s.pay_date,7) ) select c1.pay_date as pay_month, c1.department_id, case when c1.avg_dept_amount - c2.avg_month_amount > 0 then "higher" when c1.avg_dept_amount - c2.avg_month_amount < 0 then "lower" else "same" end as comparison from cte1 c1 left join cte2 c2 on c1.pay_date = c2.pay_date
with cte1 as (select date_format(b.pay_date, '%Y-%m') as pay_month, a.department_id, ifnull(avg(amount), 0) as average from employee a left join salary b on a.employee_id = b.employee_id group by 1, 2), cte2 as (select date_format(pay_date, '%Y-%m') as pay_month, avg(amount) as average from salary group by 1) select cte1.pay_month, cte1.department_id, case when cte1.average > cte2.average then 'higher' when cte1.average = cte2.average then 'same' else 'lower' end as comparison from cte1 join cte2 on cte1.pay_month = cte2.pay_month
with cte1 as (select date_format(pay_date, '%Y-%m') as mnth, avg(amount) as mnth_avg from salary group by mnth), cte2 as (select date_format(s.pay_date, '%Y-%m') as pay_month, e.department_id, avg(s.amount) as amt from salary s join employee e on s.employee_id = e.employee_id group by pay_month, e.department_id) select c2.pay_month, c2.department_id, case when c2.amt > c1.mnth_avg then 'higher' when c2.amt < c1.mnth_avg then 'lower' else 'same' end as comparison from cte1 c1 join cte2 c2 on c1.mnth = c2.pay_month
with cte1 as (select date_format(pay_date, '%Y-%m') as pay_month, avg(amount) as month_avg from salary group by pay_month), cte2 as (select date_format(s.pay_date, '%Y-%m') as pay_month, e.department_id, avg(s.amount) as dept_avg from salary s join employee e on s.employee_id = e.employee_id group by pay_month, e.department_id) select c2.pay_month, c2.department_id, case when c2.dept_avg > c1.month_avg then 'higher' when c2.dept_avg < c1.month_avg then 'lower' else 'same' end as comparison from cte1 c1 join cte2 c2 on c1.pay_month = c2.pay_month
with cte1 as( select avg(amount) as firm_avg, date_format(pay_date, '%Y-%m' ) as pay_month from salary group by date_format(pay_date, '%Y-%m' ) ) ,cte2 as( select e.department_id,date_format(s.pay_date, '%Y-%m' ) as pay_month,avg(amount) as pay from salary s join employee e on s.employee_id = e.employee_id group by e.department_id, date_format(s.pay_date, '%Y-%m' ) ) select c2.pay_month, c2.department_id, case when c2.pay > c1.firm_avg then 'higher' when c2.pay < c1.firm_avg then 'lower' else 'same' end as 'comparison' from cte2 c2 join cte1 c1 on c1.pay_month = c2.pay_month
with cte1 as(select s.id, s.employee_id, s.amount, s.pay_date, e.department_id from salary s join employee e on s.employee_id=e.employee_id) select distinct pay_month, department_id, (case when avg_department>avg_company then 'higher'when avg_department=avg_company then'same' else 'lower'end)as comparison from (select left(pay_date,7)as pay_month,avg(amount)over(partition by left(pay_date,7))as avg_company,department_id, avg(amount)over(partition by left(pay_date,7),department_id)as avg_department from cte1 )cte2 order by pay_month desc
with cte_avgs as ( select distinct e.department_id, s.pay_date, avg(amount) over (partition by pay_date) as avg_company_salary, avg(amount) over (partition by pay_date, department_id) as avg_department_salary from salary s left join employee e on e.employee_id = s.employee_id ) select distinct date_format(pay_date,'%Y-%m') as pay_month, department_id, case when avg_department_salary > avg_company_salary then 'higher' when avg_department_salary < avg_company_salary then 'lower' else 'same' end as comparison from cte_avgs order by department_id, pay_month
with cte_office as ( select concat(year(pay_date),"-",if(length(month(pay_date))<2,concat("0",month(pay_date)),month(pay_date))) 'pay_month', round(avg(amount),2) 'office_salary' from salary group by concat(year(pay_date),"-",if(length(month(pay_date))<2,concat("0",month(pay_date)),month(pay_date))) ), cte_department as ( select concat(year(pay_date),"-",if(length(month(pay_date))<2,concat("0",month(pay_date)),month(pay_date))) 'pay_month', E.department_id, round(avg(amount),2) 'dept_salary' from salary S left join employee E on S.employee_id = E.employee_id group by E.department_id, concat(year(pay_date),"-",if(length(month(pay_date))<2,concat("0",month(pay_date)),month(pay_date))) ) select A.pay_month, A.department_id, case when A.dept_salary > B.office_salary then 'higher' when A.dept_salary < B.office_salary then 'lower' else 'same' end 'comparison' from cte_department A right join cte_office B on A.pay_month = B.pay_month where A.department_id is not null order by A.pay_month desc, A.department_id
with cte_window as ( select left(pay_date, 7) as pay_month, department_id, avg(amount) over ( partition by left(pay_date, 7) ) as co_avg_monthly_salary, avg(amount) over ( partition by left(pay_date, 7), department_id ) as dept_avg_monthly_salary from salary as s join employee as e on s.employee_id = e.employee_id ), cte_assemble as ( select pay_month, department_id, case when any_value(co_avg_monthly_salary) > any_value(dept_avg_monthly_salary) then 'lower' when any_value(co_avg_monthly_salary) < any_value(dept_avg_monthly_salary) then 'higher' else 'same' end as comparison from cte_window group by 1, 2 ) select * from cte_assemble
with d as ( select DATE_FORMAT(pay_date, '%Y-%m') pay_month, department_id, avg(amount) dept_avg from salary s left join employee e on s.employee_id = e.employee_id group by 1,2 ), c as ( select DATE_FORMAT(pay_date, '%Y-%m') pay_month, avg(amount) comp_avg from salary group by 1 ) select d.pay_month, department_id, case when dept_avg > comp_avg then 'higher' when dept_avg < comp_avg then 'lower' else 'same' end comparison from d join c on d.pay_month = c.pay_month
with d as ( select department_id, date_format(pay_date,'%Y-%m') as mon, avg(amount) as salary from salary s join employee d on s.employee_id = d.employee_id group by 1,2 ), c as ( select date_format(pay_date,'%Y-%m') as mon, avg(amount) as salary from salary group by 1 ) select d.mon as pay_month,d.department_id, (case when d.salary > c.salary then 'higher' when d.salary < c.salary then 'lower' else 'same' end) as comparison from d join c on d.mon = c.mon
with d as (select substr(pay_date,1,7) as pay_month,department_id,avg(amount) as avg_s from salary s join employee e on s.employee_id = e.employee_id group by department_id, substr(pay_date,1,7) ), t as ( select substr(pay_date,1,7) as pay_month, avg(amount) as avg_t from salary group by substr(pay_date,1,7) ) select d.pay_month, department_id, case when avg_t<avg_s then 'higher' when avg_t>avg_s then 'lower' else 'same' end as comparison from d join t on d.pay_month = t.pay_month order by pay_month desc,department_id asc
with date_avg as ( select date_format(pay_date,'%Y-%m') year_mon, avg(amount) avg_mon from salary group by year_mon ), com_avg as ( select date_format(pay_date,'%Y-%m') year_mon, department_id, avg(amount) avg_mon from salary, employee where salary.employee_id = employee.employee_id group by employee.department_id, year_mon ) select com_avg.year_mon pay_month, com_avg.department_id department_id, case when com_avg.avg_mon > date_avg.avg_mon then 'higher' when com_avg.avg_mon = date_avg.avg_mon then 'same' else 'lower' end comparison from com_avg, date_avg where com_avg.year_mon = date_avg.year_mon
with dep_salary as (SELECT date_format(s.pay_date,'%Y-%m') as pay_month, e.department_id, AVG(amount) as avg_dep FROM salary s JOIN employee e ON s.employee_id = e.employee_id GROUP BY pay_month, e.department_id) , company as ( SELECT date_format(pay_date,'%Y-%m') as pay_month, AVG(amount) as avg_com FROM salary GROUP BY pay_month ) SELECT d.pay_month, d.department_id, CASE WHEN avg_dep > avg_com THEN 'higher' WHEN avg_dep < avg_com THEN 'lower' ELSE 'same' END AS comparison FROM dep_salary d JOIN company c ON d.pay_month = c.pay_month
with department_avg as ( (select e1.department_id, date_format(pay_date, '%Y-%m') as pay_month, avg(s1.amount) as pay_avg from salary s1 join employee e1 on s1.employee_id = e1.employee_id group by year(pay_date), month(pay_date), e1.department_id)), company_avg as (select date_format(pay_date, '%Y-%m') as pay_month, avg(s2.amount) as pay_avg from salary s2 join employee e2 on s2.employee_id = e2.employee_id group by year(pay_date), month(pay_date)) select department_avg.department_id, department_avg.pay_month, (case when department_avg.pay_avg >company_avg.pay_avg then 'higher' when department_avg.pay_avg = company_avg.pay_avg then 'same' else 'lower' end ) as comparison from department_avg join company_avg on department_avg.pay_month = company_avg.pay_month
with department_salary as (select department_id , date_format(pay_date, '%Y-%m') as pay_month , avg(amount) as dept_avg from salary left join employee on salary.employee_id = employee.employee_id group by department_id, pay_month), company_salary as (select date_format(pay_date, '%Y-%m') as pay_month , avg(amount) as company_avg from salary group by pay_month) select a.pay_month as pay_month, department_id , case when dept_avg < company_avg then 'lower' when dept_avg > company_avg then 'higher' when dept_avg = company_avg then 'same' end as comparison from department_salary a join company_salary b on a.pay_month = b.pay_month
with depavg as( select pay_date,department_id, avg(amount) as dep from employee e join salary s on s.employee_id = e.employee_id group by pay_date,department_id), comavg as( select pay_date, avg(amount) as com from employee e join salary s on s.employee_id = e.employee_id group by pay_date ) select distinct left(c.pay_date,7) as pay_month, department_id, case when dep>com then 'higher' when dep = com then 'same' else 'lower' end as comparison from depavg d join comavg c on c.pay_date = d.pay_date
with dept as (Select substring(pay_date,1,7) as pay_month, b.department_id,avg(a.amount) as avg_salary_dep from salary a left join employee b on a.employee_id=b.employee_id group by 1,2), comp as (Select substring(pay_date,1,7) as pay_month, avg(amount) as avg_salary_comp from salary group by substring(pay_date,1,7)) Select a.pay_month, a.department_id, case when a.avg_salary_dep>b.avg_salary_comp then 'higher' when a.avg_salary_dep<b.avg_salary_comp then 'lower' else 'same' end as comparison from dept a left join comp b on a.pay_month=b.pay_month
with dept_salary as (select department_id,date_format(pay_date,'%Y-%m') as pay_month , avg(amount) as dep_avg from salary s JOIN employee e ON s.employee_id = e.employee_id GROUP BY 1, 2), cmp_salary as (select date_format(pay_date,'%Y-%m') as pay_month , avg(amount) as cmp_avg from salary group by 1) SELECT ds.pay_month, ds.department_id, CASE WHEN dep_avg>cmp_avg THEN 'higher' WHEN dep_avg=cmp_avg THEN 'same' ELSE 'lower' END AS comparison from dept_salary ds join cmp_salary cs on ds.pay_month=cs.pay_month
with deptavg as ( select e.department_id, avg(amount) totalmonthlydeptamount, (pay_date) month from salary s join employee e on s.employee_id=e.employee_id group by department_id,month(pay_date) ), totavg as( select avg(amount) totalmonthlyamount, max(e.employee_id) employee_id, max(pay_date) month from salary s join employee e on s.employee_id=e.employee_id group by month(pay_date) ) select DATE_FORMAT(d.month, "%Y-%m") as pay_month, d.department_id department_id, (case when d.totalmonthlydeptamount > t.totalmonthlyamount then 'higher' when d.totalmonthlydeptamount < t.totalmonthlyamount then 'lower' else 'same' end) comparison from deptavg d left join totavg t on d.month=t.month order by pay_month desc,department_id
with ds as( select e.department_id, s.amount, date_format(s.pay_date, '%Y-%m') pay_month from salary s left join employee e on s.employee_id = e.employee_id), ds_avg as (select pay_month,department_id, avg(amount) d_avg from ds group by 1,2), c_avg as (select pay_month,avg(amount) c_avg from ds group by 1) select d.pay_month, d.department_id, case when d_avg > c_avg then 'higher' when d_avg < c_avg then 'lower' else 'same' end comparison from ds_avg d left join c_avg c on d.pay_month = c.pay_month
with merge as (select s.*, department_id,left(pay_date,7) as month from salary s join employee e on s.employee_id = e.employee_id), t1 as (select month, avg(amount) as c_avg from merge group by month), t2 as (select department_id,month,avg(amount) as d_avg from merge group by month,department_id) select t2.month pay_month, department_id, case when d_avg>c_avg then 'higher' when d_avg=c_avg then 'same' else 'lower' end as comparison from t2 left join t1 on t2.month = t1.month
with month_avg as ( SELECT DATE_FORMAT(pay_date, "%Y-%m") as pay_month,avg(amount) as co_avg from salary group by DATE_FORMAT(pay_date, "%Y-%m") ), department_avg as ( select DATE_FORMAT(pay_date, "%Y-%m") as pay_month ,e.department_id, avg(s.amount) as dpt_avg from salary s left join employee e on s.employee_id = e.employee_id group by DATE_FORMAT(pay_date, "%Y-%m"),e.department_id ) select d.pay_month, department_id, case when co_avg>dpt_avg then 'lower' when co_avg < dpt_avg then 'higher' else 'same' end as comparison from month_avg m inner join department_avg d on m.pay_month = d.pay_month
with monthly_averages as ( select pay_date, avg(amount) as avg_salary from salary group by pay_date ) , department_monthly_average as ( select s.pay_date, e.department_id, avg(s.amount) as avg_salary from salary s inner join employee e on e.employee_id = s.employee_id group by s.pay_date, e.department_id ) select distinct substr(d.pay_date,1,7) as pay_month, d.department_id, case when d.avg_salary > m.avg_salary then 'higher' when d.avg_salary < m.avg_salary then 'lower' else 'same' end as comparison from department_monthly_average d inner join monthly_averages m on d.pay_date = m.pay_date
with monthly_avg as (select substr(a.pay_date, 1, 7) as mnth, b.department_id, avg(amount) as avg_salary from salary a left join employee b on a.employee_id = b.employee_id group by 1, 2), company_avg as (select substr(pay_date, 1, 7) as mnth, avg(amount) as avg_comp_salary from salary group by 1 ) select a.mnth as pay_month, a.department_id, case when a.avg_salary >b.avg_comp_salary then 'higher' when a.avg_salary = b.avg_comp_salary then 'same' else 'lower' end as comparison from monthly_avg as a left join company_avg as b on a.mnth = b.mnth
with monthly_data as ( select date_format(pay_date,'%Y-%m') as pay_month , e.department_id as department_id , avg(amount) over(partition by extract(year_month from pay_date)) as company_avg , avg(amount) over(partition by e.department_id, extract(year_month from pay_date)) as dept_avg from salary s join employee e on e.employee_id=s.employee_id ) select pay_month , department_id , case when dept_avg=company_avg then 'same' when dept_avg>company_avg then 'higher' when dept_avg<company_avg then 'lower' end as comparison from monthly_data group by 1,2
with overall as ( select date_format(pay_date, '%Y-%m') as pay_month , avg(amount) as overall_avg from Salary group by pay_month ) , dept as ( select e.department_id , date_format(s.pay_date, '%Y-%m') as pay_month , avg(s.amount) as dept_avg from Salary as s join employee as e on s.employee_id = e.employee_id group by e.department_id , pay_month ) select d.pay_month , d.department_id , case when d.dept_avg>o.overall_avg then 'higher' when d.dept_avg=o.overall_avg then "same" else "lower" end as comparison from dept as d join overall as o on d.pay_month = o.pay_month order by d.pay_month desc , d.department_id
with sal_dep as ( select DATE_FORMAT(S.pay_date, '%Y-%m') as pay_month, E.department_id, sum(S.amount) as department_salary, count(S.amount) as department_count from salary S join employee E on S.employee_id = E.employee_id group by pay_month, E.department_id ) select pay_month, department_id, Case when department_avg > company_avg then 'higher' when department_avg < company_avg then 'lower' else 'same' end as comparison from (select A.pay_month, B.department_id, A.company_avg, B.department_avg from ( select pay_month, sum(department_salary)/sum(department_count) as company_avg from sal_dep group by pay_month) A right join ( select pay_month, department_id, sum(department_salary)/sum(department_count) as department_avg from sal_dep group by pay_month, department_id ) B on A.pay_month = B.pay_month) Z
with sub as( select s.employee_id, department_id, amount, date_format(pay_date, "%Y-%m") as pay_month from salary s join employee e on s.employee_id = e.employee_id ), comp as( select s1.pay_month, department_id, comp_avg, dept_avg from( select pay_month, avg(amount) as comp_avg from sub group by pay_month ) s1 join (select pay_month, department_id, avg(amount) as dept_avg from sub group by pay_month, department_id ) s2 on s1.pay_month = s2.pay_month group by 1,2 ) select pay_month, department_id, case when dept_avg > comp_avg then "higher" when dept_avg < comp_avg then "lower" else "same" end comparison from comp
with t AS( SELECT s.employee_id, s.amount, LEFT(s.pay_date,7) pay_month, e.department_id FROM salary s JOIN employee e ON s.employee_id = e.employee_id ) SELECT pay_month, department_id, CASE WHEN avg > avg2 THEN 'higher' WHEN avg = avg2 THEN 'same' ELSE 'lower' END comparison FROM ( SELECT pay_month, department_id, amount, AVG(amount) OVER (PARTITION BY pay_month, department_id ) avg, AVG(amount) OVER (PARTITION BY pay_month) avg2 FROM t ) t2 GROUP BY pay_month, department_id
with t as ( select LEFT(pay_date,7) as pay_month ,e.department_id ,AVG(amount) over(partition by LEFT(pay_date,7)) as co_sal ,AVG(amount) over(partition by LEFT(pay_date,7),e.department_id) as dept_sal from employee e LEFT JOIN salary s on e.employee_id = s.employee_id ) select distinct pay_month ,department_id ,case when dept_sal < co_sal then 'lower' when dept_sal > co_sal then 'higher' when dept_sal = co_sal then 'same' end as comparison from t
with t as ( select avg(s.amount)as avg_month_salary, date_format(s.pay_date, '%Y-%m')as avg_year_month from salary s group by 2 ), t2 as ( select avg(s.amount) as avg_dept_month_salary, e.department_id, date_format(s.pay_date, '%Y-%m') as avg_year_month_dept from salary s join employee e on s.employee_id = e.employee_id group by 2,3) select t2.avg_year_month_dept as pay_month, t2.department_id, case when t2.avg_dept_month_salary > t.avg_month_salary then 'higher' when t2.avg_dept_month_salary < t.avg_month_salary then 'lower' else 'same' end as comparison from t join t2 on t.avg_year_month = t2.avg_year_month_dept
with t as (select Distinct date_format(pay_date,'%Y-%m') pay_month, department_id, avg(amount) over(partition by date_format(pay_date,'%Y-%m')) com, avg(amount) over(partition by date_format(pay_date,'%Y-%m'),department_id) dept from salary join employee using(employee_id)) select pay_month, department_id, case when dept> com then 'higher' when dept < com then 'lower' else 'same' end as comparison from t
with t1 as ( select date_format(pay_date, '%Y-%m') as pay_month, avg(amount) as cmpy_avg from salary group by pay_month), t2 as ( select date_format(pay_date, '%Y-%m') as pay_month, e.department_id, avg(amount) as dpt_avg from salary s join employee e on s.employee_id = e.employee_id group by e.department_id, pay_month) select t2.pay_month, department_id, if(cmpy_avg = dpt_avg, 'same', if(dpt_avg > cmpy_avg, 'higher', 'lower')) as comparison from t2 left join t1 on t1.pay_month = t2.pay_month order by t2.department_id asc, t2.pay_month desc
with t1 as ( select date_format(pay_date, '%Y-%m') pay_month, department_id, amount from salary a join employee b on a.employee_id = b.employee_id ) select distinct pay_month, department_id, case when (avg(amount) over (partition by pay_month, department_id)) > avg(amount) over (partition by pay_month) then 'higher' when (avg(amount) over (partition by pay_month, department_id)) < avg(amount) over (partition by pay_month) then 'lower' else 'same' end comparison from t1 order by pay_month desc, department_id
with t1 as ( select department_id,a.employee_id, amount, left(pay_date,7) as pay_month, avg(amount) as com_avg from salary a right join employee using(employee_id) group by 4), t2 as ( select department_id,a.employee_id, amount, left(pay_date,7) as pay_month, avg(amount) as dep_avg from salary a right join employee using(employee_id) group by 1,4) select t2.pay_month, t2.department_id, case when dep_avg>com_avg then 'higher' when dep_avg<com_avg then 'lower' else 'same' end as comparison from t2 left join t1 on t1.pay_month=t2.pay_month
with t1 as ( select pay_date as pay_month, avg(amount) as cmpy_avg from salary group by month(pay_date)), t2 as ( select pay_date as pay_month, e.department_id, avg(amount) as dpt_avg from salary s join employee e on s.employee_id = e.employee_id group by e.department_id, month(pay_date)) select date_format(t2.pay_month, "%Y-%m") as pay_month, department_id, case when dpt_avg > cmpy_avg then 'higher' when dpt_avg < cmpy_avg then 'lower' else 'same' end as comparison from t2 left join t1 on t1.pay_month = t2.pay_month order by t2.department_id asc, t2.pay_month desc
with t1 as ( select substring(pay_date, 1,7) as pay_month, avg(amount) as com_avg from salary group by 1 ), t2 as (select substring(pay_date, 1,7) as pay_month, e.department_id, avg(amount) as dep_avg from salary s left join employee e on s.employee_id = e.employee_id group by 1, 2) select t2.pay_month, t2.department_id, case when t2.dep_avg > t1.com_avg then 'higher' when t2.dep_avg < t1.com_avg then 'lower' else 'same' end as comparison from t1 right join t2 on t1.pay_month = t2.pay_month
with t2 as ( SELECT SUBSTR(CONVERT(pay_date, CHAR),1,7) pay_month, e.department_id, AVG(amount) dept_avg, SUM(amount) s_amt, COUNT(1) cnt FROM SALARY s INNER JOIN EMPLOYEE e ON s.employee_id = e.employee_id GROUP BY YEAR(pay_date)*100 + MONTH(pay_date), e.department_id ), t1 as ( SELECT pay_month, SUM(s_amt)/SUM(cnt ) COMPANY_AVG FROM T2 GROUP BY pay_month ) SELECT T2.pay_month, T2.department_id, CASE WHEN T2.dept_avg > T1.COMPANY_AVG THEN 'higher' WHEN T2.dept_avg < T1.COMPANY_AVG THEN 'lower' ELSE 'same' END as comparison FROM T2 INNER JOIN T1 ON T2.pay_month = T1.pay_month
with tbAll as ( select avg(amount) over (partition by year(pay_date), month(pay_date)) as avgAmtMonth, avg(amount) over (partition by year(pay_date), month(pay_date), department_id) as avgAmtDept, date_format(pay_date, "%Y-%m") as pay_month, department_id from salary as s join employee as e on s.employee_id = e.employee_id ) select pay_month, department_id, (case when min(avgAmtDept) > min(avgAmtMonth) then 'higher' when min(avgAmtDept) < min(avgAmtMonth) then 'lower' else 'same' end) as comparison from tbAll group by pay_month, department_id
with tbl as( select pay_date, department_id, AVG(amount) over(partition by department_id, left(pay_date,7)) as dpt_amt, AVG(amount) over(partition by left(pay_date,7)) as cp_amt from salary a left join employee b on a.employee_id=b.employee_id ) select distinct left(pay_date,7) as pay_month, department_id, case when dpt_amt > cp_amt then "higher" when dpt_amt < cp_amt then "lower" when dpt_amt = cp_amt then "same" end as comparison from tbl
with temp as ( select LEFT(pay_date, 7) as pay_month, avg(amount) as amount from salary group by LEFT(pay_date, 7) ), temp1 as ( select LEFT(pay_date, 7) as pay_month, department_id, avg(amount) as dept_avg from employee as e join salary as s on e.employee_id = s.employee_id group by LEFT(pay_date, 7), department_id ) select temp1.pay_month, department_id, case when temp1.dept_avg > temp.amount then 'higher' when temp1.dept_avg < temp.amount then 'lower' else 'same' end as comparison from temp join temp1 on temp.pay_month = temp1.pay_month
with temp as ( select date_format(pay_date, '%Y-%m') as pay_month, avg(amount) as com_avg from salary group by date_format(pay_date, '%Y-%m') ), temp1 as ( select date_format(pay_date, '%Y-%m') as pay_month, department_id, avg(amount) as dept_avg from salary as s join employee as e on s.employee_id = e.employee_id group by department_id, date_format(pay_date, '%Y-%m') ) select temp1.pay_month, department_id, case when dept_avg = com_avg then 'same' when dept_avg > com_avg then 'higher' else 'lower' end as comparison from temp1 join temp on temp1.pay_month = temp.pay_month
with temp as ( select left(pay_date,7) as pay_month, department_id, avg(amount) as department_avg from salary left join employee on employee.employee_id = salary.employee_id group by department_id,pay_month ) select temp.pay_month, temp.department_id, case when department_avg > company_avg then "higher" when department_avg < company_avg then "lower" else "same" end as comparison from temp left join ( select avg(amount) as company_avg, left(pay_date,7) as pay_month from salary group by pay_month ) as temp1 on temp.pay_month = temp1.pay_month
with temp as ( select s.*, e.department_id, avg(amount) over(partition by e.department_id, s.pay_date) as dept_avg, avg(amount) over(partition by s.pay_date) as company_avg from salary s join employee e on s.employee_id = e.employee_id ) select distinct substring(pay_date, 1,7) as pay_month, department_id, case when dept_avg > company_avg then 'higher' else case when dept_avg < company_avg then 'lower' else 'same' end end as comparison from temp
with temp as (select DATE_FORMAT(pay_date,'%Y-%m') pay_month , avg(amount) avg_by_month from salary s group by DATE_FORMAT(pay_date,'%Y-%m')) , t2 as (select DATE_FORMAT(pay_date,'%Y-%m') pay_month, department_id, avg(amount) as emp_avg from employee e, salary s where e.employee_id = s.employee_id group by pay_month, department_id) select distinct temp.pay_month, t2.department_id, case when t2.emp_avg > temp.avg_by_month then 'higher' when t2.emp_avg < temp.avg_by_month then 'lower' when t2.emp_avg = temp.avg_by_month then 'same' end as comparison from t2 cross join temp on temp.pay_month = t2.pay_month order by pay_month desc, department_id
with temp as (select left(pay_date, 7) as pay_month, department_id, avg(amount) as dept_amount from salary join employee on salary.employee_id = employee.employee_id group by pay_month, department_id) select temp.pay_month, department_id, case when dept_amount> total_amount then 'higher' when dept_amount< total_amount then 'lower' else 'same' end as comparison from temp join (select left(pay_date, 7) as pay_month, avg(amount) as total_amount from salary join employee on salary.employee_id = employee.employee_id group by pay_month) temp2 ON temp2.pay_month = temp.pay_month
with temp as( select employee_id, department_id, amount, SUBSTRING(pay_date, 1, 7) as pay_month from ( select a.*, b.department_id from salary a inner join employee b on a.employee_id = b.employee_id) a), temp2 as ( select a.avg_comp, b.* from ( select avg (amount) as avg_comp, pay_month from temp group by pay_month order by pay_month) a inner join (select avg(amount) as avg_sal, pay_month, department_id from temp group by department_id, pay_month order by department_id, pay_month) b on a.pay_month = b.pay_month ) select pay_month, department_id, case when avg_sal > avg_comp then 'higher' when avg_sal < avg_comp then 'lower' else 'same' end as comparison from temp2
with tmp as ( select substr(pay_date, 1, 7) as pay_month, avg(amount) as pay_all from employee e left join salary s on e.employee_id = s.employee_id group by substr(pay_date, 1, 7) ), tmp1 as ( select substr(pay_date, 1, 7) as pay_month, department_id, avg(amount) as pay_company from employee e left join salary s on e.employee_id = s.employee_id group by substr(pay_date, 1, 7), department_id ) select tmp1.pay_month, department_id, case when pay_company > pay_all then "higher" when pay_company = pay_all then "same" else "lower" end as comparison from tmp1 left join tmp on tmp1.pay_month = tmp.pay_month
with tmp as ( select t1.employee_id, t1.amount, date_format(t1.pay_date, '%Y-%m') as pay_month, t2.department_id from salary t1 left join employee t2 on t1.employee_id = t2.employee_id ), tmp2 as ( select pay_month, department_id, avg(amount) over (partition by pay_month, department_id ) as depart_avg, avg(amount) over (partition by pay_month) as company_avg from tmp) select pay_month, department_id, case when depart_avg > company_avg then 'higher' when depart_avg < company_avg then 'lower' when depart_avg = company_avg then 'same' end as comparison from tmp2 group by 1,2,3 order by pay_month desc, department_id asc
with tmp as (select a.*, b.department_id, avg(amount) over(partition by left(pay_date,7),department_id) as avg_dept, avg(amount) over(partition by left(pay_date,7) ) as avg_company from salary a inner join employee b using (employee_id) ) select distinct left(pay_date,7) as pay_month, department_id, case when avg_dept<avg_company then 'lower' when avg_dept=avg_company then 'same' else 'higher' end as comparison from tmp
with tmp as (select left(pay_date,7) as pay_month, avg(amount) as company_avg from salary group by 1 ) select t.pay_month, t.department_id, case when dept_avg>company_avg then 'higher' when dept_avg=company_avg then 'same' else 'lower' end as comparison from( select left(pay_date,7) as pay_month, department_id, avg(amount) as dept_avg from salary a inner join employee b using (employee_id) group by 1,2) t inner join tmp b on t.pay_month=b.pay_month
with tmp1 as (select a.employee_id, a.amount, a.pay_date, b.department_id, avg(a.amount) over(partition by b.department_id, a.pay_date) as dep_avg, avg(a.amount) over(partition by a.pay_date) as comp_avg from salary a join employee b on a.employee_id = b.employee_id) select distinct date_format(pay_date, '%Y-%m') as pay_month, department_id, case when dep_avg>comp_avg then 'higher' when dep_avg=comp_avg then 'same' else 'lower' end as comparison from tmp1
with total as( select s.employee_id, s.amount, substr(pay_date,1,7) as pay_month,e.department_id from salary s left join employee e on s.employee_id=e.employee_id ), department_avg as( select pay_month,department_id,avg(amount) as depart_avg_amount from total group by pay_month,department_id ), company_avg as ( select pay_month,avg(amount) as comp_avg_amount from total group by pay_month ) select D.pay_month,D.department_id, (case when D.depart_avg_amount>C.comp_avg_amount then 'higher' when D.depart_avg_amount=C.comp_avg_amount then 'same' when D.depart_avg_amount<C.comp_avg_amount then 'lower' end) as comparison from department_avg D left join company_avg C on D.pay_month=C.pay_month
with x as( select department_id,amount,DATE_FORMAT(pay_date, '%Y-%m') as pay_month from salary join employee ON employee.employee_id = salary.employee_id ), y as ( select distinct pay_month,department_id, avg(amount)over(partition by pay_month) company, avg(amount)over(partition by pay_month,department_id) depart from x) select distinct pay_month,department_id, CASE WHEN depart>company THEN 'higher' WHEN depart=company THEN 'same' WHEN depart<company THEN 'lower' END comparison from y ORDER BY pay_month desc,department_id
with zte as (select id, salary.employee_id, amount, left(pay_date,7) as month , department_id from salary left join employee on salary.employee_id = employee.employee_id) select pay_month, department_id, (case when department > company then "higher" when department = company then "same" else "lower" end) as comparison from ((select month as pay_month, department_id, avg(amount) as department from zte group by 1,2) temp1 left join (select month, avg(amount) as company from zte group by 1)temp2 on temp1.pay_month = temp2.month)
