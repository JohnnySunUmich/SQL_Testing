SELECT A.ID,A.MONTH ,sum(salary) over (PARTITION by id order by A.MONTH ASC rows between 2 PRECEDING and CURRENT ROW) as Salary FROM EMPLOYEE A WHERE (A.ID,A.MONTH) NOT IN (SELECT EMPLOYEE.ID,MAX(MONTH) FROM EMPLOYEE GROUP BY ID) ORDER BY A.ID,A.MONTH DESC
SELECT A.Id, MAX(B.Month) AS MONTH, SUM(B.Salary) AS Salary FROM Employee A, Employee B WHERE A.Id = B.Id AND B.MONTH BETWEEN (A.MONTH-3) AND (A.MONTH-1) GROUP BY A.Id, A.MONTH ORDER BY Id, MONTH DESC
SELECT A.Id, MAX(B.Month) AS Month, SUM(B.Salary) AS Salary FROM Employee A, Employee B WHERE A.Id = B.Id AND B.Month BETWEEN (A.Month - 3) AND (A.Month - 1) GROUP BY A.Id, A.Month ORDER BY Id, Month DESC
SELECT A.Id, MAX(B.Month) as Month, SUM(B.Salary) as Salary FROM Employee A, Employee B WHERE A.Id = B.Id AND B.Month BETWEEN (A.Month-3) AND (A.Month-1) GROUP BY A.Id, A.Month ORDER BY Id, Month DESC
SELECT B.Id, B.Month, B.Salary FROM (SELECT A.Id, A.Month, A.three_months_sal Salary, ROW_NUMBER() OVER (PARTITION BY A.Id ORDER BY A.Month DESC) FROM (SELECT Id, Month, SUM(Salary) OVER (PARTITION BY Id ORDER BY Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) three_months_sal FROM Employee WHERE (Id, Month) NOT IN (SELECT Id, MAX(Month) FROM Employee GROUP BY Id)) A) B
SELECT E1.Id AS id, E1.Month AS month, SUM(E2.Salary) AS salary FROM Employee E1 CROSS JOIN Employee E2 WHERE E1.Id = E2.Id AND E1.Month - E2.Month BETWEEN 0 AND 2 AND E1.Month < (SELECT MAX(Month) FROM Employee WHERE Id = E1.Id) GROUP BY E1.Id, E1.Month ORDER BY E1.Id ASC, E1.Month DESC
SELECT E1.Id, E1.Month, SUM(E2.Salary) AS Salary FROM Employee E1 JOIN Employee E2 ON E1.id = E2.id AND E1.Month >= E2.Month AND E1.Month < E2.Month+3 WHERE (E1.Id, E1.Month) NOT IN (SELECT Id, MAX(Month) as Month FROM Employee GROUP BY Id) GROUP BY E1.Id, E1.Month ORDER BY E1.Id, E1.Month DESC
SELECT E1.id ,E1.month ,ifnull(E1.Salary,0) + ifnull(E2.Salary,0) + ifnull(E3.Salary,0) as Salary FROM (select Id ,max(Month) as month from Employee group by Id having count(1) > 1 ) max_month left join Employee E1 on E1.id = max_month.id and max_month.month > E1.month LEFT JOIN Employee E2 ON (E2.id = E1.id AND E2.month = E1.month - 1) LEFT JOIN Employee E3 on (E3.id = E1.id) and E3.month = E1.month - 2 ORDER BY E1.id ASC , E1. month DESC
SELECT E1.id, E1.month, (IFNULL(E1.salary, 0) + IFNULL(E2.salary, 0) + IFNULL(E3.salary, 0)) AS Salary FROM (SELECT id, MAX(MONTH) AS MONTH FROM Employee GROUP BY id HAVING COUNT(*) > 1) AS maxmonth LEFT JOIN Employee E1 ON (maxmonth.id = E1.id AND maxmonth.MONTH > E1.MONTH) LEFT JOIN Employee E2 ON (E2.id = E1.id AND E2.MONTH = E1.MONTH - 1) LEFT JOIN Employee E3 ON (E3.id = E1.id AND E3.MONTH = E1.MONTH - 2) ORDER BY id ASC, MONTH DESC
SELECT E1.id, E1.month, (IFNULL(E1.salary, 0) + IFNULL(E2.salary, 0) + IFNULL(E3.salary, 0)) AS Salary FROM (SELECT id, MAX(month) AS month FROM Employee GROUP BY id HAVING COUNT(*) > 1) AS maxmonth LEFT JOIN Employee AS E1 ON (maxmonth.id = E1.id AND maxmonth.month > E1.month) LEFT JOIN Employee AS E2 ON (E2.id = E1.id AND E2.month = E1.month - 1) LEFT JOIN Employee AS E3 ON (E3.id = E1.id AND E3.month = E1.month - 2) ORDER BY id ASC, month DESC
SELECT E1.id, E1.month, (IFNULL(E1.salary, 0) + IFNULL(E2.salary, 0) + IFNULL(E3.salary, 0)) AS Salary FROM (SELECT id, MAX(month) AS month FROM Employee GROUP BY id HAVING COUNT(*) > 1) AS maxmonth LEFT JOIN Employee E1 ON (maxmonth.id = E1.id AND maxmonth.month > E1.month) LEFT JOIN Employee E2 ON (E2.id = E1.id AND E2.month = E1.month - 1) LEFT JOIN Employee E3 ON (E3.id = E1.id AND E3.month = E1.month - 2) ORDER BY id ASC , month DESC
SELECT E1.id, E1.month, (IFNULL(E1.salary, 0) + IFNULL(E2.salary, 0) + IFNULL(E3.salary, 0)) AS Salary FROM (SELECT id, MAX(month) AS month FROM Employee GROUP BY id having count(*)>1) AS maxmonth LEFT JOIN Employee E1 ON (maxmonth.id = E1.id AND maxmonth.month > E1.month) LEFT JOIN Employee E2 ON (E2.id = E1.id AND E2.month = E1.month - 1) LEFT JOIN Employee E3 ON (E3.id = E1.id AND E3.month = E1.month - 2) ORDER BY id ASC , month DESC
SELECT ID ,MONTH ,SALARY FROM ( SELECT ID ,MONTH ,SUM(SALARY) OVER (PARTITION BY ID ORDER BY MONTH rows between 2 preceding and current row) Salary ,ROW_NUMBER() OVER (PARTITION BY ID ORDER BY MONTH DESC) rnum FROM EMPLOYEE ) t1 WHERE rnum >1 ORDER BY ID, MONTH DESC
SELECT ID ,MONTH ,SUM(SALARY) OVER(PARTITION BY ID ORDER BY MONTH ASC ROWS BETWEEN 2 PRECEDING AND 0 FOLLOWING) As Salary FROM( SELECT ID ,MONTH ,SALARY ,DENSE_RANK() OVER(PARTITION BY ID ORDER BY MONTH DESC) AS RN_MONTH FROM Employee ) T WHERE RN_MONTH>1 ORDER BY 1 ASC, 2 DESC
SELECT Id, Month, SUM(Salary) OVER (PARTITION BY Id ORDER BY Month RANGE BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary FROM (SELECT Id, Month, Salary, MAX(Month) OVER (PARTITION BY Id) AS max_month FROM Employee) sub WHERE Month <> max_month ORDER BY Id, Month DESC
SELECT Id, Month, SUM(Salary) OVER (PARTITION BY Id order by month asc ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary FROM Employee WHERE (Id, Month) NOT IN (SELECT Id, MAX(Month) FROM Employee GROUP BY Id) GROUP BY Id, Month ORDER BY Id ASC, Month DESC
SELECT Id, Month, SUM(salary) OVER (PARTITION BY id ORDER BY month ASC ROWS 2 PRECEDING) AS Salary FROM ( SELECT id, month, salary, ROW_NUMBER() OVER (PARTITION BY id ORDER BY month DESC) AS rn FROM employee) AS tmp WHERE rn != 1 ORDER BY Id ASC, Month DESC
SELECT Id, Month, Salary FROM ( SELECT Id, Month, SUM(Salary) OVER(PARTITION BY Id ORDER BY Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary FROM Employee ) t WHERE Month != (SELECT MAX(Month) FROM Employee WHERE Id = t.Id) ORDER BY Id, Month DESC
SELECT Id, Month, Salary FROM (SELECT Id, Month, SUM(Salary) OVER(PARTITION BY Id ORDER BY Month ROWS 2 PRECEDING) AS Salary, RANK() OVER(PARTITION BY Id ORDER by Month DESC) mth_rk FROM Employee) t WHERE t.mth_rk <> 1
SELECT Id, Month, Salary FROM (SELECT Id, Month, SUM(Salary) OVER(PARTITION BY Id ORDER BY Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary, ROW_NUMBER() OVER(PARTITION BY Id ORDER BY Month DESC) AS rank_desc FROM Employee ) tmp WHERE rank_desc > 1 ORDER BY Id, Month DESC
SELECT Id, Month, Salary FROM (SELECT id, month, SUM(salary) OVER (PARTITION BY id ORDER BY month ROWS 2 PRECEDING ) as Salary , DENSE_RANK() OVER (PARTITION BY id ORDER BY month DESC) month_no FROM Employee ) src where month_no > 1 ORDER BY id, month desc
SELECT Id, Month, Salary_sum Salary FROM ( SELECT Id, Month, Salary, SUM(Salary) OVER(PARTITION BY Id ORDER BY Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) Salary_sum, MAX(Month) OVER(PARTITION BY Id) max_month FROM Employee ) t WHERE Month != max_month ORDER BY Id, Month DESC
SELECT Id, Month, sum(Salary) OVER (PARTITION BY Id ORDER BY Month ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary FROM (SELECT Id, Salary, Month, RANK() OVER (PARTITION BY Id ORDER BY Month DESC) as rnk FROM Employee) t WHERE rnk > 1 ORDER BY Id ASC, Month DESC
SELECT Id, Month, total_salary AS salary FROM (SELECT *, SUM(Salary) OVER (PARTITION BY Id ORDER BY Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS total_salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS RN FROM Employee) AS t1 WHERE RN > 1 ORDER BY Id, Month DESC
SELECT a.Id, a.Month, SUM(b.Salary) AS Salary FROM Employee a JOIN Employee b ON a.Id = b.Id AND b.Month BETWEEN (a.Month - 2) AND a.Month WHERE (a.Id, a.Month) NOT IN (SELECT Id, MAX(Month) FROM Employee GROUP BY Id) GROUP BY a.Id, a.Month ORDER BY Id, Month DESC
SELECT a.id, MAX(b.month) AS month, SUM(b.salary) AS Salary FROM Employee a, Employee b WHERE a.id = b.id AND b.month BETWEEN (a.month - 3) AND (a.month - 1) GROUP BY a.id, a.month ORDER BY a.id, a.month DESC
SELECT e.id, e.month, SUM(e1.salary) as salary FROM employee e INNER JOIN employee e1 ON e1.id = e.id AND (e.month - e1.month) BETWEEN 0 AND 2 WHERE e.month != (SELECT max(ex.month) from employee ex WHERE ex.id = e.id) GROUP BY 1,2 ORDER BY 1, 2 desc
SELECT e.id, e.month, SUM(e2.Salary) as Salary FROM Employee e JOIN Employee e2 ON (e.Id = e2.Id AND e.Month >= e2.Month AND (e.Month - e2.Month <= 2)) WHERE e.Month < (SELECT MAX(Month) from Employee where Id = e.Id) GROUP BY e.Id, e.Month ORDER BY e.Id, e.Month DESC
SELECT e1.Id, e1.Month, sum(e2.Salary) AS Salary FROM Employee e1, Employee e2 WHERE e1.Id = e2.Id AND e1.Month - e2.Month IN (0,1,2) AND (e1.Id, e1.Month) NOT IN (SELECT Id, MAX(Month) FROM Employee GROUP BY Id) GROUP BY e1.Id, e1.Month ORDER BY e1.Id, e1.Month DESC
SELECT e1.Id, e1.month, COALESCE(e1.Salary, 0) + COALESCE(e2.Salary, 0) + COALESCE(e3.Salary, 0) AS Salary FROM ( SELECT Id, MAX(Month) AS month FROM Employee GROUP BY Id HAVING COUNT(*) > 1 ) AS mm LEFT JOIN Employee e1 ON (e1.Id = mm.Id AND e1.Month < mm.Month) LEFT JOIN Employee e2 ON (e2.Id = e1.Id AND e2.Month = e1.Month - 1) LEFT JOIN Employee e3 ON (e3.Id = e2.Id AND e3.Month = e1.Month - 2) ORDER BY e1.Id ASC, e1.Month DESC
SELECT e1.id, e1.month, (IFNULL(e1.salary, 0) + IFNULL(e2.salary, 0) + IFNULL(e3.salary, 0)) AS Salary FROM ( SELECT id, MAX(month) AS month FROM employee GROUP BY id HAVING COUNT(*) > 1 ) AS mostrecent LEFT JOIN employee e1 ON (mostrecent.id=e1.id AND mostrecent.month > e1.month) LEFT JOIN employee e2 ON (e2.id=e1.id AND e2.month=e1.month-1) LEFT JOIN employee e3 ON (e3.id=e1.id AND e3.month=e1.month-2) ORDER BY e1.id ASC, e1.month DESC
SELECT e1.id, e1.month, sum(e2.Salary) as Salary from Employee as e1 JOIN Employee as e2 ON (e1.Id = e2.Id AND e1.Month >= e2.Month AND e1.Month - e2.Month <= 2) WHERE e1.Month < (Select max(Month) from Employee where Id = e1.Id) and e2.Month GROUP BY e1.Id, e1.Month Order by e1.Id,e1.Month DESC
SELECT id, month, Salary FROM ( SELECT Id, Month, SUM(salary) over (partition by id order by month rows 2 preceding ) AS Salary, dense_rank() over (partition by id order by month desc) AS dr FROM Employee GROUP BY 1, 2 ) AS a where dr > 1 order by 1, 2 desc
SELECT id, month, Salary FROM ( SELECT id, month, SUM(salary) OVER(PARTITION BY id ORDER BY month ROWS 2 PRECEDING) as Salary, DENSE_RANK() OVER(PARTITION BY id ORDER by month DESC) month_no FROM Employee ) src where month_no > 1 ORDER BY id , month desc
SELECT id, month, salary FROM( SELECT e1.id, e1.month, IFNULL(e1.salary,0) + IFNULL(e2.salary,0) + IFNULL(e3.salary,0) as salary, RANK() OVER(PARTITION BY e1.id ORDER BY e1.month DESC) as rank0 FROM employee e1 LEFT JOIN employee e2 ON (e1.id = e2.id AND e2.month = e1.month -1) LEFT JOIN employee e3 ON (e2.id = e3.id AND e3.month = e2.month -1) ORDER BY e1.id, e1.month DESC ) sub WHERE rank0 >1 ORDER BY id, month DESC
SELECT n.Id, n.Month, IFNULL(third_salary,0) +IFNULL(second_salary,0) + IFNULL(first_salary,0) AS Salary FROM (SELECT t.* FROM (SELECT e1.Id, e1.Month, e1.Salary as third_salary, LAG(e1.Salary) OVER(PARTITION BY e1.Id ORDER BY e1.Month) AS second_salary, LAG(e1.Salary, 2) OVER(PARTITION BY e1.Id ORDER BY e1.Month) AS first_salary FROM Employee e1) t WHERE (t.Id, t.Month) NOT IN (SELECT e0.Id, MAX(e0.Month) AS m FROM Employee e0 GROUP by e0.Id) ) n ORDER BY n.Id, n.Month DESC
SELECT tmp.id, tmp.month, tmp.sal+tmp.lag1+tmp.lag2 Salary FROM( SELECT A.ID id,A.MONTH month ,A.SALARY sal, LAG(A.SALARY,1,0) over (PARTITION BY A.ID order by A.MONTH ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) lag1 ,LAG(A.SALARY,2,0) over (PARTITION BY A.ID order by A.MONTH ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) lag2 FROM Employee A WHERE (A.ID,A.MONTH) NOT IN (SELECT ID,MAX(MONTH) cnt FROM Employee GROUP BY ID ) ORDER BY A.ID,A.MONTH DESC) tmp
Select * from ( select distinct Id, lag(Month,1) over(partition by Id order by Month rows between 3 preceding and 1 preceding) as Month, sum(Salary) over(partition by Id order by Month rows between 3 preceding and 1 preceding) as Salary from Employee ) as e where e.salary is not Null order by id asc, month desc
Select Id, Month, SUM(Salary) OVER(PARTITION BY Id order by Month ROWS BETWEEN 2 Preceding and CURRENT ROW) as Salary from Employee where (Id, Month) not in (select Id, MAX(Month) from employee group by 1) order by Id asc, month desc
Select Id, Month, sum(Salary) over(partition by Id Order by Month rows between 2 preceding and current row) as Salary From Employee Where (Id, Month) not in (Select Id, max(Month) From Employee Group by Id) Order by id asc, Month desc
Select e.Id, e.Month, sum(e.Salary) over (partition by e.Id order by e.Month rows between 2 preceding and current row) as Salary FROM Employee e Where Month < ( Select Max(Month) from Employee where Id = e.Id ) order by ID, Month DESC
Select id, month, (select sum(salary) from employee e2 where e1.Id = e2.Id and e2.Month <= e1.Month and e2.Month >(e1.Month-3)) Salary from employee e1 where e1.Month < (select Max(month) from employee where id = e1.id group by id) order by Id asc, Month desc
WITH CTE AS ( SELECT ID ,MONTH ,SALARY CUR_SAL ,ROW_NUMBER() OVER (PARTITION BY ID ORDER BY MONTH DESC) MONTH_ORD ,LAG(SALARY) OVER(PARTITION BY ID ORDER BY MONTH) PREV1 ,LAG(SALARY,2) OVER (PARTITION BY ID ORDER BY MONTH) PREV2 FROM EMPLOYEE ) SELECT Id ,Month ,(CUR_SAL + COALESCE(PREV1,0)+COALESCE(PREV2,0)) Salary FROM CTE WHERE MONTH_ORD > 1 ORDER BY 1,2 DESC
WITH CTE AS ( SELECT ID ,MONTH ,SALARY CUR_SAL ,ROW_NUMBER() OVER (PARTITION BY ID ORDER BY MONTH DESC) MONTH_ORD ,SUM(SALARY) OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) CUM_SAL FROM EMPLOYEE ) SELECT Id ,Month ,CUM_SAL AS Salary FROM CTE WHERE MONTH_ORD > 1 ORDER BY 1,2 DESC
WITH CTE As ( SELECT Id, Month, Salary, DENSE_RANK() OVER(PARTITION BY Id ORDER BY Month DESC) dr FROM Employee ), CTE1 AS ( SELECT Id, Month, SUM(Salary) OVER(PARTITION BY Id ORDER BY Month DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) Salary FROM CTE WHERE dr<>1 ) SELECT * FROM CTE1
WITH CTE1 AS ( SELECT *, RANK() OVER (PARTITION BY id ORDER BY Month DESC) AS rks FROM Employee), CTE2 AS ( SELECT id, month, salary, LAG(salary, 1) OVER (PARTITION BY id ORDER BY month) AS lag1s, LAG(salary, 2) OVER (PARTITION BY id ORDER BY month) AS lag2s FROM CTE1 WHERE rks != 1) SELECT id, month, salary+IFNULL(lag1s, 0)+IFNULL(lag2s, 0) AS salary FROM CTE2 ORDER BY id, month DESC
WITH Cleaned AS( SELECT Id, MAX(Month) AS LastMonth FROM Employee GROUP BY Id ) SELECT E.Id AS Id, E.Month AS Month, SUM(E.Salary) OVER(PARTITION BY E.Id ORDER BY E.Month RANGE BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary FROM Employee AS E LEFT JOIN Cleaned AS C ON E.Id = C.Id AND E.Month = C.LastMonth WHERE C.Id IS NULL ORDER BY E.Id, E.Month DESC
WITH EmployeeLastMonth AS (SELECT Id ,MAX(Month) AS LastMonth FROM Employee GROUP BY Id), CumulativeSalary AS (SELECT Id ,Month ,SUM(Salary) OVER(PARTITION BY Id ORDER BY Month ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary FROM Employee WHERE CONCAT(Id,"-",Month) NOT IN (SELECT CONCAT(Id,"-",LastMonth) FROM EmployeeLastMonth)) SELECT * FROM CumulativeSalary ORDER BY Id ASC, Month DESC
WITH EmployeeRanked AS ( SELECT Id, Month, Salary, RANK() OVER(PARTITION BY Id ORDER BY Month DESC) AS MonthRank From Employee ) SELECT id, month, SUM(Salary) OVER(PARTITION BY Id ORDER BY MonthRank DESC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary FROM EmployeeRanked WHERE MonthRank > 1 ORDER BY 1, 2 DESC
WITH Ranking as ( select id, month, dense_rank() over (partition by id order by Month desc) as ranks, sum(Salary) over (partition by id order by Month ROWS BETWEEN 2 PRECEDING AND current row) as runSalary from Employee ) Select Id, Month, runSalary as Salary from Ranking where ranks <> 1 order by Id, Month desc
WITH T1 AS ( select concat(id,'-', month) as idm FROM ( SELECT id, MAX(month) as month FROM employee group by 1 order by 1 asc ) X ), T2 AS ( SELECT Id, month, salary, concat(id,'-', month) as idm FROM employee ) SELECT ID, month, sum(salary) over (partition by id order by month asc ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as salary FROM T2 WHERE idm NOT IN (SELECT idm FROM T1) order by id asc, month desc
WITH base AS ( SELECT id , month , SUM(salary) OVER (PARTITION BY id ORDER BY month ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS salary , ROW_NUMBER() OVER (PARTITION BY id ORDER BY month DESC) AS most_recent_rank FROM employee ) SELECT id , month , salary FROM base WHERE most_recent_rank != 1 ORDER BY id ASC, month DESC
WITH cte AS ( SELECT *, RANK() OVER (PARTITION BY Id ORDER BY Month DESC) as rnk FROM Employee ) SELECT Id, Month, SUM(Salary) OVER (PARTITION BY Id ORDER BY Month RANGE BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary FROM cte WHERE rnk > 1 ORDER BY Id, Month DESC
WITH cte AS ( SELECT Id, Month, SUM(Salary) OVER(PARTITION BY Id ORDER BY Month) AS Salary FROM Employee WHERE (Id, Month) NOT IN (SELECT Id, Max(Month) FROM Employee GROUP BY Id) ORDER BY Id, Month DESC ), cte2 AS ( SELECT Id, Month, Salary, LAG(Salary, 3) OVER(PARTITION BY Id ORDER BY Month) AS prev_prev_salary FROM cte ORDER BY Id, Month DESC ) select Id, Month, (Salary-IFNULL(prev_prev_Salary,0)) AS Salary FROM cte2
WITH cte as (SELECT id, month, salary, DENSE_RANK() OVER(partition by id ORDER BY month desc) as rnk FROM employee ) SELECT id, month, SUM(salary) OVER(Partition by id order by month rows between 2 preceding and current row) as salary FROM cte WHERE rnk <> 1 ORDER BY id, month desc
WITH cte as( SELECT Id, Month, Salary, RANK() OVER(PARTITION BY Id ORDER BY Month DESC) as rnk FROM Employee ) SELECT Id, Month, SUM(Salary) OVER (PARTITION BY Id ORDER BY Month ASC ROWS BETWEEN 2 PRECEDING AND 0 FOLLOWING) as Salary FROM cte WHERE rnk != 1 ORDER BY 1, 2 DESC
WITH id_cumu AS ( SELECT a.id, a.month, a.salary, max(a.month) OVER(PARTITION BY a.id) mx_mon FROM Employee a GROUP BY 1,2,3 ) SELECT a.id, a.month, SUM(b.salary) Salary FROM id_cumu a LEFT JOIN id_cumu b ON (a.month-b.month) BETWEEN 0 AND 2 AND a.id=b.id WHERE a.mx_mon!=a.month GROUP BY 1,2 ORDER BY 1 ASC, 2 DESC
WITH last_month AS ( SELECT id, MAX(month) AS month FROM employee GROUP BY id ) SELECT a.id, a.month, sum(b.salary) AS "salary" FROM employee a INNER JOIN employee b ON a.id = b.id AND a.month >= b.month AND a.month < b.month +3 INNER JOIN last_month l ON l.id = a.id AND a.month < l.month GROUP BY a.id, a.month, a.salary ORDER BY a.id, a.month DESC
WITH minmonth AS ( select t.Id, t.minmonth, 0 as 'endmonth' from ( select Id, max(Month) over (partition by Id) as 'minmonth' from Employee order by Id ASC, Month ASC ) t group by t.Id, t.minmonth ) select u.Id, u.Month, u.Salary + ifnull(lag(u.Salary2,1) over (partition by u.Id order by u.Month ASC),0) as 'Salary' from ( select e.Id, e.Month, e.Salary, (e.salary + ifnull(lag(e.Salary,1) over (partition by e.Id order by e.Month ASC),0)) as 'Salary2' from Employee e left join minmonth on e.Id = minmonth.Id where e.Month < minmonth.minmonth and e.Month >= minmonth.endmonth order by e.Id ASC, e.Month ASC ) u order by u.Id ASC, u.Month DESC
WITH rolling_sum AS ( SELECT id, month, SUM(salary) OVER(PARTITION BY id ORDER BY month ROWS 2 PRECEDING) AS salary FROM employee ) SELECT id, month, rolling_sum.salary FROM rolling_sum WHERE (id, month) NOT IN ( SELECT id, MAX(month) AS month FROM employee GROUP BY id) ORDER BY id ASC, month DESC
WITH t AS ( SELECT *, RANK() OVER (PARTITION BY Id ORDER BY Month DESC) AS Month_Rank FROM Employee ) SELECT Id, Month, SUM(Salary) OVER (PARTITION BY Id ORDER BY Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary FROM t WHERE Month_Rank != 1 ORDER BY Id, Month DESC
WITH table1 AS ( Select distinct e.Id, e.Month, e.Salary FROM Employee e LEFT JOIN (Select Id, MAX(Month) as mnth from Employee f group by Id) gh ON e.Id = gh.Id and e.Month = gh.mnth where gh.Id IS NULL and gh.mnth IS NULL) Select a.Id, a.Month, SUM(a.Salary) OVER(partition by Id order by a.Month rows between 2 preceding and current row) as Salary from table1 a order by ID asc, Month desc
WITH table1 AS (SELECT Id, Month, Salary, SUM(Salary) OVER (PARTITION BY Id ORDER BY Month ROWS BETWEEN 2 PRECEDING and 0 FOLLOWING) AS sum_salary FROM Employee ORDER BY Month DESC) SELECT Id, Month, sum_salary AS Salary FROM table1 WHERE (Id, Month) NOT IN (SELECT Id, MAX(Month) AS max_month FROM Employee GROUP BY id) ORDER BY Id, Month DESC
WITH tmp1 AS (SELECT Id, MAX(month) m FROM Employee GROUP BY Id), tmp2 AS( SELECT Employee.Id, Month, Salary FROM Employee JOIN tmp1 ON tmp1.Id = Employee.Id WHERE Month < m ) SELECT t1.Id, t1.Month, (IFNULL(t1.Salary, 0) + IFNULL(t2.Salary, 0) + IFNULL(t3.Salary, 0)) AS 'Salary' FROM tmp2 t1 LEFT JOIN tmp2 t2 ON t1.Id = t2.Id AND (t1.Month - t2.Month = 1) LEFT JOIN tmp2 t3 ON t2.Id = t3.Id AND (t2.Month - t3.Month = 1) ORDER BY t1.Id, t1.Month DESC
With Employee_sort as ( select * ,row_number() over(partition by ID order by Month desc) as rk from Employee), Employee_exclude_recent as ( select * from Employee_sort where rk <> 1 ) select a.`Id` ,a.`Month` ,sum(b.Salary) as Salary from Employee_exclude_recent a, Employee_exclude_recent b where a.Id = b.Id and b.Month between a.Month-2 and a.Month group by 1,2 order by a.`Id`, a.`Month` desc
With T1 as (Select Id, Month, SUM(Salary) OVER (PARTITION BY Id ORDER BY Month rows between 2 preceding and current row) as Salary, RANK() OVER (PARTITION BY Id ORDER BY Month Desc) AS `rank` From Employee) Select Id, Month, Salary From T1 Where `rank` != 1
With max_month as ( Select ID, max(month) as max_month From Employee Group by ID), exclude_max as ( Select a.* From Employee a Left Join max_month b on a.ID = b.ID and a.Month = b.max_month Where b.ID is NULL), three_month as ( Select ID, Month, Salary, ifnull(lag(Salary, 1) over(Partition by ID Order by Month), 0) as prev_salary, ifnull(lag(Salary, 2) over(Partition by ID Order by Month), 0) as prev2_salary From exclude_max) Select ID, Month, Salary + prev_salary + prev2_salary as Salary From three_month Order by Id, Month desc
With no_recent as (Select * From Employee Where (Id, Month) not in (Select Id, max(Month) as Month From Employee Group by Id) Order by Id, Month DESC) Select Id, Month, sum(Salary) over(partition by Id order by Month DESC rows between current row and 2 following) as Salary From no_recent
With non_max_month As (Select Id, Month, Salary From Employee Where (Id, Month) Not in (Select Id, max(month) From Employee Group By Id)) Select a.Id, a.Month, (a.Salary+ifnull(b.Salary,0)+ifnull(c.Salary,0)) as Salary From non_max_month as a Left Join non_max_month as b On a.Month = b.Month+1 And a.Id = b.Id Left Join non_max_month as c On a.Month = c.Month+2 And a.Id =c.Id Order By Id ASC, Month DESC
select E1.Id, E1.Month, (ifnull(E1.Salary, 0)+ifnull(E2.Salary,0)+ifnull(E3.Salary,0)) as Salary from ( select Id, max(Month) as Month from Employee group by Id having count(*) >1) as maxmonth left join Employee E1 on maxmonth.Id = E1.Id and maxmonth.Month >E1.Month left join Employee E2 on E1.Id=E2.Id and E2.Month=E1.Month-1 left join Employee E3 on E3.Id=E1.Id and E3.Month= E1.Month-2 order by Id ASC, Month desc
select E1.id, E1.Month, (IFNULL(E1.salary, 0) + IFNULL(E2.salary, 0) + IFNULL(E3.salary, 0)) AS Salary from( SELECT id, MAX(month) AS month FROM Employee GROUP BY id HAVING COUNT(*) > 1) AS maxmonth LEFT JOIN Employee E1 ON (maxmonth.id = E1.id AND maxmonth.month > E1.month) LEFT JOIN Employee E2 ON (E2.id = E1.id AND E2.month = E1.month - 1) LEFT JOIN Employee E3 ON (E3.id = E1.id AND E3.month = E1.month - 2) ORDER BY id ASC , month DESC
select E1.id, E1.month, (ifnull(E1.salary,0) +ifnull(E2.salary,0) + ifnull(E3.salary,0)) as Salary from (Select id,max(month) as month from Employee group by id having count(*) > 1) as maxmonth left Join Employee E1 on (maxmonth.id = E1.id and maxmonth.month > E1.month) left Join Employee E2 on (E1.id = E2.id and E1.month = E2.month + 1) left Join Employee E3 on (E1.id = E3.id and E1.month = E3.month + 2) Order by id ASC, month DESC
select Id ,Month ,ifnull(lag(Salary,1) over (partition by Id order by Month),0) +ifnull(lag(Salary,2) over (partition by Id order by Month),0) + Salary as Salary from Employee where (id,Month) not in ( select id ,max(month) max_mon from Employee group by id ) order by Id,Month desc
select Id ,Month ,sum(Salary) over(partition by Id order by Month ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary from Employee where (Id, Month) not in ( select Id, Month from ( select Id ,Month ,rank() over(partition by Id order by Month desc) as rnk from Employee ) t where rnk = 1 ) order by Id asc, Month desc
select Id, Month, SUM(Salary) over (partition by Id order by Month rows between 2 preceding and current row) as Salary from (select Id, Month, Salary, dense_rank() over (partition by Id order by Month desc) as rank1 from Employee ) c where rank1 <> 1 group by Id, Month order by Id, Month desc
select Id, Month, Salary + lag(salary,1,0) over(partition by Id order by Month) + lag(salary,2,0) over(partition by Id order by Month) as Salary from Employee E where month < (select max(E1.month) from Employee E1 where E.Id=E1.Id) order by Id, Month Desc
select Id, Month, Salary from ( select Id, Month, RANK() over (partition by Id order by Month desc) as descending_rank, sum(salary) over (partition by Id order by Month RANGE BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary from employee )_ where descending_rank <> 1 order by Id asc, Month desc
select Id, Month, sum(Salary) over (partition by Id order by Month asc rows between 2 preceding and current row) Salary from Employee E where Month <> ( select max(Month) from Employee EE where E.Id = EE.Id group by EE.Id ) order by Id asc, Month desc
select Id, Month, sum(Salary) over (partition by Id order by Month rows between 2 preceding and 0 following ) as Salary from (select Id, Month, Salary, rank() over (partition by Id order by Month Desc) as rk from Employee) b where rk <> 1 order by Id, Month desc
select Id, Month, sum(Salary) over(partition by Id order by Month rows between 2 preceding and 0 following) Salary from Employee where (Id, Month) not in (select Id, max(Month) from Employee group by 1 order by 1 desc) order by 1, 2 desc
select Id, Month, sum(Salary) over(partition by Id order by Month rows between 2 preceding and 0 following) Salary from Employee where (Id, Month) not in (select Id, max(Month) from Employee group by 1 order by 1 desc) order by Id, Month desc
select Id, Month, sum(Salary) over(partition by Id order by Month rows between 2 preceding and 0 following) as Salary from (select *, max(Month) over(partition by Id) as recent_mon from Employee) recent where Month != recent_mon order by Id asc, Month desc
select Id, Month, sum(Salary) over(partition by Id order by Month rows between 2 preceding and current row) as Salary from (select Id, Month, Salary from Employee where (Id,Month) not in (select Id, max(Month) from Employee group by 1)) t order by 1 asc, 2 desc
select Id, Month,sum(Salary)over(partition by Id order by Month rows between 2 preceding and current row) as Salary from Employee where (Id,Month) not in (select Id,max(Month) as Month from Employee group by Id) order by Id, Month desc
select Id,Month, sum(Salary) over(partition by ID order by month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary from employee where (Id, month) not in ( select Id,max(month) from employee group by 1 ) order by Id,month desc
select Id,Month,sum(Salary) over (partition by Id order by month rows 2 preceding) as 'Salary' from (select Id,Month,Salary,rank() over (partition by Id order by Month desc) as rank_mon from Employee) as a where rank_mon!=1 group by 1,2 order by 1,2 desc
select a.Id , a.Month , (a.Salary + b.Salary_l1 + c.Salary_l2) as Salary from Employee a left join (select Id , Month , lag(Salary, 1, 0) over (partition by Id order by Month) as Salary_l1 from Employee) b on a.Id = b.Id and a.Month = b.Month left join (select Id , Month , lag(Salary, 2, 0) over (partition by Id order by Month) as Salary_l2 from Employee) c on a.Id = c.Id and a.Month = c.Month left join (select Id , Month , rank() over (partition by Id order by Month desc) as ranking from Employee) d on a.Id = d.Id and a.Month = d.Month where d.ranking > 1 order by a.Id, a.Month desc
select a.Id , a.Month , (a.Salary + b.Salary_l1 + c.Salary_l2) as Salary from Employee a left join (select Id , Month , lag(Salary, 1, 0) over (partition by Id order by Month) as Salary_l1 from Employee) b on a.Id = b.Id and a.Month = b.Month left join (select Id , Month , lag(Salary, 2, 0) over (partition by Id order by Month) as Salary_l2 from Employee) c on a.Id = c.Id and a.Month = c.Month left join (select Id , Month , rank() over (partition by Id order by Month desc) as ranking from Employee) e on a.Id = e.Id and a.Month = e.Month where e.ranking > 1 order by a.Id, a.Month desc
select a.Id, a.Month, sum(b.Salary) as Salary from Employee as a left join Employee as b on a.Id=b.Id and a.Month >=b.Month and a.Month-2<=b.Month where (a.id,a.Month) not in (select id, max(month) from employee group by 1) group by 1,2 order by 1, 2 desc
select a.id, a.month as month, sum(b.salary) as Salary from employee a inner join employee b on a.id = b.id and (a.month - b.month) between 0 and 2 where (a.id, a.month) not in (select id, max(month) from employee group by id) group by 1,2 order by 1, 2 desc
select a.id, a.month, a.salary from ( select id, month, sum(salary) over (partition by id order by month rows between 2 preceding and 0 following) as Salary, rank() over (partition by id order by month desc) as `rank` from Employee ) a where a.rank != 1 order by a.id asc, a.month desc
select a.id, a.month, a.salary from ( select id, month, sum(salary) over (partition by id order by month rows between 2 preceding and 0 following) as Salary, rank() over (partition by id order by month desc) as rnk from Employee ) a where a.rnk <> 1 order by a.id, a.month desc
select a.id, a.month, sum(a.salary)over(partition by a.id order by a.month rows between 2 preceding and current row) as salary from Employee a where month <>(select max(month)from employee b where b.id = a.id) group by Id, month order by id asc, month desc
select a.id, a.month, sum(b.salary) as salary from employee a join employee b on a.id=b.id and a.month-b.month between 0 and 2 where (a.id,a.month) not in (select id, max(month) as recent_month from employee group by id) group by 1,2 order by 1,2 desc
select a.id, a.month, sum(b.salary) as salary from employee a, employee b where a.id = b.id and a.month>=b.month and a.month-2<=b.month and a.month <> (select max(month) from employee c where a.id = c.id) group by a.id, a.month order by a.id, a.month desc
select e.Id, e.Month, sum(e.Salary) over (partition by e.Id order by e.Month rows between 2 preceding and current row) as Salary from Employee e where e.Month != (select max(e1.Month) from Employee e1 where e.Id = e1.Id) order by 1,2 desc
select e.Id, e.Month, sum(e.Salary) over (partition by e.Id order by e.Month rows between 2 preceding and current row) as salary from Employee e where Month < ( select Max(Month) from Employee where Id = e.Id) order by 1,2 desc
select e.id, e.month , (select sum(s.salary) from employee s where s.id = e.id and s.month in (e.month,e.month-1, e.month-2)) Salary from employee e where month != (select max(month) from employee m where m.id = e.id) order by id, month desc
select e.id, e.month, (select sum(salary) from employee e2 where e2.id = e.id and e2.month <= e.month and e.month-e2.month <= 2) as salary from employee e where (e.id, e.month) not in (select id, max(month) month from Employee group by id) order by 1,2 desc
select e.id, e.month, sum(e.salary)over(partition by e.id order by e.month rows between 2 preceding and current row) salary from employee e where e.month<>(select max(e1.month) from employee e1 where e1.id=e.id ) order by 1 asc, 2 desc
select e1.Id, e1.Month, ifnull(e1.Salary, 0) + ifnull(e2.Salary, 0) + ifnull(e3.Salary, 0) as 'Salary' from Employee e1 left join Employee e2 on e1.Id = e2.Id and e1.Month = e2.Month + 1 left join Employee e3 on e2.Id = e3.Id and e2.Month = e3.Month + 1 where (e1.Id, e1.Month) not in (select Id, max(Month) from Employee group by Id) order by e1.id asc, e1.month desc
select e1.Id, e1.Month, sum(e2.Salary) as Salary from Employee e1 join Employee e2 on e1.Id = e2.Id and e1.Month - e2.Month between 0 and 2 where (e1.Id, e1.Month) not in (select Id, max(Month) from Employee group by 1) group by 1,2 order by 1, 2 desc
select e1.Id, e1.month, sum(e2.Salary) as Salary from Employee e1 join Employee e2 on e1.Id=e2.Id and (e2.month=e1.month or e2.month+1=e1.month or e2.month+2=e1.month) where (e1.Id,e1.month) not in (select Id, max(month) from Employee group by Id) group by e1.Id, e1.Month order by e1.Id, e1.Month desc
select e1.Id, max(e2.Month) as Month, sum(ifnull(e2.Salary,0)) as Salary from Employee e1 join Employee e2 on e1.Id = e2.Id and e1.Month - e2.Month between 1 and 3 group by 1,e1.Month order by 1,2 desc
select e1.id as Id, e1.month as Month, sum(IFNULL(e1.Salary, 0) + IFNULL(e2.Salary, 0) + IFNULL(e3.Salary, 0) ) as Salary from ( select id, MAX(month) AS month FROM Employee GROUP BY id HAVING COUNT(*) > 1 ) AS maxmonth left join Employee e1 on maxmonth.month > e1.month and maxmonth.id = e1.id left join Employee e2 on e1.Id = e2.Id and e1.Month - e2.Month = 1 left join Employee e3 on e1.Id = e3.Id and e1.Month - e3.Month = 2 group by e1.id, e1.Month order by 1, 2 desc
select e1.id, e1.month, (ifnull(e1.salary,0)+ifnull(e2.salary,0) + ifnull(e3.salary, 0)) as salary from (select id, max(month) as month from employee group by id having count(*) >1 ) as maxmonth left join employee e1 on (maxmonth.id = e1.id and maxmonth.month > e1.month) left join employee e2 on e2.id = e1.id and e2.month = e1.month -1 left join employee e3 on e3.id = e1.id and e3.month = e1.month -2 order by e1.id asc,e1.month desc
select e1.id, e1.month, (select sum(e2.salary) from employee e2 where e2.id=e1.id and e2.month >=e1.month-2 and e2.month<=e1.month group by e2.id) as Salary from employee e1 where e1.month not in (select max(e3.month) from employee e3 where e3.id=e1.id) group by e1.id, e1.month order by e1.id asc, e1.month desc
select e1.id, e1.month, sum(e2.salary) 'Salary' from employee e1 join employee e2 on e1.id=e2.id and e1.month>=e2.month and (e1.month-e2.month) between 0 and 2 and e1.month < (select max(month) from employee e3 where e1.id=e3.id) group by 1,2 order by 1, 2 desc
select e1.id, e1.month, sum(e2.salary) 'salary' from employee e1 join employee e2 on e1.id=e2.id and e1.month>=e2.month and (e1.Month - e2.Month) between 0 and 2 where e1.month < (select max(month) from employee e3 where e1.id=e3.id) group by 1,2 order by 1 asc, 2 desc
select e1.id, e1.month, sum(e2.salary) as salary from employee e1 join employee e2 on e1.id = e2.id and (e2.month = e1.month or e2.month + 1 = e1.month or e2.month + 2 = e1.month) where (e1.id, e1.month) not in (select id, max(month) as recent_month from employee group by 1) group by 1, 2 order by 1, 2 desc
select e1.id, e1.month, sum(e2.salary) as salary from employee e1 join employee e2 on e1.id = e2.id and e1.month >= e2.month where (e1.id, e1.month) not in (select id, max(month) from employee group by id) and e1.month - e2.month < 3 group by e1.id, e1.month order by 1, 2 desc
select e1.id, max(e2.month) as month , sum(e2.salary) as salary from employee e1 join employee e2 on e1.id = e2.id and e1.month - 1 >= e2.month and e1.month -3 <= e2.month group by e1.id, e1.month order by 1, 2 desc
select e2.Id, max(e2.Month) as Month, sum(e2.Salary) as Salary from Employee e1, Employee e2 where e1.Id = e2.Id and e2.month between e1.Month - 3 and e1.Month -1 group by e1.Id, e1.Month order by e1.Id, e1.Month desc
select id, Month ,sum(Salary) over (partition by id order by Month range between 2 preceding and current row) as Salary from ( select * ,row_number() over (partition by Id order by Month desc) as month_order from Employee ) as a where month_order>1 order by id, Month desc
select id, month, cum as salary from ( select id, month, sum(salary) over(partition by id order by month rows 2 preceding) cum, row_number() over(partition by id order by month DESC) rk from employee ) r1 where rk!=1 order by 1, 2 DESC
select id, month, salary + coalesce(lag(salary,1)over(partition by id order by month),0) + coalesce(lag(salary,2)over(partition by id order by month),0) as Salary from (select * from ( select id, month, salary, row_number()over(partition by id order by month desc) as rn from employee ) x_inner where rn > 1 )x order by id, month desc
select id, month, salary from ( select id, month , sum(salary) over(partition by id order by month rows 2 preceding) as salary, dense_rank() over(partition by id order by month desc) as month_rank from employee ) a where month_rank>1 order by id, month desc
select id, month, salary from ( select id, month, sum(salary) over (partition by id order by month rows 2 preceding) as salary, dense_rank() over(partition by id order by month desc) as month_no from employee ) a where month_no >1 order by id, month desc
select id, month, salary from ( select id, month, sum(salary) over (partition by id order by month rows between 2 preceding and current row) as salary, rank () over (partition by id order by month desc) as rnk from Employee ) a where rnk!=1
select id, month, salary from ( select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) salary, rank() over(partition by id order by month desc) rnk from employee ) T WHERE RNK <> 1 ORDER BY ID, MONTH DESC
select id, month, salary from (SELECT DISTINCT id, LAG(month, 1) OVER(PARTITION BY id ORDER BY Month ) AS month, SUM(Salary) OVER(PARTITION BY id ORDER BY Month ROWS BETWEEN 3 PRECEDING AND 1 preceding) AS Salary FROM Employee) a where salary is not null order by 1, 2 desc
select id, month, salary from (SELECT id, LAG(month, 1) OVER(PARTITION BY id ORDER BY Month ) AS month, SUM(Salary) OVER(PARTITION BY id ORDER BY Month ROWS BETWEEN 3 PRECEDING AND 1 preceding) AS Salary FROM Employee) a where salary is not null order by 1, 2 desc
select id, month, sum(salary) over (partition by Id order by Month rows between 2 preceding and 0 following) as Salary from Employee e where Month not in (select Max(Month) from Employee e1 where e.id = e1.id) order by Id asc, Month Desc
select id, month, sum(salary) over (partition by id order by month asc rows 2 preceding) as salary from employee where (id, month) not in ( select id, max(month) from employee group by id ) order by id asc, month desc
select id, month, sum(salary) over (partition by id order by month rows 2 preceding) as Salary from ( select *, row_number() over(partition by id order by month desc ) as rank_ from employee order by 1, 2 desc) as a where rank_!=1 order by 1, 2 desc
select id, month, sum(salary) over (partition by id order by month rows between 2 PRECEDING and current row) as salary from ( select id, month, salary , row_number () over (partition by id order by month desc) as rn from employee) as a where rn > 1 order by 1,2 desc
select id, month, sum(salary) over (partition by id order by month rows between 2 preceding and current row) salary from ( select *, rank() over (partition by id order by month desc) rnk from employee ) t where rnk != 1 order by id, 2 desc
select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and CURRENT ROW) as Salary from Employee e1 where month<>(select max(month) from Employee e2 where e1.id=e2.id ) order by id,month desc
select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) Salary from employee where (id,month) not in ( select id, max(month) from employee group by id) order by id,month desc
select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) as salary from ( select id, month, salary, rank() over(partition by id order by month desc) as rank_num from employee ) cte where rank_num !=1 order by 1, 2 desc
select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) as salary from ( select id, month, salary, row_number() over (partition by id order by month desc) as ranking from employee) a where ranking <> 1 order by id, month desc
select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) as salary from (select id, month, salary, dense_rank()over(partition by id order by month desc) as rnk from Employee) p where p.rnk!=1 order by 1, 2 desc
select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) as salary from (select id, month, sum(salary) as salary from employee group by id, month) e where (id, month) not in (select id, max(month) from employee group by id) order by id, month desc
select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) as salary from employee where (id,month) not in (select id,max(month) as month from employee group by 1) order by 1,2 desc
select id, month, sum(salary)OVER(PARTITION BY id order by month ROWS between 2 preceding and current row ) as salary FROM employee as e where e.month<(select max(month) from employee as e1 where e1.id=e.id) ORDER BY id, month desc
select id, month, tot salary from ( select id, month, salary, rank() over(partition by id order by month desc) rk, sum(salary) over(partition by id order by month asc rows between 2 preceding and current row) tot from Employee ) T where rk != 1 order by id, month desc
select id, month,sum(salary) over (partition by id order by month asc rows between 2 preceding and current row ) as Salary from ( select Id ,Month , Salary , row_number() over (partition by id order by month desc) as req from Employee )a where a.req>1 order by a.id asc, a.month desc
select id, month,sum(salary) over (partition by id order by month rows between 2 preceding and current row) salary from ( select * from ( select *,max(month) over(partition by id) mm from employee) e where month <> mm ) ee order by id, month desc
select id,month,salary from ( select id, LAG(month) OVER (partition by id order by month asc rows between 3 preceding and 1 preceding) as month, sum(salary) over (partition by id order by month asc rows between 3 preceding and 1 preceding) as salary from employee )a where month is not null and salary is not null order by id, month desc
select id,month,salary from (select id, month, sum(salary) over(partition by id order by month rows 2 preceding) as salary, row_number() over(partition by id order by month desc) as rn from employee)temp where rn!=1 order by id,month desc
select l.Id, l.Month, sum(r.Salary) as Salary from Employee l, Employee r where r.Id=l.Id and (l.Month-r.Month) between 0 and 2 and l.Month not in (select max(Month) from Employee where Id=l.Id) and r.Month not in (select max(Month) from Employee where Id=r.Id) group by l.Id, l.Month order by l.Id asc, l.Month desc
select t.id, t.month, sum(t1.salary) as salary from (select e.id, e.month, e.salary from employee e JOIN (select id, max(month) as mx_mn from employee group by id)t ON t.id = e.id and e.month != t.mx_mn)t JOIN (select e.id, e.month, e.salary from employee e JOIN (select id, max(month) as mx_mn from employee group by id)t ON t.id = e.id and e.month != t.mx_mn)t1 ON t.id = t1.id and t.month >= t1.month and t.month-t1.month between 0 and 2 group by t.id, t.month having count(t1.month)<=3 order by t.id, t.month desc
select t.id, t.month, sum(t1.salary) as salary from (select e.id, e.month, e.salary from employee e JOIN (select id, max(month) as mx_mn from employee group by id)t ON t.id = e.id and e.month != t.mx_mn)t JOIN (select e.id, e.month, e.salary from employee e JOIN (select id, max(month) as mx_mn from employee group by id)t ON t.id = e.id and e.month != t.mx_mn)t1 ON t.id = t1.id and t.month >= t1.month and t.month-t1.month between 0 and 2 group by t.id, t.month order by t.id, t.month desc
select t1.id, t1.month, sum(t2.salary) as salary from employee t1 join employee t2 on t2.id = t1.id and (t2.month = t1.month or t2.month = t1.month - 1 or t2.month = t1.month - 2) where (t1.id, t1.month) not in (select id, max(month) from employee group by id) group by t1.id, t1.month order by t1.id, t1.month desc
select tb1.id, tb1.month, tb1.Salary from (select e1.id, e1.month, sum(e2.Salary) as Salary from Employee e1 join Employee e2 on (e1.id = e2.id and e1.month >= e2.month and (e1.month-e2.month)<=2) group by e1.id, e1.month) tb1 join ( select id, max(month) as month from Employee group by id) tb2 on tb1.id = tb2.id and tb1.month!=tb2.month order by tb1.id , tb1.month desc
select u.id, u.month, u.salary+coalesce(lag(u.salary,1) over(partition by id order by month),0)+coalesce(lag(u.salary,2) over(partition by id order by month),0) as salary from ( select * from( select *, row_number() over (partition by id order by month desc) as rn from employee)t where t.rn!=1 )u order by id, month desc
with 3m_employee as ( select Id, Month, Sum(Salary) over (partition by Id order by month desc range between 0 preceding and 2 following)salary_3m, row_number() over (partition by Id order by month desc) RowNumber from Employee ) select Id, Month,salary_3m as Salary from 3m_employee where RowNumber>1 order by Id asc,Month desc
with Cumulative_salary as ( Select Id, Month, salary, Rank() over (partition by id order by Month desc) as Month_Rank, sum(salary) over(partition by id order by Month rows 2 preceding) as Cumulative_Salary From Employee Group by 1,2,3 ) Select id, month, Cumulative_Salary as Salary from Cumulative_salary where Month_Rank !=1 Order by ID , Month desc
with a as ( select Id, Month, Salary, DENSE_rank() over(partition by id order by month desc) as c from Employee ) select Id, Month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) as Salary from a where c > 1 order by id, month desc
with c as ( select id, month, Salary ,row_number() over (partition by id order by month desc) as mrnk from Employee ) select id, month, sum(Salary) over (partition by id order by mrnk rows between current row and 2 following) as Salary from c where mrnk > 1 order by id, month desc
with cte as ( SELECT Id, Month, Salary FROM ( SELECT Id, Month, Salary, RANK()OVER(PARTITION BY Id ORDER BY Month DESC) AS rnk FROM Employee)t WHERE rnk >1) SELECT Id, Month, SUM(Salary) OVER (Partition by Id ORDER BY Month rows 2 preceding) as Salary FROM cte ORDER BY 1, 2 desc
with cte as ( select Id, Month, Salary from ( select Id, Month, Salary, max(Month) over(partition by Id) maxMonth from Employee ) temp where Month != maxMonth ) select Id, Month, sum(Salary) over(partition by Id order by month desc rows between current row and 2 following) as salary from cte order by Id, Month desc
with cte as ( select e.id, month, salary from employee e inner join (select id, max(Month) as mx_mth from employee group by 1)t on t.id = e.id where month != mx_mth ) select id, month, sum(salary) over (partition by id order by month asc rows between 2 PRECEDING and CURRENT ROW) as salary from cte order by 1, 2 desc
with cte as ( select id, max(month) as recent_month from employee group by 1 ) select e1.id, e1.month, sum(e2.salary) as salary from employee e1 join employee e2 on e1.id = e2.id and (e1.month - e2.month) between 0 and 2 where not exists (select 1 from cte e3 where e3.id = e1.id and e3.recent_month = e1.month) group by 1,2 order by 1 ,2 desc
with cte as ( select id, month, salary , rank() over (partition by id order by month desc) rnk from Employee ) Select id, month, sum(salary) over ( partition by id order by month ROWS between 2 preceding and current row) Salary from cte where rnk != 1 order by 1,2 desc
with cte as ( select id, month, salary from employee where (id, month) not in (select id, max(month) month from employee group by 1) ) select id, month, sum(salary) over (partition by id order by month range between 2 preceding and current row) salary from cte order by id, month desc
with cte as ( select id, month, sum(salary) over (partition by id order by month rows 2 preceding) as salary, row_number() over (partition by id order by month desc) as rnk from employee) select id, month, salary from cte where rnk !=1
with cte as ( select id, month, sum(salary) over (partition by id order by month rows 2 preceding) as salary, row_number() over (partition by id order by month desc) as rnk from employee) select id, month, salary from cte where rnk !=1 order by id, month desc
with cte as (SELECT e.*, sum(Salary) over(partition by Id Order by month rows between 2 preceding and current row) as cum_salary, rank() over(partition by Id Order by month) as rnk FROM employee e) SELECT cte.Id, cte.month, cte.cum_salary as salary from cte where (Id, rnk) not in (select cte.Id, max(cte.rnk) from cte group by Id) Order by Id, month desc
with cte as (select * from Employee where concat(Id, Month) not in (select concat(Id, max(Month)) from Employee group by Id) ) Select Id, Month, sum(Salary) over (partition by Id order by month rows between 2 preceding and current row) as salary from cte order by Id,month desc
with cte as (select * from employee where (id,month) not in (select id, max(month) from employee group by id)), cte_1 as (select *, rank()over(partition by id order by month desc) as ranking from cte) select id, month, sum(salary)over(partition by id order by month rows 2 preceding) as salary from cte order by 1 asc, 2 desc
with cte as (select ID, month, salary, rank() over(partition by ID order by month desc) as rnk from employee) select ID,month, (select sum(salary) as salary from cte C2 where C2.id= C1.ID and C2.month between C1.month-2 and C1.month) as salary from cte C1 where rnk>1 order by id,month desc
with cte as (select Id, Month, Salary, row_number() over(partition by Id order by Id, Month desc) as flag from Employee) select Id, Month, sum(salary) over(partition by id order by month rows between 2 preceding and 0 following) as Salary from cte where flag != 1 order by Id asc, Month desc
with cte as (select Id, Month, sum(Salary) over (partition by Id order by Month rows between 2 preceding and current row) as cum_salary, rank() over (partition by Id order by Month desc) as rk from Employee ) select Id, Month, cum_salary as Salary from cte where rk <> 1 order by Id, Month desc
with cte as( select e1.* from employee e1 where e1.month != (select max(e2.month) from employee e2 where e2.id = e1.id ) ) select id as id,month as month,sum(salary) over (partition by id order by month rows 2 preceding) as Salary from cte order by id, month desc
with cte as( select id, month, sum(salary) over(partition by id order by month rows 2 preceding) as cum, row_number() over(partition by id order by month desc) as rn from employee ) select id,month,cum as Salary from cte where rn != 1
with cte1 as (select id, month, salary, rank() over (partition by id order by month desc) as 'ranking' from employee) select id, month, sum(salary) over (partition by id order by month asc rows between 2 preceding and current row) as 'Salary' from cte1 where ranking <> 1 order by id asc, month desc
with cte1 as (select id, month, salary, rank() over (partition by id order by month desc) as 'ranking' from employee), cte2 as (select id, month, salary from cte1 where ranking <> 1) select id, month, sum(salary) over (partition by id order by month asc rows between 2 preceding and current row) as salary from cte2 order by id asc, month desc
with cte1 as( select *, dense_rank() over(partition by id order by month desc) as r1 from employee) select Id, Month,sum(salary) over(partition by id order by month rows between 2 preceding and 0 following) as Salary from cte1 where r1 <>1 order by id asc, month desc
with cte1 as( select *, row_number()over(partition by id order by month desc) as rnk1 from employee ) select Id, Month, sum(salary)over(partition by id order by month rows between 2 preceding and 0 following) as Salary from cte1 where rnk1 <> 1 order by id asc, month desc
with cte1 as(select *, row_number() over(partition by Id order by Month desc) rn from Employee), cte2 as( select * from cte1 where rn <> 1 order by Id ) select Id, Month, sum(Salary) over(partition by Id order by Month desc rows BETWEEN CURRENT ROW AND 2 following) Salary from cte2 order by Id asc, Month desc
with cum_salary as (select id, month, sum(salary) over(partition by id order by month rows between 2 preceding and current row) as salary, max(month) over(partition by id) as recent_month from Employee) select id, month, salary from cum_salary where month != recent_month order by id, month desc
with employee_not_recent_month as ( select id, max(month) as month from employee group by id ) select t1.id, t1.month, sum(t2.salary) as salary from ( select * from employee where (id, month) not in (select id, month from employee_not_recent_month) ) t1 join ( select * from employee where (id, month) not in (select id, month from employee_not_recent_month) ) t2 on t2.id = t1.id and t1.month - t2.month between 0 and 2 group by t1.id, t1.month order by t1.id asc, t1.month desc
with exclude_month as (SELECT Id, Month, Salary FROM (SELECT Id, Month, Salary, RANK() OVER(PARTITION BY Id ORDER BY Month DESC) as rnk FROM Employee) temp WHERE temp.rnk = 1), cte1 as (SELECT e.Id, e.Month, e.Salary FROM Employee e JOIN exclude_month em ON e.id = em.id AND e.Month <> em.Month) SELECT id, Month, sum(salary)over(partition by id order by month rows between 2 preceding and 0 following) as Salary FROM cte1 ORDER BY id, Month DESC
with id as ( select id, max(month) as recent_month from employee group by id ) select e1.id, e1.month, ifnull(e1.salary,0) + ifnull(e2.salary, 0) + ifnull(e3.salary, 0) as salary from employee e1 left join employee e2 on e1.id = e2.id and e1.month = e2.month+1 left join employee e3 on e1.id = e3.id and e1.month = e3.month+2 left join id on e1.id = id.id where e1.month != id.recent_month order by e1.id, e1.month desc
with last_3 as ( select *, row_number() over( partition by Id order by Month desc) as rown from Employee ), cum_salary as ( select Id, Month, sum(Salary) over( partition by Id order by Month desc rows between current row and 2 following) as Salary from last_3 where rown!=1 ) select * from cum_salary order by 1 asc , 2 desc
with main as ( select Id, Month, Salary, row_number() over (partition by Id order by Month desc ) rn from Employee ) select Id, Month,sum(Salary) over (partition by id order by Month desc ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING ) salary from main where rn <>1 order by Id, Month DESC
with max_month as (Select id, max(month) as max_month From Employee group by 1) Select e.id, e.month, (e.salary + coalesce(lag(e.salary,1) over(partition by e.id order by e.month),0) + coalesce(lag(e.salary,2) over(partition by e.id order by e.month),0)) as salary From Employee e left join max_month m on concat(e.id,e.month) = concat(m.id,m.max_month) where m.id is null order by 1, 2 desc
with max_month as( select Id, max(Month) as max_month from Employee group by Id ) select e.Id as id, e.Month as month, sum(e.Salary) over(Partition by e.Id order by e.Month ROWS between 2 PRECEDING AND CURRENT ROW) as Salary from Employee e join max_month m on e.Id = m.Id and e.Month != m.max_month order by e.Id, e.Month desc
with mrm as (select id, max(month) as most_recent from Employee group by 1 ), pastThreeMonth as ( select id, month, salary, lag(salary) over (partition by id order by month) as salary_1, lag(salary,2) over (partition by id order by month) as salary_2 from Employee ) select p.id, p.month, p.salary + coalesce(salary_1,0) + coalesce(salary_2,0) as salary from pastThreeMonth p left outer join mrm m on p.id = m.id and p.month = m.most_recent where m.most_recent is null order by 1, 2 desc
with rank_month as ( select id, month, salary, rank() over (partition by id order by month desc) "month_rank", sum(salary) over (partition by id order by month rows 2 preceding) "cumulative_salary" from employee group by 1, 2 ) select id, month, cumulative_salary "salary" from rank_month where month_rank != 1 order by id, month desc
with rank_month as ( select id, month, salary, rank() over (partition by id order by month desc) "month_rank", sum(salary) over (partition by id order by month rows 2 preceding) "cumulative_salary" from employee group by 1, 2, 3 order by 1, 2 ) select id, month, cumulative_salary "salary" from rank_month where month_rank != 1 order by id, month desc
with recent_months as ( select id, max(month) as max_month from employee group by id having count(*) > 1 ) select e1.id, e1.month, ( e1.salary + ifnull(e2.salary,0) + ifnull(e3.salary,0) ) as salary from employee e1 left join employee e2 on e1.id = e2.id and e2.month = e1.month - 1 left join employee e3 on e1.id = e3.id and e3.month = e1.month - 2 left join recent_months rm on e1.id = rm.id where rm.max_month <> e1.month order by e1.id asc, e1.month desc
with recent_months as ( select id, max(month) as max_month from employee group by id having count(*) > 1 ) select e1.id, e1.month, ( ifnull(e1.salary,0) + ifnull(e2.salary,0) + ifnull(e3.salary,0) ) as salary from employee e1 left join employee e2 on e1.id = e2.id and e2.month = e1.month - 1 left join employee e3 on e1.id = e3.id and e3.month = e1.month - 2 left join recent_months rm on e1.id = rm.id where rm.max_month <> e1.month order by e1.id asc, e1.month desc
with salary as ( select Id,month, salary from (select *, rank() over (partition by Id order by Month desc) as monthrank from employee) as tmp where monthrank > 1 ) select s1.Id, s1.Month, s1.Salary + ifnull(s2.salary,0) + ifnull(s3.salary,0) as Salary from salary as s1 left join salary as s2 on s1.Id = s2.Id and s1.month = s2.month+1 left join salary as s3 on s1.Id = s3.Id and s1.month = s3.month+2 order by s1.Id, s1.Month desc
with segment_id as ( select Id, Month, Salary, lag(Salary) over(partition by Id order by Month) as lag_Salary, lag(Salary,2) over(partition by Id order by Month) as lag_lag_Salary, rank() over(partition by Id order by Month desc) as month_rank_desc from Employee ) select Id, Month, (Salary+ifnull(lag_Salary,0)+ifnull(lag_lag_Salary,0)) as Salary from segment_id where month_rank_desc != 1 order by Id, Month desc
with t as ( select Id, Month, sum(Salary) over(partition by Id order by Month asc ROWS 2 Preceding) as Salary from Employee e left join ( select Id as Id2, max(Month) as recentMonth from Employee group by Id )gt on e.Id = gt.Id2 where Month != recentMonth ) select * from t order by Id asc, Month desc
with t as (select * from Employee where (id, month) not in (select id, max(month) as max_month from Employee group by id)) select id, month, sum(Salary) over (partition by Id order by Month rows between 2 preceding and 0 following) as Salary from t order by id, month desc
with t1 as ( select *, sum(salary) OVER (PARTITION BY id order by Month ROWS 2 PRECEDING) as cum_salary, DENSE_RANK() OVER (PARTITION BY id order by Month) as "row_num" from Employee) select a.id, a.month, a.cum_salary as salary from t1 a where a.row_num not in (select max(row_num) from t1 b where b.id=a.id) order by id, month desc
with t1 as ( select id, month, salary, round(sum(salary) over (partition by id order by month asc rows between 3 preceding and 1 preceding),0) as 'salary_avg', lag(month, 1) over (partition by id order by month) as prev_month from employee ) select id, prev_month as month, salary_avg as salary from t1 where salary_avg is not null order by id asc, month desc
with t1 as (select *, dense_rank() over (partition by Id order by Month desc) as rk from Employee) select t1.Id, t1.Month, sum(t1.Salary) over (partition by t1.Id order by t1.Month rows between 2 preceding and current row ) as Salary from t1 where t1.rk != 1 order by 1, 2 desc
with t1 as (select employee.*, rank() over (partition by id order by month desc) as rnk from employee) select id, month, sum(salary) over (partition by id order by month rows between 2 preceding and current row) as salary from t1 where rnk <> 1 order by 1, 2 desc
with t1 as( select *, row_number() over(partition by Id order by Month desc) as ranking from Employee) select t1.Id, t1.Month, sum(t2.Salary) as Salary from t1 inner join t1 as t2 on t1.Id = t2.Id where t1.ranking <= t2.ranking and t1.ranking + 3 > t2.ranking and t1.ranking > 1 and t2.ranking > 1 group by t1.Id, t1.Month
with tbMaxM as ( select id, max(MONTH) as max_month from employee group by id ), tbAll as ( select e1.Id, e1.Month, sum(e2.salary) as cum_salary from employee as e1 join employee as e2 on e1.id = e2.id and e1.month - e2.month < 3 and e1.month - e2.month >= 0 group by e1.Id, e1.Month ) select tbAll.Id, tbAll.Month, tbAll.cum_Salary as Salary from tbAll join tbMaxM on tbAll.id = tbMaxM.id and tbAll.month != tbMaxM.max_month order by tbAll.Id, tbAll.Month Desc
with temp as ( select Id, Month, Salary from (select Id, Month, Salary, rank() over (partition by Id order by Month desc) as ranking from Employee) as t where ranking != 1 ) select t.Id, t.Month, sum(u.Salary) as Salary from temp as t join temp as u on t.Id = u.Id where t.Month >= u.Month and t.Month - u.Month <= 2 group by t.Id, t.Month order by t.Id, t.Month desc
with temp as ( select distinct id, month, salary from (select id, month, salary, rank() over (partition by id order by month desc) as ranking from employee) as t where ranking != 1 ) select id, month, sum(salary) over (partition by id order by month rows 2 preceding) as salary from temp order by id, month desc
with tmp as( select * from employee where (id, month) not in ( select id, max(month) from employee group by 1 ) ) select t1.id, t1.month, sum(t2.salary) as salary from tmp t1 join tmp t2 on t1.id = t2.id and t1.month >= t2.month and t1.month <= t2.month + 2 group by 1, 2 order by 1, 2 desc
