CREATE FUNCTION getNthHighestSalary ( N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT SALARY FROM EMPLOYEE ORDER BY SALARY DESC LIMIT 1 OFFSET N); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE I INT; SET I = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT I, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE K INT; SET K = N - 1; RETURN ( SELECT ( Select DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET K ) FROM Dual ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE LEN_TABLE INT DEFAULT 0; SELECT COUNT(DISTINCT SALARY) INTO LEN_TABLE FROM EMPLOYEE; IF (LEN_TABLE < N) THEN RETURN NULL; ELSE RETURN ( SELECT MIN(d_TABLE.SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEE ORDER BY SALARY DESC LIMIT N) AS d_TABLE ); END IF; END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT DEFAULT N-1; RETURN ( SELECT DISTINCT Salary AS 'getNthHighestSalary(@N)' FROM Employee ORDER BY Salary DESC LIMIT M,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N - 1; RETURN ( SELECT ( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M)) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N - 1; RETURN ( SELECT DISTINCT Salary FROM EMPLOYEE ORDER BY Salary DESC LIMIT M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N - 1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N - 1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N - 1; RETURN ( SELECT DISTINCT e1.Salary FROM Employee e1 WHERE (SELECT COUNT(*) FROM (SELECT DISTINCT Salary FROM Employee) e2 WHERE e2.Salary > e1.Salary) = N - 1 LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N - 1; RETURN ( SELECT IFNULL((SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1), NULL) AS nthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N - 1; RETURN( select distinct salary from Employee order by salary DESC LIMIT M,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( SELECT (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( SELECT DISTINCT SALARY FROM Employee ORDER BY Salary DESC LIMIT M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM EMPLOYEE ORDER BY Salary DESC LIMIT 1 OFFSET M ) , NULL) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M), NULL) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( SELECT IFNULL( (Select DISTINCT Salary From Employee order by Salary DESC limit 1 offset M),NULL) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( SELECT distinct salary FROM employee ORDER BY salary desc LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; RETURN ( select DISTINCT Salary from Employee order by Salary Desc Limit M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M = N-1; SET @result = ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M ); RETURN(@result); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( IFNULL((SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M),NULL) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT (SELECT salary FROM (SELECT DISTINCT salary FROM Employee) AS S2 ORDER BY salary DESC LIMIT 1 OFFSET M ) AS test ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 offset M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT Salary from Employee ORDER BY Salary DESC LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT Salary from Employee Order BY Salary DESC LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT salary FROM employee ORDER by Salary DESC LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT(Salary) FROM Employee ORDER BY Salary DESC Limit 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT DISTINCT(Salary) FROM Employee ORDER BY Salary DESC Limit M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT Distinct Salary FROM Employee ORDER BY Salary Desc LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT E.Salary FROM Employee E GROUP BY E.Salary ORDER BY Salary DESC LIMIT M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M), NULL) AS SecondHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT IFNULL((SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M), null) AS SecondHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT IFNULL((SELECT DISTINCT Salary FROM Employee ORDER BY Salary Desc LIMIT 1 OFFSET M), NULL) As getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT( IFNULL( ( SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT 1 OFFSET M ), Null ) ) AS getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select (select distinct salary from employee order by salary desc limit M,1) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select DISTINCT Salary from Employee order by Salary desc LIMIT 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select Distinct Salary from Employee order by Salary desc limit M,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct Salary from Employee Order by Salary desc limit 1 offset M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct Salary from Employee Order by Salary desc limit M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct Salary from Employee order by 1 desc LIMIT M,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct Salary from Employee order by Salary desc limit M,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct Salary from Employee where N>0 order by Salary DESC limit 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct Salary from employee order by Salary desc limit M,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct salary AS 'getNthHighestSalary' from employee Order by Salary DESC Limit 1 OFFSET M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct salary from employee order by salary DESC limit m,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select distinct salary from employee order by salary desc limit 1 offset M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select ifnull(( select distinct salary from Employee order by salary DESC limit 1 offset M),null) as getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( select ifnull((select distinct salary from employee order by salary desc limit 1 offset m), null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( with CTE as (SELECT Salary, Dense_RANK()OVER(ORDER BY Salary DESC) as 'RNK' from Employee) SELECT MAX(Salary) FROM CTE WHERE RNK=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M int; set M = N -1; RETURN ( select distinct Salary as Salary from Employee order by 1 desc limit 1 offset M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE NN INT; SET NN = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET NN ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE NUM INT; SET NUM=N-1; RETURN ( SELECT DISTINCT Salary from employee order by salary DESC limit NUM,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE OFF INT; SET OFF = N - 1; RETURN ( SELECT ( SELECT DISTINCT SALARY FROM Employee ORDER BY salary DESC LIMIT 1 OFFSET OFF ) as getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE OFF INT; SET OFF = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET OFF ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE OFS INT; SET OFS = N - 1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET OFS ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE OffValue INT; SET OffValue = N-1; RETURN ( SELECT(SELECT DISTINCT Salary from Employee ORDER BY Salary desc LIMIT 1 OFFSET OffValue)AS SecondHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE R INT; SET R = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET R ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE Var INT; SET Var = N - 1; RETURN ( Select Distinct(Salary) From Employee Order By Salary DESC LIMIT 1 OFFSET Var ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE X INT DEFAULT N - 1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET X ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE X INT; SET N = N-1; RETURN ( IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N), NULL ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE X INT; SET X = N-1; RETURN ( IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET X), NULL ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE m INT; SET m = N - 1; RETURN ( SELECT Salary as getNthHighestSalary FROM Employee GROUP BY Salary ORDER BY Salary DESC LIMIT m,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE m INT; SET m = n - 1; RETURN ( SELECT Salary FROM Employee GROUP BY Salary ORDER BY Salary DESC LIMIT m, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE myN INT; SET myN = N - 1; RETURN ( SELECT Distinct Salary from Employee Order By Salary desc Limit 1 OFFSET myN ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE nth INT; SET nth = null; SET N=N-1; select ifnull( (select distinct Salary from Employee order by Salary desc limit 1 offset N), null ) into nth; RETURN ( nth ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE num INT; SET num = N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET num), Null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE p INT; SET p = N - 1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT p, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE p INT; SET p = N-1; RETURN ( SELECT DISTINCT salary FROM employee ORDER BY salary DESC LIMIT p, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE x INT; DECLARE m INT; SET x = 1; select max(Salary) INTO m from Employee; loop_label: LOOP IF x = N THEN LEAVE loop_label; END IF; Select max(Salary) INTO m from Employee where Salary < m; SET x = x + 1; END LOOP; RETURN ( m ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE x int; SET X = N-1; RETURN ( SELECT IFNULL ( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET X), null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Declare K INT; Set K=N-1; RETURN ( Select Distinct Salary from Employee order by Salary desc limit 1 offset K ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Declare K INT; Set K=N-1; RETURN ( Select Distinct Salary from Employee order by Salary desc limit K,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Declare M INT; SET M = N-1; RETURN ( SELECT Distinct Salary FROM Employee order by Salary desc limit M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Declare M INT; Set M = N - 1; RETURN ( Select IFNULL( ( Select Distinct Salary as getNthHighestSalary from Employee Order by Salary Desc Limit M, 1 ), NULL ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Declare M INT; Set M=N-1; RETURN ( SELECT IFNULL((SELECT DISTINCT(salary) FROM employee ORDER BY salary desc limit M,1),null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Declare M INT; Set M=N-1; RETURN ( SELECT IFNULL((SELECT DISTINCT(salary) FROM employee ORDER BY salary desc limit M,1),null) as getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Declare M INT; Set M=N-1; RETURN ( Select Distinct(Salary) from Employee order by Salary Desc Limit M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Declare o int Default N - 1; RETURN ( select distinct Salary from Employee order by Salary DESC limit o, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( (Select distinct salary from (Select salary , dense_rank() over (order by salary desc) as ranking from employee) as e where e.ranking = N) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( CASE WHEN N <= (SELECT COUNT(DISTINCT Salary) FROM Employee) THEN( SELECT MIN(Salary) FROM( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N ) AS temp_table ) ELSE NULL END ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( CASE WHEN N <= (select count(distinct salary) b from employee) THEN (select * from (select distinct salary from employee order by salary desc limit N) a order by a.salary asc limit 1) ELSE NULL END ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT (Salary) FROM (Select Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) as DenseRank FROM EMPLOYEE) a WHERE DenseRank = N GROUP BY 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT CASE WHEN COUNT(sub.salary) < N THEN NULL ELSE MIN(sub.salary) END FROM ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N )sub ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT K.SALARY FROM (SELECT SALARY,DENSE_RANK() OVER(ORDER BY SALARY DESC) AS RANKED FROM EMPLOYEE) K WHERE K.RANKED = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary AS getNthHighestSalary FROM (SELECT Salary, DENSE_RANK() OVER (ORDER BY Salary DESC) AS s_rank FROM Employee) temp WHERE s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM ( SELECT Id, Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) as SalaryRank FROM Employee ) RankData WHERE SalaryRank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM ( SELECT SALARY, DENSE_RANK() OVER (order by Salary DESC) ranking FROM Employee ) temp where ranking=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM ( SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary desc) as rk FROM Employee ) tmp WHERE tmp.rk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM (SELECT *, DENSE_RANK() OVER (ORDER BY Salary DESC) AS s_salary FROM Employee) temp WHERE s_salary = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM (SELECT Id, Salary, DENSE_RANK() OVER (ORDER BY Salary DESC) AS srank FROM Employee) a WHERE srank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM (SELECT Salary, DENSE_RANK() OVER (ORDER BY SALARY DESC) AS 'Rank' FROM Employee) T1 WHERE T1.Rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM (SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) as rnk FROM Employee) aa WHERE rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM (SELECT Salary,(DENSE_RANK() OVER(ORDER BY Salary DESC)) AS b FROM Employee) a WHERE b=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM Employee as s WHERE N = (SELECT COUNT(DISTINCT Salary) FROM Employee WHERE Salary >= s.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM( SELECT *, DENSE_RANK() OVER(ORDER BY Salary DESC) AS s_rank FROM Employee) AS Salary_Ranked WHERE s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM( SELECT *,DENSE_RANK() OVER(ORDER BY Salary DESC) AS s_rank FROM Employee) AS Salary_Ranked WHERE s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM( SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS RANK1 FROM Employee) t1 WHERE RANK1 =N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary FROM(SELECT *,DENSE_RANK() OVER(ORDER BY Salary DESC) AS s_rank FROM Employee) AS Salary_Ranked WHERE s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary From( SELECT *, DENSE_RANK() OVER (ORDER BY Salary DESC) As s_rank From Employee) As Salary_ranked WHERE s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT Salary_Ranked.Salary FROM( SELECT *,DENSE_RANK() OVER(ORDER BY Salary DESC) AS s_rank FROM Employee) AS Salary_Ranked WHERE Salary_Ranked.s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT e1.Salary FROM Employee e1 WHERE (SELECT COUNT(*) FROM (SELECT DISTINCT Salary FROM Employee) e2 WHERE e2.Salary > e1.Salary) = N - 1 LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT e1.Salary FROM Employee e1 WHERE n - 1 = (SELECT COUNT(DISTINCT e2.Salary) FROM Employee e2 WHERE e1.Salary < e2.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT salary FROM (SELECT salary, DENSE_RANK() OVER ( ORDER BY salary DESC) realrank FROM Employee) temp WHERE realrank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT(E.Salary) FROM Employee E WHERE N-1 = (SELECT COUNT(DISTINCT E2.Salary) FROM Employee E2 WHERE E2.Salary > E.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT(Salary) FROM (SELECT Id, Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) as salary_rank FROM Employee) as tmp_Salary WHERE salary_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT(Salary) FROM (SELECT Salary, DENSE_RANK() OVER (ORDER BY Salary DESC) AS rn FROM Employee) a WHERE rn = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT(Salary) FROM (SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS rnk FROM Employee) a WHERE rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT(Salary) FROM (SELECT Salary,DENSE_RANK() OVER (ORDER BY Salary DESC) as rnk FROM Employee) a WHERE rnk=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT DISTINCT(e.Salary) FROM Employee AS e WHERE N = (SELECT COUNT(DISTINCT(Salary)) FROM Employee WHERE e.Salary <= Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT Distinct Salary FROM (SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS RNK FROM Employee ) e WHERE RNK = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT E.Salary FROM Employee E, (SELECT distinct Salary FROM Employee) S WHERE E.Salary <= S.salary GROUP BY E.Id, E.Salary HAVING count(1) = N LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT IF(count<N,NULL,min) FROM (SELECT MIN(Salary) AS min, COUNT(1) AS count FROM (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N) AS a ) as b ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT IFNULL(MIN(salary),null) FROM (SELECT DISTINCT salary FROM employee ORDER BY salary DESC LIMIT N) s HAVING COUNT(salary)=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT MAX(SALARY) FROM (SELECT salary, DENSE_RANK() OVER (ORDER BY salary DESC)AS myrank FROM employee) AS t WHERE myrank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT MAX(Salary) FROM Employee E1 WHERE N = (SELECT COUNT(DISTINCT(E2.Salary)) FROM Employee E2 WHERE E2.Salary >= E1.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT Salary FROM (SELECT Salary, DENSE_RANK() OVER (ORDER BY Salary DESC) r FROM Employee )a WHERE r = N LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT Salary from Employee e1 WHERE N-1 = (SELECT COUNT(DISTINCT Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary) LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct Salary FROM (SELECT *, dense_rank() over(order by Salary desc) AS rnk FROM Employee) t WHERE rnk=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct Salary as geyNthHighestSalary from Employee as e1 where N-1=(select count(distinct Salary)FROM Employee as e2 where e2.Salary>e1.Salary)); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct Salary from employee e1 where N-1 = (select count(distinct salary) from employee e2 where e2.salary > e1.salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct salary FROM (SELECT e1.Salary, DENSE_RANK() OVER(order by salary desc) as rnk FROM Employee e1) as a where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct salary FROM (SELECT salary, dense_rank () over (order by salary desc) as rnk FROM employee) a WHERE a.rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct salary FROM (SELECT salary, dense_rank() over (order by salary desc) as rnk FROM employee) s where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct salary FROM Employee e1 WHERE N-1 = (SELECT COUNT(DISTINCT Salary) FROM Employee e2 WHERE e2.Salary > e1.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct(salary) From Employee e1 Where (N-1)=(SELECT count(distinct salary) from Employee e2 where e1.salary<e2.salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT distinct(salary) From Employee e1 Where (N-1)=(SELECT count(distinct salary) from Employee e2 where e2.salary>e1.salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT e1.Salary FROM (SELECT DISTINCT Salary FROM Employee) e1 WHERE (SELECT COUNT(*) FROM (SELECT DISTINCT Salary FROM Employee) e2 WHERE e2.Salary > e1.Salary) = N - 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT max(e1.Salary) FROM employee e1 WHERE (SELECT COUNT(*) FROM (SELECT DISTINCT Salary FROM Employee) e2 WHERE e2.Salary > e1.Salary) = N - 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT salary FROM (SELECT * , dense_rank() over (order by salary desc) as rnk FROM employee) t1 WHERE rnk = N LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT salary FROM (SELECT *, DENSE_RANK() OVER(ORDER BY Salary DESC) as s_rank FROM Employee) sr WHERE s_rank = N LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT t.Salary FROM ( SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS row_number_ FROM Employee ) as t WHERE t.row_number_ = N LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( SELECT( SELECT DISTINCT Salary FROM (SELECT Salary, dense_rank() over (ORDER BY Salary DESC) AS d_rank FROM Employee) A WHERE A.d_rank=N) AS getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select DISTINCT(SALARY) AS getNthHighestSalary from ( SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) as SALARY_RANK FROM Employee ) as SALARY_RANK_TBL WHERE SALARY_RANK_TBL.SALARY_RANK = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select Distinct Salary FROM ( Select Salary, DENSE_RANK() OVER (ORDER BY Salary DESC) As rank_order FROM Employee) As Temp WHERE rank_order = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select Distinct Salary FROM (SELECT *, DENSE_RANK() OVER(ORDER BY Salary Desc) AS s_rank FROM Employee) as ranking WHERE s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select Salary From (Select Distinct Salary, Dense_Rank() over (order by Salary Desc) as rk From Employee ) as t where rk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select distinct s.Salary as 'getNthHighestSalary(N)' from (select Salary, Dense_Rank() over (order by Salary desc) as rnk from Employee) s where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select distinct(Salary) as N from (Select *, dense_rank() over (order by Salary desc) as rnk from Employee) as tbl where tbl.rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select distinct(e1.Salary) From Employee e1 WHERE N-1 = ( Select Count(Distinct (e2.Salary)) From Employee e2 where e2.Salary > e1.Salary ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select e1.Salary from Employee e1 where N - 1 = (Select count(Distinct Salary) from Employee e2 where e2.Salary > e1.Salary) limit 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( Select max(Salary) as getNthHighestSalary from Employee as e1 where N-1 = (select count(Distinct Salary) from Employee as e2 where e1.Salary < e2.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH CTE AS ( SELECT SALARY, DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RANKED_SALARY FROM EMPLOYEE ) SELECT DISTINCT SALARY FROM CTE WHERE RANKED_SALARY = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH Sal as ( SELECT Salary, dense_rank() over(order by Salary desc) as rnk from Employee) select distinct Salary from Sal where rnk=n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH Sal as ( SELECT distinct Salary, dense_rank() over (order by Salary desc) as rnk from Employee ) select Salary from Sal where rnk= n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH Salaries AS ( SELECT DENSE_RANK() OVER (ORDER BY Salary DESC) AS Ranking , Salary FROM Employee) SELECT DISTINCT Salary FROM Salaries WHERE Ranking = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH added_rank AS (SELECT Salary, DENSE_RANK () OVER(ORDER BY Salary DESC) AS rank_number FROM Employee) SELECT DISTINCT Salary as getNthHighestSalary FROM added_rank WHERE rank_number = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH cte0 AS (SELECT DISTINCT Salary FROM Employee), cte1 AS ( SELECT Salary, RANK() OVER(ORDER BY Salary DESC) AS rnk FROM cte0 ) SELECT COALESCE(Salary, null) FROM cte1 WHERE cte1.rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH dist_sal AS(SELECT DISTINCT salary AS sel_sal FROM Employee), id_t AS ( SELECT dist_sal.sel_sal, ROW_NUMBER() OVER(ORDER BY dist_sal.sel_sal DESC) AS id_row_num FROM dist_sal) SELECT id_t.sel_sal FROM id_t WHERE id_row_num=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH distinct_salaries as ( SELECT distinct salary from Employee ) select salary from (select salary ,rank() over (order by salary desc) as r from distinct_salaries) as t where r = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH distinct_salaries as ( SELECT distinct salary from Employee ), agg_cte as ( SELECT salary, RANK() OVER(ORDER BY salary desc) as nth_salary FROM distinct_salaries ) SELECT salary from agg_cte where nth_salary = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH distinct_salaries as ( SELECT distinct salary from Employee ), agg_cte as ( SELECT salary, RANK() OVER(ORDER BY salary desc) as nth_salary FROM distinct_salaries ) SELECT salary from agg_cte where nth_salary = N ORDER by salary desc ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH distinct_salaries as ( SELECT distinct salary from Employee ), agg_cte as ( SELECT salary, RANK() OVER(ORDER BY salary desc) as nth_salary FROM distinct_salaries ) SELECT salary from agg_cte where nth_salary = N ORDER by salary desc); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH e2 AS ( SELECT DISTINCT Salary FROM Employee) SELECT tmp.Salary FROM e2 tmp JOIN e2 tmp2 ON tmp2.Salary>=tmp.Salary GROUP BY tmp.Salary HAVING COUNT(*)= N LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH emp_salary as (SELECT Id, Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) as Salary_Rank FROM Employee) SELECT DISTINCT(Salary) FROM emp_salary WHERE Salary_Rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH ordered AS ( SELECT Salary, RANK() OVER ( ORDER BY Salary DESC ) rnk FROM Employee GROUP BY Salary ) SELECT Salary FROM ordered WHERE rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH ranked_salaries AS( SELECT e.Salary, RANK() OVER ( ORDER BY e.Salary DESC ) AS sal_rank FROM Employee AS e GROUP BY e.Salary ) SELECT rs.Salary FROM ranked_salaries AS rs WHERE rs.sal_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH subquery AS ( SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS DENSERANK FROM Employee ) SELECT Salary FROM subquery WHERE DENSERANK = N LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( WITH tmp1 as (SELECT salary, dense_rank() over(order by salary desc) as rank_ from employee), tmp2 as (SELECT DISTINCT Salary FROM employee) SELECT IF ( N > (SELECT count(*) FROM tmp2), NULL, (SELECT DISTINCT salary FROM tmp1 where rank_ = N) ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( With distinct_salaries as (Select distinct salary from Employee), salary_rank as (Select Salary, RANK() OVER(order by Salary desc) as agg_rank from distinct_salaries) Select Salary from salary_rank where agg_rank = N order by Salary desc ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( case when (select count(*) from (select distinct salary from Employee) x) < N then null else (select salary from ( select salary from (select distinct salary from Employee order by salary) x order by salary DESC limit N ) x order by salary asc limit 1) end ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( ifnull((select distinct Salary from Employee e1 where (select count(distinct e2.salary) from Employee e2 where e2.Salary > e1.Salary) = N -1), null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select ( select distinct(salary) as secondhighestsalary from ( select salary,dense_rank()over(order by salary desc) as sal_rank from employee) as t where sal_rank=N ) as secondhighestsalary from dual ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select DISTINCT Salary from (select Salary, DENSE_rank () over(order by Salary DESC) as ranks from Employee) ranked where ranks=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select DISTINCT Salary from (select Salary,DENSE_RANK() OVER(ORDER BY Salary DESC) as d_rank from Employee) as sub where d_rank = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select DISTINCT Salary from Employee e1 where n-1 = (select count(distinct Salary) from Employee e2 where e2.Salary > e1.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select DISTINCT getNthHighestSalary from (select Salary as getNthHighestSalary, dense_rank() over (Order by Salary DESC ) as ranksal from Employee ) a where ranksal = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select Distinct Salary From Employee e1 where N-1=(select count(DISTINCT salary) From Employee e2 where e2.salary>e1.salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select Distinct Salary from (select Salary,dense_rank() over (ORDER BY salary DESC ) AS rnk from Employee) res where rnk=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select IF (N > count(distinct(Salary)), null, min(e.Salary) ) from (select distinct Salary from Employee order by Salary desc limit N) e ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select Nth_value(m.Salary,N) over(order by m.Salary Desc) as highest from (select distinct Salary from Employee) m order by highest Desc Limit 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select Salary from ( select Salary, dense_rank() over(order by Salary desc) as _rank from Employee ) s where s._rank = N limit 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select Salary from (select DENSE_RANK() over (order by Salary desc) as r, Salary from Employee ) as p where r =N group by Salary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select Salary from (select Salary, Row_Number() over(order by Salary desc) rownumber from (select distinct Salary from Employee) dis) dta where rownumber = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select a.Salary from( select distinct Salary, dense_rank() over(order by Salary desc) as rk from Employee) a where rk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select case when max(r.salary_rank) < n then null else r.salary end from ( select id, salary, dense_rank() over (order by salary desc) as salary_rank from employee ) as r where r.salary_rank = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select coalesce(a.salary, null) from (select salary, dense_rank() over (order by salary desc) rnk from employee) a where rnk = N group by salary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct (a.salary) from (select ID, Salary, dense_rank()over(order by salary desc) as ranks from employee)a where a.ranks = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary as getNthHighestSalary from ( select Salary, dense_rank() over(order by Salary desc) as sal_rank from Employee ) e where e.sal_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from ( SELECT Salary, dense_rank() over (order by Salary desc) rk FROM Employee ) as dense where rk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from ( SELECT Salary, dense_rank() over (order by Salary desc) rk FROM Employee ) dense where rk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from ( select Salary ,dense_rank() over(order by Salary desc) as rnk from Employee ) as Tv where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select *, DENSE_RANK() OVER(ORDER BY Salary DESC) AS s_rank FROM Employee) AS Salary_Ranked WHERE s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select *, dense_rank() over (order by Salary desc) as Num from Employee) as getNthHighestSalary where Num = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select ID, Salary, dense_rank() over (order by Salary desc ) as rnk from Employee) t1 where rnk=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select Id, Salary, Dense_Rank() Over (Order by Salary Desc) Rnk from Employee )a where Rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select Id, Salary, dense_rank() over(order by Salary desc) as rnk from Employee)t where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select Salary , DENSE_RANK() over (order by Salary desc) as rnk2 from Employee) t where t.rnk2 = N); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select Salary, Dense_Rank() Over (Order by Salary Desc) Rnk from Employee) a where Rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select Salary, dense_rank() over(order by Salary desc) as rk from Employee) temp where rk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from (select Salary, dense_rank() over(order by Salary desc) as rnk from Employee) as rnk_salary where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from Employee e1 where N-1 = (select count(distinct Salary) from Employee e2 where e1.Salary<e2.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from( select Id, Salary, DENSE_RANK() OVER(ORDER BY SALARY DESC) as rnk from employee ) as a where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from(select *, Dense_rank() over (order by Salary Desc) as s_rank from Employee) as Salary_Ranked where s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct Salary from(select *, dense_rank() over(order by Salary desc) as s_rank from Employee) as Salary_Ranked where s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct a.Salary from Employee as a join Employee as b where a.Salary <= b.Salary group by a.Id, a.Salary having count(distinct b.Salary) = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct a.salary from ( select salary, dense_rank() over (order by salary desc) salary_rank from Employee) a where a.salary_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct e1.Salary from Employee e1 where (N-1) = (select count(distinct Salary) from Employee e2 where e1.Salary < e2.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct e1.salary from Employee e1 where N-1 = (select count(distinct e2.Salary) from Employee e2 where e1.Salary < e2.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct e1.salary from employee e1, employee e2 where e1.salary <= e2.salary group by e1.salary having count(distinct e2.salary) = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary as getNthHighestSalary from ( select salary, dense_rank() over(order by salary desc) as rnk from employee )e where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary as getNthHighestSalary from (select id, salary , dense_rank() over (order by salary desc ) as sal_rank from employee) b where sal_rank = N); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary as getNthHighestSalary from Employee E where N-1=(select count(distinct salary) from Employee E2 where E2.Salary > E.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from ( select *, dense_rank() over (order by salary desc) as rk from Employee ) a where rk=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from ( select e1.id,e1.salary,count(distinct e2.salary) as cntr from employee e1 left join employee e2 on e1.salary < e2.salary and e1.id<>e2.id group by e1.id )abc where cntr=n-1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from ( select salary, dense_rank() over (order by salary desc) as r from Employee ) tmp where tmp.r = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from ( select salary, dense_rank() over(order by salary desc) as o from employee ) r where o = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from ( select salary,case when cnt is null then 0 else cnt end f_cnt from ( select e1.salary, count( distinct e2.salary) as cnt from employee e1 left join employee e2 on e1.salary > e2.salary and e1.id<>e2.id group by e1.salary )ab )abc where f_cnt=((select count(distinct salary) From employee)-n) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from ( select salary,dense_rank()over(order by salary desc) as rn from employee) a where a.rn=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select *, DENSE_RANK() over(order by salary DESC) AS s_rank from Employee) as Salary_ranked where s_rank=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select *, dense_rank() over (order by salary desc) as ranked from employee) a where ranked = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select *, dense_rank() over(order by salary desc) as 's_rank' from Employee) temp where s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select *, dense_rank() over(order by salary desc) as rnk from employee) as ranks where rnk=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select Id, salary, DENSE_RANK() over (order by salary desc) as emp_id from employee) as a where emp_id = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select distinct salary, dense_rank() over (order by salary desc) r from employee)t where t.r=n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select id,salary, dense_rank() over(order by salary desc) as rnk from employee)a where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select id,salary,dense_rank() over(order by salary desc) rnk from employee)a where rnk=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select salary ,dense_rank() over (order by salary desc) as sal_rank from Employee) as e where sal_rank= N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select salary, dense_rank() over (order by salary desc) rk from employee) t where rk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select salary, dense_rank() over(order by salary desc) row_num from employee) ordered where row_num = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct salary from (select salary, dense_rank()over(order by salary desc) as rnk from employee) as tab where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct(a.salary) from (select salary, dense_rank() over(order by salary desc) as salary_rank from Employee) a where salary_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct(e.Salary) from (select Id, Salary, dense_rank() over(order by Salary Desc) as d_rank from Employee) e where e.d_rank=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct(salary) from (select salary, DENSE_RANK() over (order by salary desc) as r from Employee) as emp where r= N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select distinct(salary) from( select salary,dense_rank() over (order by salary desc) as sal_rank from Employee) as X where sal_rank=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select e1.Salary from (select distinct Salary from Employee) e1, (select distinct Salary from Employee) e2 where e1.Salary <= e2.Salary group by e1.Salary having count(*)=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select e1.Salary from Employee e1, Employee e2 where e1.Salary <= e2.Salary group by e1.Salary having count(distinct e2.Salary) = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select if(count(*) < N, null, min(salary)) from (select distinct salary from employee order by salary desc limit N) as a ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select ifnull( (select distinct salary from ( select salary, dense_rank() over(order by salary desc) as n_salary from employee ) ranked_salary where n_salary = N) ,null) nthhighestsalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select ifnull( (select distinct salary from (select salary,dense_rank()over(order by salary desc) as rk from employee)e where e.rk=N) ,null) as getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select ifnull((select distinct salary from(select salary, dense_rank() over(order by salary desc) as rnk from employee) h where h.rnk=n),null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select ifnull(Salary,null) from (select distinct Salary, dense_rank() over (order by Salary desc) as rnk from Employee) as e where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select ifnull(a.salary,null) from (select distinct salary,dense_rank() over(order by salary desc) as rn from employee) a where a.rn = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select ifnull(salary,null) from ( select distinct salary, dense_rank()over(order by salary desc) as rnk from Employee) as e where rnk = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select max(Salary) from ( select distinct Salary, dense_rank() over (order by Salary desc) as rnk from Employee as t1 ) as t1 where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select max(Salary) from Employee e1 where N-1 = (select count(distinct Salary) from Employee e2 where e2.Salary > e1.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select max(e1.Salary) from Employee e1 where (select count(*) from (select distinct Salary from Employee) e2 where e2.Salary > e1.Salary) = N - 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select max(salary) as salary from( select salary,dense_rank()over(order by Salary desc) rnk from Employee) t where rnk = n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select max(salary) from employee e1 where N - 1 = ( select count(*) from (select distinct salary from employee) e2 where e1.salary < e2.salary ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select min(salary) from ( select dense_rank() over (order by salary desc) rn, salary from employee ) e where rn = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select new.Salary as getNthHighestSalary from (select distinct Salary, dense_rank() over(order by Salary desc) as "Rank" from Employee) new where new.Rank=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select salary from ( select distinct salary, DENSE_RANK() over (order by salary desc) as row_num from Employee) temp where row_num=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select salary from ( select salary , dense_rank() over (order by salary desc) drnk from employee ) sub where drnk = N group by 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select salary from ( select salary, dense_rank() over(order by salary desc) as o from employee ) r where r.o = N LIMIT 1 ) ; END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select salary from ( select salary, dense_rank() over(order by salary desc) as rnk from employee) r where r.rnk = n limit 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select t1.Salary FROM (select distinct salary from Employee) t1 LEFT JOIN (select distinct salary from Employee) t2 on t1.Salary <= t2.Salary Group by 1 having count(*) = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select t1.Salary from ( select row_number() over (order by t2.Salary desc) as rownumber, t2.Salary from (select distinct Salary from Employee) as t2 ) as t1 where t1.rownumber = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( select tb1.salary as salary from (select row_number() over (order by ib1.salary desc) as rown, salary from (select distinct salary from employee) ib1) tb1 where rown=N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( with base as (select *, dense_rank() over(order by Salary desc) as rnk from Employee) select avg(Salary) from base where rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( with cte as ( select Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS Salary_rank from Employee ) select DISTINCT Salary FROM cte WHERE N = Salary_rank ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( with cte as (select salary, dense_rank() over(order by salary desc) rn from employee) select distinct salary from cte where rn = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( with emp as ( SELECT salary, dense_rank() over (order by salary desc) as 'rank' from Employee ) select distinct salary from emp where emp.rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( with s1 as ( select distinct salary from employee ), s2 as ( select distinct salary from employee ) select s1.salary from s1 cross join s2 where s1.salary <= s2.salary group by s1.salary having count(*) = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( with salcte as ( select Salary, dense_rank() over (order by Salary desc) as salrnk from employee ) select Salary from salcte where salrnk = N limit 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN ( with tmp as ( select Salary , dense_rank() over (order by Salary desc) sal_rank from Employee ) select distinct Salary from tmp where sal_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN (SELECT DISTINCT Salary FROM( SELECT salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS s_rank FROM Employee) AS Salary_Ranked WHERE s_rank = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN (SELECT DISTINCT(Salary) FROM (SELECT Salary, DENSE_RANK() OVER (ORDER BY Salary DESC) as rnk FROM Employee) aa WHERE rnk = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN( SELECT SALARY FROM (SELECT DISTINCT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) AS A FROM EMPLOYEE) AS SAL WHERE A = N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN RETURN( select max(Salary) from Employee e1 where N-1 = (select count(distinct Salary) from Employee e2 where e2.Salary > e1.Salary) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET @i = 0; RETURN ( select ( select Salary FROM ( select Salary FROM employee GROUP by Salary ORDER BY Salary DESC ) as Salaries WHERE (@i:= @i+1) = N ) as SecondHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET @i = 0; RETURN ( select ( select Salary from ( select Salary from Employee group by Salary order by Salary desc ) as Salaries where (@i:=@i+1) = N ) as SecondHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( SELECT ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( SELECT DISTINCT Salary as getNthHighestSalary FROM Employee ORDER BY Salary DESC LIMIT N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( SELECT IF(ISNULL(salary), null, salary) AS getNthHighestSalary FROM employee GROUP BY salary ORDER BY salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( SELECT IFNULL(( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N),NULL) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( SELECT( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( select Distinct Salary from Employee order by Salary Desc limit N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN ( select distinct Salary as 'getNthHighestSalary' from Employee order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N - 1; RETURN (SELECT DISTINCT Salary FROM Employee ORDER BY 1 DESC LIMIT N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N -1; RETURN ( SELECT DISTINCT Salary AS 'getNthHighestSalary' FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N -1; RETURN ( SELECT DISTINCT Salary AS 'getNthHighestSalary' FROM Employee ORDER BY Salary DESC LIMIT N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N -1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N -1; RETURN ( SELECT DISTINCT Salary From Employee GROUP BY Salary ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N), NULL ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N) as Salary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT (Salary) FROM Employee ORDER BY Salary DESC LIMIT N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT Salary AS 'getNthHighestSalary' FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT Salary FROM EMPLOYEE ORDER BY Salary Desc LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY SALARY DESC LIMIT N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT salary FROM employee e ORDER BY salary DESC LIMIT N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT(IFNULL(salary, NULL)) from Employee order by salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT DISTINCT(Salary) AS getNthHighestSalary FROM Employee ORDER BY Salary DESC LIMIT N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N) , NULL) AS n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N), NULL ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N,1), NULL) AS "getNthHighestSalary(2)" ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT IFNULL(( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ), NULL) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( SELECT distinct Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( Select ( Select Distinct(Salary) From Employee Order By Salary DESC Limit 1 OFFSET N) As getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( select distinct salary from employee order by salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( select distinct(Salary) from Employee order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( select distinct(Salary) from Employee order by Salary desc limit N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N = N-1; RETURN ( select salary from ( select distinct Salary from Employee order by Salary desc limit 1 offset N ) temp ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N= N-1; RETURN ( Select DISTINCT Salary from Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N= N-1; RETURN ( select distinct salary from Employee order by salary desc limit 1 Offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT DISTINCT SALARY FROM Employee ORDER BY SALARY DESC LIMIT N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT DISTINCT(SALARY) FROM EMPLOYEE ORDER BY SALARY DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N), NULL) AS getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N),null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT Salary FROM Employee GROUP BY Salary ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT distinct Salary FROM Employee ORDER by Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT ifnull((SELECT DISTINCT salary FROM Employee ORDER BY salary desc LIMIT 1 OFFSET N), null) FROM Employee LIMIT 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( SELECT salary FROM employee GROUP BY salary ORDER BY salary desc LIMIT N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N=N-1; RETURN ( select distinct(salary) from employee order by salary desc limit N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET n = N-1; RETURN ( SELECT Distinct salary from Employee order by salary desc limit 1 offset n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET n= n-1; RETURN ( select (select distinct salary from Employee order by salary desc limit 1 offset N) as SecondHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Set N = N -1; RETURN ( select distinct Salary from Employee order by Salary desc limit N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Set N= N-1 ; RETURN ( Select Distinct Salary from Employee order by Salary DESC limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Set N=N-1; RETURN ( Select Distinct Salary from Employee Order By Salary Desc Limit 1 Offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN Set N=N-1; RETURN ( select distinct Salary from Employee order by salary desc limit N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare M INT; set M=N-1; RETURN ( select distinct salary from employee order by salary desc limit 1 offset M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare M INT; set M=N-1; RETURN ( select distinct salary from employee order by salary desc limit M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare M int; set M = N - 1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset M ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare M int; set M = N-1; RETURN ( select distinct salary from Employee order by salary desc limit M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare M int; set M = N-1; RETURN ( select distinct salary from employee order by salary desc limit M, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare i int; set i = n-1; RETURN ( select distinct salary from employee order by salary desc limit 1 offset i ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare m int; set m = N-1; RETURN ( select (select distinct Salary from Employee order by Salary desc limit m,1) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare m int; set m = n - 1; RETURN ( select distinct salary from employee order by salary desc limit m, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare m int; set m = n -1; RETURN ( SELECT distinct Salary from Employee e order by salary desc limit m, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare m int; set m=N-1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset m); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare m int; set m=N-1; RETURN ( select ifnull((select distinct Salary from Employee order by Salary desc limit 1 offset m),null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare m int; set m=n-1; RETURN ( select distinct salary from employee order by salary desc limit m,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare o INT; if (select count(distinct(salary)) from employee) >= N then set o = (select distinct(salary) from (select salary, dense_rank() over(order by salary desc) as row_num from employee) as ordered where row_num = N); end if; return o; END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare off int; set off = N - 1; RETURN ( select distinct e.Salary from Employee e order by Salary desc limit 1 offset off ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare p int; set p=N-1; RETURN ( select distinct salary as getNthHighestSalary from Employee order by salary desc limit 1 offset p ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare salary int; with SalaryRankCTE as ( select Employee.Salary, dense_rank() over (order by Employee.Salary desc) as SalaryRank from Employee ) select distinct SalaryRankCTE.Salary into salary from SalaryRankCTE where SalaryRankCTE.SalaryRank = N; return(salary); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare starter int; set starter = N-1; RETURN(IFNULL( (select distinct Salary from Employee order by Salary desc limit starter, 1), NULL)); end
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare x INT; set x = N-1; RETURN ( select distinct salary as getNthHighestSalary from Employee order by salary desc limit 1 offset x ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare x int; set x=N-1; RETURN ( (SELECT DISTINCT Salary from Employee ORDER BY Salary DESC LIMIT 1 OFFSET x ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN declare x int; set x=N-1; RETURN ( SELECT IFNULL( (SELECT DISTINCT Salary from Employee ORDER BY Salary DESC LIMIT 1 OFFSET x ) , null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set @rowNo:=0; set @myoffset := N; RETURN ( select IFNULL((select DD.Salary from (select (@rowNo:=@rowNo+1) rowId, D.Salary from ((select @rowNo:=0) as A, (select distinct(Salary) Salary from Employee order by Salary desc) as D)) as DD where rowId = N), NULL) getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N - 1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N - 1; RETURN ( select distinct Salary from Employee order by Salary desc limit N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N - 1; RETURN ( select distinct salary as getNthHighestSalary from employee order by salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N - 1; RETURN ( select ifnull((select distinct Salary from Employee order by Salary desc limit N, 1), null) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N -1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( SELECT (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N) AS getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary Desc LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( SELECT DISTINCT Salary from Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( SELECT distinct(Salary) from Employee ORDER BY Salary DESC LIMIT N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( Select Distinct salary from Employee Order by salary DESC Limit 1 Offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( select ( select distinct salary from employee order by salary desc limit 1 offset N) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( select DISTINCT Salary AS 'getNthHighestSalary' from Employee order by Salary desc limit 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( select IFNULL((select distinct salary from employee order by salary desc limit 1 offset N),null) as `getNthHighestSalary(N)` ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N = N-1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N =N-1; RETURN ( select distinct salary from employee order by salary desc limit N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N= N-1; RETURN ( select distinct Salary from Employee ORDER BY Salary DESC limit N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( select distinct Salary from Employee Order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( select distinct Salary from Employee order by Salary desc limit N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( select distinct e.Salary from Employee e order by Salary Desc limit N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( select distinct salary from employee order by salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( select distinct salary from employee order by salary desc limit N,1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( select distinct(Salary) from Employee order by Salary desc limit 1 offset N ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=N-1; RETURN ( select ifnull( (select distinct Salary from Employee order by Salary DESC Limit 1 offset N ),null) as getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set N=n-1; RETURN ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1 ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set n = n -1; RETURN ( select distinct salary from employee order by salary desc limit 1 offset n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set n = n-1; RETURN ( select distinct salary from employee order by salary desc limit 1 offset n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set n =n-1; RETURN ( select ( select distinct Salary from Employee order by Salary desc limit 1 offset n) as getNthHighestSalary ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set n=n-1; RETURN ( select distinct Salary from Employee order by Salary desc limit 1 offset n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set n=n-1; RETURN ( select distinct salary from employee order by salary desc limit 1 offset n ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN set n=n-1; RETURN ( select max(salary) from employee where salary <= ( select distinct salary from employee order by salary desc limit 1 offset n ) ); END
CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT return ( select max(Salary) from ( select Id, Salary, dense_rank() over (order by Salary desc) as SalaryRank from Employee ) Tmp where SalaryRank = N group by SalaryRank )
create function getNthHighestSalary (N int) returns INT BEGIN Return( select distinct Salary from ( select Salary, dense_rank() over(order by Salary desc) as ranks from Employee) t1 where ranks=N); END
create function getNthHighestSalary(n int) returns int begin set n = n - 1; return ( select distinct salary from employee order by salary desc limit n, 1 ); end
create function getNthHighestSalary(n int) returns int begin set n = n-1; return( select distinct Salary from Employee order by Salary desc limit 1 offset n ); end
