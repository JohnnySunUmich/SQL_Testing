SELECT A.user_id AS seller_id, CASE WHEN A.favorite_brand = (SELECT C.item_brand FROM Orders B LEFT JOIN Items C ON B.item_id = C.item_id WHERE A.user_id = B.seller_id ORDER BY order_date LIMIT 1 OFFSET 1 ) THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users A
SELECT T1.user_id as seller_id, CASE WHEN T3.item_brand = T1.favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users T1 LEFT JOIN ( SELECT A.order_id, A.item_id, A.seller_id FROM Orders A LEFT JOIN Orders B ON A.seller_id = B.seller_id AND A.order_date >= B.order_date GROUP BY A.order_id HAVING COUNT(DISTINCT B.order_date) =2) T2 ON T1.user_id = T2.seller_id LEFT JOIN Items T3 ON T2.item_id = T3.item_id ORDER BY T1.user_id
SELECT U.user_id AS seller_id, CASE WHEN U.favorite_brand = Second.item_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users U LEFT JOIN ( SELECT * FROM ( SELECT O.item_id, O.seller_id, RANK()OVER(PARTITION BY O.seller_id ORDER BY DATE(O.order_date)) AS rank_sold_items, I.item_brand FROM Orders O LEFT JOIN Items I ON O.item_id = I.item_id ) Sub WHERE Sub.rank_sold_items = 2 ) Second ON U.user_id = Second.seller_id
SELECT Users.user_id AS seller_id, (CASE WHEN a.same_or_no = 1 AND a.n_sale = 2 THEN 'yes' ELSE 'no' END) AS 2nd_item_fav_brand FROM Users LEFT JOIN ( SELECT seller_id,n_sale, same_or_no FROM ( SELECT o.order_id, o.order_date, o.item_id, I.item_brand, sell.user_id AS seller_id, sell.favorite_brand AS seller_fav_brand, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date) AS n_sale, (CASE WHEN item_brand = sell.favorite_brand THEN 1 ELSE 0 END) AS same_or_no FROM Orders o LEFT JOIN Items I ON o.item_id = I.item_id JOIN Users sell ON o.seller_id = sell.user_id ) a WHERE n_sale = 2 ) a ON Users.user_id = a.seller_id
SELECT Users.user_id AS seller_id, IF(item_brand=favorite_brand, 'yes', 'no') AS 2nd_item_fav_brand FROM Users LEFT JOIN (SELECT seller_id, item_id, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date) AS ranking FROM Orders) A ON A.seller_id = Users.user_id AND A.ranking = 2 LEFT JOIN Items ON A.item_id = Items.item_id
SELECT b.user_id as seller_id, IF(t2.item_brand = B.favorite_brand, 'yes','no') AS 2nd_item_fav_brand FROM( SELECT seller_id, item_id, order_date, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) as r FROM Orders ) t1 LEFT JOIN Items t2 ON t1.item_id = t2.item_id RIGHT JOIN Users B ON t1.seller_id = B.user_id AND t1.r = 2
SELECT seller_id, CASE WHEN SUM(2nd) = 1 THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM ( SELECT seller_id, CASE WHEN ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date)=2 AND favorite_brand = item_brand THEN 1 ELSE 0 END AS 2nd FROM Orders o INNER JOIN Users u ON o.seller_id = u.user_id INNER JOIN Items i ON o.item_id = i.item_id ) sub GROUP BY seller_id UNION ALL SELECT user_id AS seller_id, 'no' AS 2nd_item_fav_brand FROM Users WHERE user_id NOT IN (SELECT seller_id FROM Orders)
SELECT u.user_id AS seller_id ,CASE WHEN MAX(CASE WHEN t.order_date IS NOT NULL AND u.favorite_brand = i.item_brand THEN 1 ELSE 0 END) = 1 THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users u LEFT JOIN Orders o ON u.user_id = o.seller_id LEFT JOIN Items i ON o.item_id = i.item_id LEFT JOIN ( SELECT o1.seller_id ,o1.order_date FROM Orders o1, Orders o2 WHERE o1.seller_id = o2.seller_id AND o1.order_date >= o2.order_date GROUP BY o1.seller_id, o1.order_date HAVING COUNT(o2.order_date) = 2 ) t ON o.seller_id = t.seller_id AND o.order_date = t.order_date GROUP BY u.user_id
SELECT u.user_id AS seller_id ,CASE WHEN MAX(CASE WHEN t.seller_id IS NOT NULL AND u.favorite_brand = i.item_brand THEN 1 ELSE 0 END) = 1 THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users u LEFT JOIN ( SELECT o1.seller_id ,o1.item_id FROM Orders o1, Orders o2 WHERE o1.seller_id = o2.seller_id AND o1.order_date >= o2.order_date GROUP BY o1.seller_id, o1.order_date, o1.item_id HAVING COUNT(o2.order_date) = 2 ) t ON u.user_id = t.seller_id LEFT JOIN Items i ON t.item_id = i.item_id GROUP BY u.user_id
SELECT u.user_id AS seller_id, CASE WHEN b.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END AS '2nd_item_fav_brand' FROM (SELECT seller_id, item_brand FROM (SELECT DISTINCT seller_id, NTH_VALUE(item_id, 2) OVER(PARTITION BY seller_id ORDER BY order_date RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS second_item FROM Orders) a JOIN Items i ON a.second_item = i.item_id) b RIGHT JOIN Users u ON user_id = seller_id
SELECT u.user_id AS seller_id, CASE WHEN i.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users u LEFT JOIN ( SELECT *, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS sale_rnk FROM Orders) o ON u.user_id = o.seller_id AND o.sale_rnk=2 LEFT JOIN Items i ON o.item_id = i.item_id ORDER BY 1
SELECT u.user_id AS seller_id, CASE WHEN i.item_brand=u.favorite_brand THEN "yes" ELSE "no" END AS 2nd_item_fav_brand FROM Users u LEFT JOIN ( SELECT seller_id, item_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS item_pos FROM Orders) t ON u.user_id=t.seller_id AND t.item_pos=2 LEFT JOIN Items i ON i.item_id=t.item_id
SELECT u.user_id AS seller_id, CASE WHEN item_brand = favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM users u LEFT JOIN ( SELECT o1.seller_id, o1.order_date, i.item_brand FROM orders o1 INNER JOIN orders o2 ON o1.seller_id = o2.seller_id AND o1.order_date > o2.order_date INNER JOIN items i ON o1.item_id = i.item_id GROUP BY o1.seller_id, o1.order_date, i.item_brand HAVING COUNT(o2.order_date) = 1 ) o ON u.user_id = o.seller_id
SELECT u.user_id AS seller_id, CASE WHEN m.item_brand=m.favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM users AS u LEFT JOIN( SELECT u.user_id, o.order_date, i.item_brand,u.favorite_brand, DENSE_RANK()OVER(PARTITION BY u.user_id ORDER BY o.order_date) AS orderid FROM users AS u LEFT JOIN orders AS o ON u.user_id = o.seller_id LEFT JOIN Items AS i ON o.item_id=i.item_id ) m ON u.user_id=m.user_id and m.orderid=2
SELECT u.user_id AS seller_id, CASE WHEN u.favorite_brand=t2.item_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM users u LEFT JOIN (SELECT seller_id, item_brand FROM (SELECT o.seller_id, i.item_brand, RANK()OVER(PARTITION BY o.seller_id ORDER BY o.order_date) AS ranking FROM orders o JOIN items i ON o.item_id=i.item_id) t1 WHERE ranking=2) t2 ON u.user_id=t2.seller_id
SELECT u.user_id AS seller_id, IF(u.favorite_brand = t2.item_brand, 'yes', 'no') AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT t1.seller_id, t1.item_brand FROM (SELECT o.seller_id, o.item_id, o.order_date, RANK() OVER (PARTITION BY o.seller_id ORDER BY o.order_date) AS num, i.item_brand FROM Orders o JOIN Items i ON o.item_id = i.item_id ) t1 WHERE t1.num = 2 ) t2 ON u.user_id = t2.seller_id
SELECT u.user_id AS seller_id, IF(u.favorite_brand = t2.item_brand, 'yes', 'no') AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT t1.seller_id, t1.item_brand FROM (SELECT o.seller_id, o.item_id, o.order_date, RANK() OVER (PARTITION BY o.seller_id ORDER BY o.order_date) AS num, i.item_brand FROM Orders o JOIN Items i ON o.item_id = i.item_id) t1 WHERE t1.num = 2) t2 ON u.user_id = t2.seller_id
SELECT u.user_id as seller_id, (CASE WHEN favorite_brand = item_brand THEN 'yes' ELSE 'no' END) as 2nd_item_fav_brand FROM users u LEFT JOIN (SELECT seller_id, item_brand FROM (SELECT seller_id, item_brand, rank()over(partition by seller_id order by order_date) as r FROM orders o JOIN items i ON o.item_id = i.item_id) a WHERE r = 2) b ON u.user_id = b.seller_id
SELECT u.user_id as seller_id, (case when i.item_brand=u.favorite_brand then "yes" else "no" end) as 2nd_item_fav_brand FROM ( select item_id,seller_id from ( select item_id,seller_id,rank() over(partition by seller_id order by order_date) row_num from orders) o where row_num=2) t RIGHT JOIN Users u on t.seller_id=u.user_id LEFT JOIN Items i on t.item_id=i.item_id order by 1
SELECT u.user_id as seller_id, CASE WHEN o.item_brand=u.favorite_brand THEN 'yes' ELSE 'no' END as 2nd_item_fav_brand FROM Users as u LEFT JOIN( SELECT o.seller_id, i.item_id,i.item_brand, DENSE_RANK() OVER(PARTITION BY o.seller_id ORDER BY o.order_date ) AS sellrank, COUNT(o.order_id) OVER(PARTITION BY o.seller_id) AS cnt FROM Orders as o JOIN Items as i using (item_id) )o ON o.seller_id=u.user_id and ( o.sellrank=2 )
SELECT u.user_id as seller_id, CASE WHEN u.favorite_brand = s.brand THEN "yes" ELSE "no" END AS 2nd_item_fav_brand FROM Users as u LEFT JOIN( SELECT o.seller_id,i.item_brand as brand, DENSE_RANK()OVER(PARTITION BY o.seller_id ORDER BY order_date) AS saleid FROM Orders AS o JOIN Items AS i ON o.item_id=i.item_id )s ON u.user_id=s.seller_id and s.saleid=2
SELECT u.user_id seller_id, (CASE WHEN C.favorite_brand IS NULL THEN 'no' ELSE 'yes' END) 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT * FROM (SELECT U.user_id, U.favorite_brand, A.order_date, A.item_brand, ROW_NUMBER() OVER (PARTITION BY U.user_id ORDER BY A.order_date) R FROM Users U LEFT JOIN (SELECT O.seller_id, O.order_date, I.item_brand FROM Orders O LEFT JOIN Items I ON O.item_id = I.item_id) A ON U.user_id = A.seller_id) B WHERE B.favorite_brand = B.item_brand AND B.R = 2) C ON u.user_id = C.user_id
SELECT u.user_id seller_id, CASE WHEN t.favorite_brand = t.item_brand THEN 'yes' ELSE 'no' END 2nd_item_fav_brand FROM users u LEFT JOIN ( SELECT u.user_id, u.favorite_brand, i.item_brand, RANK() OVER (PARTITION BY u.user_id ORDER BY o.order_date) date_rank FROM users u LEFT JOIN orders o ON u.user_id = o.seller_id LEFT JOIN items i ON o.item_id = i.item_id ) t ON u.user_id = t.user_id AND t.date_rank = 2
SELECT u.user_id seller_id, IF(t.item_id IS NULL,'no',IF(favorite_brand = item_brand,'yes','no')) 2nd_item_fav_brand FROM Users u LEFT JOIN ( SELECT seller_id, item_id FROM ( SELECT seller_id, item_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date ASC) rnk FROM Orders ) t WHERE rnk = 2 ) t ON u.user_id = t.seller_id LEFT JOIN Items i ON t.item_id = i.item_id
SELECT user_id AS seller_id , (CASE WHEN favorite_brand=item_brand THEN "yes" ELSE "no" END) AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT seller_id,item_id FROM (SELECT seller_id,item_id,RANK()OVER(PARTITION BY seller_id ORDER BY order_date) AS sell_order FROM Orders) AS temp WHERE sell_order=2) AS o ON u.user_id=o.seller_id LEFT JOIN Items i ON o.item_id =i.item_id ORDER BY seller_id
SELECT user_id AS seller_id , IFNULL((CASE WHEN favorite_brand=item_brand THEN "yes" ELSE "no" END),"no") AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT seller_id,item_id FROM (SELECT seller_id,item_id,RANK()OVER(PARTITION BY seller_id ORDER BY order_date) AS sell_order FROM Orders) AS temp WHERE sell_order=2) AS o ON u.user_id=o.seller_id LEFT JOIN Items i ON o.item_id =i.item_id ORDER BY seller_id
SELECT user_id AS seller_id, (CASE WHEN favorite_brand = ( SELECT i.item_brand FROM Orders o LEFT JOIN Items i ON i.item_id = o.item_id WHERE o.seller_id = u.user_id ORDER BY o.order_date LIMIT 1, 1 ) THEN 'yes' ELSE 'no' END ) AS "2nd_item_fav_brand" FROM Users u
SELECT user_id AS seller_id, (CASE WHEN favorite_brand = (SELECT i.item_brand FROM Orders o LEFT JOIN Items i ON o.item_id = i.item_id WHERE o.seller_id = u.user_id ORDER BY order_date LIMIT 1 OFFSET 1) THEN "yes" ELSE "no" END) AS `2nd_item_fav_brand` FROM Users u
SELECT user_id AS seller_id, (CASE WHEN item_brand = favorite_brand THEN 'yes' ELSE 'no' END) AS 2nd_item_fav_brand FROM Users LEFT JOIN (SELECT seller_id, item_brand, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS rk FROM Orders o JOIN Items i ON o.item_id = i.item_id) tmp ON user_id = seller_id AND rk = 2
SELECT user_id AS seller_id, CASE WHEN i.item_brand=u.favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT seller_id, item_id FROM Orders o1 WHERE 1 = (SELECT COUNT(order_id) FROM Orders o2 WHERE o1.seller_id=o2.seller_id AND o1.order_date > o2.order_date)) AS temp ON u.user_id=temp.seller_id LEFT JOIN Items i ON i.item_id=temp.item_id ORDER BY u.user_id
SELECT user_id AS seller_id, CASE WHEN item_brand = favorite_brand AND sales >=2 THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM (SELECT user_id, favorite_brand, COALESCE(item_id,0) as item_id, COALESCE(RANK() OVER(PARTITION BY user_id ORDER BY order_date),1) AS rk, COUNT(user_id) OVER(PARTITION BY user_id) AS sales FROM Users a LEFT JOIN Orders b ON a.user_id = b.seller_id)x LEFT JOIN Items y ON x.item_id= y.item_id WHERE rk =2 OR (rk=1 AND sales <2)
SELECT user_id AS seller_id, CASE WHEN item_brand = favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM ( SELECT u.user_id, o.item_id, ROW_NUMBER() OVER (PARTITION BY o.seller_id ORDER BY order_date) AS date_rank, i.item_brand, u.favorite_brand FROM orders o JOIN items i ON o.item_id = i.item_id RIGHT JOIN users u ON o.seller_id = u.user_id ) t WHERE date_rank = 2 UNION SELECT u.user_id AS seller_id, 'no' AS 2nd_item_fav_brand FROM users u LEFT JOIN orders o ON u.user_id = o.seller_id GROUP BY u.user_id HAVING COUNT(*) < 2 ORDER BY 1
SELECT user_id AS seller_id, CASE WHEN item_brand = favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT seller_id, item_brand, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS rnk FROM Orders o JOIN Items i ON o.item_id = i.item_id) a ON a.seller_id=u.user_id AND rnk=2
SELECT user_id AS seller_id, IF (favorite_brand = ( SELECT item_brand FROM ORDERs o LEFT JOIN Items i ON o.item_id = i.item_id WHERE o.seller_id = u.user_id ORDER BY order_date LIMIT 1 OFFSET 1 ), 'yes', 'no') AS 2nd_item_fav_brand FROM Users u
SELECT user_id AS seller_id, IFNULL(2nd_item_fav_brand, 'no') AS 2nd_item_fav_brand FROM Users u0 LEFT JOIN (SELECT seller_id, IF(favorite_brand = item_brand, 'yes', 'no') AS 2nd_item_fav_brand FROM ( SELECT *, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS days FROM Users u LEFT JOIN Orders o ON o.seller_id = u.user_id LEFT JOIN Items i USING (item_id) WHERE order_date > join_date ) t WHERE t.days = 2 ) t1 ON u0.user_id = t1.seller_id
SELECT user_id AS seller_id, IFNULL(2nd_item_fav_brand, 'no') AS 2nd_item_fav_brand FROM Users u0 LEFT JOIN (SELECT seller_id, IF(favorite_brand = item_brand, 'yes', 'no') AS 2nd_item_fav_brand FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date) AS days FROM Users u LEFT JOIN Orders o ON o.seller_id = u.user_id LEFT JOIN Items i USING (item_id) WHERE order_date > join_date ) t WHERE t.days = 2 ) t1 ON u0.user_id = t1.seller_id
SELECT user_id AS seller_id, IFNULL(IF(second_sold = favorite_brand, 'yes','no'), 'no') AS 2nd_item_fav_brand FROM (SELECT DISTINCT seller_id, NTH_VALUE(item_brand, 2) OVER(PARTITION BY seller_id ORDER BY order_date RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS second_sold FROM Orders o LEFT JOIN Items i ON i.item_id = o.item_id) a RIGHT JOIN Users u ON seller_id = user_id
SELECT user_id as seller_id, if(i.item_brand = u.favorite_brand, "yes", "no") as 2nd_item_fav_brand from Users u left join (SELECT o1.seller_id, o1.item_id, o1.order_date FROM Orders o1 JOIN Orders o2 ON o1.seller_id = o2.seller_id AND o1.order_date > o2.order_date GROUP BY o1.seller_id, o1.order_date HAVING count(o1.order_id) = 1) t ON u.user_id = t.seller_id LEFT JOIN Items i ON t.item_id = i.item_id ORDER BY u.user_id
Select Users.user_id as seller_id, Case When favorite_brand = item_brand Then 'yes' Else 'no' End As 2nd_item_fav_brand From Users Left Join (Select * From (Select seller_id, RANK() Over (Partition By seller_id Order By order_date) as Sell_Idx, item_brand From Orders Left Join Items On Orders.item_id = Items.item_id ) as Orders_1 Where Sell_Idx = 2) as Orders_2 On Users.user_id = Orders_2.seller_id
Select user_id as seller_id, If((Select item_brand From Items Where item_id = tmp.item_id) = Users.favorite_brand, "yes", "no") as "2nd_item_fav_brand" From Users Left Join (Select * From (Select *, Rank() Over(Partition By seller_id Order By order_date) as position From Orders) tmp2 Where position = 2) tmp On Users.user_id = tmp.seller_id
WITH 2nd_item_fav_sold AS (SELECT seller_id, item_id FROM (SELECT seller_id, item_id, RANK() OVER(PARTITION BY seller_id order by order_date ASC) rnk FROM Orders) f WHERE rnk = 2) SELECT u.user_id as seller_id, if(favorite_brand=i.item_brand, "yes", "no") as 2nd_item_fav_brand FROM users u left join 2nd_item_fav_sold f on f.seller_id = u.user_id left join items i on i.item_id = f.item_id
WITH 2nd_sales AS ( SELECT t.seller_id, CASE WHEN u.favorite_brand=i.item_brand THEN 'yes' ELSE 'no' END as 2nd_item_fav_brand FROM (SELECT order_id, seller_id, item_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) rk FROM Orders o) t JOIN Users u ON t.seller_id=u.user_id JOIN Items i ON i.item_id = t.item_id WHERE rk=2) SELECT u.user_id AS seller_id, IFNULL(s.2nd_item_fav_brand, 'no') AS 2nd_item_fav_brand FROM Users u LEFT JOIN 2nd_sales s ON s.seller_id=u.user_id
WITH 2nd_sales AS ( SELECT t.seller_id, CASE WHEN u.favorite_brand=i.item_brand THEN 'yes' ELSE 'no' END as 2nd_item_fav_brand FROM (SELECT order_id, seller_id, item_id, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date) rn FROM Orders o) t JOIN Users u ON t.seller_id=u.user_id JOIN Items i ON i.item_id = t.item_id WHERE rn=2) SELECT u.user_id AS seller_id, IFNULL(s.2nd_item_fav_brand, 'no') AS 2nd_item_fav_brand FROM Users u LEFT JOIN 2nd_sales s ON s.seller_id=u.user_id
WITH A AS ( SELECT seller_id, item_id, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date) AS rks FROM ORDERS), B AS ( SELECT seller_id, item_id FROM A WHERE rks = 2), C AS ( SELECT B.seller_id, item_brand FROM B JOIN Items ON B.item_id = Items.item_id) SELECT user_id AS seller_id, (CASE WHEN item_brand = favorite_brand THEN 'yes' ELSE 'no' END) AS 2nd_item_fav_brand FROM Users LEFT JOIN C ON Users.user_id = C.seller_id
WITH CTE AS ( SELECT u.user_id, u.favorite_brand, o.order_id, o.order_date, o.item_id, RANK() OVER ( PARTITION BY o.seller_id ORDER BY o.order_date ASC ) AS order_sold FROM Users u LEFT JOIN ORDERS o ON u.user_id = o.seller_id UNION SELECT u.user_id, u.favorite_brand, o.order_id, o.order_date, o.item_id, RANK() OVER ( PARTITION BY o.seller_id ORDER BY o.order_date ASC ) AS order_sold FROM Users u RIGHT JOIN ORDERS o ON u.user_id = o.seller_id ), CTE2 AS ( SELECT CTE.user_id, CTE.favorite_brand, CTE.order_id, CTE.order_date, CTE.item_id, CTE.order_sold, i.item_brand FROM CTE LEFT JOIN Items i ON CTE.item_id = i.item_id ), CTE3 AS ( SELECT a.user_id AS seller_id, (CASE WHEN a.order_id IS NOT NULL AND a.favorite_brand = a.item_brand THEN 'yes' ELSE 'no' END) AS `2nd_item_fav_brand` FROM CTE2 a WHERE a.order_sold = 2 ) SELECT u.user_id AS seller_id, (CASE WHEN b.`2nd_item_fav_brand` IS NULL THEN 'no' ELSE b.`2nd_item_fav_brand` END) AS "2nd_item_fav_brand" FROM Users u LEFT JOIN CTE3 b ON u.user_id = b.seller_id ORDER BY u.user_id ASC
WITH CTE AS ( Select * from ( SELECT B.Seller_Id as user_id ,C.item_brand, row_number() OVER( Partition by B.Seller_Id Order by B.order_date) as Order_Seq From Orders B Left Join Items C on B.item_id = C.item_id ) Data_set Where Order_Seq = 2 ) Select Users.User_id as seller_id, IFNULL(IF((CTE.item_brand = Users.favorite_brand) AND item_brand is not null ,"yes","no"),"no")AS `2nd_item_fav_brand` From Users Left join CTE ON Users.user_id =CTE.user_id
WITH CTE AS ( Select * from ( SELECT B.Seller_Id as user_id ,C.item_brand, row_number() OVER( Partition by B.Seller_Id Order by order_date) as Order_Seq From Orders B Left Join Items C on B.item_id = C.item_id ) Data_set Where Order_Seq = 2 ) Select Users.User_id as seller_id, IFNULL(IF((CTE.item_brand = Users.favorite_brand) AND item_brand is not null ,"yes","no"),"no")AS `2nd_item_fav_brand` From Users Left join CTE ON Users.user_id =CTE.user_id
WITH CTE AS ( Select * from ( SELECT a.user_id ,item_brand,favorite_brand, IF(item_brand = favorite_brand, "yes","no") as Fav_brand, row_number() OVER( Partition by B.Seller_Id Order by order_date) as Order_Seq From Users A Left Join Orders B ON A.user_id = B.Seller_Id Left Join Items C on B.item_id = C.item_id ) Data_set Where Order_Seq = 2 ) Select Users.User_id as seller_id, IFNULL(IF((item_brand = CTE.favorite_brand) AND item_brand is not null ,"yes","no"),"no")AS `2nd_item_fav_brand` From Users Left join CTE ON Users.user_id =CTE.user_id
WITH CTE AS ( Select * from ( SELECT b.Seller_Id as user_id ,item_brand, row_number() OVER( Partition by B.Seller_Id Order by order_date) as Order_Seq From Orders B Left Join Items C on B.item_id = C.item_id ) Data_set Where Order_Seq = 2 ) Select Users.User_id as seller_id, IFNULL(IF((CTE.item_brand = Users.favorite_brand) AND item_brand is not null ,"yes","no"),"no")AS `2nd_item_fav_brand` From Users Left join CTE ON Users.user_id =CTE.user_id
WITH CTE AS ( Select seller_id,item_brand FROM( Select seller_id, item_brand,rank() over(PARTITION BY seller_id order by order_date) as rnk from orders o join items i on o.item_id = i.item_id )T where rnk =2 ) Select distinct seller_id, CASE WHEN favorite_brand = brand then 'yes' else 'no' end as 2nd_item_fav_brand from ( Select user_id as seller_id,favorite_brand,IFNULL(CTE.item_brand,0) as brand from users u left join CTE on u.user_id = CTE.seller_id ) D
WITH CTE AS ( select A.seller_id,'yes' as 2nd_item_fav_brand from ( select item_id,seller_id,order_date,rank() OVER(partition by seller_id order by order_date) as rk from Orders ) A JOIN Items ON Items.item_id = A.item_id JOIN Users ON Users.user_id=A.seller_id where Users.favorite_brand=Items.item_brand and rk=2) select * from CTE union all select user_id as seller_id,'no' as 2nd_item_fav_brand from Users where user_id not in (select seller_id from CTE)
WITH CTE AS ( select A.seller_id,'yes' as 2nd_item_fav_brand from ( select item_id,seller_id,order_date,rank() OVER(partition by seller_id order by order_date) as rk from Orders ) A JOIN Items ON Items.item_id = A.item_id JOIN Users ON Users.user_id=A.seller_id where Users.favorite_brand=Items.item_brand and rk=2) select Users.user_id as seller_id,CASE WHEN CTE.2nd_item_fav_brand IS NULL THEN 'no' ELSE CTE.2nd_item_fav_brand END as 2nd_item_fav_brand from CTE RIGHT JOIN Users ON CTE.seller_id = Users.user_id
WITH CTE AS (SELECT * FROM (SELECT T2.order_date, T2.item_id, T2.buyer_id, T2.seller_id, T3.item_brand, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) RNK FROM Orders T2 LEFT JOIN Items T3 ON T2.item_id = T3.item_id ) TEMP WHERE RNK = 2) SELECT user_id seller_id, (CASE WHEN favorite_brand = item_brand THEN "yes" else "no" END) 2nd_item_fav_brand FROM Users U LEFT JOIN CTE ON U.user_id = CTE.seller_id
WITH CTE AS (SELECT DISTINCT O.seller_id, NTH_VALUE(O.item_id,2) OVER(PARTITION BY O.seller_id ORDER BY O.order_date) AS 2nd_item FROM Orders O) SELECT DISTINCT U.user_id AS seller_id, CASE WHEN Items.item_brand = U.favorite_brand THEN "yes" ELSE "no" END AS 2nd_item_fav_brand FROM (SELECT * FROM CTE WHERE CTE.2nd_item IS NOT NULL) CTE LEFT JOIN Items ON CTE.2nd_item = Items.Item_id RIGHT JOIN Users U ON CTE.seller_id = U.user_id ORDER BY CTE.seller_id
WITH CTE AS (SELECT T1.user_id, T1.favorite_brand, T2.order_date, T2.item_id, T2.buyer_id, T2.seller_id, T3.item_brand, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) RNK FROM Users T1 LEFT JOIN Orders T2 ON T1.user_id = T2.seller_id LEFT JOIN Items T3 ON T2.item_id = T3.item_id ), yes_table AS (SELECT seller_id FROM CTE WHERE RNK = 2 AND favorite_brand = item_brand) SELECT DISTINCT user_id seller_id, (CASE WHEN user_id IN (SELECT * FROM yes_table) THEN "yes" ELSE "no" END) 2nd_item_fav_brand FROM CTE
WITH CTE AS (SELECT U.USER_ID, ROW_NUMBER() OVER (PARTITION BY U.USER_ID ORDER BY O.ORDER_DATE ASC) AS RN, I.ITEM_BRAND FROM ORDERS O LEFT JOIN USERS U ON O.SELLER_ID=U.USER_ID LEFT JOIN ITEMS I ON O.ITEM_ID=I.ITEM_ID) SELECT U2.USER_ID AS SELLER_ID, (CASE WHEN ITEM_BRAND=FAVORITE_BRAND THEN 'yes' ELSE 'no' END) AS '2nd_item_fav_brand' FROM CTE RIGHT JOIN USERS U2 ON U2.USER_ID = CTE.USER_ID AND RN=2
WITH CTE AS (SELECT a.user_id, a.item_brand FROM (SELECT user_id, i.item_brand, ROW_NUMBER()OVER(PARTITION BY seller_id ORDER BY order_date) as rnk FROM Users u JOIN Orders o ON u.user_id=o.seller_id JOIN Items i ON o.item_id=i.item_id) a WHERE a.rnk=2) SELECT u.user_id as seller_id, CASE WHEN cte.item_brand=u.favorite_brand THEN 'yes' ELSE 'no' END AS '2nd_item_fav_brand' FROM Users u LEFT JOIN CTE ON u.user_id=CTE.user_id
WITH CTE1 AS ( SELECT SELLER_ID, ITEM_ID, RANK() OVER(PARTITION BY SELLER_ID ORDER BY ORDER_DATE) RNK FROM ORDERS ) , CTE2 AS ( SELECT USER_ID, CTE1.ITEM_ID, ITEM_BRAND, FAVORITE_BRAND FROM CTE1 RIGHT JOIN USERS U ON CTE1.SELLER_ID = U.USER_ID AND RNK = 2 LEFT JOIN ITEMS I ON CTE1.ITEM_ID = I.ITEM_ID ) SELECT USER_ID AS SELLER_ID, CASE WHEN ITEM_BRAND = FAVORITE_BRAND THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM CTE2
WITH M AS (SELECT seller_id, item_id FROM (SELECT seller_id, item_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS 'rn' FROM Orders) S WHERE rn = 2) SELECT DISTINCT U.user_id AS 'seller_id', CASE WHEN I.item_brand = U.favorite_brand THEN 'yes' ELSE 'no' END AS '2nd_item_fav_brand' FROM M RIGHT JOIN Users U ON M.seller_id = U.user_id LEFT JOIN Items I ON M.item_id = I.item_id
WITH OrderRanking AS (SELECT O.seller_id ,I.item_brand ,RANK() OVER(PARTITION BY seller_id ORDER BY order_date ASC) AS Rk FROM Orders O INNER JOIN Items I ON I.item_id = O.item_id) SELECT U.user_id AS seller_id ,IFNULL(IF(OOR.item_brand = U.favorite_brand,'yes','no'),'no') AS 2nd_item_fav_brand FROM Users U LEFT JOIN OrderRanking OOR ON U.user_id = OOR.seller_id AND Rk = 2
WITH OrderRanking AS (SELECT seller_id ,item_id ,RANK() OVER(PARTITION BY seller_id ORDER BY order_date ASC) AS Rk FROM Orders), SecondOrderBrand AS (SELECT seller_id ,item_brand FROM OrderRanking OdR INNER JOIN Items I ON I.item_id = OdR.item_id WHERE Rk = 2) SELECT U.user_id AS seller_id ,IFNULL(IF(U.favorite_brand = SOB.item_brand,'yes','no'),'no') AS 2nd_item_fav_brand FROM Users U LEFT JOIN SecondOrderBrand SOB ON SOB.seller_id = U.user_id ORDER BY 1 ASC
WITH OrderRanking AS (SELECT seller_id AS user_id ,item_id ,RANK() OVER(PARTITION BY seller_id ORDER BY order_date ASC) AS Rk FROM Orders), UserSecondOrderBrand AS (SELECT ORD.user_id ,I.item_brand FROM OrderRanking ORD INNER JOIN Items I ON I.item_id = ORD.item_id WHERE Rk = 2) SELECT U.user_id AS seller_id ,IFNULL(IF(U.favorite_brand = USOB.item_brand,"yes","no"),"no") AS 2nd_item_fav_brand FROM Users U LEFT JOIN UserSecondOrderBrand USOB ON USOB.user_id = U.user_id ORDER BY 1 ASC
WITH RECURSIVE seller_id AS( SELECT 1 AS seller_id UNION ALL SELECT seller_id + 1 FROM seller_id WHERE (seller_id < (SELECT MAX(seller_id) FROM Orders)) ), CTE AS( SELECT * FROM (SELECT seller_id, item_brand, RANK()OVER(PARTITION BY seller_id ORDER BY order_date) AS ranks FROM Orders JOIN Items ON Orders.item_id = Items.item_id ORDER BY seller_id) AS A WHERE A.ranks = 2 ), FAV AS( SELECT c.seller_id, (SELECT IF(c.item_brand = u.favorite_brand,'yes','no')) AS '2nd_item_fav_brand' FROM CTE c JOIN Users u ON c.seller_id = u.user_id ) SELECT ss.seller_id, IFNULL(f.2nd_item_fav_brand, 'no') AS '2nd_item_fav_brand' FROM seller_id ss LEFT JOIN FAV f ON f.seller_id = ss.seller_id
WITH RankNCount AS ( SELECT u.user_id, u.favorite_brand, RANK() OVER (PARTITION BY u.user_id ORDER BY o.order_date) AS item_sold_rank, COUNT(o.order_id) OVER (PARTITION BY u.user_id) AS item_sold_count, i.item_brand FROM Users u LEFT OUTER JOIN Orders o ON u.user_id = o.seller_id LEFT OUTER JOIN Items i ON o.item_id = i.item_id ) SELECT user_id AS seller_id, CASE WHEN favorite_brand = item_brand THEN "yes" ELSE "no" END AS 2nd_item_fav_brand FROM RankNCount WHERE item_sold_rank = 2 UNION SELECT user_id AS seller_id, "no" AS 2nd_item_fav_brand FROM RankNCount WHERE item_sold_count <= 1
WITH SellerItems AS ( SELECT seller_id, item_id, ROW_NUMBER() OVER(PARTITION BY seller_id ORDER BY order_date) AS order_rank FROM Orders ) SELECT Users.user_id AS seller_id, CASE WHEN Users.favorite_brand = Items.item_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users LEFT JOIN SellerItems ON SellerItems.seller_id = Users.user_id AND SellerItems.order_rank = 2 LEFT JOIN Items ON Items.item_id = SellerItems.item_id WHERE COALESCE(SellerItems.order_rank, 2) = 2
WITH SortedOrder AS ( SELECT u.user_id, o.item_id, item_brand, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) AS 'order_num', u.favorite_brand FROM Orders AS o LEFT JOIN Items AS i ON o.item_id = i.item_id RIGHT JOIN Users AS u ON o.seller_id = u.user_id ) SELECT user_id AS 'seller_id', IFNULL(IF(item_brand = favorite_brand AND order_num = 2, 'yes', 'no'), 'no') AS '2nd_item_fav_brand' FROM SortedOrder WHERE order_num = 2 OR user_id IN (SELECT user_id FROM SortedOrder GROUP BY user_id HAVING COUNT(1) < 2)
WITH T AS ( SELECT * FROM ( SELECT item_id, seller_id, rank() over(partition by seller_id order by order_date asc) as t_stamp FROM Orders O ) tmp WHERE tmp.t_stamp = 2 ) SELECT user_id as seller_id, (CASE WHEN favorite_brand = item_brand THEN 'yes' ELSE 'no' END) as 2nd_item_fav_brand FROM Users U LEFT JOIN T ON U.user_id = T.seller_id LEFT JOIN Items I ON I.item_id = T.item_id ORDER BY seller_id
WITH T AS ( SELECT order_id, order_date, item_id, buyer_id, seller_id, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) AS ranking FROM Orders ) SELECT user_id AS seller_id, CASE WHEN user_id IN ( SELECT seller_id FROM (T JOIN Users ON T.seller_id=Users.user_id) JOIN Items USING(item_id) WHERE ranking=2 AND favorite_brand=item_brand ) THEN 'yes' ELSE 'no' END AS '2nd_item_fav_brand' FROM Users
WITH T AS ( SELECT seller_id, item_id, ROW_NUMBER() OVER(PARTITION BY seller_id ORDER BY order_date) AS order_no FROM Orders ) SELECT a.user_id AS seller_id, CASE WHEN a.favorite_brand = b.item_brand THEN 'yes' ELSE 'no' END AS '2nd_item_fav_brand' FROM Users a LEFT JOIN ( SELECT c.*, d.item_brand FROM T c LEFT JOIN Items d ON c.item_id = d.item_id WHERE c.order_no = 2 ) b ON a.user_id = b.seller_id
WITH T1 As ( select seller_id, item_id, row_number() over (partition by seller_id order by order_date) as row1 from orders ), T2 As (select a.seller_id, a.item_id from T1 a inner join (select a.user_id, a.favorite_brand, b.item_id from users a inner join items b on a.favorite_brand = b.item_brand) b on a.item_id = b.item_id and a.seller_id = b.user_id where a.row1 = 2) select a.user_id as seller_id, case when b.seller_id is null then 'no' else 'yes' end as '2nd_item_fav_brand' from users a left join T2 b on a.user_id = b.seller_id
WITH T1 As ( select t1.seller_id, b.item_brand from (select seller_id, item_id from (select seller_id, item_id, row_number() over(partition by seller_id order by order_date) as row1 from orders) t where row1 = 2) t1 inner join items b on b.item_id = t1.item_id) select a.user_id as seller_id, case when a.favorite_brand = b.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users a left join T1 b on a.user_id = b.seller_id
WITH TEMP AS ( SELECT a.seller_id, a.item_id,b.item_brand, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) AS 'rank' FROM Orders a LEFT JOIN Items b ON a.item_id =b.item_id ) SELECT u.user_id AS seller_id, CASE WHEN u.favorite_brand = b.item_brand THEN "yes" ELSE "no" END AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT * FROM TEMP WHERE TEMP.rank =2) b ON u.user_id=b.seller_id ORDER BY 1
WITH TEMP AS ( SELECT a.seller_id, a.item_id,b.item_brand, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) AS 'rank' FROM Orders a LEFT JOIN Items b ON a.item_id =b.item_id ) SELECT u.user_id AS seller_id, CASE WHEN u.favorite_brand = b.item_brand THEN "yes" WHEN u.favorite_brand != b.item_brand THEN "no" WHEN b.item_brand IS NULL THEN "no" END AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT * FROM TEMP WHERE TEMP.rank =2) b ON u.user_id=b.seller_id ORDER BY 1
WITH UserSales AS (SELECT U.user_id ,(I.item_brand = U.favorite_brand) AS isFavorite ,ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY order_date) AS SaleOrder FROM Users U INNER JOIN Orders O ON U.user_id = O.seller_id INNER JOIN Items I ON I.item_id = O.item_id), SecondSale AS (SELECT user_id ,isFavorite ,SaleOrder FROM UserSales WHERE SaleOrder = 2) SELECT U.user_id AS seller_id ,IF(S.isFavorite = 1,'yes','no') AS 2nd_item_fav_brand FROM Users U LEFT JOIN SecondSale S ON U.user_id = S.user_id
WITH cte AS ( SELECT *, LEAD(item_id,1) OVER (PARTITION BY seller_id ORDER BY order_date ASC) as second_item, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date ASC) as rnk FROM Orders o ORDER BY seller_id DESC) SELECT u.user_id as seller_id, CASE WHEN final.`2nd_item_fav_brand` IS NULL THEN 'no' WHEN final.`2nd_item_fav_brand` ='no' THEN 'no' ELSE 'yes' END AS `2nd_item_fav_brand` FROM Users u LEFT JOIN ( SELECT m.seller_id, CASE WHEN i.item_brand=u.favorite_brand AND i.item_brand IS NOT NULL THEN 'yes' ELSE 'no' END AS `2nd_item_fav_brand` FROM ( SELECT seller_id, second_item FROM cte WHERE rnk =1 ) m LEFT JOIN Items i ON i.item_id = m.second_item LEFT JOIN Users u ON u.user_id = m.seller_id ) final ON u.user_id = final.seller_id
WITH cte AS ( SELECT DISTINCT a.seller_id, a.item_id, i.item_brand FROM (SELECT seller_id, item_id, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date ASC) AS rnk FROM Orders) a JOIN Items i ON a.item_id=i.item_id WHERE a.rnk=2 ) SELECT u.user_id AS seller_id, CASE WHEN cte.item_brand=u.favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users u LEFT JOIN cte ON u.user_id=cte.seller_id
WITH cte AS ( SELECT seller_id, item_brand FROM ( SELECT o.seller_id, i.item_brand, RANK() OVER(PARTITION BY o.seller_id ORDER BY o.order_date) AS "ranking" FROM Orders o LEFT JOIN Items i ON i.item_id = o.item_id ) t WHERE ranking = 2 ) SELECT u.user_id AS "seller_id", CASE WHEN u.favorite_brand = c.item_brand THEN "yes" ELSE "no" END AS "2nd_item_fav_brand" FROM Users u LEFT JOIN cte c ON u.user_id = c.seller_id ORDER BY 1
WITH cte AS ( SELECT seller_id, item_brand FROM ( SELECT o.seller_id, i.item_brand, o.order_date, RANK() OVER(PARTITION BY o.seller_id ORDER BY o.order_date) AS "ranking" FROM Orders o LEFT JOIN Items i ON i.item_id = o.item_id ORDER BY 1, 3 ) t WHERE ranking = 2 ) SELECT u.user_id AS "seller_id", CASE WHEN u.favorite_brand = c.item_brand THEN "yes" ELSE "no" END AS "2nd_item_fav_brand" FROM Users u LEFT JOIN cte c ON u.user_id = c.seller_id ORDER BY 1
WITH cte AS ( SELECT u.user_id, u.favorite_brand, o.item_id, i.item_brand, o.order_date, ROW_NUMBER() OVER (PARTITION BY o.seller_id ORDER BY o.order_date) AS rnk_order FROM Users u JOIN Orders o ON u.user_id = o.seller_id JOIN Items i ON o.item_id = i.item_id ) SELECT u.user_id AS seller_id, IFNULL(CASE WHEN t.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END, 'no') AS `2nd_item_fav_brand` FROM Users u LEFT JOIN cte t ON u.user_id = t.user_id AND rnk_order = 2
WITH cte AS (SELECT u.user_id, favorite_brand, item_brand, ROW_NUMBER() OVER(PARTITION BY u.user_id ORDER BY order_date) AS rk FROM Users u LEFT JOIN Orders o ON u.user_id=o.seller_id LEFT JOIN Items i ON o.item_id=i.item_id ), yes_id AS (SELECT user_id FROM cte WHERE rk=2 AND favorite_brand=item_brand ) SELECT user_id AS seller_id, (CASE WHEN user_id IN (SELECT * FROM yes_id) THEN 'yes' ELSE 'no' END) AS 2nd_item_fav_brand FROM Users
WITH cte AS( SELECT seller_id,item_brand FROM( SELECT a.*,b.item_brand, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS sell_seq FROM Orders a JOIN Items b ON a.item_id = b.item_id ) temp WHERE sell_seq = 2 ) SELECT a.user_id AS seller_id, (CASE WHEN favorite_brand = item_brand THEN 'yes' ELSE 'no' END) AS 2nd_item_fav_brand FROM Users a LEFT JOIN cte b ON a.user_id = b.seller_id
WITH cts AS ( SELECT seller_id, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date ASC) as row_num, item_brand FROM Orders INNER JOIN Items ON Orders.item_id = Items.item_id ) SELECT Users.user_id AS seller_id, IF(IFNULL(COUNT(cts.seller_id),0) = 0, 'no', 'yes') AS 2nd_item_fav_brand FROM Users LEFT OUTER JOIN cts ON Users.user_id = cts.seller_id AND cts.row_num = 2 AND Users.favorite_brand = cts.item_brand GROUP BY Users.user_id
WITH main AS ( SELECT user_id, favorite_brand, RANK() OVER(PARTITION BY user_id ORDER BY order_date) AS ranking, item_brand, COUNT(order_id) OVER(PARTITION BY user_id) AS total FROM Users AS U LEFT JOIN Orders AS O ON user_id = seller_id LEFT JOIN Items AS I ON O.item_id = I.item_id ) SELECT DISTINCT user_id AS seller_id, (CASE WHEN total < 2 THEN "no" WHEN total > 1 AND ranking = 2 AND item_brand = favorite_brand THEN "yes" ELSE "no" END) AS "2nd_item_fav_brand" FROM main WHERE total <2 OR ranking = 2
WITH mega AS (SELECT * FROM (SELECT u.user_id, o.order_date, i.item_brand, RANK() OVER(PARTITION BY u.user_id ORDER BY order_date) AS rnk FROM Users u LEFT JOIN Orders o ON u.user_id=o.seller_id LEFT JOIN Items i ON o.item_id=i.item_id) t WHERE rnk=2) SELECT u.user_id AS seller_id, (CASE WHEN m.item_brand=u.favorite_brand THEN "yes" ELSE "no" END) AS 2nd_item_fav_brand FROM Users u LEFT JOIN mega m ON u.user_id=m.user_id
WITH order_rank as (SELECT seller_id , I.item_brand , ROW_NUmber() OVER (PARTITION BY seller_id ORDER BY order_date ASC) as rn FROM Orders as o JOIN Items as I ON o.item_id = I.item_Id ) SELECT u.user_id as seller_id , (case when u.favorite_brand =ro.item_brand THEN 'yes' ELSE 'no' END) 2nd_item_fav_brand FROM Users as u LEFT JOIN (SELECT seller_id,item_brand FROM order_rank WHERE rn=2) as ro ON ro.seller_id=u.user_id
WITH ranked AS (SELECT seller_id, item_id, rank() over (PARTITION BY seller_id ORDER BY order_date) AS rk FROM Orders), joined_items AS (SELECT a.seller_id, a.item_id, a.rk, b.item_brand FROM ranked a INNER JOIN Items b on a.item_id = b.item_id WHERE rk = 2) SELECT tb1.user_id as seller_id, CASE WHEN tb1.favorite_brand = tb2.item_brand THEN 'yes' ELSE 'no' END AS '2nd_item_fav_brand' FROM Users as tb1 LEFT JOIN joined_items as tb2 ON tb1.user_id = tb2.seller_id
WITH rk AS ( SELECT o.item_id item_id, i.item_brand item_brand, o.seller_id seller_id, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) rk_sold FROM orders o JOIN items i ON o.item_id=i.item_id ), y_fav AS ( SELECT u.user_id seller_id, 'yes' 2nd_item_fav_brand FROM users u JOIN rk WHERE u.user_id=rk.seller_id AND u.favorite_brand=rk.item_brand AND rk.rk_sold=2 ) SELECT seller_id, 2nd_item_fav_brand FROM y_fav UNION SELECT user_id seller_id, 'no' 2nd_item_fav_brand FROM users WHERE user_id NOT IN (SELECT seller_id FROM y_fav)
WITH second_item AS ( SELECT seller_id, item_brand FROM ( SELECT o.seller_id, i.item_brand, ROW_NUMBER() OVER(PARTITION BY seller_id ORDER BY order_date ASC) rn FROM Orders o JOIN items i ON o.item_id = i.item_id ) a WHERE rn = 2 ) SELECT u.user_id seller_id, CASE WHEN u.favorite_brand = s.item_brand THEN 'yes' ELSE 'no' END 2nd_item_fav_brand FROM Users u LEFT JOIN second_item s ON u.user_id = s.seller_id
WITH second_item_sold AS ( SELECT seller_id, item_id FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_DATE ASC) AS row_num FROM orders ) AS orders_ranked WHERE row_num = 2 ), second_item_brand AS ( SELECT seller_id, second_item_sold.item_id, item_brand FROM second_item_sold JOIN items ON second_item_sold.item_id = items.item_id ), compare_brands AS ( SELECT users.user_id, users.favorite_brand, second_item_brand.item_brand FROM users LEFT JOIN second_item_brand ON users.user_id = second_item_brand.seller_id ) SELECT user_id AS seller_id, CASE WHEN favorite_brand = item_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM compare_brands
WITH second_order AS ( SELECT seller_id, item_id FROM (Select Orders.*, RANK() over(PARTITION BY seller_id ORDER BY order_date ASC) as rnk FROM Orders) AS temp_rnk WHERE temp_rnk.rnk = 2 ), second_brand AS ( SELECT so.seller_id, so.item_id, i.item_brand FROM second_order so LEFT JOIN Items i ON so.item_id = i.item_id ) SELECT u.user_id AS seller_id, CASE WHEN (sb.item_brand = u.favorite_brand) THEN 'yes' ELSE 'no' END AS '2nd_item_fav_brand' FROM Users u LEFT JOIN second_brand sb ON sb.seller_id = u.user_id
WITH second_sold AS ( SELECT seller_id,item_id, order_date, RANK() OVER (PARTITION BY seller_id ORDER BY order_date ASC) AS rank_sold FROM Orders ORDER BY seller_id ASC ), fav_brand AS ( SELECT a.seller_id,b.item_brand,c.favorite_brand FROM second_sold a LEFT JOIN items b ON a.item_id = b.item_id JOIN Users c ON a.seller_id = c.user_id WHERE rank_sold = 2 ) SELECT a.user_id as seller_id, CASE WHEN b.item_brand = b.favorite_brand THEN 'yes' WHEN item_brand IS NULL THEN 'no' ELSE 'no' END AS 2nd_item_fav_brand FROM Users a LEFT JOIN fav_brand b ON a.user_id = b.seller_id
WITH seller_info AS( SELECT ts.seller_id, item_id, item_brand FROM( SELECT o.seller_id, o.item_id, i.item_brand, order_date, ROW_NUMBER() OVER(PARTITION BY seller_id ORDER BY order_date) rn FROM orders o JOIN items i ON o.item_id = i.item_id ) ts WHERE rn = 2 ) SELECT u.user_id seller_id , CASE WHEN s.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END 2nd_item_fav_brand FROM users u LEFT JOIN seller_info s ON u.user_id = s.seller_id
WITH seller_order AS ( SELECT O.seller_id, O.item_id, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date) AS row_num FROM Orders AS O ), second_order_item_brand AS ( SELECT SO.seller_id, SO.item_id, I.item_brand FROM seller_order AS SO JOIN Items AS I ON SO.item_id = I.item_id WHERE row_num = 2 ) SELECT U.user_id AS seller_id, CASE WHEN U.favorite_brand = SOIB.item_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users AS U LEFT JOIN second_order_item_brand AS SOIB ON U.user_id = SOIB.seller_id
WITH sellers as ( SELECT u.user_id as seller_id, IFNULL(COUNT(o.order_id),0) as order_count FROM users u LEFT JOIN orders o ON o.seller_id = u.user_id GROUP BY 1 ), second_item as ( SELECT o2.seller_id, o2.item_brand FROM orders o1 INNER JOIN (SELECT seller_id, order_id, i.item_brand, ROW_NUMBER()OVER(PARTITION BY seller_id ORDER BY order_date) as order_row FROM orders ox INNER JOIN items i ON i.item_id = ox.item_id) o2 ON o2.seller_id = o1.seller_id AND o2.order_id = o1.order_id AND order_row = 2 ) SELECT s.seller_id, CASE WHEN si.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM users u LEFT JOIN sellers s ON s.seller_id = u.user_id LEFT JOIN second_item si ON si.seller_id = s.seller_id
WITH sit AS (SELECT o.seller_id, o.item_id, i.item_brand, DENSE_RANK() OVER(PARTITION BY o.seller_id ORDER BY o.order_date) AS dr FROM Orders o JOIN Items i on o.item_id = i.item_id) SELECT u.user_id AS seller_id, IF(s.item_brand = u.favorite_brand, 'yes', 'no') AS 2nd_item_fav_brand FROM (SELECT sit.seller_id, sit.item_id, sit.item_brand FROM sit WHERE sit.dr = 2) s RIGHT JOIN users u on s.seller_id = u.user_id
WITH sold_rank AS ( SELECT seller_id, item_id, ROW_NUMBER() OVER (PARTITION BY seller_id ORDER BY order_date) AS row_num FROM Orders ), sold_2nd_join AS ( SELECT Users.user_id AS seller_id, Users.favorite_brand, sold_rank.item_id FROM Users LEFT JOIN sold_rank ON Users.user_id = sold_rank.seller_id AND sold_rank.row_num = 2 ), joined_tb AS ( SELECT sold_2nd_join.seller_id, sold_2nd_join.item_id, sold_2nd_join.favorite_brand, Items.item_brand FROM sold_2nd_join LEFT JOIN Items ON sold_2nd_join.item_id = Items.item_id ) SELECT seller_id, CASE WHEN item_id IS NULL THEN "no" WHEN favorite_brand = item_brand THEN "yes" WHEN favorite_brand != item_brand THEN "no" END AS 2nd_item_fav_brand FROM joined_tb
WITH sorted_orders AS ( SELECT seller_id, item_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date ASC) r FROM Orders ) SELECT seller_id, CASE WHEN MAX(2nd_item_fav_brand) = 1 THEN 'yes' ELSE 'no' END 2nd_item_fav_brand FROM( SELECT DISTINCT u.user_id seller_id, CASE WHEN s.seller_id IS NOT NULL AND s.item_id = i.item_id THEN 1 ELSE 0 END 2nd_item_fav_brand FROM users u JOIN Items i ON u.favorite_brand = i.item_brand LEFT JOIN (SELECT seller_id, item_id FROM sorted_orders WHERE r = 2) s ON u.user_id = s.seller_id ) b GROUP BY 1
WITH sorting AS ( SELECT seller_id, CASE WHEN i.item_brand = u1.favorite_brand THEN "yes" ELSE "no" END AS 2nd_item_fav_brand FROM ( SELECT *, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS ranking FROM Orders ) AS o LEFT JOIN Users u1 ON o.seller_id = u1.user_id LEFT JOIN Items i ON i.item_id = o.item_id WHERE ranking = 2 ) SELECT user_id AS seller_id, COALESCE(2nd_item_fav_brand, "no") AS 2nd_item_fav_brand FROM sorting s RIGHT JOIN Users u ON u.user_id = s.seller_id
WITH sorting AS ( SELECT seller_id, CASE WHEN i.item_brand = u1.favorite_brand THEN "yes" ELSE "no" END AS 2nd_item_fav_brand FROM ( SELECT *, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS ranking FROM Orders ) As o LEFT JOIN Users u1 ON o.seller_id = u1.user_id LEFT JOIN Items i ON i.item_id = o.item_id WHERE ranking = 2 ) SELECT user_id AS seller_id, COALESCE(2nd_item_fav_brand, "no") AS 2nd_item_fav_brand FROM sorting s RIGHT JOIN Users u ON u.user_id = s.seller_id
WITH t AS ( SELECT seller_id, item_id FROM Orders a WHERE ( SELECT COUNT(*) FROM Orders WHERE seller_id = a.seller_id AND order_date < a.order_date ) = 1 ) SELECT u.user_id AS seller_id, (CASE WHEN u.favorite_brand = i.item_brand THEN 'yes' ELSE 'no' END) AS `2nd_item_fav_brand` FROM Users u LEFT JOIN t ON u.user_id = t.seller_id LEFT JOIN Items i ON t.item_id = i.item_id
WITH t AS ( SELECT user_id, favorite_brand, item_brand, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) rk, SUM(order_id) OVER(PARTITION BY seller_id) total FROM Users LEFT JOIN Orders ON Users.user_id = Orders.seller_id LEFT JOIN Items ON Orders.item_id = Items.item_id), t1 AS ( SELECT user_id AS seller_id FROM t WHERE rk = 2 AND item_brand = favorite_brand AND total > 2) SELECT user_id AS seller_id, CASE WHEN user_id IN (SELECT seller_id FROM t1) THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users ORDER BY seller_id
WITH t AS (SELECT seller_id, order_date, item_id, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) r FROM orders), n AS (SELECT t.seller_id, CASE WHEN i.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM t JOIN items i ON t.item_id = i.item_id AND t.r = 2 JOIN users u ON u.user_id = t.seller_id) SELECT u.user_id seller_id, IFNULL(n.2nd_item_fav_brand, 'no') 2nd_item_fav_brand FROM users u LEFT JOIN n ON u.user_id = n.seller_id
WITH t AS (SELECT seller_id, order_date, item_id, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) r FROM orders), n AS (SELECT u.user_id, CASE WHEN i.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END 2nd_item_fav_brand FROM users u JOIN t ON u.user_id = t.seller_id AND r = 2 LEFT JOIN items i ON t.item_id = i.item_id ) SELECT u.user_id seller_id, IFNULL(n.2nd_item_fav_brand, 'no') 2nd_item_fav_brand FROM users u LEFT JOIN n ON u.user_id = n.user_id
WITH t AS (SELECT seller_id, order_date, item_id, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) r FROM orders), n AS (SELECT u.user_id, CASE WHEN i.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END 2nd_item_fav_brand FROM users u JOIN t ON u.user_id = t.seller_id LEFT JOIN items i ON t.item_id = i.item_id WHERE r = 2) SELECT u.user_id seller_id, IFNULL(n.2nd_item_fav_brand, 'no') 2nd_item_fav_brand FROM users u LEFT JOIN n ON u.user_id = n.user_id
WITH t AS (SELECT seller_id, order_date, item_id, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) r FROM orders), n AS (SELECT u.user_id, t.item_id, i.item_brand, t.r, u.favorite_brand, CASE WHEN i.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END 2nd_item_fav_brand FROM users u JOIN t ON u.user_id = t.seller_id LEFT JOIN items i ON t.item_id = i.item_id WHERE r = 2) SELECT u.user_id seller_id, IFNULL(n.2nd_item_fav_brand, 'no') 2nd_item_fav_brand FROM users u LEFT JOIN n ON u.user_id = n.user_id
WITH t1 AS ( SELECT o.seller_id, i.item_brand, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) rnk FROM Orders o JOIN Items i ON o.item_id = i.item_id ) SELECT u.user_id AS seller_id, CASE WHEN a.item_brand IS NULL OR a.item_brand != u.favorite_brand THEN 'no' ELSE 'yes' END AS 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT seller_id, item_brand FROM t1 WHERE rnk = 2) a ON u.user_id = a.seller_id
WITH t1 AS ( SELECT seller_id, item_brand FROM ( SELECT seller_id, order_id, order_date, item_brand, RANK() OVER(PARTITION BY seller_id ORDER BY order_date ASC) rk FROM Orders o LEFT JOIN Users u ON o.seller_id = u.user_id LEFT JOIN Items i ON i.item_id = o.item_id ) t WHERE rk = 2 ) SELECT user_id seller_id, CASE WHEN item_brand = favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM t1 RIGHT JOIN Users u2 ON t1.seller_id = u2.user_id
WITH t1 AS ( SELECT seller_id, item_id FROM ( SELECT seller_id, item_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS ranks FROM Orders) t WHERE ranks = 2) SELECT user_id AS seller_id, CASE WHEN item_brand = favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM( SELECT t1.*, u.user_id, i.item_brand, u.favorite_brand FROM t1 JOIN Items i ON t1.item_id = i.item_id RIGHT JOIN Users u ON t1.seller_id = u.user_id) t
WITH t1 AS (SELECT seller_id, item_brand FROM (SELECT o.seller_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS RK, i.item_brand FROM Orders o LEFT JOIN Items i USING(item_id)) t0 WHERE RK = 2) SELECT u.user_id seller_id, CASE WHEN u.favorite_brand = t1.item_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users u LEFT JOIN t1 ON u.user_id = t1.seller_id ORDER BY 1
WITH t1 AS (SELECT seller_id, order_date, item_id, DENSE_RANK() OVER (PARTITION BY seller_id ORDER BY order_date) r FROM orders), t2 AS (SELECT * FROM t1 WHERE r = 2) SELECT u.user_id seller_id, CASE WHEN i.item_brand = u.favorite_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM users u LEFT JOIN t2 ON u.user_id = t2.seller_id LEFT JOIN items i ON t2.item_id = i.item_id
WITH table1 as ( SELECT order_id, item_id, seller_id, dense_rank() over (partition by seller_id order by order_date) as r FROM orders ) , table2 AS ( select distinct a.seller_id as seller_id from table1 a join users b on a.seller_id = b.user_id join items c on a.item_id = c.item_id where r = 2 and b.favorite_brand = c.item_brand ) select a.user_id as seller_id, CASE WHEN b.seller_id IS NULL THEN 'no' ELSE 'yes' END as 2nd_item_fav_brand FROM users a LEFT JOIN table2 b ON a.user_id = b.seller_id
WITH tmp AS ( SELECT a.seller_id, (CASE WHEN a.item_brand=a.favorite_brand THEN 'yes' ELSE 'no' END) AS 2nd_item_fav_brand FROM ( SELECT o.item_id, i.item_brand, u.favorite_brand, o.seller_id, ROW_NUMBER() OVER (PARTITION BY o.seller_id ORDER BY o.order_date ASC) AS rn FROM Orders o LEFT JOIN Items i ON o.item_id=i.item_id LEFT JOIN Users u ON o.seller_id=u.user_id ) a WHERE a.rn=2 ) SELECT DISTINCT u.user_id AS seller_id, IFNULL(t.2nd_item_fav_brand, 'no') AS 2nd_item_fav_brand FROM Users u LEFT JOIN tmp t ON u.user_id=t.seller_id
WITH tmp AS ( SELECT seller_id, item_id FROM ( SELECT seller_id, item_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS r_number FROM Orders ) AS ina WHERE r_number = 2 ) SELECT ina.user_id AS seller_id, IF(ina.favorite_brand=inc.item_brand, "yes", "no") AS 2nd_item_fav_brand FROM Users AS ina LEFT JOIN tmp AS inb ON ina.user_id = inb.seller_id LEFT JOIN Items AS inc ON inb.item_id = inc.item_id
With A as (Select seller_id, item_id, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) as Ranking From Orders), B as (Select seller_id, item_brand From A Join Items I On A.item_id=I.item_id where Ranking=2) Select Users.user_id as seller_id, (Case when item_brand=favorite_brand then 'yes' else 'no' end) as 2nd_item_fav_brand From B Right Join Users On B.seller_id=Users.user_id Order by user_id
With CTE as ( Select o.seller_id, o.item_id , Rank() Over(partition by o.seller_id order by o.order_date asc) as order_rank , i.item_brand from Orders o left join Items i on o.item_id=i.item_id ) Select user_id as seller_id, case when favorite_brand=item_brand then "yes" else "no" end as 2nd_item_fav_brand from Users u left join CTE c on u.user_id=c.seller_id AND order_rank=2
With Fav as ( Select o.Seller_id, o.order_date, o.item_id, I.item_brand, Rank() over(partition by o.Seller_id Order by o.Order_date asc) as R From Orders as O , Items I Where o.Item_id = I.Item_id ) Select distinct U.user_id as seller_id, Case when F.item_brand = U.Favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users U Left join (select Seller_id , Item_brand from Fav F where R = 2) as F on U.user_id = F.seller_id
With all_data as ( select order_id,order_date,I.item_id,item_brand, buyer_id, seller_id,favorite_brand as seller_favorite_brand from Orders O left join Users U on O.seller_id=U.user_id left join Items I on O.item_id=I.item_id), second_date as ( select seller_id, item_brand,seller_favorite_brand,order_date, date_rnk from ( select seller_id, item_brand,seller_favorite_brand,order_date, row_number()over(partition by seller_id order by order_date) as date_rnk from all_data) as A where date_rnk=2) select u.user_id as seller_id, case when date_rnk is null then 'no' when item_brand=seller_favorite_brand then 'yes' when item_brand<>seller_favorite_brand then 'no' end as 2nd_item_fav_brand from Users u left join second_date sd on u.user_id=sd.seller_id
With base as ( select a.* ,b.item_brand ,c.favorite_brand , row_number() over(partition by a.seller_id order by a.order_date) as rk from Orders a left join Items b on a.item_id =b.item_id left join Users c on a.seller_id = c.user_id) select a.user_id as seller_id , case when b.seller_id is null then "no" when b.item_brand = b.favorite_brand then "yes" when b.item_brand <> b.favorite_brand then "no" else null end as 2nd_item_fav_brand from Users a left join (select * from base where rk = 2) b on a.user_id = b.seller_id
With cte as (select seller_id, item_brand, rank()over(partition by seller_id order by order_date) as rnk from Orders o inner join Items i on o.item_id = i.item_id), Cte0 as ( select * from cte where rnk=2) Select user_id as seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join cte0 on u.user_id=cte0.seller_id Group by u.user_id
With order_fliter as (Select seller_id, item_brand, rank()over(partition by seller_id order by order_date) as rank_date From Orders o Left join Items i On o.item_id = i.item_id), second_item as (Select seller_id, item_brand From order_fliter Where rank_date = 2) Select user_id as seller_id, (case when favorite_brand=item_brand then "yes" else "no" end) as 2nd_item_fav_brand From Users u Left join second_item s On u.user_id = s.seller_id
With orders_items as (select a.seller_id, b.item_brand from (select *, rank() over (partition by seller_id order by order_date) as rn from orders) a left join items b on a.item_id = b.item_id where a.rn = 2) select u.user_id as seller_id, CASE WHEN oi.seller_id is null then 'no' else 'yes' end as 2nd_item_fav_brand from users u left join orders_items oi on u.user_id = oi.seller_id and u.favorite_brand = oi.item_brand order by u.user_id
With rankng as ( select user_id, favorite_brand, item_brand, order_date, dense_rank() over(partition by user_id order by order_date) rnk from orders o right join users u on o.seller_id = u.user_id right join items i on o.item_id = i.item_id ) select seller_id, (case when favorite_brand = item_brand then "yes" else "no" end) as 2nd_item_fav_brand from (select u.user_id seller_id, rankng.favorite_brand favorite_brand, rankng.item_brand item_brand from users u left join rankng on u.user_id = rankng.user_id and rnk = 2) a
With sale_data AS ( select *, row_number() over(partition by seller_id order by order_date asc) rnk from Orders ), 2nd_sold_brand AS ( select * from sale_data where rnk = 2 ) select u.user_id seller_id, case when sb.seller_id is null then 'no' when u.favorite_brand = i.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left outer join 2nd_sold_brand sb on u.user_id = sb.seller_id left outer join items i on i.item_id = sb.item_id
With second_order as ( SElect agg.seller_id , agg.item_id , i.item_brand from ( SELECT seller_id , item_id , row_number() over(partition by seller_id order by order_date) as req_rank FROM orders ) AGG Inner JOIN items I On i.item_id = agg.item_id Where agg.req_rank = 2 ) SELECT distinct agg.user_id as seller_id , CASE WHEN ( agg.no_orders > 1 ) AND ( agg.favorite_brand = agg.second_order_brand ) THEN 'yes' ELSE 'no' END as 2nd_item_fav_brand FROM ( select u.user_id , u.favorite_brand , so.item_brand as second_order_brand , IFNULL(ns.no_orders,0) as no_orders From users U left join second_order SO ON u.user_id = so.seller_id LEFT JOIN ( select seller_id , IFNULL(count(order_id),0) as no_orders from orders group by 1 ) NS ON u.user_id = NS.seller_id ) AGG
With temp as( select seller_id, item_id, rank() over (partition by seller_id order by order_date) as ranks from Orders) select U.user_id as seller_id, CASE WHEN I.item_id is null THEN 'no' ELSE 'yes' END AS 2nd_item_fav_brand from Users U left join temp on U.user_id = temp.seller_id and temp.ranks = 2 left join Items I on U.favorite_brand = I.item_brand and temp.item_id = I.item_id order by U.user_id
With tmp AS ( SELECT *, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS "ranks" FROM Orders JOIN Items USING(item_id) ), tmp2 as( SELECT * from tmp WHERE ranks=2) SELECT user_id AS seller_id, CASE WHEN a.favorite_brand = b.item_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users a LEFT JOIN tmp2 b ON a.user_id = b.seller_id
With tmp AS ( SELECT seller_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date) AS ranks, b.item_brand FROM Orders a INNER JOIN Items b ON a.item_id = b.item_id ), tmp2 AS ( SELECT * FROM tmp WHERE ranks = 2 ) SELECT user_id AS seller_id, CASE WHEN a.favorite_brand = b.item_brand THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand FROM Users a LEFT JOIN tmp2 b ON a.user_id = b.seller_id
select A.user_id as seller_id,case when favorite_brand=item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users as A left join ( select seller_id,item_brand from ( select B.*,C.item_brand, row_number() over(partition by seller_id order by order_date asc) as rw_num from Orders as B left join Items as C on B.item_id=C.item_id ) Y where Y.rw_num=2 ) X on A.user_id=X.seller_id
select UR.user_id as seller_id, case when S.2nd_item_fav_brand is null or S.2nd_item_fav_brand=0 then 'no' else 'yes' end as 2nd_item_fav_brand from Users UR left join( select O.seller_id, case when I.item_brand!=U.favorite_brand then 0 else 1 end as 2nd_item_fav_brand from( select seller_id, order_date, item_id, rank() over(partition by seller_id order by order_date) as sold_sequence from Orders ) O join Users U on U.user_id = O.seller_id join Items I on O.item_id = I.item_id where O.sold_sequence=2 ) S on UR.user_id = S.seller_id
select UR.user_id as seller_id, case when S.2nd_item_fav_brand='yes' then 'yes' else 'no' end as 2nd_item_fav_brand from Users UR left join( select O.seller_id, case when I.item_brand!=U.favorite_brand then 'no' else 'yes' end as 2nd_item_fav_brand from( select seller_id, order_date, item_id, rank() over(partition by seller_id order by order_date) as sold_sequence from Orders ) O join Users U on U.user_id = O.seller_id join Items I on O.item_id = I.item_id where O.sold_sequence=2 ) S on UR.user_id = S.seller_id
select UR.user_id as seller_id, ifnull(S.2nd_item_fav_brand,'no') as 2nd_item_fav_brand from Users UR left join( select O.seller_id, case when I.item_brand!=U.favorite_brand then 'no' else 'yes' end as 2nd_item_fav_brand from( select seller_id, order_date, item_id, rank() over(partition by seller_id order by order_date) as sold_sequence from Orders ) O join Users U on U.user_id = O.seller_id join Items I on O.item_id = I.item_id where O.sold_sequence=2 ) S on UR.user_id = S.seller_id
select Users.user_id as seller_id, case when B.favorite_brand=B.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from (select A.order_date,rank() over(partition by A.user_id order by A.order_date asc) as rk, A.user_id as seller_id,A.favorite_brand, A.item_brand from (select Orders.*, Users.user_id, Users.favorite_brand, Items.item_brand from Orders right join Users On Orders.seller_id=Users.user_id left join Items on Items.item_id=Orders.item_id) as A) as B right join Users on Users.user_id=B.seller_id and B.rk=2
select Users.user_id as seller_id, case when Items.item_brand = Users.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from ( select item_id, seller_id from ( select item_id, seller_id, rank() over (partition by seller_id order by order_date) as rnk from Orders where seller_id in (select seller_id from Orders group by seller_id having count(order_id) > 1) ) as B where rnk = 2 ) as A left join Items on A.item_id = Items.item_id right join Users on A.seller_id=Users.user_id order by Users.user_id
select a.user_id as seller_id , case when b.item_brand = a.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users a left join (select a.seller_id , b.item_brand , RANK () OVER (PARTITION BY a.seller_id ORDER BY a.order_date ASC) as Order_num from orders a join items b on a.item_id = b.item_id) b on a.user_id = b.seller_id and b.order_num = 2
select a.user_id as seller_id, case when a.favorite_brand = b.item_brand THEN 'yes' else 'no' end as 2nd_item_fav_brand from users a left join (select x.seller_id, x.item_id, y.item_brand, row_number() OVER(partition by x.seller_id order by x.order_date asc) as row_cnt from Orders x join Items y ON x.item_id=y.item_id ) b ON a.user_id=b.seller_id and b.row_cnt=2
select a.user_id as seller_id, case when a.favorite_brand = b.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users a left join ( select x.seller_id, x.item_id, y.item_brand, row_number()over(partition by x.seller_id order by x.order_date asc) as row_cnt from orders x join items y on x.item_id = y.item_id ) b on a.user_id = b.seller_id and b.row_cnt = 2
select a.user_id as seller_id, if(b.item_brand is not null, 'yes', 'no') as 2nd_item_fav_brand from Users a left join ( select o.seller_id, o.item_id, i.item_brand from ( select *, dense_rank() over (partition by seller_id order by order_date) as r from Orders ) o inner join Items i on o.item_id = i.item_id where r = 2 ) b on a.user_id = b.seller_id and a.favorite_brand = b.item_brand order by a.user_id
select a.user_id seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end 2nd_item_fav_brand from users a left join (select *, row_number() over (partition by seller_id order by order_date) rn from orders ) b on a.user_id = b.seller_id and rn = 2 left join items using (item_id)
select b.user_id as seller_id, case when c.item_brand = b.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users b left join (select seller_id, item_id from (select seller_id, item_id, row_number() over (partition by seller_id order by order_date) as row1 from orders) t where t.row1 = 2) t on t.seller_id = b.user_id left join items c on t.item_id = c.item_id
select distinct u.user_id as seller_id, coalesce(2nd_item_fav_brand, 'no') as 2nd_item_fav_brand from Users as u left join (select seller_id, case when sale_num=2 and item_brand=favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from (select o.seller_id, o.order_date, i.item_brand, u.favorite_brand, row_number() over(partition by o.seller_id order by o.order_date asc) as sale_num from Orders as o left join Users as u on o.seller_id = u.user_id left join Items as i on i.item_id = o.item_id order by o.order_date asc) as sub1 where sale_num=2 ) as sub2 on u.user_id = sub2.seller_id
select distinct usr.user_id as seller_id, case when drv.seller_id is null then 'no' else drv.ind end as 2nd_item_fav_brand from users as usr left join ( select a.*, case when b.item_brand = c.favorite_brand then 'yes' else 'no' end as ind, rank() over (partition by seller_id order by order_date) as rnk from orders as a left join items as b on a.item_id = b.item_id left join users as c on a.seller_id = c.user_id ) as drv on usr.user_id = drv.seller_id and drv.rnk=2 order by 1
select f1.user_id seller_id, ifnull(if(favorite_brand = item_brand,'yes','no'),'no') 2nd_item_fav_brand from ( select user_id, favorite_brand from users) f1 left join ( select seller_id user_id, item_brand from( select seller_id, item_id from ( select seller_id, item_id, row_number() over(partition by seller_id order by order_date) rk from orders) f2 where rk = 2) f3 join items on f3.item_id = items.item_id) f4 on f1.user_id = f4.user_id
select seller_id ,case when items.item_brand = users.favorite_brand then 'yes' else 'no' end 2nd_item_fav_brand from Items items join( select item_id ,seller_id ,dense_rank() over (partition by seller_id order by order_date) as num from Orders ) 2ndorder on 2ndorder.item_id = items.item_id join Users users on users.user_id = 2ndorder.seller_id where 2ndorder.num = 2 union select users.user_id as seller_id ,'no' as 2nd_item_fav_brand from Orders orders right join Users users on orders.seller_id = users.user_id where users.user_id not in ( select seller_id from Orders group by seller_id having count(item_id) > 1 )
select seller_id, (case when favorite_brand = sold_item then 'yes' else 'no' end) as "2nd_item_fav_brand" from (select a1.user_id as seller_id, a1.favorite_brand, a3.item_brand as sold_item from users a1 left join (select item_id, seller_id from (select item_id, seller_id, rank() over (partition by seller_id order by order_date asc) as buy_rank from Orders) a where a.buy_rank = 2) a2 on a1.user_id = a2.seller_id left join Items a3 on a2.item_id = a3.item_id) a4
select seller_id, 2nd_item_fav_brand from (select user_id 'seller_id', 'no' 2nd_item_fav_brand from users u left join orders o on u.user_id = o.seller_id group by user_id having count(order_id) <= 1 union select user_id 'seller_id', case when favorite_brand=item_brand then 'yes' else 'no' end '2nd_item_fav_brand' from (select user_id, favorite_brand, item_brand, dense_rank() over(partition by user_id order by order_date) 'rank' from users u, orders o, items i where u.user_id=o.seller_id and o.item_id=i.item_id) a where a.rank = 2) b order by seller_id
select seller_id, CASE WHEN 2nd_item_fav_brand = 0 THEN 'no' ELSE 'yes' END as 2nd_item_fav_brand from ( select user_id as seller_id, sum( CASE WHEN (rn = 2 and favorite_brand = item_brand) THEN 1 ELSE 0 END ) as 2nd_item_fav_brand from ( select user_id, favorite_brand, order_date, item_brand, row_number() over(partition by user_id order by order_date) rn from Users u left join Orders o on u.user_id = o.seller_id left join Items i on o.item_id = i.item_id ) T group by seller_id ) T1
select seller_id, item_id, row_number() over (partition by seller_id order by order_date) as rr from Orders ), cte as ( select u.user_id as seller_id, case when u.favorite_brand = i.item_brand and rr = 2 then 'yes' when u.favorite_brand != i.item_brand and rr = 2 then 'no' when max(rr) OVER(partition by seller_id) < 2 then 'no' when rr is null then 'no' else NULL end as 2nd_item_fav_brand from second s join Items i USING (item_id) right join Users u on s.seller_id = u.user_id ) select * from cte where 2nd_item_fav_brand is not null
select t1.user_id as seller_id, case when t1.favorite_brand = t2.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from (select distinct user_id,favorite_brand from users) t1 left join (select * from (select o.seller_id, o.order_date, o.item_id,i.item_brand, rank() over(partition by o.seller_id order by o.order_date) as rk from Users u left join orders o on u.user_id = o.seller_id left join Items i on o.item_id = i.item_id) a where a.rk = 2) t2 on t1.user_id = t2.seller_id
select t1.user_id as seller_id, case when t2.item_brand is null then 'no' when t1.favorite_brand != t2.item_brand then 'no' else 'yes' end as `2nd_item_fav_brand` from users t1 left join ( select t.* from ( select t1.seller_id, t1.order_date, t1.item_id, t2.item_brand, rank() over (partition by t1.seller_id order by t1.order_date asc) as `rank` from orders t1 join items t2 on t2.item_id = t1.item_id ) t where t.rank = 2 ) t2 on t2.seller_id = t1.user_id order by t1.user_id
select t1.user_id as seller_id, coalesce(case when favorite_brand =coalesce(item_brand,'') then 'yes' else 'no' end,'no') as 2nd_item_fav_brand from Users t1 left join ( select *,rank() over(partition by seller_id order by order_date) as rnk from Orders ) t2 on t1.user_id=t2.seller_id and t2.rnk=2 left join Items t3 on t2.Item_Id=t3.Item_id order by 1
select u.user_id as 'seller_id', case when b.seller_id is null then 'no' else case when u.favorite_brand = b.item_brand then 'yes' else 'no' end end as '2nd_item_fav_brand' from users u left join (select seller_id,item_brand from ( select seller_id, dense_rank() over(partition by seller_id order by order_date) as order_date, item_brand from orders o left join Items i on o.item_id = i.item_id) as A where order_date = 2) as B on B.seller_id = u.user_id
select u.user_id as 'seller_id',ifnull(flag,'no') as '2nd_item_fav_brand' from users u left join ( select * from ( select user_id, row_number() over(partition by user_id order by order_date) as 'num', case when u.favorite_brand = i.item_brand then 'yes' else 'no' end as 'flag' from users u left join orders o on u.user_id = o.seller_id left join items i on i.item_id = o.item_id) as A where num = 2) as B on u.user_id = B.user_id
select u.user_id as seller_id , case when tmp.seller_id is null then 'no' when u.favorite_brand=i.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from ( select seller_id , item_id , rank() over(partition by seller_id order by order_date) as rnk from orders ) tmp right join users u on u.user_id=tmp.seller_id and tmp.rnk=2 left join items i on i.item_id=tmp.item_id
select u.user_id as seller_id , case when x.item_brand=u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left outer join (select o.seller_id, o.item_id, i.item_brand , row_number() over (partition by seller_id order by order_date) as r from orders o inner join items i on i.item_id=o.item_id) x on x.r=2 and x.seller_id=u.user_id
select u.user_id as seller_id, (case when favorite_brand = item_brand then 'yes' else 'no' end) as 2nd_item_fav_brand from (select item_id, seller_id from (select item_id, seller_id, rank() over(partition by seller_id order by order_date) as rnk from orders) t1 where rnk = 2) t2 right join users u on u.user_id = t2.seller_id left join items i using (item_id)
select u.user_id as seller_id, (case when i.item_brand = u.favorite_brand then 'yes' else 'no' End) as 2nd_item_fav_brand from users u left join (select seller_id, item_id, rank() over(partition by seller_id order by order_date asc) as row_rank from orders) t on u.user_id = t.seller_id and row_rank = 2 left join items i on t.item_id = i.item_id
select u.user_id as seller_id, (case when i.item_brand = u.favorite_brand then 'yes' when i.item_brand is null then 'no' else 'no' end) as 2nd_item_fav_brand from Users u left join (select * from ( select seller_id, item_id, row_number() over (partition by seller_id order by order_date) as rn from Orders ) tmp where rn = 2) o on o.seller_id = u.user_id left join Items i on o.item_id = i.item_id
select u.user_id as seller_id, CASE when u.favorite_brand = t2.item_brand then 'yes' ELSE 'no' END AS 2nd_item_fav_brand from users u LEFT JOIN (select item_brand,seller_id from (select i.item_brand,o.seller_id, RANK() OVER (partition by seller_id order by o.order_date asc) as dt_rk from orders o JOIN items i on o.item_id = i.item_id ) t where dt_rk = 2 ) t2 on u.user_id = t2.seller_id
select u.user_id as seller_id, case when ct = 1 then 'no' when t1.seller_id is null then 'no' when i.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from ( select order_id, item_id, seller_id, rank() over (partition by seller_id order by order_date) as rk, count(*) over (partition by seller_id) as ct from orders) t1 join items i on t1.item_id = i.item_id right join users u on t1.seller_id = u.user_id where t1.rk = 2 or t1.ct = 1 or t1.seller_id is null
select u.user_id as seller_id, case when favorite_brand = item_brand then "yes" else "no" end as 2nd_item_fav_brand from Users u left join (select * from Orders o1 where (select count(*) from Orders o2 where o1.seller_id = o2.seller_id and o1.order_date > o2.order_date) = 1) t on u.user_id = t.seller_id left join Items i on t.item_id = i.item_id
select u.user_id as seller_id, case when i.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users as u left join (select * from (select *, dense_rank() over(partition by seller_id order by order_date) as rnk from Orders)t where rnk=2) as o on u.user_id = o.seller_id left join Items as i on o.item_id = i.item_id group by u.user_id
select u.user_id as seller_id, case when i.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users as u left join (select *, dense_rank() over(partition by seller_id order by order_date) as rnk from Orders)o on u.user_id = o.seller_id and o.rnk=2 left join Items as i on o.item_id = i.item_id group by u.user_id
select u.user_id as seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users as u left join (select item_id, seller_id from( select *, rank()over(partition by seller_id order by order_date) as ranks from orders) as temp where ranks = 2) as o on user_id = o.seller_id left join items as i on o.item_id = i.item_id
select u.user_id as seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join (select seller_id, item_id from (select *, dense_rank() over (partition by user_id order by order_date) as order_rnk from orders o join users u on o.seller_id = u.user_id ) a where order_rnk = 2) b on u.user_id = b.seller_id left join items i on i.item_id = b.item_id order by u.user_id
select u.user_id as seller_id, case when item_brand!=favorite_brand or item_brand is null then 'no' else 'yes' end as 2nd_item_fav_brand from users u left join ( select seller_id, item_brand, row_number() over(partition by seller_id order by order_date) num from orders o left join items i on o.item_id=i.item_id ) a on u.user_id=a.seller_id and a.num=2 order by u.user_id
select u.user_id as seller_id, case when item_brand=favorite_brand then 'yes' else 'no' end as '2nd_item_fav_brand' from Users u left join( select t.seller_id, item_brand from (select seller_id, item_id, rank()over(partition by seller_id order by order_date asc) as rnk from Orders)t join Items i on t.item_id=i.item_id where rnk=2)t2 on u.user_id=t2.seller_id
select u.user_id as seller_id, case when t.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join (select o.seller_id, i.item_id, i.item_brand, row_number() over(partition by o.seller_id order by o.order_date asc) as row_count from Orders o join Items i on o.item_id = i.item_id) t on u.user_id = t.seller_id and t.row_count = 2 order by u.user_id
select u.user_id as seller_id, case when u.favorite_brand = b.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join (select seller_id, a.item_id, r, item_brand from (select *, row_number() over (partition by seller_id order by order_date) as r from orders) a join items i on a.item_id = i.item_id where r = 2) b on u.user_id = b.seller_id
select u.user_id as seller_id, case when u.favorite_brand = i.item_brand THEN 'yes' else 'no' end as '2nd_item_fav_brand' from users u left join ( select o1.seller_id, o1.item_id from orders o1 inner join orders o2 on o2.order_date < o1.order_date and o1.seller_id = o2.seller_id group by o1.order_id having count(distinct o2.order_id) <= 1 ) o on u.user_id = o.seller_id left join Items i on o.item_id = i.item_id order by 1
select u.user_id as seller_id, case when u.favorite_brand = s.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join (select * from (select o.seller_id, i.item_brand, row_number() over (partition by o.seller_id order by o.order_date) as rownum from Orders o join Items i on o.item_id = i.item_id) temp where rownum = 2) s on u.user_id = s.seller_id
select u.user_id as seller_id, case when u.favorite_brand = tmpt.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users as u left join (select o.*, i.item_brand, rank() over(partition by o.seller_id order by o.order_date) as ranking from orders as o left join items as i on o.item_id = i.item_id) as tmpt on u.user_id = tmpt.seller_id and ranking = 2
select u.user_id as seller_id, case when u.favorite_brand=i.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users as u left join (select *, row_number() over (partition by seller_id order by order_date) as sold_rank from orders) as t on u.user_id = t.seller_id and t.sold_rank=2 left join items as i on t.item_id = i.item_id
select u.user_id as seller_id, case when u.favorite_brand=i.item_brand then 'yes' when u.favorite_brand!=i.item_brand and i.item_brand is not null then 'no' when i.item_brand is null then 'no' end as 2nd_item_fav_brand from users as u left join (select *, row_number() over (partition by seller_id order by order_date) as sold_rank from orders) as t on u.user_id = t.seller_id and t.sold_rank=2 left join items as i on t.item_id = i.item_id
select u.user_id as seller_id, if(c.seller_id is not null,'yes','no') as 2nd_item_fav_brand from users u left join (select a.seller_id, i.item_brand from (select *, rank() over(partition by seller_id order by order_date) as rnk from orders) as a join items i on a.item_id = i.item_id where a.rnk=2) as c on u.user_id = c.seller_id and u.favorite_brand = c.item_brand
select u.user_id as seller_id,case when i.item_brand=u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join (select seller_id, item_id, row_number() over(partition by seller_id order by order_date) as ranks from Orders o) a on a.ranks=2 and u.user_id=a.seller_id left join Items i on a.item_id=i.item_id order by 1
select u.user_id seller_id, (case when u.favorite_brand=tbl.item_brand then 'yes' else 'no' end) 2nd_item_fav_brand from users u left join (select o1.seller_id, o1.order_date, i.item_brand from orders o1 left join orders o2 on o1.order_date>=o2.order_date and o1.seller_id=o2.seller_id left join items i on o1.item_id=i.item_id group by o1.seller_id, o1.order_date having count(*)=2) tbl on u.user_id =tbl.seller_id order by seller_id
select u.user_id seller_id, case when a.favorite_brand = item_brand then 'yes' else 'no' end as '2nd_item_fav_brand' from ( select o.seller_id, favorite_brand, item_brand, rank() over (partition by o.seller_id order by order_date) ra from orders o join users u on o.seller_id = u.user_id join items i on o.item_id = i.item_id ) as a right join users u on a.seller_id = u.user_id and a.ra =2
select u.user_id seller_id, case when a.favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from ( select o.seller_id, favorite_brand, item_brand, rank() over (partition by o.seller_id order by order_date) ra from orders o join users u on o.seller_id = u.user_id join items i on o.item_id = i.item_id ) as a right join users u on a.seller_id = u.user_id and a.ra =2
select u.user_id seller_id, case when a.favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from ( select o.seller_id, favorite_brand, item_brand, rank() over (partition by o.seller_id order by order_date) ra from orders o left join users u on o.seller_id = u.user_id left join items i on o.item_id = i.item_id ) as a right join users u on a.seller_id = u.user_id and a.ra =2
select u.user_id seller_id, case when u.favorite_brand = i.item_brand then 'yes' else 'no' end 2nd_item_fav_brand from users u left join (select * from (select seller_id,item_id, rank() over(partition by seller_id order by order_date) rnk from orders ) a ) o on u.user_id = o.seller_id and o.rnk=2 left join items i on i.item_id = o.item_id order by u.user_id
select u1.user_id as seller_id, (Case when favorite_brand = (select item_brand from Orders o1 left join items on items.item_id = o1.item_id where u1.user_id = o1.seller_id order by order_date limit 1 offset 1 ) then 'yes' else 'no' end ) as 2nd_item_fav_brand from Users u1
select u1.user_id as seller_id, case when t.item_brand = u1.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u1 left join ( select u.user_id, item_brand, row_number() over(partition by u.user_id order by order_date) as row_id from users u left join orders o on u.user_id = o.seller_id inner join items i on o.item_id = i.item_id ) t on u1.user_id = t.user_id and row_id = 2
select u2.user_id as seller_id, case when b.2nd_item_fav_brand is null then 'no' else b.2nd_item_fav_brand end as 2nd_item_fav_brand from (select a.seller_id, case when a.rn=2 and a.item_brand = a.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from (select u.favorite_brand, o.item_id, i.item_brand, o.seller_id, o.order_date, row_number() over(partition by o.seller_id order by o.order_date asc) as rn from Users u left join Orders o on u.user_id = o.seller_id left join Items i on i.item_id =o.item_id) a where a.rn=2) b right join Users u2 on b.seller_id=u2.user_id
select us.user_id as seller_id, (case when sub2.item_brand = sub2.favorite_brand and sub2.order_rank = 2 then "yes" else "no" end) as 2nd_item_fav_brand from (select * from (select u.user_id, rank() over (partition by u.user_id order by o.order_date) as order_rank, i.item_brand, u.favorite_brand from Users u join Orders o on u.user_id = o.seller_id join Items i on i.item_id = o.item_id ) sub where sub.order_rank = 2) sub2 right join Users us on us.user_id = sub2.user_id
select user_id as seller_id, (case when favorite_brand = ( select i.item_brand from Orders o left join Items i on o.item_id = i.item_id where o.seller_id = u.user_id order by o.order_date limit 1 offset 1 ) then "yes" else "no" end ) as "2nd_item_fav_brand" from Users u
select user_id as seller_id, (case when u.favorite_brand = temp.item_brand then 'yes' else 'no' end) as 2nd_item_fav_brand from (select * from (select seller_id, item_brand, rank() over (partition by seller_id order by order_date) as dateRank from Orders o join Items i on o.item_id = i.item_id) t where dateRank = 2) temp right join Users u on u.user_id = temp.seller_id
select user_id as seller_id, case when 2nd_item_fav_brand is null then 'no' else 2nd_item_fav_brand end as 2nd_item_fav_brand from Users a left join ( select a.seller_id , a.order_date, case when b.item_brand=e.favorite_brand then 'yes' when b.item_brand!=e.favorite_brand then 'no' end as 2nd_item_fav_brand , row_number()over(partition by a.seller_id order by a.order_date asc) as rn from Orders a left join Items b on a.item_id=b.item_id left join Users e on a.seller_id =e.user_id ) b on a.user_id=b.seller_id and b.rn=2
select user_id as seller_id, case when 2nd_item_fav_brand is null then 'no' else 2nd_item_fav_brand end as 2nd_item_fav_brand from Users a left join ( select seller_id as seller_id, case when item_brand=favorite_brand then 'yes' when item_brand!=favorite_brand then 'no' end as 2nd_item_fav_brand from ( select a.seller_id , a.order_date, b.item_brand, e.favorite_brand , row_number()over(partition by a.seller_id order by a.order_date asc) as rn from Orders a left join Items b on a.item_id=b.item_id left join Users e on a.seller_id =e.user_id ) a where rn=2 ) b on a.user_id=b.seller_id
select user_id as seller_id, case when d.favorite_brand=item_brand then "yes" else "no" end as 2nd_item_fav_brand from users left join( select seller_id, favorite_brand, item_brand from( select seller_id, item_id, favorite_brand from (select seller_id,item_id from( select seller_id, order_id, item_id, order_date, rank() over(partition by seller_id order by order_date) r from orders) t where r=2)t1 join users t2 where t1.seller_id=t2.user_id) a join items b on a.item_id=b.item_id) d on user_id=seller_id
select user_id as seller_id, case when favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from (select u.*, c.item_brand from Users as u left join (select b.*, i.item_brand from (select seller_id, item_id from (select *, row_number() over(partition by seller_id order by order_date) as rk from Orders) as a where rk = 2) as b left join Items as i on b.item_id = i.item_id) as c on u.user_id = c.seller_id) as d
select user_id as seller_id, case when favorite_brand =item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join (select seller_id, item_id, row_number() over (partition by seller_id order by order_date) as rn from Orders ) o on seller_id=user_id and rn=2 left join items i on i.item_id= o.item_id
select user_id as seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users left join (select seller_id, item_brand from (select item_id, seller_id, row_number() over (partition by seller_id order by order_date) as rk from Orders) tmp join Items using (item_id) where rk = 2 ) tmp2 on Users.user_id = tmp2.seller_id
select user_id as seller_id, case when rn = 2 and favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from( select t1.user_id, t1.favorite_brand, t3.item_brand, dense_rank() over(partition by t1.user_id order by t2.order_date) as rn, count(t2.order_date) over(partition by t1.user_id) as cnt from users t1 left join orders t2 on t1.user_id = t2.seller_id left join items t3 on t2.item_id = t3.item_id) sub where rn = 2 or cnt in (0,1)
select user_id as seller_id, case when sec=2 and item_brand = favorite_brand then "yes" else "no" end as 2nd_item_fav_brand from ( select user_id, rank() over(partition by seller_id order by order_date ) as sec, count(*) over(partition by seller_id ) as num, item_brand , favorite_brand from Orders join Items on orders.item_id = Items.item_id right join Users on Users.user_id = Orders.seller_id )l where sec=2 union select user_id,"no" from users where user_id not in (select (seller_id) from orders group by seller_id having count(*) >1) order by seller_id asc
select user_id as seller_id, case when u.favorite_brand = i.item_brand then 'yes' else 'no' end as '2nd_item_fav_brand' from Users u left join (select seller_id, item_id from ( select seller_id, item_id, row_number() over(partition by seller_id order by order_date asc) as rank_order from Orders ) o where rank_order = 2 ) o on u.user_id = o.seller_id left join Items i on o.item_id = i.item_id
select user_id as seller_id, case when u.favorite_brand = i.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join( select seller_id, item_id, row_number() over(partition by seller_id order by order_date) as rn from Orders) o on o.seller_id = u.user_id and o.rn = 2 left join items i on o.item_id = i.item_id
select user_id as seller_id, case when user_id = seller_id then 'yes' else 'no' end as 2nd_item_fav_brand from(select user_id,seller_id from Users left Join (select seller_id from (select order_date, seller_id, item_brand, favorite_brand, rank() over (partition by seller_id order by order_date) as rk from (select order_id,order_date,buyer_id,seller_id,item_brand from Orders left join Items on Items.item_id = Orders.item_id) as a left join Users on Users.user_id = a.seller_id) as b where rk = 2 and item_brand = favorite_brand) as z on Users.user_id = z.seller_id) as aa
select user_id as seller_id, case when user_id in (select u.user_id from Users u left join (select o.seller_id,o.item_id,o.order_date,dense_rank()over(partition by o.seller_id order by order_date) as ranks from Orders o group by 1,2,3)t on t.seller_id=u.user_id left join Items i using (item_id) where t.ranks=2 and favorite_brand=item_brand) then "yes" else "no" end as '2nd_item_fav_brand' from Users
select user_id as seller_id, if(favorite_brand=item_brand, "yes", "no") as 2nd_item_fav_brand from Users left join (select item_brand, seller_id from (select *, rank() over (partition by seller_id order by order_date) as rank_num from Orders) o inner join Items on Items.item_id=o.item_id where rank_num=2) temp on Users.user_id=temp.seller_id order by user_id
select user_id as seller_id, if(item_brand=favorite_brand,'yes','no') as 2nd_item_fav_brand from users u left join (select seller_id, item_id, rank() over(partition by seller_id order by order_date) as order_rank from orders) o inner join items i on o.item_id=i.item_id and order_rank=2 on u.user_id=o.seller_id order by user_id
select user_id as seller_id, ifnull((case when favorite_brand = tmp.item_brand then "yes" else "no" end), "no") as "2nd_item_fav_brand" from Users u left join (select * from (select seller_id, item_brand, rank() over ( partition by seller_id order by order_date) as rnk from Orders o left join Items i on o.item_id = i.item_id) tmp2 where rnk = 2) tmp on u.user_id = tmp.seller_id
select user_id as seller_id, ifnull(fv,'no') 2nd_item_fav_brand from users u left join ( select seller_id, if(item_brand=favorite_brand,'yes','no') as fv, row_number() over(partition by seller_id order by order_date) as rk from orders o join users u on o.seller_id = u.user_id join items i on o.item_id=i.item_id ) b on u.user_id = b.seller_id and rk=2 order by 1
select user_id seller_id, case when item_brand = favorite_brand and ra = 2 then 'yes' else 'no' end 2nd_item_fav_brand from ( select order_date, o.item_id, item_brand, user_id, favorite_brand, rank()over(partition by user_id order by order_date) ra, count(user_id)over(partition by user_id) co from orders o left join items i on o.item_id = i.item_id right join users u on o.seller_id = u.user_id ) temp where (ra = 2 and co >= 2) or (ra = 1 and co < 2)
select users.user_id as seller_id ,case when items.item_brand = users.favorite_brand then 'yes' else 'no' end 2nd_item_fav_brand from Users users left join ( select item_id ,seller_id ,dense_rank() over (partition by seller_id order by order_date) as num from Orders ) 2ndorder on users.user_id = 2ndorder.seller_id and 2ndorder.num = 2 left join Items items on 2ndorder.item_id = items.item_id
select users.user_id seller_id, case when item_brand=favorite_brand then 'yes' else 'no' end 2nd_item_fav_brand from ( select * from ( select *, row_number() over(partition by seller_id order by order_date) rn from orders ) a where rn=2 ) b join items on b.item_id=items.item_id right join Users on b.seller_id=users.user_id
select x.user_id as seller_id, case when x.favorite_brand = y.item_brand then 'yes' when y.item_brand is null then 'no' else 'no' end as 2nd_item_fav_brand from Users x left join (select seller_id, item_brand, rank() over(partition by seller_id order by order_date asc) as rnk from Orders x join Items y on x.item_id = y.item_id) y on x.user_id = y.seller_id and y.rnk = 2
with A as( select seller_id, item_brand, row_number() over(partition by seller_id order by order_date) as "order_rank" from orders o join items i on o.item_id = i.item_id ), B as( select seller_id, item_brand from A where order_rank = 2 ) select user_id as "seller_id", if(favorite_brand = item_brand, "yes", "no") as "2nd_item_fav_brand" from users u left join B on u.user_id = B.seller_id
with A as( select seller_id, item_brand, row_number() over(partition by seller_id order by order_date) as "order_rank" from orders o join items i on o.item_id = i.item_id ), B as( select user_id, "2" as 2nd_order from users ), C as( select user_id, item_brand from A right join B on A.seller_id = B.user_id and A.order_rank = B.2nd_order ), D as( select user_id, favorite_brand from users u join items i on u.favorite_brand = i.item_brand ) select distinct C.user_id as "seller_id", if(C.item_brand = D.favorite_brand, "yes", "no") as "2nd_item_fav_brand" from C left join D on C.user_id = D.user_id order by 1
with CET as (SELECT p1.item_id, seller_id, item_brand from( SELECT *, row_number() over(partition by seller_id order by order_date) as ranking from Orders)p1 left join Items i on i.item_id=p1.item_id where ranking=2) SELECT user_id as seller_id , case when favorite_brand=item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from CET c right join Users u on c.seller_id=u.user_id
with CTE as (select a.* from (select o.*, u.favorite_brand, item_brand, case when u.favorite_brand=item_brand then 'yes' else 'no' end as 2nd_item_fav_brand, row_number()over (partition by seller_id order by order_date) as row_num from Orders o left join Users u on o.seller_id=u.user_id left join Items i on o.item_id=i.item_id) as a where a.row_num=2) select distinct user.user_id as seller_id, case when CTE.2nd_item_fav_brand is null then 'no' else CTE.2nd_item_fav_brand end as 2nd_item_fav_brand from users user left join CTE on user.user_id=CTE.seller_id
with CTE_second_item as ( select order_id, seller_id, item_brand, rank() over(partition by seller_id order by order_date) as order_rank from orders o inner join items i on o.item_id=i.item_id ) select u.user_id as seller_id, (case when item_brand is null then 'no' when item_brand!=favorite_brand then 'no' else 'yes' end ) as `2nd_item_fav_brand` from users u left join CTE_second_item c on u.user_id=c.seller_id and c.order_rank=2
with Item2nd as (select * from (select Orders.*, item_brand ,row_number() over (Partition by seller_id Order by order_date) as Rowed from Orders left outer join Items on Orders.item_id = Items.item_id) O where Rowed = 2) select Users.user_id as seller_id ,case when item_brand = favorite_brand then "yes" else "no" end as 2nd_item_fav_brand from Users left outer join Item2nd on Users.user_id = Item2nd.seller_id
with O1 as ( select seller_id, item_id, row_number() over(partition by seller_id order by order_date asc) as rn from Orders ), OI as ( select O1.seller_id, I.item_brand from O1 inner join Items as I on O1.item_id=I.item_id where O1.rn=2 ) select U.user_id as seller_id, case when U.favorite_brand=OI.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users as U left join OI on U.user_id=OI.seller_id
with a as ( select o.seller_id, o.order_date as sell_date, o.item_id, i.item_brand from orders o left join items i on o.item_id = i.item_id order by 1), b as ( select *, rank() over(partition by seller_id order by sell_date) as rnk from a), c as ( select * from b where rnk = 2) select u.user_id as seller_id, case when c.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from c right join users u on c.seller_id = u.user_id
with a as ( select u.user_id, o.order_date, o.item_id, i.item_brand, u.favorite_brand, rank() over (partition by o.seller_id order by o.order_date asc) rn from Users u join orders o on o.seller_id=u.user_id join items i on o.item_id = i.item_id ) select distinct u.user_id seller_id, case when a.user_id is null then 'no' when a.item_brand = a.favorite_brand then 'yes' when a.item_brand <> a.favorite_brand then 'no' else 'no' end as 2nd_item_fav_brand from a right join users u on u.user_id=a.user_id and rn=2
with a as (select item_id, seller_id from (select item_id,seller_id, rank() over (partition by seller_id order by order_date) as sellrank from orders) sub where sellrank=2) select user_id as seller_id, case when favorite_brand=item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users left join a on users.user_id=a.seller_id left join items on a.item_id=items.item_id
with a as( select *, rank() over(partition by seller_id order by order_date asc) item_num from orders), b as( select seller_id, (case when item_brand = favorite_brand then 'yes' else 'no' end) 2nd_item_fav_brand from a join items i on a.item_id=i.item_id join users u on u.user_id=a.seller_id where item_num=2 ) select user_id seller_id, (ifnull(2nd_item_fav_brand,'no')) as '2nd_item_fav_brand' from users u left join b on u.user_id=b.seller_id
with a as( select o.order_date,o.seller_id,u.favorite_brand,i.item_brand,dense_rank()over(partition by seller_id order by order_date asc) as "rank" from orders o left join users u on u.user_id=o.seller_id left join Items i using(item_id) ), b as( select seller_id, case when favorite_brand=item_brand then "yes" else "no" end as "2nd_item_fav_brand" from a where a.rank=2 ) select u.user_id as seller_id,ifnull(b.2nd_item_fav_brand,"no") as "2nd_item_fav_brand" from users u left join b on u.user_id=b.seller_id
with a as( select rank() over(partition by seller_id order by order_date asc) as r, item_id, seller_id from Orders), b as ( select seller_id from a join Users u on a.seller_id = u.user_id join Items i on a.item_id = i.item_id where r = 2 and u.favorite_brand = i.item_brand) select u.user_id as seller_id, if(b.seller_id is not null, 'yes', 'no') as 2nd_item_fav_brand from b right join Users u on b.seller_id = u.user_id
with b AS ( SELECT * FROM ( SELECT b.user_id seller_id, CASE WHEN b.favorite_brand = c.item_brand THEN 1 ELSE 0 END Fav_Item_Sold, ROW_NUMBER() OVER(PARTITION BY a.seller_id ORDER BY a.order_date) AS Order_Number FROM users b JOIN orders a ON a.seller_id = b.user_id JOIN items c ON c.item_id = a.item_id )a WHERE Fav_Item_Sold = 1 AND Order_Number = 2 ) SELECT a.user_id seller_id, CASE WHEN b.seller_id IS NULL THEN 'no' ELSE 'yes' END 2nd_item_fav_brand FROM Users a LEFT JOIN b ON a.user_id = b.seller_id
with b AS ( SELECT * FROM ( SELECT b.user_id seller_id, a.order_date, CASE WHEN b.favorite_brand = c.item_brand THEN 1 ELSE 0 END Fav_Item_Sold, ROW_NUMBER() OVER(PARTITION BY a.seller_id ORDER BY a.order_date) AS Order_Number FROM users b JOIN orders a ON a.seller_id = b.user_id JOIN items c ON c.item_id = a.item_id )a WHERE Fav_Item_Sold = 1 AND Order_Number = 2 ) SELECT a.user_id seller_id, CASE WHEN b.seller_id IS NULL THEN 'no' ELSE 'yes' END 2nd_item_fav_brand FROM Users a LEFT JOIN b ON a.user_id = b.seller_id
with b as (select seller_id, i.item_brand as second_item_brand from ( select seller_id,item_id second_item_id from (select seller_id, item_id, row_number() over (partition by seller_id order by order_date asc) as sell_rank from orders ) t where sell_rank = 2) a left join items i on a.second_item_id = i.item_id) select u.user_id as seller_id, (case when u.favorite_brand = b.second_item_brand then 'yes' else 'no' end ) as 2nd_item_fav_brand from users u left join b on u.user_id = b.seller_id
with b as( select * from ( select seller_id, o.item_id, rank() over(partition by seller_id order by order_date) as rank_, item_brand from orders o left join items i on o.item_id=i.item_id) as a where rank_=2 order by seller_id) select c.user_id as seller_id, case when c.favorite_brand=b.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users c left join b on c.user_id=b.seller_id
with base as (select seller_id, item_brand, row_number() over (partition by seller_id order by order_date) as seq from Orders a left join Items b on a.item_id = b.item_id ) select users.user_id as seller_id, case when base.item_brand = users.favorite_brand then "yes" else "no" end as 2nd_item_fav_brand from users left join base on base.seller_id = users.user_id and base.seq = 2
with c1 as (select seller_id,item_id,rank() over(partition by seller_id order by order_date) as rk from Orders), c2 as (select c1.seller_id,c1.item_id,i.item_brand,u.favorite_brand from c1 left join Items i using(item_id) left join Users u on c1.seller_id = u.user_id where rk =2), c3 as (select seller_id, if(item_brand = favorite_brand, 'yes','no') as 2nd_item_fav_brand from c2) select user_id as seller_id, ifnull(2nd_item_fav_brand,'no') as 2nd_item_fav_brand from Users left join c3 on Users.user_id = c3.seller_id
with cet1 as (select seller_id,item_id,dense_rank() over (partition by seller_id order by order_date asc)rnk from orders o ), cte2 as (select seller_id,i.item_brand from cet1 o left join items i on o.item_id = i.item_id where rnk=2 ) select u.user_id seller_id ,(case when u.favorite_brand = c.item_brand then 'yes' else 'no' end)2nd_item_fav_brand from users u left join cte2 c on u.user_id =c.seller_id order by u.user_id
with ct as (select o.seller_id, o.order_date, o.item_id, rank() over (partition by o.seller_id order by o.order_date) as r, u.favorite_brand, i.item_brand from orders o left join users u on o.seller_id = u.user_id left join items i on o.item_id = i.item_id order by o.seller_id, o.order_date) select a.user_id as seller_id, case when b.favorite_brand= b.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users a left join ct b on a.user_id = b.seller_id and b.r=2
with cte ( seller_id ,item_id ) as ( select seller_id ,item_id from ( select seller_id ,item_id , row_number() over ( partition by seller_id order by order_date ) rnm from Orders ) inr where rnm =2 ) select u.user_id as seller_id , case when i.item_brand is null or i.item_brand <> u.favorite_brand then "no" else "yes" end 2nd_item_fav_brand from Users u left join cte c on u.user_id = c.seller_id left join Items i on c.item_id = i.item_id
with cte AS (SELECT seller_id, item_id AS good_sold FROM (SELECT seller_id, item_id, i.item_brand, dense_rank() OVER (partition by seller_id order by order_date) AS rnk from orders o JOIN Items i USING (item_id)) a WHERE rnk = 2), temp1 AS (SELECT user_id, i.item_id AS user_fav_item from users u JOIN items i ON u.favorite_brand = i.item_brand), temp2 AS (SELECT seller_id FROM cte,temp1 WHERE seller_id= user_id AND good_sold = user_fav_item) SELECT user_id AS seller_id, CASE WHEN seller_id IS NULL THEN 'no' ELSE 'yes' END AS 2nd_item_fav_brand FROM users LEFT JOIN temp2 ON users.user_id = temp2.seller_id
with cte as ( Select coalesce(order_date,'2020/01/01') order_date, coalesce(o.item_id,0), seller_id, favorite_brand, coalesce(item_brand,null) as soldItem from Orders o left join Users u on u.user_id = o.seller_id left join Items i on o.item_id = i.item_id order by order_date desc ) , ct2 as ( Select order_date, seller_id, soldItem , row_number() over (partition by seller_id order by order_date) as rowN, favorite_brand as fb from cte ) Select u.user_id seller_id, ifnull(2nd_item_fav_brand,'no') 2nd_item_fav_brand from Users u left join ( Select seller_id, (case when soldItem=fb then 'yes' else 'no' end ) 2nd_item_fav_brand from ct2 where rowN = 2) t on u.user_id = t.seller_id order by u.user_id
with cte as ( Select user_id from users u join orders o on o.seller_id = user_id group by 1 having count(*)>=2 ), cte1 as ( Select user_id, item_brand, row_number() over(partition by seller_id order by order_date) as rnk from cte c join orders o on c.user_id = o.seller_id join items i on i.item_id = o.item_id ) Select u.user_id seller_id, case when u.favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join (Select * from cte1 where rnk = 2) c1 on u.user_id = c1.user_id
with cte as ( select * from ( select user_id as seller_id, favorite_brand, item_brand, rank() over(partition by user_id order by order_date) rnk, count(*) over(partition by user_id) order_count from users u left join orders o on u.user_id = o.seller_id left join items i on i.item_id = o.item_id ) t where rnk = 2 ) select user_id as seller_id, case when item_brand = u.favorite_brand and order_count > 1 then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join cte on u.user_id = cte.seller_id
with cte as ( select a.order_date, a.seller_id, b.favorite_brand as brand, c.item_brand from Orders a left join Users b on a.seller_id = b.user_id left join Items c on a.item_id = c.item_id), cte2 as ( select seller_id from (select *, row_number () over (partition by seller_id order by order_date) as rk from cte) t where t.rk = 2 and t.brand= t.item_brand) select user_id as seller_id, case when user_id in (select * from cte2) then "yes" else "no" end as "2nd_item_fav_brand" from Users
with cte as ( select a.seller_id,b.item_brand ,rank()over(partition by seller_id order by order_date) as rnk from orders a left join items b on a.item_id=b.item_id ) select a.user_id as seller_id, case when a.favorite_brand=b.item_brand then "yes" else "no" end as 2nd_item_fav_brand from users a left join ( select seller_id,item_brand from cte where rnk=2) b on a. user_id=b.seller_id
with cte as ( select a.seller_id,b.item_brand ,row_number()over(partition by seller_id order by order_date) as rnk from orders a left join items b on a.item_id=b.item_id ) select a.user_id as seller_id, case when a.favorite_brand=b.item_brand then "yes" else "no" end as 2nd_item_fav_brand from users a left join ( select seller_id,item_brand from cte where rnk=2) b on a. user_id=b.seller_id
with cte as ( select a.seller_id,b.item_brand ,row_number()over(partition by seller_id order by order_date) as rnk,c.favorite_brand from orders a left join items b on a.item_id=b.item_id left join users c on a.seller_id=c.user_id ) select a.user_id as seller_id, case when b.seller_id is not null then "yes" else "no" end as 2nd_item_fav_brand from users a left join ( select seller_id from cte where rnk=2 and favorite_brand= item_brand) b on a.user_id=b.seller_id
with cte as ( select a.seller_id,b.item_brand ,row_number()over(partition by seller_id order by order_date) as rnk,c.favorite_brand from orders a left join items b on a.item_id=b.item_id left join users c on a.seller_id=c.user_id ), yes as ( select seller_id from cte where rnk=2 and favorite_brand= item_brand) select a.user_id as seller_id, case when b.seller_id is not null then "yes" else "no" end as 2nd_item_fav_brand from users a left join yes b on a.user_id=b.seller_id
with cte as ( select a.seller_id,b.item_brand ,row_number()over(partition by seller_id order by order_date) as rnk,c.favorite_brand from orders a left join items b on a.item_id=b.item_id left join users c on a.seller_id=c.user_id ), yes as ( select seller_id from cte where rnk=2 and favorite_brand= item_brand) select user_id as seller_id, case when user_id in (select * from yes) then "yes" else "no" end as 2nd_item_fav_brand from users
with cte as ( select item_id, seller_id from ( select item_id, seller_id, rank() over (partition by seller_id order by order_date) r from orders ) f where r = 2 ), cte1 as ( select cte.item_id, cte.seller_id, i.item_brand, u.favorite_brand from cte join items i on cte.item_id = i.item_id join users u on cte.seller_id = u.user_id ) select u.user_id seller_id, ifnull(case when cte1.item_brand = cte1.favorite_brand then 'yes' else 'no' end, 'no') as '2nd_item_fav_brand' from users u left join cte1 on u.user_id = cte1.seller_id
with cte as ( select o.seller_id ,item_brand, dense_rank() over(partition by seller_id order by o.order_date) rnk from Orders o join Items i on i.item_id = o.item_id) , cnt as ( select seller_id, count( distinct item_id) ordr_cnt from orders o group by seller_id ) select user_id seller_id, max(coalesce(case when rnk = 2 and item_brand = u.favorite_brand then 'yes' when ordr_cnt < 2 or ct.seller_id is null then 'no' end, 'no')) 2nd_item_fav_brand from users u left join cte c on c.seller_id = u.user_id left join cnt ct on ct.seller_id = u.user_id group by user_id
with cte as ( select o.seller_id as user_id, i.item_brand as brand, dense_rank() over(partition by o.seller_id order by o.order_date asc) as itemSaleRank from Orders o join Items i on o.item_id = i.item_id ) select u.user_id as seller_id, case when max(c.itemSaleRank)<2 then 'no' when u.favorite_brand = c.brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join (select user_id, brand, itemSaleRank from cte where itemSaleRank = 2) c on u.user_id = c.user_id group by 1
with cte as ( select o.seller_id, (case when i.item_brand = u.favorite_brand then 'yes' else 'no' end) as 2nd_item_fav_brand, rank() over(partition by seller_id order by order_date asc) as r from orders o join items i on o.item_id = i.item_id join users u on o.seller_id = u.user_id ) select u.user_id seller_id, ifnull(2nd_item_fav_brand,'no') 2nd_item_fav_brand from (select seller_id, 2nd_item_fav_brand from cte c where r = 2) t right join users u on t.seller_id = u.user_id
with cte as ( select o.seller_id, i.item_brand , row_number() over(partition by o.seller_id order by o.order_date) as r from Orders o join Items i on o.item_id = i.item_id ), cte2 as( select * from cte where r= 2 ) select user_id as seller_id, case when u.favorite_brand = cte2.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join cte2 on u.user_id = cte2.seller_id
with cte as ( select o.seller_id, o.item_id from (select *, row_number() over(partition by seller_id order by order_date) as rk from Orders) as o where o.rk=2), brand as ( select user_id from Items i join Users u on u.favorite_brand=i.item_brand) select u.user_id as seller_id, case when i.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join cte t on u.user_id = t.seller_id left join items i on i.item_id = t.item_id
with cte as ( select o.seller_id, o.item_id, item_brand, row_number() over (partition by seller_id order by order_date) as rnk from orders o join items i on i.item_id = o.item_id ) , cte2 as ( select * from cte where rnk = 2) select u.user_id as seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end as '2nd_item_fav_brand' from users u left join cte2 c on u.user_id = c.seller_id
with cte as ( select o.seller_id, o.order_date, u.favorite_brand, i.item_brand, rank() over (partition by o.seller_id order by o.order_date ASC) as 'daterank' from Orders o left join Users u on o.seller_id = u.user_id left join Items i on o.item_id = i.item_id ), cte2 as ( select seller_id from cte where daterank = 2 and favorite_brand = item_brand group by 1 ) select u.user_id as 'seller_id', case when cte2.seller_id IS NULL then 'no' else 'yes' end as '2nd_item_fav_brand' from Users u left join cte2 on u.user_id = cte2.seller_id
with cte as ( select seller_id, dense_rank() over(partition by seller_id order by order_date) as rk, item_id from orders ) select u.user_id as seller_id, case when u.favorite_brand = i.item_brand then "yes" else "no" end as "2nd_item_fav_brand" from users u left join cte on cte.seller_id = u.user_id and cte.rk = 2 left join items i on i.item_id = cte.item_id
with cte as ( select seller_id, favorite_brand, item_brand from (select seller_id, item_id, row_number() over(partition by seller_id order by order_date) rk from orders) r1 join users on user_id=seller_id natural join items where rk=2 ) select u.user_id as seller_id, (case when c.favorite_brand = c.item_brand then 'yes' else 'no' end) 2nd_item_fav_brand from users u left join cte c on u.user_id=c.seller_id
with cte as ( select seller_id, o.item_id, item_brand, order_date, row_number()over(partition by seller_id order by order_date) num from Orders o left join Items i on o.item_id = i.item_id), t as (select seller_id, item_brand from cte where num=2) select user_id as seller_id, case when favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join t on u.user_id = t.seller_id
with cte as ( select seller_id, order_id, dense_rank() over(partition by seller_id order by order_date) as rk, item_id from orders ) select u.user_id as seller_id, case when u.favorite_brand = i.item_brand then "yes" else "no" end as "2nd_item_fav_brand" from users u left join cte on cte.seller_id = u.user_id and cte.rk = 2 left join items i on i.item_id = cte.item_id
with cte as ( select seller_id, rank() over(partition by seller_id order by order_date) as rk, item_id from orders ) select u.user_id as seller_id, case when u.favorite_brand = i.item_brand then "yes" else "no" end as "2nd_item_fav_brand" from users u left join cte on cte.seller_id = u.user_id and cte.rk = 2 left join items i on i.item_id = cte.item_id
with cte as ( select seller_id,item_id from (select seller_id,item_id,rank() over (partition by seller_id order by order_date) as rn from Orders)t1 where t1.rn = 2 ), cte1 as ( select seller_id,items.item_brand as itb,favorite_brand as fb from cte join Users join Items on cte.item_id = Items.item_id and cte.seller_id = Users.user_id ) select seller_id,case when itb = fb then "yes" else "no" end as 2nd_item_fav_brand from cte1 union all select User_id,"no" from Users where user_id not in (select seller_id from cte1) order by seller_id
with cte as ( select u.user_id, o.order_id, o.order_date,o.item_id,i.item_id as fav_brand_id, DENSE_RANK() OVER (PARTITION BY o.seller_id ORDER By o.ORDER_DATE ) as Order_Rank from Users u left join Orders o on u.user_id = o.seller_id inner join Items i on u.favorite_brand = i.item_brand ) select distinct u.user_id as seller_id, case when c.Order_Rank = 2 and item_id = fav_brand_id Then "yes" Else "no" End as 2nd_item_fav_brand from Users u left join cte c on c.user_id = u.user_id and c.Order_Rank = 2 and item_id = fav_brand_id
with cte as ( select u.user_id, o.order_id, o.order_date,o.item_id,i.item_id as fav_brand_id, DENSE_RANK() OVER (PARTITION BY o.seller_id ORDER By o.ORDER_DATE ) as Order_Rank from Users u left join Orders o on u.user_id = o.seller_id join Items i on u.favorite_brand = i.item_brand ) select distinct u.user_id as seller_id, case when c.Order_Rank = 2 and item_id = fav_brand_id Then "yes" Else "no" End as 2nd_item_fav_brand from Users u left join cte c on c.user_id = u.user_id and c.Order_Rank = 2 and item_id = fav_brand_id
with cte as ( select user_id, favorite_brand, item_brand, order_date, dense_rank() over(partition by user_id order by order_date) rnk from orders o right join users u on o.seller_id = u.user_id right join items i on o.item_id = i.item_id ) select seller_id, (case when favorite_brand = item_brand then "yes" else "no" end) as 2nd_item_fav_brand from (select u.user_id seller_id, cte.favorite_brand favorite_brand, cte.item_brand item_brand from users u left join cte on u.user_id = cte.user_id and rnk = 2) a
with cte as ( select user_id, favorite_brand, item_brand, order_date, dense_rank() over(partition by user_id order by order_date) rnk from orders o right join users u on o.seller_id = u.user_id right join items i on o.item_id = i.item_id ) select seller_id, (case when favorite_brand is null then "no" when favorite_brand != item_brand then "no" when favorite_brand = item_brand then "yes" end) as 2nd_item_fav_brand from (select u.user_id seller_id, cte.favorite_brand favorite_brand, cte.item_brand item_brand from users u left join cte on u.user_id = cte.user_id and rnk = 2) a
with cte as (Select seller_id,item_id,row_number() over (partition by seller_id order by order_date) as sell_rank from orders), cte2 as (select a.seller_id,a.item_id, case when b.item_brand=c.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from cte as a inner join items as b on a.item_id=b.item_id inner join users as c on a.seller_id=c.user_id where sell_rank=2) select e.user_id as seller_id, coalesce(f.2nd_item_fav_brand,"no") as 2nd_item_fav_brand from users as e left join cte2 as f on e.user_id=f.seller_id
with cte as (select *, rank()over(partition by seller_id order by order_date) as ranking from orders), second as (select * from cte where ranking = 2) select u.user_id as seller_id, case when u.favorite_brand = i.item_brand then 'yes' else 'no' end as '2nd_item_fav_brand' from users u left join second s on u.user_id = s.seller_id left join items i on s.item_id = i.item_id
with cte as (select seller_id, item_brand from (select seller_id, i.item_brand, o.item_id, order_date, rank()over(partition by seller_id order by order_date asc) as rnk from Orders o inner join Items i on o.item_id = i.item_id) a where rnk =2 ) select u.user_id as seller_id, ( case when u.favorite_brand =cte.item_brand then 'yes' else 'no' end ) as 2nd_item_fav_brand from Users u left join cte on u.user_id = cte.seller_id
with cte as (select seller_id, item_brand from (select seller_id, item_brand, dense_rank() over(partition by seller_id order by order_date) as rk from Orders o join Items i on o.item_id = i.item_id) t where t.rk = 2) select u.user_id as seller_id, (case when u.favorite_brand = c.item_brand then 'yes' else 'no' end) as 2nd_item_fav_brand from Users u left join cte c on u.user_id = c.seller_id
with cte as (select seller_id, item_brand from (select seller_id, item_brand, rank()over(partition by seller_id order by order_date asc) as rk from orders left join items on orders.item_id=items.item_id) tb1 where rk=2) select user_id as seller_id, case when favorite_brand=item_brand then "yes" else "no" end as 2nd_item_fav_brand from users left join cte on users.user_id=cte.seller_id
with cte as (select seller_id, item_brand from (select seller_id, item_id, rank() over(partition by seller_id order by order_date asc) as rnk from orders) temp left join items using(item_id) where rnk = 2), cte2 as (select seller_id, item_brand from cte where (seller_id, item_brand) in (select user_id, favorite_brand from users)) select user_id as seller_id, (case when cte2.seller_id IS NULL then 'no' else 'yes' end) as '2nd_item_fav_brand' from users left join cte2 on users.user_id = cte2.seller_id
with cte as (select seller_id, item_brand, rank()over(partition by seller_id order by order_date)as rnk from Orders o inner join Items i on o.item_id = i.item_id), cte0 as (select * from cte where rnk=2) select user_id as seller_id, case when favorite_brand = item_brand then 'yes' else 'no'end as 2nd_item_fav_brand from users u left join cte0 on cte0.seller_id = u.user_id group by u.user_id
with cte as (select seller_id, item_id from (select seller_id, item_id, rank() over(partition by seller_id order by order_date asc) as rk from Orders) s where rk = 2) select u.user_id as seller_id, case when u.favorite_brand = i.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join cte c on u.user_id = c.seller_id left join Items i on c.item_id = i.item_id order by 1
with cte as (select seller_id, item_id from (select seller_id,item_id, row_number() over(partition by seller_id order by order_date) as rnkitems from orders)a where rnkitems = 2 group by seller_id) select user_id as 'seller_id', ifnull(case when item_brand = favorite_brand then 'yes' else 'no' end,'no') as 2nd_item_fav_brand from users u left join cte c on u.user_id = c.seller_id left join items i on c.item_id = i.item_id
with cte as( select * from( select seller_id, i.item_brand, rank ()over(partition by seller_id order by order_date) as rnk from Orders o join Items i on o.item_id=i.item_id )t where rnk=2 ) select u.user_id as Seller_id, case when item_brand=favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from cte right join Users u on Seller_id=user_id
with cte as( select * from( select seller_id, item_id, rank() over(partition by seller_id order by order_date) as rank0 from orders ) sub where rank0 = 2 ) select user_id as seller_id, case when favorite_brand = item_brand then "yes" else "no" end as 2nd_item_fav_brand from( select u.user_id, favorite_brand, i.item_brand from users u left join cte c on u.user_id = c.seller_id left join items i on c.item_id = i.item_id ) sub1
with cte as( select item_id, seller_id, order_date from ( select item_id, seller_id, order_date, dense_rank() over(partition by seller_id order by order_date) as rnk from Orders) as temp where rnk =2) select user_id as seller_id, case when item_brand = favorite_brand then 'yes' when item_brand is null then 'no' else 'no' end '2nd_item_fav_brand' from Users left join cte on user_id = seller_id left join Items on cte.item_id = Items.item_id
with cte as( select seller_id from (select o.seller_id, o.item_id,u.favorite_brand, i.item_brand, rank() over(partition by o.seller_id order by order_date) as rk from orders o join users u on o.seller_id = u.user_id join items i on i.item_id = o.item_id)a where rk = 2 and favorite_brand = item_brand) select user_id as seller_id, case when user_id in (select distinct seller_id from cte ) then 'yes' else 'no' end as '2nd_item_fav_brand' from users
with cte as( select seller_id, o.item_id, i.item_brand, dense_rank() over(partition by seller_id order by order_date) as dr from orders o join items i on o.item_id = i.item_id) select u.user_id as seller_id, case when item_id is null or t.item_brand != favorite_brand then 'no' else 'yes' end as 2nd_item_fav_brand from users u left join (select * from cte where dr = 2) as t on t.seller_id = u.user_id
with cte as(select seller_id, item_brand from(select o.seller_id, rank() over(partition by o.seller_id order by o.order_date) as rnk, i.item_brand from Orders o join Items i on o.item_id = i.item_id) a where rnk = 2) select a.user_id as seller_id, case when b.item_brand = a.favorite_brand then 'yes' when b.item_brand <> a.favorite_brand or b.item_brand is null then 'no' end as 2nd_item_fav_brand from Users a left join cte b on a.user_id = b.seller_id order by 1
with cte1 as ( select seller_id, item_id, rank() over(partition by seller_id order by order_date asc) as rnk from orders), cte2 as ( select c.seller_id, i.item_brand from items i join cte1 c on i.item_id=c.item_id where c.rnk=2) select u.user_id as seller_id, if(c.item_brand=u.favorite_brand, 'yes', 'no') as 2nd_item_fav_brand from users u left join cte2 c on u.user_id=c.seller_id
with cte1 as ( select u.user_id as seller_id, u.favorite_brand, i.item_id from Users u join Items i on u.favorite_brand=i.item_brand ), cte2 as ( select * from ( select *, rank() over(partition by seller_id order by order_date) as line from Orders ) t where t.line=2), cte3 as ( select distinct c1.seller_id, (case when c1.item_id=c2.item_id then "yes" else "no" end) as 2nd_item_fav_brand from cte1 c1 left join cte2 c2 on c1.seller_id=c2.seller_id ), cte4 as ( select o.seller_id, o.order_date, o.item_id, i.item_brand from Orders o left join Items i on o.item_id=i.item_id order by order_date limit 1 offset 1 ), cte5 as ( select user_id as seller_id, (case when favorite_brand = ( select i.item_brand from Orders o left join Items i on o.item_id = i.item_id where o.seller_id = u.user_id order by o.order_date limit 1 offset 1 ) then "yes" else "no" end ) as "2nd_item_fav_brand" from Users u ) select * from cte5
with cte1 as ( select user_id, favorite_brand, item_brand, order_date from orders o right join users u on o.seller_id = u.user_id right join items i on o.item_id = i.item_id ), cte2 as (select *, dense_rank() over(partition by user_id order by order_date) rnk from cte1) select seller_id, (case when favorite_brand is null then "no" when favorite_brand != item_brand then "no" when favorite_brand = item_brand then "yes" end) as 2nd_item_fav_brand from (select u.user_id seller_id, cte2.favorite_brand favorite_brand, cte2.item_brand item_brand from users u left join cte2 on u.user_id = cte2.user_id and rnk = 2) a
with cte1 as ( select user_id,favorite_brand,item_brand,rank() over(partition by user_id order by order_date) as rnk, count(*) over(partition by user_id) as cnt from users u left join orders o on (o.seller_id=u.user_id) left join items i using(item_id) ) select user_id as seller_id, case when favorite_brand=item_brand and rnk=2 then "yes" else "no" end as 2nd_item_fav_brand from cte1 where rnk=2 or cnt<2
with cte1 as (select seller_id, item_id, order_date, rank() over (partition by seller_id order by order_date asc) as rn from orders), cte2 as (select a.seller_id, b.item_brand from cte1 as a join items as b where a.rn = 2 and a.item_id = b.item_id), cte3 as (select a.seller_id, b.favorite_brand from cte1 as a join users as b where a.seller_id = b.user_id), cte4 as (select a.seller_id, a.item_brand, b.favorite_brand from cte2 as a join cte3 as b on a.seller_id = b.seller_id) select distinct a.user_id as seller_id, (case when b.item_brand = b.favorite_brand then 'yes' else 'no' end) as 2nd_item_fav_brand from users as a left join cte4 as b on a.user_id = b.seller_id
with cte1 as (select seller_id, item_id, order_date, rank() over (partition by seller_id order by order_date asc) as rn from orders), cte2 as (select a.seller_id, b.item_brand from cte1 as a join items as b where a.rn = 2 and a.item_id = b.item_id), cte3 as (select a.seller_id, b.favorite_brand from cte1 as a join users as b where a.seller_id = b.user_id), cte4 as (select a.seller_id, a.item_brand, b.favorite_brand from cte2 as a join cte3 as b on a.seller_id = b.seller_id) select distinct a.user_id as seller_id, (case when b.item_brand = b.favorite_brand then 'yes' when b.item_brand <> b.favorite_brand then 'no' else 'no' end) as 2nd_item_fav_brand from users as a left join cte4 as b on a.user_id = b.seller_id
with cte1 as (select user_id, favorite_brand, item_id from (select item_id, seller_id from (select item_id, seller_id, row_number() over(partition by seller_id order by order_date) as rw from orders) t where rw = 2) t right join users u on user_id = seller_id) select user_id as seller_id, (case when favorite_brand = item_brand then 'yes' else 'no' end) as 2nd_item_fav_brand from cte1 left join items i using (item_id)
with cte2 as(select seller_id, i.item_brand from( select *, row_number()over(partition by seller_id order by order_date)as rk1 from orders)cte left join items i on i.item_id=cte.item_id where rk1=2) select user_id as seller_id, (case when favorite_brand=item_brand then 'yes' when item_brand is null then 'no'else 'no'end)as 2nd_item_fav_brand from( select user_id, favorite_brand, cte2.item_brand from users left join cte2 on users.user_id=cte2.seller_id)cte3
with data_table as ( select seller_id , u.favorite_brand as favorite_brand , o.item_id , i.item_brand as item_brand , order_id , order_date , rank() over(partition by seller_id order by order_date) as sale_rank from orders o left join users u on u.user_id=o.seller_id left join items i on i.item_id=o.item_id ), second_data as ( select * from data_table where sale_rank=2 ) select user_id as seller_id , coalesce(case when dt.favorite_brand=dt.item_brand then 'yes' when dt.favorite_brand!=dt.item_brand then 'no' end,'no') as 2nd_item_fav_brand from users left join second_data dt on dt.seller_id=users.user_id
with df as ( select seller_id, item_brand from ( select c.seller_id, c.item_id, d.item_brand, rank() over(partition by c.seller_id order by c.order_date) as ranks from orders c join items d on c.item_id = d.item_id) e where ranks = 2) select seller_id, (case when favorite_brand = item_brand then 'yes' else 'no' end) as 2nd_item_fav_brand from ( select x.user_id as seller_id, x.favorite_brand, ifnull(y.item_brand,0) as item_brand from users x left join df y on x.user_id = y.seller_id) z
with half as (select new.seller_id, case when new.favorite_brand = new.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from ( select o.seller_id, o.order_date, i.item_brand, u.favorite_brand, rank() over(partition by o.seller_id order by o.order_date asc) as r from orders o left join items i on o.item_id = i.item_id left join users u on u.user_id = o.seller_id) new where r = 2) select user_id as seller_id, 'no' as 2nd_item_fav_brand from users u where user_id not in (select seller_id from half) union select * from half
with has_2nd as (select user_id as seller_id, case when favorite_brand=item_brand then 'yes' else 'no' end as has_2nd from (select a.user_id, a.favorite_brand, c.item_brand, row_number() over(partition by a.user_id order by b.order_date) as row_num from users as a left join orders as b on a.user_id=b.seller_id left join items as c on b.item_id=c.item_id) tmp where row_num=2) select a.user_id as seller_id, case when b.seller_id is null then 'no' else b.has_2nd end as 2nd_item_fav_brand from users as a left join has_2nd as b on a.user_id=b.seller_id
with have2nd as (select order_id, item_id, seller_id from (select order_id, item_id, seller_id, row_number() over(partition by seller_id order by order_date) as rnk from orders ) tmp where rnk=2) select a.user_id as seller_id, case when a.favorite_brand=c.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users as a left join have2nd as b on a.user_id=b.seller_id left join items as c on b.item_id=c.item_id
with have_2nd as ( select a.user_id, case when a.favorite_brand=c.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users as a inner join (select item_id, seller_id, row_number() over(partition by seller_id order by order_date) as row_num from orders) as b on a.user_id=b.seller_id inner join items as c on b.item_id=c.item_id where b.row_num=2 ) select a.user_id as seller_id, ifnull(b.2nd_item_fav_brand,'no') as 2nd_item_fav_brand from users as a left join have_2nd as b on a.user_id=b.user_id
with items_2nd as ( select seller_id, item_brand from ( select seller_id, item_brand, rank() OVer(partition by seller_id order by order_date ASC) as rnk from orders a left join items b ON a.item_id = b.item_id) a where rnk = 2) select a.user_id as seller_id, CASE WHEN favorite_brand = item_brand THEN 'yes' ELSE 'no' END as '2nd_item_fav_brand' from users a left join items_2nd b on a.user_id = b.seller_id
with joined as ( select a.*, b.favorite_brand, c.item_brand, RANK() over(partition by a.seller_id order by a.order_date) as rank_num from Orders a left join Users b on a.seller_id = b.user_id left join Items c on a.item_id = c.item_id ) select a.user_id as seller_id, case when b.favorite_brand is not null and b.item_brand is not null and b.favorite_brand = b.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from (select distinct user_id from Users) a left join joined b on a.user_id = b.seller_id and b.rank_num = 2
with new as( select seller_id, item_id, item_brand from( select seller_id, o.item_id, item_brand, row_number() over(partition by seller_id order by order_date) as num from orders as o join items as i on i.item_id = o.item_id) as a where num = 2), new2 as( select user_id, item_id, favorite_brand, item_brand from users as u left join new on u.user_id = new.seller_id) select user_id as seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from new2
with orders2 as ( select seller_id, item_id, favorite_brand, item_brand, row_number() OVER(PARTITION BY seller_id ORDER BY order_date) as row_id FROM orders JOIN items USING (item_id) INNER JOIN users ON seller_id = user_id ) select u.user_id as seller_id, coalesce(2nd_item_fav_brand, "no") as 2nd_item_fav_brand FROM users as u left join ( SELECT seller_id as user_id, "yes" as 2nd_item_fav_brand FROM orders2 WHERE row_id = 2 AND favorite_brand = item_brand ) as tmp using (user_id)
with prep as ( select o.* , u.user_id , row_number()over(partition by o.seller_id order by o.order_date) rn , if(lead(i.item_brand ,1)over(partition by o.seller_id order by o.order_date) =u.favorite_brand, 1, 0) IsNextFavorite from orders o left outer join users u on u.user_id=o.seller_id left outer join items i on i.item_id=o.item_id ) , prep2 as ( select user_id as seller_id , if(IsNextFavorite =1, 'yes','no') 2nd_item_fav_brand from prep where rn=1 ) select u.user_id as seller_id , coalesce(prep2.2nd_item_fav_brand, 'no')2nd_item_fav_brand from users u left outer join prep2 on u.user_id=prep2. seller_id order by 1
with rank_orders as ( select seller_id, order_date, item_id, rank() over (partition by seller_id order by order_date asc) as `rank` from orders ) select t1.user_id as seller_id, case when t3.item_brand is null then 'no' when t1.favorite_brand != item_brand then 'no' else 'yes' end as `2nd_item_fav_brand` from users t1 left join ( select * from rank_orders where `rank` = 2 ) t2 on t2.seller_id = t1.user_id left join items t3 on t3.item_id = t2.item_id
with ranked as (select o.item_id, o.seller_id, i.item_brand, rank() over (partition by seller_id order by order_date) as rk from Orders o left join Items i on o.item_id = i.item_id), secondsell as (select seller_id, item_brand from ranked where rk = 2) select user_id as seller_id, case when favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u left join secondsell s on u.user_id = s.seller_id
with ranked as( select order_id, order_date, a.item_id, a.seller_id, b.favorite_brand, c.item_brand, case when b.favorite_brand = c.item_brand then 'yes' else 'no' end 2nd_item_fav_brand, row_number() over (partition by seller_id order by order_date) as rk from orders a join users b on a.seller_id = b.user_id join items c on a.item_id = c.item_id order by seller_id ) select a.user_id as seller_id, coalesce(b.2nd_item_fav_brand, 'no') as 2nd_item_fav_brand from users a left outer join ( select seller_id, 2nd_item_fav_brand, rk from ranked where (rk = 2 and 2nd_item_fav_brand = 'yes') ) b on a.user_id = b.seller_id
with rankedTable as(select seller_id,rank() over(partition by seller_id order by order_date) as ranked,i1.item_brand from Orders o1 left join Items i1 on i1.item_id=o1.item_id), rankedTable2 as(select * from rankedTable where ranked=2) select u1.user_id as seller_id, case when r1.item_brand=u1.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users u1 left join rankedTable2 r1 on u1.user_id=r1.seller_id
with ranked_orders as ( select seller_id, item_id, RANK() OVER ( PARTITION BY seller_id ORDER BY order_date asc) rrank from orders ), second_order as ( select seller_id, item_brand from ranked_orders r join items i on r.item_id = i.item_id where rrank = 2 ) select user_id as seller_id, if (favorite_brand = item_brand, "yes", "no") as 2nd_item_fav_brand from users u left outer join second_order s on u.user_id = s.seller_id
with ranks as ( select order_id, item_id, order_date, seller_id, rank() over(partition by seller_id order by order_date) ranking from Orders ), summ as ( select u.user_id, ifnull(r.ranking,0) r, i.item_brand ib, u.favorite_brand fb from Users u left join ranks r on u.user_id=r.seller_id left join Items i on i.item_id=r.item_id ) select s.user_id seller_id, CASE WHEN (s.ib=s.fb) THEN 'yes' ELSE 'no' END AS 2nd_item_fav_brand from summ s where s.r=2 union select s.user_id seller_id, 'no' from summ s where s.user_id in (select summ.user_id from summ group by summ.user_id having count(summ.user_id)<=1 )
with ranks as ( select seller_id, item_id, row_number() over (partition by seller_id order by order_date) as rr from Orders ), seconds as ( select s.seller_id, if(u.favorite_brand = i.item_brand, 'yes', 'no') as 2nd_item_fav_brand from ranks s join Items i USING (item_id) join Users u on s.seller_id = u.user_id where rr = 2 ) select u.user_id as seller_id, coalesce(2nd_item_fav_brand, 'no') as 2nd_item_fav_brand from Users u left join seconds s on u.user_id = s.seller_id
with reOrders as ( select seller_id,item_id from ( SELECT seller_id,item_id, row_number() over(partition by seller_id order by order_date) as rowNum FROM Orders) a where rowNum = 2 ) SELECT user_id seller_id, if(b.seller_id is null,'no','yes') 2nd_item_fav_brand FROM Users a left join ( select seller_id from Users a inner join Items b on a.favorite_brand = b.item_brand inner join reOrders c on b.item_id = c.item_id and a.user_id = c.seller_id ) b on a.user_id = b.seller_id order by 1
with res as (select o1.seller_id, o1.order_date, o1.item_id from orders o1 join orders o2 on o1.seller_id = o2.seller_id where o1.order_date>o2.order_date group by o1.seller_id, o1.order_date having count(o1.order_id)=1) select user_id as seller_id, (case when item_brand = favorite_brand then 'yes' else 'no' end) as 2nd_item_fav_brand from users as u left join res on u.user_id = res.seller_id left join items on items.item_id = res.item_id
with rnk as (select item_id,seller_id, rank()over(partition by seller_id order by order_date) as rnk from orders), seller_list as (select distinct(user_id) as user_id from users) select seller_list.user_id as seller_id, case when favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from seller_list left join ( select seller_id, favorite_brand,item_brand from rnk left join users on rnk.seller_id = users.user_id left join items on rnk.item_id = items.item_id where rnk.rnk = 2)a on seller_list.user_id = a.seller_id group by 1
with s as ( select seller_id, i.item_brand as item_brand, rank() over (partition by seller_id order by order_date ASC) as dayOfSell from orders o LEFT JOIN Items i on o.item_id=i.item_id ) select u.user_id as seller_id, CASE WHEN s.item_brand=u.favorite_brand THEN 'yes' else 'no' END AS 2nd_item_fav_brand from USERS U Left JOIN s ON u.user_id=s.seller_id where s.dayOfSell=2 UNION ALL select user_id as seller_id, 'no' as 2nd_item_fav_brand from users where user_id not in(select seller_id from s where s.dayOfSell=2) order by seller_id asc
with sec_fav_brand as ( select seller_id, item_brand from (select o.seller_id, i.item_brand, rank() over(partition by o.seller_id order by order_date) as rank_brand from Orders o join Items i on o.item_id = i.item_id) temp1 where rank_brand = 2 ) select u.user_id as seller_id, ifnull(case when u.favorite_brand = s.item_brand then 'yes' else 'no' end, 'no') as 2nd_item_fav_brand from Users u left join sec_fav_brand s on u.user_id = s.seller_id
with sec_item as ( select r.seller_id, i.item_brand from (select seller_id, item_id, rank() over( partition by seller_id order by order_date) as date_rnk from orders) r left join items i on r.item_id = i.item_id where r.date_rnk = 2 ) select u.user_id as seller_id, case when s.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join sec_item s on u.user_id = s.seller_id
with sec_sold_cte as (select seller_id,item_id from (SELECT seller_id, item_id, order_date, RANK() OVER(PARTITION BY seller_id ORDER BY order_date) as rnk FROM Orders) t WHERE t.rnk = 2) SELECT u.user_id as seller_id, Case when i.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand FROM Users u LEFT JOIN sec_sold_cte c ON u.user_id = c.seller_id LEFT JOIN Items i ON i.item_id = c.item_id
with second as ( select seller_id, item_id, row_number() over (partition by seller_id order by order_date) as rr from Orders ), cte as ( select s.seller_id, if(u.favorite_brand = i.item_brand, 'yes', 'no') as 2nd_item_fav_brand from second s join Items i USING (item_id) join Users u on s.seller_id = u.user_id where rr = 2 ) select u.user_id as seller_id, coalesce(2nd_item_fav_brand, 'no') as 2nd_item_fav_brand from Users u left join cte on u.user_id = cte.seller_id
with second as ( select seller_id, item_id, row_number() over (partition by seller_id order by order_date) as rr from Orders ), cte as ( select u.user_id as seller_id, case when u.favorite_brand = i.item_brand and rr = 2 then 'yes' when u.favorite_brand != i.item_brand and rr = 2 then 'no' when max(rr) OVER(partition by seller_id) < 2 then 'no' when rr is null then 'no' else NULL end as 2nd_item_fav_brand from second s join Items i USING (item_id) right join Users u on s.seller_id = u.user_id ) select * from cte where 2nd_item_fav_brand is not null
with second as ( select t.order_id, t.seller_id, t.item_brand from (select o.order_id, o.seller_id, i.item_brand, row_number() over (partition by o.seller_id order by o.order_date asc) as r from orders o inner join items i on i.item_id = o.item_id) as t where t.r =2) select u.user_id as seller_id, case when u.favorite_brand =s.item_brand then "yes" else "no" end as '2nd_item_fav_brand' from users u left join second s on s.seller_id =u.user_id
with second as( select seller_id, item_id, rnk from( select seller_id, order_date, item_Id, rank()over(partition by seller_id order by order_date) as rnk from Orders) as orderr where rnk = 2 ) select user_id as seller_Id, case when s.seller_id is null or i.item_id is null then 'no' else 'yes' end as 2nd_item_fav_brand from Users u left join second s on u.user_id = s.seller_id left join Items i on i.item_brand = u.favorite_brand and s.item_Id = i.item_Id
with second_day as ( Select t3.*, t4.favorite_brand, case when item_brand=favorite_brand then "yes" else "no" end as fav from (Select t1.*, t2.item_brand from (Select *, rank() over(partition by seller_id order by order_date) as rnk from Orders ) t1 left join Items t2 on t1.item_id=t2.item_id where rnk=2) t3 left join Users t4 on t4.user_id=t3.seller_id) Select a.user_id as seller_id, coalesce(b.fav,"no") as 2nd_item_fav_brand from Users a left join second_day b on a.user_id=b.seller_id order by user_id
with second_day_item as ( SELECT t0.item_id, t0.seller_id, t0.item_brand FROM ( SELECT o.item_id, o.seller_id, i.item_brand, dense_rank() over (partition by o.seller_id order by o.order_date) as rnk FROM Orders o INNER JOIN Items i ON o.item_id = i.item_id ) t0 where t0.rnk = 2 ) SELECT a.user_id as seller_id, case when b.seller_id is null or a.favorite_brand != b.item_brand then 'no' else 'yes' end as 2nd_item_fav_brand FROM Users a LEFT JOIN second_day_item b ON a.user_id = b.seller_id order by seller_id
with second_item as ( select seller_id, item_id, row_number() over (partition by seller_id order by order_date asc) as rn from Orders ), all_details as ( select sec.seller_id , i.item_brand as second_item from second_item as sec left join items as i on sec.item_id = i.item_id where rn = 2 ) select u.user_id seller_id , case when second_item = favorite_brand then "yes" else "no" end as 2nd_item_fav_brand from users as u left join all_Details as a on u. user_id = a.seller_id
with second_item as ( select seller_id, order_id, order_date, item_id, row_number() over (partition by seller_id order by order_date) as row_index from Orders ) , tmp1 as ( select seller_id, order_date, item_id from second_item where row_index = 2) select t3.user_id as seller_id, case when t2.item_brand = t3.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from tmp1 t1 left join Items t2 on t1.item_id = t2.item_id right join Users t3 on t1.seller_id = t3.user_id
with second_item as( select seller_id, item_brand from( select seller_id, item_brand, dense_rank() over(partition by seller_id order by order_date) as rnk from Orders o join Items i on o.item_id = i.item_id) temp where rnk = 2 ) select user_id as seller_id, (case when favorite_brand = item_brand then "yes" else "no" end) as "2nd_item_fav_brand" from Users u left join second_item s on u.user_id = s.seller_id
with second_o as (select o.seller_id, i.item_brand, rank() over (partition by seller_id order by order_date) as rk from orders o, items i where o.item_id = i.item_id ) select u1.user_id as seller_id, case when u1.favorite_brand = so.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from second_o so right join users u1 on u1.user_id = so.seller_id and so.rk = 2
with second_order as (select seller_id, item_id from (select order_date, item_id, seller_id, rank () over (partition by seller_id order by order_date) as rnk from orders) sub where rnk = 2), brand as ( select s.seller_id, u.favorite_brand as fav_brand, i.item_brand as brand from second_order s inner join items i on s.item_id = i.item_id join users u on s.seller_id = u.user_id) (select seller_id, (case when fav_brand =brand then "yes" else "no" end) as 2nd_item_fav_brand from brand) union (select user_id, "no" as 2nd_item_fav_brand from users where user_id not in (select seller_id from second_order))
with second_sell as( SELECT seller_id, RANK() OVER (PARTITION BY seller_id ORDER BY order_date ASC) as rank_buys, item_id FROM Orders) Select a.user_id as seller_id, CASE WHEN a.favorite_brand=c.item_brand THEN 'yes' ELSE 'no' END as 2nd_item_fav_brand FROM Users a LEFT JOIN (SELECT * FROM second_sell where rank_buys=2) b ON a.user_id=b.seller_id LEFT JOIN Items c ON b.item_id=c.item_id ORDER BY a.user_id
with second_sold AS ( SELECT seller_id, item_id FROM( SELECT seller_id , order_date , item_id , rank() over (partition by seller_id order by order_date) as rk FROM Orders )t WHERE rk=2) SELECT u.user_id as seller_id , CASE WHEN i.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand FROM Users u LEFT JOIN second_sold ss on ss.seller_id = u.user_id LEFT JOIN Items i on ss.item_id = i.item_id
with second_sold as ( Select * from ( Select seller_id, item_brand, rank() over (partition by seller_id order by order_date) as r From Orders o join Items i on o.item_id = i.item_id ) t where r = 2 ) Select u.user_id as seller_id, CASE WHEN s.item_brand is null Then 'no' WHEN s.item_brand <> favorite_brand Then 'no' WHEN s.item_brand = favorite_brand Then 'yes' end as '2nd_item_fav_brand' From Users u left join second_sold s on u.user_id = s.seller_id
with second_sold_items as ( select * from ( select seller_id,item_id,order_id, row_number() over (partition by seller_id order by order_date asc ) as sold_rank from Orders ) as ranked_orders where sold_rank = 2 ) select U.user_id as seller_id, case when U.favorite_brand = I.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users as U left join second_sold_items as S on U.user_id = S.seller_id left join Items as I on S.item_id = I.item_id
with sell_rank as ( select orders.seller_id, orders.item_id,items.item_brand, rank() over (partition by orders.seller_id order by orders.order_date asc) as rk from orders join items on orders.item_id = items.item_id ), second_rk as ( select seller_id, item_brand from sell_rank where rk = 2 ) select users.user_id as seller_id , case when (users.favorite_brand = second_rk.item_brand) then 'yes' else 'no' end as '2nd_item_fav_brand' from users left join second_rk on users.user_id = second_rk.seller_id
with sells as ( select seller_id, item_id from ( select seller_id, item_id, row_number() over(partition by seller_id order by order_date) as rn from orders o ) a where rn = 2 ) select u.user_id as seller_id, if(s.seller_id is null, 'no',if(u.favorite_brand = i.item_brand, 'yes', 'no')) as 2nd_item_fav_brand from users u left join sells s on(u.user_id = s.seller_id) left join items i on(s.item_id = i.item_id)
with sold_check as ( select item_brand, seller_id, rank() over(partition by seller_id order by order_date) as rk from Orders o join Items i on o.item_id = i.item_id ) select user_id as seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users left join sold_check on Users.user_id = sold_check.seller_id and rk = 2
with sub1 as (select *, rank() over(partition by seller_id order by order_date) as selling_order from orders o left join items i using (item_id) left join users u on o.seller_id=u.user_id), sub2 as ( select seller_id, case when favorite_brand=item_brand then "yes" else "no" end as 2nd_item_fav_brand from sub1 where selling_order=2) select u.user_id as seller_id, ifnull(2nd_item_fav_brand,"no") as 2nd_item_fav_brand from users u left join sub2 on sub2.seller_id=u.user_id
with t as ( SELECT seller_id, IFNULL(item_brand, '') As '2nd_item' FROM ( SELECT o.seller_id, i.item_brand, ROW_NUMBER() OVER(PARTITION BY o.seller_id ORDER BY o.order_date) As 'rnk' FROM Orders o LEFT JOIN Items i ON o.item_id = i.item_id) As t0 WHERE rnk = 2) SELECT user_id As seller_id, IF(2nd_item=favorite_brand, 'yes', 'no') As '2nd_item_fav_brand' FROM ( SELECT u.*, IFNULL(t.2nd_item, '') As '2nd_item' FROM Users u LEFT JOIN t ON u.user_id = t.seller_id ) As t0
with t as ( select orders.seller_id,users.favorite_brand,items.item_brand, rank() over(partition by seller_id order by order_date) ranks from orders,users,items where orders.seller_id = users.user_id and orders.item_id = items.item_id order by seller_id ) select users.user_id seller_id, case when t.favorite_brand is null then 'no' when t.favorite_brand = t.item_brand then 'yes' else 'no' end 2nd_item_fav_brand from users left join t on users.user_id = t.seller_id and t.ranks = 2
with t as ( with t as ( select seller_id,item_id, rank() over (partition by seller_id order by order_date) r from orders ) select t.seller_id , if(u.favorite_brand = it.item_brand, 'yes', 'no') as lb from t join items it on t.item_id = it.item_id join users u on u.user_id = t.seller_id where r = 2 ) select u.user_id as seller_id, ifnull(t.lb, 'no') as '2nd_item_fav_brand' from users u left join t on u.user_id = t.seller_id order by u.user_id
with t as (select * from (select *, dense_rank() over (partition by seller_id order by order_date) as order_rnk from Orders) tmp where order_rnk = 2 ) select u.user_id as seller_id, case when favorite_brand = item_brand then "yes" else "no" end as 2nd_item_fav_brand from Users u left join t on t.seller_id = u.user_id left join Items i on t.item_id = i.item_id
with t as (select seller_id, item_brand from ( select seller_id, item_brand, row_number() over (partition by seller_id order by order_date) as rnum from Orders join Items on Items.item_id = Orders.item_id ) t where rnum = 2) select Users.user_id as seller_id, if(count(Orders.order_id) < 2, 'no', if(Users.favorite_brand = t.item_brand, 'yes','no')) as '2nd_item_fav_brand' from Users left join Orders on Users.user_id = Orders.seller_id left join t on Orders.seller_id = t.seller_id group by Users.user_id
with t1 as ( select *, rank() over (partition by seller_id order by order_date) as sell_order from Orders ) , t2 as ( select distinct t1.seller_id from t1 left join Users as u on t1.seller_id = u.user_id left join Items as i on t1.item_id = i.item_id where sell_order = 2 and favorite_brand = item_brand ) select distinct user_id as seller_id, case when user_id in (select seller_id from t2) then 'yes' else 'no' end as 2nd_item_fav_brand from Users
with t1 as ( select *, rank() over (partition by seller_id order by order_date) as sell_order from Orders ) , t2 as ( select distinct t1.seller_id from t1 left join Users as u on t1.seller_id = u.user_id left join Items as i using(item_id) where sell_order = 2 and favorite_brand = item_brand ) select distinct user_id as seller_id, case when user_id in (select seller_id from t2) then 'yes' else 'no' end as 2nd_item_fav_brand from Users
with t1 as ( select o.*,rank()over(partition by seller_id order by order_date) as order_rank,item_brand from orders o join items b on o.item_id = b.item_id ) select distinct u.user_id as seller_id, if(u.favorite_brand=t1.item_brand,"yes","no") as 2nd_item_fav_brand from users u left join t1 on u.user_id = t1.seller_id and order_rank = 2
with t1 as ( select user_id, item_id from ( select seller_id as user_id, item_id, row_number() over (partition by seller_id order by order_date) as rw from orders)a where rw=2 ), t2 as ( select t1.user_id, i.item_brand from t1 left join items i on t1.item_id = i.item_id ) select u.user_id as seller_id, case when t2.user_id is not null and u.favorite_brand=t2.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join t2 on u.user_id = t2.user_id order by seller_id
with t1 as (select * from (select *, dense_rank() over (partition by seller_id order by order_date) as order_rnk from Orders) tmp where order_rnk = 2 ), t2 as (select u.user_id as seller_id, case when favorite_brand = item_brand then "yes" else "no" end as 2nd_item_fav_brand from Users u left join t1 on t1.seller_id = u.user_id left join Items i on t1.item_id = i.item_id ) select * from t2
with t1 as( select u.user_id, i.item_brand, u.favorite_brand, rank() over(partition by u.user_id order by o.order_date) as rk from Users u left join (Orders o left join Items i on o.item_id=i.item_id) on u.user_id=o.seller_id ) select user_id as seller_id, max(case when item_brand=favorite_brand and rk=2 then 'yes' else 'no' end) as 2nd_item_fav_brand from t1 group by user_id
with t1 as(select distinct o.seller_id,i.item_brand, rank() over(Partition by o.seller_id order by o.order_date) as 'rank' from orders o join items i on o.item_id = i.item_id) select u.user_id as seller_id, case when u.favorite_brand = t1.item_brand then 'yes' else 'no' end as '2nd_item_fav_brand' from users u left join t1 on u.user_id = t1.seller_id and t1.rank = 2
with t2 as ( SELECT seller_id, count(1) cnt, MAX(CASE WHEN RNUM=2 THEN item_brand ELSE NULL END) item2 FROM ( SELECT o.seller_id, i.item_brand, ROW_NUMBER() OVER ( PARTITION BY o.seller_id ORDER BY o.order_date ) rnum FROM Orders o LEFT OUTER JOIN items i ON o.item_id = i.item_id ) t1 GROUP BY seller_id ) SELECT u.user_id seller_id, CASE WHEN COALESCE(cnt, 0)<2 THEN 'no' WHEN favorite_brand <> item2 THEN 'no' ELSE 'yes' END 2nd_item_fav_brand FROM Users u LEFT OUTER JOIN t2 ON t2.seller_id = u.user_id
with t2 as (select user_id, case when favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from ( select u.user_id, favorite_brand, item_brand, rank() over (partition by u.user_id order by order_date) as sell_rk from users u join orders o on u.user_id = o.seller_id join items i on o.item_id = i.item_id) temp where sell_rk=2) select users.user_id as seller_id, ifnull(2nd_item_fav_brand, 'no') as 2nd_item_fav_brand from users left join t2 on t2.user_id = users.user_id
with tab_2nd_item as ( select seller_id, item_id from( select seller_id, item_id, rank() over(partition by seller_id order by order_date) as rk from orders ) as a where a.rk = 2), tab_prep as ( select users.user_id as seller_id, case when users.favorite_brand = items.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from tab_2nd_item right join users on tab_2nd_item.seller_id = users.user_id join items on tab_2nd_item.item_id = items.item_id ) select users.user_id as seller_id, ifnull(tab_prep.2nd_item_fav_brand, 'no') as 2nd_item_fav_brand from users left join tab_prep on users.user_id = tab_prep.seller_id
with table1 AS ( SELECT o.order_id, o.seller_id, o.item_id, i.item_brand, (RANK() OVER (PARTITION BY o.seller_id ORDER BY o.order_date)) as rank_calc FROM Orders o LEFT JOIN Items i USING(item_id) ORDER BY o.seller_id ), table2 AS ( SELECT u.user_id as seller_id, COALESCE(CASE WHEN u.favorite_brand = t1.item_brand THEN 'yes' ELSE 'no' END,'no') as 2nd_item_fav_brand FROM Users u LEFT JOIN (SELECT * FROM table1 WHERE rank_calc = 2) t1 On t1.seller_id = u.user_id ORDER BY u.user_id ) SELECT * from table2
with tbl2 as ( with tbl1 as ( select *, row_number() over (partition by seller_id order by order_date) as salenum from orders) select users.user_id, tbl1.item_id, users.favorite_brand, items.item_brand from tbl1 right join users on users.user_id = tbl1.seller_id left join items on tbl1.item_id = items.item_id where tbl1.salenum = 2) select users.user_id as seller_id, case when isnull(tbl2.item_brand) then 'no' when tbl2.favorite_brand = tbl2.item_brand then 'yes' else 'no' end as `2nd_item_fav_brand` from tbl2 right join users on tbl2.user_id = users.user_id
with tem as ( select a.*, b.item_brand from orders a left join items b on a.item_id = b.item_id), tem2 as ( select seller_id, item_brand as second_item_brand from ( select seller_id, order_date, item_brand, row_number() over (partition by seller_id order by order_date asc) as rank_n from tem ) a where rank_n = 2), tem3 as ( select a.seller_id, case when a.second_item_brand = favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from tem2 as a inner join users b on a.seller_id = b.user_id) select distinct a.user_id as seller_id, ifnull(b.2nd_item_fav_brand, 'no') as 2nd_item_fav_brand from users a left join tem3 b on a.user_id = b.seller_id
with temp as ( select * from (select seller_id,item_id,rank() over (partition by seller_id order by order_date) as rnk from orders) a where a.rnk=2 ) select user_id as seller_id, case when favorite_brand=item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from temp join items on temp.item_id = items.item_id right join users on temp.seller_id = users.user_id
with temp as ( select *, rank() over (partition by seller_id order by order_date) as ranking from orders ) select a.user_id as seller_id, case when a.favorite_brand = c.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users a left join temp b on a.user_id = b.seller_id and b.ranking = 2 left join items c on b.item_id = c.item_id order by 1, 2
with temp as ( select a.user_id, b.item_id as fav_item, c.second_item from users a left join items b on a.favorite_brand = b.item_brand left join (select distinct seller_id, nth_value(item_id, 2) over (partition by seller_id order by order_date rows between unbounded preceding and unbounded following ) as second_item from orders ) c on a.user_id = c.seller_id order by a.user_id ), temp2 as ( select user_id as seller_id, case when fav_item = second_item then 'yes' else 'no' end as item_fav_brand from temp ), temp3 as ( select *, row_number() over (partition by seller_id order by item_fav_brand desc) as rn from temp2 ) select seller_id, item_fav_brand as 2nd_item_fav_brand from temp3 where rn = 1
with temp as ( select seller_id , item_brand from( select o.seller_id , i.item_brand , row_number() over (partition by seller_id order by order_date asc) as idx from orders as o left join items as i on o.item_id = i.item_id) as temp where idx=2) select u.user_id as seller_id , if(u.favorite_brand!=t.item_brand or t.item_brand is null, 'no', 'yes') as 2nd_item_fav_brand from users as u left join temp as t on u.user_id=t.seller_id
with temp as ( select seller_id, item_brand from ( select seller_id, rank() over(partition by seller_id order by order_date) as rank_num, case when i.item_brand = u.favorite_brand then 'yes' else 'no' end as item_brand from orders o left join items i on o.item_id = i.item_id left join users u on u.user_id = o.seller_id ) cte where rank_num = 2) select user_id as seller_id, ifnull(item_brand,'no') as 2nd_item_fav_brand from users u left join temp t on u.user_id = t.seller_id
with temp as ( select seller_id, o.item_id, i.item_brand, order_date, rank() over (partition by seller_id order by order_date) as ranking from Orders as o join Items as i on o.item_id = i.item_id ), temp1 as ( select seller_id, item_brand from temp where ranking = 2 ) select user_id as seller_id, case when u.favorite_brand = temp1.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users as u left join temp1 on u.user_id = temp1.seller_id
with temp as (select o.seller_id,i.item_brand from (select seller_id, item_id, rank() over (partition by seller_id order by order_date) as rnk from orders) o join items i using(item_id) where o.rnk = 2) select user_id as seller_id, case when favorite_brand = item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users left join temp on temp.seller_id = users.user_id
with temp as (select seller_id, item_id from (select seller_id, item_id, rank() over (partition by seller_id order by order_date) ranked from Orders) t1 where ranked = 2) select distinct u.user_id seller_id, case when item_brand = favorite_brand then 'yes' else 'no' end 2nd_item_fav_brand from Users u left join temp on temp.seller_id = u.user_id left join Items i on temp.item_id = i.item_id
with temp as (select seller_id, item_id from Orders as o where 1 = (select count(*) from Orders as p where p.seller_id = o.seller_id and p.order_date < o.order_date)), temp1 as ( select seller_id, item_brand from temp join Items on temp.item_id = Items.item_id ) select user_id as seller_id, case when item_brand is not NULL and item_brand = favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users left join temp1 on Users.user_id = temp1.seller_id order by user_id
with temp as (select seller_id,items.item_brand, DENSE_RANK() over (partition by seller_id order by order_date) as 'rank' from orders left join items on orders.item_id = items.item_id) select users.user_id as seller_id, (case when item_brand = users.favorite_brand then 'yes' else 'no' end) as 2nd_item_fav_brand from users left join (select * from temp where temp.rank = 2) as temp2 on users.user_id = temp2.seller_id
with tmp as ( select *, rank() over(partition by seller_id order by order_date) as r from Orders ), ranked as ( select * from tmp where r = 2 ) select u.user_id as seller_id, case when items.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join ranked on u.user_id = ranked.seller_id left join items on ranked.item_id = items.item_id
with tmp as ( select *, row_number() over(partition by user_id order by order_date) as rn from (users join orders on user_id = seller_id) natural join items ), tmp2 as( select * from tmp where favorite_brand = item_brand and rn = 2 ) select user_id as seller_id, case when user_id in (select user_id from tmp2) then 'yes' else 'no' end as 2nd_item_fav_brand from users
with tmp as ( select o.order_id, order_date, o.item_id, buyer_id, u.user_id as seller_id, rank() over (partition by u.user_id order by order_date) as item_order, count(*) over(partition by u.user_id) as item_count, u.favorite_brand, i.item_brand from Orders o right join Users u on o.seller_id = u.user_id left join Items i on o.item_id = i.item_id ) (select distinct seller_id, "no" as 2nd_item_fav_brand from tmp where item_count < 2) union all (select distinct seller_id, case when favorite_brand = item_brand then "yes" else "no" end as 2nd_item_fav_brand from tmp where item_count >= 2 and item_order = 2) order by seller_id
with tmp as ( select seller_id, o.item_id, i.item_brand, rank() over (partition by seller_id order by order_date asc) as rank_num from Orders o join Items i on o.item_id = i.item_id ), tmp2 as ( select tmp.seller_id from tmp join Users u on tmp.seller_id = u.user_id where tmp.rank_num = 2 and u.favorite_brand = tmp.item_brand ) select u.user_id as seller_id, if(t.seller_id is null, 'no', 'yes') as 2nd_item_fav_brand from Users u left join tmp2 t on u.user_id = t.seller_id
with tmp as ( select seller_id, rank() over (partition by seller_id order by order_date) as rk, Items.item_brand from Orders join Items on Items.item_id=Orders.item_id ), tmp2 as ( select seller_id,item_brand from tmp where rk = 2 ) select user_id as seller_id, case when favorite_brand=item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from Users left join tmp2 on Users.user_id=tmp2.seller_id
with tmp as (select a.*, b.item_brand, rank() over(partition by seller_id order by order_date) as rnk from orders a inner join items b using (item_id)) select a.user_id as seller_id, case when c.item_brand is not null then 'yes' else 'no' end as 2nd_item_fav_brand from users a left join (select seller_id,item_brand from tmp where rnk=2) c on a.user_id=c.seller_id and a.favorite_brand=c.item_brand order by 1
with tmp as (select seller_id, item_brand, rank() over (partition by seller_id order by order_date) as rnk from orders a inner join items b on a.item_id=b.item_id ) select a.user_id as seller_id, case when a.favorite_brand=b.item_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users a left join (select * from tmp where rnk=2) b on a.user_id=b.seller_id order by 1
with tmp as (select seller_id, item_id, dense_rank() over (partition by seller_id order by order_date) as rk from orders), tmp1 as (select seller_id, item_brand, rk from tmp a join items b on a.item_id = b.item_id and rk = 2) select user_id as seller_id, case when item_brand is null then 'no' else 'yes' end as 2nd_item_fav_brand from users c left join tmp1 d on user_id = seller_id and favorite_brand = item_brand
with tmp as( select *, row_number() over(partition by seller_id order by order_date) as rn from orders natural join items ), tmp2 as( select * from tmp where rn = 2 ) select user_id as seller_id, case when seller_id is null or favorite_brand != item_brand then 'no' else 'yes' end as 2nd_item_fav_brand from users left join tmp2 on user_id = seller_id
with two_items_sold as( select seller_id, item_id from (select orders.*, row_number() over (partition by seller_id order by order_date) as rn from orders )A where A.rn = 2) select u.user_id as seller_id, case when i.item_brand = u.favorite_brand then 'yes' else 'no' end as 2nd_item_fav_brand from users u left join two_items_sold t on u.user_id = t.seller_id left join items i on i.item_id = t.item_id
with users_sale_rank as ( select seller_id, item_id, rank() over (partition by seller_id order by order_date asc) as sale_rank from orders ) select t1.user_id as seller_id, case when t3.item_brand is null then 'no' else if(t1.favorite_brand = t3.item_brand, 'yes', 'no') end as `2nd_item_fav_brand` from users t1 left join ( select * from users_sale_rank where sale_rank = 2 ) t2 on t2.seller_id = t1.user_id left join items t3 on t3.item_id = t2.item_id order by t1.user_id asc
with x as ( select seller_id, item_id, rank() over (partition by seller_id order by order_date) as rnk from orders ), y as ( select x.seller_id,x.item_id,items.item_brand,users.favorite_brand from x inner join items on x.item_id = items.item_id inner join users on x.seller_id = users.user_id where rnk = 2 and items.item_brand = users.favorite_brand ) select users.user_id as seller_id, case when y.seller_id is null then 'no' else 'yes' end as 2nd_item_fav_brand from users left join y on users.user_id = y.seller_id
with y as ( select seller_id , item_id from ( select * , row_number() over(partition by seller_id order by order_date) as seq from orders o ) x where seq = 2 ), z as ( select seller_id, y.item_id, item_brand from y join items i on y.item_id = i.item_id ) select u.user_id as seller_id , case when item_brand = favorite_brand then 'yes' when z.seller_id is null or item_brand <> favorite_brand then 'no' end as 2nd_item_fav_brand from users u left join z on u.user_id = z.seller_id
