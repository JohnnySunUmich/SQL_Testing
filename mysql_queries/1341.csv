( SELECT A.name AS results FROM (SELECT M.movie_id,M.user_id,M.rating,M.created_at,U.name from Movie_Rating M JOIN Users U ON M.user_id = U.user_id)A GROUP BY user_id order by count(rating) DESC ,name Limit 1) UNION ALL (SELECT B.title as results FROM (SELECT M.movie_id,M.user_id, M.rating,M.created_at,Mo.title from Movie_Rating M JOIN Movies Mo ON M.movie_id =Mo.movie_id)B WHERE LEFT(created_at,7)='2020-02' GROUP BY movie_id order by AVG(rating) DESC,title limit 1)
( SELECT U.name AS results FROM Movie_Rating AS R LEFT JOIN Users AS U ON R.user_id = U.user_id GROUP BY R.user_id ORDER BY COUNT(R.movie_id) DESC, U.name LIMIT 1 ) UNION ( SELECT M.title AS results FROM Movie_Rating AS R LEFT JOIN Movies AS M ON R.movie_id = M.movie_id WHERE R.created_at LIKE '2020-02%' GROUP BY R.movie_id ORDER BY AVG(R.rating) DESC, M.title LIMIT 1 )
( SELECT a.name as results FROM Users a LEFT JOIN Movie_Rating b ON a.user_id = b.user_id GROUP BY a.name ORDER BY COUNT(a.user_id) DESC, a.name ASC LIMIT 1 ) UNION ( SELECT a.title as results FROM Movies a LEFT JOIN Movie_Rating b ON a.movie_id = b.movie_id WHERE EXTRACT(YEAR_MONTH FROM created_at) = '202002' GROUP BY a.movie_id ORDER BY AVG(b.rating) DESC, a.title ASC LIMIT 1 )
( SELECT name AS results FROM ( SELECT name, COUNT(DISTINCT movie_id) as ct FROM Movie_Rating c LEFT JOIN Users d ON c.user_id = d.user_id GROUP BY c.user_id ) p ORDER BY ct DESC, name ASC LIMIT 1 ) UNION ( SELECT title AS results FROM ( SELECT title, AVG(rating) AS avg_rating FROM Movie_Rating a LEFT JOIN Movies b ON a.movie_id = b.movie_id WHERE LEFT(created_at, 7) = '2020-02' GROUP BY a.movie_id ) t ORDER BY avg_rating DESC, title ASC LIMIT 1 )
( SELECT name AS results FROM Users u JOIN ( SELECT user_id FROM Movie_Rating GROUP BY user_id HAVING COUNT(*) = ( SELECT MAX(rate) As maxrate FROM ( SELECT COUNT(*) AS rate FROM Movie_Rating GROUP BY user_id ) a ) ) t ON u.user_id = t.user_id ORDER BY u.name LIMIT 1 ) UNION ( SELECT m.title AS results FROM Movies m JOIN ( SELECT movie_id FROM Movie_Rating WHERE DATE_FORMAT(created_at, '%Y-%m') = '2020-02' GROUP BY movie_id HAVING ABS(AVG(rating) - ( SELECT MAX(rate) AS avgrate FROM ( SELECT AVG(rating) AS rate FROM Movie_Rating WHERE DATE_FORMAT(created_at, '%Y-%m') = '2020-02' GROUP BY movie_id ) b )) <= 0.0001 ) d ON m.movie_id = d.movie_id ORDER BY m.title LIMIT 1 )
( SELECT name as results FROM ( SELECT m.user_id, u.name, COUNT(*) as num_rating FROM Movie_Rating m LEFT JOIN Users u ON m.user_id = u.user_id GROUP BY m.user_id ) a ORDER BY num_rating DESC, name ASC LIMIT 1 ) UNION ( SELECT title as results FROM ( SELECT mv.title, AVG(mr.rating) as avg_rating FROM Movie_Rating mr LEFT JOIN Movies mv ON mr.movie_id = mv.movie_id WHERE LEFT(created_at, 7) = '2020-02' GROUP BY mr.movie_id ) b ORDER BY avg_rating DESC, title ASC LIMIT 1 )
( SELECT u.name AS results FROM Movie_Rating mr JOIN Users u ON mr.user_id = u.user_id GROUP BY u.user_id, u.name ORDER BY COUNT(DISTINCT mr.movie_id) DESC, name ASC LIMIT 1 ) UNION ALL ( SELECT m.title AS results FROM Movie_Rating mr JOIN Movies m ON mr.movie_id = m.movie_id WHERE LEFT(mr.created_at,7) = "2020-02" GROUP BY mr.movie_id, m.title ORDER BY AVG(mr.rating) DESC, title ASC LIMIT 1 )
( SELECT u.name AS results FROM Movie_Rating r LEFT JOIN Users u ON (r.user_id = u.user_id) GROUP BY r.user_id ORDER BY COUNT(r.movie_id) DESC, u.name LIMIT 1 ) UNION ( SELECT m.title AS results FROM Movie_Rating r LEFT JOIN Movies m ON (r.movie_id = m.movie_id) WHERE r.created_at LIKE '2020-02%' GROUP BY r.movie_id ORDER BY AVG(r.rating) DESC, m.title LIMIT 1 )
( SELECT u.name AS results FROM Movie_Rating r LEFT JOIN Users u ON r.user_id = u.user_id GROUP BY r.user_id ORDER BY COUNT(r.movie_id) DESC, u.name LIMIT 1 ) UNION ( SELECT m.title AS results FROM Movie_Rating r LEFT JOIN Movies m ON r.movie_id = m.movie_id WHERE r.created_at LIKE '2020-02%' GROUP BY r.movie_id ORDER BY AVG(r.rating) DESC, m.title LIMIT 1 )
( SELECT u.name AS results FROM Users u INNER JOIN Movie_Rating r1 ON u.user_id = r1.user_id GROUP BY u.user_id, u.name ORDER BY COUNT(DISTINCT r1.movie_id) DESC, u.name LIMIT 1 ) UNION ALL ( SELECT m.title AS results FROM Movies m INNER JOIN Movie_Rating r2 ON m.movie_id = r2.movie_id WHERE DATE_FORMAT(r2.created_at, '%Y-%m') = '2020-02' GROUP BY m.movie_id, m.title ORDER BY AVG(r2.rating) DESC, m.title LIMIT 1 )
( SELECT u.name AS results FROM Users u JOIN Movie_Rating m ON u.user_id = m.user_id GROUP BY u.user_id HAVING COUNT(m.movie_id) = ( SELECT MAX(freq) AS maxFreq FROM ( SELECT COUNT(movie_id) AS freq FROM Movie_Rating GROUP BY user_id ) t ) ORDER BY u.name LIMIT 1 ) UNION ( SELECT m.title AS results FROM Movies m JOIN Movie_Rating mr ON m.movie_id = mr.movie_id WHERE created_at >= "2020-02-01" AND created_at <= "2020-02-29" GROUP BY m.movie_id HAVING ABS(AVG(mr.rating) - ( SELECT MAX(rating) AS maxRate FROM ( SELECT AVG(rating) as rating FROM Movie_Rating WHERE created_at >= "2020-02-01" AND created_at <= "2020-02-29" GROUP BY movie_id ) t )) <= 0.0001 ORDER BY m.title LIMIT 1 )
( SELECT u.name AS results FROM Users u JOIN Movie_Rating m ON u.user_id = m.user_id GROUP BY u.user_id HAVING COUNT(m.movie_id) = ( SELECT MAX(freq) AS maxFreq FROM ( SELECT COUNT(movie_id) AS freq FROM Movie_Rating GROUP BY user_id ) t ) ORDER BY u.name LIMIT 1 ) UNION ALL ( SELECT m.title AS results FROM Movies m JOIN Movie_Rating mr ON m.movie_id = mr.movie_id WHERE created_at >= "2020-02-01" AND created_at <= "2020-02-29" GROUP BY m.movie_id HAVING ABS(AVG(mr.rating) - ( SELECT MAX(rating) AS maxRate FROM ( SELECT AVG(rating) as rating FROM Movie_Rating WHERE created_at >= "2020-02-01" AND created_at <= "2020-02-29" GROUP BY movie_id ) t )) <= 0.0001 ORDER BY m.title LIMIT 1 )
( SELECT u.name as results FROM Users as u LEFT JOIN Movie_rating as r ON u.user_id=r.user_id GROUP BY u.name ORDER BY COUNT(movie_id) DESC, u.name asc LIMIT 1 ) UNION ALL ( SELECT m.title as results FROM Movies as m LEFT JOIN Movie_Rating as r ON m.movie_id=r.movie_id WHERE DATE_FORMAT(created_at, "%Y-%m")='2020-02' GROUP BY m.title ORDER BY AVG(rating) DESC, m.title asc LIMIT 1 )
( SELECT u.name results FROM Users u JOIN Movie_Rating mr ON mr.user_id = u.user_id GROUP BY u.user_id ORDER BY COUNT(*) DESC, u.name LIMIT 1 ) UNION ( SELECT m.title results FROM Movies m JOIN Movie_Rating mr ON m.movie_id = mr.movie_id WHERE LEFT(created_at, 7) = "2020-02" GROUP BY m.movie_id ORDER BY AVG(mr.rating) DESC, m.title LIMIT 1 )
( SELECT u.name results FROM Users u LEFT JOIN Movie_Rating mr ON mr.user_id = u.user_id GROUP BY u.user_id ORDER BY COUNT(*) DESC, u.name LIMIT 1 ) UNION ( SELECT m.title results FROM Movies m LEFT JOIN Movie_Rating mr ON m.movie_id = mr.movie_id WHERE LEFT(created_at, 7) = "2020-02" GROUP BY m.movie_id ORDER BY AVG(mr.rating) DESC, m.title LIMIT 1 )
( Select name As results From (Select u.name, Count(m.user_id) From Movie_Rating m Join Users u On u.user_id=m.user_id Group By u.name Order By Count(m.user_id) Desc, u.name) temp Limit 1) Union All ( Select title As results From(Select m1.title From Movie_Rating m Join Movies m1 On m.movie_id=m1.movie_id Where Left(m.created_at, 7)='2020-02' Group By m1.title Order By Avg(m.rating) Desc, m1.title) temp Limit 1 )
( select Users.name as results from Users join Movie_Rating on Movie_Rating.user_id = Users.user_id group by Movie_Rating.user_id order by count(results) desc, Users.name limit 1 ) union ( select Movies.title from Movies join Movie_Rating on Movie_Rating.movie_id = Movies.movie_id where created_at like ('2020-02%') group by Movie_Rating.movie_id order by avg(Movie_Rating.rating) desc, Movies.title limit 1 )
( select distinct b.name as results from movie_rating a join users b on a.user_id = b.user_id group by b.name having count(distinct a.movie_id) = (select distinct count(distinct a.movie_id) as movies from movie_rating a group by a.user_id order by movies desc limit 1) order by b.name limit 1 ) union ( select distinct b.title as results from movie_rating a left join movies b on a.movie_id = b.movie_id where a.created_at like '%2020-02%' group by a.movie_id order by avg(rating) desc, b.title limit 1 )
( select name as results from movie_rating as m join users as u on m.user_id=u.user_id group by m.user_id order by count(distinct movie_id) desc,name asc limit 1 ) union all ( select title as results from movie_rating as m join movies on m.movie_id=movies.movie_id where substr(created_at,1,7)='2020-02' group by m.movie_id order by avg(rating) desc,title asc limit 1 )
( select name as results from movie_rating join users using(user_id) group by user_id order by count(movie_id) desc, name limit 1 ) union all ( select title as results from movie_rating join movies using(movie_id) where month(created_at) = 2 and year(created_at) = 2020 group by movie_id order by avg(rating) desc, title limit 1 )
( select name results from movie_rating, users where movie_rating.user_id = users.user_id group by movie_rating.user_id order by count(*) desc, users.name limit 1 ) union ( select title results from movie_rating,movies where movie_rating.movie_id = movies.movie_id and year(created_at) = 2020 and month(created_at) = 2 group by movie_rating.movie_id order by avg(rating) desc, title limit 1 )
( select results from ( select u.name as results, count(u.name) over (partition by u.user_id) as r1 from movie_rating mr join users u on mr.user_id=u.user_id ) sq order by r1 desc, results limit 1 ) union all ( select results from ( select title as results, avg(rating) over (partition by m.movie_id) as r from movie_rating mr join movies m on mr.movie_id =m.movie_id where date_format(created_at,'%m')=02 ) sq1 order by r desc, results limit 1 )
( select u.name as results from movie_rating r left join Users u on r.user_id = u.user_id group by u.user_id, u.name order by count(movie_id) desc, u.name asc limit 1 ) UNION ALL ( select m.title as results from movie_rating r left join movies m on r.movie_id = m.movie_id where year(created_at) = 2020 and month(created_at) = 2 group by m.movie_id, m.title order by avg(rating) desc, m.title asc limit 1 )
(SELECT U.name 'results' FROM Movie_Rating MR JOIN Users U ON MR.user_id = U.user_id GROUP BY MR.user_id ORDER BY COUNT(MR.movie_id) DESC, U.name ASC LIMIT 1) UNION (SELECT M.title 'results' FROM Movie_Rating MR JOIN Movies M ON MR.movie_id = M.movie_id WHERE LEFT(MR.created_at, 7) = '2020-02' GROUP BY MR.movie_id ORDER BY AVG(MR.rating) DESC, M.title ASC LIMIT 1)
(SELECT U.name 'results' FROM Movie_Rating MR1 JOIN Movie_Rating MR2 JOIN Users U ON MR1.user_id = U.user_id AND MR1.user_id = MR2.user_id GROUP BY MR1.user_id ORDER BY COUNT(MR1.movie_id) DESC, U.name ASC LIMIT 1) UNION (SELECT M.title 'results' FROM Movie_Rating MR1 JOIN Movie_Rating MR2 JOIN Movies M ON MR1.movie_id = M.movie_id AND MR1.movie_id = MR2.movie_id WHERE LEFT(MR1.created_at, 7) = '2020-02' AND LEFT(MR2.created_at, 7) = '2020-02' GROUP BY MR1.movie_id HAVING AVG(MR1.rating) >= AVG(MR1.rating) ORDER BY AVG(MR1.rating) DESC, M.title ASC LIMIT 1)
(SELECT U.name 'results' FROM Movie_Rating MR1 JOIN Users U ON MR1.user_id = U.user_id GROUP BY MR1.user_id ORDER BY COUNT(MR1.movie_id) DESC, U.name ASC LIMIT 1) UNION (SELECT M.title 'results' FROM Movie_Rating MR1 JOIN Movies M ON MR1.movie_id = M.movie_id WHERE LEFT(MR1.created_at, 7) = '2020-02' GROUP BY MR1.movie_id HAVING AVG(MR1.rating) >= AVG(MR1.rating) ORDER BY AVG(MR1.rating) DESC, M.title ASC LIMIT 1)
(SELECT U.name AS RESULTS FROM Movie_Rating MV JOIN Users U ON MV.USER_ID = U.USER_ID GROUP BY U.name ORDER BY COUNT(MV.MOVIE_ID) DESC,U.name ASC LIMIT 1) UNION ( SELECT M.TITLE AS RESULTS FROM Movie_Rating MV JOIN Movies M ON MV.MOVIE_ID = M.MOVIE_ID WHERE created_at BETWEEN '2020-02-01' AND '2020-02-29' GROUP BY M.TITLE ORDER BY AVG(RATING) DESC, M.TITLE ASC LIMIT 1 )
(SELECT U.name AS results FROM Movie_Rating M JOIN Users U USING (user_id) GROUP BY 1 ORDER BY COUNT(*) DESC, U.name LIMIT 1) UNION ALL (SELECT M.title AS results FROM Movie_Rating R JOIN Movies M USING (movie_id) WHERE DATE_FORMAT(R.created_at, '%Y-%m') = '2020-02' GROUP BY 1 ORDER BY AVG(rating) DESC, M.title LIMIT 1)
(SELECT U.name AS results FROM Movie_Rating M, Users U WHERE M.user_id = U.user_id GROUP BY M.user_id ORDER BY COUNT(DISTINCT M.movie_id) DESC, U.name LIMIT 1) UNION (SELECT M2.title AS results FROM Movie_Rating M1, Movies M2 WHERE M1.movie_id = M2.movie_id AND MONTH(M1.created_at) = 2 and YEAR(M1.created_at) = 2020 GROUP BY M1.movie_id ORDER BY AVG(M1.rating) DESC, M2.title LIMIT 1)
(SELECT U.name AS results FROM Movie_Rating M, Users U WHERE M.user_id = U.user_id GROUP BY M.user_id ORDER BY COUNT(DISTINCT M.movie_id) DESC, U.name LIMIT 1) UNION ALL (SELECT M2.title AS results FROM Movie_Rating M1, Movies M2 WHERE M1.movie_id = M2.movie_id AND MONTH(M1.created_at) = 2 and YEAR(M1.created_at) = 2020 GROUP BY M1.movie_id ORDER BY AVG(M1.rating) DESC, M2.title LIMIT 1)
(SELECT Users.name AS results FROM Movie_Rating JOIN Users ON Movie_Rating.user_id = Users.user_id GROUP BY Users.user_id ORDER BY COUNT(movie_id) DESC, Users.name ASC LIMIT 1) UNION (SELECT Movies.title AS results FROM Movie_Rating JOIN Movies ON Movie_Rating.movie_id = Movies.movie_id WHERE MONTH(Movie_Rating.created_at) = 2 AND YEAR(Movie_Rating.created_at) = 2020 GROUP BY Movies.movie_id ORDER BY AVG(Movie_Rating.rating) DESC, Movies.title ASC LIMIT 1 )
(SELECT Users.name as results FROM Movie_Rating JOIN Users ON Users.user_id=Movie_Rating.user_id GROUP BY Movie_Rating.user_id ORDER BY COUNT(DISTINCT movie_id) DESC, Users.name asc LIMIT 1) union (SELECT V.title FROM Movie_Rating M JOIN Movies V ON V.movie_id= M.movie_id where left(M.created_at,7)='2020-02' GROUP BY M.movie_id ORDER BY AVG(M.rating) desc, V.title asc limit 1)
(SELECT Users.name results FROM Movie_Rating m JOIN Users using (user_id) GROUP BY m.user_id ORDER BY COUNT(rating) DESC, Users.name ASC LIMIT 1) UNION (SELECT Movies.title results FROM Movie_Rating m LEFT JOIN Movies using (movie_id) WHERE LEFT(created_at, 7) = '2020-02' GROUP BY m.movie_id ORDER BY AVG(rating) DESC, Movies.title ASC LIMIT 1)
(SELECT a.name as results FROM (SELECT u.name, count(mr.rating) as results FROM Movie_Rating as mr LEFT JOIN Users as u ON u.user_id = mr.user_id GROUP BY mr.user_id ORDER BY results DESC, u.name) as a LIMIT 1) UNION (SELECT b.title as results FROM (SELECT m.title, avg(mr.rating) as res FROM Movie_Rating as mr LEFT JOIN Movies as m ON m.movie_id = mr.movie_id where date_format(mr.created_at,'%Y-%m')='2020-02' GROUP BY mr.movie_id ORDER BY avg(mr.rating) DESC ,m.title) as b LIMIT 1)
(SELECT b.name AS results FROM Movie_Rating a LEFT JOIN Users B ON a.user_id =b.user_id GROUP BY a.user_id ORDER BY COUNT(a.user_id) DESC, b.name LIMIT 1) UNION (SELECT b.title AS results FROM Movie_Rating a LEFT JOIN Movies B ON a.movie_id =b.movie_id WHERE LEFT(created_at, 7) = '2020-02' GROUP BY a.movie_id ORDER BY AVG(a.rating) DESC, b.title LIMIT 1)
(SELECT name AS results FROM (SELECT *, RANK() OVER(ORDER BY ct DESC) AS rk FROM (SELECT user_id,COUNT(movie_id) AS ct FROM Movie_Rating GROUP BY user_id) a )b JOIN Users u ON u.user_id=b.user_id WHERE rk=1 ORDER BY name ASC LIMIT 1) UNION (SELECT title AS results FROM (SELECT *,RANK() OVER(ORDER BY ag DESC) AS rk FROM ( SELECT movie_id,AVG(rating) AS ag FROM Movie_Rating WHERE DATE_FORMAT(created_at,'%Y-%m')='2020-02' GROUP BY movie_id)c)d JOIN Movies m ON m.movie_id=d.movie_id WHERE rk=1 ORDER BY title ASC LIMIT 1)
(SELECT name AS results FROM (SELECT *, dense_rank() over(order by count(movie_id) desc, name) AS rnk FROM Movie_Rating JOIN Users USING(user_id) GROUP BY 1) t WHERE rnk=1) UNION (SELECT title AS results FROM (SELECT *, dense_rank() over(order by m_avg desc, title) AS rnk FROM (SELECT *, avg(rating) over(partition by movie_id) AS m_avg FROM Movie_Rating WHERE date_format(created_at, '%Y-%m')='2020-02') a JOIN Movies USING(movie_id)) b WHERE rnk=1)
(SELECT name AS results FROM Movie_Rating AS m JOIN Users AS u USING(user_id) GROUP BY m.user_id ORDER BY COUNT(*) DESC, name LIMIT 1) UNION (SELECT title FROM Movie_Rating AS m1 JOIN Movies AS m2 USING(movie_id) WHERE LEFT(created_at, 7) = "2020-02" GROUP BY m1.movie_id ORDER BY AVG(rating) DESC, title LIMIT 1)
(SELECT name AS results FROM Movie_Rating JOIN Users ON Users.user_id=Movie_Rating.user_id GROUP BY 1 ORDER BY COUNT(*) DESC,name LIMIT 1) UNION (SELECT title AS results FROM Movie_Rating JOIN Movies ON Movies.movie_id = Movie_Rating.movie_id WHERE LEFT(created_at,7)='2020-02' GROUP BY 1 ORDER BY AVG(rating) DESC, title LIMIT 1)
(SELECT name AS results FROM Movie_Rating JOIN Users USING(user_id) GROUP BY user_id HAVING COUNT(*)>=ALL( SELECT COUNT(*) FROM Movie_Rating GROUP BY user_id ) ORDER BY name LIMIT 1) UNION (SELECT title AS results FROM Movie_Rating JOIN Movies USING(movie_id) WHERE SUBSTRING(created_at, 1, 7)='2020-02' GROUP BY movie_id HAVING AVG(rating)>=ALL( SELECT AVG(rating) FROM Movie_Rating WHERE SUBSTRING(created_at, 1, 7)='2020-02' GROUP BY movie_id ) ORDER BY title LIMIT 1)
(SELECT name AS results FROM Movie_Rating m JOIN Users u ON m.user_id = u.user_id GROUP BY m.user_id ORDER BY COUNT(movie_id) DESC, name LIMIT 1) UNION ALL (SELECT title AS results FROM Movies m JOIN Movie_Rating r ON m.movie_id = r.movie_id WHERE DATE_FORMAT(created_at, '%Y-%m') = '2020-02' GROUP BY m.movie_id ORDER BY AVG(rating) DESC, title LIMIT 1)
(SELECT name AS results FROM Users AS U JOIN Movie_Rating AS M On U.user_id=M.user_id GROUP by name ORdER BY COUNT(DIsTINcT movie_id) DEsC,name LIMIT 1) UNION (SELECT title AS results FROM Movies AS U JOIN Movie_Rating AS M On M.movie_id=U.movie_id WHERE LEFT(created_at,7)='2020-02' GROUP BY title ORDER BY AVG(rating) dESC,title LIMIT 1)
(SELECT name AS results FROM Users JOIN Movie_Rating USING(user_id) GROUP BY user_id ORDER BY COUNT(rating) DESC, name LIMIT 1) UNION (SELECT title FROM Movies JOIN Movie_Rating USING(movie_id) WHERE LEFT(created_at, 7) = '2020-02' GROUP BY movie_id ORDER BY AVG(rating) DESC, title LIMIT 1 )
(SELECT name AS results FROM Users LEFT JOIN Movie_Rating USING (user_id) GROUP BY user_id ORDER BY COUNT(movie_id) DESC, name ASC LIMIT 1) UNION (SELECT title FROM Movies LEFT JOIN Movie_Rating USING (movie_id) WHERE EXTRACT(year_month FROM created_at) = '202002' GROUP BY movie_id ORDER BY AVG(rating) DESC, title ASC LIMIT 1)
(SELECT name AS results FROM Users RIGHT JOIN Movie_Rating USING(user_id) GROUP BY user_id ORDER BY COUNT(rating) DESC, name LIMIT 1) UNION (SELECT title FROM Movies RIGHT JOIN Movie_Rating USING(movie_id) WHERE LEFT(created_at, 7) = '2020-02' GROUP BY movie_id ORDER BY AVG(rating) DESC, title LIMIT 1 )
(SELECT name AS results FROM Users b JOIN Movie_Rating c ON b.user_id = c.user_id GROUP BY 1 ORDER BY COUNT(c.user_id) DESC, 1 LIMIT 1) UNION ALL (SELECT title AS results FROM Movies a JOIN Movie_Rating c ON a.movie_id = c.movie_id WHERE LEFT(created_at, 7) = '2020-02' GROUP BY 1 ORDER BY AVG(rating) DESC, 1 LIMIT 1)
(SELECT name AS results FROM Users u JOIN Movie_Rating m ON u.user_id = m.user_id GROUP BY name ORDER BY COUNT(movie_id) DESC, name LIMIT 1) UNION (SELECT title AS results FROM Movie_Rating r JOIN Movies m ON r.movie_id = m.movie_id WHERE DATE_FORMAT(created_at, '%Y-%m') = '2020-02' GROUP BY r.movie_id ORDER BY AVG(rating) DESC, title LIMIT 1)
(SELECT name AS results FROM Users u JOIN Movie_Rating m ON u.user_id = m.user_id GROUP BY u.user_id ORDER BY COUNT(DISTINCT m.movie_id) DESC, name LIMIT 1) UNION ALL (SELECT title AS results FROM Movies m JOIN Movie_Rating r ON m.movie_id = r.movie_id WHERE r.created_at LIKE '2020-02%' GROUP BY r.movie_id ORDER BY AVG(rating) DESC, title LIMIT 1)
(SELECT name AS results FROM users JOIN movie_rating USING(user_id) GROUP BY user_id ORDER BY COUNT(*) DESC, name LIMIT 1) UNION (SELECT title AS results FROM movies JOIN movie_rating USING(movie_id) WHERE LEFT(created_at, 7) = '2020-02' GROUP BY movie_id ORDER BY AVG(rating) DESC, title LIMIT 1)
(SELECT name AS results FROM users u JOIN movie_rating m ON u.user_id = m.user_id GROUP BY results ORDER BY count(rating) desc, results ASC LIMIT 1) UNION (SELECT title AS results FROM movies m1 JOIN movie_rating m2 ON m1.movie_id = m2.movie_id WHERE month(created_at) = 2 GROUP BY results ORDER BY AVG(rating) DESC, results ASC LIMIT 1)
(SELECT name AS results FROM( SELECT a.user_id,b.name,COUNT(movie_id) AS num_movie FROM Movie_Rating a JOIN Users b ON a.user_id = b.user_id GROUP BY a.user_id ORDER BY num_movie DESC,name ) temp LIMIT 1 ) UNION (SELECT title AS results FROM( SELECT a.movie_id,title,AVG(rating) AS avg_rating FROM Movie_Rating a JOIN Movies b ON a.movie_id = b.movie_id WHERE created_at BETWEEN '2020-02-01' AND '2020-02-28' GROUP BY a.movie_id ORDER BY avg_rating DESC,title ) temp2 LIMIT 1 )
(SELECT name as results FROM ( SELECT mr.user_id, u.name, COUNT(mr.user_id) FROM users u JOIN movie_rating mr ON u.user_id = mr.user_id GROUP BY 1, 2 ORDER BY 3 DESC, 2) b LIMIT 1) UNION (SELECT title as results FROM ( SELECT m.movie_id, m.title, ROUND(AVG(rating), 1) avg_rating FROM movies m JOIN movie_rating mr ON m.movie_id = mr.movie_id WHERE mr.created_at BETWEEN '2020-02-01' AND '2020-02-28' GROUP BY 1, 2 ORDER BY 3 DESC, 2) a LIMIT 1)
(SELECT name as results FROM ( SELECT mr.user_id, u.name, COUNT(mr.user_id) FROM users u JOIN movie_rating mr ON u.user_id = mr.user_id GROUP BY 1, 2 ORDER BY 3 DESC, 2) b LIMIT 1) UNION (SELECT title as results FROM ( SELECT m.movie_id, m.title, ROUND(AVG(rating), 2) avg_rating FROM movies m JOIN movie_rating mr ON m.movie_id = mr.movie_id WHERE mr.created_at BETWEEN '2020-02-01' AND '2020-02-28' GROUP BY 1, 2 ORDER BY 3 DESC, 2) a LIMIT 1)
(SELECT name as results FROM ( SELECT mr.user_id, u.name, COUNT(mr.user_id) FROM users u JOIN movie_rating mr ON u.user_id = mr.user_id GROUP BY 1, 2 ORDER BY 3 DESC, 2) user_ratings LIMIT 1) UNION (SELECT title as results FROM ( SELECT m.movie_id, m.title, ROUND(AVG(rating), 1) avg_rating FROM movies m JOIN movie_rating mr ON m.movie_id = mr.movie_id WHERE mr.created_at BETWEEN '2020-02-01' AND '2020-02-28' GROUP BY 1, 2 ORDER BY 3 DESC, 2) movies_rating LIMIT 1)
(SELECT name as results FROM Movie_Rating m JOIN Users u on u.user_id = m.user_id GROUP BY name ORDER BY count(0) DESC, u.name LIMIT 1) UNION (SELECT title as results FROM Movie_Rating mr JOIN Movies m on mr.movie_id = m.movie_id WHERE created_at between '2020-02-01' and '2020-02-29' GROUP BY title ORDER BY AVG(rating) DESC, title LIMIT 1)
(SELECT name as results FROM movie_rating as MR left join users as U ON MR.user_id = U.user_id GROUP BY MR.user_id ORDER BY COUNT(MR.user_id) desc, name limit 1) union (SELECT title as results FROM movie_rating as mr1 LEFT JOIN movies as M on mr1.movie_id = M.movie_id where MONTH(created_at) = 2 and YEAR(created_at) = 2020 GROUP BY mr1.movie_id ORDER BY avg(rating) desc, title limit 1 )
(SELECT name as results FROM users JOIN movie_rating USING(user_id) GROUP BY movie_rating.user_id, name ORDER BY COUNT(movie_id) DESC, name ASC LIMIT 1) UNION (SELECT title as results FROM movies JOIN movie_rating USING(movie_id) WHERE DATE_FORMAT(created_at, '%Y-%m') = '2020-02' GROUP BY title ORDER BY AVG(rating) DESC, title ASC LIMIT 1)
(SELECT name as results from Movie_Rating left join Users on Users.user_id= Movie_Rating.user_id group by name order by count(distinct movie_id) DESC,name limit 1) UNION (SELECT title as results from Movie_Rating left join Movies on Movies.movie_id= Movie_Rating.movie_id where date_format(created_at,'%Y-%m')='2020-02' group by title order by avg(rating) DESC,title limit 1)
(SELECT name as results from users as u JOIN movie_rating as mr on mr.user_id=u.user_id group by name order by count(rating) desc, name asc limit 1 ) UNION ( SELECT title from movies as m join movie_rating as mr on mr.movie_id = m.movie_id where created_at >='2020-02-01' and created_at <= '2020-02-28' group by title order by avg(rating) desc, title asc limit 1 )
(SELECT name results FROM users u JOIN movie_rating mr ON u.user_id = mr.user_id GROUP BY name ORDER BY count(rating) desc, 1 asc Limit 1) UNION (SELECT title results FROM movies m JOIN movie_rating mr ON m.movie_id = mr.movie_id WHERE month(created_at) = 2 GROUP BY title ORDER BY avg(rating) desc, 1 asc Limit 1)
(SELECT sub_master_1.results FROM (SELECT u.name AS results, RANK() OVER (ORDER BY rating_count DESC) count_rank FROM (SELECT user_id, COUNT(DISTINCT movie_id) AS rating_count FROM Movie_Rating GROUP BY user_id) sub JOIN Users u ON u.user_id = sub.user_id ) sub_master_1 WHERE sub_master_1.count_rank = 1 ORDER BY sub_master_1.results Limit 1) UNION (SELECT sub_master_2.results FROM (SELECT m.title AS results, RANK() OVER (ORDER BY sub_2.avg_rating DESC) AS rating_rank FROM (SELECT movie_id, AVG(rating) AS avg_rating FROM Movie_Rating WHERE MONTH(created_at) = 2 GROUP BY movie_id ) sub_2 JOIN Movies m ON m.movie_id = sub_2.movie_id ) sub_master_2 WHERE sub_master_2.rating_rank = 1 ORDER BY sub_master_2.results Limit 1)
(SELECT title AS results FROM ( SELECT m2.title ,RANK() OVER(ORDER BY AVG(m1.rating) DESC) AS movie_rnk FROM Movie_Rating m1 JOIN Movies m2 ON m1.movie_id = m2.movie_id WHERE YEAR(created_at) = 2020 AND MONTH(m1.created_at) = 2 GROUP BY m1.movie_id ) t WHERE movie_rnk = 1 ORDER BY title ASC LIMIT 1) UNION (SELECT name FROM ( SELECT u.name ,RANK() OVER(ORDER BY COUNT(m.user_id) DESC) AS movie_rnk FROM Users u JOIN Movie_Rating m ON u.user_id = m.user_id GROUP BY u.user_id ) t WHERE movie_rnk = 1 ORDER BY name ASC LIMIT 1)
(SELECT u.name AS results FROM Movie_Rating m JOIN Users u ON m.user_id = u.user_id GROUP BY u.user_id ORDER BY COUNT(m.movie_id) DESC, u.name LIMIT 1) UNION (SELECT m1.title AS results FROM Movie_Rating m LEFT JOIN Movies m1 ON m.movie_id = m1.movie_id WHERE year(created_at) = 2020 AND month(created_at) = 2 GROUP BY m.movie_id ORDER BY AVG(m.rating) DESC, m1.title LIMIT 1)
(SELECT u.name AS results FROM Users u INNER JOIN (SELECT user_id, COUNT(*) AS total FROM Movie_Rating GROUP BY user_id ) mr1 ON u.user_id = mr1.user_id GROUP BY u.name ORDER BY mr1.total DESC, u.name ASC LIMIT 1) UNION (SELECT m.title FROM Movies m INNER JOIN (SELECT movie_id, AVG(rating) AS avg_rating FROM Movie_Rating WHERE created_at BETWEEN '2020-02-01' AND '2020-02-29' GROUP BY movie_id ) mr2 ON m.movie_id = mr2.movie_id GROUP BY m.title ORDER BY mr2.avg_rating DESC, m.title ASC LIMIT 1)
(SELECT u.name AS results FROM Users u JOIN Movie_Rating mr1 ON u.user_id = mr1.user_id GROUP BY u.user_id ORDER BY COUNT(mr1.rating) DESC, u.name LIMIT 1) UNION ALL (SELECT m.title AS results FROM movies m JOIN Movie_Rating mr2 ON m.movie_id = mr2.movie_id WHERE DATE_FORMAT(mr2.created_at, '%Y-%m') = '2020-02' GROUP BY m.movie_id ORDER BY AVG(mr2.rating) DESC, m.title LIMIT 1)
(SELECT u.name AS results FROM users u JOIN Movie_Rating m ON u.user_id=m.user_id GROUP BY u.user_id ORDER BY COUNT(m.rating) DESC,u.name LIMIT 1) UNION ALL (SELECT m.title AS results FROM Movie_Rating r JOIN movies m ON r.movie_id=m.movie_id WHERE LEFT(r.created_at,7)='2020-02' GROUP BY m.movie_id ORDER BY AVG(r.rating) DESC,m.title LIMIT 1)
(SELECT u.name as 'Results' from Movie_rating m inner join users u on u.user_id = m.user_id inner join movies mo on mo.movie_id=m.movie_id group by u.name order by count(m.movie_id) DESC,u.name asc LIMIT 1) union (SELECT mo.title as 'Results' from Movie_rating m inner join users u on u.user_id = m.user_id inner join movies mo on mo.movie_id=m.movie_id WHERE m.created_at>'2020-01-31' and m.created_at<'2020-03-01' group by mo.title order by avg(m.rating) DESC,mo.title asc LIMIT 1)
(SELECT u.name as results FROM Users as u JOIN Movie_Rating as m ON u.user_id = m.user_id GROUP BY m.user_id ORDER BY count(m.rating) DESC, u.name LIMIT 1 ) UNION (SELECT m1.title as results FROM Movies as m1 JOIN Movie_Rating as mr ON m1.movie_id = mr.movie_id WHERE left(mr.created_at,7) = '2020-02' GROUP BY mr.movie_id ORDER BY AVG(mr.rating) DESC, m1.title LIMIT 1 )
(SELECT u.name results FROM Movie_Rating m JOIN Users u ON m.user_id=u.user_id GROUP BY 1 ORDER BY COUNT(DISTINCT m.movie_id) DESC, u.name LIMIT 1) UNION ALL (SELECT m2.title results FROM Movies m2 JOIN Movie_Rating m ON m2.movie_id=m.movie_id WHERE MONTH(m.created_at)=2 GROUP BY 1 ORDER BY AVG(m.rating) DESC, m2.title LIMIT 1)
(SELECT u.name results FROM users u JOIN movie_rating r ON u.user_id = r.user_id GROUP BY u.name ORDER BY COUNT(DISTINCT r.movie_id) DESC, name LIMIT 1 ) UNION ALL (SELECT m.title results FROM movies m JOIN movie_rating r ON (m.movie_id = r.movie_id) AND (DATE_FORMAT(r.created_at, '%Y-%m') = '2020-02') GROUP BY m.title ORDER BY AVG(r.rating) DESC, m.title LIMIT 1)
(SELECT users.name as results FROM Movie_Rating m INNER JOIN users on m.user_id = users.user_id GROUP BY m.user_id ORDER BY count(*) desc, users.name LIMIT 1) UNION (SELECT movies.title as results FROM Movie_Rating m INNER JOIN movies on m.movie_id = movies.movie_id WHERE m.created_at between '2020-02-01' and '2020-02-29' GROUP BY movies.title ORDER BY avg(rating) desc, movies.title LIMIT 1)
(Select a.name as results From Users as a Join Movie_Rating as b On a.user_id = b.user_id Group By a.name Order By Count(*) DESC, results ASC LIMIT 1) Union (Select a.title as results From Movies as a Join Movie_Rating as b On a.movie_id = b.movie_id And b.created_at Between '2020-02-01' And '2020-02-29' Group By a.title Order By avg(rating) DESC, results ASC LIMIT 1)
(Select b.name as results from Movie_Rating c join Users b on c.user_id=b.user_id group by b.name order by count(distinct c.movie_id) desc, b.name limit 1) Union all (select a.title as results from Movie_Rating c join Movies a on c.movie_id=a.movie_id where c.created_at like '2020-02%' Group by a.title order by avg(c.rating) desc, a.title limit 1)
(Select name as results from Movie_Rating mr Join Users u on mr.user_id = u.user_id group by name order by count(name) desc, name limit 1) UNION (Select title as results from Movie_Rating mr Join Movies m on m.movie_id = mr.movie_id where left(created_at,7) = '2020-02' group by title order by avg(rating) desc, title limit 1)
(Select u.name results from users u inner join movie_rating mr on u.user_id = mr.user_id GROUP BY 1 ORDER BY COUNT(mr.rating) DESC, u.name ASC LIMIT 1) UNION (Select m.title results from movies m inner join movie_rating mr on m.movie_id=mr.movie_id where month(mr.created_at)=2 GROUP BY 1 ORDER BY avg(mr.rating) DESC, m.title ASC LIMIT 1)
(select a.name as results from Users a left join Movie_Rating b on a.user_id = b.user_id group by a.name order by count(a.user_id) DESC, a.name ASC limit 1 ) UNION ( select a.title as results from Movies a left join Movie_Rating b on a.movie_id = b.movie_id where EXTRACT(YEAR_MONTH FROM created_at) = '202002' group by a.movie_id order by AVG(b.rating) DESC, a.title ASC limit 1 )
(select b.name as results from movie_rating a join users b on a.user_id = b.user_id group by 1 order by count(a.movie_id) desc, 1 limit 1) union (select b.title as results from movie_rating a join movies b on a.movie_id = b.movie_id where left(a.created_at,7) = '2020-02' group by 1 order by avg(rating) desc, 1 limit 1)
(select distinct u.name as results from Users u join Movie_Rating m on u.user_id = m.user_id group by u.name order by count(m.user_id) desc,u.name limit 1) union all (select m.title from Movies m join Movie_Rating r on m.movie_id = r.movie_id where SUBSTR(created_at,1,7)="2020-02" group by m.movie_id order by avg(rating) desc, m.title limit 1)
(select distinct u.name as results from Users u join Movie_Rating m on u.user_id = m.user_id group by u.name order by count(m.user_id) desc,u.name limit 1) union all (select m.title from Movies m join Movie_Rating r on m.movie_id = r.movie_id where year(created_at) =2020 and month(created_at) = 2 group by m.movie_id order by avg(rating) desc, m.title limit 1)
(select name as results from ( select name, count(1) as count from Users join Movie_Rating using (user_id) group by user_id ) a order by count desc,name asc limit 1) union all (select title as results from Movies join Movie_Rating using (movie_id) where year(created_at)=2020 and month(created_at)=2 group by movie_id,title order by avg(rating) desc ,title asc limit 1)
(select name as results from ( select name, count(movie_id) as cnt from movie_rating as a left join users as b on a.user_id = b.user_id group by 1 ) as a order by cnt desc,name limit 1) union ( select title as results from ( select title, avg(rating) as avg_rating from movie_rating as a left join movies as b on a.movie_id = b.movie_id where date_format(created_at, '%Y-%m')='2020-02' group by 1 ) as a order by avg_rating desc, title limit 1 )
(select name as results from ( select u.name, dense_rank() over(order by count(mr.movie_id)desc,u.name asc) as ratingrank from Users u join Movie_Rating mr on u.user_id = mr.user_id group by u.name )tmp where tmp.ratingrank = 1 ) union all ( select title as results from ( select m.title, dense_rank() over(order by avg(mr.rating)desc,m.title asc) as avgratingrank from Movies m join (select movie_id, rating from Movie_Rating where left(created_at,7) = '2020-02') mr on m.movie_id = mr.movie_id group by m.movie_id )tmp2 where tmp2.avgratingrank = 1 )
(select name as results from ( select user_id from Movie_Rating group by 1 having count(*) = ( select count(rating) as c1 from Movie_Rating group by user_id order by 1 desc limit 1)) t1 inner join users u on t1.user_id = u.user_id order by name limit 1) union all (select title from ( select movie_id from Movie_rating where month(created_at) = 2 and year(created_at) = 2020 group by movie_id having avg(rating) = (select avg(rating) from Movie_Rating where month(created_at) = 2 and year(created_at) = 2020 group by movie_id order by 1 desc limit 1 )) t2 inner join movies m on t2.movie_id = m.movie_id order by title limit 1)
(select name as results from ( select user_id, count(movie_id) as cnt from movie_rating group by user_id ) t join users using(user_id) order by cnt desc, name limit 1) union all (select title as results from ( select movie_id, avg(rating) as ar from movie_rating where month(created_at) = 2 and year(created_at) = 2020 group by movie_id ) s join movies using(movie_id) order by ar desc, title limit 1)
(select name as results from (Movie_Rating left join Users on Movie_Rating.user_id = Users.user_id) group by Movie_Rating.user_id order by count(distinct movie_id) desc, name limit 1) union all (select title from (Movie_Rating left join Movies on Movies.movie_id = Movie_Rating.movie_id) where month(created_at) = 2 group by Movies.movie_id order by avg(rating) desc, title limit 1)
(select name as results from (select name, count(distinct movie_id) as n_movies_rated from Movie_Rating m left join Users u on m.user_id = u.user_id group by m.user_id order by count(distinct movie_id) desc, name) rater_t limit 1) union (select title from (select title, avg(rating) as avg_rating from Movie_Rating mr left join Movies m on mr.movie_id = m.movie_id where created_at >= '2020/02/01' and created_at < '2020/03/01' group by m.movie_id order by avg(rating) desc, title) m_t limit 1)
(select name as results from (select u.name as name, rank()over(order by count(rating) desc) as rank1 from Movie_Rating mr join users u on mr.user_id = u.user_id group by mr.user_id) as a where rank1 = 1 order by name limit 1) union (select title as results from (select m.title as title, rank()over(order by avg(rating) desc) as rank1 from Movie_Rating mr join movies m on mr.movie_id = m.movie_id where substr(created_at,1,7) = '2020-02' group by mr.movie_id) as b where rank1 = 1 order by title limit 1)
(select name as results from (select user_id, count(1) as rate_cnt from Movie_Rating group by user_id ) t1 join Users t2 on t1.user_id = t2.user_id order by rate_cnt desc, name asc limit 1) union all (select title as results from (select movie_id, avg(rating) as avg_rating from Movie_Rating where date_format(created_at, '%Y-%m') = '2020-02' group by movie_id) a1 left join Movies a2 on a1.movie_id = a2.movie_id order by avg_rating desc, title asc limit 1)
(select name as results from Movie_Rating a left join Users b on a.user_id = b.user_id group by a.user_id order by count(a.movie_id) desc, name limit 1) union (select title as results from (select movie_id, rating from Movie_Rating where year(created_at) = 2020 and month(created_at) = 2) a inner join Movies b on a.movie_id = b.movie_id group by a.movie_id order by avg(rating) desc, title limit 1)
(select name as results from Movie_Rating left join Users on Movie_Rating.user_id = Users.user_id group by Users.user_id order by count(movie_id) desc, name limit 1) union (select title as results from Movie_Rating left join Movies on Movie_Rating.movie_id = Movies.movie_id where left(created_at, 7) = '2020-02' group by Movies.movie_id order by avg(rating) desc, title limit 1)
(select name as results from Movie_Rating left join Users on Movie_Rating.user_id=Users.user_id group by Movie_Rating.user_id order by count(created_at) desc, name asc limit 1) UNION ALL (select Movies.title as results from ( select movie_id, avg(rating) as rating from Movie_Rating where year(created_at)="2020" and month(created_at)="2" group by movie_id ) a left join Movies on a.movie_id=Movies.movie_id order by a.rating desc, Movies.title asc limit 1)
(select name as results from Movie_Rating m join Users u on u.user_id = m.user_id group by m.user_id order by count(m.user_id) desc, u.name limit 1) union all (select mo.title as results from Movie_Rating m join Movies mo on mo.movie_id = m.movie_id where YEAR(created_at) = 2020 and MONTH(created_at) = 2 group by mo.movie_id order by sum(rating) / count(rating) desc, mo.title limit 1 )
(select name as results from Movie_Rating m left join Users u on m.user_id = u.user_id group by m.user_id order by count(m.user_id) desc, name limit 1) union all (select title as results from Movie_Rating m left join Movies m2 on m.movie_id = m2.movie_id where created_at between '2020-02-01' and '2020-02-29' group by m.movie_id order by avg(rating) desc, title limit 1)
(select name as results from Movie_rating m left join Users u on m.user_id = u.user_id group by m.user_id order by count(movie_id) desc, name limit 1) union (select title as results from Movie_rating mr left join Movies mo on mr.movie_id = mo.movie_id where date_format(created_at, '%Y%m') = '202002' group by mr.movie_id order by avg(rating) desc, title limit 1 )
(select name as results from Users U join Movie_Rating M on U.user_id = M.user_id group by M.user_id having count(distinct movie_id) >= (select count(distinct movie_id) from Movie_Rating group by user_id order by 1 desc limit 1) order by name asc limit 1 ) union (select title as results from Movies M join Movie_Rating R on M.movie_id = R.movie_id where left(created_at,7) = "2020-02" group by R.movie_id having avg(rating) >= (select avg(rating) from Movie_Rating where left(created_at,7) = "2020-02" group by movie_id order by 1 desc limit 1) order by title asc limit 1 )
(select name as results from Users a inner join movie_rating b on a.user_id = b.user_id group by a.user_id order by count(*) desc, a.name limit 1) union (select a.title as results from movies a inner join movie_rating b on a.movie_id = b.movie_id where month (created_at) = 2 group by a.movie_id order by avg(rating) desc, a.title limit 1)
(select name as results from Users as u join Movie_Rating as mr on u.user_id = mr.user_id group by u.user_id order by count(distinct movie_id) desc, name limit 1) union (select title as results from Movies as m join Movie_Rating as mr on m.movie_id = mr.movie_id where YEAR(created_at) = 2020 and MONTH(created_at) = 2 group by m.movie_id order by avg(rating) desc, title limit 1)
(select name as results from Users join (select user_id, count(mr.rating) as cnt_r from Movie_Rating mr group by 1) u using(user_id) order by cnt_r desc, name limit 1 ) union (select title as results from Movies m join (select movie_id, avg(mr0.rating) as avg_r from Movie_Rating mr0 where left(created_at,7) = '2020-02' group by 1) r using(movie_id) order by avg_r desc, title limit 1 )
(select name as results from Users join (select user_id, count(mr.rating) as cnt_r from Movie_Rating mr group by 1) u using(user_id) order by cnt_r desc, name limit 1 ) union all (select title as results from Movies m join (select movie_id, avg(mr0.rating) as avg_r from Movie_Rating mr0 where left(created_at,7) = '2020-02' group by 1) r using(movie_id) order by avg_r desc, title limit 1 )
(select name as results from Users join Movie_Rating using(user_id) group by user_id order by count(distinct movie_id) desc, name limit 1) union (select title as results from Movies join Movie_Rating using(movie_id) where left(created_at, 7) = '2020-02' group by movie_id order by avg(rating) desc, title limit 1)
(select name as results from Users join Movie_Rating using(user_id) group by user_id order by count(distinct movie_id) desc, name limit 1) union all (select title as results from Movies join Movie_Rating using(movie_id) where left(created_at, 7) = '2020-02' group by movie_id order by avg(rating) desc, title limit 1)
(select name as results from Users left join Movie_Rating using (user_id) group by name order by count(movie_id) DESC, 1 limit 1) union all (select title as results from Movies left join Movie_Rating using (movie_id) where created_at between cast('2020-02-01'as Date) and cast('2020-02-29'as Date) group by title order by avg(rating) DESC, 1 limit 1)
(select name as results from Users u inner join Movie_Rating m on u.user_id = m.user_id group by u.user_id order by count(rating) desc, name limit 1) union (select title as results from Movies a inner join Movie_Rating b on a.movie_id = b.movie_id where SUBSTR(created_at,1,7)="2020-02" group by a.movie_id order by avg(rating) desc, title limit 1)
(select name as results from Users u inner join Movie_Rating m on u.user_id = m.user_id group by u.user_id order by count(rating) desc, name limit 1) union (select title as results from Movies a inner join Movie_Rating b on a.movie_id = b.movie_id where created_at like '2020-02%' group by a.movie_id order by avg(rating) desc, title limit 1)
(select name as results from Users u join Movie_Rating m on u.user_id = m.user_id group by m.user_id order by count(rating) desc, results limit 1) union (select title as results from Movies m join Movie_Rating r on m.movie_id = r.movie_id where substr(created_at, 1, 7) = '2020-02' group by r.movie_id order by avg(rating) desc, results limit 1)
(select name as results from Users u join Movie_Rating m on u.user_id = m.user_id group by u.user_id order by count(*) desc, name asc limit 1) union (select title as resutls from Movies as m join Movie_Rating as mr on m.movie_id = mr.movie_id where left(created_at,7) = '2020-02' group by title order by avg(rating) desc, title limit 1 )
(select name as results from movie_rating as mr join users as u using (user_id) group by user_id, name order by count(movie_id) desc, name limit 1) union (select title as results from movie_rating as mr join movies as m using (movie_id) where created_at like '2020-02%' group by movie_id, title order by avg(rating) desc, title asc limit 1)
(select name as results from movie_rating as mr1 left join users as u on mr1.user_id = u.user_id group by mr1.user_id order by count(movie_id) desc, name limit 1) union (select title as results from movie_rating as mr left join movies as m on mr.movie_id = m.movie_id where MONTH(created_at) = 2 and YEAR(created_at) = 2020 group by mr.movie_id order by avg(rating) desc, title limit 1)
(select name as results from movie_rating inner join users using(user_id) group by user_id having count(*) = (select count(*) from movie_rating group by user_id order by 1 desc limit 1) order by 1 limit 1 ) union (select title as results from movie_rating mr inner join movies using(movie_id) where year(created_at)=2020 and month(created_at)=02 group by movie_id having avg(rating) = (select avg(rating) from movie_rating where year(created_at)=2020 and month(created_at)=02 group by movie_id order by 1 desc limit 1) order by 1 limit 1)
(select name as results from movie_rating left join users using(user_id) group by user_id order by count(movie_id) desc, name limit 1) union (select title as results from movie_rating as mr left join movies as m using(movie_id) where MONTH(created_at) = 2 and YEAR(created_at) = 2020 group by mr.movie_id order by avg(rating) desc, title limit 1)
(select name as results from movie_rating m join users u on m.user_id = u.user_id group by m.user_id order by count(rating) desc, name asc limit 1) union all (select title from movie_rating b join movies a on b.movie_id = a.movie_id where month(created_at) = 2 group by b.movie_id order by avg(rating) desc , title asc limit 1)
(select name as results from movie_rating mov join users u using (user_id) group by name order by count(movie_id) desc , name limit 1 ) union all (select title from movie_rating mov join movies m using(movie_id) where created_at >='2020-02-01' and created_at < '2020-03-01' group by title order by avg(rating) desc , title limit 1 )
(select name as results from movie_rating mov join users u using (user_id) group by name order by count(movie_id) desc, name limit 1) union all (select title from movie_rating mov join movies m using (movie_id) where date_format(created_at, '%Y-%m') = '2020-02' group by title order by avg(rating) desc, title limit 1)
(select name as results from movie_rating r join users u on u.user_id = r.user_id group by r.user_id having count(*) order by count(*) DESC, name limit 1) union all (select title as results from movie_rating r join movies m on m.movie_id = r.movie_id where created_at between '2020-02-01' and '2020-02-29' group by r.movie_id having avg(rating) order by avg(rating) DESC, title limit 1)
(select name as results from users a inner join movie_rating b on a.user_id=b.user_id group by 1 order by count(movie_id) desc, 1 limit 1) union (select title as results from movies m inner join movie_rating r on m.movie_id=r.movie_id where left(created_at,7)="2020-02" group by 1 order by avg(rating) desc, 1 limit 1)
(select name as results from users natural join movie_rating group by user_id, name order by count(*) desc, 1 limit 1) union (select title as results from movies natural join movie_rating where created_at like '2020-02%' group by movie_id, title order by avg(rating) desc, 1 limit 1)
(select name as results from users u join (select user_id, dense_rank() over (order by count(movie_id) desc) as r from movie_rating group by user_id) f on f.user_id = u.user_id where f.r =1 order by name asc limit 1) union (select title as results from movies m join (select movie_id, dense_rank() over (order by avg(rating) desc) as r from movie_rating where date_format(created_at, "%Y-%m")= "2020-02" group by movie_id) mr on mr.movie_id = m.movie_id where mr.r =1 order by title asc limit 1)
(select name as results from users u join movie_Rating m using (user_id) group by 1 order by count(distinct movie_id) desc,1 limit 1) union (select title as results from movies a join movie_Rating m using (movie_id) where month(created_at) = 2 group by 1 order by avg(rating) desc, 1 limit 1)
(select name as results from users u join movie_rating m on u.user_id = m.user_id group by 1 order by count(*) desc, 1 limit 1 ) union all (select title as results from movies u join movie_rating m on u.movie_id = m.movie_id where month(created_at) = 2 group by 1 order by avg(rating) desc, 1 asc limit 1 )
(select name as results from users u join movie_rating m on u.user_id = m.user_id group by 1 order by count(distinct movie_id) desc, 1 limit 1) union (select title as results from movies a join movie_rating b on a.movie_id = b.movie_id where month(created_at) = 2 group by 1 order by avg(rating) desc, 1 limit 1)
(select name as results from users u join movie_rating m on u.user_id = m.user_id group by u.user_id order by count(distinct movie_id) desc, name limit 1) Union (select title from movies a join movie_rating b on a.movie_id = b.movie_id where created_at between '2020-02-01' and '2020-02-29' group by a.movie_id order by avg(rating) desc, title limit 1)
(select name as results from users u join movie_rating m on u.user_id = m.user_id group by u.user_id order by count(distinct movie_id) desc, name limit 1) union (select title from movies a join movie_rating b on a.movie_id = b.movie_id where created_at between "2020-02-01" and "2020-02-28" group by a.movie_id order by avg(rating) desc, title limit 1)
(select name results from movie_rating join users using(user_id) group by user_id order by count(*) desc, name limit 1) union all (select title results from movie_rating join movies using(movie_id) where left(created_at,7) = '2020-02' group by movie_id order by avg(rating) desc, title limit 1)
(select name results from movie_rating mr left join users u on u.user_id = mr.user_id group by mr.user_id order by count(mr.user_id) desc, name limit 1) union (select title from movie_rating mr left join movies m on mr.movie_id = m.movie_id where left(created_at,7) = '2020-02' group by mr.movie_id order by avg(rating) desc, title limit 1)
(select name results from movie_rating r left join users u on r.user_id = u.user_id group by name order by count(movie_id) desc, name limit 1) union (select title results from movie_rating r left join movies m on r.movie_id = m.movie_id where month(created_at) = 2 and year(created_at) = 2020 group by title order by avg(rating) desc, title limit 1)
(select name results from movie_rating rating join users on rating.user_id=users.user_id group by rating.user_id order by count(movie_id) desc, name limit 1) union (select title from movie_rating rating join movies on rating.movie_id = movies.movie_id where substring(created_at,1,7)='2020-02' group by rating.movie_id order by avg(rating) desc, title limit 1)
(select name results from users join movie_rating using (user_id) group by 1 order by count(distinct movie_id) desc, 1 limit 1 ) union (select title from movies join movie_rating using (movie_id) where month(created_at)= 2 group by 1 order by avg(rating) desc, title limit 1 )
(select name results from users u join movie_rating mr on u.user_id = mr.user_id group by name order by count(rating) desc, name asc limit 1) union (select title results from movies m join movie_rating mr on m.movie_id = mr.movie_id where month(created_at) = 2 group by title order by avg(rating) desc, title asc limit 1 )
(select r1.name results from (select u.name, count(distinct movie_id) num_m from movie_rating r left join users u on r.user_id = u.user_id group by r.user_id order by num_m desc,name limit 1) r1) union all (select r2.title results from (select m.title, avg(rating) avg_rating from movie_rating r left join movies m on r.movie_id = m.movie_id where created_at between '2020-02-01' and '2020-02-29' group by r.movie_id order by avg_rating desc, title limit 1) r2)
(select results from (select u.name as results, count(*) as cnt from users u inner join Movie_Rating m on u.user_id = m.user_id group by u.user_id) as tab order by cnt desc, 1 asc limit 1) union all (select results from (select m1.title as results, avg(rating) as average from Movie_Rating m2 inner join Movies m1 on m1.movie_id = m2.movie_id and left(m2.created_at, 7) = '2020-02' group by m1.movie_id) as tab order by average desc, 1 asc limit 1)
(select u.name as results from (select user_id, count(distinct movie_id) as cnt from movie_rating group by user_id) a join users u on a.user_id = u.user_id order by a.cnt desc, u.name limit 1) union (select m.title as results from movie_rating mr join movies m on mr.movie_id = m.movie_id where created_at >= "2020-02-01" and created_at <= "2020-02-29" group by m.title order by avg(mr.rating) desc, m.title limit 1)
(select u.name as results from (select user_id, count(distinct movie_id) as cnt from movie_rating group by user_id) a join users u on a.user_id = u.user_id order by a.cnt desc, u.name limit 1) union (select m.title as results from movie_rating mr left join movies m on mr.movie_id = m.movie_id where created_at >= "2020-02-01" and created_at <= "2020-02-29" group by m.title order by avg(mr.rating) desc, m.title limit 1)
(select u.name as results from Movie_Rating M join Users u on M.user_id = u.user_id group by M.user_id order by count(*) desc,u.name asc limit 1) union (select m.title from Movie_Rating a join Movies m on a.movie_id = m.movie_id where month(a.created_at)=02 group by a.movie_id order by avg(rating) desc,m.title asc limit 1)
(select u.name as results from Movie_Rating as mr left join Users as u on mr.user_id=u.user_id group by u.name order by count(mr.rating) desc,u.name limit 1) UNION (select m.title as results from Movie_Rating as mr left join Movies as m on mr.movie_id=m.movie_id where month(created_at)=2 group by m.title order by avg(mr.rating) desc, m.title limit 1 )
(select u.name as results from Movie_Rating r inner join Users u on r.user_id = u.user_id group by u.user_id order by count(u.user_id) desc, u.name limit 1) union (select m.title as results from Movie_Rating r inner join Movies m on r.movie_id = m.movie_id and r.created_at like '2020-02%' group by m.movie_id order by avg(r.rating) desc, m.title limit 1)
(select u.name as results from Movie_rating m join Users u on m.user_id = u.user_id group by m.user_id having count(distinct movie_id) = (select count(distinct movie_id) review_count from Movie_Rating m group by user_id order by review_count desc limit 1) order by u.name limit 1) union ( select mo.title from Movie_rating m join Movies mo on m.movie_id = mo.movie_id and extract(year_month from created_at) = 202002 group by m.movie_id having avg(rating) = (select avg(rating) as avg_rating from Movie_Rating m where extract(year_month from created_at) = 202002 group by movie_id order by avg_rating desc limit 1) order by mo.title limit 1)
(select u.name as results from Users u inner join (select user_id, count(user_id) as cnt from Movie_Rating group by user_id) m on u.user_id = m.user_id group by u.name order by m.cnt desc, u.name limit 1) UNION ALL (select m.title as results from Movies m inner join (select movie_id, avg(rating) as rating from Movie_Rating where substr(created_at, 1, 7) = '2020-02' group by movie_id) mr on m.movie_id = mr.movie_id order by mr.rating desc, m.title limit 1)
(select u.name as results from Users u join Movie_Rating m on u.user_id = m.user_id group by u.user_id, u.name order by count(m.movie_id) desc, u.name asc limit 1) UNION (select m.title as results from Movie_Rating mr join Movies m on mr.movie_id = m.movie_id where date_format(created_at, '%Y-%m') = '2020-02' group by mr.movie_id, m.title order by avg(mr.rating) desc, m.title asc limit 1)
(select u.name as results from Users u join Movie_Rating m on u.user_id=m.user_id group by 1 order by count(distinct m.movie_id) desc, u.name asc limit 1) union all (select m1.title as results from Movies m1 join Movie_Rating m2 on m1.movie_id=m2.movie_id where date_format(created_at,'%Y-%m')='2020-02' group by 1 order by avg(m2.rating) desc, m1.title asc limit 1)
(select u.name as results from Users u left join Movie_Rating r on u.user_id = r.user_id group by r.user_id order by count(r.movie_id) desc, u.name limit 1) union (select m.title from Movies m left join Movie_Rating r on m.movie_id = r.movie_id where left(created_at,7) = '2020-02' group by m.movie_id order by avg(r.rating) desc, m.title limit 1)
(select u.name as results from movie_rating as r join users as u on r.user_id = u.user_id group by u.user_id order by count(rating) desc, u.name limit 1) union all ( select m.title as results from movie_rating as r join movies as m on r.movie_id = m.movie_id where date_format(created_at, '%Y-%m') = '2020-02' group by m.movie_id order by avg(r.rating) desc, m.title limit 1)
(select u.name as results from movie_rating m inner join users u on m.user_id = u.user_id group by 1 order by count(m.movie_id) desc, u.name asc limit 1) UNION (select a.title as results from (select m.title, dense_rank() over(order by avg(mo.rating) desc) as r from Movies m inner join Movie_Rating mo on m.movie_id = mo.movie_id where extract(year_month from mo.created_at) = '202002' group by 1 order by 1 asc)a where a.r = 1 limit 1)
(select u.name as results from movie_rating m left join Users u on u.user_id = m.user_id group by u.name order by count(m.user_id ) desc, u.name limit 1) union (select u.title as results from movie_rating m left join movies u on u.movie_id = m.movie_id WHERE m.created_at LIKE '2020-02%' group by u.title order by avg(m.rating ) desc , u.title limit 1)
(select u.name as results from movie_rating m left join users u using(user_id) group by user_id order by count(user_id) desc, u.name asc limit 1) union (select m2.title as results from movie_rating m1 left join movies m2 using(movie_id) where m1.created_at between '2020-02-01'and '2020-02-28' group by movie_id order by avg(m1.rating) desc, m2.title limit 1)
(select u.name as results from movie_rating mr join users u using(user_id) group by mr.user_id order by count(mr.rating) desc, u.name limit 1) union all ( select m.title from movie_rating mr join movies m using(movie_id) where left(mr.created_at,7) = '2020-02' group by mr.movie_id order by avg(mr.rating) DESC, m.title limit 1)
(select u.name as results from movie_rating mr left join users u on mr.user_id = u.user_id group by mr.user_id,u.name order by count(*) desc, u.name asc limit 1) Union all (select m.title as results from movie_rating mr left join movies m on mr.movie_id = m.movie_id where created_at >= "2020-02-01" and created_at <= "2020-02-29" group by m.title order by avg(mr.rating) desc, m.title limit 1)
(select u.name as results from movie_rating mr, users u where mr.user_id=u.user_id group by mr.user_id order by count(mr.movie_id) desc,u.name limit 1 ) union all ( select m.title as results from movie_rating mr, movies m where mr.movie_id=m.movie_id and left(created_at,7)='2020-02' group by mr.movie_id order by avg(mr.rating) desc,m.title limit 1 )
(select u.name as results from users as u join Movie_Rating as m using (user_id) group by u.user_id order by count(distinct movie_id) desc, u.name limit 1) union all (select m.title as results from movies as m join Movie_Rating as r using (movie_id) where year(created_at)=2020 and month(created_at)=2 group by m.movie_id order by avg(rating) desc, m.title limit 1)
(select u.name as results from users u join Movie_Rating mr on u.user_id = mr.user_id group by u.user_id order by count(u.user_id) desc, u.name limit 1) union (select m.title from movies m join Movie_Rating mr on m.movie_id = mr.movie_id and month(created_at ) = "2" group by mr.movie_id order by sum(mr.rating)/count(mr.rating) desc, m.title limit 1)
(select u.name as results from users u join movie_rating mr on mr.user_id = u.user_id group by u.name order by count(mr.rating) desc, u.name limit 1) union (select m.title as results from movie_rating mr join movies m on m.movie_id = mr.movie_id where mr.created_at between '2020-02-01' and '2020-02-28' group by m.title order by avg(mr.rating) desc, m.title limit 1)
(select u.name results from Movie_Rating mr left join Users u on u.user_id = mr.user_id group by u.user_id order by count(movie_id) desc, u.name limit 1) union (select title results from Movie_Rating mr left join Movies m on mr.movie_id = m.movie_id where left(created_at, 7) = '2020-02' group by mr.movie_id order by avg(rating) desc, title limit 1)
(select u.name results from users u join Movie_Rating mr on u.user_id = mr.user_id group by u.user_id order by count(movie_id) desc, u.name limit 1) union (select m.title results from Movie_Rating mr join Movies m on mr.movie_id = m.movie_id where left(mr.created_at, 7) = '2020-02' group by mr.movie_id order by avg(mr.rating) desc, m.title limit 1)
(select user.name as results from Users user join( select user_id ,count(movie_id) as cnt_rated from Movie_Rating group by user_id ) user_rated on user.user_id = user_rated.user_id order by cnt_rated desc, results limit 1 ) union all (select movie.title as results from Movies movie join( select movie_id ,avg(rating) as avg_rating from Movie_Rating where created_at between '2020-02-01' and '2020-02-29' group by movie_id ) movie_rating on movie.movie_id = movie_rating.movie_id order by avg_rating desc, results limit 1 )
(select users.name as results from users join movie_rating using(user_id) group by user_id order by count(*) desc, users.name asc limit 1) UNION (select movies.title as results from movies join movie_rating using(movie_id) where left(movie_rating.created_at, 7) = "2020-02" group by movie_id order by avg(rating) desc, movies.title asc limit 1)
(select users.name results from movie_rating left join users on users.user_id = movie_rating.user_id group by movie_rating.user_id order by count(movie_id) desc, users.name limit 1) union (select movies.title results from movie_rating left join movies on movie_rating.movie_id = movies.movie_id where movie_rating.created_at between '2020-02-01' and '2020-02-29' group by movie_rating.movie_id order by avg(rating) desc, title limit 1)
From( SELECT user_id,count(*) as number From Movie_Rating Group by user_id)a LEFT JOIN Users ON a.user_id = Users.user_id ORDER BY number DESC, name ASC Limit 1) UNION ALL (SELECT title as results From( SELECT movie_id, avg(rating) as rate From Movie_Rating WHERE LEFT(created_at,7) ='2020-02' Group by movie_id)b LEFT JOIN Movies ON b.movie_id = Movies.movie_id ORDER BY rate DESC, title ASC LIMIT 1)
SELECT * FROM ( SELECT name AS results FROM Users WHERE user_id IN ( SELECT r.user_id FROM ( SELECT user_id, RANK() OVER (ORDER BY rate_count DESC) AS count_rank FROM ( SELECT user_id, COUNT(DISTINCT movie_id) AS rate_count FROM Movie_Rating GROUP BY user_id ) rc ) r WHERE r.count_rank = 1 ) ORDER BY name LIMIT 1 ) n UNION SELECT * FROM ( SELECT title AS results FROM Movies WHERE movie_id IN ( SELECT r.movie_id FROM ( SELECT movie_id, RANK() OVER (ORDER BY avg_rating DESC) AS rating_rank FROM ( SELECT movie_id, AVG(rating) AS avg_rating FROM Movie_Rating WHERE LEFT(created_at, 7) = '2020-02' GROUP BY movie_id ) ar ) r WHERE r.rating_rank = 1 ) ORDER BY title LIMIT 1 ) t
SELECT * FROM ( WITH tmp AS( SELECT user_id, COUNT(*) AS rev_count FROM Movie_Rating GROUP BY user_id ) SELECT U.name AS results FROM ( SELECT user_id FROM tmp WHERE rev_count = (SELECT MAX(rev_count) FROM tmp) )A INNER JOIN Users U ON A.user_id = U.user_id ORDER BY U.name LIMIT 1 )first UNION SELECT * FROM( WITH tmp2 AS ( SELECT movie_id, AVG(rating) AS avg_rating FROM Movie_Rating WHERE SUBSTR(created_at,1,7) = "2020-02" GROUP BY movie_id ) SELECT M.title AS results FROM ( SELECT movie_id FROM tmp2 WHERE avg_rating = (SELECT MAX(avg_rating) FROM tmp2) )B INNER JOIN Movies M ON B.movie_id = M.movie_id ORDER BY M.title LIMIT 1 )fin
SELECT * FROM (SELECT u.name AS results FROM Movie_Rating mr LEFT JOIN Users u ON mr.user_id = u.user_id GROUP BY mr.user_id ORDER BY COUNT(movie_id) DESC, u.name LIMIT 1) tmp1 UNION SELECT * FROM (SELECT m.title AS results FROM Movie_Rating mr LEFT JOIN Movies m ON mr.movie_id = m.movie_id WHERE LEFT(created_at, 7) = '2020-02' GROUP BY mr.movie_id ORDER BY AVG(mr.rating) DESC, m.title LIMIT 1) tmp2
SELECT a.results FROM (with cte as (SELECT u.name, COUNT(m.rating) as cnt_rating FROM users u LEFT JOIN movie_rating m ON u.user_id = m.user_id GROUP BY u.name) SELECT name AS results FROM cte where cnt_rating = (Select max(cnt_rating) from cte) ORDER BY name LIMIT 1) as a UNION SELECT b.results FROM (WITH max_rating as (SELECT m.title, SUM(mr.rating)/ count(*) as avg_rating FROM movies m LEFT JOIN movie_rating mr ON m.movie_id = mr.movie_id WHERE MONTH(mr.created_at) = '02' GROUP BY m.movie_id) SELECT title as results FROM max_rating WHERE avg_rating = (select max(avg_rating) from max_rating) ORDER BY title LIMIT 1) as b
SELECT name AS 'results' FROM (SELECT m.user_id, COUNT(1) AS 'movies_rated', u.name FROM Movie_Rating AS m LEFT JOIN Users AS u ON m.user_id = u.user_id GROUP BY m.user_id ORDER BY movies_rated DESC, u.name ASC LIMIT 1) AS tbl UNION SELECT title FROM ( SELECT m.movie_id, AVG(m.rating) AS 'avg_rating', n.title FROM Movie_Rating AS m LEFT JOIN Movies AS n ON m.movie_id = n.movie_id WHERE m.created_at BETWEEN '2020-02-01' AND '2020-02-28' GROUP BY m.movie_id ORDER BY avg_rating DESC, n.title ASC LIMIT 1 ) AS tbl2
SELECT name AS results FROM ( SELECT name FROM ( SELECT user_id, RANK() OVER (ORDER BY COUNT(user_id) DESC) AS count_rank FROM Movie_Rating GROUP BY user_id) ranks LEFT JOIN Users ON ranks.user_id = Users.user_id WHERE count_rank = 1 ORDER BY name LIMIT 1) top_rater_name UNION SELECT results FROM ( SELECT title AS results FROM ( SELECT movie_id, AVG(rating), RANK() OVER (ORDER BY AVG(rating) DESC) AS rating_rank FROM ( SELECT movie_id, rating FROM Movie_Rating WHERE created_at BETWEEN '2020-02-01' AND '2020-02-29') feb_movies GROUP BY movie_id) rating_ranks LEFT JOIN Movies ON rating_ranks.movie_id = Movies.movie_id WHERE rating_rank = 1 ORDER BY results LIMIT 1) top_rated_movie
SELECT name AS results FROM (SELECT a.user_id, a.name, RANK()OVER(ORDER BY COUNT(DISTINCT movie_id) DESC, a.name) AS rnk FROM Users a LEFT JOIN Movie_Rating b ON a.user_id = b.user_id GROUP BY user_id, name) t WHERE rnk = 1 UNION SELECT title AS results FROM (SELECT a.movie_id, a.title, RANK()OVER(ORDER BY AVG(rating) DESC, a.title) AS rnk FROM Movies a LEFT JOIN Movie_Rating b ON a.movie_id = b.movie_id WHERE MONTH(created_at) = 2 GROUP BY movie_id, title) t WHERE rnk = 1
SELECT name AS results FROM (SELECT name, COUNT(user_id) AS num_ratings FROM Movie_Rating LEFT JOIN Users USING(user_id) GROUP BY user_id ORDER BY num_ratings DESC, name LIMIT 1) AS x UNION SELECT title AS results FROM (SELECT title, AVG(rating) AS avg_rating FROM Movie_rating LEFT JOIN Movies USING(movie_id) WHERE MONTH(created_at) = 2 AND YEAR(created_at) = 2020 GROUP BY movie_id ORDER BY avg_rating DESC, title LIMIT 1) AS y
SELECT name AS results FROM (SELECT u.name, COUNT(m1.rating) AS rate_num FROM Users u JOIN Movie_Rating m1 USING (user_id) GROUP BY u.user_id ORDER BY rate_num DESC, u.name ASC LIMIT 1) a UNION ALL SELECT title AS results FROM (SELECT mo.title, AVG(m2.rating) AS rate_avg FROM Movies mo JOIN Movie_Rating m2 USING (movie_id) WHERE DATE_FORMAT(m2.created_at, '%Y-%m') = '2020-02' GROUP BY mo.title ORDER BY rate_avg DESC, mo.title ASC LIMIT 1) b
SELECT name AS results FROM( SELECT u.name AS name, COUNT(*) AS num_movies FROM Movie_Rating mr1 JOIN Users u ON mr1.user_id = u.user_id GROUP BY u.name ORDER BY num_movies DESC, name ASC LIMIT 1 ) a UNION SELECT title AS results FROM( SELECT m.title, AVG(mr2.rating) AS avg_rating FROM Movie_Rating mr2 JOIN Movies m ON mr2.movie_id = m.movie_id WHERE SUBSTR(created_at,1,7) = '2020-02' GROUP BY m.title ORDER BY avg_rating DESC, title ASC LIMIT 1 ) b
SELECT name AS results FROM( SELECT u.user_id, u.name, RANK() OVER(ORDER BY COUNT(m.movie_id) DESC, u.name ASC) AS rk, COUNT(m.movie_id) FROM Movie_Rating m JOIN Users u ON u.user_id = m.user_id GROUP BY u.user_id) r WHERE rk=1 UNION SELECT title FROM( SELECT r.movie_id, m.title, RANK() OVER (ORDER BY AVG(r.rating) DESC, m.title ASC) AS m_rk FROM Movie_Rating r JOIN Movies m ON r.movie_id = m.movie_id WHERE DATE_FORMAT(r.created_at, '%Y-%m')='2020-02' GROUP BY r.movie_id) t WHERE m_rk=1
SELECT results FROM ( ( SELECT u.name AS results, COUNT(*) AS n_rated FROM Movie_Rating mr LEFT JOIN Users u ON mr.user_id = u.user_id GROUP BY u.user_id ORDER BY n_rated DESC, u.name ASC LIMIT 1 ) UNION ( SELECT m.title, AVG(rating) AS a_rating FROM Movie_Rating mr LEFT JOIN Movies m ON mr.movie_id = m.movie_id WHERE MONTH(mr.created_at) = 2 AND YEAR(mr.created_at) = 2020 GROUP BY mr.movie_id ORDER BY a_rating DESC, m.title ASC LIMIT 1 ) ) a
SELECT results from ( SELECT name as results, case when num_movies_rated is null then 0 else num_movies_rated end as num_movies_rated FROM ( SELECT name, count(distinct movie_id) as num_movies_rated FROM ( SELECT u.name, u.user_id, r.movie_id, r.rating FROM Users u Left Join Movie_Rating r on u.user_id = r.user_id )a group by 1 )b order by num_movies_rated desc, name asc limit 1 )c UNION SELECT results FROM ( SELECT title as results, case when avg_rating is null then 0 else avg_rating end as avg_rating FROM ( SELECT title, avg(rating) as avg_rating FROM ( SELECT m.movie_id, m.title, r.user_id, r.rating FROM Movies m Left Join Movie_Rating r on m.movie_id = r.movie_id WHERE date_format(created_at,'%m') = 2 )a group by 1 )b order by avg_rating desc, title asc limit 1 )c
SELECT t.name results FROM ( SELECT u.name, COUNT(rating) cnt FROM Movie_Rating r JOIN Users u ON r.user_id = u.user_id GROUP BY u.name ORDER BY cnt DESC, u.name ASC LIMIT 1 ) t UNION ALL SELECT title FROM (SELECT title, AVG (rating) ag FROM Movie_Rating r JOIN Movies m ON r.movie_id = m.movie_id AND LEFT(r.created_at,7) = '2020-02' GROUP BY title ORDER BY ag DESC, title ASC LIMIT 1 ) t2
SELECT temp.name as results FROM (SELECT u.user_id, u.name, COUNT(m.rating) as cnt FROM Movie_Rating m JOIN Users u ON u.user_id=m.user_id GROUP BY 1 ORDER BY cnt DESC, u.name ASC LIMIT 1) temp UNION SELECT temp.title FROM (SELECT m.movie_id, m.title, AVG(r.rating) as average_rating FROM Movie_Rating r RIGHT JOIN Movies m ON m.movie_id=r.movie_id WHERE year(created_at) = 2020 AND month(created_at) = 2 GROUP BY 1 ORDER BY average_rating DESC, m.title ASC LIMIT 1)temp
SELECT temp.name as results FROM (SELECT u.user_id, u.name, COUNT(m.rating) as cnt FROM Movie_Rating m LEFT JOIN Users u ON u.user_id=m.user_id GROUP BY 1 ORDER BY cnt DESC, u.name ASC LIMIT 1) temp UNION SELECT temp.title FROM (SELECT m.movie_id, m.title, AVG(r.rating) as average_rating FROM Movie_Rating r RIGHT JOIN Movies m ON m.movie_id=r.movie_id WHERE YEAR(created_at) = 2020 AND MONTH(created_at) = 02 GROUP BY 1 ORDER BY average_rating DESC, m.title ASC LIMIT 1)temp
SELECT user_name as results FROM ( SELECT b.name as user_name, COUNT(*) as counts FROM Movie_rating as a JOIN Users as b ON a.user_id = b.user_id GROUP BY a.user_id ORDER BY counts DESC,user_name ASC LIMIT 1 ) first_query UNION SELECT movie_name as results FROM ( SELECT d.title as movie_name, AVG(c.rating) as grade FROM Movie_rating as c JOIN Movies as d ON c.movie_id = d.movie_id WHERE SUBSTR(c.created_at,1,7)="2020-02" GROUP BY c.movie_id ORDER BY grade DESC,movie_name ASC LIMIT 1 ) second_query
SELECT user_name as results FROM ( SELECT b.name as user_name,COUNT(*) as counts FROM Movie_rating as a JOIN Users as b ON a.user_id=b.user_id GROUP BY a.user_id ORDER BY counts DESC,user_name ASC LIMIT 1 ) first_query UNION SELECT movie_name as results FROM ( SELECT d.title as movie_name,AVG(c.rating) as grade FROM Movie_rating as c JOIN Movies as d ON c.movie_id=d.movie_id WHERE SUBSTR(c.created_at,1,7)="2020-02" GROUP BY c.movie_id ORDER BY grade DESC,movie_name ASC LIMIT 1 ) second_query
SELECT user_name as results FROM ( SELECT b.name as user_name,COUNT(*) as counts FROM Movie_rating as a JOIN Users as b ON a.user_id=b.user_id GROUP BY a.user_id ORDER BY counts DESC,user_name ASC LIMIT 1 ) first_query UNION SELECT movie_name as results FROM ( SELECT d.title as movie_name,AVG(c.rating) as grade FROM Movie_rating as c JOIN Movies as d ON c.movie_id=d.movie_id WHERE left(c.created_at,7)="2020-02" GROUP BY c.movie_id ORDER BY grade DESC,movie_name ASC LIMIT 1 ) second_query
SELECT user_name as results FROM (select u.name user_name, count(*) counts from Movie_Rating as m INNER JOIN Users as u on m.user_id=u.user_id group by u.name order by counts desc, u.name limit 1) as first UNION select title as results FROM (select title, avg(rating) as avgrating from Movie_rating as m join movies as mo on m.movie_id=mo.movie_id where Year(created_at)='2020' and Month(created_at)='2' group by title order by avgrating desc, title limit 1) as second
Select Z.results From (Select X.name AS results From (Select a.name,b.user_id,count(b.movie_id) as count from Users a inner join Movie_Rating b on a.user_id = b.user_id GROUP BY a.name,b.user_id ORDER BY count DESC,a.name ASC limit 1) X UNION Select Y.title AS results From (Select c.title,d.movie_id ,AVG(d.rating) as average from Movies c inner join Movie_Rating d on c.movie_id = d.movie_id WHERE MONTH(created_at) = 2 GROUP BY c.title,d.movie_id ORDER BY average DESC,c.title ASC limit 1) Y) Z
Select name as results from (Select u.name, count(r.movie_id) from users u join movie_rating r on u.user_id = r.user_id group by r.user_id order by 2 Desc,1 Asc limit 1) a Union all Select title as results from (Select title from (Select m.title, avg(r.rating) as rating, date_format(created_at, "%Y-%m") as month from movies m join movie_rating r on m.movie_id = r.movie_id group by r.movie_id, 3 order by 2 Desc,1 Asc) b where month="2020-02" limit 1) c
WITH CTE AS ( SELECT U.NAME FROM Users U JOIN Movie_Rating M ON U.USER_ID=M.USER_ID GROUP BY M.USER_ID having COUNT(M.MOVIE_ID) ORDER BY COUNT(M.MOVIE_ID) desc, U.NAME LIMIT 1), CTE2 AS ( SELECT MV.TITLE,AVG(M.RATING) FROM MOVIES MV JOIN Movie_Rating M ON MV.movie_id =M.movie_id where month(M.created_at)=2 and year(M.created_at)=2020 GROUP BY M.MOVIE_ID ORDER BY 2 desc, 1 limit 1 ) select NAME as results from cte union select title as results from cte2
WITH CTE1 AS ( SELECT X.NAME AS RESULTS FROM ( SELECT U.NAME, COUNT(MOVIE_ID), RANK() OVER (ORDER BY COUNT(MOVIE_ID) desc, U.NAME ASC) AS RNK FROM MOVIE_RATING M JOIN USERS U ON (M.USER_ID = U.USER_ID) group by 1 )X WHERE X.RNK = 1 order by x.name asc LIMIT 1 ), CTE2 AS ( SELECT X.TITLE AS RESULTS FROM ( SELECT M1.TITLE, avg(m.rating) AS AVG_RATING FROM MOVIE_RATING M JOIN MOVIES M1 ON (M.MOVIE_ID = M1.MOVIE_ID) WHERE m.created_at between '2020-02-01' and '2020-02-29' GROUP BY 1 ORDER BY 2 DESC, 1 asc )X LIMIT 1 ) SELECT * FROM CTE1 UNION SELECT * FROM CTE2
WITH CTE1 AS (SELECT movie_id, AVG(rating) as average FROM movie_rating WHERE DATE_FORMAT(created_at, '%Y-%m')='2020-02' GROUP BY movie_id), CTE2 AS (SELECT title FROM CTE1 a JOIN movies b ON a.movie_id=b.movie_id ORDER BY average desc, title LIMIT 1), CTE3 AS (SELECT name FROM movie_rating a JOIN users b ON a.user_id=b.user_id GROUP BY b.user_id ORDER BY COUNT(*) DESC, name LIMIT 1) SELECT name as results FROM CTE3 UNION SELECT title FROM CTE2
WITH CTE_1 AS ( SELECT M.MOVIE_ID, TITLE, AVG(RATING) AVG_RATING, RANK() OVER (ORDER BY AVG(RATING), TITLE DESC) RANK_NUM FROM MOVIES M, MOVIE_RATING R WHERE M.MOVIE_ID = R.MOVIE_ID AND MONTH(CREATED_AT) = '02' GROUP BY MOVIE_ID, TITLE ) ,CTE_2 AS ( SELECT TITLE, AVG_RATING, RANK_NUM FROM CTE_1 WHERE AVG_RATING = ( SELECT MAX(AVG_RATING) FROM CTE_1 ) ORDER BY RANK_NUM DESC LIMIT 1 ) ,CTE_3 AS ( SELECT NAME, R.USER_ID, COUNT(R.USER_ID) USER_COUNT, RANK() OVER (ORDER BY COUNT(R.USER_ID) DESC, NAME ASC) RANK_NUM FROM USERS U, MOVIE_RATING R WHERE U.USER_ID = R.USER_ID GROUP BY NAME, R.USER_ID ) ,CTE_4 AS ( SELECT NAME, USER_ID, RANK_NUM FROM CTE_3 WHERE USER_COUNT = ( SELECT MAX(USER_COUNT) FROM CTE_3 ) ORDER BY RANK_NUM LIMIT 1 ) SELECT NAME RESULTS FROM CTE_4 UNION SELECT TITLE RESULTS FROM CTE_2
WITH CTE_USER AS ( Select M.user_id,U.name user_name, count(movie_id) as usercount from Movie_Rating M JOIN Users U on M.user_id = U.user_id group by M.user_id order by usercount desc,user_name asc limit 1 ), CTE_RATING AS ( Select Title, AVG(rating) from Movie_Rating MR join Movies M on MR.movie_id = M.movie_id where month(created_at) = 02 group by MR.movie_id order by 2 desc,1 limit 1 ) Select user_name as results from CTE_USER UNION Select Title as results from CTE_RATING
WITH MovieCritic AS (SELECT user_id ,RANK() OVER(ORDER BY COUNT(movie_id) DESC) AS Rk FROM Movie_Rating GROUP BY user_id), GreatestMovie AS (SELECT movie_id ,RANK() OVER(ORDER BY AVG(rating) DESC) AS Rk FROM Movie_Rating WHERE MONTH(created_at) = 2 AND YEAR(created_at) = 2020 GROUP BY movie_id) SELECT MIN(name) AS results FROM Users U INNER JOIN MovieCritic MC ON MC.user_id = U.user_id AND Rk = 1 UNION ALL SELECT MIN(title) FROM Movies M INNER JOIN GreatestMovie GM ON GM.movie_id = M.movie_id AND Rk = 1
WITH UserRanking AS (SELECT user_id ,RANK() OVER(ORDER BY COUNT(movie_id) DESC) AS Rk FROM Movie_Rating GROUP BY user_id), MovieRanking AS (SELECT movie_id ,RANK() OVER(ORDER BY AVG(rating) DESC) AS Rk FROM Movie_Rating WHERE YEAR(created_at) = 2020 AND MONTH(created_at) = 2 GROUP BY movie_id) SELECT MIN(U.name) AS results FROM Users U INNER JOIN UserRanking UR ON UR.user_id = U.user_id AND Rk = 1 UNION ALL SELECT MIN(M.title) FROM Movies M INNER JOIN MovieRanking MR ON M.movie_id = MR.movie_id AND Rk = 1
WITH cte AS ( SELECT m.title, u.name, r.rating, r.created_at FROM Movie_rating r LEFT JOIN Movies m ON r.movie_id = m.movie_id LEFT JOIN Users u ON r.user_id = u.user_id), cte2 AS ( SELECT name, COUNT(rating) r_count FROM cte GROUP BY name), cte3 AS ( SELECT title, AVG(rating) r_avg FROM cte WHERE MONTH(created_at) = 2 GROUP BY title ) (SELECT name AS results FROM cte2 ORDER BY r_count DESC, name LIMIT 1 ) UNION ALL (SELECT title As results FROM cte3 ORDER BY r_avg DESC, title LIMIT 1 )
WITH cte1 AS ( SELECT u.name, COUNT(*) cnt FROM Users u JOIN Movie_Rating mr ON u.user_id = mr.user_id GROUP BY 1 ORDER BY 2 DESC, 1 ASC LIMIT 1 ), cte2 AS ( SELECT title, AVG(rating) rating FROM Movies m JOIN Movie_Rating mr ON m.movie_id = mr.movie_id WHERE LEFT(created_at, 7) = '2020-02' GROUP BY 1 ORDER BY 2 DESC, title ASC LIMIT 1 ) SELECT name results FROM cte1 UNION SELECT title FROM cte2
WITH cte1 AS (SELECT user_id,COUNT(user_id) AS ct FROM Movie_Rating GROUP BY user_id ORDER BY ct DESC), cte2 AS(SELECT *,AVG(rating) AS rt FROM Movie_Rating WHERE MONTH(created_at)=2 GROUP BY movie_id ORDER BY rt DESC) (SELECT name AS results FROM Users JOIN cte1 USING(user_id) ORDER BY ct DESC,name ASC LIMIT 1) UNION (SELECT m.title FROM cte2 JOIN Movies m USING(movie_id) ORDER BY rt DESC,title ASC LIMIT 1)
WITH cte1 AS (SELECT user_id,COUNT(user_id) AS ct FROM Movie_Rating GROUP BY user_id), cte2 AS(SELECT *,AVG(rating) AS rt FROM Movie_Rating WHERE MONTH(created_at)=2 GROUP BY movie_id) (SELECT name AS results FROM Users JOIN cte1 USING(user_id) ORDER BY ct DESC,name ASC LIMIT 1) UNION (SELECT m.title FROM cte2 JOIN Movies m USING(movie_id) ORDER BY rt DESC,title ASC LIMIT 1)
WITH high_user as ( select u.name as results from Movie_Rating as m join Users as u on m.user_id = u.user_id group by u.name order by count(m.rating) desc, u.name limit 1 ), high_movie as ( select m.title as results from Movie_Rating as mr join Movies as m on mr.movie_id = m.movie_id where extract(year_month from mr.created_at) = '202002' group by m.title order by avg(mr.rating) desc, m.title limit 1 ) select results from high_user union all select results from high_movie
WITH highest_user AS ( SELECT u.name AS results FROM Users u JOIN Movie_Rating m ON u.user_id = m.user_id GROUP BY 1 ORDER BY COUNT(rating) DESC, results LIMIT 1 ), highest_rating AS ( SELECT m.title AS results FROM Movies m JOIN Movie_Rating mr ON m.movie_id = mr.movie_id WHERE DATE_FORMAT(mr.created_at, "%Y-%m") = "2020-02" GROUP BY 1 ORDER BY AVG(rating) DESC, results LIMIT 1 ) SELECT results FROM highest_user UNION ALL SELECT results FROM highest_rating
WITH mo AS ( SELECT m.title AS results FROM movie_rating AS mr JOIN movies AS m ON mr.movie_id = m.movie_id AND DATE_FORMAT(mr.created_at, '%Y-%m') = '2020-02' GROUP BY mr.movie_id ORDER BY AVG(mr.rating) DESC, m.title ASC LIMIT 1 ), us AS ( SELECT u.name AS results FROM movie_rating AS mr JOIN users AS u ON mr.user_id = u.user_id GROUP BY u.user_id ORDER BY COUNT(DISTINCT mr.movie_id) DESC, u.name ASC LIMIT 1 ) SELECT results FROM us UNION ALL SELECT results FROM mo
WITH movie_title AS (SELECT m.title AS results, avg(mr.rating) AS metric FROM movie_rating AS mr LEFT JOIN movies AS m ON mr.movie_id = m.movie_id WHERE created_at BETWEEN '2020-02-01' AND '2020-02-28' GROUP BY 1 ORDER BY 2 DESC, 1 LIMIT 1) , user_title AS ( SELECT u.name AS results, COUNT(mr.rating) AS metric FROM movie_rating AS mr LEFT JOIN users AS u ON mr.user_id = u.user_id GROUP BY 1 ORDER BY 2 DESC, 1 LIMIT 1 ) SELECT results FROM movie_title UNION SELECT results FROM user_title
WITH num_ratings_by_user AS ( SELECT user_id, COUNT(*) as num_ratings FROM movie_rating GROUP BY user_id ), avg_ratings AS ( SELECT movie_id, AVG(rating) as avg_rating FROM movie_rating WHERE YEAR(created_at) = 2020 AND MONTH(created_at) = 2 GROUP BY movie_id ) ( SELECT name AS results FROM num_ratings_by_user z LEFT JOIN users u ON z.user_id = u.user_id WHERE num_ratings = (SELECT MAX(num_ratings) FROM num_ratings_by_user) ORDER BY name LIMIT 1 ) UNION ALL ( SELECT title AS results FROM avg_ratings zz LEFT JOIN movies m ON zz.movie_id = m.movie_id WHERE avg_rating = (SELECT MAX(avg_rating) FROM avg_ratings) ORDER BY title LIMIT 1 )
WITH q1 AS ( SELECT u.name FROM Users u JOIN Movie_Rating m ON u.user_id = m.user_id GROUP BY u.name ORDER BY COUNT(*) DESC, u.name ASC LIMIT 1 ), q2 AS ( SELECT n.title FROM Movies n JOIN Movie_Rating m ON n.movie_id = m.movie_id WHERE created_at BETWEEN '2020-02-01' AND '2020-02-29' GROUP BY n.title ORDER BY AVG(m.rating) DESC, n.title ASC LIMIT 1 ) SELECT name results from q1 UNION ALL SELECT title results FROM q2
WITH query1 AS (SELECT U.name FROM (SELECT user_id, count(*) as movie_count FROM Movie_Rating GROUP BY user_id) a LEFT JOIN Users U ON a.user_id = U.user_id ORDER BY a.movie_count desc, U.name LIMIT 1), query2 as (SELECT M.title FROM (SELECT movie_id, avg(rating) as avg_rating FROM Movie_Rating WHERE date_format(created_at, '%y-%m') = '20-02' GROUP BY movie_id) b LEFT JOIN Movies M ON b.movie_id = M.movie_id ORDER BY b.avg_rating desc, M.title LIMIT 1) SELECT name as results FROM query1 UNION SELECT title as results FROM query2
WITH r1 AS ( SELECT u.name as results FROM Users as u INNER JOIN Movie_Rating as mr ON (mr.user_id = u.user_id) GROUP BY u.user_id ORDER BY COUNT(DISTINCT movie_id) DESC, u.name LIMIT 1 ), r2 AS ( SELECT m.title as results FROM Movies as m INNER JOIN Movie_Rating as mr ON (mr.movie_id = m.movie_id) WHERE MONTH(mr.created_at) = 2 AND YEAR(mr.created_at) = 2020 GROUP BY m.movie_id ORDER BY AVG(rating) DESC, m.title LIMIT 1 ) SELECT * FROM r1 UNION SELECT * FROM r2
WITH rated AS ( SELECT u.name, COUNT(*) as cnt FROM movie_rating as m INNER JOIN users as u ON m.user_id = u.user_id GROUP BY u.name ORDER BY cnt DESC, u.name LIMIT 1), highest_avg AS ( SELECT m.title, AVG(rating) as avg_rating FROM movie_rating as r INNER JOIN movies as m ON m.movie_id = r.movie_id WHERE DATE_FORMAT(created_at, '%Y-%m') = '2020-02' GROUP BY m.title ORDER BY avg_rating DESC, m.title LIMIT 1 ) SELECT name as results FROM rated UNION ALL SELECT title as results FROM highest_avg
WITH rating_movie AS ( SELECT m.title, AVG(r.rating) OVER (PARTITION BY r.movie_id) AS avg_movie_rate FROM Movie_Rating r LEFT JOIN Movies m ON m.movie_id = r.movie_id WHERE created_at BETWEEN '2020-02-01' AND '2020-02-29'), user_rating AS ( SELECT u.name, u.user_id, COUNT(movie_id) as movie_rate_num FROM Movie_Rating r LEFT JOIN Users u ON u.user_id = r.user_id GROUP BY u.user_id) (SELECT title AS results FROM rating_movie ORDER BY avg_movie_rate DESC, title ASC LIMIT 1) UNION (SELECT name as results FROM user_rating ORDER BY movie_rate_num DESC, name ASC LIMIT 1)
WITH t AS ( SELECT title, MAX(AVG(mr.rating)) OVER(PARTITION BY mr.movie_id) avg_rating FROM Movie_Rating mr LEFT JOIN Movies m ON mr.movie_id = m.movie_id WHERE DATE_FORMAT(created_at, '%Y-%m') = '2020-02' GROUP BY 1 ) (SELECT title results FROM t WHERE avg_rating IN (SELECT MAX(avg_rating) FROM t) ORDER BY title LIMIT 1) UNION ( SELECT name results FROM Movie_Rating mr2 LEFT JOIN Users u ON u.user_id = mr2.user_id GROUP BY 1 ORDER BY COUNT(movie_id) DESC, name LIMIT 1 )
WITH t AS (SELECT title, RANK() OVER(ORDER BY AVG(rating) DESC,title) rk FROM Movie_Rating JOIN Movies ON Movies.movie_id = Movie_Rating.movie_id WHERE LEFT(created_at,7) = '2020-02' GROUP BY Movie_Rating.movie_id), t1 AS(SELECT name, RANK() OVER(ORDER BY COUNT(movie_id) DESC,name) rk FROM Movie_Rating JOIN Users ON Users.user_id = Movie_Rating.user_id GROUP BY Movie_Rating.user_id) SELECT name AS results FROM t1 WHERE rk = 1 UNION SELECT title AS results FROM t WHERE rk = 1
WITH t1 AS ( SELECT b.name AS results FROM Movie_Rating a JOIN Users b ON a.user_id = b.user_id GROUP BY a.user_id ORDER BY COUNT(a.movie_id) DESC, b.name LIMIT 1 ), t2 AS ( SELECT b.title AS results FROM Movie_Rating a JOIN Movies b ON a.movie_id = b.movie_id WHERE year(created_at) = 2020 AND month(created_at) = 2 GROUP BY a.movie_id ORDER BY AVG(a.rating) DESC, b.title LIMIT 1 ) SELECT * FROM t1 UNION ALL select * FROM t2
WITH t1 AS (SELECT name, RANK() OVER (ORDER BY COUNT(DISTINCT movie_id) DESC, name) AS rnk FROM Movie_Rating JOIN Users USING (user_id) GROUP BY user_id), t2 AS (SELECT title, RANK() OVER (ORDER BY AVG(rating) DESC, title) AS rnk FROM Movies JOIN Movie_Rating USING (movie_id) WHERE LEFT(created_at, 7) = '2020-02' GROUP BY title) SELECT name AS results FROM t1 WHERE t1.rnk = 1 UNION SELECT title As results FROM t2 WHERE t2.rnk = 1
WITH t1 AS( SELECT u.name AS resultS FROM Movie_Rating m LEFT JOIN Users u ON m.user_id = u.user_id GROUP BY u.name ORDER BY COUNT(*) DESC, u.name LIMIT 1 ), t2 AS ( SELECT m2.title AS resultS FROM Movie_Rating m1 LEFT JOIN Movies m2 ON m1.movie_id = m2.movie_id WHERE created_at BETWEEN '2020-02-01' AND '2020-02-29' GROUP BY m1.movie_id ORDER BY AVG(rating) DESC, m2.title LIMIT 1 ) SELECT results FROM t1 UNION ALL SELECT results FROM t2
WITH table1 AS( SELECT m.user_id, u.name, COUNT(m.user_id) AS cnt FROM Movie_Rating m INNER JOIN Users u USING(user_id) GROUP BY user_id ), table2 AS( SELECT *, RANK() OVER(ORDER BY cnt DESC, name ASC) AS rk_user FROM table1 ), table1b AS( SELECT b.title, AVG(m.rating) AS av FROM Movie_Rating m INNER JOIN Movies b USING(movie_id) WHERE EXTRACT(MONTH FROM created_at) = 2 GROUP BY movie_id ), table2b AS( SELECT *, RANK() OVER(ORDER BY av DESC, title ASC) AS rk_movie FROM table1b ) SELECT name AS results FROM table2 WHERE rk_user=1 UNION ALL SELECT title FROM table2b WHERE rk_movie=1
WITH temp1 AS ( SELECT m.user_id, u.name, COUNT(*) AS cnt FROM Movie_Rating m LEFT JOIN Users u ON m.user_id = u.user_id GROUP BY m.user_id ORDER BY cnt DESC, name ASC LIMIT 1 ), temp2 AS ( SELECT m.movie_id, AVG(m.rating) AS rate, Movies.title FROM Movie_Rating m LEFT JOIN Movies ON m.movie_id = Movies.movie_id WHERE DATE_FORMAT(m.created_at, '%Y-%m') = '2020-02' GROUP BY m.movie_id ORDER BY rate DESC, title ASC LIMIT 1 ) SELECT name AS results FROM temp1 UNION ALL SELECT title FROM temp2
WITH u AS ( SELECT name, count(1) FROM Users JOIN Movie_Rating ON Users.user_id = Movie_Rating.user_id GROUP BY 1 ORDER BY 2 DESC , 1 ASC LIMIT 1 ), ratings AS ( SELECT title, avg(rating) FROM Movie_Rating JOIN Movies ON Movies.movie_id = Movie_Rating.movie_id WHERE MONTH(created_at) = 2 GROUP BY 1 ORDER BY 2 DESC, 1 ASC LIMIT 1 ) SELECT name as results FROM u UNION SELECT title as results FROM ratings
WITH user AS(SELECT u.name AS results FROM Users u RIGHT JOIN Movie_Rating m ON u.user_id = m.user_id GROUP BY m.user_id HAVING COUNT(*) ORDER BY COUNT(*) DESC, results LIMIT 1), title AS(SELECT mv.title AS tl FROM Movies mv RIGHT JOIN Movie_rating m ON mv.movie_id = m.movie_id WHERE MONTH(m.created_at) = 2 GROUP BY m.movie_id HAVING AVG(m.rating) ORDER BY AVG(m.rating) DESC, tl LIMIT 1) SELECT results FROM user UNION SELECT tl AS results FROM title
WITH user_rate AS ( SELECT name AS results FROM Users u LEFT JOIN ( SELECT user_id , COUNT(movie_id) AS cnt FROM Movie_Rating GROUP BY user_id ) t ON u.user_id = t.user_id ORDER BY cnt DESC , name ASC LIMIT 1 ) , movie_rate AS ( SELECT title as results FROM Movies m LEFT JOIN ( SELECT movie_id, DATE_FORMAT(created_at,'%Y-%m') as dmonth, AVG(rating) AS rating from Movie_Rating GROUP BY movie_id, dmonth ) v ON m.movie_id = v.movie_id where dmonth = '2020-02' ORDER BY rating DESC, title ASC LIMIT 1 ) SELECT * FROM ( SELECT * FROM user_rate UNION ALL SELECT * FROM movie_rate ) s
from users u join (select user_id, count(rating) as cnt from movie_rating group by user_id) m using (user_id) order by m.cnt desc, u.name limit 1), r2 as (select m.title as results from movies m join (select movie_id, avg(rating) as rt from movie_rating where date_format(created_at, '%Y-%m')='2020-02' group by movie_id) r using (movie_id) order by r.rt desc, m.title limit 1) select * from r1 union all select * from r2
select * from ( (select name as results from users u join movie_rating m on u.user_id = m.user_id group by m.user_id order by count(*) desc, name limit 1) union all (select title as results from movies mv join movie_rating m on mv.movie_id = m.movie_id where month(created_at) = 2 and year(created_at) = 2020 group by m.movie_id order by avg(rating) desc, title limit 1 ) ) a
select * from ( select name as results from users u join (select user_id, count(movie_id) as count from movie_rating group by user_id) a on a.user_id = u.user_id order by a.count desc, name asc limit 1) c union all select * from ( select title as results from movies m join (select movie_id, avg(rating) as avge from movie_rating where left(created_at, 7) = '2020-02' group by movie_id) b on b.movie_id = m.movie_id order by b.avge desc, m.title asc limit 1) d
select * from ( select u.name as results from Movie_Rating mr inner join Users u on mr.user_id = u.user_id group by 1 order by count(distinct movie_id) desc, 1 limit 1)y union all select * from ( select m.title as results from Movie_Rating mr inner join Movies m on mr.movie_id = m.movie_id where substring(created_at, 1, 7) = '2020-02' group by 1 order by avg(rating) desc, 1 limit 1)x
select * from ( select u.name as results from Users u inner join Movie_Rating mr on u.user_id = mr.user_id group by 1 order by count(distinct movie_id) desc limit 1 ) x union all select * from ( select m.title as results from Movies m inner join Movie_Rating mr on m.movie_id = mr.movie_id where substring(created_at, 1, 7) = '2020-02' group by 1 order by avg(rating) desc , 1 limit 1 ) x
select * from (select u.name as results from Users as u join Movie_Rating as r on u.user_id = r.user_id group by u.user_id order by count(*) desc, u.name limit 1)t1 union select title as results from (select m.title from Movies as m join Movie_Rating as r on r.movie_id = m.movie_id where r.created_at between date('2020-2-1') and date('2020-2-29') group by r.movie_id order by avg(r.rating) desc, m.title limit 1)t2
select * from( select name as results from movie_rating a inner join users b on a.user_id=b.user_id group by a.user_id order by count(movie_id) desc, name limit 1) t1 union select * from( select title as results from movie_rating a inner join movies b on a.movie_id=b.movie_id where left(created_at,7) = '2020-02' group by 1 order by avg(rating) desc, title limit 1) t2
select distinct u1.name as results from users u1 inner join (select u.name, count(movie_id) from users u left join movie_rating m1 on u.user_id = m1.user_id group by m1.user_id order by count(m1.movie_id) desc,u.name asc limit 1) temp on temp.name = u1.name union select distinct m1.title as results from movies m1 inner join (select m.title, avg(mr.rating) from movies m left join movie_rating mr on m.movie_id = mr.movie_id where created_at like '2020-02%' group by m.movie_id order by avg(mr.rating) desc,m.title asc limit 1) temp2 on temp2.title = m1.title
select min(name) as results from(select m.user_id,u.name, dense_rank() over (order by count(distinct m.movie_id) desc) as rnk from movie_rating as m inner join users as u on m.user_id = u.user_id group by 1,2)t where rnk = 1 union select min(title) as results from(select m.movie_id,m.title, dense_rank()over(order by avg(rating) desc) as rnk from movie_rating as r inner join movies as m on m.movie_id = r.movie_id where left(created_at,7) = '2020-02' group by 1,2)tt where rnk = 1
select name 'results' from (select name, dense_rank() over(order by num desc, name) 'rk' from (select u.name, count(movie_id) 'num' from users u, movie_rating m where u.user_id = m.user_id group by u.user_id)a)b where b.rk=1 union select title 'results' from (select title, dense_rank() over(order by score desc, title) 'rk' from (select m.title, avg(rating) 'score' from (select * from movie_rating where created_at like '2020-02%')c, movies m where c.movie_id=m.movie_id group by c.movie_id)tt) ff where ff.rk=1
select name as results from ( select m.user_id, u.name, count(distinct m.movie_id) as total_rate from movie_rating m left join users u on m.user_id=u.user_id group by m.user_id order by total_rate desc, name asc limit 1 ) t1 UNION select title as results from ( select m.movie_id, m.title, avg(r.rating) as avg_rating from movies m left join movie_rating r on m.movie_id=r.movie_id where substring(r.created_at,1,7)='2020-02' group by m.movie_id order by avg_rating desc, title asc limit 1 ) t2
select name as results from ( select name , count(distinct movie_id) as x from movie_rating a left join users u on a.user_id = u.user_id group by 1 order by 2 desc, 1 asc limit 1 ) o union all select title as results from ( select title, avg(rating) as y from movie_rating m left join movies b on m.movie_id = b.movie_id where month(created_at) = '2' group by 1 order by 2 desc, 1 asc limit 1 ) p
select name as results from ( select name, count(distinct movie_id) as r from movie_rating a left join users b on a.user_id = b.user_id group by 1 order by 2 desc, 1 asc limit 1) z union select title as results from ( select title, avg(rating) as r from movie_rating a left join movies b on a.movie_id = b.movie_id where created_at between '2020-02-01' and '2020-02-29' group by 1 order by 2 desc, 1 asc limit 1 ) y
select name as results from ( select name, count(distinct movie_id) from movie_rating m join users u on m.user_id = u.user_id group by m.user_id order by 2 desc, 1 limit 1 ) sub union select title as results from ( select r.movie_id, title, avg(rating) from (select * from movie_rating where date_format(created_at,"%Y-%m") = "2020-02" ) r join movies m on r.movie_id = m.movie_id group by movie_id order by avg(rating) desc, title limit 1 ) sub
select name as results from ( select name, rank() over (order by num_reviews desc, name asc) as rnk from ( select m.user_id, name, count(*) as num_reviews from Movie_Rating m left join Users u on u.user_id = m.user_id group by 1,2 )h )p where rnk = 1 UNION select title from ( select title, rank() over (order by rr desc, title) as rnk from ( select mr.movie_id, title, avg(rating) rr from Movie_Rating mr left join Movies m on m.movie_id = mr.movie_id where mr.created_at BETWEEN '2020-02-01' and '2020-02-29' group by 1,2 ) h )p where rnk = 1
select name as results from ( select u.name, Count(*) as a from Users u inner join Movie_Rating mr on u.user_id = mr.user_id group by u.user_id order by a desc, u.name limit 1 ) r1 Union select title as results from ( select m.title, AVG(rating) as av from Movies m inner join Movie_Rating mr on m.movie_id = mr.movie_id where created_at like '%-02-%' group by m.movie_id order by av desc, title limit 1 ) r2
select name as results from ( select u.name, dense_rank() over(order by count(m.rating) desc,u.name) as DR from users u join movie_rating m on m.user_id = u.user_id group by m.user_id )usr where DR = 1 union all select title as results from ( select mo.title, dense_rank() over (order by avg(m.rating) desc,mo.title) as DR from movies mo join Movie_Rating m on mo.movie_id = m.movie_id where substr(created_at,1,7) = '2020-02' group by m.movie_id )mov where DR = 1
select name as results from ((select name from movie_rating a join users b on a.user_id = b.user_id group by a.user_id order by count(movie_id) desc, name asc limit 1) union all (select title from movie_rating a join movies b on a.movie_id = b.movie_id where month(created_at) = 2 group by a.movie_id order by sum(rating)/count(rating) desc, title asc limit 1)) b
select name as results from (select name , count(distinct movie_id)as numberOfMovie from Users u left join Movie_Rating mv on u.user_id = mv.user_id group by u.user_id order by 2 desc, 1 asc limit 1 ) as t1 union select title as results from (select title, m.movie_id, avg(rating) as avg_rating from Movie_Rating join Movies m on Movie_Rating.movie_id = m.movie_id where year(created_at) = 2020 and month(created_at) = 2 group by 1 order by avg(rating) desc,title asc limit 1 ) as t2
select name as results from (select name, count(distinct movie_id) as total_rated_by_user from movie_rating join users using(user_id) group by user_id order by 2 desc, 1 limit 1) t union select title as results from (select title, avg(rating) as avg_rating from movie_rating join movies using(movie_id) where extract(year_month from created_at) = '202002' group by movie_id order by 2 desc, 1 limit 1) t
select name as results from (select name, count(movie_id) as num from users u left join Movie_Rating m on u.user_id=m.user_id group by 1 order by num desc, name asc limit 1) as t union select title from (select title, avg(rating) as score from movies m left join movie_rating r on m.movie_id = r.movie_id where month(created_at) = 2 group by 1 order by 2 desc, 1 asc limit 1) as t1
select name as results from (select name, count(movie_id) num from Movie_rating join Users on Movie_rating.user_id = Users.user_id group by name order by num desc,name limit 1) t union all select title as results from( select title, avg(rating) rate from Movie_Rating join Movies on Movie_rating.movie_id=Movies.movie_id where month(created_at)=2 group by title order by rate desc,title limit 1 ) t1
select name as results from (select u.name as name from Users u JOIN Movie_rating mr ON u.user_id = mr.user_id group by u.user_id order by count(mr.movie_id) desc, u.name asc limit 1) t1 UNION select title as results from ( select m.title from Movies m JOIN Movie_rating mr ON m.movie_id = mr.movie_id where LEFT(mr.created_at, 7) = '2020-02' group by m.movie_id order by avg(mr.rating) desc, m.title asc limit 1 ) t2
select name as results from (select u.name as name, count(*) as counts from movie_rating mr join users u on mr.user_id=u.user_id group by u.user_id order by 2 DESC, 1 ASC limit 1)a union select name as results from (select m.title as name, avg(mr.rating) as rating from Movie_Rating mr join movies m on mr.movie_id=m.movie_id where left(created_at,7)='2020-02' group by m.title order by 2 DESC, 1 ASC limit 1)b
select name as results from (select u.name, rank() over( order by count(*) desc, u.name) as r from users u join movie_rating r on u.user_id = r.user_id group by u.name )x where r = 1 union select title from (select m.title, rank() over(order by avg(rating) desc, m.title) as r from movies m join movie_rating r on m.movie_id = r.movie_id where month(created_at)=02 and year(created_at)=2020 group by m.title)x where r = 1
select name as results from Users where user_id = ( select mr.user_id from Movie_Rating mr join Users u on mr.user_id = u.user_id group by mr.user_id order by count(distinct movie_id) desc, u.name limit 1 ) union ( select title as results from Movies where movie_id = ( select mr.movie_id from Movie_Rating mr join Movies m on m.movie_id = mr.movie_id and left(mr.created_at, 7) = '2020-02' group by mr.movie_id order by avg(rating) desc, m.title limit 1 ) )
select name as results from Users where user_id= (select m.user_id from Movie_Rating m join Users u on m.user_id=u.user_id group by m.user_id order by count(0) desc,u.name limit 1) union select title from Movies where movie_id= (select m1.movie_id from Movie_Rating m1 join Movies m2 on m1.movie_id=m2.movie_id where created_at between date('2020-02-01') and date('2020-02-29') group by m1.movie_id order by avg(rating) desc,title limit 1)
select name results from ( select m.user_id, u.name, count(m.user_id) as no_of_movies_rated from Movie_Rating m inner join Users u on m.user_id=u.user_id group by user_id order by no_of_movies_rated desc ,u.name limit 1) as t1 union select title results from (select title,avg(rating) as avg_rating from Movie_Rating mr inner join Movies m on m.movie_id=mr.movie_id where date_format(created_at,"%Y-%m")="2020-02" group by mr.movie_id order by avg_rating desc,title limit 1) as t2
select name results from ( select name, count(movie_id) no_movie_rated from users u join movie_rating mr on u.user_id = mr.user_id group by 1 order by 2 desc, 1 limit 1 )t1 union select title results from (select title, avg(rating) avg_rating from movies m join movie_rating mr on m.movie_id = mr.movie_id where left(created_at,7) = '2020-02' group by 1 order by 2 desc, 1 limit 1 )t2
select name results from ( select name, u.user_id, count(rating) cnt from users u left join movie_rating mr on u.user_id = mr.user_id group by name, user_id order by cnt desc, name limit 1) f union select title results from ( select title, m.movie_id, avg(rating) avgr from movies m left join movie_rating mr on m.movie_id = mr.movie_id where left(created_at,7) = '2020-02' group by title, movie_id order by avgr desc, title limit 1) f2
select name results from (select *, rank() over (order by num_rating desc, name ) rk from (select name,count(movie_id) as num_rating from Movie_Rating r join Users u on r.user_id=u.user_id group by 1) t1 ) t2 where rk=1 union select title results from (select *, rank() over (order by avg_rating desc, title ) rk from (select title,avg(rating) as avg_rating from Movie_Rating r join Movies m on r.movie_id=m.movie_id where year(created_at)=2020 and month(created_at)=2 group by 1) t3 ) t4 where rk=1
select name results from (select name,count(movie_id) from movie_rating m join users u on m.user_id = u.user_id group by 1 order by 2 desc , 1 limit 1)a union all select title from (select title,avg(rating) from movie_rating mr join movies m on m.movie_id = mr.movie_id where substr(created_at,1,7) = '2020-02' group by 1 order by 2 desc,1 limit 1)a
select otr.name as results from ( (select name,count(*) from Users u INNER JOIN Movie_Rating m on u.user_id=m.user_id group by name order by count(*) desc ,name limit 1 ) union (select title,avg(rating) from Movies m inner join Movie_Rating r on m.movie_id=r.movie_id where month(r.created_at)='02' and year(r.created_at)='2020' group by title order by avg(rating) desc ,title limit 1))as otr
select results from ( ( select B.name as results,count(rating) as rating from Movie_Rating as A inner join Users as B on A.user_id=B.user_id group by 1 order by 2 desc,1 asc limit 1 ) UNION ( select B.title as results, avg(rating) as rating from Movie_Rating as A join movies as B on A.movie_id=B.movie_id where month(created_at)=2 and year(created_at)=2020 group by 1 order by 2 desc, 1 asc limit 1 ) ) Z
select results from ( (select count(1) num_per_user, u.name as results from movie_rating mr join movies m on mr.movie_id = m.movie_id join users u on mr.user_id = u.user_id group by u.name order by 1 desc, 2 asc limit 1 ) union ( select avg(rating) rating_avg, m.title as results from movie_rating mr join movies m on mr.movie_id = m.movie_id join users u on mr.user_id = u.user_id where created_at between date'2020-02-01' and date'2020-02-29' group by m.title order by 1 desc, 2 asc limit 1 ) ) aa
select results from (select U.name as results from Users U join Movie_Rating M on U.user_id = M.user_id group by U.user_id order by count(M.movie_id) desc, U.name asc limit 1) f union all select results from (select title as results from Movies M join Movie_Rating MR on M.movie_id = MR.movie_id where left(created_at, 7) = '2020-02' group by MR.movie_id Order by sum(rating)/count(user_id) desc, title asc limit 1) s
select results from (select name as results from (select name,count(distinct movie_id) as c from Movie_Rating join Users on Users.user_id = Movie_Rating.user_id group by name)t1 order by c desc,name limit 1)t2 union select results from (select title as results from (select title,avg(rating) as c from Movie_Rating join Movies on Movies.movie_id = Movie_Rating.movie_id where substr(created_at,1,7) = "2020-02" group by title)t4 order by c desc,title limit 1)t3
select results from (select name as results from users u inner join movie_rating mr on u.user_id=mr.user_id group by u.user_id order by count(u.user_id) desc, name limit 1) as A union all select results from (select title as results from Movies m inner join movie_rating mr on m.movie_id=mr.movie_id where year(created_at)=2020 and month(created_at)=2 group by m.movie_id,title order by avg(rating) desc, title limit 1 ) as B
select results from (select name results FROM users WHERE user_id in ( SELECT distinct user_id FROM ( SELECT user_id,rank() over (order by movie_cnt desc ) rnk FROM ( SELECT user_id,COUNT(movie_id) movie_cnt FROM Movie_Rating GROUP BY 1 )a )a WHERE rnk=1 ) order by 1 limit 1 )a UNION ALL SELECT title FROM ( SELECT title FROM Movies M WHERE movie_id in ( SELECT movie_id FROM ( SELECT movie_id,rank() over(order by avg_rating desc) rnk FROM (SELECT movie_id,avg(rating) avg_rating FROM movie_rating WHERE SUBSTR(created_at,1,7) = '2020-02' GROUP BY 1)a )a WHERE rnk=1 ) order by 1 limit 1 )a
select results from( select u.name as results , count(movie_id) as c from Movie_Rating m join Users u on u.user_id=m.user_id group by u.name order by c desc,results limit 1) a union select results from( select m1.title as results,avg(rating) as d from Movie_Rating m join Movies m1 on m1.movie_id =m.movie_id where SUBSTR(created_at,1,7)="2020-02" group by m1.title order by d desc,results limit 1)b
select results from( select u.name as results from Movie_Rating mr join Users u on mr.user_id=u.user_id group by u.user_id order by count(movie_id) desc, u.name limit 1) a union select results from( select mv.title as results from Movie_Rating mr join Movies mv on mr.movie_id=mv.movie_id where left(mr.created_at,7)="2020-02" group by left(mr.created_at,7), mr.movie_id order by avg(rating) desc, mv.title limit 1) b
select t.name as results from (select name, count(*) as rvw_cnt from users u inner join movie_rating m on u.user_id=m.user_id group by name order by rvw_cnt desc, name asc limit 1) t union select mo.title as results from (select title,avg(rating) as avg_rtng from movie_rating a inner join movies m on a.movie_id=m.movie_id where substring(created_at,1,7)='2020-02' group by title order by avg_rtng desc,title asc limit 1) mo
select t1.results from ( select u.name as results, count(m.user_id) num_of_comment from users u join movie_rating m on u.user_id = m.user_id group by 1 order by 2 desc, 1 limit 1) t1 union select t2.results from( select movies.title as results, avg(m.rating) from Movie_Rating m join movies on m.movie_id = movies.movie_id and month(m.created_at) = '02' group by 1 order by 2 desc, 1 limit 1) t2
select temp1.results from (select u.name as results from Movie_Rating mr left join Users u on mr.user_id=u.user_id group by mr.user_id order by count(mr.movie_id) desc,u.name limit 1) temp1 UNION select temp2.results from (SELECT m.title as results from Movie_Rating mr left join Movies m on mr.movie_id=m.movie_id where year(mr.created_at)=2020 and month(mr.created_at)=2 group by mr.movie_id order by avg(mr.rating) desc,1 limit 1) temp2
select user_name as results from( select u.name as user_name from Users u JOIN Movie_rating mr ON u.user_id = mr.user_id group by u.user_id order by count(mr.movie_id) desc, user_name asc limit 1) t1 UNION select title as results from (select m.title as title from Movies m JOIN Movie_rating mr ON m.movie_id = mr.movie_id where LEFT(mr.created_at, 7) = '2020-02' group by m.movie_id order by avg(mr.rating) desc, m.title asc limit 1) t2
select user_name as results from(select u.name as user_name, count(m.movie_id) as numbers from Users as u join Movie_Rating as m on u.user_id = m.user_id group by u.user_id order by numbers desc, u.name asc limit 1)res1 union select movie_name as results from(select movies.title as movie_name, avg(m.rating) as ratings from Movies as movies join Movie_Rating as m on movies.movie_id = m.movie_id where substring(m.created_at, 1, 7) = '2020-02' group by m.movie_id order by ratings desc, movie_name asc limit 1)res2
with a as ( select user_id, count(movie_id) as `cnt` from Movie_Rating group by user_id ), b as ( select u.name as `results` from a left join Users as u on (a.user_id = u.user_id) order by a.cnt desc, u.name asc limit 1 offset 0 ), c as ( select mr.movie_id, sum(rating)/count(rating) as `s`, title from Movie_Rating as mr left join Movies as m on (mr.movie_id = m.movie_id) where month(created_at) = 2 and year(created_at) = 2020 group by mr.movie_id order by s desc, m.title asc limit 1 offset 0 ) select * from b union all select title as `results` from c
with a as (select m.title from movies m join (select movie_id, avg(rating) as 'rate' from movie_rating where left(created_at,7) = '2020-02' group by 1) tmp where m.movie_id = tmp.movie_id order by tmp.rate desc, 1 limit 1) , b as (select name, count(rating) from movie_rating m join users u where m.user_id = u.user_id group by 1 order by 2 desc, 1 limit 1) select name as results from b union all select title as results from a
with a as (select name from Movie_Rating left join Users on Movie_Rating.user_id = Users.user_id group by Movie_Rating.user_id order by count(Distinct movie_id) DESC, name Limit 1) , b as (select title from (select * from Movie_Rating where created_at between '2020-02-01' and '2020-02-29') as temp2 left join Movies on temp2.movie_id = Movies.movie_id group by temp2.movie_id order by avg(rating) DESC,title Limit 1) select name as results from a union select title from b
with a as( select name as results from(select name from(select name, row_number() over (order by count(rating) desc, u.name) as rk from movie_rating mr left join users u using (user_id) left join movies m using (movie_id) group by mr.user_id) a where rk = 1)b ) , b as ( select title as results from movie_rating join movies using (movie_id) where created_at like '2020-02%' group by movie_rating.movie_id order by avg(movie_rating.rating) desc, title limit 1) select results from a union select results from b
with a as( select u.name as results from movie_rating r left join users u on r.user_id=u.user_id group by r.user_id order by count(u.name) desc, u.name asc limit 1), b as( select m.title as results from movie_rating r left join movies m on r.movie_id=m.movie_id where r.created_at>='2020-02-01' and r.created_at<'2020-03-01' group by r.movie_id order by avg(r.rating) desc, results asc limit 1) select * from a union select * from b
with a as(select Users.user_id, name, dense_rank() over(order by count(movie_id) desc) as ranks from Movie_Rating join Users on Movie_Rating.user_id=Users.user_id group by 1,2 order by ranks ,name limit 1), b as( select Movies.movie_id, title, dense_rank()over(order by avg(rating) desc) as ranks from Movie_Rating join Movies on Movie_Rating.movie_id=Movies.movie_id where created_at between '2020-02-01' and '2020-02-29' group by 1,2 order by ranks , title limit 1 ) select name as results from a union select title as results from b
with b as (select u.name, count(*) as counts from users u, movie_rating m where m.user_id = u.user_id group by u.name order by u.name asc ), a as( select title, avg(rating) over(partition by title) as avgs from movies, movie_rating where movie_rating.movie_id = movies.movie_id and date_format(created_at, '%Y-%m') = '2020-02' order by title asc ) (select name as results from b where counts in (select max(counts) from b) limit 1 ) union ( select title from a where avgs in (select max(avgs) from a) limit 1)
with base as ( select distinct a.user_id, b.name, count(distinct movie_id) as cnt from Movie_Rating a left join Users b on a.user_id = b.user_id group by 1, 2 ), base1 as (select distinct a.movie_id, b.title, avg(rating) as avg_rating from Movie_rating a left join Movies b on a.movie_id = b.movie_id where date_format(created_at, '%Y-%m') = '2020-02' group by 1, 2 ) (select name as results from base where cnt in (select max(cnt) from base) order by 1 limit 1) union all (select title as results from base1 where avg_rating in (select max(avg_rating) from base1 ) order by 1 limit 1)
with base as ( select u.user_id, u.name, r.movie_id, r.rating, r.created_at, m.title from users u inner join movie_rating r on u.user_id = r.user_id inner join movies m on m.movie_id = r.movie_id ), top_user as( select name as results from base group by name order by count(*) desc, name asc limit 1), top_movie as( select title as results from base where year(created_at) = 2020 and month(created_at) = 2 group by title order by avg(rating) desc, title asc limit 1) select results from top_user union select results from top_movie
with bigtime_nerd as ( select name from ( select user_id, count(1) as total from movie_rating m group by 1 order by 2 desc ) m join users u on u.user_id = m.user_id order by total desc, name limit 1 ), moviezz as ( select title from ( select movie_id, avg(rating) as average from movie_rating where year(created_at) = 2020 and month(created_at) = 2 group by 1 ) f join movies m on m.movie_id = f.movie_id order by average desc, title limit 1 ) select name as results from bigtime_nerd union all select title as results from moviezz
with c1 as (select u.name as results from movie_rating m join users u on u.user_id = m.user_id group by m.user_id order by count(*) desc, u.name limit 1 ), c2 as( select u.title as results from movie_rating m join movies u on u.movie_id = m.movie_id where extract(year_month from created_at) = '202002' group by 1 order by avg(rating) desc, u.title limit 1 ) select * from c1 union select * from c2
with cte as ( Select user_id, name, dense_rank() over ( order by holder desc ) rnk from ( Select distinct m.user_id, u.name, count(m.movie_id) over (partition by m.user_id) holder from Movie_Rating m join Users u on u.user_id = m.user_id ) temp ) , cte2 as ( Select Results, movie_id, dense_rank() over ( order by rating desc) rnk from ( Select e.title as Results, e.movie_id, avg(m.rating) rating from Movie_Rating m join Movies e on e.movie_id = m.movie_id where date_format(created_at,'%Y-%m') = '2020-02' group by m.movie_id ) temp ) ( select name as Results from cte where rnk = 1 order by name limit 1 ) union ( select Results from cte2 where rnk =1 order by Results limit 1 )
with cte as ( Select user_id, name, dense_rank() over ( order by holder desc ) rnk from ( Select distinct m.user_id, u.name, count(m.movie_id) over (partition by m.user_id) holder from Movie_Rating m join Users u on u.user_id = m.user_id ) temp ) , cte2 as ( Select Results, movie_id, dense_rank() over ( order by rating desc) rnk from ( Select e.title as Results, e.movie_id, avg(m.rating) rating from Movie_Rating m join Movies e on e.movie_id = m.movie_id where date_format(created_at,'%Y-%m') = '2020-02' group by m.movie_id ) temp ) (select name as Results from cte where rnk = 1 order by name limit 1 ) union (select Results from cte2 where rnk =1 order by Results limit 1 )
with cte as ( select name from(select name, rank() over(order by cnt desc, name asc) as rn from(select name, count(distinct movie_id) as cnt from Movie_Rating a join Users b on a.user_id = b.user_id group by 1) x) y where rn = 1), cte2 as ( select title from(select title, rank() over(order by avg_rating desc, title asc) as rn from(select title, avg(rating) as avg_rating from Movie_Rating a join Movies b on a.movie_id = b.movie_id where substr(created_at,1,7) = '2020-02' group by 1) x) y where rn = 1) select name as results from cte union all select title as results from cte2
with cte as ( select name, count(*) as cnt from Movie_Rating a left join Users b on a.user_id = b.user_id group by 1 order by 2 desc, 1 asc limit 1), cte2 as ( select title, avg(rating) as avg_rating from Movie_Rating a left join movies b on a.movie_id = b.movie_id where substr(a.created_at,1,7) = '2020-02' group by 1 order by 2 desc, 1 asc limit 1) select name as results from cte union select title as results from cte2
with cte as ( select tab2.name, count(*) as cnt from Movie_Rating tab1 left join Users tab2 on tab1.user_id = tab2.user_id group by 1 order by name ), cte2 as ( select tab2.title, avg(rating) as avg_rating from Movie_Rating tab1 left join Movies tab2 on tab1.movie_id = tab2.movie_id where created_at between '2020-02-01' and '2020-02-29' group by 1 order by title ) (select name as results from ( select * from cte order by cnt desc, name ) tmp order by cnt desc, name limit 1) union all (select title as results from ( select * from cte2 order by avg_rating desc, title ) tmp2 order by avg_rating desc, title limit 1)
with cte as ( select tab2.name, count(*) as cnt from Movie_Rating tab1 left join Users tab2 on tab1.user_id = tab2.user_id group by 1 order by name ), cte2 as ( select tab2.title, avg(rating) as avg_rating from Movie_Rating tab1 left join Movies tab2 on tab1.movie_id = tab2.movie_id where created_at between '2020-02-01' and '2020-02-29' group by 1 order by title ) select name as results from ( select * from cte order by cnt desc, name limit 1 ) tmp union all select title as results from ( select * from cte2 order by avg_rating desc, title limit 1 ) tmp2
with cte as ( select u.name, count(*) from users u join movie_rating mr on mr.user_id=u.user_id group by u.name order by 2 desc, 1 asc limit 1 ), cte1 as ( select m.title, avg(mr.rating) from movies m join movie_rating mr on m.movie_id= mr.movie_id where extract(month from created_at)=2 and extract(year from created_at)=2020 group by m.title order by 2 desc, 1 asc limit 1 ) select name as results from cte union select title as results from cte1
with cte as ( select u.name, count(m.user_id) as ct from Movie_Rating m left join Users u on m.user_id=u.user_id group by 1 order by 2 desc, 1 ), cte2 as ( select m.title, avg(rating) as avg_rat from Movie_Rating r left join movies m on r.movie_id=m.movie_id where month(r.created_at)=2 group by r.movie_id order by 2 desc, m.title ) select name as results from cte having max(ct) union all select title from cte2 having max(avg_rat)
with cte as (select m.title as title, u.name as name, mr.movie_id as movieid, mr.user_id as uid, mr.rating as rating, mr.created_at as cat from movies m join movie_rating mr on m.movie_id = mr.movie_id join users u on u.user_id = mr.user_id), cte1 as (select name from cte group by uid having count(movieid)=(select max(mcnt) from (select count(movieid)mcnt from cte group by uid) a) order by name limit 1), cte2 as (select title from (select title, avg(rating) as avrat, rank() over(order by avg(rating) desc) as rnk from cte where date_format(cat,'%Y-%m')='2020-02' group by title) b where rnk = 1 order by title limit 1) select cte1.name as results from cte1 union all select cte2.title as results from cte2
with cte as (select r.movie_id, m.title, r.user_id, u.name, r.rating, r.created_at from Movie_Rating r join Movies m on m.movie_id = r.movie_id join Users u on u.user_id = r.user_id group by r.movie_id, r.user_id order by r.movie_id, r.user_id ), cte2 as (select distinct cte.title as results, avg(cte.rating) over (partition by cte.movie_id) as score from cte where cte.created_at like '2020-02%' order by 2 desc, 1 asc limit 1 ), cte3 as (select distinct cte.name, count(cte.rating) over (partition by cte.user_id) as rtcnt from cte order by 2 desc, 1 asc limit 1) select cte3.name as results from cte3 union select cte2.results from cte2
with cte as (select r.movie_id, m.title, r.user_id, u.name, r.rating, r.created_at from Movie_Rating r join Movies m on m.movie_id = r.movie_id join Users u on u.user_id = r.user_id group by r.movie_id, r.user_id order by r.movie_id, r.user_id ), cte2 as (select distinct cte.title as results, avg(cte.rating) over (partition by cte.movie_id) as score from cte where month(cte.created_at) = '02' order by 2 desc, 1 asc limit 1 ), cte3 as (select distinct cte.name, count(cte.rating) over (partition by cte.user_id) as rtcnt from cte order by 2 desc, 1 asc limit 1) select cte3.name as results from cte3 union select cte2.results from cte2
with cte as (select u.name as results from movie_rating as m join users as u on m.user_id=u.user_id group by m.user_id order by count(*) desc,results asc limit 1), demo as (select title as results from movie_rating as m join movies as mv on m.movie_id=mv.movie_id where substr(created_at,1,7)='2020-02' group by m.movie_id order by avg(rating) desc,results asc limit 1) select results from cte union all select results from demo
with cte as (select u.name as results from movie_rating m inner join users u on m.user_id = u.user_id group by m.user_id order by count(rating) desc, u.name limit 1), cte2 as (select m1.title as results from movie_rating m inner join movies m1 on m.movie_id = m1.movie_id where date_format(created_at, '%Y-%m') = '2020-02' group by m.movie_id order by avg(rating) desc, m1.title limit 1) select results from cte union select results from cte2
with cte as (select u.name, count(distinct movie_id) as ct,rank() over (order by count(distinct movie_id) desc, name asc) as rk from Users u left join Movie_Rating mr on u.user_id = mr.user_id group by mr.user_id), cte1 as (select *,rank() over (order by avgrt desc,title asc)as rk from (select mr.movie_id,u.name,mr.user_id,m.title,mr.rating,mr.created_at, avg(rating)as avgrt from Movie_Rating mr left join Users u on mr.user_id = u.user_id left join Movies m on mr.movie_id = m.movie_id where created_at between '2020-02-01' and '2020-02-28' group by movie_id)as a) select name as results from cte where rk = 1 union select title from cte1 where rk = 1
with cte as (select u.name, count(distinct movie_id) from movie_rating m join users u using (user_id) group by user_id order by 2 desc, 1 asc limit 1), cte_1 as (select title, avg(rating) from movie_rating join movies using (movie_id) where date_format(created_at,"%Y-%m") = '2020-02' group by movie_id order by 2 desc, 1 asc limit 1) select final.name as results from (select name from cte union all select title from cte_1) as final
with cte as (select user_id, count(movie_id) as cnt from Movie_Rating group by user_id) , cte1 as (select title, avg(rating) as avg from Movies m join Movie_Rating mr on m.movie_id = mr.movie_id where left(created_at, 7) = '2020-02' group by mr.movie_id ) (SELECT name as results from Users u join cte m ON u.user_id = m.user_id where cnt = (select max(cnt) from cte) order by name limit 1) UNION (select title as results from cte1 where avg = (select max(avg) from cte1) Order by 1 limit 1)
with cte as (select user_id, count(user_id) as rk from Movie_rating group by 1), etc as (select movie_id, (sum(rating)/count(*)) as rat from Movie_rating where created_at between '2020-02-01' and '2020-02-29' group by 1), titles as (select title from Movies where movie_id in (select movie_id from etc where rat = (select max(rat) from etc )) order by 1 limit 1), qwe as (select name from Users where user_id in (select user_id from cte where rk = (select max(rk) from cte)) order by 1 limit 1) select title as results from titles union select name as results from qwe
with cte as (select user_id,count(distinct movie_id) as CNT from movie_rating group by user_id), cte1 as (select movie_id,avg(rating) as average from movie_rating where month(created_at)='2' and year(created_at)='2020' group by movie_id) (select name as results from users a inner join cte b on a.user_id=b.user_id order by CNT desc,name limit 1) union (select title from movies a join cte1 b on a.movie_id=b.movie_id order by average desc,title limit 1)
with cte as( select m.title as results, avg(mr.rating) as avg_rating from movies m join movie_rating mr using(movie_id) where left(mr.created_at,7) = '2020-02' group by 1 ) (select u.name as results from users u join movie_rating mr using(user_id) group by mr.user_id order by count(mr.user_id) desc,1 limit 1) union all (select results from cte where avg_rating=(select max(avg_rating) from cte) order by 1 limit 1)
with cte as( select m.user_id, count(m.rating) as rat, u.name as results from Movie_Rating m left join users u on m.user_id = u.user_id group by user_id order by rat desc, results asc limit 1), cte1 as ( select m.movie_id, avg(rating) as rat, mo.title as results from Movie_Rating m left join Movies mo on m.movie_id = mo.movie_id where substring(m.created_at,1,7) = "2020-02" group by m.movie_id order by rat desc, results asc limit 1) select cte.results from cte union select cte1.results from cte1
with cte as( select title,name,rating,created_at from movie_rating m join users u on m.user_id = u.user_id join movies mv on m.movie_id=mv.movie_id ) select results from ( (select name as results from cte group by name order by count(*) desc,results asc limit 1) union all (select title as results from cte where substring(created_at,1,7) = '2020-02' group by title order by avg(rating) desc, results asc limit 1) )v
with cte as( select user_id, dense_rank()over(order by count(rating)desc) as ratingCnt from Movie_Rating group by 1 ), cte2 as( select movie_id, dense_rank() over(order by sum(rating)/count(movie_id) desc) as movieRating from (select movie_id, rating from Movie_Rating where left(created_at,7) = '2020-02')tmp group by 1 ) (select u.name as results from Users u join cte c on u.user_id = c.user_id where ratingCnt = 1 order by u.name asc limit 1 ) union all ( select m.title as results from Movies m join cte2 c2 on m.movie_id = c2.movie_id where movieRating = 1 order by m.title asc limit 1 )
with cte as(select u.name from( select user_id, count(user_id) as cnt from Movie_Rating group by user_id) a left join Users u using (user_id) order by cnt desc,u.name limit 1) , cte1 as( select m.title from (select movie_id, avg(rating) as avg_ from Movie_Rating where date_format(created_at,'%Y-%m') = '2020-02' group by movie_id) a left join Movies m using (movie_id) order by avg_ desc, m.title limit 1) select name as 'results' from cte union select title as 'results' from cte1
with cte as(select user_id, count(movie_id) as num from Movie_Rating group by user_id), cte2 as(select movie_id, avg(rating) as avg_rating from Movie_Rating where left(created_at, 7) = '2020-02' group by movie_id) (select name as results from cte join Users u on u.user_id = cte.user_id order by num desc, name limit 1) union (select title as results from cte2 join Movies m on m.movie_id = cte2.movie_id order by avg_rating desc, title limit 1)
with cte as(select user_id, count(movie_id) as num from Movie_Rating group by user_id), cte2 as(select movie_id, avg(rating) as avg_rating from Movie_Rating where left(created_at, 7) = '2020-02' group by movie_id), cte3 as(select name as results from cte join Users u on u.user_id = cte.user_id order by num desc, name limit 1), cte4 as(select title as results from cte2 join Movies m on m.movie_id = cte2.movie_id order by avg_rating desc, title limit 1) select * from cte3 union select * from cte4
with cte1 as ( SELECT user_id, name, count(movie_id) as movie_count FROM movie_rating natural join users group by user_id, name), cte2 as ( SELECT movie_id, title, AVG(rating) as movie_rating FROM movie_rating natural join movies where date_format(created_at, '%Y-%m') = '2020-02' group by movie_id, title ) (SELECT name as results from cte1 where movie_count = (select max(movie_count) from cte1) order by name limit 1) union (SELECT title as results from cte2 where movie_rating = (select max(movie_rating) from cte2) order by title limit 1)
with cte1 as ( select name as results from users as a join movie_rating as b on a.user_id = b.user_id group by name order by count(*) desc, name limit 1 ), cte2 as ( select title as results from movies as a join movie_rating as b on a.movie_id = b.movie_id where created_at like '2020-02%' group by title order by avg(rating) desc, title limit 1 ) select results from cte1 union all select results from cte2
with cte1 as ( select name from (select name, count(u.user_id) as cnt from Movie_Rating m inner join Users u on m.user_id = u.user_id group by name ) a order by cnt desc,name asc limit 1 ), cte2 as ( select title from (select title, avg(rating) as average from Movie_Rating m inner join Movies v on m.movie_id = v.movie_id where created_at between '2020-02-01' and '2020-02-29' group by title order by average desc,title asc) b limit 1) select name as results from cte1 union select title as results from cte2
with cte1 as ( select u.name, count(r.user_id) from Users u left join Movie_Rating r on u.user_id= r.user_id group by 1 order by 2 desc,1 limit 1 ), cte2 as ( select m.title, avg(rating) from Movies m left join Movie_Rating r on m.movie_id= r.movie_id where created_at between '2020-02-01' and '2020-02-28' group by 1 order by 2 desc,1 limit 1 ) select name as results from cte1 union select title as results from cte2
with cte1 as ( select u.user_id, u.name, count(rating) as most_rating from Movie_Rating mr join Users u on u.user_id = mr.user_id group by user_id order by most_rating desc, u.name asc ), cte2 as ( select m.movie_id, m.title, avg(rating) as avg_rating from Movie_Rating mr1 join Movies m on mr1.movie_id = m.movie_id where month(mr1.created_at) = 02 group by movie_id order by avg_rating desc, m.title asc ) select name as results from cte1 having max(most_rating) union all select title from cte2 having max(avg_rating)
with cte1 as ( select user_id, count(*) cnt from movie_rating group by user_id ), cte2 as ( select distinct u.namefrom users u inner join cte1 c on c.user_id=u.user_id order by cnt desc, u.name asc limit 1 ), cte3 as ( select movie_id, avg(rating) as avg_rating from movie_rating where month(created_at) = 2 and year(created_at) = 2020 group by movie_id ), cte4 as ( select m.title from cte3 inner join movies m on m.movie_id = cte3.movie_id order by avg_rating desc, m.title asc limit 1 ) select name as results from cte2 union all select * from cte4
with cte1 as ( select user_id, count(*) cnt from movie_rating group by user_id order by count(*) desc), cte2 as ( select distinct u.namefrom users u inner join cte1 c on c.user_id=u.user_id order by cnt desc, u.name asc limit 1 ), cte3 as ( select movie_id, avg(rating) as avg_rating from movie_rating where month(created_at) = 2 and year(created_at) = 2020 group by movie_id ), cte4 as ( select m.title from cte3 inner join movies m on m.movie_id = cte3.movie_id order by avg_rating desc, m.title asc limit 1 ) select name as results from cte2 union all select * from cte4
with cte1 as (select name as results from Movie_Rating a left join Users b on a.user_id = b.user_id group by name order by count(*) desc, name asc limit 1), cte2 as (select title as results from Movie_Rating a left join Movies b on a.movie_id = b.movie_id where date_format(created_at, '%Y-%m') = '2020-02' group by title order by avg(rating) desc, title asc limit 1) select * from cte1 union select * from cte2
with cte1 as (select u.name as results from Movie_rating m join users u on m.user_id = u.user_id group by m.user_id order by count(*) desc, u.name limit 1 ) , cte2 as (select title as results from movie_rating m join movies mm on m.movie_id = mm.movie_id where DATE_FORMAT(created_at,'%Y-%m') = '2020-02' group by m.movie_id order by avg(rating) desc , title limit 1) select results from cte1 union select results from cte2
with cte1 as (select u.name as results from users as u join movie_rating as mr where u.user_id = mr.user_id group by mr.user_id order by count(mr.movie_id) desc, name asc limit 1) , cte2 as (select m.title as results from movies as m join movie_rating as mr where m.movie_id = mr.movie_id and mr.created_at between '2020-02-01' and '2020-02-29' group by mr.movie_id order by avg(mr.rating) desc, title asc limit 1) select * from cte1 union select * from cte2
with cte1 as (select user_id, count(user_id) as count_movies from Movie_Rating group by user_id), cte2 as (select a.name from Users a right join cte1 b on a.user_id=b.user_id order by count_movies desc, a.name limit 1), cte3 as (select movie_id, avg(rating) as avg_rating from Movie_Rating where left(created_at,7)="2020-02" group by movie_id), cte4 as (select a.title from Movies a right join cte3 b on a.movie_id=b.movie_id order by avg_rating desc, a.title limit 1) select name as results from cte2 union select title from cte4
with cte_highest_average_rating as ( SELECT title, AVG(rating) as rating FROM MOVIE_RATING T1 JOIN MOVIES T2 ON T1.MOVIE_ID = T2.MOVIE_ID WHERE CREATED_AT BETWEEN '2020-02-01' and '2020-02-29' GROUP BY title ORDER BY rating desc, title ) , cte_count_review as ( SELECT NAME, COUNT(t1.USER_ID) AS counting FROM MOVIE_RATING T1 JOIN USERS T2 ON T1.USER_ID = T2.USER_ID group by name order BY counting DESC, name ) (SELECT name as results FROM cte_count_review limit 1) union (select title as results from cte_highest_average_rating limit 1)
with cte_top_user as ( select u.name, count(1) as n_ratings from Movie_rating mr left join Users u on u.user_id = mr.user_id group by u.name order by n_ratings desc, u.name limit 1 ), cte_highest_rated_movie as ( select m.title as title, avg(rating) as avg_rating from Movie_rating mr left join Movies m on mr.movie_id = m.movie_id where date_format(mr.created_at, '%Y%m') = '202002' group by m.title order by avg_rating desc, title asc limit 1 ) select name as results from cte_top_user union select title as results from cte_highest_rated_movie
with greatest_user as ( select u.name, count(distinct movie_id) as movies_rated from Movie_Rating m JOIN Users u on m.user_id = u.user_id group by u.name order by movies_rated desc, u.name asc limit 1 ) ,mv_fb_20 as ( select m.title, avg(rating) as avg_rating from Movie_Rating mr JOIN Movies m on mr.movie_id = m.movie_id where month(mr.created_at) = 2 and year(mr.created_at) = 2020 group by m.title order by avg_rating desc, m.title asc limit 1 ) select name as results from greatest_user UNION ALL select title as results from mv_fb_20
with highest_rater as ( select Users.name from (select user_id, count(rating) as rating_count from Movie_Rating group by 1 order by 2 desc) m left join Users on Users.user_id = m.user_id order by rating_count desc, name limit 1 ), highest_average as ( select Movies.title from (select movie_id, avg(rating) as average_rating from Movie_Rating where year(created_at) = 2020 and month(created_at) = 2 group by 1 ) m left join Movies on m.movie_id = Movies.movie_id order by average_rating desc, title limit 1 ) select name as results from highest_rater union all select title as results from highest_average
with joined as (select * from (Users join Movie_Rating using(user_id)) join Movies using(movie_id)) (select name as results from joined group by user_id order by count(movie_id) desc, name limit 1) union all (select title as results from joined where date_format(created_at, '%Y-%m') = '2020-02' group by movie_id order by avg(rating) desc, title limit 1)
with max_user as ( select mr.user_id, u.name, count(*) from Movie_rating mr left join Users u on mr.user_id = u.user_id group by user_id order by count(*) desc, u.name asc limit 1), highest_movie as ( select mr.movie_id, m.title, avg(rating) from movie_rating mr left join Movies m on mr.movie_id = m.movie_id where created_at between '2020-02-01' and '2020-02-29' group by movie_id order by avg(rating) desc, m.title asc limit 1 ) select name as results from max_user union all select title from highest_movie as results
with most_rating as (select user_id, rank()over(order by count(user_id)desc) "rating_rnk" from Movie_Rating group by 1), avg_highest as (select movie_id, rank()over(order by avg(rating)desc)"highest_rnk"from Movie_Rating where extract(year_month from created_at)=202002 group by 1) select * from (select name 'results' from users where user_id in (select user_id from most_rating where rating_rnk =1) order by name limit 1 )m union select * from (select title "results" from Movies where movie_id in (select movie_id from avg_highest where highest_rnk =1 ) order by title limit 1 )c
with most_rating as( select user_id, rank() over (order by count(user_id) desc) as rate_rank from Movie_Rating group by 1 ), highest_avg as ( select movie_id, rank() over (order by avg(rating) desc) as rate_rank from Movie_Rating where extract(year_month from created_at) = 202002 group by 1 ) select * from( select name"results" from Users where user_id in ( select user_id from most_rating where rate_rank = 1 ) order by name limit 1 ) t1 union all select * from( select title"results" from Movies where movie_id in ( select movie_id from highest_avg where rate_rank = 1 ) order by title limit 1 ) t2
with most_ratings as ( select user_id, rank() over (order by count(user_id) desc) "count_rank" from movie_rating group by 1 ), highest_avg as ( select movie_id, rank() over (order by avg(rating) desc) "avg_rank" from movie_rating where extract(year_month from created_at) = 202002 group by 1 ) select * from ( select name "results" from users where user_id in (select user_id from most_ratings where count_rank = 1) order by name limit 1) u union select * from ( select title "results" from movies where movie_id in (select movie_id from highest_avg where avg_rank = 1) order by title limit 1) m
with most_ratings as ( select user_id, rank() over (order by count(user_id) desc) "count_rank" from movie_rating group by 1 ), highest_avg as ( select movie_id, rank() over (order by avg(rating) desc) "avg_rank" from movie_rating where extract(year_month from created_at) = 202002 group by 1 ) select * from ( select name "results" from users where user_id in (select user_id from most_ratings where count_rank = 1) order by name, length(name) limit 1) u union select * from ( select title "results" from movies where movie_id in (select movie_id from highest_avg where avg_rank = 1) order by title, length(title) limit 1) m
with most_user as ( select users.user_id, name, count(movie_id) as num_rating from users join movie_rating mr on mr.user_id=users.user_id group by user_id order by 2 ), great_user as ( select name from most_user where num_rating=(select max(num_rating) from most_user) limit 1 ), ratings as ( select movie_id, avg(rating) score from movie_rating where month(created_at)=2 group by 1 ), highest_rating as ( select title from movies join ratings on movies.movie_id=ratings.movie_id where score=(select max(score) from ratings) order by title limit 1 ) select name as results from great_user union select title as results from highest_rating
with mr as(select user_id,count(movie_id) as ct from movie_rating group by user_id order by ct desc limit 1), high_rate as(select name as results from users where user_id in(select user_id from movie_rating group by user_id having count(movie_id) = (select ct from mr)) order by results limit 1) select results from high_rate union select title as results from (select title,avg(rating) as rt from movie_rating join movies on movie_rating.movie_id=movies.movie_id where substr(created_at,1,7) = '2020-02' group by title order by rt desc,title limit 1)A
with name as (select name as results from (select name, count(distinct B.movie_id) as num_rated_movies from Movies A inner join Movie_Rating B on A.movie_id = B.movie_id inner join Users C on C.user_id = B.user_id group by 1 order by 2 desc, 1)A limit 1), movies as (select title as results from (select B.title, avg(rating) as avg_rating from Movie_Rating A inner join Movies B on A.movie_id = B.movie_id where created_at between '2020-02-01' and '2020-02-29' group by 1 order by 2 desc, 1 )A limit 1) select * from name union all select * from movies
with name as( select mr.user_id, count(distinct movie_id) as cnt, name from movie_rating as mr join users as u on mr.user_id = u.user_id group by mr.user_id order by 2 desc, name asc limit 1), title as( select title, avg(rating) as average_rating from movie_rating as mr join movies as m on mr.movie_id = m.movie_id where left(created_at,7) = '2020-02' group by mr.movie_id order by 2 desc, 1 limit 1) select name as results from name union all select title as results from title
with rating_no as ( select mr.user_id, name, count(rating) as cnt from movie_rating mr join users u on u.user_id = mr.user_id group by user_id order by cnt desc, u.name limit 1 ) , rating_rk as ( select m.title, mr.movie_id, avg(mr.rating) as rt from movie_rating mr join movies m on m.movie_id = mr.movie_id where mr.created_at between '20200201' and '20200228' group by movie_id order by rt desc, m.title asc limit 1 ) select name as results from rating_no union select title as results from rating_rk
with req_user as ( SELECT agg.name as results from ( Select u.name , count(mr.movie_id) as no_reviews from Movie_Rating mr inner join users u on u.user_id = mr.user_id group by 1 order by 2 desc, 1 limit 1 ) AGG ) , req_movie as ( SELECT agg.title as results from ( Select m.title , SUM(mr.rating)/count(mr.rating) as avg_rating from Movie_Rating mr inner join movies m on m.movie_id = mr.movie_id where LEFT(mr.created_at, 7) = '2020-02' group by 1 order by avg_rating desc, m.title limit 1 ) AGG ) select results from req_user union all select results from req_movie
with rt as (select u.name, count(*) from movie_rating r join users u on u.user_id=r.user_id group by u.name order by count(*) desc, u.name limit 1) , mv as (select m.title as name, avg(rating) from movie_rating r join movies m on r.movie_id=m.movie_id where DATE_FORMAT(r.created_at,'%Y%m') = '202002' group by m.title order by avg(rating) desc, m.title limit 1 ) select rt.name as results from rt union select mv.name as results from mv
with sub1 as (select u.name as name, count(distinct r.movie_id) as num from Movie_Rating r left join Users u on u.user_id = r.user_id group by 1 order by 2 desc, 1 limit 1), sub2 as (select m.title as name, avg(r.rating) as num from Movie_Rating r left join Movies m on m.movie_id = r.movie_id where date_format(r.created_at, '%Y-%m') = '2020-02' group by 1 order by 2 desc, 1 limit 1 ) select name as results from (select * from sub1 union all select * from sub2) sub
with t1 as ( select a.user_id ,b.name, count(a.user_id) as counts from movie_rating as a join users as b on a.user_id = b.user_id group by 1 ,2 order by counts desc, name limit 1 ), t2 as (select a.movie_id,b.title,avg(a.rating) from (select * from movie_rating where left(created_at,7) = "2020-02") as a join movies as b on a.movie_id = b.movie_id group by 1,2 order by 3 desc, 2 limit 1) select name as results from t1 union all select title as results from t2
with t1 as ( select name as results from movie_rating join users using(user_id) group by user_id order by count(movie_id) desc, name limit 1), t2 as ( select title as results from movie_rating join movies using(movie_id) where left(created_at, 7) = '2020-02' group by movie_id order by avg(rating) desc, title limit 1) select * from t1 union select * from t2
with t1 as (select name as results from movie_Rating mr left join users u on mr.user_id = u.user_id group by mr.user_id order by count(rating) desc,name limit 1), t2 as(select title as results from movie_Rating mr left join movies m on mr.movie_id = m.movie_id where date_format(created_at,'%Y-%m')="2020-02" group by mr.movie_id order by avg(rating) desc, title asc limit 1) select * from t1 union select * from t2
with t1 as (select name as results, count(*) as agg from users a join movie_rating b on a.user_id = b.user_id group by 1 order by 2 desc, 1 asc limit 1), t2 as ( select title as results, sum(rating)/count(user_id) as agg from movies a join movie_rating b on a.movie_id = b.movie_id where created_at between '2020-02-01' and '2020-02-29' group by 1 order by 2 desc, 1 asc limit 1) select results from t1 union select results from t2
with t1 as (select name from users a join movie_rating b on a.user_id = b.user_id group by a.user_id order by count(distinct movie_id) desc, name limit 1), t2 as (select title from movies a join movie_rating b on a.movie_id = b.movie_id where left(created_at, 7) = '2020-02' group by a.movie_id order by avg(rating) desc, title limit 1) select name as results from t1 union all select * from t2
with t1 as (select u.name from (select user_id, count(distinct m.movie_id) as cnt_rat_movie from movie_rating m group by user_id order by cnt_rat_movie desc)t join users u on u.user_id=t.user_id order by t.cnt_rat_movie desc, u.name asc limit 1), t2 as (select m.title from (select movie_id, avg(rating) as avg_rating from movie_rating where month(created_at)=2 group by 1 order by 2 desc) r join movies m on r.movie_id=m.movie_id order by r.avg_rating desc, m.title asc limit 1) select name as results from (select * from t1 union all select * from t2) x
with t1 as( select b.name, count(distinct a.movie_id) as rating_qty from Movie_Rating a left join Users b on a.user_id=b.user_id group by b.name order by rating_qty desc, name limit 1), t2 as ( select b.title, avg(a.rating) as avg_rating from Movie_Rating a left join Movies b on a.movie_id=b.movie_id where a.created_at>='2020-02-01' and a.created_at<='2020-02-29' group by b.title order by avg_rating desc, title limit 1) select name as results from t1 union all select title as results from t2
with t1 as( select b.name, count(distinct a.movie_id) as rating_qty from Movie_Rating a left join Users b on a.user_id=b.user_id group by b.name order by rating_qty desc, name limit 1), t2 as ( select b.title, avg(a.rating) as avg_rating from Movie_Rating a left join Movies b on a.movie_id=b.movie_id where year(created_at) = 2020 and month(created_at) = 2 group by b.title order by avg_rating desc, title limit 1) select name as results from t1 union all select title as results from t2
with t1 as(select u.name, count(movie_id) ct from Movie_Rating mr join Users u on u.user_id=mr.user_id group by mr.user_id order by ct desc, u.name limit 1), t2 as (select m.title, avg(rating) ar from Movie_Rating mr join Movies m on m.movie_id=mr.movie_id where mr.created_at between "2020-02-01" and "2020-02-29" group by mr.movie_id order by ar desc, m.title limit 1) select name as results from t1 union select title as results from t2
with tem as( select a.*, b.title from movie_rating a left join movies b on a.movie_id = b.movie_id ), tem2 as ( select a.*, b.name from movie_rating a left join users b on a.user_id = b.user_id) select name as results from tem2 where name in (select name from ( select user_id, name, count(rating) as rating from tem2 group by user_id order by rating desc, name asc limit 1 )a) union (select title as results from tem where title in (select title from ( select movie_id, title, avg(rating) as ave_r from tem where created_at between '2020-02-01' and '2020-02-29' group by movie_id order by ave_r desc, title asc limit 1)a))
with temp as (select u.name results,count(movie_id) from Users u left join Movie_Rating m using(user_id) group by 1 order by 2 desc,1 limit 1), temp2 as (select m.title results,avg(rating) rating from Movie_Rating r join Movies m using (movie_id) where month(created_at)=2 and year(created_at)=2020 group by 1 order by 2 desc,1 limit 1) select temp.results from temp union select temp2.results from temp2
with temp as(select u.name results,count(movie_id) from Users u left join Movie_Rating m using(user_id) group by 1 order by 2 desc,1 limit 1), temp2 as (select m.title results,avg(rating) rating from Movie_Rating r join Movies m using (movie_id) where month(created_at)=2 and year(created_at)=2020 group by 1 order by 2 desc,1 limit 1) select temp.results from temp union select temp2.results from temp2
with temp0 as ( select user_id, count(user_id) as user_cnt from Movie_Rating group by 1 ) , temp1 as ( select max(user_cnt) as max_cnt from temp0 ) , temp2 as ( select name from Users a join temp0 b on a.user_id = b.user_id where b.user_cnt = (select max_cnt from temp1) order by 1 limit 1 ) , temp3 as ( select movie_id, avg(rating) as movie_rate from Movie_Rating where created_at between "2020-02-01" and "2020-02-29" group by 1 ) , temp4 as ( select movie_id, max(movie_rate) as max_rate from temp3 ) select name as results from temp2 union (select title as results from temp3 a left join Movies b on a.movie_id = b.movie_id where a.movie_rate = (select max_rate from temp4) order by 1 limit 1)
with temp1 as ( select user_id, count(distinct movie_id) as no_rating from Movie_Rating group by user_id ) ,temp2 as ( select name as results from temp1 inner join Users on temp1.user_id=Users.user_id where no_rating = (select max(no_rating) from temp1) order by 1 limit 1 ) ,temp3 as ( select movie_id, avg(rating) as avg_rating from Movie_Rating where extract(month from created_at)=2 and extract(year from created_at)=2020 group by 1 order by 2 desc ) ,temp4 as( select title as results from temp3 inner join Movies on temp3.movie_id=Movies.movie_id where avg_rating = (select max(avg_rating) from temp3) order by 1 limit 1 ) select * from temp2 union all select * from temp4
with tmp as (select user_id, count(*) as cnt from movie_rating group by user_id), tmp1 as (select movie_id, avg(rating) as rate from movie_rating where date_format(created_at, '%Y-%m') = '2020-02' group by movie_id) (select name as results from tmp a join users b on a.user_id = b.user_id order by cnt desc, name limit 1) union all (select title as results from tmp1 a join movies b on a.movie_id = b.movie_id order by rate desc, title limit 1)
with tmp as( select u.name, count(movie_rating.movie_id) as cnts from movie_rating left join users as u on movie_rating.user_id = u.user_id group by u.user_id order by cnts desc, u.name limit 1), tmp2 as( select movies.title, avg(rating) from movie_rating left join movies on movie_rating.movie_id = movies.movie_id where left(created_at,7)='2020-02' group by movie_rating.movie_id order by avg(rating) desc,movies.title limit 1) select name as results from tmp union select title as results from tmp2
with u_rating as ( select m.name, count(movie_id) as avg_r from movie_rating as r join Users as m oN r.user_id = m.user_id group by 1 order by avg_r desc, 1 limit 1 ), rating as ( select m.title, avg(rating) as avg_r from movie_rating as r join movies as m oN r.movie_id = m.movie_id and extract(month from r.created_at) = 2 and extract(year from r.created_at) = 2020 group by 1 order by avg_r desc, 1 limit 1 ) select name as results from u_rating union select title from rating
with u_t as (select user_id, name, count(rating) as rating from movie_rating as m left join users as u using(user_id) group by user_id ), m_t as (select movie_id, title, avg(rating) as rating from movie_rating as m left join movies as mv using(movie_id) where created_at between '2020-02-01' and '2020-02-28' group by movie_id ) select * from ( (select name as results from u_t order by rating desc, name asc limit 1) union all (select title as results from m_t order by rating desc, title asc limit 1) ) as t5
with uname as ( Select name, rank() over (order by count(rating) desc, name) as rk from Users u join Movie_rating m on u.user_id = m.user_id group by 1 ) , umovie as (select title, rank() over (order by avg(rating) desc, title) as rk from Movies m join movie_rating r on m.movie_id = r.movie_id where date_format(created_at,'%Y-%m') = '2020-02' group by title) select name as results from uname where rk = 1 union all select title as results from umovie where rk = 1
with user as ( select u.name from movie_rating m join users u on u.user_id = m.user_id group by u.user_id order by count(m.rating) desc, u.name asc limit 1 ), movie as ( select m.title from movies m join movie_rating mr on m.movie_Id = mr.movie_id where mr.created_at between '2020-02-01' and '2020-02-29' group by m.movie_Id order by avg(rating) desc, m.title asc limit 1 ) select name as results from user union all select title as results from movie
with userCte as ( select distinct m.user_id, u.name, count(m.user_id) as ratedCount from Movie_Rating m, Users u where m.user_id = u.user_id group by m.user_id order by ratedCount desc, u.name asc limit 1 ), highestAvgRating as ( select distinct r.movie_id, m.title, avg(r.rating) as average, MONTH(r.created_at) as mon from Movie_Rating r, movies m where MONTH(created_at) = '02' and r.movie_id = m.movie_id group by r.movie_id order by avg(r.rating) desc, m.title asc limit 1 ) select name as results from userCte union all select title as results from highestAvgRating
with user_count as ( select name, count(*) as c from Movie_Rating a left join Users b on a.user_id = b.user_id group by 1 ), user_results as ( select name as results from user_count where c in (select max(c) from user_count) order by 1 limit 1 ), movie_count as ( select title, avg(rating) as a from Movie_Rating a left join Movies b on a.movie_id = b.movie_id where year(created_at) = 2020 and month(created_at) = 2 group by 1 ), movie_results as ( select title as results from movie_count where a in (select max(a) from movie_count) order by 1 limit 1 ) select results from user_results union select results from movie_results
with user_name as ( select d.name as results from ( select user_id, count(rating) as ct from movie_rating group by user_id order by count(rating) desc) as a join users as d on a.user_id=d.user_id order by a.ct desc, d.name limit 1 ), movie_name as ( select e.title as results from (select movie_id, avg(rating) as rr from movie_rating where created_at between "2020-02-01" and "2020-02-28" group by movie_id order by avg(rating) desc) as q join movies as e on q.movie_id=e.movie_id order by q.rr desc, e.title limit 1 ) select results from user_name union all select results from movie_name
with user_rated as ( SELECT name as results FROM Movie_Rating m JOIN Users u on u.user_id = m.user_id GROUP BY name ORDER BY count(0) DESC, u.name LIMIT 1 ) , movie_rated as ( SELECT title as results FROM Movie_Rating mr JOIN Movies m on mr.movie_id = m.movie_id WHERE created_at between '2020-02-01' and '2020-02-29' GROUP BY title ORDER BY AVG(rating) DESC, title LIMIT 1) SELECT * FROM user_rated UNION ALL SELECT * FROM movie_rated
with user_rated_more_movies as ( select u.name, dense_rank() over(order by count(mr.movie_id) desc,u.name) as rnk from Movie_rating mr join Users u on(mr.user_id=u.user_id) group by u.name ), movie_rating as ( select m.title as name, dense_rank() over(order by avg(rating) desc, m.title) as rnk from Movie_Rating mr join Movies m on(mr.movie_id=m.movie_id) where mr.created_at>='2020-02-01' and mr.created_at<='2020-02-28' group by m.title ) select name as results from user_rated_more_movies where rnk=1 union select name as results from movie_rating where rnk=1
with user_rating as ( select name as results from Movie_Rating mr join Users u on mr.user_id=u.user_id group by 1 order by count(movie_id) desc, name asc limit 1 ), highest_movie_rating_feb_2020 as ( select title as results from Movie_Rating mr join Movies m on mr.movie_id=m.movie_id where date_format(mr.created_at, '%Y-%m')='2020-02' group by 1 order by avg(mr.rating) desc, title asc limit 1 ) select * from user_rating union all select * from highest_movie_rating_feb_2020
with user_rating as ( select user_id, count(movie_id) as rated from movie_rating group by user_id order by rated desc ), high_average as ( select movie_id, avg(rating) as rating from movie_rating where date_format(created_at, '%y-%m') = '20-02' group by movie_id order by rating ), a as (select distinct u.name as results from user_rating ur inner join users u on ur.user_id = u.user_id order by ur.rated desc, u.name asc limit 1), b as ( select distinct m.title as results from high_average ha inner join movies m on ha.movie_id = m.movie_id order by ha.rating desc, m.title asc limit 1) select * from a union select * from b
with user_rating_count as ( select u.user_id, u.name, count(*) as rating_count from Movie_rating mr join Users u on mr.user_id = u.user_id group by user_id ), max_rating as ( select name from user_rating_count where rating_count = (select max(rating_count) from user_rating_count) order by name asc limit 1 ), movie_rating_month as ( select movie_id, avg(rating) as avg_rating from Movie_rating where date_format(created_at, '%Y-%m') = '2020-02' group by movie_id ), highest_rating as ( select m.title from movie_rating_month mr join Movies m on mr.movie_id = m.movie_id where mr.avg_rating = (select max(avg_rating) from movie_rating_month) order by m.title asc limit 1 ) select name as results from max_rating union select title as results from highest_rating
with user_ratings as ( select u.name, count(distinct mr.movie_id) as movies_rated from users u left join Movie_Rating mr on u.user_id = mr.user_id group by 1 order by 2 desc, 1 limit 1 ) , highest_202002_avg_rating as ( select m.title, avg(mr.rating) as avg_rating from Movies m left join Movie_Rating mr on m.movie_id = mr.movie_id where created_at >= '2020-02-01' and created_at < '2020-03-01' group by 1 order by 2 desc, 1 limit 1 ) select u.name as results from user_ratings u union all select title as results from highest_202002_avg_rating h
with user_reviews as ( select U.name, rank() over (order by count(rating) desc , U.name) as rnk from Movie_Rating M JOIN Users U on M.user_id = U.user_id group by U.name), movie_reviews as ( select M.title, rank() over(order by avg(rating) desc, M.title) as rnk from Movie_Rating MR JOIN Movies M on M.movie_id = MR.movie_id WHERE created_at BETWEEN '2020-02-01' AND '2020-02-29' group by M.title) SELECT name as results from user_reviews where rnk = 1 UNION SELECT title as results from movie_reviews where rnk = 1
with user_tbl as ( select m.user_id, u.name as result, count(m.rating) as cnt from Movie_Rating m left join Users u on m.user_id = u.user_id group by m.user_id order by cnt desc, u.name asc limit 1 ), movie_tbl as ( select m.movie_id, m2.title as result, avg(rating) as avg_rating from Movie_Rating m left join Movies m2 on m.movie_id = m2.movie_id where date_format(created_at, '%Y-%m') = '2020-02' group by m.movie_id order by avg_rating desc, result asc limit 1 ) select result as results from user_tbl union all select result as results from movie_tbl
with users as( select u.name as results from Movie_Rating m join Users u on m.user_id = u.user_id group by m.user_id order by count(m.movie_id) desc, u.name limit 1 ), movies as( select mo.title as results from Movie_Rating m join Movies mo on m.movie_id = mo.movie_id where month(m.created_at) = 02 group by m.movie_id order by avg(m.rating) desc,mo.title limit 1 ) select results from users union select results from movies
with usr as ( select name as results,rank() over (order by count(1) desc,name asc) as rnk from movie_rating m join users u on m.user_id=u.user_id group by u.name ), mve as (Select title as results, rank() over (order by avg(rating) desc, title asc) as rnk from movie_rating r join movies m on m.movie_id=r.movie_id AND substr(r.created_at,1,7)='2020-02' group by title) select results from usr where rnk =1 UNION ALL SELECT results from mve where rnk =1
with x as ( select b.name from movie_rating a join users b on a.user_id = b.user_id group by a.user_id order by count(distinct movie_id) desc, b.name asc limit 1), y as ( select b.title from movie_rating a join movies b on a.movie_id = b.movie_id where left(a.created_at, 7) = '2020-02' group by a.movie_id order by avg(a.rating) desc, b.title asc limit 1) select name as results from x union select title as results from y
