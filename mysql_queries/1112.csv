FROM ( SELECT student_id, course_id, grade, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS ranks FROM Enrollments ) f WHERE ranks = 1 GROUP BY student_id
SELECT A.student_id, MIN(course_id) course_id, A.grade FROM Enrollments A INNER JOIN ( SELECT student_id, MAX(grade) AS max_grade FROM Enrollments GROUP BY student_id ) AS B ON A.student_id = B.student_id AND A.grade = B.max_grade GROUP BY A.student_id ORDER BY A.student_id
SELECT DISTINCT e.student_id, e.course_id, e.grade FROM ( SELECT student_id, course_id, grade, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) as grade_rank_student FROM Enrollments ) e WHERE e.grade_rank_student = 1 ORDER BY 1
SELECT DISTINCT e.student_id, e.course_id, e.grade FROM ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) as grade_rank_student FROM Enrollments ) e WHERE e.grade_rank_student = 1 ORDER BY 1
SELECT DISTINCT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT DISTINCT student_id, MAX(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id
SELECT DISTINCT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, RANK() OVER(Partition By student_id ORDER BY grade DESC,course_id ASC) as rankie FROM Enrollments e) ranked_table WHERE rankie = 1
SELECT E.student_id, MIN(E.course_id) as course_id, T.grade FROM Enrollments E INNER JOIN ( SELECT student_id, MAX(grade) as grade FROM Enrollments E GROUP BY student_id ) AS T ON E.student_id = T.student_id AND E.grade = T.grade GROUP BY E.student_id ORDER BY E.student_id
SELECT a.student_id,a.course_id, a.grade FROM( SELECT student_id,course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) as ran FROM Enrollments) a WHERE a.ran = 1
SELECT cte.student_id, cte.course_id, cte.grade FROM ( SELECT student_id , course_id , grade, DENSE_RANK() OVER (PARTITION BY student_id ORDER BY grade DESC,course_id ASC) AS dr FROM Enrollments ) AS cte WHERE cte.dr=1
SELECT e.student_id, MIN(course_id) AS course_id, grade FROM Enrollments e JOIN ( SELECT student_id, MAX(grade) AS maxgrade FROM Enrollments GROUP BY student_id ) AS mt ON e.student_id = mt.student_id AND e.grade = mt.maxgrade GROUP BY e.student_id ORDER BY student_id
SELECT e.student_id, MIN(e.course_id) AS course_id, t.high AS grade FROM Enrollments e JOIN ( SELECT student_id, MAX(grade) AS high FROM Enrollments GROUP BY student_id ) t ON e.student_id = t.student_id AND e.grade = t.high GROUP BY student_id ORDER BY student_id
SELECT h.student_id, MIN(e.course_id) course_id, h.highest grade FROM ( SELECT student_id, MAX(grade) highest FROM Enrollments GROUP BY 1 ) h INNER JOIN Enrollments e ON h.student_id = e.student_id AND h.highest = e.grade GROUP BY 1 ORDER BY 1
SELECT student_id , course_id , grade FROM ( SELECT student_id , course_id , grade , RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) AS rank_grade FROM enrollments) tbl WHERE rank_grade=1
SELECT student_id , course_id , grade FROM(SELECT * , ROW_NUMBER() OVER(PARTITION BY student_id ORDER BY grade DESC,course_id ASC) AS rk FROM Enrollments) AS A WHERE rk =1 ORDER BY student_id
SELECT student_id ,course_id ,grade FROM ( SELECT student_id ,course_id ,grade ,DENSE_RANK() OVER(Partition by student_id ORDER BY grade DESC, course_id asc) as GradeRanking FROM Enrollments ) t WHERE t.GradeRanking = 1 ORDER BY student_id ASC
SELECT student_id ,course_id ,grade FROM ( SELECT student_id ,course_id ,grade ,ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC,course_id ASC ) AS rn FROM Enrollments ) ht WHERE rn = 1
SELECT student_id, MIN(course_id) AS course_id, grade FROM ( SELECT e1.* FROM Enrollments e1 JOIN (SELECT student_id, MAX(grade) AS hgrade FROM Enrollments GROUP BY student_id) e2 WHERE e1.student_id = e2.student_id AND e1.grade=e2.hgrade) sub GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) AS course_id, grade FROM ( SELECT student_id, course_id, grade, MAX(grade) OVER(PARTITION BY student_id) AS max_grade FROM Enrollments ) t WHERE grade = max_grade GROUP BY student_id, grade ORDER BY student_id
SELECT student_id, MIN(course_id) AS course_id, grade FROM ( SELECT sub.student_id, Enrollments.course_id, sub.grade FROM ( SELECT student_id, MAX(grade) AS grade FROM Enrollments GROUP BY student_id ) sub INNER JOIN Enrollments ON sub.student_id = Enrollments.student_id AND sub.grade = Enrollments.grade ) sub1 GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN ( SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id ) GROUP BY student_id, grade ORDER BY student_id
SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, MAX(grade) AS grade FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, MAX(grade) AS max_grade FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id ASC
SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id) GROUP BY 1 ORDER BY 1
SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id, grade ORDER BY student_id
SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id,MAX(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN(SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id, grade ORDER BY student_id
SELECT student_id, MIN(course_id) as course_id, grade FROM Enrollments WHERE (student_id, grade) IN ( SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) as course_id, grade FROM Enrollments WHERE (student_id, grade) IN ( SELECT student_id, Max(grade) as max_grade FROM Enrollments E2 GROUP BY student_id ) GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) course_id, grade FROM (SELECT student_id, course_id, grade, rank() over( partition by student_id order by grade desc) rnk FROM Enrollments ) a where rnk = 1 group by student_id order by student_id
SELECT student_id, MIN(course_id) course_id, grade FROM Enrollments WHERE (student_id, grade) IN ( SELECT student_id, MAX(grade) FROM Enrollments GROUP BY 1 ) GROUP BY 1 ORDER BY 1
SELECT student_id, MIN(course_id) course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, max(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) course_id, grade FROM Enrollments a WHERE (student_id, grade) IN ( SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id ) GROUP BY student_id ORDER BY student_id
SELECT student_id, MIN(course_id) course_id, grade FROM Enrollments a WHERE (student_id, grade) IN ( SELECT student_id, MAX(grade) FROM Enrollments GROUP BY student_id ) GROUP BY student_id, grade ORDER BY student_id
SELECT student_id, course_id, grade FROM ( SELECT *, MAX(grade) OVER(PARTITION BY student_id) AS max_grade, RANK() OVER(PARTITION BY student_id, grade ORDER BY course_id) AS rk FROM Enrollments ) temp WHERE grade = max_grade AND rk = 1 ORDER BY student_id
SELECT student_id, course_id, grade FROM ( SELECT *, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) rnk FROM enrollments)T1 WHERE rnk = 1
SELECT student_id, course_id, grade FROM ( SELECT *, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS rnk FROM Enrollments )t WHERE rnk = 1 ORDER BY 1
SELECT student_id, course_id, grade FROM ( SELECT *, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS ranking FROM Enrollments e ) a WHERE ranking = 1
SELECT student_id, course_id, grade FROM ( SELECT student_id , course_id , grade , ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS rnk FROM enrollments ) AS derived WHERE rnk=1 ORDER BY student_id
SELECT student_id, course_id, grade FROM ( SELECT student_id, course_id, grade, RANK() OVER ( PARTITION BY student_id ORDER BY grade DESC, course_id ASC ) AS rnk FROM Enrollments ) AS new_enr WHERE rnk = 1 ORDER BY student_id ASC
SELECT student_id, course_id, grade FROM ( SELECT student_id, course_id, grade, RANK() OVER ( PARTITION BY student_id ORDER BY grade DESC, course_id ASC ) AS rnk FROM Enrollments ) new_enr WHERE rnk = 1 ORDER BY student_id ASC
SELECT student_id, course_id, grade FROM ( SELECT student_id, course_id, grade, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS r FROM Enrollments ) AS t WHERE r = 1 ORDER BY student_id
SELECT student_id, course_id, grade FROM ( SELECT student_id, course_id, grade, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) as rnk FROM Enrollments ) a WHERE rnk = 1
SELECT student_id, course_id, grade FROM ( SELECT student_id, course_id, grade, ROW_NUMBER () OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS rw FROM enrollments) t WHERE rw = 1
SELECT student_id, course_id, grade FROM ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS 'r_num' FROM Enrollments ) t WHERE t.r_num = 1 ORDER BY 1
SELECT student_id, course_id, grade FROM ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) as RN FROM Enrollments ) as NT WHERE NT.RN=1
SELECT student_id, course_id, grade FROM ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) rk FROM Enrollments ) e WHERE rk = 1
SELECT student_id, course_id, grade FROM (SELECT *, Dense_rank() over(partition by student_id order by grade desc, course_id asc) AS rnk FROM Enrollments) t WHERE rnk=1 ORDER BY 1
SELECT student_id, course_id, grade FROM (SELECT *, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) rnk FROM Enrollments) a WHERE rnk=1
SELECT student_id, course_id, grade FROM (SELECT *, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) as rnk FROM Enrollments) t WHERE rnk = 1 ORDER BY 1
SELECT student_id, course_id, grade FROM (SELECT *, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS r FROM Enrollments) a WHERE r = 1 ORDER BY student_id ASC
SELECT student_id, course_id, grade FROM (SELECT *, ROW_NUMBER() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS 'grade_rank' FROM Enrollments ) AS TABLE1 WHERE grade_rank = 1
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, DENSE_RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) as rnk FROM Enrollments ) s WHERE rnk = 1 ORDER BY student_id ASC
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, DENSE_RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS rnk FROM Enrollments) e WHERE rnk=1 ORDER BY student_id
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, DENSE_RANK() OVER(partition by student_id ORDER BY grade DESC, course_id ) AS r FROM Enrollments) AS TEMP WHERE r = 1 ORDER BY student_id
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, Dense_rank() OVER( partition BY student_id ORDER BY grade DESC, course_id asc) AS rnk FROM enrollments) a WHERE a.rnk = 1
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS rnk FROM Enrollments) t WHERE rnk = 1
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC,course_id ASC) as grade_rnk FROM Enrollments) temp WHERE temp.grade_rnk = 1
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS rnk FROM Enrollments) t WHERE rnk=1 ORDER BY student_id
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, ROW_NUMBER() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS grade_rank FROM Enrollments) sub WHERE grade_rank = 1 ORDER BY student_id
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade, ROW_NUMBER()OVER(partition by student_id ORDER BY grade DESC, course_id ASC) AS rnk FROM enrollments) a WHERE rnk = 1 ORDER BY student_id
SELECT student_id, course_id, grade FROM (SELECT student_id, course_id, grade,rank() OVER (partition by student_id order by grade DESC, course_id) AS rnk FROM enrollments order by student_id, course_id) a where rnk =1
SELECT student_id, course_id, grade FROM( SELECT student_id, course_id, grade, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC) as rank_score, RANK() OVER(PARTITION BY student_id, grade ORDER BY course_id) as rank_course FROM enrollments ) sub WHERE rank_score = 1 AND rank_course = 1
SELECT student_id, course_id, grade FROM( SELECT student_id, course_id, grade, rank() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ) as rnk FROM Enrollments) as t WHERE rnk = 1 ORDER BY student_id
SELECT student_id, course_id, grade FROM(SELECT student_id, course_id, grade, DENSE_RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) AS 'Rank' FROM Enrollments) AS t GROUP BY student_id
SELECT student_id, min(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, Max(grade) FROM Enrollments GROUP BY student_id) GROUP BY student_id ORDER BY student_id
SELECT student_id,course_id,grade FROM ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ) AS R FROM Enrollments) as tb1 WHERE tb1.R = 1
SELECT student_id,course_id,grade FROM (SELECT student_id, course_id, grade, DENSE_RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS Grade_Rank FROM Enrollments) A WHERE A.Grade_Rank=1
SELECT student_id,course_id,grade FROM (SELECT student_id, course_id, grade, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS Grade_Rank FROM Enrollments) A WHERE A.Grade_Rank=1
SELECT student_id,course_id,grade FROM( SELECT student_id,course_id,grade, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) ranks FROM Enrollments )t WHERE ranks=1 ORDER BY student_id
SELECT t.student_id, t.course_id, t.grade FROM (SELECT student_id, course_id, grade, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) rnk FROM Enrollments ) t WHERE rnk=1 ORDER BY t.student_id ASC
SELECT t.student_id, t.course_id, t.grade FROM (SELECT student_id, course_id, grade, row_number() over (partition by student_id order by grade desc, course_id asc) as r FROM Enrollments) t WHERE t.r=1 ORDER BY t.student_id asc
SELECT t.student_id,t.course_id,t.grade FROM (SELECT *,(dense_rank() OVER (PARTITION BY student_id ORDER BY grade DESC,course_id asc)) AS graderank FROM Enrollments) AS t WHERE t.graderank =1 ORDER BY 1
SELECT t1.student_id, MIN(t1.course_id) AS course_id, t1.grade FROM (SELECT student_id, course_id, grade, MAX(grade) OVER(PARTITION BY student_id) AS Max_grade FROM Enrollments) t1 WHERE t1.grade = t1.Max_grade GROUP BY t1.student_id ORDER BY t1.student_id
SELECT tab.student_id, tab.course_id, tab.grade FROM (SELECT student_id, course_id, grade, row_number() over (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS r FROM Enrollments) tab WHERE tab.r =1 ORDER BY tab.student_id ASC
SELECT tb1.student_id, tb1.course_id, tb1.grade FROM (SELECT student_id, course_id, grade, row_number() over (partition by student_id order by grade desc, course_id asc) as r FROM Enrollments) tb1 WHERE r=1
Select Student_id , Course_ID , Grade From (Select student_ID , Course_ID , grade , rank() Over(Partition by Student_ID ORder by Grade desc,course_ID asc) as rnk From Enrollments) a Where rnk = 1 Order by Student_id asc
Select Student_id , Course_ID , Grade From (Select student_ID , Course_ID , grade , rank() Over(Partition by student_id order by grade desc,course_id ) as ranks From Enrollments) a where ranks=1
Select student_id, course_id, grade FROM ( Select student_id, course_id, grade, DENSE_RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) as rank_stud FROM Enrollments) as temp_table WHERE rank_stud = 1 GROUP BY student_id ORDER BY student_id
Select student_id, course_id, grade From ( Select student_id, course_id, grade, row_number() over(partition by student_id order by grade desc, course_id asc) as filter_index From Enrollments )a where filter_index = 1 order by 1
Select student_id, course_id, grade From (Select *, rank()over(partition by student_id Order by grade desc, course_id asc) as rank_grade From Enrollments) t Where rank_grade = 1
Select student_id, course_id, max(grade) as grade from( Select student_id, course_id, grade from enrollments group by 1, 2 order by 3 desc, 2 asc) a group by 1 order by 1
Select student_id, min(course_id) as course_id, grade From Enrollments WHERE (student_id, grade) in ( Select student_id, max(grade) as grade From Enrollments Group By student_id ) Group By student_id Order By student_id
Select student_id,MIN(course_id) as course_id, grade from enrollments where (student_id,grade) IN ( Select student_id, Max(grade) from enrollments group by student_id ) group by student_id, grade order by student_id
Select student_id,course_id, grade From (Select student_id, course_id, grade, MIN(course_id) OVER(PARTITION BY student_id) as min_course_id From (Select *, MAX(grade) OVER(PARTITION BY student_id) as max_grade From Enrollments) A where grade=max_grade) B where min_course_id=course_id
Select student_id,course_id,grade from ( Select student_id,course_id,grade,rank() over(partition by student_id order by grade desc,course_id asc) as Ranks from enrollments ) a where Ranks=1
WITH CTE AS ( SELECT student_id, course_id, grade, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) as r FROM Enrollments ) SELECT student_id, course_id, grade FROM CTE WHERE r = 1
WITH CTE AS ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER(partition by student_id order by grade desc, course_id) as row_val FROM Enrollments ) SELECT student_id, course_id, grade FROM CTE WHERE row_val = 1 order by student_id
WITH CTE as( SELECT *,dense_rank() OVER (partition by student_id order by grade desc) as grade_rank FROM Enrollments) SELECT student_id, MIN(course_id) AS course_id, grade FROM CTE WHERE grade_rank =1 GROUP BY student_id ORDER BY student_id ASC
WITH CTE1 AS ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS ct FROM Enrollments) SELECT student_id, course_id, grade FROM CTE1 WHERE ct = 1 ORDER BY student_id
WITH CTE1 AS (SELECT student_id, MAX(grade) AS gr FROM Enrollments GROUP BY student_id) SELECT e.student_id, MIN(e.course_id) AS course_id, e.grade FROM CTE1 AS c JOIN Enrollments AS e ON c.student_id = e.student_id AND c.gr = e.grade GROUP BY e.student_id, e.grade ORDER BY e.student_id
WITH Max_grade AS ( SELECT student_id, MAX(grade) AS max_grade FROM Enrollments GROUP BY student_id ) SELECT e.student_id, MIN(course_id) AS course_id, grade FROM Enrollments AS e JOIN Max_grade AS m ON e.student_id = m.student_id AND e.grade = m.max_grade GROUP BY e.student_id, e.grade ORDER BY student_id
WITH RANK_TABLE AS( SELECT *, DENSE_RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) AS RANK_ FROM Enrollments ) SELECT student_id, course_id, grade FROM RANK_TABLE WHERE RANK_ = 1
WITH RANK_TABLE AS( SELECT *, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) AS RANK_ FROM Enrollments ) SELECT student_id, course_id, grade FROM RANK_TABLE WHERE RANK_ = 1
WITH T1 AS ( SELECT student_id, MAX(grade) grade FROM Enrollments GROUP BY student_id ) SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments WHERE (student_id, grade) IN (SELECT student_id, grade FROM T1) GROUP BY student_id ORDER BY student_id ASC
WITH TEMP AS (SELECT STUDENT_ID, COURSE_ID, GRADE, RANK() OVER (PARTITION BY STUDENT_ID ORDER BY GRADE DESC,COURSE_ID) AS RNK FROM ENROLLMENTS) SELECT STUDENT_ID, COURSE_ID, GRADE FROM TEMP WHERE RNK=1 ORDER BY 1
WITH comp AS ( SELECT *, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) AS rnk FROM Enrollments ORDER BY student_id ) SELECT student_id, course_id, grade FROM comp WHERE rnk = 1
WITH cte AS ( SELECT *, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) rn FROM Enrollments ) SELECT student_id, course_id, grade FROM cte WHERE rn = 1
WITH cte AS ( SELECT student_id ,course_id ,grade ,RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) rn_a FROM Enrollments ) SELECT student_id ,course_id ,grade FROM cte WHERE rn_a = 1 ORDER BY student_id
WITH cte AS (SELECT student_id,course_id, grade, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) AS rnk FROM Enrollments) SELECT student_id, course_id, grade FROM cte WHERE rnk=1 ORDER BY student_id
WITH cte AS( SELECT * FROM( SELECT *, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC,course_id) AS rank_grade FROM Enrollments ) temp WHERE rank_grade = 1 ) SELECT a.student_id,a.course_id,a.grade FROM Enrollments a JOIN cte b ON a.student_id = b.student_id AND a.course_id = b.course_id ORDER BY student_id
WITH cte AS( SELECT student_id, course_id, grade, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC,course_id) AS rnk FROM Enrollments ORDER BY 1) SELECT student_id, course_id, grade FROM cte WHERE rnk = 1
WITH cte1 as (SELECT student_id, course_id, grade, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) rnk FROM Enrollments) SELECT student_id, course_id, grade FROM cte1 WHERE rnk=1
WITH d as (SELECT student_id, course_id, grade, row_number() over (partition by student_id order by grade desc, course_id asc) as dr FROM Enrollments) SELECT d.student_id, d.course_id as course_id, d.grade FROM d WHERE dr = 1 ORDER BY 1
WITH high_grade AS ( SELECT student_id, MAX(grade) AS grade FROM Enrollments GROUP BY student_id ) SELECT H.student_id, MIN(E.course_id) AS course_id, H.grade FROM Enrollments AS E JOIN high_grade AS H ON E.student_id = H.student_id AND H.grade = E.grade GROUP BY H.student_id, H.grade ORDER BY student_id
WITH main AS ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) AS ranking FROM Enrollments ) SELECT student_id, course_id, grade FROM main WHERE ranking = 1
WITH max AS (SELECT student_id, MAX(grade) AS max_grade FROM Enrollments GROUP BY student_id) SELECT e.student_id, MIN(e.course_id) course_id, MAX(e.grade) grade FROM Enrollments e JOIN max m ON e.grade = m.max_grade and e.student_id = m.student_id GROUP BY e.student_id ORDER BY e.student_id
WITH max_grades AS ( SELECT student_id, course_id, grade, dense_rank() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS ranked FROM Enrollments ) SELECT student_id, course_id, grade FROM max_grades WHERE ranked=1 ORDER BY student_id ASC
WITH rank_tb AS ( SELECT student_id, course_id, grade, RANK () OVER (PARTITION BY student_id ORDER BY grade DESC,course_id ASC) as rnk FROM Enrollments ) SELECT student_id, course_id, grade FROM rank_tb WHERE rnk = 1
WITH ranked_courses AS ( SELECT student_id, course_id, grade, DENSE_RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS grade_rank FROM Enrollments GROUP BY student_id, course_id ) SELECT student_id, course_id, grade FROM ranked_courses WHERE grade_rank = 1
WITH ranked_table AS (SELECT e.*, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) as rank_num FROM enrollments AS e) SELECT student_id, course_id, grade FROM ranked_table WHERE rank_num = 1
WITH ranking AS ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) AS row_num FROM enrollments) SELECT student_id, course_id, grade FROM ranking WHERE row_num = 1 ORDER BY student_id ASC
WITH res AS ( SELECT student_id, course_id, grade, DENSE_RANK() OVER(PARTITION BY student_id ORDER BY grade DESC,course_id) AS rnk FROM Enrollments ) SELECT student_id, course_id, grade FROM res WHERE rnk = 1
WITH sub AS ( SELECT student_id, course_id, grade, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC) AS graderank FROM Enrollments ) SELECT student_id, MIN(course_id) AS course_id, MAX(grade) AS grade FROM sub WHERE graderank=1 GROUP BY student_id ORDER BY student_id ASC
WITH t AS ( SELECT student_id, MAX(grade) max_g FROM enrollments GROUP BY student_id ) SELECT e.student_id student_id, MIN(course_id) course_id, e.grade grade FROM enrollments e JOIN t ON e.student_id=t.student_id AND e.grade=t.max_g GROUP BY student_id, grade ORDER BY student_id
WITH t AS ( SELECT student_id, course_id, grade, RANK() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id ASC) as r FROM Enrollments ) SELECT student_id, course_id, grade FROM t WHERE r = 1 ORDER BY student_id
WITH t AS (SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS number FROM Enrollments) SELECT student_id, course_id, grade FROM t WHERE number =1
WITH t AS (SELECT student_id, course_id, grade, Rank() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS number FROM Enrollments) SELECT student_id, course_id, grade FROM t WHERE number =1
WITH t AS (SELECT student_id, max(grade) AS maxGrade FROM Enrollments GROUP BY student_id) SELECT a.student_id AS student_id, min(a.course_id) AS course_id, a.grade AS grade FROM Enrollments AS a JOIN t ON a.student_id=t.student_id WHERE a.grade=t.maxGrade GROUP BY a.student_id ORDER BY a.student_id
WITH t AS( SELECT student_id, MAX(grade) as highest_grade FROM Enrollments GROUP BY student_id ) SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments e WHERE (student_id, grade) IN (SELECT * FROM t) GROUP BY student_id ORDER BY student_id
WITH t AS( SELECT student_id, MAX(grade) as highest_grade FROM Enrollments GROUP BY student_id ) SELECT student_id, MIN(course_id) AS course_id, grade FROM Enrollments e WHERE (student_id, grade) IN (SELECT * FROM t) GROUP BY student_id, grade ORDER BY student_id
WITH t1 AS(SELECT *, DENSE_RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) rnk FROM Enrollments) SELECT student_id, course_id, grade FROM t1 WHERE rnk = 1 ORDER BY student_id
WITH table1 AS (SELECT student_id, MAX(grade) AS max_grade FROM Enrollments GROUP BY 1) SELECT E.student_id, MIN(course_id) AS course_id, grade FROM Enrollments E JOIN table1 ON E.student_id = table1.student_id AND E.grade = table1.max_grade GROUP BY 1, 3 ORDER BY 1
WITH temp AS ( SELECT student_id, MAX(grade) AS max_grade FROM enrollments GROUP BY student_id) SELECT enrollments.student_id, MIN(course_id) AS course_id, max_grade AS grade FROM enrollments JOIN temp USING(student_id) WHERE grade = max_grade GROUP BY enrollments.student_id ORDER BY enrollments.student_id
WITH temp AS ( SELECT student_id, course_id, grade, ROW_NUMBER() OVER (PARTITION BY student_id ORDER BY grade DESC, course_id) AS 'rnk' FROM Enrollments ) SELECT student_id, course_id, grade FROM temp WHERE rnk = 1
WITH temp_rank AS( SELECT *, RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) AS ranking FROM enrollments ) SELECT student_id, course_id, grade FROM temp_rank WHERE ranking = 1
With Ranking as ( SELECT student_id, course_id, grade, rank() over (partition by student_id order by grade desc) as Ranks FROM Enrollments ) SELECT student_id, min(course_id) as course_id, grade FROM Ranking WHERE Ranks = 1 GROUP BY student_id, grade
With cte AS (SELECT student_id,course_id,grade,rank() over(partition by student_id order by grade desc,course_id asc)num FROM Enrollments) SELECT student_id,course_id,grade FROM cte WHERE num=1
select A.student_id, min(Enrollments.course_id) as course_id, A.max_grade as grade from Enrollments inner join (select student_id, max(grade) as max_grade from Enrollments group by student_id) A on A.student_id = Enrollments.student_id and A.max_grade=Enrollments.grade group by A.student_id, A.max_grade order by A.student_id asc
select Enrollments.student_id, min(Enrollments.course_id) as course_id, Enrollments.grade from Enrollments inner join (select student_id, max(grade) as max_grade from Enrollments group by student_id) as max_grades on Enrollments.student_id = max_grades.student_id AND Enrollments.grade = max_grade group by student_id order by student_id
select T.student_id, min(T.course_id) as 'course_id',T.grade from ( select student_id, course_id, grade from Enrollments where (student_id,grade) in ( select student_id, max(grade) as highest_grade from Enrollments group by student_id ) ) as T group by T.student_id order by T.student_id
select a.student_id, a.course_id, a.grade from ( select student_id, course_id, grade, dense_rank() over (partition by student_id order by grade desc, course_id asc) as rnk from Enrollments ) a where a.rnk = 1
select a.student_id, a.course_id, a.grade from (SELECT *, row_number() over (partition by student_id order by grade desc, course_id asc) as r FROM Enrollments) a where r=1 order by student_id
select a.student_id, a.course_id,b.grade from (select student_id,course_id,rank() over(partition by student_id order by grade desc, course_id asc) as rk from Enrollments) a left join Enrollments b on a.student_id=b.student_id and a.course_id=b.course_id where rk=1
select a.student_id, min(a.course_id) as course_id, min(a.grade) as grade from enrollments as a inner join ( select student_id, max(grade) as grade from enrollments group by student_id ) as b on a.student_id=b.student_id and a.grade=b.grade group by a.student_id order by a.student_id
select a.student_id, min(b.course_id) as course_id, a.grade from (select student_id, max(grade) as grade from Enrollments group by student_id)a left join Enrollments b on a.student_id = b.student_id and a.grade = b.grade group by 1 order by student_id
select b.student_id , min(b.course_id) course_id, b.grade from Enrollments b right join (select student_id, max(grade) mgrade from Enrollments group by student_id order by student_id) a on a.student_id = b.student_id and a.mgrade = b.grade group by b.student_id, b.grade order by b.student_id, b.course_id
select b.student_id, min(b.course_id) course_id, b.grade from Enrollments b join (select distinct student_id,max(grade) over(partition by student_id) as max_grade from Enrollments) a on a.student_id=b.student_id where b.grade=a.max_grade group by b.student_id order by b.student_id asc, b.course_id asc
select c.student_id, c.course_id,c.grade from ( select e.student_id, e.course_id,e.grade, row_number() over(partition by e.student_id order by e.course_id) as row_num from enrollments e inner join ( select student_id, max(grade) as grade from enrollments e group by student_id )b on e.student_id = b.student_id and e.grade = b.grade ) c where row_num = 1
select distinct student_id, MIN(course_id) course_id, grade from Enrollments where (student_id, grade) in (select student_id, MAX(grade) from Enrollments group by 1) group by 1 order by 1
select distinct student_id, MIN(course_id) course_id, grade from Enrollments where (student_id, grade) in (select student_id, MAX(grade) from Enrollments group by 1) group by 1,3 order by 1
select distinct student_id, course_id, grade from ( select student_id, course_id, grade, dense_rank() over (partition by student_id order by grade desc, course_id) rnk from enrollments) t where rnk = 1
select distinct student_id, course_id, grade from ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id) as rank_grade from Enrollments ) as v where rank_grade=1 order by student_id
select distinct student_id, first_value(course_id) over (partition by student_id order by grade desc, course_id asc) as course_id, first_value(grade) over (partition by student_id order by grade desc, course_id asc) as grade from Enrollments e order by 1
select distinct(s.student_id) student_id, min(s.course_id) course_id, s.grade grade from Enrollments as s, (select distinct(student_id), max(grade) as max_g from Enrollments group by student_id) as m where s.student_id = m.student_id and s.grade = m.max_g group by s.student_id order by s.student_id
select e.student_id , e.course_id , e.grade from (select student_id , course_id , grade, rank() over(partition by student_id order by grade desc, course_id asc) as rn from Enrollments ) e where e.rn=1 order by 1
select e.student_id ,min(e.course_id) as course_id ,e.grade from ( select distinct student_id ,Max(grade) as highest_grade from enrollments group by 1 ) t1 join enrollments e on t1.student_id = e.student_id and t1.highest_grade = e.grade group by e.student_id, e.grade order by e.student_id
select e.student_id, min(e.course_id) as course_id, e.grade from Enrollments e join ( select e1.student_id, e1.course_id, max(e1.grade) as max_grade from Enrollments e1 group by e1.student_id ) as res on res.student_id = e.student_id and e.grade = res.max_grade group by e.student_id order by e.student_id
select e.student_id, min(e.course_id) as course_id, e.grade from Enrollments e join ( select student_id, max(grade) as grade from Enrollments group by student_id )base on e.student_id = base.student_id and e.grade = base.grade group by e.student_id order by e.student_id asc
select e.student_id, min(e.course_id) course_id, e.grade from Enrollments e right join (select student_id, max(grade) as maxg from Enrollments group by student_id order by student_id) a on (e.student_id,e.grade) = (a.student_id,a.maxg) group by e.student_id
select e.student_id, min(e.course_id) course_id, e.grade from enrollments e inner join ( select student_id, max(grade) grade from enrollments group by student_id ) k on e.student_id = k.student_id where k.grade = e.grade group by e.student_id, e.grade order by e.student_id
select q.student_id,min(q.course_id) as course_id,q.grade from Enrollments q where (q.student_id,q.grade) in ( select student_id,max(grade) as grade from Enrollments group by student_id ) group by student_id,grade order by student_id
select s.student_id, min(s.course_id) course_id, s.grade from Enrollments s inner join ( select student_id, max(grade) mx from enrollments group by 1) a on s.student_id=a.student_id and s.grade =a.mx group by 1 order by 1
select student_id , course_id , grade from ( select student_id , course_id , grade, dense_rank () over (partition by student_id order by grade desc,course_id asc) as dr from Enrollments ) as sub where dr = 1 order by student_id
select student_id , course_id , grade from ( select student_id , course_id , grade, dense_rank () over (partition by student_id order by grade desc,course_id asc) dr from Enrollments ) as t where t.dr = 1 order by student_id
select student_id , course_id , grade from ( select student_id , course_id , grade, dense_rank () over (partition by student_id order by grade desc,course_id asc) dr from Enrollments ) t where t.dr = 1 order by t.student_id
select student_id , course_id , grade from (Select *,rank()over(partition by student_id order by grade desc,course_id) as r from Enrollments) a where a.r=1
select student_id , course_id , grade from (select student_id , course_id , grade , dense_rank() over (partition by student_id order by grade desc, course_id asc) as rnk from enrollments) a where rnk = 1
select student_id , course_id , grade from (select student_id , course_id , grade , rank() over (partition by student_id order by grade desc, course_id asc) as rnk from Enrollments) a where rnk = 1
select student_id , min(course_id) as "course_id" ,grade from ( select student_id , course_id ,grade,rank() over (partition by student_id order by grade desc) rk from Enrollments ) t where t.rk=1 group by student_id
select student_id , min(course_id) as course_id , grade from ( select student_id , course_id ,grade, dense_rank() over(partition by student_id order by grade desc) as part from Enrollments) f where part = 1 group by student_id
select student_id , min(course_id) as course_id , grade from enrollments where (student_id , grade) in (select student_id ,max(grade) as grade from enrollments group by 1) group by student_id , grade order by student_id
select student_id, MIN(course_id) as course_id, grade from Enrollments where (student_id, grade) IN (select student_id, MAX(grade) from Enrollments group by 1 ) group by 1, 3 order by 1
select student_id, course_id , grade from (select *,rank() over(partition by student_id order by grade desc,course_id asc) as ranker from enrollments) as X where ranker=1
select student_id, course_id ,grade from ( select student_id, course_id , grade,rank() over(partition by student_id order by grade desc,course_id asc) as rnk from enrollments ) A where rnk =1
select student_id, course_id, grade from ( SELECT STUDENT_ID ,course_id ,grade ,rank() over(partition by student_id order by grade desc,course_id) as r from enrollments ) abc where r=1 order by student_id
select student_id, course_id, grade from ( select *, rank() over (partition by student_id order by grade desc, course_id) as ranks from enrollments ) temp where ranks = 1
select student_id, course_id, grade from ( select *, rank() over (partition by student_id order by grade desc, course_id) as rk from Enrollments)a where a.rk=1
select student_id, course_id, grade from ( select *, rank() over (partition by student_id order by grade desc, course_id) as xrank from Enrollments ) z where z.xrank = 1
select student_id, course_id, grade from ( select *, rank() over(partition by student_id order by grade desc, course_id asc) as ranking from Enrollments e) a where ranking =1
select student_id, course_id, grade from ( select *, rank() over(partition by student_id order by grade desc, course_id) as ranks from Enrollments) ranking where ranks = 1
select student_id, course_id, grade from ( select *, row_number() over(partition by student_id order by grade desc, course_id asc) rn from Enrollments order by 1 asc, 4 asc) as tbl where rn = 1
select student_id, course_id, grade from ( select rank() over (partition by student_id order by grade desc, course_id asc) rankg, e.* from enrollments e) r where r.rankg = 1
select student_id, course_id, grade from ( select student_id, course_id, grade, RANK() over (partition by student_id order by grade desc,course_id asc) grade_rank from Enrollments order by student_id, course_id ) al where grade_rank = 1
select student_id, course_id, grade from ( select student_id, course_id, grade, RANK() over( partition by student_id order by grade desc ,course_id asc ) as highest_grade from Enrollments ) as t where t.highest_grade=1
select student_id, course_id, grade from ( select student_id, course_id, grade, dense_rank() over(partition by student_id order by grade desc, course_id asc) as rnk from enrollments ) as temp where rnk =1
select student_id, course_id, grade from ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) as grade_rank from enrollments ) t where grade_rank = 1
select student_id, course_id, grade from ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) as grade_rank from enrollments ) t where grade_rank = 1 order by student_id asc
select student_id, course_id, grade from ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) as rank_num from enrollments) result where rank_num = 1
select student_id, course_id, grade from ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) as rnk from Enrollments) t where rnk = 1
select student_id, course_id, grade from ( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id) as r from Enrollments) as a where r=1
select student_id, course_id, grade from ( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id) as rnk from Enrollments ) x where rnk = 1
select student_id, course_id, grade from ( select student_id, course_id, grade, row_number() over (partition by student_id order by grade desc, course_id asc) as rank_val from Enrollments) a where a.rank_val = 1 order by student_id
select student_id, course_id, grade from ( select student_id, course_id, grade, row_number() over(partition by student_id order by grade desc, course_id asc) as rnk from enrollments ) as t1 where rnk = 1
select student_id, course_id, grade from ( select student_id, course_id, grade, row_number() over(partition by student_id order by grade desc, course_id) as rnk from enrollments e ) temp where rnk = 1 group by student_id order by student_id
select student_id, course_id, grade from (select * , dense_rank() over(partition by student_id order by grade desc, course_id) as rnk from Enrollments) a where a.rnk = 1
select student_id, course_id, grade from (select *, RANK() OVER (partition by student_id order by grade desc, course_id asc ) as ranking from Enrollments) a where ranking = 1 order by student_id asc
select student_id, course_id, grade from (select *, dense_rank() over(partition by student_id order by grade desc, course_id) as grk from enrollments) as t where grk=1 order by student_id
select student_id, course_id, grade from (select *, rank () over (partition by student_id order by grade desc, course_id) as rk from Enrollments) a where rk=1 order by student_id
select student_id, course_id, grade from (select *, rank() over(partition by student_id order by grade desc, course_id asc) as r from enrollments) x where r=1 order by 1
select student_id, course_id, grade from (select *, rank() over(partition by student_id order by grade desc, course_id) r from enrollments) temp where temp.r = 1 order by student_id
select student_id, course_id, grade from (select *, rank() over(partition by student_id order by grade desc, course_id) ranked from Enrollments) temp where ranked = 1
select student_id, course_id, grade from (select *, rank()over(partition by student_id order by grade desc, course_id) as ranks from enrollments) as temp where ranks = 1 order by student_id
select student_id, course_id, grade from (select *, row_number() OVER(Partition by student_id order by grade desc, course_id asc) as rnk from Enrollments) t where rnk = 1
select student_id, course_id, grade from (select *, row_number() over (partition by student_id order by grade desc, course_id asc) as grade_rank from Enrollments )t where grade_rank = 1 order by student_id
select student_id, course_id, grade from (select *, row_number() over(partition by student_id order by grade desc, course_id asc) as rn from enrollments )a where rn=1 order by student_id
select student_id, course_id, grade from (select student_id, course_id, grade, RANK() over (partition by student_id order by grade desc, course_id) as ranking from Enrollments) t where t.ranking = 1
select student_id, course_id, grade from (select student_id, course_id, grade, dense_rank() over (partition by student_id order by grade desc , course_id asc) as 'Rnk' from Enrollments) as sub where Rnk = 1 order by student_id asc
select student_id, course_id, grade from (select student_id, course_id, grade, dense_rank() over (partition by student_id order by grade desc, course_id asc ) as 'Rnk' from Enrollments) as sub where Rnk = 1 order by student_id asc
select student_id, course_id, grade from (select student_id, course_id, grade, dense_rank() over (partition by student_id order by grade desc, course_id asc) as rnk from enrollments) as cte where rnk = 1
select student_id, course_id, grade from (select student_id, course_id, grade, dense_rank() over( partition by student_id order by grade desc, course_id asc ) as rnk from Enrollments ) as t1 where rnk = 1 order by student_id asc
select student_id, course_id, grade from (select student_id, course_id, grade, dense_rank() over(partition by student_id order by grade desc, course_id asc) as rnk from Enrollments)a where rnk = 1
select student_id, course_id, grade from (select student_id, course_id, grade, dense_rank() over(partition by student_id order by grade desc, course_id) as ranked from Enrollments) sub where ranked=1
select student_id, course_id, grade from (select student_id, course_id, grade, dense_rank() over(partition by student_id order by grade desc, course_id) as ranked from Enrollments) sub where sub.ranked=1
select student_id, course_id, grade from (select student_id, course_id, grade, dense_rank()over(partition by student_id order by grade desc, course_id asc) as rnk from Enrollments) a where rnk =1
select student_id, course_id, grade from (select student_id, course_id, grade, max(grade) over(partition by student_id ) as mgrade from Enrollments order by student_id asc, course_id asc) temp where grade = mgrade group by student_id
select student_id, course_id, grade from (select student_id, course_id, grade, rank() OVER (PARTITION BY student_id order by grade desc,course_id) as rank1 from Enrollments) c where rank1 = 1 order by student_id
select student_id, course_id, grade from (select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) ranking from Enrollments)t where ranking = 1
select student_id, course_id, grade from (select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id) as ranking from Enrollments) as t where ranking = 1 order by student_id
select student_id, course_id, grade from (select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id asc) as rk from Enrollments) tmp where rk=1 order by 1
select student_id, course_id, grade from (select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id) as ranked from Enrollments) sub where sub.ranked=1
select student_id, course_id, grade from (select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id) rnk from Enrollments) a where rnk = 1
select student_id, course_id, grade from (select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id) rnk from Enrollments) t where rnk = 1 order by student_id
select student_id, course_id, grade from (select student_id, course_id, grade, rank()over(partition by student_id order by grade desc, course_id) as rnk from Enrollments)cte where rnk = 1 order by 1
select student_id, course_id, grade from (select student_id, course_id, grade, row_number() over (partition by student_id order by grade desc, course_id) as rnk from enrollments) a where rnk = 1 order by student_id
select student_id, course_id, grade from (select student_id, course_id, grade, row_number() over(partition by student_id order by grade desc, course_id asc) as num from Enrollments) a where num=1
select student_id, course_id, grade from (select student_id, course_id, grade, row_number() over(partition by student_id order by grade desc, course_id) as rn from Enrollments ) A where rn = 1
select student_id, course_id, grade from (select student_id, course_id, grade, row_number()over(partition by student_id order by grade desc,course_id) rn from Enrollments) T where rn = 1
select student_id, course_id, grade from (select student_id, course_id, grade,rank() over (partition by student_id order by grade desc,course_id) as rk from enrollments) t where rk =1 order by 1
select student_id, course_id, grade from (select student_id, rank() over(partition by student_id order by grade DESC, course_id) as rn, course_id, grade from Enrollments) t1 where t1.rn = 1 order by student_id
select student_id, course_id, grade from (select student_id,course_id,grade,row_number() over (partition by student_id order by grade desc,course_id) as highestGrade from Enrollments) as enrls where highestGrade = 1
select student_id, course_id, grade from( select * , row_number() over (partition by student_id order by grade desc, course_id asc) as rk from enrollments) as t where rk=1 order by student_id asc
select student_id, course_id, grade from( select *, dense_rank() over (partition by student_id order by grade desc, course_id) as rnk from Enrollments) as cte where rnk = 1
select student_id, course_id, grade from( select *, rank() over (partition by student_id order by grade desc, course_id) as rnk from enrollments) t where rnk=1 order by 1
select student_id, course_id, grade from( select *, row_number() over (partition by student_id order by grade desc, course_id asc) as rn from enrollments ) temp where rn = 1 order by student_id
select student_id, course_id, grade from( select student_id, course_id, grade, dense_rank()over(partition by student_id order by grade desc, course_id asc) as grade_rank from enrollments) cte where grade_rank = 1 order by student_id
select student_id, course_id, grade from( select student_id, course_id, grade, dense_rank()over(partition by student_id order by grade desc, course_id asc) as graderank from enrollments )a where graderank=1
select student_id, course_id, grade from( select student_id, course_id, grade, dense_rank()over(partition by student_id order by grade desc, course_id) as rnk from Enrollments )t where rnk=1 order by student_id
select student_id, course_id, grade from( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id) as grade_rank from Enrollments ) ranked_data where grade_rank=1 order by student_id
select student_id, course_id,grade from ( select student_id, course_id,grade, dense_rank() over(partition by student_id order by grade desc,course_id asc) as grd_rnk from enrollments) a where a.grd_rnk=1
select student_id, course_id,grade from (select student_id,course_id,grade, rank() over (partition by student_id order by grade desc, course_id asc ) as rnk from Enrollments) a where rnk = 1
select student_id, course_id,grade from( select student_id, course_id, grade,dense_rank() over (partition by student_id order by grade desc,course_id) as rk from Enrollments) t where rk =1 order by student_id
select student_id, min(course_id) as "course_id", grade as "grade" from Enrollments where (student_id, grade) in ( select student_id, max(grade) from Enrollments group by student_id ) group by student_id order by student_id
select student_id, min(course_id) as course_id, grade from ( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc) as rnk from enrollments) as cte WHERE rnk = 1 group by student_id order by rnk desc
select student_id, min(course_id) as course_id, grade from (select student_id, course_id, grade, max(grade) over (partition by student_id) as max_grade from Enrollments)t where max_grade = grade group by 1,3 order by 1
select student_id, min(course_id) as course_id, grade from (select student_id, course_id, grade, max(grade) over(partition by student_id ) as max_grade from Enrollments ) a where a.max_grade = grade group by a.student_id order by student_id
select student_id, min(course_id) as course_id, grade from Enrollments inner join (select student_id, max(grade) as grade from Enrollments group by student_id) as max_grades using (student_id, grade) group by student_id, grade order by student_id asc
select student_id, min(course_id) as course_id, grade from Enrollments where (student_id, grade) in ( select student_id, max(grade) as grade from Enrollments group by student_id ) group by student_id order by student_id
select student_id, min(course_id) as course_id, grade from Enrollments where (student_id, grade) in (select student_id, max(grade) from Enrollments group by 1) group by 1 order by 1
select student_id, min(course_id) as course_id, grade from Enrollments where (student_id, grade) in (select student_id, max(grade) from Enrollments group by student_id) group by student_id order by student_id ASC
select student_id, min(course_id) as course_id, grade from Enrollments where (student_id, grade) in (select student_id, max(grade) from Enrollments group by student_id) group by student_id order by student_id asc
select student_id, min(course_id) as course_id, grade from Enrollments where (student_id, grade) in( select student_id, max(grade) from Enrollments group by student_id) group by student_id order by student_id asc
select student_id, min(course_id) as course_id, grade from Enrollments where (student_id,grade) in (select student_id,max(grade) from Enrollments group by student_id) group by student_id order by student_id
select student_id, min(course_id) as course_id, grade from enrollments where (student_id, grade) in ( select student_id, max(grade) from enrollments group by student_id ) group by student_id order by student_id
select student_id, min(course_id) as course_id, grade from enrollments where (student_id, grade) in (select student_id, max(grade) as grade from enrollments group by student_id) group by student_id order by student_id
select student_id, min(course_id) as course_id, grade from enrollments where (student_id, grade) in (select student_id, max(grade) as max_grade from enrollments group by 1) group by 1 order by 1
select student_id, min(course_id) as course_id, grade from enrollments where (student_id, grade) in (select student_id, max(grade) from enrollments group by student_id) group by student_id order by student_id
select student_id, min(course_id) as course_id, grade from enrollments where (student_id, grade) in (select student_id, max(grade) from enrollments group by student_id) group by student_id, grade order by student_id asc
select student_id, min(course_id) as course_id, max(grade) as grade from Enrollments where (student_id, grade) in (select student_id, max(grade) from Enrollments group by 1) group by 1 order by 1
select student_id, min(course_id) as course_id, min(grade) as grade from ( select e1.student_id, e1.course_id, e1.grade from Enrollments e1 left join Enrollments e2 on e1.student_id = e2.student_id and e1.grade < e2.grade group by 1,2 having count(distinct e2.student_id) = 0 ) as tab group by 1
select student_id, min(course_id) as course_id,grade from enrollments where (student_id, grade) in (select student_id,max(grade) from enrollments group by student_id) group by student_id order by student_id asc
select student_id, min(course_id) course_id, grade from Enrollments where (student_id, grade) in (select student_id, max(grade) from Enrollments group by student_id) group by student_id order by 1, 2
select student_id, min(course_id) course_id, grade from enrollments where (student_id,grade) in (select student_id,max(grade) from enrollments group by 1) group by student_id,grade order by 1
select student_id, min(course_id)as course_id, grade from enrollments where (student_id, grade) in (select student_id, max(grade) as grade from enrollments group by student_id ) group by student_id order by student_id
select student_id,course_id ,grade from (select student_id,course_id ,grade, dense_rank() over (partition by student_id order by grade desc,course_id asc )rnk from Enrollments)a where rnk=1
select student_id,course_id, grade from ( select *, row_number() over(partition by student_id order by grade desc, course_id asc) as rn from Enrollments) a where rn=1
select student_id,course_id,grade from ( select *,row_number() over(partition by student_id order by grade desc,course_id) as ranks from Enrollments) a where ranks=1
select student_id,course_id,grade from ( select student_id,course_id, dense_Rank() over(partition by student_id order by grade desc,course_id asc) as rnk,grade from Enrollments ) as temp where rnk=1
select student_id,course_id,grade from ( select student_id,course_id,grade,row_number() over(partition by student_id order by grade desc,course_id asc) as r from Enrollments) temp where r=1
select student_id,course_id,grade from (select *, rank()over(partition by student_id order by grade desc,course_id) rnk from enrollments)t where rnk=1
select student_id,course_id,grade from (select *, row_number() over (partition by student_id order by grade desc, course_id) as r from enrollments) as a where r=1
select student_id,course_id,grade from (select *,rank()over(partition by student_id order by grade desc,course_id) as rnk from enrollments)a where rnk=1 order by 1
select student_id,course_id,grade from (select *,row_number() over(partition by student_id order by grade desc,course_id) as rk from Enrollments) cte where rk=1 order by 1
select student_id,course_id,grade from (select student_id,course_id,grade, ROW_NUMBER() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id asc) AS "Row_Number" from Enrollments) as q1 where q1.Row_Number=1
select student_id,course_id,grade from (select student_id,course_id,grade,row_number() over(partition by student_id order by grade desc,course_id) rnk from enrollments)a where rnk=1 order by 1
select student_id,course_id,grade from( select *, rank()over(partition by student_id order by grade desc,course_id asc ) as rnk from Enrollments ) cte where rnk =1
select student_id,course_id,grade from( select student_id,course_id,grade,dense_rank()over(partition by student_id order by grade desc,course_id asc) as grade_rank from enrollments ) itm where grade_rank = 1 order by student_id
select student_id,course_id,grade from( select student_id,course_id,grade,row_number()over(partition by student_id order by grade desc,course_id asc)as rn from Enrollments)tmp where rn = 1 order by student_id
select student_id,course_id,grade from(select student_id,course_id,grade,row_number() over(partition by student_id order by grade desc ,course_id) rn from enrollments)c where rn=1 order by 1
select student_id,min(course_id) as course_id, grade from( select student_id,course_id, grade, rank() over(partition by student_id order by grade desc) as rnk from Enrollments)a where rnk = 1 group by student_id
select student_id,min(course_id) as course_id,grade from ( select student_id,course_id,grade,dense_rank() over(partition by student_id order by grade desc) as rn from Enrollments ) r where rn = 1 group by 1 order by 1
select student_id,min(course_id) as course_id,grade from (select distinct a.student_id,a.grade,e.course_id from (select student_id,max(grade) as grade from enrollments group by student_id) as a inner join enrollments e on a.student_id = e.student_id and a.grade = e.grade) as f group by student_id,grade order by student_id
select student_id,min(course_id) as course_id,grade from Enrollments where (student_id,grade) in (select student_id,max(grade) from enrollments group by student_id) group by student_id order by student_id
select student_id,min(course_id) as course_id,grade from enrollments where (student_id,grade) in (select student_id,max(grade) as grade from enrollments group by student_id) group by student_id order by student_id
select student_id,min(course_id) as course_id,grade from enrollments where (student_id,grade) in (select student_id,max(grade) from enrollments group by student_id) group by student_id,grade order by student_id asc
select sub.student_id, sub.course_id, sub.grade from (select student_id, course_id, grade, dense_rank() over(partition by student_id order by grade desc, course_id) as ranked from Enrollments) sub where sub.ranked=1
select t.student_id, t.course_id, t.grade from (select *, row_number() over (partition by student_id order by grade desc ,course_id asc) as rn from enrollments) t where t.rn=1
select t.student_id, t.course_id, t.grade from (select student_id, course_id, grade, max(grade) over(partition by student_id ) as mgrade from enrollments order by student_id, course_id) as t where t.grade = t.mgrade group by student_id
select temp.student_id, min(course_id) as course_id, E.grade from (select student_id, max(grade) as max_grade from Enrollments group by student_id ) temp left join Enrollments E on temp.student_id = E.student_id and temp.max_grade = E.grade group by student_id order by student_id
select tmp.student_id,tmp.course_id,tmp.grade from ( select student_id,course_id,grade,rank() over (partition by student_id order by grade desc,course_id) as 'rank' from enrollments )tmp where tmp.rank=1 order by tmp.student_id,tmp.course_id
select tmp.student_id,tmp.course_id,tmp.grade from( select student_id, course_id, grade, RANK() over (partition by student_id order by grade desc, course_id asc)as rnk from enrollments )as tmp where tmp.rnk = 1 order by tmp.student_id
select y.student_id, y.course_id, y.grade from (select x.student_id, x.course_id, x.grade, rank() over (partition by x.student_id order by x.course_id asc) as 'rank_course' from (select student_id, course_id, grade, rank() over (partition by student_id order by grade desc) as 'rank_grade' from Enrollments) x where x.rank_grade = 1) y where y.rank_course = 1
with A as (select student_id, max(grade) as grade from Enrollments group by student_id) select A.student_id, min(B.course_id) as course_id, A.grade from A join Enrollments B on A.student_id = B.student_id and A.grade=B.grade group by A.student_id, A.grade order by A.student_id
with A as( select student_id, grade, dense_rank() over(partition by student_id order by grade desc, course_id) as "grade_rank", course_id from enrollments ) select student_id, course_id, grade from A where grade_rank = 1
with a as( select *, row_number() over(partition by student_id order by grade desc, course_id asc) as r from Enrollments) select student_id, course_id, grade from a where r = 1 order by 1
with base as ( select student_id, course_id, grade, row_number() over(partition by student_id order by grade desc, course_id asc) as seq from Enrollments order by 1 asc) select student_id, course_id, grade from base where seq = 1 order by 1 asc
with base as ( select student_id, max(grade) as grade from Enrollments group by student_id ) select e.student_id, min(e.course_id) as course_id, e.grade from Enrollments e join base on e.student_id = base.student_id and e.grade = base.grade group by e.student_id order by e.student_id asc
with best_grades as ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) as grade_rank from enrollments ) select student_id, course_id, grade from best_grades where grade_rank = 1 order by student_id
with cte (highest_g,student_id) as (select max(grade) as highest_g,student_id from Enrollments group by student_id ) select cte.student_id,min(E.course_id) as course_id,cte.highest_g as grade from cte left join Enrollments as E on cte.highest_g=E.grade and cte.student_id=E.student_id group by cte.student_id,cte.highest_g order by student_id
with cte as ( select *, rank() over(partition by student_id order by grade desc, course_id asc) as rk from enrollments ) select student_id, course_id, grade from cte where rk=1 order by 1
with cte as ( select student_id as sid, max(grade) as maxgrade from Enrollments group by student_id ) select student_id, min(course_id) as course_id, grade from Enrollments where (student_id, grade) in (select sid, maxgrade from cte) group by student_id, grade order by student_id asc
with cte as ( select student_id, course_id, grade as grade, rank() over(partition by student_id order by course_id ) as rk1 from ( select student_id, course_id, mx as grade from (select student_id, course_id, max(grade) as mx, rank() over(partition by student_id order by max(grade) desc ) as rk from Enrollments group by 1,2 ) t1 where rk =1 ) t2 ) select student_id, course_id, grade as grade from cte where rk1 = 1
with cte as ( select student_id, course_id, grade, max(grade) over(partition by student_id ) as maxg from enrollments) select student_id, min(course_id) as course_id, grade from cte where grade=maxg group by student_id order by student_id
with cte as ( select student_id, course_id, grade, max(grade) over(partition by student_id ) as maxg from enrollments) select student_id, min(course_id) as course_id,grade from cte where grade=maxg group by student_id, grade order by student_id
with cte as ( select student_id, course_id, grade, max(grade) over(partition by student_id order by student_id) as maxg from enrollments) select student_id, min(course_id) as course_id, grade from cte where grade = maxg group by student_id
with cte as ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) as rnk from Enrollments ) select student_id, course_id, grade from cte where rnk = 1
with cte as ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc,course_id) as grade_rank from Enrollments ) select student_id, course_id, grade from cte where grade_rank = 1
with cte as ( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc) rnk from Enrollments) select student_id, min(course_id) course_id, grade from cte where rnk = 1 group by student_id order by student_id
with cte as ( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id asc) as rk from enrollments ) select student_id, course_id, grade from cte where rk=1
with cte as ( select student_id, course_id, grade, rank()over(partition by student_id order by grade desc) as 'g_rnk' from Enrollments) SELECT student_id, course_id, grade FROM (select student_id, course_id, grade, rank()over(partition by student_id order by course_id asc) as 'c_rnk' from cte where g_rnk = 1 ) a where c_rnk = 1
with cte as ( select student_id,course_id,grade, rank() over (partition by student_id order by grade desc,course_id asc) as rnk from enrollments order by student_id asc ) select student_id,course_id,grade from cte where rnk=1
with cte as (SELECT *,RANK() OVER(PARTITION BY student_id ORDER BY grade DESC, course_id) as "ranc1" FROM enrollments) SELECT student_id, course_id, grade FROM cte WHERE ranc1=1
with cte as (SELECT student_id, max(grade) as grade FROM Enrollments GROUP BY student_id) SELECT e.student_id, min(e.course_id) as course_id, e.grade FROM Enrollments e LEFT JOIN cte c ON c.student_id = e.student_id WHERE e.grade = c.grade GROUP BY e.student_id ORDER BY e.student_id
with cte as (select distinct student_id, course_id, grade, dense_rank() over (partition by student_id order by grade desc, course_id asc) as rk from Enrollments) select student_id, course_id, grade from cte where rk = 1 order by student_id
with cte as (select student_id , course_id, grade, dense_rank() over(partition by student_id order by grade desc) as rn from enrollments order by course_id) select student_id, min(course_id) as course_id, grade from cte where rn =1 group by student_id order by student_id
with cte as (select student_id, course_id, grade, RANK() over (partition by student_id order by grade desc, course_id) rnk from Enrollments e) select student_id, course_id, grade from cte where rnk = 1
with cte as (select student_id, course_id, grade, dense_rank() over(partition by student_id order by grade desc) 'ranksGrade', dense_rank() over(partition by student_id order by grade desc, course_id asc) 'rankscourse_id' from enrollments e) select student_id, course_id, grade from cte where ranksGrade = 1 and rankscourse_id = 1
with cte as (select student_id, course_id, grade, rank() over (partition by student_id order by grade desc) as ranking from enrollments) select student_id, min(course_id) as course_id, grade from cte where ranking = 1 group by student_id
with cte as (select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id asc) grade_rank from enrollments order by student_id asc) select student_id, course_id, grade from cte where grade_rank = 1
with cte as (select student_id, course_id, grade, rank()over(partition by student_id order by grade desc, course_id asc) as rank1 from Enrollments) select student_id, course_id,grade from cte where rank1=1 order by student_id
with cte as (select student_id, course_id, grade, rank()over(partition by student_id order by grade desc, course_id) as rk from enrollments) select student_id, course_id, grade from cte where rk = 1 order by student_id
with cte as (select student_id,max(grade) as grade from enrollments group by student_id) select a.student_id,min(b.course_id) as course_id,a.grade from cte a left join enrollments b on a.student_id=b.student_id and a.grade=b.grade group by a.student_id,a.grade order by student_id
with cte as( select *, row_number() over(partition by student_id order by grade desc, course_id) as `g` from enrollments ) select student_id, course_id, grade from cte c where c.g = 1
with cte as( select student_id, course_id, grade, max(grade) over (partition by student_id) as max_grade from Enrollments ) select student_id,min(course_id) course_id,min(max_grade) grade from cte where max_grade = grade group by 1
with cte as( select student_id, course_id, grade, max(grade) over (partition by student_id) as max_grade from Enrollments ) select student_id,min(course_id) course_id,min(max_grade) grade from cte where max_grade = grade group by 1 order by 1
with cte as( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc) as best from enrollments order by student_id) select student_id, min(course_id) as course_id, grade from cte where best = 1 group by student_id
with cte as( select student_id, course_id, grade, row_number() over(partition by student_id order by grade desc, course_id) as rnk from Enrollments ) select student_id, course_id, grade from cte where rnk = 1 order by student_id
with cte1 as ( select *, rank() over (partition by student_id order by grade desc, course_id) as rnk from Enrollments order by student_id, course_id ) select student_id, course_id, grade from cte1 where rnk = 1
with grades_ranked as ( select student_id , course_id , grade , rank() over(partition by student_id order by grade desc, course_id asc) ranking from Enrollments ) select student_id , course_id , grade from grades_ranked where ranking = 1
with main as ( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id) as rnk from enrollments ) select student_id, course_id, grade from main where rnk = 1
with max_g_tbl as ( select student_id, course_id, grade, rank() over(partition by student_id order by grade desc, course_id asc) as rk from enrollments ) select student_id, course_id, grade from max_g_tbl where rk = 1
with max_grade as ( select student_id, max(grade) as max_grade from Enrollments group by student_id), max_courses as ( select t1.student_id, course_id, grade from Enrollments t1 inner join max_grade t2 on t1.student_id = t2.student_id and grade = max_grade), top_courses as (select student_id, min(course_id) over (partition by student_id order by course_id) as course_id, grade from max_courses order by student_id) select distinct * from top_courses
with max_grade as ( select student_id,max(grade) grade from Enrollments e group by 1 ) select s.student_id,min(s.course_id)as course_id,m.grade from Enrollments s inner join max_grade m on m.student_id=s.student_id and m.grade=s.grade group by 1,3 order by 1
with max_grade as (select student_id, max(grade) as max_grade from Enrollments group by 1) select e.student_id, min(e.course_id) as course_id, max(e.grade) as grade from Enrollments as e JOIN max_grade as m ON e.student_id = m.student_id and e.grade = m.max_grade group by 1 order by 1
with max_score as ( select student_id, max(grade) as max_grade from Enrollments group by student_id ), course as (select t1.student_id, t1.course_id, t1.grade from Enrollments t1, max_score t2 where t1.student_id = t2.student_id and t1.grade = t2.max_grade) select student_id, min(course_id) as course_id , max(grade) as grade from course group by student_id order by student_id
with mx as (select *, dense_rank()over(partition by student_id order by grade desc) as rnk from enrollments) select student_id,min(course_id) as course_id, grade from mx where rnk = 1 group by student_id,grade order by student_id
with new as ( select student_id, course_id, grade, row_number() over(partition by student_id order by grade desc, course_id) as 'row_num' from enrollments ) select student_id, course_id, grade from new where row_num = 1 order by student_id
with op1 as ( select student_id, course_id, grade from enrollments order by student_id, course_id ), op as ( select student_id, course_id, grade, row_number() over (partition by student_id order by grade desc, course_id) as rnk from op1) select student_id, course_id, grade from op where rnk = 1
with ranked_grades as ( select *, rank() over(partition by student_id order by grade desc, course_id) as rnk from Enrollments ) select student_id, course_id, grade from ranked_grades where rnk = 1
with ranking as ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id) as r from Enrollments ) select student_id, course_id, grade from ranking where r=1
with ranking as (select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id) as my_rank from Enrollments) select student_id, course_id, grade from ranking where my_rank=1 order by 1
with rankings as ( select * , row_number() over (partition by student_id order by grade desc, course_id asc) as rnk from enrollments ) select student_id , course_id , grade from rankings where 1=1 and rnk = 1 order by 1
with rnk as (Select student_id, course_id, grade, Dense_rank() OVER(partition by student_id order by grade DESC) as irnk FROM Enrollments) SELECT student_id, min(course_id) AS course_id, grade FROM rnk WHERE irnk = 1 group by 1,3
with s1 as( select student_id, max(grade) as max_grade from Enrollments group by student_id ) select b.student_id, b.course_id, b.grade from (select a.student_id, a.course_id, a.grade, dense_rank() over(partition by a.student_id order by a.course_id) as the_rank from (select Enrollments.student_id, course_id, grade from Enrollments inner join s1 on Enrollments.student_id = s1.student_id and Enrollments.grade = s1.max_grade) a ) b where b.the_rank = 1
with student_rank as( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc,course_id) as grade_rank from Enrollments ) select student_id, course_id, grade from student_rank where grade_rank = 1 order by student_id
with t as ( select student_id, course_id, grade from enrollments where (student_id, grade) in (select student_id, max(grade) as grade from enrollments group by student_id) ), t2 as ( select *, rank() over(partition by student_id order by course_id) as rk from t ) select student_id, course_id, grade from t2 where rk = 1
with t as ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) r from enrollments ) select student_id, course_id, grade from t where r=1
with t1 as ( select *, rank() over (partition by student_id order by grade desc, course_id asc) as rnk from enrollments ) select student_id, course_id, grade from t1 where rnk = 1 order by 1 asc
with t1 as ( select student_id, grade, rank() over(partition by student_id order by grade desc) as rk from enrollments ), t2 as ( select student_id, grade from t1 where rk = 1 ), t3 as ( select student_id, min(course_id) as course_id, grade from enrollments where (student_id, grade) in (select student_id, grade from t2) group by student_id order by student_id ) select student_id, course_id, grade from enrollments where (student_id, course_id) in (select student_id, course_id from t3) order by student_id
with t1 as( select *, rank() over(partition by student_id order by grade desc, course_id asc) as 'g_rank' from enrollments ) select student_id, course_id, grade from t1 where g_rank = 1
with t1 as(select student_id, course_id, grade, rank() over(partition by student_id order by grade desc) as rn from enrollments) select student_id, min(course_id) as course_id, grade from t1 where rn =1 group by 1
with temp as ( select *, row_number() over (partition by student_id order by grade DESC, course_id ASC) as rk from Enrollments ) select student_id, course_id, grade from temp where rk = 1 order by student_id ASC
with temp as ( select student_id, course_id, grade, rank() over (partition by student_id order by grade desc, course_id asc) ranking from Enrollments) select student_id, course_id, grade from temp where ranking = 1
with temp as (select student_id, course_id, grade, RANK() over(partition by student_id order by grade desc, course_id) as tmp_rank from Enrollments) select student_id, course_id, grade from temp where tmp_rank = 1 order by student_id
with temp as (select student_id, course_id, grade, max(grade) over (partition by student_id ) as max_grade from Enrollments) , temp2 as (select student_id, course_id, grade, min(course_id) over (partition by student_id ) as small_course_id from temp where grade = max_grade ) select student_id, course_id, grade from temp2 where course_id = small_course_id
with temp as( select student_id, course_id, grade, dense_rank() over(partition by student_id order by grade desc) as rank_ from enrollments ) select student_id, min(course_id) as course_id, grade from temp where rank_ = 1 group by 1
with tmp as( select *, row_number() over(partition by student_id order by grade desc, course_id) as rn from enrollments ) select student_id, course_id, grade from tmp where rn = 1 order by 1
with top_grades as (select student_id, MAX(grade) as grade from Enrollments group by student_id) Select student_id, MIN(course_id) as course_id, grade from (select e.student_id, e.course_id, e.grade from Enrollments as e INNER JOIN top_grades ON e.student_id = top_grades.student_id WHERE e.grade = top_grades.grade ORDER BY student_id, course_id) as tb1 group by student_id, grade order by student_id, grade
with x as (select student_id, course_id, grade, max(grade) over(partition by student_id ) as mgrade from Enrollments order by student_id asc, course_id asc ) select student_id, course_id, grade from x where grade = mgrade group by student_id
