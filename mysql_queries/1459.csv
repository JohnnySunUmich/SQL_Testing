(select a.id as p1, b.id as p2, (abs(a.x_value -b.x_value) * abs(a.y_value-b.y_value)) as area from points a join points b on a.id !=b.id where (abs(a.x_value -b.x_value) * abs(a.y_value-b.y_value)) != 0 and a.id < b.id order by area desc, p1, p2)
SELECT * FROM ( SELECT p1.id AS p1, p2.id AS p2, ABS((p2.x_value-p1.x_value) * (p2.y_value - p1.y_value)) AS area FROM points AS p1 CROSS JOIN points as p2 WHERE p1.id < p2.id ) AS q WHERE area > 0 ORDER BY area DESC, q.p1 ASC, q.p2 ASC
SELECT * FROM (SELECT P1.id AS p1, P2.id AS p2, (ABS(P1.x_value - P2.x_value)* ABS(P1.y_value-P2.y_value)) AS area FROM Points P1,Points P2 WHERE P1.id < P2.id) P WHERE P.area <> 0 ORDER BY P.area DESC, P.p1, P.p2
SELECT DISTINCT LEAST(P1.id, P2.id) AS P1, GREATEST(P1.id, P2.id) AS P2, (ABS((P1.x_value - P2.x_value)*(P1.y_value - P2.y_value))) as AREA FROM Points P1, Points P2 WHERE P1.id <> P2.id AND P1.x_value <> P2.x_value AND P1.y_value <> P2.y_value ORDER BY AREA DESC, P1, P2
SELECT DISTINCT P1.id AS P1, P2.id AS P2, (ABS((P1.x_value - P2.x_value)*(P1.y_value - P2.y_value))) as AREA FROM Points P1, Points P2 WHERE P1.id < P2.id AND P1.x_value <> P2.x_value AND P1.y_value <> P2.y_value ORDER BY AREA DESC, P1, P2
SELECT DISTINCT l.id AS p1, r.id AS p2, ABS(l.x_value - r.x_value) * ABS(l.y_value - r.y_value) AS area FROM points AS l JOIN points AS r ON l.id < r.id WHERE ABS(l.x_value - r.x_value) * ABS(l.y_value - r.y_value) != 0 ORDER BY area DESC, p1 ASC, p2 ASC
SELECT DISTINCT p1.id AS p1 , p2.id AS p2 , CASE WHEN (p1.y_value - p2.y_value) * (p1.x_value - p2.x_value) > 0 THEN (p1.y_value - p2.y_value) * (p1.x_value - p2.x_value) ELSE -1 * (p1.y_value - p2.y_value) * (p1.x_value - p2.x_value) END AS area FROM Points p1 CROSS JOIN Points p2 WHERE p1.id < p2.id AND p1.x_value != p2.x_value AND p1.y_value != p2.y_value ORDER BY 3 DESC, 1 ASC, 2 ASC
SELECT DISTINCT p1.id AS p1, p2.id AS p2, ABS(p1.x_value-p2.x_value)*ABS(p1.y_value-p2.y_value) AS area FROM Points p1 JOIN Points p2 ON p1.id < p2.id WHERE ABS(p1.x_value-p2.x_value)*ABS(p1.y_value-p2.y_value)>0 ORDER BY area DESC,p1,p2
SELECT DISTINCT points1.id AS p1, points2.id AS p2, ABS(points1.x_value - points2.x_value) * ABS(points1.y_value - points2.y_value) AS area FROM Points AS points1, Points AS points2 WHERE points1.id < points2.id AND points1.x_value <> points2.x_value AND points1.y_value <> points2.y_value ORDER BY area DESC, p1, p2
SELECT DISTINCT r1.id as p1, r2.id as p2, ABS(r1.x_value-r2.x_value)*ABS(r1.y_value-r2.y_value) AS area FROM Points r1 CROSS JOIN Points r2 WHERE ABS(r1.x_value-r2.x_value)*ABS(r1.y_value-r2.y_value) > 0 AND r1.id < r2.id ORDER BY area DESC, p1 ASC, p2 ASC
SELECT P1.id AS P1, P2.id AS P2, ABS(P1.x_value-P2.x_value) * ABS(P1.y_value-P2.y_value) AS AREA FROM Points P1, Points P2 WHERE P1.id < P2.id AND P1.x_value != P2.x_value AND P1.y_value != P2.y_value ORDER BY area DESC, P1.id ASC, P2.id ASC
SELECT P1.id AS p1, P2.ID AS P2, ABS(P1.x_value - P2.x_value ) * ABS(P1.y_value-P2.y_value) AS AREA FROM Points P1 JOIN Points P2 ON P1.x_value!=P2.x_value AND P1.y_value!=P2.y_value AND P1.id < P2.id ORDER BY 3 DESC, 1 ASC, 2 ASC
SELECT P1.id AS p1, P2.id AS p2, (ABS(P2.x_value - P1.x_value) * ABS(P2.y_value - P1.y_value)) AS area FROM Points AS P1 JOIN Points AS P2 ON P2.id > P1.id HAVING area > 0 ORDER BY area DESC, p1, p2
SELECT P1.id AS p1, P2.id AS p2, ABS(P1.x_value - P2.x_value)*ABS(P1.y_value - P2.y_value) AS area FROM Points P1 INNER JOIN Points P2 ON P1.id < P2.id AND P1.x_value <> P2.x_value AND P1.y_value <> P2.y_value ORDER BY area DESC, P1.id, P2.id
SELECT P1.id AS p1, P2.id AS p2, ABS(P1.x_value - P2.x_value)*ABS(P1.y_value - P2.y_value) AS area FROM Points P1 INNER JOIN Points P2 ON P1.id < P2.id WHERE ABS(P1.x_value - P2.x_value)*ABS(P1.y_value - P2.y_value) <> 0 ORDER BY area DESC, P1.id, P2.id
SELECT P_1.id AS P1, P_2.id AS P2, ABS(P_1.x_value - P_2.x_value) * ABS(P_1.y_value - P_2.y_value) AS area FROM Points P_1 CROSS JOIN POINTS P_2 WHERE P_1.x_value != P_2.x_value AND P_1.y_value != P_2.y_value AND P_1.id < P_2.id ORDER BY area DESC, P1, P2
SELECT a.id AS p1 ,b.id AS p2 ,abs((a.x_value - b.x_value) * (a.y_value - b.y_value)) AS area FROM Points a JOIN Points b ON a.x_value != b.x_value AND a.y_value != b.y_value WHERE a.id < b.id ORDER BY 3 DESC,1,2
SELECT a.id AS p1 ,b.id AS p2 ,abs((a.x_value-b.x_value)*(a.y_value-b.y_value)) AS area FROM points a JOIN points b ON a.x_value != b.x_value AND a.y_value != b.y_value AND a.id < b.id ORDER BY 3 DESC,1,2
SELECT a.id AS p1, b.id AS p2, (ABS(a.x_value-b.x_value)*ABS(a.y_value-b.y_value)) AS area FROM Points a JOIN Points b ON a.x_value != b.x_value AND a.y_value != b.y_value AND a.id < b.id ORDER BY area DESC, p1, p2
SELECT a.id AS p1, b.id AS p2, ABS((a.y_value-b.y_value)*(a.x_value-b.x_value)) AS area FROM Points AS a, Points AS b WHERE a.id<b.id AND a.x_value!=b.x_value AND a.y_value!=b.y_value ORDER BY area DESC, p1, p2
SELECT a.id AS p1, b.id AS p2, ABS(a.x_value - b.x_value) * ABS(a.y_value - b.y_value) AS area FROM Points a JOIN Points b ON a.id < b.id AND a.x_value <> b.x_value AND a.y_value <> b.y_value ORDER BY area DESC, p1, p2
SELECT a.id AS p1, b.id AS p2, ABS(a.x_value - b.x_value) * ABS(a.y_value - b.y_value) AS area FROM Points a, Points b WHERE a.id != b.id AND a.x_value != b.x_value AND a.y_value != b.y_value AND a.id < b.id ORDER BY area DESC, p1, p2
SELECT a.id AS p1, b.id AS p2, ABS(a.x_value - b.x_value) * ABS(a.y_value - b.y_value) AS area FROM Points a, Points b WHERE a.id < b.id AND ABS(a.x_value - b.x_value) * ABS(a.y_value - b.y_value) != 0 ORDER BY area DESC, p1, p2
SELECT a.id AS p1, b.id AS p2, ABS(a.x_value - b.x_value) * ABS(a.y_value - b.y_value) AS area FROM Points a, Points b WHERE a.id < b.id AND a.x_value != b.x_value AND a.y_value != b.y_value ORDER BY area DESC, p1, p2
SELECT a.id AS p1, b.id AS p2, ABS(a.x_value - b.x_value)*ABS(a.y_value - b.y_value) AS area FROM Points a, Points b WHERE a.id < b.id AND a.x_value != b.x_value AND a.y_value != b.y_value ORDER BY area DESC, p1, p2
SELECT a.id AS p1, b.id AS p2, ABS(b.x_value - a.x_value) * ABS(a.y_value - b.y_value) AS area FROM Points a JOIN Points b ON a.x_value != b.x_value AND a.y_value != b.y_value WHERE b.id>a.id ORDER BY area DESC, a.id, b.id
SELECT a.id AS p1, b.id AS p2, abs((a.x_value-b.x_value)*(a.y_value-b.y_value)) AS area FROM Points a JOIN Points b ON a.id!=b.id AND a.id<b.id WHERE abs((a.x_value-b.x_value)*(a.y_value-b.y_value))>0 ORDER BY 3 desc, 1, 2
SELECT a.id AS p1, b.id AS p2, abs((b.x_value-a.x_value)*(b.y_value-a.y_value)) AS area FROM Points a JOIN Points b WHERE a.id<b.id AND a.id!=b.id AND abs((b.x_value-a.x_value)*(b.y_value-a.y_value))>0 ORDER BY 3 desc, 1, 2
SELECT a.id AS p1, b.id AS p2, abs(a.x_value-b.x_value) * abs(a.y_value - b.y_value) AS area FROM Points a, Points b WHERE a.id < b.id AND a.x_value != b.x_value and a.y_value != b.y_value ORDER BY area DESC, p1, p2
SELECT a.id as P1, b.id as P2, ABS(b.x_value - a.x_value) * ABS(b.y_value - a.y_value) AS AREA FROM Points a JOIN Points b ON a.id < b.id WHERE a.x_value != b.x_value AND a.y_value != b.y_value ORDER BY AREA DESC, p1 ASC, p2 ASC
SELECT a.id as P1, b.id as P2, abs( a.x_value-b.x_value)*abs(a.y_value-b.y_value) as AREA from Points a INNER JOIN Points b ON a.id < b.id where abs( a.x_value-b.x_value)*abs(a.y_value-b.y_value) >0 order by 3 desc, 1 asc, 2 asc
SELECT a.id as p1, b.id as p2, ABS(A.x_value-B.x_value)*ABS(A.y_value-B.y_value) as area FROM POINTS A JOIN POINTS B ON A.ID <> B.ID and a.id <b.id and a.x_value <> b.x_value and a.y_value <> b.y_value order by 3 desc, 1 asc, 2 asc
SELECT a.id as p1, b.id as p2, ABS(a.x_value - b.x_value) * ABS(a.y_value - b.y_value) as area FROM Points a, Points b WHERE (a.x_value != b.x_value AND a.y_value != b.y_value ) AND (a.id< b.id) ORDER BY 3 DESC, 1 ASC, 2 ASC
SELECT a.id as p1, b.id as p2, abs((a.x_value-b.x_value)*(a.y_value-b.y_value)) as area FROM Points a CROSS JOIN Points b WHERE a.id <= b.id and a.x_value-b.x_value <>0 and a.y_value-b.y_value <>0 ORDER BY area DESC,p1,p2
SELECT p1, p2, ABS((x1-x2)*(y1-y2)) AS AREA FROM ( SELECT points1.id as p1, points2.id as p2, points1.x_value AS x1, points1.y_value as y1, points2.x_value as x2, points2.y_value as y2 FROM points AS points1 JOIN points AS points2 ON ((points1.x_value != points2.x_value) OR (points1.y_value != points2.y_value)) AND (points1.id < points2.id) ) AS pc WHERE ABS((x1-x2)*(y1-y2))!=0 ORDER BY area DESC, p1, p2
SELECT p1.id 'p1',p2.id 'p2', abs(p1.x_value - p2.x_value)*abs(p1.y_value - p2.y_value) area FROM points p1 JOIN points p2 ON p1.x_value != p2.x_value AND p1.y_value != p2.y_value AND p1.id < p2.id ORDER BY area DESC, p1.id ASC, p2.id ASC
SELECT p1.id AS 'p1', p2.id AS 'p2', ABS(p1.x_value - p2.x_value) * ABS(p1.y_value - p2.y_value) AS 'area' FROM Points AS p1, Points AS p2 WHERE p1.x_value != p2.x_value and p1.y_value != p2.y_value AND p1.id < p2.id ORDER BY area DESC, p1, p2
SELECT p1.id AS 'p1', p2.id AS 'p2', ABS(p1.x_value - p2.x_value) * ABS(p1.y_value - p2.y_value) AS 'area' FROM Points p1 JOIN Points p2 ON p1.id < p2.id HAVING area > 0 ORDER BY area DESC, p1 ASC, p2 ASC
SELECT p1.id AS 'p1', p2.id AS 'p2', ABS(p1.x_value - p2.x_value) * ABS(p1.y_value - p2.y_value) AS 'area' FROM Points p1 JOIN Points p2 ON p1.x_value != p2.x_value AND p1.y_value != p2.y_value AND p1.id < p2.id ORDER BY area DESC, p1 ASC, p2 ASC
SELECT p1.id AS P1, p2.id AS P2, Abs(p1.x_value - p2.x_value) * Abs(p1.y_value - p2.y_value) AS area FROM points p1, points p2 WHERE p1.id < p2.id AND ( Abs(p1.x_value - p2.x_value) * Abs(p1.y_value - p2.y_value) ) > 0 ORDER BY 3 DESC, 1, 2
SELECT p1.id AS P1,p2.id AS P2,ABS(p1.x_value-p2.x_value)*ABS(p1.y_value-p2.y_value) AS area FROM Points p1 JOIN Points p2 ON p1.id<p2.id AND ABS(p1.x_value-p2.x_value)*ABS(p1.y_value-p2.y_value)!=0 ORDER BY 3 DESC,1 ASC,2 ASC
SELECT p1.id AS p1 ,p2.id AS p2 ,ABS((p1.x_value-p2.x_value)*(p1.y_value-p2.y_value)) AS area FROM Points p1 INNER JOIN Points p2 ON p1.x_value <> p2.x_value AND p1.y_value <> p2.y_value AND p1.id < p2.id ORDER BY 3 DESC, 1 ASC, 2 ASC
SELECT p1.id AS p1, p2.id AS p2, ABS((p1.x_value - p2.x_value)*(p1.y_value - p2.y_value)) AS area FROM Points p1 JOIN Points p2 WHERE p1.id < p2.id AND p1.x_value != p2.x_value AND p1.y_value != p2.y_value ORDER BY 3 DESC, 1,2 ASC
SELECT p1.id AS p1, p2.id AS p2, ABS((p1.x_value - p2.x_value)*(p1.y_value - p2.y_value)) AS area FROM Points p1, Points p2 WHERE (p1.x_value != p2.x_value AND p1.y_value != p2.y_value) AND p1.id < p2.id order by area DESC, p1, p2
SELECT p1.id AS p1, p2.id AS p2, ABS(p1.x_value - p2.x_value) * ABS(p1.y_value - p2.y_value) AS area FROM Points p1, Points p2 WHERE p1.id < p2.id AND p1.x_value != p2.x_value AND p1.y_value != p2.y_value ORDER BY area DESC, p1, p2
SELECT p1.id AS p1, p2.id AS p2, ABS(p1.x_value-p2.x_value)*ABS(p1.y_value-p2.y_value) AS area FROM Points p1 CROSS JOIN Points p2 ON p1.id WHERE p1.id < p2.id AND p1.x_value != p2.x_value AND p1.y_value != p2.y_value ORDER BY area DESC, p1.id ASC, p2.id ASC
SELECT p1.id AS p1, p2.id AS p2, ABS(p1.x_value-p2.x_value)*ABS(p1.y_value-p2.y_value) AS area FROM Points p1 CROSS JOIN Points p2 WHERE p1.id < p2.id AND p1.x_value != p2.x_value AND p1.y_value != p2.y_value ORDER BY area DESC, p1.id ASC, p2.id ASC
SELECT p1.id AS p1, p2.id AS p2, abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) AS area FROM Points p1, Points p2 WHERE (p1.x_value != p2.x_value AND p1.y_value != p2.y_value) AND p1.id < p2.id ORDER BY area DESC, p1 ASC, p2 ASC
SELECT p1.id as p1, p2.id as p2, abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) as area FROM Points p1, Points p2 WHERE p1.id < p2.id AND p1.x_value != p2.x_value AND p1.y_value != p2.y_value ORDER BY area DESC, p1.id, p2.id
SELECT p1.id as p1, p2.id as p2, abs(p2.y_value-p1.y_value)*abs(p2.x_value-p1.x_value) as area FROM Points as P1, Points AS p2 WHERE (p2.y_value-p1.y_value)*(p2.x_value-p1.x_value)!=0 and p1.id<p2.id ORDER BY area DESC, p1, p2
SELECT p1.id as p1,p2.id as p2,ABS(p1.x_value-p2.x_value)* ABS(p1.y_value -p2.y_value) as area FROM Points p1 JOIN Points p2 ON p1.id < p2.id AND p1.x_value != p2.x_value AND p1.y_value != p2.y_value ORDER BY 3 DESC,1,2
SELECT p1.id p1, p2.id p2, ABS((p1.x_value-p2.x_value)*(p1.y_value-p2.y_value)) area FROM points p1 JOIN points p2 ON p1.x_value != p2.x_value AND p1.y_value != p2.y_value AND p1.id < p2.id ORDER BY area DESC, p1, p2
SELECT p1.id p1, p2.id p2, ABS(p1.x_value - p2.x_value) * ABS(p1.y_value - p2.y_value) area FROM Points p1 INNER JOIN Points p2 ON p1.id < p2.id AND p1.x_value <> p2.x_value AND p1.y_value <> p2.y_value ORDER BY area DESC, p1, p2
SELECT p1.id p1, p2.id p2, ABS(p1.x_value-p2.x_value)*ABS(p1.y_value-p2.y_value) area FROM Points p1, Points p2 WHERE p1.x_value != p2.x_value AND p1.y_value != p2.y_value AND p1.id < p2.id ORDER BY area DESC, p1 ASC, p2 ASC
SELECT pt1.id as P1, pt2.id as P2, ABS(pt2.x_value - pt1.x_value)*ABS(pt2.y_value-pt1.y_value) as AREA FROM Points pt1 JOIN Points pt2 ON pt1.id<pt2.id AND pt1.x_value!=pt2.x_value AND pt2.y_value!=pt1.y_value ORDER BY AREA DESC, p1 ASC, p2 ASC
SELECT t1.id AS p1, t2.id AS p2, ABS(t1.x_value - t2.x_value) * ABS(t1.y_value - t2.y_value) AS area FROM points t1, points t2 WHERE t1.x_value != t2.x_value AND t1.y_value != t2.y_value AND t1.id < t2.id ORDER BY area DESC, t1.id, t2.id
SELECT t1.id AS p1, t2.id AS p2, ABS(t1.x_value - t2.x_value)*ABS(t1.y_value - t2.y_value) AS area FROM Points t1 JOIN Points t2 ON t1.x_value != t2.x_value AND t1.y_value != t2.y_value WHERE t1.id < t2.id ORDER BY 3 DESC, 1, 2
SELECT t1.id p1, t2.id p2, ABS(t1.x_value-t2.x_value)*ABS(t1.y_value-t2.y_value) area FROM Points t1, Points t2 WHERE t1.x_value <> t2.x_value AND t1.y_value <> t2.y_value AND t1.id < t2.id ORDER BY 3 DESC, p1, p2
Select * from ( Select a.id as p1 ,b.id as p2, coalesce(abs(a.x_value-b.x_value)*abs(a.y_value-b.y_value),0) as area from Points a left join Points b on a.id<b.id) t1 where area!=0 order by area desc, p1, p2
Select z1.id as p1, z2.id as p2, abs(z1.x_value - z2.x_value) * abs(z1.y_value - z2.y_value) as area from Points z1, points z2 where z1.x_value != z2.x_value and z1.y_value != z2.y_value and z1.id < z2.id order by area DESC, z1.id ASC, z2.id ASC
WITH JoinedPoints AS ( SELECT P1.id AS p1, P2.id AS p2, ABS(P1.x_value - P2.x_value) * ABS (P1.y_value - P2.y_value) AS area FROM Points P1 JOIN Points P2 WHERE P1.id < P2.id HAVING area > 0 ORDER BY area DESC, P1.id, P2.id ) SELECT * FROM JoinedPoints
WITH coordinates AS ( SELECT a.id as p1, b.id as p2, ABS(a.x_value - b.x_value) * ABS(a.y_value - b.y_value) as area FROM points as a INNER JOIN points as b ON a.x_value <> b.x_value AND a.y_value <> b.y_value AND a.id < b.id) SELECT p1, p2, area FROM coordinates WHERE area > 0 ORDER BY area desc, p1, p2
WITH tb1 AS (SELECT p1.id id1, p1.x_value x1, p1.y_value y1, p2.id id2, p2.x_value x2, p2.y_value y2 FROM Points p1 JOIN Points p2 WHERE p1.id < p2.id), tb2 AS (SELECT *, ABS(x2-x1)*ABS(y2-y1) AREA FROM tb1) SELECT id1 p1, id2 p2, AREA FROM tb2 WHERE AREA > 0 ORDER BY AREA DESC, p1, p2
WITH temp AS ( SELECT p1.id AS p1_id, p1.x_value AS p1_x, p1.y_value AS p1_y, p2.id AS p2_id, p2.x_value AS p2_x, p2.y_value AS p2_y FROM Points p1 CROSS JOIN Points p2 WHERE p1.id < p2.id AND p1.x_value <> p2.x_value AND p1.y_value <> p2.y_value ) SELECT p1_id AS p1, p2_id AS p2, ABS(p1_x - p2_x) * ABS(p1_y - p2_y) AS area FROM temp ORDER BY area DESC, p1, p2
select * from ( select p1.id as p1, p2.id as p2, abs((p2.y_value - p1.y_value)*(p2.x_value - p1.x_value)) as area from points p1 join points p2 on p1.id < p2.id) a where area != 0 order by 3 desc, 1, 2
select * from ( select p1.id as p1, p2.id as p2, abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) as area from Points p1 join Points p2 on p1.id < p2.id ) a where area > 0 order by area desc, p1, p2
select * from (select p1.id as P1,p2.id as P2,abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) as AREA from Points p1 cross join Points p2 where p1.id <> p2.id and p1.x_value <> p2.x_value and p1.y_value <> p2.y_value) t where P1<P2 order by area desc,P1,P2
select * from (select p1.id as p1, p2.id as p2, abs((p1.x_value - p2.x_value) * (p1.y_value - p2.y_value)) as area from points p1, points p2 where p1.id < p2.id ) a where area > 0 order by area desc, p1, p2
select * from( select p1.id as p1, p2.id as p2, abs((p1.x_value-p2.x_value)*(p1.y_value-p2.y_value)) as area from Points p1 join Points p2 where p1.id < p2.id order by area desc, p1.id, p2.id ) p where p.area>0
select * from( select t1.id as P1, t2.id as P2, abs((t1.x_value - t2.x_value) * (t1.y_value - t2.y_value)) as AREA from points t1 join points t2 on t1.id < t2.id) t where AREA > 0 order by AREA desc, P1 asc, P2 asc
select A.id as p1, B.id as p2, abs(A.x_value - B.x_value)*abs(A.y_value - B.y_value) as area from Points A, Points B where A.id < B.id and A.id != B.id and (A.x_value - B.x_value)*(A.y_value - B.y_value) != 0 order by area desc, p1, p2
select Distinct IF(p.id<po.id,p.id,po.id) AS p1, IF(p.id<po.id,po.id,p.id) AS p2, ABS(p.x_value-po.x_value)*ABS(p.y_value-po.y_value) AREA from points p join points po on p.id<>po.id and p.x_value<>po.x_value and p.y_value<>po.y_value order by AREA desc,p1,p2
select a.id 'p1', b.id 'p2',abs((a.x_value-b.x_value)*(a.y_value-b.y_value)) 'area' from points a join points b on a.id<b.id and a.x_value<>b.x_value and a.y_value<>b.y_value order by area desc, p1, p2
select a.id as P1, b.id as P2, abs(a.x_value - b.x_value) * abs(a.y_value - b.y_value) as AREA from Points a join Points b on a.x_value <> b.x_value and a.y_value <> b.y_value and a.id < b.id order by area desc, p1 asc, p2 asc
select a.id as P1, b.id as P2, abs(a.x_value-b.x_value) * abs(a.y_value-b.y_value) as AREA from points as a join points as b on a.id< b.id having area> 0 order by area desc, p1 asc, p2 asc
select a.id as P1, b.id as P2,abs(a.x_value-b.x_value)*abs(a.y_value-b.y_value) as AREA from Points a join Points b on a.id<b.id where a.x_value <>b.x_value and a.y_value <>b.y_value order by 3 desc,1 asc,2 asc
select a.id as p1, b.id as p2, (abs(a.x_value-b.x_value)*abs(a.y_value-b.y_value)) as area from points as a join points as b on a.id<b.id where a.x_value!=b.x_value and a.y_value!=b.y_value order by area desc, p1 asc,p2 asc
select a.id as p1, b.id as p2, abs((a.x_value - b.x_value) * (a.y_value - b.y_value)) as area from points a join points b on a.id < b.id and a.x_value != b.x_value and a.y_value != b.y_value order by area desc, p1, p2
select a.id as p1, b.id as p2, abs((a.x_value - b.x_value)*(a.y_value - b.y_value)) as area from Points a join Points b where a.id < b.id and a.x_value != b.x_value and a.y_value != b.y_value order by 3 desc, 1, 2
select a.id as p1, b.id as p2, abs((a.x_value-b.x_value)*(a.y_value - b.y_value)) as area from points a join points b on a.id < b.id and a.x_value != b.x_value and a.y_value != b.y_value order by area desc, 1, 2
select a.id as p1, b.id as p2, abs((a.x_value-b.x_value)*(a.y_value-b.y_value)) as area from Points a, Points b where a.id < b.id and a.x_value != b.x_value and a.y_value != b.y_value order by 3 desc, 1, 2
select a.id as p1, b.id as p2, abs((a.y_value - b.y_value)*(a.x_value - b.x_value)) as area from points a join points b on a.x_value != b.x_value and a.y_value != b.y_value where a.id < b.id order by area desc, p1 asc, p2 asc
select a.id as p1, b.id as p2, abs(a.x_value - b.x_value) * abs(a.y_value - b.y_value) as area from Points a, points b where a.id < b.id and a.x_value != b.x_value and a.y_value != b.y_value order by 3 desc, 1, 2
select a.id as p1, b.id as p2, abs(a.x_value - b.x_value) * abs(a.y_value - b.y_value) as area from points a, points b where a.id < b.id having area > 0 order by 3 desc,1,2
select a.id as p1, b.id as p2, abs(a.x_value - b.x_value)*abs(a.y_value - b.y_value) as area from points a join points b on a.id<b.id and a.x_value<>b.x_value and a.y_value<>b.y_value order by area desc, p1, p2
select a.id as p1, b.id as p2, abs(a.x_value - b.x_value)*abs(a.y_value - b.y_value) as area from points a join points b where a.x_value <>b.x_value and a.y_value <>b.y_value and a.id < b.id order by 3 desc, 1, 2
select a.id as p1, b.id as p2, abs(a.x_value - b.x_value)*abs(a.y_value - b.y_value) as area from points a, points b where a.id<b.id and !(a.x_value=b.x_value or a.y_value=b.y_value) order by 3 desc, 1,2
select a.id as p1, b.id as p2, abs(a.x_value-b.x_value) *abs(a.y_value-b.y_value) as area from points as a join points as b on a.id<b.id and (a.x_value <>b.x_value or a.y_value<>b.y_value) and abs(a.x_value-b.x_value) *abs(a.y_value-b.y_value) >0 order by 3 desc,1,2
select a.id as p1, b.id as p2, abs(a.x_value-b.x_value)*abs(a.y_value-b.y_value) as area from Points a join Points b on a.x_value<>b.x_value and a.y_value<>b.y_value where a.id<b.id order by area desc, p1,p2
select a.id as p1, b.id as p2, abs(a.x_value-b.x_value)*abs(a.y_value-b.y_value) as area from points a cross join points b where a.x_value != b.x_value and a.y_value != b.y_value and a.id<b.id order by 3 desc, 1, 2
select a.id as p1, b.id as p2, abs(a.x_value-b.x_value)*abs(a.y_value-b.y_value) as area from points a join points b on a.id<b.id and a.x_value!=b.x_value and a.y_value!=b.y_value order by 3 desc, 1 , 2
select a.id as p1, b.id as p2, abs(a.x_value-b.x_value)*abs(a.y_value-b.y_value) as area from points a, points b where a.id<b.id and a.x_value<>b.x_value and a.y_value<>b.y_value order by 3 desc,1,2
select a.id as p1, b.id as p2, abs(a.y_value-b.y_value)*abs(a.x_value-b.x_value) as area from points as a join points as b on a.id < b.id where abs(a.y_value-b.y_value)*abs(a.x_value-b.x_value) > 0 order by area desc, p1 asc, p2 asc
select a.id as p1, b.id as p2, abs(a.y_value-b.y_value)*abs(a.x_value-b.x_value) as area from points as a, points as b where a.x_value <> b.x_value and a.y_value <> b.y_value and a.id < b.id order by area desc, p1, p2
select a.id as p1, b.id as p2, abs(b.x_value-a.x_value)* abs(b.y_value-a.y_value) as area from points a cross join points b on a.id != b.id where a.x_value!= b.x_value and a.y_value!=b.y_value and b.id>a.id order by area desc, p1, p2
select a.id as p1,b.id as p2, abs(a.x_value-b.x_value)* abs(a.y_value-b.y_value) as area from Points as a, Points as b where a.id < b.id having area>0 order by area desc, p1, p2
select a.id p1, b.id p2, abs(a.x_value - b.x_value)*abs(a.y_value-b.y_value) area from Points a, Points b where a.id < b.id and a.x_value <> b.x_value and a.y_value <> b.y_value order by area desc, p1, p2
select a.id p1, b.id p2, abs(a.x_value-b.x_value) * abs(a.y_value-b.y_value) area from Points a join Points b on a.id < b.id and a.x_value != b.x_value and a.y_value != b.y_value order by area desc, p1 asc, p2 asc
select a.id p1, b.id p2, abs(b.x_value - a.x_value)*abs(b.y_value-a.y_value) area from Points a join Points b on a.id < b.id and a.x_value != b.x_value and a.y_value != b.y_value order by area desc, p1, p2
select a.id p1, b.id p2, abs(b.x_value - a.x_value)*abs(b.y_value-a.y_value) area from Points a join Points b on a.id < b.id and a.x_value != b.x_value and b.y_value != a.y_value order by area desc, p1, p2
select a.id p1, b.id p2, abs(b.x_value - a.x_value)*abs(b.y_value-a.y_value) area from Points a, Points b where a.id < b.id and a.x_value <> b.x_value and a.y_value <> b.y_value order by area desc, p1, p2
select b.id as p1, a.id as p2, abs(a.x_value-b.x_value)*abs(a.y_value-b.y_value) as area from Points a join Points b on a.id>b.id where a.x_value!=b.x_value and a.y_value!=b.y_value order by area desc, 1, 2
select c.id1 as p1, c.id2 as p2, abs(c.x1 - c.x2)* abs(c.y1 - c.y2) as area from (select p1.id as id1, p2.id as id2, p1.x_value as x1, p1.y_value as y1, p2.x_value as x2, p2.y_value as y2 from points p1, points p2 where p1.x_value <> p2.x_value and p1.y_value <> p2.y_value and p1.id < p2.id) c order by area desc, p1, p2
select distinct a.id as p1, b.id as p2, abs(a.x_value - b.x_value)*abs(a.y_value - b.y_value) as area from Points a, Points b where a.id < b.id and abs(a.x_value - b.x_value) <> 0 and abs(a.y_value - b.y_value)<>0 order by 3 desc, 1, 2
select distinct p1.id as p1, p2.id as p2, (abs(p1.x_value - p2.x_value)*abs(p1.y_value-p2.y_value)) as area from points p1 join points p2 on p1.x_value != p2.x_value and p1.y_value != p2.y_value and p1.id < p2.id order by area desc, p1.id, p2.id
select distinct p1.id as p1, p2.id as p2, abs(p1.x_value - p2.x_value)*abs(p1.y_value - p2.y_value) as area from Points p1 join Points p2 on p1.x_value != p2.x_value and p1.y_value != p2.y_value and p1.id<p2.id order by 3 desc, 1,2
select l.id as p1, r.id as p2, abs(l.x_value - r.x_value )*abs(l.y_value-r.y_value) as area from points l cross join points r where l.id<r.id and abs(l.x_value - r.x_value )*abs(l.y_value-r.y_value)>0 order by area desc, p1, p2
select l.id as p1, r.id as p2, abs(l.x_value-r.x_value)*abs(l.y_value-r.y_value) as area from points l cross join points r where l.id<r.id and abs(l.x_value-r.x_value)*abs(l.y_value-r.y_value) > 0 order by area desc, p1, p2
select l.id as p1, r.id as p2, abs(l.x_value-r.x_value)*abs(l.y_value-r.y_value) as area from points l join points r on l.id < r.id and (l.x_value!=r.x_value) and (l.y_value!=r.y_value) order by area desc, p1, p2
select p1, p2, area from (select a.id as p1, b.id as p2, abs(a.x_value - b.x_value) * abs(a.y_value - b.y_value) as area from Points a inner join Points b on a.id != b.id and a.id < b.id) t1 where area != 0 order by area desc, p1, p2
select p1, p2, area from( select b1.id as p1, b2.id as p2, abs(b1.x_value - b2.x_value)*abs(b1.y_value - b2.y_value) as area from points b1, points b2 where b1.id < b2.id ) sub where area != 0 order by area desc, p1, p2
select p1, p2, area from( select p1.id p1, p2.id p2, abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) area from points p1, points p2 where p1.id < p2.id) temp where area!=0 order by area desc, p1, p2
select p1, p2, case when a < 0 then a * -1 else a end as area from (select p.id as p1, p2.id as p2, coalesce((p2.x_value - p.x_value) * (p2.y_value - p.y_value), 0) as a from points p left join points p2 on p.id != p2.id and p.id < p2.id) ar where a != 0 order by area desc, p1, p2
select p1.id P1, p2.id P2, abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) AREA from points p1, points p2 where p1.id < p2.id and p1.x_value<>p2.x_value and p1.y_value<>p2.y_value order by AREA desc, P1,P2
select p1.id as P1, p2.id as P2, (abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value)) as area from points p1 cross join points p2 where (abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value))!=0 and p1.id<p2.id order by area desc, p1.id, p2.id
select p1.id as P1, p2.id as P2, ABS(p2.y_value-p1.y_value)*ABS(p2.x_value-p1.x_value) as AREA from Points p1 JOIN Points p2 where p1.id<p2.id and ABS(p2.y_value-p1.y_value)*ABS(p2.x_value-p1.x_value)>0 order by AREA desc, P1 asc, P2 asc
select p1.id as P1, p2.id as P2, abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) as AREA from points p1, points p2 where abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value)>0 and p1.id<p2.id order by 3 desc,1,2
select p1.id as P1, p2.id as P2, abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) as AREA from points p1, points p2 where p1.id<p2.id and abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value)>0 order by 3 desc,1,2
select p1.id as P1,p2.id as P2,abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) as AREA from Points p1 join Points p2 ON p1.id<p2.id where p1.x_value <> p2.x_value and p1.y_value <> p2.y_value order by area desc,P1,P2
select p1.id as p1 , p2.id as p2 , (abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value)) as area from points p1 join points p2 on p1.x_value != p2.x_value and p1.y_value != p2.y_value and p1.id < p2.id order by 3 desc, 1, 2
select p1.id as p1 ,p2.id as p2 , abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) as area from points p1 join points p2 on p1.x_value != p2.x_value and p1.y_value != p2.y_value where p1.id < p2.id order by 3 desc, 1 asc, 2 asc
select p1.id as p1 ,p2.id as p2 ,abs((p1.x_value - p2.x_value) * (p1.y_value - p2.y_value)) as area from Points p1,Points p2 where (p1.x_value != p2.x_value and p1.y_value != p2.y_value) and p1.id < p2.id order by area desc,p1,p2
select p1.id as p1, p2.id as p2, (abs(p1.x_value-p2.x_value) * abs(p1.y_value-p2.y_value)) as area from points p1 cross join points p2 where p1.x_value <> p2.x_value and p1.y_value <> p2.y_value and p1.id < p2.id order by area desc, p1 asc, p2 asc
select p1.id as p1, p2.id as p2, ABS(p1.x_value-p2.x_value) * ABS(p1.y_value - p2.y_value) as area from Points p1 JOIN Points p2 ON p1.x_value != p2.x_value and p1.y_value != p2.y_value and p1.id < p2.id order by area desc, p1 asc, p2 asc
select p1.id as p1, p2.id as p2, abs((p1.x_value-p2.x_value)*(p1.y_value-p2.y_value)) as area from Points p1 join Points p2 where p1.id < p2.id having area > 0 order by area desc, p1.id, p2.id
select p1.id as p1, p2.id as p2, abs((p2.y_value - p1.y_value) * (p2.x_value - p1.x_value)) as area from points p1, points p2 where p1.id < p2.id and p1.y_value <> p2.y_value and p1.x_value <> p2.x_value order by area desc, p1.id, p2.id
select p1.id as p1, p2.id as p2, abs((p2.y_value - p1.y_value)*(p2.x_value - p1.x_value)) as area from points p1 join points p2 on p1.id < p2.id where p1.x_value <> p2.x_value and p1.y_value <> p2.y_value order by 3 desc, 1, 2
select p1.id as p1, p2.id as p2, abs((p2.y_value - p1.y_value)*(p2.x_value - p1.x_value)) as area from points p1 join points p2 on p1.x_value != p2.x_value and p1.y_value != p2.y_value and p1.id < p2.id order by 3 desc, 1, 2
select p1.id as p1, p2.id as p2, abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) as area from Points p1 join Points p2 on p1.id < p2.id where p1.x_value <> p2.x_value and p1.y_value <> p2.y_value order by 3 desc, 1, 2
select p1.id as p1, p2.id as p2, abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) as area from points p1 join points p2 on p1.x_value != p2.x_value and p1.y_value != p2.y_value and p1.id < p2.id order by area desc, p1.id, p2.id
select p1.id as p1, p2.id as p2, abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) as area from points p1, points p2 where p1.id < p2.id and (abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value)) > 0 order by area desc, p1.id, p2.id
select p1.id as p1, p2.id as p2, abs(p1.x_value - p2.x_value)*abs(p1.y_value - p2.y_value) as area from points p1 join points p2 on p1.id < p2.id and p1.x_value != p2.x_value and p1.y_value != p2.y_value order by area desc, p1, p2
select p1.id as p1, p2.id as p2, abs(p1.x_value-p2.x_value) * abs(p1.y_value - p2.y_value) as area from points p1 left join points p2 on p1.x_value != p2.x_value and p1.y_value != p2.y_value and p1.id < p2.id where p2.id is not null order by 3 desc, 1,2
select p1.id as p1, p2.id as p2, abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) as area from Points p1 join Points p2 on p1.id<p2.id and p1.x_value<>p2.x_value and p1.y_value<>p2.y_value order by area desc, p1.id, p2.id
select p1.id as p1, p2.id as p2, abs(p1.x_value-p2.x_value)*abs(p1.y_value-p2.y_value) as area from points p1, points p2 where p2.id>p1.id and p1.x_value<>p2.x_value and p1.y_value<>p2.y_value order by 3 desc,1,2
select p1.id as p1, p2.id as p2, abs(p2.y_value-p1.y_value)*abs(p2.x_value-p1.x_value) as area from points as p1, points as p2 where p2.y_value!=p1.y_value and p2.x_value!=p1.x_value and p2.id>p1.id order by area desc, p1.id, p2.id
select p1.id as p1,p2.id as p2,ABS(p1.x_value - p2.x_value) * ABS(p1.y_value - p2.y_value) AS area from points as p1 join points as p2 on p1.x_value<>p2.x_value and p1.y_value<>p2.y_value and p1.id<p2.id order by area desc,p1.id asc,p2.id asc
select p1.id p1, p2.id p2, abs((p1.x_value-p2.x_value)*(p1.y_value-p2.y_value)) area from points p1 join points p2 on p1.id < p2.id and p1.x_value != p2.x_value and p1.y_value != p2.y_value order by 3 DESC, 1, 2
select p1.id p1, p2.id p2, abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) area from Points p1 join Points p2 on p1.id != p2.id and p1.x_value != p2.x_value and p1.y_value != p2.y_value and p1.id < p2.id order by 3 desc, 1, 2
select p1.id p1, p2.id p2, abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) area from points p1 join points p2 on p2.id > p1.id where abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) > 0 order by 3 desc, 1,2
select ps1.id as p1, ps2.id as p2, abs(ps1.x_value - ps2.x_value) * abs(ps1.y_value - ps2.y_value) as area from points ps1, points ps2 where ps1.id <> ps2.id and ps1.id < ps2.id and ABS(ps2.x_value - ps1.x_value)*ABS(ps2.y_value-ps1.y_value) > 0 order by area desc, p1, p2
select ps1.id as p1, ps2.id as p2, abs(ps1.x_value-ps2.x_value)*abs(ps1.y_value-ps2.y_value) as area from Points ps1 join Points ps2 on ps1.id < ps2.id and ps1.x_value != ps2.x_value and ps1.y_value != ps2.y_value order by area desc, p1, p2
select t1.id as P1, t2.id as P2, abs((t1.x_value - t2.x_value)*(t1.y_value - t2.y_value)) as area from points t1 inner join points t2 on t1.id < t2.id and t1.x_value!= t2.x_value and t1.y_value!= t2.y_value order by area desc, P1, P2
select t1.id as P1, t2.id as P2, abs(t1.x_value - t2.x_value)*abs(t1.y_value-t2.y_value) as AREA from Points t1 join Points t2 on t1.id < t2.id and t1.x_value <> t2.x_value and t1.y_value <> t2.y_value order by AREA desc, p1, p2
select t1.id as p1 , t2.id as p2 , abs(t1.x_value - t2.x_value) * abs(t1.y_value - t2.y_value) as area from points t1, points t2 where abs(t1.x_value - t2.x_value) * abs(t1.y_value - t2.y_value) > 0 and t1.id < t2.id order by 3 desc, t1.id, t2.id
select t1.id as p1, t2.id as p2, abs((t2.x_value-t1.x_value)*(t2.y_value-t1.y_value)) as area from points as t1 join points as t2 on t2.id > t1.id and t1.x_value != t2.x_value and t1.y_value != t2.y_value order by area desc, t1.id asc, t2.id asc
select t1.id as p1, t2.id as p2, abs(t1.x_value - t2.x_value) * abs(t1.y_value - t2.y_value) as area from points t1 cross join points t2 on t2.id >= t1.id where abs(t1.x_value - t2.x_value) * abs(t1.y_value - t2.y_value) > 0 order by area desc, p1 asc, p2 asc
select t1.id as p1,t2.id as p2,abs(t2.y_value-t1.y_value)*abs(t2.x_value-t1.x_value) as area from Points t1 join Points t2 on t1.x_value != t2.x_value and t1.y_value != t2.y_value and t1.id < t2.id order by area desc, t1.id,t2.id
with area_cte as (select P1.id as p1, P2.id as p2, abs(P1.x_value - P2.x_value) as 'l', abs(P1.y_value - P2.y_value) as 'w' from Points as P1 cross join Points as P2 on P1.id < P2.id ) select p1, p2, l*w as 'area' from area_cte where (l*w) > 0 order by area desc , p1, p2
with cte as ( select p1.id as p1, p2.id as p2, abs(p1.x_value - p2.x_value) * abs(p1.y_value - p2.y_value) as area from Points p1 join Points p2 on p1.id < p2.id ) select * from cte where area > 0 order by area desc, p1, p2
with cte as ( select p1_id as p1, p2_id as p2, area from (select p1_id,p2_id, abs(p1x-p2x)*abs(p1y-p2y) as area from (select p1.id as p1_id, p1.x_value as p1x, p1.y_value as p1y, p2.id as p2_id, p2.x_value as p2x, p2.y_value as p2y from points p1 cross join points p2 where (p1.x_value != p2.x_value and p1.y_value != p2.y_value)) a) b where area>0 ) select distinct c1.p1, c1.p2, c1.area from cte c1 join cte c2 on c1.p1 = c2.p2 and c1.p2 = c2.p1 where c1.p1<c2.p1 order by c1.area desc, c1.p1, c1.p2
with cte as ( select tab1.id as p1, tab2.id as p2, abs(tab1.x_value - tab2.x_value)*abs(tab1.y_value - tab2.y_value) as area from Points tab1 left join Points tab2 on tab1.id < tab2.id ) select p1, p2, area from cte where area > 0 order by area desc, p1, p2
with cte_final as ( select least(p1.id, p2.id) as p1, greatest(p1.id, p2.id) as p2, (p2.x_value - p1.x_value) * abs(p2.y_value - p1.y_value) as area from Points as p1 join Points as p2 on (p1.x_value < p2.x_value and p1.y_value != p2.y_value) order by 3 desc, 1, 2 ) select * from cte_final
with t as ( select t1.x_value as x1, t1.y_value as y1,t1.id as p1,t2.id as p2, t2.x_value as x2, t2.y_value as y2, abs(t1.x_value - t2.x_value) * abs(t1.y_value-t2.y_value) as area from points t1 join points t2 on t1.id < t2.id ) select p1,p2,area from t where area > 0 order by area desc,p1 asc,p2 asc
with temp as ( select p1.id as p1, p2.id as p2,abs(p1.x_value-p2.x_value) * abs(p1.y_value-p2.y_value) as area from points p1 join points p2 on p1.id<p2.id) select distinct p1, p2, area from temp where area!=0 order by area desc, p1,p2
