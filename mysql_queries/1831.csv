SELECT DISTINCT t1.transaction_id FROM Transactions t1 INNER JOIN ( SELECT CAST(day AS DATE) AS transaction_date ,MAX(amount) AS max_amount FROM Transactions GROUP BY CAST(day AS DATE) ) t2 ON CAST(t1.day AS DATE) = t2.transaction_date AND t1.amount = t2.max_amount ORDER BY t1.transaction_id
SELECT DISTINCT t1.transaction_id FROM Transactions t1, Transactions t2 WHERE CAST(t1.day AS DATE) = CAST(t2.day AS DATE) GROUP BY CAST(t1.day AS DATE), t1.transaction_id HAVING SUM(CASE WHEN t1.amount >= t2.amount THEN 1 ELSE 0 END) = COUNT(t2.amount) ORDER BY t1.transaction_id
SELECT DISTINCT temp.transaction_id FROM (SELECT transaction_id, day, amount, rank() over (partition by date(day) order by amount desc) as rnk FROM Transactions) temp WHERE temp.rnk = 1 ORDER BY temp.transaction_id
SELECT DISTINCT transaction_id FROM ( SELECT transaction_id ,RANK() OVER(PARTITION BY CAST(day AS DATE) ORDER BY amount DESC) AS ranks FROM Transactions ) t WHERE ranks = 1 ORDER BY transaction_id
SELECT DISTINCT transaction_id FROM (SELECT transaction_id, RANK() OVER (PARTITION BY LEFT(day,10) ORDER BY amount DESC) AS Ranks FROM Transactions) a WHERE Ranks=1 ORDER BY transaction_id
SELECT DISTINCT transaction_id FROM Transactions AS a WHERE amount = (SELECT MAX(amount) FROM Transactions AS b WHERE DATE(a.day) = DATE(b.day)) ORDER BY transaction_id
SELECT DISTINCT transaction_id FROM Transactions WHERE (LEFT(day,10), amount) IN (SELECT LEFT(day,10), MAX(amount) FROM Transactions GROUP BY LEFT(day,10)) ORDER BY transaction_id
SELECT DISTINCT transaction_id FROM Transactions a JOIN (SELECT DAYOFYEAR(day) AS day, MAX(amount) AS max_amt FROM Transactions GROUP BY 1) b ON DAYOFYEAR(a.day) = b.day AND a.amount = b.max_amt ORDER BY 1
SELECT DISTINCT(transaction_id) FROM Transactions as t1 RIGHT JOIN ( SELECT day, MAX(amount) OVER(PARTITION BY DATE(day)) as max_amt FROM Transactions ) as t2 ON DATE(t1.day) = DATE(t2.day) and t1.amount = t2.max_amt ORDER BY transaction_id
SELECT T.transaction_id FROM Transactions T JOIN (select left(day,10) as date, max(amount) as amt from Transactions group by 1) as TEMP ON left(T.day,10) = TEMP.date and T.amount = TEMP.amt order by 1
SELECT t1.transaction_id FROM Transactions t1 JOIN (SELECT DATE_FORMAT(day, '%Y-%m-%d') AS date, MAX(amount) AS amt FROM Transactions GROUP BY DATE_FORMAT(day, '%Y-%m-%d')) t2 ON DATE_FORMAT(t1.day, '%Y-%m-%d') = t2.date AND amount = amt ORDER BY t1.transaction_id
SELECT tmp.transaction_id FROM( SELECT transaction_id, amount, MAX(amount) OVER(PARTITION BY DATE(day)) max_amount FROM Transactions ) tmp WHERE tmp.amount = tmp.max_amount ORDER BY tmp.transaction_id ASC
SELECT transaction_id AS transaction_id FROM Transactions WHERE (DATE_FORMAT(day, '%Y-%m-%d'), amount) IN (SELECT DATE_FORMAT(day, '%Y-%m-%d'), max(amount) FROM transactions GROUP BY DATE_FORMAT(day, '%Y-%m-%d')) ORDER BY transaction_id ASC
SELECT transaction_id FROM ( SELECT * , DENSE_RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) as dt FROM Transactions ORDER BY day ASC ) tmp WHERE dt = 1 ORDER BY transaction_id ASC
SELECT transaction_id FROM ( SELECT *, DENSE_RANK() OVER(PARTITION BY DATE(day) ORDER BY amount DESC) AS rk FROM transactions ) a WHERE rk = 1 ORDER BY 1
SELECT transaction_id FROM ( SELECT *, MAX(amount) OVER (PARTITION BY DATE(day)) as day_maximum FROM Transactions ) as T WHERE amount = day_maximum ORDER BY transaction_id
SELECT transaction_id FROM ( SELECT *, rank() over(partition by date(day) order by amount desc) AS RNK from transactions ) A WHERE RNK=1 order by transaction_id
SELECT transaction_id FROM ( SELECT DATE(day) AS day_date, MAX(amount) AS max_amount FROM Transactions GROUP BY DATE(day) ) AS a LEFT JOIN Transactions AS b ON a.day_date = DATE(b.day) AND a.max_amount = b.amount ORDER BY transaction_id
SELECT transaction_id FROM ( SELECT t1.transaction_id, DATE_FORMAT(t1.day,'%Y-%m-%d'), COUNT(DISTINCT t2.amount) AS ct FROM transactions t1 LEFT JOIN transactions t2 ON DATE_FORMAT(t1.day,'%Y-%m-%d') = DATE_FORMAT(t2.day,'%Y-%m-%d') AND t1.amount < t2.amount GROUP BY t1.transaction_id, DATE_FORMAT(t1.day,'%Y-%m-%d') ) a WHERE ct = 0
SELECT transaction_id FROM ( SELECT transaction_id, DATE(day) AS day, amount, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS rnk FROM Transactions ) t WHERE rnk = 1 ORDER BY 1
SELECT transaction_id FROM ( SELECT transaction_id, DENSE_RANK() OVER(PARTITION BY DATE_FORMAT(day, "%Y-%m-%d") ORDER BY amount DESC) AS RNK FROM Transactions) AS T WHERE RNK = 1 ORDER BY transaction_id
SELECT transaction_id FROM ( SELECT transaction_id, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS rnk FROM Transactions )t WHERE rnk = 1 ORDER BY 1
SELECT transaction_id FROM ( SELECT transaction_id, RANK() OVER (partition by date_format(day,'%y%m%d') order by amount desc) as ranking FROM transactions ) ASD WHERE ranking = 1 order by transaction_id
SELECT transaction_id FROM ( SELECT transaction_id, RANK() OVER(PARTITION BY DATE_FORMAT(day, '%Y-%c-%e') ORDER BY amount DESC) AS amount_rank FROM Transactions) t WHERE amount_rank = 1 ORDER BY 1
SELECT transaction_id FROM ( SELECT transaction_id, RANK() OVER(PARTITION BY DATE_FORMAT(day, '%Y-%m-%d') ORDER BY amount DESC) AS rnk FROM transactions )a WHERE rnk = 1 ORDER BY transaction_id
SELECT transaction_id FROM ( SELECT transaction_id, day(day) day, RANK() OVER(PARTITION BY day(day) ORDER BY SUM(amount) DESC) amount_rk FROM Transactions GROUP BY 1, 2 ) tmp WHERE amount_rk = 1 ORDER BY transaction_id
SELECT transaction_id FROM ( SELECT transaction_id, day, amount, RANK() OVER(PARTITION BY DATE(day) ORDER BY amount DESC) as ranking FROM Transactions) as sub WHERE ranking = 1 ORDER BY 1
SELECT transaction_id FROM ( SELECT transaction_id, day, amount, rank() OVER(PARTITION BY date(day) ORDER BY amount DESC) as rnk FROM Transactions ) as t WHERE rnk =1 ORDER BY 1
SELECT transaction_id FROM ( SELECT transaction_id,DATE(day), RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS rn FROM Transactions) t WHERE rn=1 ORDER BY 1 ASC
SELECT transaction_id FROM (SELECT *, DENSE_RANK () OVER (PARTITION BY DAY(day) ORDER BY amount DESC) SERIES FROM Transactions) A WHERE SERIES = 1 ORDER BY 1
SELECT transaction_id FROM (SELECT *, DENSE_RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) as dt FROM Transactions) t WHERE dt = 1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT DATE(day) as day, transaction_id, RANK() OVER(PARTITION BY DATE(day) ORDER BY amount desc) as rk FROM transactions)x WHERE rk =1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT DATE_FORMAT(day, '%Y-%m-%d') as date_yyyymmdd, MAX(amount) as max_amount FROM Transactions GROUP BY DATE_FORMAT(day, '%Y-%m-%d')) tmp, Transactions t WHERE date_yyyymmdd = DATE_FORMAT(t.day, '%Y-%m-%d') AND max_amount = amount ORDER BY transaction_id
SELECT transaction_id FROM (SELECT DAYOFYEAR(day), transaction_id, RANK()OVER(PARTITION BY DAYOFYEAR(day) ORDER BY amount DESC) AS rnk FROM Transactions) t WHERE rnk = 1 ORDER BY 1
SELECT transaction_id FROM (SELECT transaction_id, DAY(day) AS day, RANK() OVER(PARTITION BY DAY(day) ORDER BY amount DESC) AS ranking FROM Transactions) a WHERE ranking = 1 ORDER BY 1
SELECT transaction_id FROM (SELECT transaction_id, DENSE_RANK() OVER(PARTITION BY LEFT(day,10) ORDER BY amount DESC) drank FROM transactions) cal WHERE drank = 1 ORDER BY transaction_id ASC
SELECT transaction_id FROM (SELECT transaction_id, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS amount FROM Transactions) sub WHERE sub.amount = 1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS ranked FROM transactions t) AS x WHERE ranked = 1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS ranking FROM Transactions) A WHERE ranking = 1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS rn FROM Transactions) a WHERE a.rn = 1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id, RANK() OVER (PARTITION BY date(day) ORDER BY amount DESC) r FROM Transactions) a WHERE r=1 ORDER BY 1 ASC
SELECT transaction_id FROM (SELECT transaction_id, RANK() OVER(PARTITION BY DATE(day) ORDER BY amount DESC) AS rnk FROM Transactions) Temp WHERE rnk=1 ORDER BY transaction_id ASC
SELECT transaction_id FROM (SELECT transaction_id, RANK() OVER(PARTITION BY DATE_FORMAT(day, '%Y-%m-%d') ORDER BY amount DESC) AS ranks FROM Transactions) tmp WHERE ranks = 1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id, RANK() OVER(PARTITION BY DAY(day) ORDER BY amount DESC) AS rnk FROM Transactions) temp WHERE temp.rnk = 1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id, amount, MAX(amount) OVER (PARTITION BY EXTRACT(DAY FROM day)) AS maximum FROM Transactions) m WHERE amount = maximum ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id, amount, MAX(amount) OVER(PARTITION BY date_format(day, "%Y-%m-%d")) mm FROM Transactions) TEMP WHERE amount = mm ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id, day, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS amount FROM Transactions) sub WHERE sub.amount = 1 ORDER BY transaction_id
SELECT transaction_id FROM (SELECT transaction_id,RANK() OVER(PARTITION BY DATE_FORMAT(day,'%Y-%m-%d') ORDER BY amount DESC) rk FROM Transactions)a WHERE rk=1 ORDER BY 1 ASC
SELECT transaction_id FROM Transactions AS T1 WHERE amount = (SELECT MAX(amount) FROM Transactions AS T2 WHERE DAY(T1.day) = DAY(T2.day)) ORDER BY transaction_id
SELECT transaction_id FROM Transactions WHERE (CAST(day AS DATE), amount ) IN ( SELECT DISTINCT CAST(day AS DATE) AS day, MAX(amount) OVER(PARTITION BY CAST(day AS DATE)) AS max_amount FROM Transactions) ORDER BY transaction_id ASC
SELECT transaction_id FROM Transactions WHERE (DATE(day), amount) IN (SELECT DATE(day) d, MAX(amount) FROM Transactions GROUP BY d) ORDER BY transaction_id
SELECT transaction_id FROM Transactions WHERE (DATE(day), amount) IN (SELECT DATE(day) day, MAX(amount) FROM Transactions GROUP BY DATE(day)) ORDER BY transaction_id
SELECT transaction_id FROM Transactions WHERE (DATE(day), amount) IN (SELECT DATE(day), MAX(amount) FROM Transactions GROUP BY DATE(day)) ORDER BY transaction_id
SELECT transaction_id FROM Transactions WHERE (DATE(day), amount) in ( SELECT DATE(day) AS day, MAX(amount) AS max_amt FROM Transactions GROUP BY 1 ) ORDER BY 1
SELECT transaction_id FROM Transactions WHERE (DATE(day),amount) IN (SELECT DATE(day), MAX(amount) FROM Transactions GROUP BY DATE(day)) ORDER BY transaction_id ASC
SELECT transaction_id FROM Transactions WHERE (DAY(day), amount) IN (SELECT DAY(day), MAX(amount) FROM Transactions GROUP BY DAY(day)) ORDER BY transaction_id
SELECT transaction_id FROM Transactions WHERE (date(day), amount) IN ( SELECT date(day), MAX(amount) FROM Transactions GROUP BY 1 ) ORDER BY 1
SELECT transaction_id FROM Transactions WHERE (date(day), amount) IN ( SELECT date(day), MAX(amount) FROM Transactions GROUP BY date(day) ) ORDER BY transaction_id
SELECT transaction_id FROM Transactions WHERE (date(day), amount) IN (SELECT date(day) AS day, MAX(amount) AS max_amt FROM Transactions GROUP BY date(day)) ORDER BY transaction_id
SELECT transaction_id FROM Transactions WHERE(DATE(day), amount) IN (SELECT DATE(day) AS day, MAX(amount) AS max_amt FROM Transactions GROUP BY 1) ORDER BY 1
SELECT transaction_id FROM Transactions WHERE(DATE(day),amount) in (SELECT date(day) as day,MAX(amount) as max_amt FROM Transactions GROUP BY date(day)) order by transaction_id asc
SELECT transaction_id FROM Transactions t JOIN ( SELECT DATE(day) AS day, MAX(amount) AS amount FROM Transactions GROUP BY DATE(day) ) max_t ON DATE(t.day) = max_t.day AND t.amount = max_t.amount ORDER BY transaction_id
SELECT transaction_id FROM Transactions t LEFT JOIN ( SELECT DATE_FORMAT(day, "%Y-%m-%d") as date, MAX(amount) as max_amount FROM Transactions GROUP BY 1 ) m ON DATE_FORMAT(t.day, "%Y-%m-%d") = m.date WHERE amount = max_amount ORDER BY transaction_id ASC
SELECT transaction_id FROM Transactions t WHERE NOT EXISTS ( SELECT 1 FROM Transactions t1 WHERE DATE(t1.day) = DATE(t.day) AND t1.amount > t.amount ) ORDER BY transaction_id
SELECT transaction_id FROM Transactions t1 JOIN ( SELECT MAX(amount) as max_amount , LEFT(day,10) as day_grouped FROM Transactions GROUP BY LEFT(day,10)) t2 ON t1.amount = t2.max_amount AND LEFT(t1.day,10) = day_grouped ORDER BY 1
SELECT transaction_id FROM Transactions where (CAST(day as DATE), amount) IN (SELECT CAST(day as DATE) as day, MAX(amount) AS max_amount FROM Transactions GROUP BY CAST(day as DATE)) ORDER by 1
SELECT transaction_id FROM Transactions where (day,amount) in (SELECT day, MAX(amount) OVER (PARTITION BY DATE_FORMAT(day, "%M %d %Y")) as Max_Amount from Transactions) order by transaction_id
SELECT transaction_id FROM transactions WHERE (DATE(DAY), AMOUNT) IN ( SELECT DATE(DAY),MAX(amount) FROM transactions GROUP BY 1) ORDER BY 1
SELECT transaction_id FROM transactions WHERE (DATE(day), amount) IN (SELECT DATE(day) AS day, MAX(amount) AS max_amt FROM transactions GROUP BY 1) ORDER BY 1
SELECT transaction_id FROM transactions WHERE (DATE(day), amount) IN (SELECT DATE(day) AS day, MAX(amount) FROM transactions GROUP BY 1) ORDER BY 1
SELECT transaction_id FROM transactions WHERE (date(day),amount) in (select date(day) as day, max(amount)as max_amt FROM transactions GROUP BY 1) ORDER BY 1 ASC
SELECT transaction_id FROM( SELECT *, RANK() OVER (PARTITION BY DATE_FORMAT(day, "%Y-%m-%d") ORDER BY amount DESC) AS rnk FROM Transactions ) t WHERE rnk = 1 ORDER BY transaction_id
SELECT transaction_id FROM( SELECT transaction_id, DENSE_RANK() OVER (PARTITION BY DATE_FORMAT(day, "%Y-%m-%d") ORDER BY amount DESC) AS rankamt FROM Transactions) t WHERE rankamt = 1 ORDER BY transaction_id
SELECT transaction_id FROM( SELECT transaction_id, DENSE_RANK() OVER(PARTITION BY DAY(day) ORDER BY amount DESC) AS day_rank FROM Transactions ) sub WHERE day_rank=1 ORDER BY transaction_id
SELECT transaction_id FROM( SELECT transaction_id, RANK() OVER (PARTITION BY LEFT(day, 10) ORDER BY amount DESC) AS num FROM Transactions ) tmp WHERE 1=1 AND num = 1 ORDER BY transaction_id
SELECT transaction_id FROM( SELECT transaction_id, RANK() OVER(PARTITION BY DATE(day) ORDER BY amount DESC) amt_rank FROM Transactions ) a WHERE amt_rank = 1 ORDER BY transaction_id
Select a.transaction_id From Transactions a, Transactions b Where date(a.day) = date(b.day) And a.amount <= b.amount Group By a.transaction_id Having Count(Distinct b.amount) = 1 Order By transaction_id
Select transaction_id From transactions where (date(day), amount) in ( Select date(day) as day, max(amount) as max_amt From transactions Group by 1 ) Order by 1
WITH A AS ( SELECT transaction_id, day, amount, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS rks FROM Transactions) SELECT transaction_id FROM A WHERE rks = 1 ORDER BY transaction_id
WITH CTE AS ( SELECT DATE(DAY) AS DATE_PART, MAX(AMOUNT) AS DAY_MAX FROM TRANSACTIONS GROUP BY DATE(DAY) ) SELECT transaction_id FROM TRANSACTIONS T JOIN CTE ON CTE.DATE_PART=DATE(T.DAY) AND CTE.DAY_MAX=T.AMOUNT ORDER BY 1 ASC
WITH CTE AS ( SELECT DATE(day) day, MAX(amount) amount FROM Transactions GROUP BY DATE(day) ) SELECT T.transaction_id FROM Transactions T INNER JOIN CTE C ON DATE(T.day)=C.day AND T.amount=C.amount WHERE T.transaction_id IS NOT NULL ORDER BY transaction_id
WITH CTE AS ( SELECT transaction_id , DAY, AMOUNT, RANK() OVER (PARTITION BY DATE(DAY) ORDER BY AMOUNT DESC) AS RNK FROM TRANSACTIONS ) SELECT transaction_id FROM CTE WHERE RNK=1 ORDER BY 1 ASC
WITH CTE AS( SELECT transaction_id, RANK() OVER (PARTITION BY LEFT(day, 10) ORDER BY amount DESC) AS R1 FROM Transactions ) SELECT transaction_id FROM CTE WHERE R1 = 1 ORDER BY 1
WITH CTE as ( select transaction_id, CAST(day as date) as 'finaldate', amount from Transactions ), CTE2 as ( select transaction_id, amount, dense_rank() over (partition by finaldate order by amount DESC) as 'rankamount' from CTE ) select transaction_id from CTE2 where rankamount = 1 group by 1 order by 1
WITH CTE1 AS ( SELECT transaction_id, DATE_FORMAT(day, '%Y-%m-%d') as date_short, amount FROM transactions ), CTE2 AS ( SELECT transaction_id, RANK() OVER (PARTITION BY date_short ORDER BY amount DESC) rnk FROM CTE1 ) SELECT transaction_id FROM CTE2 WHERE rnk=1 ORDER BY transaction_id
WITH MonthlyMax AS ( SELECT CONVERT(day, DATE) AS day_as_date, MAX(amount) AS max_amount FROM Transactions GROUP BY day_as_date ), TranscationsWithDailyMax AS ( SELECT T.transaction_id FROM Transactions T INNER JOIN MonthlyMax M ON CONVERT(T.day, DATE) = M.day_as_date AND amount = max_amount ORDER BY T.transaction_id ) SELECT * FROM TranscationsWithDailyMax
WITH T AS( SELECT *, DENSE_RANK() OVER(PARTITION BY DAY(day) ORDER BY amount DESC) r FROM Transactions) SELECT DISTINCT transaction_id FROM T WHERE r =1 ORDER BY transaction_id ASC
WITH T1 AS (SELECT *, DATE(day) AS day2 FROM Transactions), T2 AS (SELECT *, RANK() OVER (PARTITION BY day2 ORDER BY amount ASC) AS R FROM T1), T3 AS (SELECT *, R = MAX(R) OVER (PARTITION BY day2) AS C FROM T2) SELECT transaction_id FROM T3 WHERE C = 1 ORDER BY transaction_id ASC
WITH amount_rank AS ( SELECT *, DENSE_RANK() OVER (PARTITION BY DATE_FORMAT(day, '%Y-%m-%d') ORDER BY amount DESC) as day_rank FROM Transactions) SELECT transaction_id FROM amount_rank WHERE day_rank = '1' ORDER BY 1 ASC
WITH amount_ranked AS( SELECT day, transaction_id, amount, RANK() OVER(PARTITION BY DAY(day) ORDER BY amount DESC) as amount_rank FROM Transactions ) SELECT transaction_id FROM amount_ranked WHERE amount_rank=1 ORDER BY transaction_id
WITH cte AS ( SELECT DATE_FORMAT(day, '%Y-%m-%d') AS day, MAX(amount) AS amt FROM Transactions GROUP BY DATE_FORMAT(day, '%Y-%m-%d') ) SELECT transaction_id FROM Transactions t INNER JOIN cte ON DATE_FORMAT(t.day, '%Y-%m-%d') = cte.day AND amount = amt ORDER BY transaction_id
WITH cte AS ( SELECT transaction_id, DATE(day) AS date, amount, RANK() OVER(PARTITION BY DATE(day) ORDER BY amount DESC) AS rnk FROM transactions ) SELECT transaction_id FROM cte WHERE rnk = 1 ORDER BY transaction_id ASC
WITH cte AS( SELECT DATE(day) AS date, transaction_id, RANK() OVER(PARTITION BY DATE(day) ORDER BY amount DESC) AS rnk FROM Transactions ) SELECT transaction_id FROM cte WHERE rnk = 1 ORDER BY transaction_id
WITH cte AS( SELECT transaction_id, DATE(day), DENSE_RANK() OVER(PARTITION BY DATE(day) ORDER BY amount DESC) as rnk FROM Transactions ) SELECT transaction_id FROM cte WHERE rnk = 1 ORDER BY transaction_id
WITH cte as (SELECT transaction_id, DENSE_RANK() OVER(partition by date(day) order by amount desc) as rnk FROM transactions) SELECT transaction_id FROM cte WHERE rnk = 1 ORDER BY transaction_id
WITH cte1 AS ( SELECT *, RANK() OVER(PARTITION BY DATE_FORMAT(day, '%Y-%m-%d') ORDER BY amount DESC) AS ranking FROM Transactions ) SELECT transaction_id FROM cte1 WHERE ranking = 1 ORDER BY 1 ASC
WITH day_max AS ( SELECT DATE_FORMAT(day, '%Y-%m-%d') AS date_fmt, MAX(amount) AS max_amt FROM Transactions GROUP BY 1 ) SELECT transaction_id FROM Transactions JOIN day_max ON amount = max_amt AND DATE_FORMAT(day, '%Y-%m-%d') = date_fmt ORDER BY transaction_id
WITH getMax AS ( SELECT DATE(day) AS transaction_date, MAX(amount) AS max_amount FROM Transactions GROUP BY 1 ) SELECT DISTINCT transaction_id FROM Transactions INNER JOIN getMax ON DATE(Transactions.day) = transaction_date AND amount = max_amount ORDER BY 1
WITH max_amount_transactions AS ( SELECT DATE_FORMAT(day, '%Y-%m-%d') AS day, MAX(amount) AS amount FROM Transactions GROUP BY DATE_FORMAT(day, '%Y-%m-%d') ) SELECT t.transaction_id FROM Transactions t INNER JOIN max_amount_transactions m ON (DATE_FORMAT(t.day, '%Y-%m-%d') = m.day AND t.amount = m.amount) ORDER BY t.transaction_id
WITH maxes AS (SELECT DATE(day) day, MAX(amount) daily_max_amount FROM Transactions GROUP BY 1) SELECT t.transaction_id FROM Transactions t JOIN maxes ON DATE(t.day) = maxes.day AND t.amount = maxes.daily_max_amount ORDER BY t.transaction_id
WITH maximum AS ( SELECT transaction_id, RANK() OVER (PARTITION BY DATE_FORMAT(day, '%Y-%m-%d') ORDER BY amount DESC) as ranking FROM transactions) SELECT transaction_id FROM maximum WHERE ranking = 1 ORDER BY transaction_id
WITH n AS( SELECT *, DATE_FORMAT(day,"%Y-%m-%d") AS new_day FROM Transactions ) SELECT r.transaction_id FROM ( SELECT *, DENSE_RANK()OVER(PARTITION BY n.new_day ORDER BY amount DESC) AS rank_num FROM n ) r WHERE r.rank_num =1 ORDER BY 1
WITH ranked_transactions AS ( SELECT transaction_id, DATE(day) AS t_date, DENSE_RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) AS ranking FROM Transactions ) SELECT transaction_id FROM ranked_transactions WHERE ranking = 1 ORDER BY transaction_id
WITH t AS ( SELECT transaction_id, DENSE_RANK() OVER(PARTITION BY SUBSTRING(day,1,10) ORDER BY amount DESC) rk FROM Transactions) SELECT transaction_id FROM t WHERE rk = 1 ORDER BY transaction_id
WITH t0 AS ( SELECT transaction_id, DATE(day) AS day, amount FROM Transactions ), t1 AS ( SELECT day, MAX(amount) AS daily_max FROM t0 GROUP BY day ) SELECT transaction_id FROM t0 JOIN t1 ON t0.day=t1.day WHERE t0.amount = t1.daily_max ORDER BY 1 asc
WITH t1 AS ( SELECT * , MAX(amount) OVER(PARTITION BY DATE(day)) AS max_val FROM Transactions ) SELECT transaction_id FROM t1 WHERE amount = max_val ORDER BY transaction_id
WITH table1 AS( SELECT transaction_id, day, amount, RANK()OVER(PARTITION BY DAY(day) ORDER BY amount DESC) AS rnk FROM Transactions ) SELECT transaction_id FROM table1 WHERE rnk=1 ORDER BY transaction_id
WITH tb1 AS ( SELECT transaction_id, LEFT(day, POSITION(' ' IN day) - 1) AS day_date, amount FROM Transactions ), tb2 AS ( SELECT transaction_id, day_date, RANK() OVER(PARTITION BY day_date ORDER BY amount DESC) AS amount_rank FROM tb1 ) SELECT transaction_id FROM tb2 WHERE amount_rank = 1 ORDER BY transaction_id ASC
WITH temp AS (SELECT transaction_id, DATE_FORMAT(day, "%Y-%m-%d") AS day, amount FROM Transactions), temp2 AS (SELECT transaction_id, DENSE_RANK()OVER(PARTITION BY day ORDER BY amount DESC) AS rnk FROM temp) SELECT transaction_id FROM temp2 WHERE rnk = 1 ORDER BY 1
WITH tmp AS (SELECT transaction_id, DENSE_RANK() OVER(PARTITION BY DATE(day) ORDER BY amount DESC) AS daily_rank FROM Transactions ORDER BY day) SELECT transaction_id FROM tmp WHERE daily_rank=1 ORDER BY transaction_id ASC
WITH transaction_ranking AS ( SELECT date(day), transaction_id, dense_rank() over (partition by date(day) order by amount desc) as amount_rank from transactions ) select transaction_id from transaction_ranking where amount_rank =1 order by transaction_id
select A.transaction_id from (select transaction_id, amount, day(day) as dat, DENSE_RANK() over(partition by day(day) order by amount desc) as denseRnk from Transactions) A where A.denseRnk = 1 order by A.transaction_id asc
select T.transaction_id from ( select *, dense_rank() over ( partition by date(day) order by amount desc) as RNK from Transactions ) T where RNK=1 order by 1
select a.transaction_id from ( select transaction_id, amount, max(amount) over(partition by date(day)) as max_amount from Transactions )a where a.amount=a.max_amount order by a.transaction_id
select a.transaction_id from Transactions as a join Transactions as b on CAST(a.day as DATE)=CAST(b.day as DATE) group by a.transaction_id having sum(if(b.amount > a.amount, 1, 0))=0 order by a.transaction_id
select agg.transaction_id from ( select day , transaction_id , rank() over(partition by day(day) order by amount desc) as req_rank from transactions ) AGG where agg.req_rank = 1 order by 1
select distinct a.transaction_id from (select transaction_id, date(day) as day, amount from transactions) a join (select date(day) as day, max(amount) as amount from transactions group by date(day)) b on a.day = b.day and a.amount = b.amount order by a.transaction_id
select distinct transaction_id from ( select transaction_id , dense_rank() over (partition by cast(day as date) order by amount desc ) as rnk from Transactions ) as a where rnk=1 order by transaction_id
select distinct transaction_id from (select *, max(amount) over (partition by date(day)) as max_amt from transactions) a where amount = max_amt order by 1
select distinct transaction_id from (select *, max(amount) over(partition by cast(day as date)) as max_amount from Transactions) a where amount=max_amount order by transaction_id
select distinct transaction_id from (select day, transaction_id, rank()over(partition by day order by amount desc) as rnk from (select date_format(day,'%Y-%m-%d') as day,transaction_id, amount from Transactions)a)b where rnk = 1 order by 1
select distinct transaction_id from (select transaction_id,date_format(day,'%Y-%c-%e'), amount, RANK() over(partition by DATE_FORMAT(day,"%Y-%c-%e") order by amount desc) as rank_n from Transactions) as t where t.rank_n=1 order by transaction_id
select distinct transaction_id from Transactions where (date(day),amount) in ( select date(day), max(amount) over (partition by date(day)) as Max_amount from Transactions ) order by transaction_id
select distinct transaction_id from transactions t join (select max(amount) as amount, left(day, 10) as day from transactions group by 2) m on left(t.day, 10) = m.day and t.amount = m.amount order by 1
select m1.transaction_id from (Select t.transaction_id, t.amount, dense_rank() over (partition by day(t.day)order by amount DESC) as r from Transactions t) m1 where m1.r < 2 order by m1.transaction_id ASC
select n.transaction_id from (select transaction_id,rank() over (partition by DAY(day) order by amount desc) as a from transactions) n where n.a=1 order by n.transaction_id asc
select sub1.transaction_id from (select transaction_id, date(day) as date0, amount from transactions) sub1 join (select date(day) as date0, max(amount) as amt_max from transactions group by date(day)) sub2 on sub1.date0=sub2.date0 and sub1.amount=sub2.amt_max order by sub1.transaction_id
select t.transaction_id from ( select transaction_id, rank() over(partition by cast(day as date) order by amount desc) as rnk from transactions ) t where t.rnk=1 order by t.transaction_id
select t.transaction_id from ( select transaction_id, rank() over(partition by day(day) order by amount desc) as rnk from transactions ) t where t.rnk=1 order by t.transaction_id
select t.transaction_id from (select transaction_id, dense_rank() over(partition by date_format(day, '%y-%m-%d') order by amount desc) 'Rank' from Transactions) t where t.Rank = 1 order by t.transaction_id asc
select t.transaction_id from Transactions t inner join ( select date_format(day, '%Y-%m-%d') as days, max(amount) as max_amount from Transactions t group by days) a on date_format(a.days, '%Y-%m-%d') = date_format(t.day, '%Y-%m-%d') and t.amount = a.max_amount order by t.transaction_id
select t.transaction_id from transactions t join (select date(day) as day, max(amount) as mm from transactions group by date(day)) as temp on date(t.day) = temp.day and t.amount = mm order by 1 asc
select t.transaction_id from transactions t where t.amount = ( select max(tt.amount) from transactions tt where day(tt.day) = day(t.day) ) order by t.transaction_id
select t1.transaction_id from (select CAST(day AS DATE),amount,transaction_id,dense_rank() over(partition by cast(day as date) order by amount desc) as rnk from transactions)t1 where rnk=1 order by 1
select t1.transaction_id from transactions t1 where t1.amount = (select max(amount) from transactions t2 where extract(day from t2.day) = extract(day from t1.day) ) order by transaction_id
select t2.transaction_id from (select transaction_id, date(day) as date_type, max(amount) as max_value from Transactions group by date_type) as t1, Transactions t2 where t1.date_type = date(t2.day) and t2.amount = t1.max_value order by t2.transaction_id
select temp.transaction_id from ( select t.transaction_id, rank() over(partition by date(t.day) order by t.amount desc) as rnk from Transactions t ) temp where rnk=1 order by 1
select temp.transaction_id from (select t.transaction_id, rank() over (partition by date(day) order by amount desc) as rnk from transactions t ) temp where temp.rnk=1 order by 1
select tmp.transaction_id from( select transaction_id,rank() over (partition by date_format(day,'%Y-%M-%d') order by amount desc) as maximum_amount_rank from transactions )tmp where tmp.maximum_amount_rank = 1 order by tmp.transaction_id
select tr1.transaction_id as transaction_id from transactions tr1 where tr1.amount = (select max(tr2.amount) from transactions tr2 where date(tr1.day) = date(tr2.day) group by date(tr1.day)) order by 1 asc
select tran.transaction_id as transaction_id from Transactions tran join( select date(day) as max_day ,max(amount) as max_amount from Transactions group by max_day ) max_tran on tran.amount = max_tran.max_amount and date(tran.day) = max_tran.max_day group by transaction_id order by transaction_id
select transaction_id FROM (select transaction_id, rank() over (partition by DATE(day) order by amount desc) as rnk from transactions) t where rnk = 1 order by transaction_id
select transaction_id from ( select *, dense_rank() over (partition by date(day) order by amount desc) as rk from Transactions) a where a.rk=1 order by transaction_id
select transaction_id from ( select *, dense_rank() over (partition by date(day) order by amount desc) as rnk from transactions ) t where t.rnk = 1 order by transaction_id
select transaction_id from ( select *, dense_rank() over(partition by DATE(day) order by (amount) desc) drnk from transactions ) a where drnk=1 order by transaction_id
select transaction_id from ( select *,rank() over(partition by date(day) order by amount desc) as 'rk' from Transactions) tmp where rk = 1 order by transaction_id
select transaction_id from ( select a.*, rank() over (partition by date(day) order by amount desc) as rn from transactions as a ) as drv where rn = 1 order by 1
select transaction_id from ( select date(day) as day, transaction_id, rank()over(partition by date(day) order by amount desc) as rnk from Transactions )a where rnk=1 order by transaction_id
select transaction_id from ( select transaction_id , amount, rank() over(partition by left(day,10) order by amount desc) as 'rank' from Transactions ) a where a.rank = 1 order by transaction_id
select transaction_id from ( select transaction_id, amount, dense_rank() over(partition by extract(day from day) order by amount desc) as rnk from Transactions) t where rnk=1 order by transaction_id asc
select transaction_id from ( select transaction_id, date(day) as day, amount, rank() over(partition by date(day) order by amount desc) as ranks from Transactions) a where ranks = 1 order by transaction_id
select transaction_id from ( select transaction_id, date(day) as day, dense_rank() over(partition by date(day) order by amount desc) as d_rank from transactions ) as temp where d_rank = 1 order by 1 asc
select transaction_id from ( select transaction_id, date(day), rank() over (partition by date(day) order by amount desc) as rnk from transactions)T where rnk =1 order by transaction_id
select transaction_id from ( select transaction_id, date_format(day, '%Y-%m-%d'), rank() over(partition by date_format(day, '%Y%m%d')order by amount DESC) as rnk from transactions)p where rnk = 1 order by 1
select transaction_id from ( select transaction_id, date_format(day,"%m %d %Y") dt, dense_rank() over (partition by date_format(day,"%m %d %Y") order by amount desc) as mx from transactions ) a where mx =1 order by 1
select transaction_id from ( select transaction_id, day, rank()over(partition by day(day) order by amount desc) as rnk from transactions ) as t where rnk=1 order by transaction_id
select transaction_id from ( select transaction_id, dense_rank() over (partition by DATE(day) order by amount desc) as rn from Transactions ) a where rn=1 order by transaction_id
select transaction_id from ( select transaction_id, dense_rank() over (partition by date(day) order by amount desc) rn from Transactions)A where rn =1 order by 1
select transaction_id from ( select transaction_id, dense_rank() over(partition by DATE_FORMAT(day,'%Y-%m-%d') order by amount desc) as rnk from Transactions) temp where rnk=1 order by transaction_id
select transaction_id from ( select transaction_id, dense_rank() over(partition by date(day) order by amount desc) 'order_amount' from transactions t )A where A.order_amount=1 order by transaction_id asc
select transaction_id from ( select transaction_id, dense_rank() over(partition by date(day) order by amount desc) as 'day_rank' from transactions) as A where day_rank = 1 order by transaction_id
select transaction_id from ( select transaction_id, dense_rank() over(partition by date(day) order by amount desc) as ranked from transactions ) f where ranked = 1 order by 1
select transaction_id from ( select transaction_id, dense_rank() over(partition by date(day) order by amount desc) as rk from transactions group by transaction_id)sq where rk =1 order by 1
select transaction_id from ( select transaction_id, dense_rank() over(partition by date(day) order by amount desc) as rnk from Transactions ) as t where t.rnk = 1 order by transaction_id
select transaction_id from ( select transaction_id, dense_rank() over(partition by date(day) order by amount desc) r from transactions)b where r=1 order by 1
select transaction_id from ( select transaction_id, dense_rank() over(partition by substr(day, 1, 10) order by amount desc) as r_rank from transactions) t1 where r_rank = 1 order by 1
select transaction_id from ( select transaction_id, rank() over (partition by date(day) order by amount desc) as ranking from transactions t )_ where ranking = 1 order by transaction_id
select transaction_id from ( select transaction_id, rank() over (partition by date(day) order by amount desc) as rn from Transactions ) as temp where rn = 1 order by 1
select transaction_id from ( select transaction_id, rank() over (partition by date(day) order by amount desc) as testu from transactions ) a where testu = 1 order by 1
select transaction_id from ( select transaction_id, rank() over(partition by date order by amount desc) as r_rank from ( select transaction_id, substr(day, 1, 10) as date, amount from transactions) t) t1 where r_rank = 1 order by 1
select transaction_id from ( select transaction_id, rank() over(partition by date(day) order by amount desc) as rk from transactions ) a where rk = 1 order by transaction_id
select transaction_id from ( select transaction_id, rank() over(partition by date(day) order by amount desc) as rnk from transactions) as sub where rnk=1 order by 1
select transaction_id from ( select transaction_id, rank() over(partition by date_format(day,'%Y-%m-%d') order by amount desc) as rank_num from transactions) cte where rank_num = 1 order by 1
select transaction_id from ( select transaction_id, rank() over(partition by str_to_date(day,'%Y-%m-%d') order by amount desc ) as rn from transactions) sub where rn = 1 order by 1
select transaction_id from ( select transaction_id,amount,date_format (day, '%Y-%m-%d') as day,DENSE_RANK() OVER(PARTITION BY DATE_FORMAT(day, "%Y-%m-%d") ORDER BY amount DESC) AS RNK from transactions ) as t where RNK=1 order by transaction_id
select transaction_id from ( select transaction_id,day,amount, rank() OVER(PARTITION BY date(day) ORDER BY amount DESC) as r from Transactions) t where r = 1 order by 1
select transaction_id from (SELECT transaction_id, date(day), amount, rank() over (partition by date(day) order by amount desc) as r from transactions) t where r=1 order by transaction_id
select transaction_id from (Select transaction_id, rank() over (partition by date_format(day,"%Y-%m-%d") order by amount desc) as rk from transactions) x where rk = 1 order by 1
select transaction_id from (select *, dense_rank() over (partition by date(day) order by amount desc) as dt from transactions ) tmp where dt=1 ORDER BY transaction_id ASC
select transaction_id from (select *, dense_rank() over (partition by date(day) order by amount desc) as dt from transactions order by day asc) tmp where dt=1 ORDER BY transaction_id ASC
select transaction_id from (select *, dense_rank() over(partition by left(day,10) order by amount desc) as rnk from transactions) t1 where rnk = 1 order by transaction_id asc
select transaction_id from (select *, rank() over(partition by date order by amount DESC) as rk from (select *, date_format(day, '%Y-%m-%d') as date from Transactions) as a) as b where rk=1 order by transaction_id
select transaction_id from (select *, rank() over(partition by date(day) order by amount desc) as rk from Transactions ) as a where a.rk = 1 order by 1
select transaction_id from (select *, rank() over(partition by date_format(day,'%Y-%m-%d') order by amount desc) as rnk from transactions)a where rnk = 1 order by transaction_id
select transaction_id from (select *,dense_rank()over(partition by date(day) order by amount desc)rk from transactions) as e where rk=1 order by transaction_id
select transaction_id from (select date(day) as date,max(amount) as amount from Transactions group by date(day)) as a left join (select transaction_id,date(day) as d, amount as a from Transactions ) as b on a.date = b.d and a.amount = b.a order by transaction_id
select transaction_id from (select dayinfo, transaction_id, dense_rank() over(partition by dayinfo order by amount desc) 'rank' from (Select *, DATE_FORMAT(day, '%Y-%m-%d') 'dayinfo' from Transactions) a) b where b.rank=1 order by transaction_id
select transaction_id from (select transaction_Id, rank()over(partition by date_format(day, '%Y-%m-%d') order by amount desc) as ranks from transactions) as t where ranks = 1 order by transaction_id
select transaction_id from (select transaction_id , rank() over (partition by cast(day as date) order by amount desc) as rnk from Transactions )t where t.rnk=1 order by transaction_id asc
select transaction_id from (select transaction_id , rank() over (partition by day_date order by amount desc) as rankIdx from (select transaction_id , date_format(str_to_date(day, "%Y-%m-%d %H:%i:%s"), "%Y-%m-%d") as day_date , amount from Transactions) P ) Q where rankIdx = 1 order by transaction_id asc
select transaction_id from (select transaction_id , rank() over(partition by date(day) order by amount desc) as ranks from Transactions ) temp where ranks = 1 order by transaction_id
select transaction_id from (select transaction_id ,rank() over (partition by substr(day,1,10) order by amount desc) as rn from Transactions) t where rn = 1 order by 1
select transaction_id from (select transaction_id, amount, max(amount) over (partition by date(day)) as max_amount from Transactions) a where amount = max_amount order by 1
select transaction_id from (select transaction_id, amount, rank() over (partition by date(day) order by amount desc) as roNo from Transactions) temp where roNo = 1 order by 1
select transaction_id from (select transaction_id, day, amount, rank() over(partition by left(day,10) order by amount desc) as rank1 from transactions)a where rank1 = 1 order by transaction_id
select transaction_id from (select transaction_id, day, dense_rank() over (partition by date(day) order by amount desc) as num from transactions) a where num = 1 order by transaction_id asc
select transaction_id from (select transaction_id, dense_rank() over (partition by cast(day as date) order by amount desc) as R from transactions)a where R = 1 order by transaction_id
select transaction_id from (select transaction_id, dense_rank() over(partition by cast(day as date) order by amount desc) as rnk from transactions) t where rnk = 1 order by 1
select transaction_id from (select transaction_id, dense_rank() over(partition by date_format(day, '%Y-%m-%d') order by amount desc) as rk from transactions ) as temp where rk=1 order by transaction_id
select transaction_id from (select transaction_id, dt, rank() over (partition by dt order by amount desc) as rnk from (select transaction_id, date(day) as dt, amount from Transactions) a) b where rnk = 1 order by transaction_id
select transaction_id from (select transaction_id, left(day, 10) as day, amount, rank() over(partition by left(day, 10) order by amount desc) as rnk from Transactions) s where rnk = 1 order by 1
select transaction_id from (select transaction_id, rank() over(partition by cast(day as date) order by amount desc)rnk from transactions )z where rnk=1 order by 1
select transaction_id from (select transaction_id, rank() over(partition by date(day) order by amount desc) as rnk from transactions) t where rnk = 1 order by transaction_id asc
select transaction_id from (select transaction_id, rank() over(partition by date_format(day, '%Y-%m-%d') order by amount desc ) rnk from transactions) t where rnk=1 order by transaction_id
select transaction_id from (select transaction_id, rank()over(partition by date_format(day, "%Y-%m-%d") order by amount desc) as rank_num from transactions) a where rank_num=1 order by transaction_id
select transaction_id from (select transaction_id,date(day), rank() over (partition by date(day) order by amount desc) as rnk from transactions order by date(day)) a where a.rnk=1 order by transaction_id
select transaction_id from (select transaction_id,day,amount, rank() over(Partition by date(day) order by amount desc) as rk from Transactions) as t where rk=1 order by 1
select transaction_id from (select transaction_id,dense_rank()over(partition by day(day) order by amount desc)rk from Transactions) t where rk = 1 order by 1
select transaction_id from Transactions T left join (select date(day) as date, max(amount) as amount from Transactions group by date) as M on date(T.day) = M.date where T.amount = M.amount order by transaction_id asc
select transaction_id from Transactions a join (select DATE_FORMAT(day, "%Y-%m-%d") as day, max(amount) as mxamt from Transactions group by DATE_FORMAT(day, "%Y-%m-%d")) b on (DATE_FORMAT(a.day, "%Y-%m-%d") = b.day) and (a.amount = b.mxamt) order by transaction_id
select transaction_id from Transactions as a join ( select DAY(day) as day, max(amount) as max_amount from Transactions group by 1 ) as b on DAY(a.day) = b.day and a.amount = b.max_amount order by a.transaction_id
select transaction_id from Transactions as t1 where amount = ( select max(amount) from Transactions as t2 where day(t1.day) = day(t2.day) ) order by transaction_id
select transaction_id from Transactions left join ( select max(amount) as max_amount, day from Transactions group by DATE_FORMAT(day, "%Y, %M, %e") ) t on t.max_amount = Transactions.amount and DATE_FORMAT(t.day, '%Y, %M, %e') = DATE_FORMAT(Transactions.day, '%Y, %M, %e') where max_amount is not null order by transaction_id ASC
select transaction_id from Transactions t inner join (Select distinct date(day) as dayy, max(amount) as amountt from Transactions group by date(day)) d on date(t.day) = d.dayy and d.amountt = t.amount order by transaction_id
select transaction_id from Transactions t join ( select MAX(amount) as amt, DATE(day) as day from Transactions t group by 2 )a on DATE(t.day) = a.day and t.amount = a.amt order by t.transaction_id
select transaction_id from Transactions t where t.amount=(select max(t1.amount) as max_amount from Transactions t1 where date(t.day)=date(t1.day)) order by transaction_id
select transaction_id from Transactions t, (select date(day) as day, max(amount) amount from Transactions group by date(day) ) q where date(t.day) = q.day and t.amount = q.amount order by transaction_id
select transaction_id from Transactions t1 where (amount, cast(day as date)) in ( select max(t2.amount), cast(t2.day as date) from Transactions t2 group by cast(t2.day as date) ) order by transaction_id
select transaction_id from Transactions where (amount, cast(day as date)) in (select max(amount), cast(day as date) from Transactions group by cast(day as date)) order by transaction_id
select transaction_id from Transactions where (date(day), amount) in ( select date(day) as day, max(amount) from Transactions group by date(day)) order by transaction_id
select transaction_id from Transactions where (date(day), amount) in (select date(day) as day, max(amount) as max_amount from Transactions group by 1) order by 1
select transaction_id from Transactions where (date(day), amount) in (select date(day), max(amount) from transactions group by 1) order by 1
select transaction_id from Transactions where (date(day),amount) in (select date(day) as day, max(amount) as amount from Transactions group by 1) order by transaction_id
select transaction_id from Transactions where (date(day),amount) in (select date(day) as day1, max(amount) as maxamount from Transactions group by day1) order by transaction_id
select transaction_id from Transactions where (date(day),amount) in (select date(day), max(amount) from Transactions group by 1) order by 1
select transaction_id from Transactions where (date(day),amount) in (select date(day), max(amount) from Transactions group by date(day)) order by 1
select transaction_id from Transactions where (date_format(day,"%Y-%m-%d") , amount) in (select date_format(day,"%Y-%m-%d") as 'Day', max(amount) as 'max_amt' from Transactions group by date_format(day,"%Y-%m-%d")) order by transaction_id
select transaction_id from Transactions where (date_format(day,'%y-%m%d'),amount) in (select date_format(day,'%y-%m%d'),max(amount) from Transactions group by date_format(day,'%y-%m%d')) order by 1
select transaction_id from Transactions where (left(day,10), amount) in (select left(day,10), max(amount) from Transactions group by 1) order by 1
select transaction_id from Transactions where(date(day), amount) in (select date(day), max(amount) from Transactions group by date(day)) order by transaction_id
select transaction_id from Transactions where(date(day),amount) in ( select date(day), max(amount) from Transactions group by date(day) ) order by transaction_id
select transaction_id from transactions t1 join (SELECT DATE(day) as day, max(amount) as daily_max from transactions group by 1) t2 on t1.amount = t2.daily_max and DATE(t1.day) = t2.day order by 1 asc
select transaction_id from transactions tr, (select LEFT(day,10) as day, MAX(amount) as amount from transactions group by LEFT(day,10)) t where LEFT(tr.day,10) = t.day and tr.amount = t.amount order by transaction_id
select transaction_id from transactions trans join (select date(day) as day, max(amount) as max_amt from transactions group by 1) t on date(trans.day) = t.day and trans.amount = t.max_amt order by 1
select transaction_id from transactions where (amount,cast(day as date)) IN (select max(amount), cast(day as date) as d from transactions group by cast(day as date)) order by transaction_id
select transaction_id from transactions where (date(day), amount) in ( select date(day) as days, max(amount) as amount from Transactions group by 1 ) order by 1
select transaction_id from transactions where (date(day), amount) in ( select date(day), max(amount) from transactions group by date(day) ) order by 1
select transaction_id from transactions where (date(day), amount) in (select date(day) , max(amount) from transactions group by 1) order by 1
select transaction_id from transactions where (date(day), amount) in (select date(day), max(amount) from transactions group by 1) order by 1
select transaction_id from transactions where (date(day),amount) in (select date(day) as day,max(amount) as max_amt from transactions group by 1) order by 1
select transaction_id from transactions where (date(day),amount) in (select date(day),max(amount) from Transactions group by 1) order by 1 asc
select transaction_id from transactions where (date(day),amount)in ( select date(day),max(amount) from transactions group by date(day) ) order by transaction_id
select transaction_id from transactions where (date_format(day, '%Y-%m-%d'), amount) in ( select date_format(day, '%Y-%m-%d'), max(amount) from transactions group by date_format(day, '%Y-%m-%d') ) order by 1
select transaction_id from transactions where (date_format(day, '%Y-%m-%d'), amount) in (select date_format(day, '%Y-%m-%d') as day, max(amount) from transactions group by date_format(day, '%Y-%m-%d')) order by transaction_id
select transaction_id from transactions where (date_format(day, '%Y-%m-%d'), amount) in (select date_format(day, '%Y-%m-%d') day, max(amount) from transactions group by date_format(day, '%Y-%m-%d')) order by transaction_id
select transaction_id from transactions where (date_format(day, '%Y-%m-%d'), amount) in (select date_format(day, '%Y-%m-%d') day, max(amount) max_amt from transactions group by date_format(day, '%Y-%m-%d')) order by transaction_id
select transaction_id from transactions where (date_format(day,'%Y-%m-%d'),amount) in ( select date_format(day,'%Y-%m-%d') day, max(amount) from transactions group by date_format(day,'%Y-%m-%d')) order by transaction_id
select transaction_id from transactions where (day(day), amount) in ( select day(day), max(amount) from transactions group by 1 ) order by 1
select transaction_id from transactions where (day(day),amount) in (select day(day) as dy ,max(amount) amount from transactions group by day(day) ) order by 1
select transaction_id from transactions where (left(day, 10), amount) in (select distinct left(day, 10) as day, max(amount) as amount from transactions group by 1) order by transaction_id asc
select transaction_id from( select *, dense_rank() over(partition by day order by amount desc) as rn from ( select transaction_id, substr(day, 1,10) as day, amount from transactions) tb1) tb2 where rn = 1 order by 1
select transaction_id from( select *, dense_rank() over(partition by substr(day, 1,10) order by amount desc) as rn from transactions ) tb1 where rn = 1 order by 1
select transaction_id from( select *, rank() over (partition by date(day) order by amount desc) as rnk from transactions) t where rnk=1 order by 1
select transaction_id from( select date(day) as day , transaction_id , amount from Transactions t) t1 join ( select date(day) as day , max(amount) as max_today from Transactions t group by date(day)) t2 on t1.day = t2.day where t1.amount = t2.max_today order by transaction_id
select transaction_id from( select transaction_id, day, amount, rank() over (partition by cast(day as date) order by amount desc) rnk from transactions) temp where rnk = 1 order by transaction_id
select transaction_id from( select transaction_id, rank() over(partition by date(day) order by amount desc) as rnk from Transactions ) as temp1 where rnk = 1 order by 1
select transaction_id from( select transaction_id,day, rank() over (partition by date_format(day,'%Y-%m-%d') order by amount DESC) as rnk from transactions) a where rnk=1 order by 1
select transaction_id from(select *, rank() over(partition by date(day) order by amount desc) rnk from Transactions)a where rnk = 1 order by 1
select x.transaction_id from (select transaction_id, rank() over(partition by DAY(day) order by amount desc) as ran from Transactions)x where x.ran = 1 order by x.transaction_id
select z.transaction_id from (select *, dense_rank()over(partition by date(day) order by amount desc) as rk from transactions)z where z.rk=1 order by 1
with CTE as ( select transaction_id, rank() over(partition by date(day) order by amount desc) as rk from transactions ) select transaction_id from cte where rk = 1 order by transaction_id
with a as( select transaction_id,rank()over(partition by date_format(day,'%Y-%m-%d') order by amount desc) as rdesc from Transactions) select transaction_id from a where rdesc=1 order by transaction_id
with base as( select day0, transaction_id, amount, max(amount) over(partition by day0) as max_amount from (select *, date_format(day,"%Y-%m-%d") as day0 from transactions) sub ) select transaction_id from( select * from base where amount= max_amount ) sub1 order by 1
with ct as ( select date(day) as date, max(amount) as ma from transactions group by date(day) ) select transaction_id from transactions t, ct where t.amount >= ct.ma and date(t.day) = ct.date order by transaction_id asc
with cte as ( Select * , max(amount) over(partition by date(day)) as 'max_at_that_day' from Transactions ) Select transaction_id from cte where amount = max_at_that_day order by transaction_id
with cte as ( select date_format(day,'%y-%m-%d') as day, max(amount) as max_amt from Transactions group by date_format(day,'%y-%m-%d') ) select t.transaction_id from Transactions t join cte c on date_format(t.day,'%y-%m-%d')= c.day and c.max_amt = t.amount order by transaction_id asc
with cte as ( select date_format(day,'%y-%m-%d') as day, max(amount) as max_amt from Transactions group by date_format(day,'%y-%m-%d') ) select t.transaction_id from Transactions t where (date_format(t.day,'%y-%m-%d'),t.amount) in (select * from cte) order by transaction_id asc
with cte as ( select day(day) as d, max(amount) as max_amount from Transactions group by day(day) ) select transaction_id from Transactions inner join cte on day(day) = d where amount = max_amount order by transaction_id
with cte as ( select substr(day,1,10) as date,transaction_id,amount from transactions ), demo as ( select date,max(amount) as amount from cte group by date ) select cte.transaction_id from demo as d join cte on d.date=cte.date and d.amount=cte.amount order by transaction_id
with cte as ( select transaction_id, DATE(day) as d, amount, dense_rank() over(partition by DATE(day) order by amount desc) as rnk from Transactions ) select transaction_id from cte where rnk=1 order by transaction_id
with cte as ( select transaction_id, amount, dense_rank() over(partition by extract(day from day) order by amount desc) as rnk from Transactions) select transaction_id from cte where rnk=1 order by transaction_id asc
with cte as ( select transaction_id, amount, max(amount) over (partition by day(day)) as max_amount from Transactions ) select transaction_id from cte where amount = max_amount order by 1
with cte as ( select transaction_id, amount, max(amount) over(partition by date_format(day, '%Y-%m-%d')) max_day_amount from Transactions tx ) select transaction_id from cte where amount = max_day_amount order by 1
with cte as ( select transaction_id, date(day) day, amount from transactions ) select c.transaction_id from cte c where c.amount >= all (select amount from cte where day=c.day) order by 1
with cte as ( select transaction_id, day(day) as day, amount, dense_rank() over (partition by day(day) order by amount desc) as rnk from Transactions ) select transaction_id from cte where rnk = 1 order by 1
with cte as ( select transaction_id, day(day) as day, amount, max(amount) over (partition by day(day) order by amount desc) as max_amount from Transactions ) select transaction_id from cte where amount = max_amount order by 1
with cte as ( select transaction_id, dense_rank() over (partition by date(day) order by amount desc) as rnk from Transactions ) select transaction_id from cte where rnk=1 order by transaction_id
with cte as ( select transaction_id, dense_rank() over(partition by date(day) order by amount desc) as amt_ranking from transactions ) select transaction_id from cte where amt_ranking=1 order by transaction_id
with cte as ( select transaction_id, rank() over(partition by date(day) order by amount desc) as rnk from transactions ) select transaction_id from cte where rnk=1 order by transaction_id
with cte as ( select transaction_id, rank() over(partition by date(day) order by amount desc)rnk from transactions ) select transaction_id from cte where rnk=1 order by 1
with cte as ( select transaction_id,date(day), dense_rank() over(partition by date(day) order by amount desc) as maxTransactionsRank from Transactions ) select distinct transaction_id from cte where maxTransactionsRank = 1 order by transaction_id asc
with cte as ( select transaction_id,day,amount, dense_rank() over(partition by date(day) order by amount desc) rnk from transactions ) select transaction_id from cte where rnk=1 order by 1
with cte as (SELECT transaction_id, RANK() OVER (PARTITION BY DATE(day) ORDER BY amount DESC) as rnk FROM Transactions) SELECT transaction_id FROM cte WHERE rnk = 1 ORDER BY transaction_id
with cte as (select *, rank() over(partition by date(day) order by amount desc) as `rank` from transactions) select transaction_id from cte where `rank`=1 order by transaction_id
with cte as (select date_format(day,'%Y-%m-%d') as day, max(amount) as max_amt from transactions group by date_format(day,'%Y-%m-%d') ) select transaction_id from transactions join cte on date_format(transactions.day,'%Y-%m-%d')=cte.day and cte.max_amt=amount order by transaction_id
with cte as (select transaction_id , amount, max(amount) over(partition by date(day)) as max_amt from Transactions order by transaction_id ) select transaction_id from cte where amount = max_amt
with cte as (select transaction_id, DENSE_RANK() over(partition by cast(day as date) order by amount desc) as rnk from Transactions ) select transaction_id from cte where rnk = 1 order by transaction_id
with cte as (select transaction_id, Day(day) as day,amount from transactions) select transaction_id from( select *, dense_rank() over (partition by day order by amount desc) as series from cte) t where series=1 order by 1
with cte as (select transaction_id, amount, dense_rank() over (partition by date_format(day, '%Y-%m-%d') order by amount desc) rnk from Transactions order by transaction_id) select transaction_id from cte where rnk=1 order by transaction_id
with cte as (select transaction_id, rank() over (partition by left(day, 10) order by amount desc) as rk from transactions order by 1) select transaction_id from cte where rk =1
with cte as (select transaction_id, rank() over(partition by date_format(day,"%Y-%m-%d") order by amount DESC) as rankno from Transactions) select cte.transaction_id from cte where rankno=1 order by 1
with cte as (select transaction_id,date(day) as days ,max(amount) as max_amount from Transactions as t group by days) select transaction_id from Transactions where (date(day),amount) in (select days,max_amount from cte ) order by transaction_id
with cte as (select transaction_id,left(day, 10), rank() over (partition by left(day,10) order by amount desc) as rk from transactions) select transaction_id from cte where rk = 1 order by 1
with cte as( select *, dense_rank () over (partition by date(day) order by amount desc) rnk from Transactions ) select distinct transaction_id from cte where rnk = 1 order by transaction_id
with cte as( select transaction_id, date(day), amount, dense_rank() over(partition by date(day) order by amount desc) as rnk from Transactions) select transaction_id from cte where rnk=1 order by 1
with cte as( select transaction_id, date(day), amount, dense_rank() over(partition by date(day) order by amount desc) as rnk from Transactions) select transaction_id from cte where rnk=1 order by transaction_id
with cte as(select transaction_id, dense_rank() over(partition by left(day,10) order by amount desc) as rank1 from transactions) select transaction_id from cte where rank1=1 order by 1 asc
with cte1 as (select left(day,10) as day, max(amount) over(partition by left(day,10)) as max_amount from transactions) select distinct transaction_id from ( select transaction_id, left(day,10) as day1, amount from transactions) A join cte1 on A.day1 = cte1.day and A.amount = cte1.max_amount order by transaction_id
with cte1 as (select transaction_id, date_format(day, '%Y-%m-%d') as day, amount from transactions), cte2 as (select transaction_id, amount, rank() over (partition by day order by amount desc) as 'ranking' from cte1) select transaction_id from cte2 where ranking = 1 order by transaction_id asc
with d1 as (select transaction_id, dense_rank() over(partition by date(day) order by amount desc) r from transactions) select transaction_id from d1 where r = 1 order by transaction_id asc
with dates as( select transaction_id, date(day) as date, amount from transactions) select transaction_id from( select transaction_id, dense_rank() over(partition by date order by amount desc) as ranks from dates) as sub where ranks = 1 order by transaction_id
with day as ( select transaction_id, amount, date_format(day,'%Y-%m-%d') as day from Transactions), rk as (select transaction_id,dense_rank() over (partition by day order by amount desc) as rk from day) select transaction_id from rk where rk = 1 order by 1
with max_amt as ( select date(day) as formatted_date, max(amount) as max_amount from transactions group by date(day) ) select transaction_id from transactions a join max_amt b on a.amount=b.max_amount and date(a.day)=b.formatted_date order by transaction_id
with max_amt as( select left(day, 10) as day_new, max(amount) as max_amt from Transactions group by day_new ) select transaction_id from Transactions left join max_amt on max_amt.day_new = left(Transactions.day, 10) where Transactions.amount = max_amt.max_amt order by transaction_id
with max_per_day as(select max(amount) as max_amt,CAST(transactions.day AS DATE) as new_Date from transactions group by new_Date), updated_date as( select transaction_id,CAST(transactions.day AS DATE) as new_Date,amount from transactions) select distinct(transaction_id) from updated_date T inner join max_per_day M on (T.new_Date=M.new_Date and T.amount=M.max_amt) order by transaction_id
with refined as ( select transaction_id, date(day) as t_date, dense_rank() over (partition by date(day) order by amount desc) as rank_t from Transactions group by 1,2) select transaction_id from refined where rank_t = 1 order by transaction_id
with t as ( select *,rank() over(partition by date(day) order by amount desc) as rk from transactions ) select transaction_id from t where rk = 1 order by 1
with t as ( select transaction_id, rank() over (partition by date_format(day,'%Y-%m-%d') order by amount desc ) ranks from Transactions ) select transaction_id from t where ranks = 1 order by 1
with t as (select *, dense_rank()over(partition by cast(day as date) order by amount desc) as rnk from transactions) select distinct transaction_id from t where rnk = 1 order by 1
with t as( select transaction_id, cast(day as date) dt,amount from transactions ), t2 as( select max(amount) amount,dt from t group by dt ) select transaction_id from t where (amount,dt) in (select * from t2) order by transaction_id
with t1 as ( Select transaction_id, rank() over(partition by day(day) order by amount desc) as r from Transactions ) Select transaction_id from t1 where r = 1 order by transaction_id asc
with t1 as ( select date(day) as 'date', transaction_id, rank() over (partition by date(day) order by amount desc) as rnk from transactions ) select transaction_id from t1 where rnk = 1 order by transaction_id asc
with t1 as (select transaction_id, left(day,10) as day, amount from transactions), t2 as (select transaction_id, rank() over(partition by day order by amount desc) as rn from t1 group by 1) select transaction_id from t2 where rn =1 order by 1
with t1 as (select transactions.*, dense_rank() over (partition by date(day) order by amount desc) as rnk from transactions) select distinct transaction_id from t1 where rnk = 1 order by 1
with tb as(select date(day) as dt, max(amount) as mt from transactions group by dt) select transaction_id from transactions where (date(day), amount) in (select * from tb) order by transaction_id
with temp as ( select max(amount) as amount, cast(day as date) as day_d from Transactions group by day_d ) select A.transaction_id from Transactions A left join temp B on A.amount = B.amount where cast(day as date) = B.day_d order by A.transaction_id ASC
with temp as ( select transaction_id, rank() over (partition by date(day) order by amount DESC) as rk from Transactions ) select transaction_id from temp where rk = 1 order by transaction_id ASC
with temp as (select date(day) as dt, max(amount) as amt from transactions group by 1) select t.transaction_id from transactions t inner join temp on date(t.day)=temp.dt and t.amount=temp.amt order by 1
with temp as (select transaction_id, amount, day, dense_rank() over (partition by day(day) order by amount desc) as rank_ from transactions) select transaction_id from temp where rank_ = 1 order by 1 asc
with temp as( select *, max(amount) over(partition by day(day)) as maxx from transactions ) select transaction_id from temp where amount=maxx order by transaction_id
with tmp as ( select transaction_id, cast(day as date) as day, amount, max(amount) over (partition by cast(day as date)) as day_max from Transactions ) select transaction_id from tmp where amount = day_max order by transaction_id asc
with tmp as (select transaction_id, day, amount, rank() over(partition by date(day) order by amount desc) as ranks from Transactions) select transaction_id from tmp where ranks = 1 order by 1
with top_transactions as ( select transaction_id, rank() over (partition by DATE(day) order by amount desc) as rnk from Transactions ) select transaction_id from top_transactions where rnk =1 order by transaction_id asc
with trans1 as ( select transaction_id,date(day) as day, max(amount) OVER (PARTITION BY date(day)) as maxi, dense_rank() OVER(PARTITION BY date(day) ORDER BY amount desc) as ranking from transactions ) select distinct a.transaction_id from transactions a JOIN trans1 b ON a.transaction_id = b.transaction_id where a.amount = b.maxi and ranking = 1 order by 1
with ts as (select transaction_id, date(day) as dtt, amount from Transactions ) select transaction_id from ts t1 where amount = (select max(amount) from ts t2 where t1.dtt = t2.dtt ) order by 1
with uno as ( Select transaction_id, dense_rank() over (partition by date(day) order by amount desc) as rnk from transactions ) Select transaction_id from uno where rnk = 1 order by transaction_id
with x as ( select transaction_id, date(day) as date, amount, rank() over (partition by date(day) order by amount desc) as rnk from transactions ) select transaction_id from x where rnk = 1 order by 1
with xyz as( select transaction_id,left(day,10) as dated , max(amount) as total, rank () over (partition by left(day,10) order by max(amount) desc) as rnk from transactions group by transaction_id,left(day,10)) select distinct transaction_id from xyz where rnk = 1 order by transaction_id
