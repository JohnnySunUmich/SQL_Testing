SELECT B.group_id, MIN(B.player) AS player_id FROM (SELECT P.group_id, M.player, SUM(M.score) AS totalScore FROM (SELECT first_player AS player, first_score AS score FROM Matches UNION ALL SELECT second_player AS player, second_score AS score FROM Matches) M JOIN Players P ON M.player = P.player_id GROUP BY M.player) B WHERE (B.group_id, B.totalScore) IN ( SELECT A.group_id, MAX(A.totalScore) AS maxScore FROM (SELECT P.group_id, M.player, SUM(M.score) AS totalScore FROM (SELECT first_player AS player, first_score AS score FROM Matches UNION ALL SELECT second_player AS player, second_score AS score FROM Matches) M JOIN Players P ON M.player = P.player_id GROUP BY M.player) A GROUP BY A.group_id) GROUP BY B.group_id
SELECT C.group_id, C.player AS player_id FROM (SELECT ROW_NUMBER() OVER (PARTITION BY B.group_id ORDER BY B.total_score DESC) R, B.group_id, B.player, B.total_score FROM (SELECT P.group_id, A.player, SUM(A.score) total_score FROM (SELECT first_player AS player, first_score AS score FROM Matches UNION ALL SELECT second_player AS player, second_score AS score FROM Matches) A LEFT JOIN Players P ON P.player_id = A.player GROUP BY A.player) B) C WHERE C.R = 1
SELECT a.group_id AS GROUP_ID, a.player_id as PLAYER_ID FROM (SELECT p.player_id, p.group_id, SUM(CASE WHEN m.first_player = p.player_id THEN m.first_score WHEN m.second_player = p.player_id THEN m.second_score ELSE 0 END) as total_score From Players p LEFT JOIN Matches m ON p.player_id = m.first_player OR p.player_id = m.second_player GROUP BY 1 ORDER BY 2, 3 DESC, 1 ASC) as a GROUP BY a.group_id
SELECT group_id ,player_Id FROM (SELECT * ,ROW_NUMBER() OVER (PARTITION BY group_id ORDER BY score DESC,player_id) AS rn FROM (SELECT p.* ,SUM(CASE WHEN p.player_id = m.first_player THEN first_score ELSE 0 END) + SUM(CASE WHEN p.player_id = m.second_player THEN second_score ELSE 0 END) AS score FROM Players p LEFT JOIN Matches m ON p.player_id = m.first_player OR p.player_id = m.second_player GROUP BY p.player_id,p.group_id) a) b WHERE rn = 1
SELECT group_id ,player_id FROM ( SELECT p.player_id ,p.group_id ,SUM(score) AS total_score ,RANK() OVER(PARTITION BY p.group_id ORDER BY SUM(score) DESC, p.player_id) AS ranks FROM Players p INNER JOIN ( SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player AS player_id, second_score AS score FROM Matches ) t ON p.player_id = t.player_id GROUP BY p.player_id, p.group_id ) m WHERE ranks = 1
SELECT group_id ,player_id FROM (SELECT * ,RANK() OVER (PARTITION BY group_id ORDER BY score DESC,player_id) AS rk FROM (SELECT p.player_id ,p.group_id ,SUM(CASE WHEN p.player_id = m.first_player THEN m.first_score ELSE 0 END) +SUM(CASE WHEN p.player_id = m.second_player THEN m.second_score ELSE 0 END) AS score FROM Players p JOIN Matches m ON p.player_id = m.first_player OR p.player_id = m.second_player GROUP BY 1,2) a) b WHERE rk = 1
SELECT group_id AS GROUP_ID,player_id AS PLAYER_ID FROM ( SELECT p.group_id,t.player_id,SUM(t.score) AS score, RANK()OVER(PARTITION BY group_id ORDER BY SUM(t.score) DESC,t.player_id ASC) AS rnk FROM (SELECT first_player AS player_id, SUM(first_score) AS score FROM Matches GROUP BY first_player UNION ALL SELECT second_player AS player_id,SUM(second_score) AS score FROM Matches GROUP BY second_player) t LEFT JOIN Players p ON p.player_id=t.player_id GROUP BY t.player_id,p.group_id) m WHERE rnk=1
SELECT group_id, MIN(player_id) AS player_id FROM (SELECT group_id, sub2.player_id AS player_id FROM (SELECT group_id, sub.player_id AS player_id, SUM(score) AS ttl, MAX(SUM(score)) OVER (PARTITION BY group_id) AS max_ttl FROM (SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player, second_score FROM Matches) sub JOIN Players p ON sub.player_id = p.player_id GROUP BY 1,2) sub2 WHERE ttl = max_ttl) AS sub3 GROUP BY 1
SELECT group_id, player_id FROM ( SELECT group_id, p.player_id, ROW_NUMBER() OVER (PARTITION BY group_id ORDER BY SUM(score) DESC, player_id) AS rk FROM Players p INNER JOIN (SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player AS player_id, second_score AS score FROM Matches) sub ON p.player_id = sub.player_id GROUP BY group_id, p.player_id ) sub WHERE rk = 1 ORDER BY group_id
SELECT group_id, player_id FROM ( SELECT group_id, player_id, SUM(score) AS score, RANK() OVER ( PARTITION BY group_id ORDER BY group_id, SUM(score) DESC, player_id ASC ) rank1 FROM (SELECT p.group_id, m.first_player AS player_id, SUM(first_score) AS score FROM Matches m LEFT JOIN Players p ON (m.first_player = p.player_id) GROUP BY p.group_id, m.first_player UNION ALL SELECT p.group_id, m.second_player AS player_id, SUM(second_score) AS score FROM Matches m LEFT JOIN Players p ON (m.second_player = p.player_id) GROUP BY p.group_id, m.second_player ) xx GROUP BY group_id, player_id ) abc WHERE rank1 = 1 ORDER BY score
SELECT group_id, player_id FROM ( SELECT p.group_id, ps.player_id, SUM(ps.score) score FROM Players p, ( SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player, second_score FROM Matches ) ps WHERE p.player_id = ps.player_id GROUP BY ps.player_id ORDER BY group_id, score DESC, player_id ) top_scores GROUP BY group_id
SELECT group_id, player_id FROM (SELECT p.player_id, group_id, SUM(scores) AS total_scores, ROW_NUMBER() OVER(PARTITION BY group_id ORDER BY SUM(scores) DESC, p.player_id) AS ranking FROM (SELECT first_player AS player_id, SUM(first_score) AS scores FROM Matches GROUP BY player_id UNION ALL SELECT second_player AS player_id, SUM(second_score) AS scores FROM Matches GROUP BY player_id) a JOIN Players p ON a.player_id = p.player_id GROUP BY p.player_id) b WHERE ranking = 1
SELECT group_id, player_id FROM (SELECT p.player_id, p.group_id, IFNULL(t2.score, 0) AS score, RANK() OVER (PARTITION BY p.group_id ORDER BY t2.score DESC, p.player_id) AS rnk FROM Players p LEFT JOIN (SELECT player, SUM(score) AS score FROM (SELECT first_player AS player, first_score AS score FROM Matches UNION ALL SELECT second_player AS player, second_score AS score FROM Matches) t1 GROUP BY player) t2 ON p.player_id = t2.player) t3 WHERE rnk = 1
SELECT group_id, player_id FROM (SELECT players.group_id, players.player_id, score.total_score, rank()over(partition by players.group_id ORDER BY score.total_score DESC, players.player_id ASC) as p_rank FROM (SELECT player_id, SUM(score) as total_score FROM (SELECT first_player as player_id, first_score as score FROM matches UNION ALL SELECT second_player as player_id, second_score as score FROM matches) all_player GROUP BY player_id) score INNER JOIN players ON players.player_id=score.player_id) ranked_player WHERE p_rank=1
SELECT group_id, player_id FROM (SELECT t1.group_id, t2.player_id, SUM(t2.score) AS score FROM Players AS t1, (SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player, second_score FROM Matches) AS t2 WHERE t1.player_id = t2.player_id GROUP BY t2.player_id ORDER BY group_id, score DESC, player_id) top_scores group by group_id
SELECT group_id, player_id FROM( SELECT group_id, player_id, RANK() OVER (PARTITION BY group_id ORDER BY SUM(score) DESC, player_id ASC) r FROM( SELECT group_id, player_id, first_score score FROM Players p JOIN Matches m ON p.player_id =m.first_player UNION ALL SELECT group_id, player_id, second_score score FROM Players p JOIN Matches m ON p.player_id =m.second_player ) a GROUP BY 1,2 ) b WHERE r = 1
SELECT group_id, player_id FROM( SELECT p.player_id, p.group_id, RANK() OVER (PARTITION BY p.group_id ORDER BY SUM(score) DESC, p.player_id ASC) rnk FROM ( SELECT first_player player_id, first_score score FROM Matches UNION ALL SELECT second_player player_id, second_score score FROM Matches ) t JOIN Players p ON t.player_id = p.player_id GROUP BY p.player_id,p.group_id ) t2 WHERE rnk=1
SELECT group_id, player_id from (SELECT group_id, p.player_id, SUM(IF(score is null, 0, score)) as score FROM Players p Left JOIN (SELECT first_player as player_id, first_score as score FROM Matches UNION ALL SELECT second_player as player_id, second_score as score FROM Matches) as s ON p.player_id = s.player_id GROUP BY group_id, p.player_id Order by group_id, score DESC, player_id) res Group by group_id
SELECT r.group_id, r.player_id FROM ( SELECT p.player_id, p.group_id, RANK() OVER (PARTITION BY p.group_id ORDER BY t.score DESC, p.player_id) AS player_rank FROM Players p JOIN ( SELECT player_id, SUM(s.score) AS score FROM ( SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player AS player_id, second_score AS score FROM Matches) s GROUP BY player_id) t ON p.player_id = t.player_id) r WHERE r.player_rank = 1
SELECT r.group_id, r.player_id FROM (SELECT p.player_id, p.group_id, RANK() OVER (PARTITION BY p.group_id ORDER BY t.score DESC, p.player_id) AS player_rank FROM Players p JOIN (SELECT player_id, SUM(s.score) AS score FROM (SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player AS player_id, second_score AS score FROM Matches) s GROUP BY player_id) t ON p.player_id = t.player_id) r WHERE r.player_rank = 1
SELECT t3.group_id, t3.player AS player_id FROM (SELECT p.group_id, t2.player, RANK() OVER (PARTITION BY p.group_id ORDER BY t2.score DESC, t2.player) AS rnk FROM Players p JOIN (SELECT t1.player, SUM(score) AS score FROM (SELECT first_player AS player, first_score AS score FROM Matches UNION ALL SELECT second_player AS player, second_score AS score FROM Matches) t1 GROUP BY t1.player) t2 ON p.player_id = t2.player) t3 WHERE t3.rnk = 1
Select group_id, min(player_id) as player_id From (Select group_id, player_id, dense_rank() over(partition by group_id order by player_score desc) as rank_score From Players p Left join (Select player, sum(score) as player_score From (Select first_player as player, first_score as score From Matches Union all Select second_player as player, second_score as score From Matches) s Group by player) s2 On p.player_id = s2.player) t Where rank_score = 1 Group by group_id
Select group_id, player_id From (Select player_id, group_id, total_points, Rank() Over(Partition By group_id Order By total_points Desc, player_id) as position From (Select player_id, group_id, coalesce(Sum(Case When player_id = first_player Then first_score else second_score End), 0) as total_points From Players Left Join Matches On Players.player_id = Matches.first_player or Players.player_id = Matches.second_player Group By player_id, group_id) tmp) tmp2 Where position = 1
Select group_id,player as player_id from ( Select player, group_id, rank() over(partition by group_id order by tscore desc,player) as rnk from ( Select player, sum(score) as tscore, group_id from (Select first_player as player, first_score as score from Matches union all Select second_player as player, second_score as score from Matches)m right join Players p on m.player=p.player_id group by group_id,p.player_id) a)b where rnk =1 order by group_id
WITH CTE AS ( (SELECT first_player AS player_id, first_score AS score FROM Matches m) UNION ALL (SELECT second_player AS player_id, second_score AS score FROM Matches) ) SELECT group_id, player_id FROM (SELECT p.player_id, group_id, DENSE_RANK() OVER(partition by group_id ORDER BY SUM(score) DESC, p.player_id ) AS rk FROM CTE JOIN Players p ON CTE.player_id = p.player_id GROUP BY p.player_id) AS temp WHERE rk = 1
WITH CTE AS ( SELECT first_player id, SUM(first_score) score FROM Matches GROUP BY first_player union all SELECT second_player id, SUM(second_score) score FROM Matches GROUP BY second_player ), CTE1 AS ( SELECT id, SUM(score) s FROM CTE GROUP BY id ), CTE2 AS ( SELECT P.group_id, C1.id player_id, ROW_NUMBER() OVER(PARTITION BY P.group_id ORDER BY C1.s DESC,C1.id) rn FROM Players P INNER JOIN CTE1 C1 ON P.player_id=C1.id ) SELECT group_id,player_id FROM CTE2 WHERE rn=1
WITH CTE AS ( Select group_id,player_id,first_score as score from Players P join Matches M on P.player_id = M.first_player UNION ALL Select group_id,player_id,second_score as score from players P join Matches M on P.player_id = M.second_player ) Select group_id,Player_id from (Select group_id,player_id,sum(score),rank() over(PARTITION BY group_id order by sum(score) desc,player_id) as rnk from CTE group by group_id,player_id order by group_id,sum(score) desc) T1 where T1.rnk = 1
WITH CTE AS ( Select group_id,player_id,first_score as score from Players P join Matches M on P.player_id = M.first_player UNION ALL Select group_id,player_id,second_score as score from players P join Matches M on P.player_id = M.second_player ) Select group_id,Player_id from (Select group_id,player_id,sum(score),row_number() over(PARTITION BY group_id order by sum(score) desc) as rnk from CTE group by group_id,player_id order by group_id,sum(score) desc) T1 where T1.rnk = 1
WITH CTE AS (SELECT first_player player_id, first_score score FROM matches UNION ALL SELECT second_player player_id, second_score score FROM matches), CTE_1 AS (SELECT player_id, SUM(score) score FROM CTE GROUP BY player_id) SELECT DISTINCT group_id, FIRST_VALUE(c.player_id) OVER(partition by group_id ORDER BY score DESC, c.player_id) player_id from cte_1 c LEFT JOIN players p ON c.player_id = p.player_id
WITH CTE AS (SELECT first_player player_id, first_score score FROM matches UNION ALL SELECT second_player player_id, second_score score FROM matches), CTE_1 AS (SELECT player_id, SUM(score) score FROM CTE GROUP BY player_id) SELECT distinct group_id,FIRST_VALUE(c.player_id) OVER(partition by group_id ORDER BY score DESC, c.player_id) player_id from cte_1 c JOIN players p ON c.player_id = p.player_id
WITH CTE AS( SELECT player_id, sum(score) AS score FROM (SELECT first_player AS player_id, first_score as score FROM Matches UNION ALL SELECT second_player AS player_id, second_score FROM Matches )s GROUP BY player_id) SELECT group_id, MIN(p.player_id) as player_id FROM Players p JOIN CTE ON p.player_id = CTE.player_id WHERE (group_id, score) in (SELECT group_id, MAX(score) FROM Players p JOIN CTE ON p.player_id = CTE.player_id GROUP BY group_id ) GROUP BY group_id
WITH CTE1 AS ( SELECT m.match_id, p.group_id, m.first_player AS player_id, m.first_score AS score FROM Matches m LEFT JOIN Players p ON m.first_player = p.player_id UNION ALL SELECT m.match_id, p.group_id, m.second_player AS player_id, m.second_score AS score FROM Matches m LEFT JOIN Players p ON m.second_player = p.player_id ), CTE2 AS ( SELECT group_id, player_id, SUM(score) OVER ( PARTITION BY group_id, player_id ) AS total_points FROM CTE1 ) SELECT DISTINCT sub.group_id, sub.player_id FROM ( SELECT group_id, player_id, total_points, RANK() OVER ( PARTITION BY group_id ORDER BY total_points DESC, player_id ASC ) AS rnk FROM CTE2 ) sub WHERE rnk = 1
WITH CTE1 as ( SELECT d1.first_player, d2.group_id as group_id_first, d1.second_player, d3.group_id as group_id_second, d1.first_score, d1.second_score FROM Matches as d1 JOIN Players as d2 ON d1.first_player = d2.player_id JOIN Players as d3 ON d1.second_player = d3.player_id ), CTE2 AS ( SELECT first_player as player_id, group_id_first as group_id, first_score as score FROM CTE1 UNION ALL SELECT second_player, group_id_second as group_id, second_score as score FROM CTE1 ) SELECT group_id, player_id FROM ( SELECT player_id, group_id, SUM(score) as sum_score, RANK() OVER(PARTITION BY group_id ORDER BY SUM(score) DESC, player_id ASC) AS ranking FROM CTE2 GROUP BY player_id, group_id ) as sub WHERE ranking = 1
WITH CTE_PLAYER AS ( SELECT PLAYER_ID ,SUM(PLAYER_SCORE) TOTAL_SCORE FROM( SELECT FIRST_PLAYER PLAYER_ID ,FIRST_SCORE PLAYER_SCORE FROM MATCHES UNION ALL SELECT SECOND_PLAYER PLAYER_ID ,SECOND_SCORE PLAYER_SCORE FROM MATCHES )T GROUP BY 1 ) SELECT group_id ,MIN(player_id) player_id FROM ( SELECT P.GROUP_ID ,P.PLAYER_ID ,RANK() OVER(PARTITION BY P.GROUP_ID ORDER BY TOTAL_SCORE DESC) PLAYER_RNK FROM PLAYERS P JOIN CTE_PLAYER CP ON P.PLAYER_ID = CP.PLAYER_ID )T WHERE PLAYER_RNK =1 GROUP BY 1
WITH MatchDetails AS (SELECT first_player AS player_id ,first_score AS points FROM Matches UNION ALL SELECT second_player AS player_id ,second_score AS points FROM Matches), MatchSummary AS (SELECT MP.player_id ,P.group_id ,RANK() OVER(PARTITION BY P.group_id ORDER BY SUM(MP.points) DESC) AS GRk FROM MatchDetails MP INNER JOIN Players P ON P.player_id = MP.player_id GROUP BY MP.player_id,P.group_id) SELECT group_id ,MIN(player_id) AS player_id FROM MatchSummary WHERE GRk = 1 GROUP BY group_id
WITH PlayerStats AS ( SELECT match_id, first_player AS player, first_score AS player_score FROM Matches UNION SELECT match_id, second_player AS player, second_score AS player_score FROM Matches ), PlayerSummary AS ( SELECT Players.group_id, Players.player_id, RANK() OVER(PARTITION BY Players.group_id ORDER BY SUM(PlayerStats.player_score) DESC, Players.player_id) AS player_rank FROM PlayerStats INNER JOIN Players ON Players.player_id = PlayerStats.player GROUP BY Players.group_id, Players.player_id ) SELECT group_id, player_id FROM PlayerSummary WHERE player_rank = 1
WITH Player_scores AS (SELECT p.group_id ,p.player_id ,SUM(m.first_score) total_score FROM Matches as m JOIN Players as p ON p.player_id = m.first_player GROUP BY p.group_id ,p.player_id UNION ALL SELECT p.group_id ,p.player_id ,SUM(m.second_score ) total_score FROM Matches as m JOIN Players as p ON p.player_id = m.second_player GROUP BY p.group_id ,p.player_id), Agg_player_scores AS ( SELECT group_id ,player_id ,SUM(total_score) total_score FROM Player_scores GROUP BY group_id ,player_id ), player_rankings AS ( SELECT group_id ,player_id , total_score , ROW_NUMBER() OVER (PARTITION BY group_id ORDER BY total_score DESC, player_id ASC) as rn FROM Agg_player_scores ) SELECT group_id ,player_id FROM player_rankings WHERE rn=1
WITH SCORE_TB AS ( SELECT match_id,first_player AS player_id,first_score AS score FROM Matches UNION SELECT match_id, second_player, second_score FROM Matches), PLAY_SUM AS (SELECT group_id, player_id, SUM(score) AS total_score FROM Players LEFT JOIN SCORE_TB USING(player_id) GROUP BY 1,2) SELECT group_id,player_id FROM( SELECT group_id,player_id, RANK() OVER(PARTITION BY group_id ORDER BY total_score DESC, player_id ASC) AS ranking FROM PLAY_SUM ) sub WHERE ranking = 1 ORDER BY group_id
WITH T AS(SELECT p.player_id,p.group_id,m.first_score FROM Players p JOIN Matches m ON p.player_id=m.first_player UNION ALL SELECT p.player_id,p.group_id,m.second_score FROM Players p JOIN Matches m ON p.player_id=m.second_player) SELECT b.player_id,b.group_id FROM( SELECT *,DENSE_RANK()OVER(PARTITION BY group_id ORDER BY a.score DESC,a.player_id) AS rankie FROM(SELECT player_id,group_id,SUM(first_score) AS score FROM T GROUP BY group_id,player_id) a)b WHERE b.rankie=1
WITH T1 AS ( SELECT * FROM Matches m JOIN Players p ON m.first_player = p.player_id ), T2 AS ( SELECT group_id, player_id, SUM(score) as total_score FROM (SELECT first_player as player_id, first_score as score , group_id FROM T1 UNION ALL SELECT second_player as player_id, second_score as score, group_id FROM T1) as temp GROUP BY group_id, player_id ) SELECT group_id, min(player_id) as player_id FROM T2 WHERE (group_id, total_score) in (SELECT group_id, MAX(total_score) as max_score FROM T2 GROUP BY group_id) GROUP BY group_id
WITH TEMP AS ( SELECT group_id, player_id, SUM(score) AS score FROM ( SELECT first_player AS player_id, first_score AS score, group_id FROM Matches A LEFT JOIN Players B ON A.first_player = B.player_id UNION ALL SELECT second_player AS player_id, second_score AS score, group_id FROM Matches A LEFT JOIN Players B ON A.first_player = B.player_id ) T GROUP BY player_id ) SELECT group_id, player_id FROM ( SELECT group_id, player_id, RANK() OVER (PARTITION BY group_id ORDER BY score DESC, player_id ASC) AS rnk FROM TEMP ) T WHERE rnk = 1
WITH base as ( SELECT player_id,group_id, SUM(points) total_points FROM ( SELECT p.player_id,group_id, SUM(first_score) points FROM Matches m JOIN Players p ON m.first_player = p.player_id GROUP BY p.player_id,group_id UNION ALL SELECT p.player_id,group_id, SUM(second_score) points FROM Matches m JOIN Players p ON m.second_player = p.player_id GROUP BY p.player_id,group_id ) a GROUP BY player_id, group_id ), r as ( SELECT player_id, group_id, ROW_NUMBER() OVER(PARTITION BY group_id ORDER BY total_points desc,player_id) rnk FROM base ) SELECT player_id, group_id FROM r WHERE rnk = 1
WITH cte AS ( SELECT player_id, SUM(goals_scored) AS total_goals_scored FROM ( SELECT first_player AS player_id, SUM(first_score) AS goals_scored FROM matches GROUP BY first_player UNION ALL SELECT second_player AS player_id, SUM(second_score) AS goals_scored FROM matches GROUP BY second_player ) t GROUP BY player_id) SELECT player_id, group_id FROM ( SELECT p.group_id, c.player_id, ROW_NUMBER() OVER(PARTITION BY p.group_id ORDER BY c.total_goals_scored DESC, c.player_id ASC) AS rn FROM cte c JOIN players p ON c.player_id = p.player_id ) b WHERE rn = 1
WITH cte_score AS ( SELECT player_id, SUM(score) AS tot_score FROM ( SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player AS player_id, second_score AS score FROM Matches ) t GROUP BY 1 ), cte_rank AS ( SELECT group_id, player_id, RANK() OVER (PARTITION BY p.group_id ORDER BY s.tot_score DESC, player_id) AS rnk_player FROM Players p JOIN cte_score s USING (player_id) ) SELECT group_id, player_id FROM cte_rank WHERE rnk_player = 1
WITH cteunpivot AS( select first_player as player_id, first_score as score from matches UNION ALL select second_player as player_id, second_score as score from matches ), ctepersonalscore AS( select A.player_id, B.group_id, sum(A.score) as score from cteunpivot A LEFT JOIN players B on A.player_id = B.player_id group by A.player_id, B.group_id ), ctegroupmaxscore AS( select group_id, max(score) as maxscore from ctepersonalscore group by group_id ), ctewinners AS( select A.group_id, B.player_id from ctegroupmaxscore A left join ctepersonalscore B on A.group_id = B.group_id and A.maxscore = B.score ) select group_id, min(player_id) as player_id from ctewinners group by group_id order by group_id asc
WITH ind_scores AS ( SELECT first_player AS id, SUM(first_score) AS score FROM Matches GROUP BY first_player UNION ALL SELECT second_player AS id, SUM(second_score) AS score FROM Matches GROUP BY second_player ), tot_scores AS ( SELECT id, SUM(score) AS score FROM ind_scores GROUP BY id ), main AS ( SELECT group_id, player_id, score, ROW_NUMBER() OVER(PARTITION BY group_id ORDER BY score DESC, player_id) AS ranking FROM Players LEFT JOIN tot_Scores ON Players.player_id = tot_scores.id ) SELECT group_id, player_id FROM main WHERE ranking = 1
WITH m as ( select player_id, sum(score) as score from ( SELECT first_player AS player_id, first_score as score from matches union all SELECT second_player AS player_id, second_score as score from matches ) as ms group by 1 ) select group_id, player_id from ( select p.group_id as group_id, m.player_id as player_id, row_number() over(Partition by p.group_id order by m.score desc, m.player_id asc) as rnk from players as p inner join m on p.player_id = m.player_id ) as t where t.rnk = 1
WITH m as ( select player_id, sum(score) as score from ( SELECT first_player AS player_id, sum(first_score) as score from matches group by first_player union all SELECT second_player AS player_id, sum(second_score) as score from matches group by second_player ) as ms group by 1 ) select group_id, player_id from ( select p.group_id as group_id, m.player_id as player_id, sum(m.score) as score, row_number() over(Partition by p.group_id order by sum(m.score) desc, m.player_id asc) as rnk from players as p inner join m on p.player_id = m.player_id group by 2,1 ) as t where t.rnk = 1
WITH main AS ( SELECT player_id, group_id, SUM( CASE WHEN P.player_id = M.first_player THEN first_Score ELSE second_Score END) AS score FROM Players P LEFT JOIN Matches M ON P.player_id = M.first_player OR P.player_id = M.second_player GROUP BY player_id ), second AS ( SELECT player_id, group_id, ROW_NUMBER() OVER(PARTITION BY group_id ORDER BY score DESC, player_id) AS ranking FROM main ) SELECT group_id, player_id FROM second where RANKING = 1
WITH player_scores_0 AS ( SELECT a.group_id, a.player_id, IFNULL(b.first_score,0) AS total_score_0 FROM Players a LEFT JOIN Matches b ON a.player_id = b.first_player UNION ALL SELECT c.group_id, c.player_id, IFNULL(d.second_score,0) AS total_score_0 FROM Players c LEFT JOIN Matches d ON c.player_id = d.second_player ), player_scores AS ( SELECT group_id, player_id, SUM(total_score_0) AS total_score, ROW_NUMBER() OVER (PARTITION BY group_id ORDER BY SUM(total_score_0) DESC, player_id) AS group_rank FROM player_scores_0 GROUP BY 1,2 ) SELECT group_id, player_id FROM player_scores WHERE group_rank = 1
WITH playerscore AS( SELECT player_id, SUM(CASE WHEN player_id=first_player THEN first_score WHEN player_id=second_player THEN second_score END) AS totalscore FROM players LEFT JOIN Matches ON player_id=first_player or player_id=second_player GROUP BY player_id ) SELECT group_id, player_id FROM( SELECT p.group_id,p.player_id, DENSE_RANK()OVER(PARTITION BY p.group_id ORDER BY s.totalscore DESC, p.player_id) AS playerrank FROM Players as p LEFT JOIN playerscore as s ON p.player_id=s.player_id )a WHERE playerrank=1 ORDER BY group_id
WITH score AS (SELECT player_id, SUM(score) AS total_score FROM (SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player AS player_id, second_score AS score FROM Matches) t GROUP BY player_id) SELECT group_id, player_id FROM (SELECT group_id, p.player_id, s.total_score, RANK() OVER (PARTITION BY group_id ORDER BY total_score DESC, player_id ASC) AS rnk FROM Players p JOIN score s ON p.player_id=s.player_id) t WHERE rnk=1
WITH score_cte AS ( SELECT group_id, player_id, SUM(CASE WHEN p.player_id = m.first_player THEN m.first_score ELSE m.second_score END) AS score FROM Players p JOIN Matches m ON p.player_id = m.first_player OR p.player_id = m.second_player GROUP BY group_id, p.player_id) SELECT group_id, MIN(player_id) AS player_id FROM score_cte WHERE (group_id, score) IN ( SELECT group_id, MAX(score) AS score FROM score_cte GROUP BY group_id) GROUP BY group_id
WITH scores as ( SELECT match_id, first_player as player, group_id, first_score as score FROM matches INNER JOIN players ON matches.first_player = players.player_id UNION SELECT match_id, second_player as player, group_id, second_score as score FROM matches INNER JOIN players ON matches.second_player = players.player_id ) SELECT group_id, player as player_id FROM ( SELECT player, group_id, sum(score) as score, rank() over (partition by group_id order by sum(score) desc, player asc) as ranking FROM scores GROUP BY player, group_id ) asd WHERE ranking = 1
WITH t AS ( SELECT first_player player,first_score score FROM Matches UNION ALL SELECT second_player player,second_score score FROM Matches ), t2 AS ( SELECT group_id,player_id, SUM(score) total FROM Players JOIN t ON Players.player_id = t.player GROUP BY group_id,player_id ), t3 AS( SELECT group_id, player_id, RANK() OVER(PARTITION BY group_id ORDER BY total DESC, player_id ASC) rk FROM t2 ) SELECT group_id,player_id FROM t3 WHERE rk = 1 ORDER BY group_id
WITH t AS ( SELECT first_player player,first_score score FROM Matches UNION ALL SELECT second_player player,second_score score FROM Matches), t2 AS ( SELECT group_id,player_id, SUM(score) total FROM Players JOIN t ON Players.player_id = t.player GROUP BY group_id,player_id), t3 AS( SELECT group_id, player_id, RANK() OVER(PARTITION BY group_id ORDER BY total DESC, player_id ASC) rk FROM t2) SELECT group_id,player_id FROM t3 WHERE rk = 1 ORDER BY group_id
WITH t AS ( SELECT x.player as player, SUM(x.score) as total_score FROM ( SELECT match_id, first_player as player, first_score as score FROM Matches UNION ALL SELECT match_id, second_player as player, second_score as score FROM Matches ) x GROUP BY 1 ) SELECT group_id, player_id FROM ( SELECT group_id, player_id, ROW_NUMBER() OVER (PARTITION BY group_id ORDER BY total_score desc, player_id asc) as rn FROM ( SELECT p.group_id as group_id, t.player as player_id, t.total_score as total_score FROM Players p LEFT JOIN t ON t.player = p.player_id ) final ) y WHERE rn = 1
WITH t AS(SELECT group_id,player_id, sum(case when m.first_player = p.player_id then m.first_score else 0 end) + sum(case when m.second_player = p.player_id then m.second_score else 0 end) as scores FROM Players p LEFT JOIN Matches m ON p.player_id = m.first_player OR p.player_id = m.second_player GROUP BY player_id ORDER BY group_id,scores DESC,player_id ) , t2 AS(SELECT group_id,player_id,ROW_NUMBER() OVER(PARTITION BY group_id) as rn FROM t ) SELECT group_id, player_id FROM t2 WHERE rn = 1 GROUP BY group_id ORDER BY group_id
WITH t1 AS ( SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player, second_score FROM Matches ), t2 AS ( SELECT player_id, SUM(score) AS score FROM t1 GROUP BY player_id ) SELECT group_id, player_id FROM ( SELECT *, RANK() OVER( PARTITION BY group_id ORDER BY t2.score DESC, player_id) AS rnk FROM Players p JOIN t2 USING (player_id) )tmp WHERE rnk = 1 ORDER BY group_id
WITH t1 AS ( SELECT p.player_id, SUM(CASE WHEN m.first_player = p.player_id THEN m.first_score WHEN m.second_player = p.player_id THEN m.second_score ELSE 0 END) as score, p.group_id FROM Players p LEFT JOIN Matches m ON p.player_id= m.first_player OR p.player_id= m.second_player GROUP BY p.player_id ORDER BY p.group_id,p.player_id ), t2 as (SELECT ROW_NUMBER() OVER (PARTITION BY group_id ORDER BY score DESC,player_id ASC) as id, group_id, player_id from t1) SELECT group_id, player_id from t2 WHERE id = 1 ORDER BY group_id
WITH t1 AS ( SELECT player, SUM(scores) AS scores FROM ( SELECT first_player AS player, first_score AS scores FROM Matches UNION ALL SELECT second_player AS player, second_score AS scores FROM Matches) tt GROUP BY player ) SELECT group_id, player AS player_id FROM ( SELECT t1.player, t1.scores, p.group_id, RANK() OVER (PARTITION BY p.group_id ORDER BY t1.scores DESC, t1.player ASC) AS ranks FROM t1 LEFT JOIN Players p ON t1.player = p.player_id) t WHERE ranks = 1
WITH t1 AS ( SELECT t.player_id, p.group_id, SUM(score) AS score FROM ( SELECT first_player AS player_id, SUM(first_score) AS score FROM Matches GROUP BY first_player UNION ALL SELECT second_player AS player_id, SUM(second_score) AS score FROM Matches GROUP BY second_player ) t JOIN Players p ON t.player_id = p.player_id GROUP BY player_id ), t2 AS ( SELECT group_id, player_id, RANK() OVER (PARTITION BY group_id ORDER BY score DESC, player_id) AS rnk FROM t1 ) SELECT group_id, player_id FROM t2 WHERE rnk = 1
WITH t1 AS (SELECT first_player player, first_score score FROM matches UNION ALL SELECT second_player player, second_score score FROM matches), t2 AS (SELECT p.player_id, SUM(IFNULL(score, 0)) OVER (PARTITION BY player_id) score, p.group_id FROM t1 RIGHT JOIN players p ON t1.player = p.player_id), t3 AS (SELECT *, DENSE_RANK() OVER (PARTITION BY group_id ORDER BY score DESC, player_id) r FROM t2) SELECT DISTINCT group_id, player_id FROM t3 WHERE r = 1
WITH t1 AS (SELECT p.player_id, IFNULL(SUM(m.first_score) OVER (PARTITION BY player_id), 0) s1 FROM players p LEFT JOIN matches m ON p.player_id = m.first_player), t2 AS (SELECT p.player_id, IFNULL(SUM(m.second_score) OVER (PARTITION BY player_id), 0) s2 FROM players p LEFT JOIN matches m ON p.player_id = m.second_player), t3 AS (SELECT t1.player_id, s1+s2 s, group_id, DENSE_RANK() OVER (PARTITION BY group_id ORDER BY s1+s2 DESC, player_id) n FROM t1 JOIN t2 ON t1.player_id = t2.player_id RIGHT JOIN players p ON p.player_id = t1.player_id) SELECT DISTINCT group_id, player_id FROM t3 WHERE n = 1
WITH t1 As ( SELECT * FROM ( SELECT first_player player, first_score score FROM Matches UNION ALL SELECT second_player player, second_score score FROM Matches ) tmp LEFT JOIN Players p ON tmp.player = p.player_id ), t2 AS ( SELECT group_id, player, RANK() OVER(PARTITION BY group_id ORDER BY SUM(score) DESC, player) rk FROM t1 group by group_id, player ) SELECT group_id group_id, player player_id FROM t2 WHERE rk = 1
WITH t1 As ( SELECT * FROM ( SELECT first_player player, first_score score FROM Matches UNION ALL SELECT second_player player, second_score score FROM Matches ) tmp LEFT JOIN Players p ON tmp.player = p.player_id ), t2 AS ( SELECT group_id, player, RANK() OVER(PARTITION BY group_id ORDER BY sum_score DESC, player) rk FROM ( SELECT group_id, player, SUM(score) sum_score FROM t1 GROUP BY 1, 2 ) tmp2 ) SELECT group_id group_id, player player_id FROM t2 WHERE rk = 1
WITH table1 AS( SELECT first_player AS player_id, first_score AS score, group_id FROM Matches m INNER JOIN Players p ON m.first_player=p.player_id UNION ALL SELECT second_player, second_score, group_id FROM Matches m INNER JOIN Players p ON m.second_player=p.player_id ), table2 AS( SELECT group_id, player_id, SUM(score) AS score FROM table1 GROUP BY group_id, player_id ), table3 AS( SELECT group_id, player_id, score, ROW_NUMBER()OVER(PARTITION BY group_id ORDER BY score DESC, player_id ASC) AS rn FROM table2 ) SELECT group_id, player_id FROM table3 WHERE rn=1
WITH temp AS (SELECT group_id, first_player AS player_id, first_score AS score FROM Matches m JOIN Players p ON m.first_player = p.player_id UNION ALL SELECT group_id, second_player AS player_id, second_score AS score FROM Matches m JOIN Players p ON m.second_player = p.player_id), temp2 AS (SELECT group_id, player_id, SUM(score) AS max_score FROM temp GROUP BY group_id, player_id ORDER BY group_id, max_score DESC, player_id), temp3 AS (SELECT group_id, player_id, ROW_NUMBER() OVER(PARTITION BY group_id ORDER BY max_score DESC) AS r FROM temp2) SELECT group_id, player_id FROM temp3 WHERE r = 1
WITH tmp AS (SELECT player_id, SUM(score) AS score FROM (SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player AS player_id, second_score AS score FROM Matches) A GROUP BY player_id) SELECT group_id, B.player_id FROM (SELECT group_id, tmp.player_id, RANK() OVER (PARTITION BY group_id ORDER BY score DESC, tmp.player_id) AS rk FROM tmp JOIN Players p ON tmp.player_id = p.player_id) B WHERE rk = 1
WITH tmp1 AS ( SELECT p.player_id ,p.group_id ,m.first_player ,m.second_player ,m.first_score ,m.second_score FROM Players p LEFT JOIN Matches m ON p.player_id = m.first_player OR p.player_id = m.second_player) ,tmp2 AS ( SELECT player_id ,group_id ,(SUM(CASE WHEN player_id=first_player THEN first_score ELSE 0 END) + SUM(CASE WHEN player_id=second_player THEN second_score ELSE 0 END)) AS scores FROM tmp1 GROUP BY 1,2) ,tmp3 AS ( SELECT player_id ,group_id ,RANK() OVER (PARTITION BY group_id ORDER BY scores DESC,player_id) AS rk FROM tmp2) SELECT player_id ,group_id FROM tmp3 WHERE rk=1
WITH uni AS ( SELECT first_player AS player, first_score AS score FROM matches UNION ALL SELECT second_player, second_score FROM matches ), rnk AS ( SELECT p.group_id, p.player_id, RANK() OVER (PARTITION BY group_id ORDER BY SUM(u.score) DESC, player_id ASC) AS rk FROM uni AS u JOIN players AS p ON u.player = p.player_id GROUP BY 1, 2 ) SELECT group_id, player_id FROM rnk WHERE rk = 1 ORDER BY group_id ASC
With PlayerScore as ( select Unioned.player_id, sum(score) as score from (select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ) Unioned Group by Unioned.player_id ), GroupPlayerScore as ( select PlayerScore.*, Players.group_id from PlayerScore left outer join Players on PlayerScore.player_id = Players.player_id ) select group_id as GROUP_ID, player_id as PLAYER_ID from ( SELECT *, row_number() over (Partition by group_id Order by score desc, player_id ) as ranked FROM GroupPlayerScore ) ranked where ranked = 1
With core_table as ( Select player,sum(score) as score from ( Select first_Player as player, first_score as score from Matches UNION ALL Select second_player as player, second_score as score from Matches )a group by 1 ) Select group_id,player as player_id from ( Select group_id, ct.player, dense_rank() over (partition by group_id order by score desc,ct.player asc) as p_rank from core_table ct left join Players p on ct.player = p.player_id )b where p_rank = 1
With home as ( Select B.group_id as grp, A.match_id as mid, A.first_player as h, A.first_score as o from Matches A left join Players B on A.first_player = B.player_id ), away as ( Select B.group_id as grp, A.match_id as mid, A.second_player as h, A.second_score as o from Matches A left join Players B on A.second_player = B.player_id ), agg as ( Select * from home Union all Select * from away ) , totalp as ( Select grp, h, sum(o) as total_points from agg group by 1,2 ), final as ( Select grp as group_id, h as player_id, ROW_NUMBER() over (partition by grp order by total_points desc) as rw from totalp ) Select group_id, player_id from final where rw = 1
With player_score as (select first_player as player_id ,first_score as score from Matches union all select second_player as player_id ,second_score as score from Matches ), win_player_count as ( select b.group_id,a.player_id,sum(score) as total_score from player_score a left join Players b on a.player_id = b.player_id group by 1,2) select group_id, player_id from (select * ,row_number() over(partition by group_id order by total_score desc, player_id) as rk from win_player_count) a where a.rk =1
With temp as (select player_id, group_id, ifnull(first_score,0) as score from players JOIN Matches on player_id=first_player UNION ALL select player_id, group_id, ifnull(second_score,0) as score from players JOIN Matches on player_id=second_player ) select group_id, player_id FROM ( Select group_id, player_id,ROW_NUMBER() OVER (partition by group_id ORDER BY score desc,player_id) rn from ( select group_id,player_id, SUM(score) score from temp GROUP BY group_id,player_id ) temp ) temp2 where rn=1
select GROUP_ID, PLAYER_ID from (select group_id as GROUP_ID, player_id as PLAYER_ID, rank() over(partition by group_id order by total desc,player_id asc) as rk from (select player_id, group_id, sum(case when player_id = first_player then first_score when player_id = second_player then second_score end) as total from Players p join Matches m on p.player_id = m.first_player or p.player_id = m.second_player group by 1, 2) t) f where f.rk = 1
select b.group_id, b.player_id from (select p.group_id, p.player_id, row_number()over(partition by p.group_id order by sum(a.score) desc, p.player_id asc) rank_d from Players p left join (select first_player player, first_score score from Matches union all select second_player player, second_score score from Matches ) a on p.player_id = a.player group by group_id, p.player_id ) b where b.rank_d = 1
select group_id as GROUP_ID, min(player_id) as PLAYER_ID from Players, (select player, sum(score) as score from (select first_player as player, first_score as score from Matches union all select second_player, second_score from Matches) s group by player) PlayerScores where Players.player_id = PlayerScores.player and (group_id, score) in (select group_id, max(score) from Players, (select player, sum(score) as score from (select first_player as player, first_score as score from Matches union all select second_player, second_score from Matches) s group by player) PlayerScores where Players.player_id = PlayerScores.player group by group_id) group by group_id
select group_id, (player_id ) from (select group_id, player_id, sum(case when mtch.first_player = p.player_id then first_score else second_score end) as mtchscore from Players p left join Matches mtch on p.player_id in (mtch.first_player, mtch.second_player) group by group_id, player_id order by group_id, mtchscore desc, player_id) TopScore group by group_id
select group_id, (player_id ) from (select p.group_id, p.player_id, SUM(case when first_player = p.player_id then first_score else second_score end) as score from players p left join matches m on m.first_player = p.player_id or m.second_player = p.player_id group by p.group_id, p.player_id order by score desc) as Temp group by group_id
select group_id, case when count(*) > 1 then min(player_id) else player_id end as player_id from (select group_id, player_id from (select group_id, player_id, dense_rank() over(partition by group_id order by max_score desc) score_rnk from (select group_id, player_id, sum(case when player_id = first_player then first_score when player_id = second_player then second_score end) as max_score from players p join matches m on p.player_id = m.first_player or p.player_id = m.second_player group by group_id, player_id order by group_id) a) b where score_rnk = 1) c group by group_id
select group_id, min(id) as player_id from ( select id, group_id, rank()over(partition by group_id order by scores desc) as rnk from ( select a.id, b.group_id, sum(a.scores) as scores from ( select first_player as id , sum(first_score) as scores from Matches group by 1 union all select second_player as id , sum(second_score) as scores from Matches group by 1 )a left join Players b on a.id=b.player_id group by 1,2 )a )a where rnk=1 group by 1
select group_id, min(player_id) as PLAYER_ID from Players p JOIN (select player, sum(score) as score from (select first_player as player, first_score as score from Matches union all select second_player, second_score from Matches) s group by player) s ON p.player_id = s.player Where (group_id, score) in (select group_id, max(score) from Players p JOIN (select player, sum(score) as score from (select first_player as player, first_score as score from Matches union all select second_player, second_score from Matches) s group by player) s ON p.player_id = s.player group by group_id) GROUP BY group_id
select group_id, min(player_id) as player_id from (select group_id, p.player_id, rank() over(partition by group_id order by sum(score) desc) as player_rank from Players p join( select first_player as player, first_score as score from Matches union all select second_player as player, second_score as score from Matches ) Matches_unified on p.player_id = player group by group_id, p.player_id ) rank_data where player_rank = 1 group by group_id
select group_id, min(player_id) as player_id from (select group_id, player_id from (select group_id, player_id, dense_rank() over(partition by group_id order by max_score desc) score_rnk from (select group_id, player_id, sum(case when player_id = first_player then first_score when player_id = second_player then second_score end) as max_score from players p join matches m on p.player_id = m.first_player or p.player_id = m.second_player group by group_id, player_id order by group_id) a) b where score_rnk = 1) c group by group_id
select group_id, min(player_id) as player_id from (select group_id, player_id, rank() over (partition by group_id order by score desc) as rnk from Players join (select player_id, sum(score) as score from ( select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ) t group by player_id) t2 using(player_id)) t2 where rnk = 1 group by group_id
select group_id, player_id from ( select b.player_id, total_score, group_id, row_number() over (partition by group_id order by total_score desc,b.player_id) as rw from ( select player_id, sum(score ) as total_score from ( select match_id , first_player as player_id, first_score as score from matches union all select match_id ,second_player as player_id, second_score as score from matches ) a group by player_id order by player_id ) b left join players p on b.player_id = p.player_id ) c where rw=1
select group_id, player_id from ( select group_id, player_id ,sum_score, dense_rank() over(partition by group_id order by sum_score desc, player_id) as 'rk' from ( select p.player_id, p.group_id,ifnull(sum(score),0) as 'sum_score' from players p left join ( select first_player as player_id, first_score as 'score' from matches union all select second_player as player_id, second_score as 'score' from matches) as A on p.player_id = a.player_id group by p.player_id, p.group_id) as B ) as C where rk = 1
select group_id, player_id from ( select group_id, player_id, dense_rank() over (partition by group_id order by sum(score) desc, player_id) rnk from players a join ( select first_player player_id, first_score score from matches union all select second_player, second_score from matches ) t using (player_id) group by player_id ) c where rnk = 1
select group_id, player_id from ( select group_id, player_id, rank() over(partition by group_id order by ttl desc, player_id) as rk from players p left join ( select player, sum(score) as ttl from( select first_player as player, first_score as score from matches union all select second_player as player, second_score as score from matches) m group by 1 ) s on player_id = player ) r where rk=1
select group_id, player_id from ( select group_id, player_id, row_number() over(partition by group_id order by total desc, player_id) rn from ( select group_id, player_id, sum(score) total from ( select group_id, first_player as player_id, first_score as score from ( select M.*, P.group_id from Matches M inner join Players P on M.first_player = P.player_id ) T1 UNION ALL select group_id, second_player as player_id, second_score as score from ( select M.*, P.group_id from Matches M inner join Players P on M.first_player = P.player_id ) T2 ) T3 group by group_id, player_id ) T4 ) T5 where rn = 1
select group_id, player_id from ( select p.group_id, ps.player_id, sum(ps.score) as score from Players p inner join ( select first_player as player_id, first_score as score from Matches union all select second_player, second_score from Matches ) ps on p.player_id = ps.player_id group by p.group_id, ps.player_id order by group_id, score desc, player_id ) top_scores group by group_id
select group_id, player_id from ( select p.group_id, ps.player_id, sum(ps.score) as score from Players p, (select first_player as player_id, first_score as score from Matches union all select second_player, second_score from Matches) ps where p.player_id = ps.player_id group by p.group_id,ps.player_id order by group_id, score desc, player_id) top_scores group by group_id
select group_id, player_id from ( select p.group_id, ps.player_id, sum(ps.score) as score from Players p, (select first_player as player_id, first_score as score from Matches union all select second_player, second_score from Matches) ps where p.player_id = ps.player_id group by ps.player_id order by group_id, score desc, player_id) top_scores group by group_id
select group_id, player_id from ( select p.player_id, p.group_id, row_number() over(partition by p.group_id order by player_total.score desc, p.player_id asc) rank1 from players p join ( select player_id, sum(player_score.score) as score from ( (select first_player as player_id, first_score as score from Matches) union all (select second_player as player_id, second_score as score from Matches) ) player_score group by player_id ) player_total on p.player_id = player_total.player_id ) rank_table where rank_table.rank1 = 1
select group_id, player_id from (SELECT player_id, group_id, RANK() OVER(PARTITION BY group_id ORDER BY SUM(CASE WHEN player_id = first_player THEN first_score ELSE second_score END) DESC, player_id) as rnk from Players p JOIN Matches m ON p.player_id = m.first_player OR p.player_id = m.second_player GROUP BY player_id, group_id) tmp where rnk =1
select group_id, player_id from (select *, rank() over(partition by group_id order by points desc, player_id) ranked from (select player_id, group_id, sum(case when player_id = first_player then first_score else second_score end) points from Matches m, Players p where p.player_id = m.first_player or p.player_id = m.second_player group by 1) t1) t2 where ranked = 1
select group_id, player_id from (select group_id, p.player_id, rank() over(partition by group_id order by sum(score) desc, p.player_id) as player_rank from Players p join( select first_player as player, first_score as score from Matches union all select second_player as player, second_score as score from Matches ) Matches_unified on p.player_id = player group by group_id, p.player_id ) rank_data where player_rank = 1
select group_id, player_id from (select group_id, player as player_id, rank() over (partition by group_id order by total desc, player) as rk from (select player, sum(score) as total from (select first_player as player, first_score as score from matches union all select second_player as player, second_score as score from matches) as t1 group by player) as t2 left join players as p on t2.player=p.player_id ) as t3 where rk = 1 order by group_id
select group_id, player_id from (select group_id, player_id, total, dense_rank() over (partition by group_id order by total desc, player_id) as rk from (select group_id,player_id, sum(first_score) as total from ((select first_player, first_score from Matches) union all (select second_player, second_score from Matches)) m1 left join Players p on m1.first_player = p.player_id group by group_id,player_id)table1)table2 where rk=1
select group_id, player_id from (select p.player_id, group_id, score, rank() over(partition by group_id order by score desc, player_id asc) as group_rank from players p left join (select player_id, sum(score) as score from (select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches) m1 group by player_id) m2 on p.player_id=m2.player_id) g where group_rank= 1
select group_id, player_id from (select p.player_id, p.group_id, ifnull(sum(s.score), 0) as total_score from players p left join (select first_player as player, first_score as score from matches union all select second_player, second_score from matches) s on p.player_id = s.player group by p.player_id order by group_id, total_score desc, player_id) a group by group_id
select group_id, player_id from (select player_id, group_id, overall_score, row_number() over(partition by group_id order by overall_score desc) as rn from (select player_id, sum(s_score) as overall_score from ((select first_player as player_id, sum(first_score) as s_score from matches group by 1 ) union all (select second_player as player_id, sum(second_score) as s_score from matches group by 1 ))w group by 1 )c join ( select player_id, group_id from players )d using(player_id) )e where rn =1 group by 1,2
select group_id, player_id from (select player_id, group_id, row_number() over(partition by group_id order by score_total desc, player_id asc) as rn from (select player_id, group_id, sum(case when p.player_id = first_player then first_score else second_score end) as score_total from Players p join Matches m on p.player_id = m.first_player or p.player_id = m.second_player group by 1,2)s)a where rn = 1
select group_id, player_id from (select player_id, group_id, row_number() over(partition by group_id order by sum(case when p.player_id = first_player then first_score else second_score end) desc, player_id asc) as rn from Players p join Matches m on p.player_id = m.first_player or p.player_id = m.second_player group by 1,2)s where rn = 1
select group_id, player_id from( select P.group_id, P.player_id, rank() over (partition by P.group_id order by sum(score) desc, P.player_id) as rnk from ( select match_id, M.first_player as player_id, first_score as score from Matches M union all select match_id, M.second_player as player_id, second_score as score from Matches M ) temp left join Players P on temp.player_id = P.player_id group by 1,2 ) TBL where rnk = 1
select group_id, player_id from( select p.group_id, p.player_id,b.ttl_points,dense_rank() over (partition by group_id order by b.ttl_points desc, p.player_id) as rnk from players p join (select player, sum(player_points) as ttl_points from (select first_player as player, sum(first_score) as player_points from matches group by first_player union all select second_player as player, sum(second_score) as player_points from matches group by second_player) a group by a.player) b on p.player_id=b.player) c where c.rnk = 1 group by group_id
select group_id, player_id from(select a.player_id, a.group_id, rank() over(partition by a.group_id order by y.score desc, a.player_id asc) as rnk from Players a join (select player, sum(score) as score from(select first_player as player, first_score as score from Matches union all select second_player as player, second_score as score from Matches ) x group by 1) y on a.player_id = y.player) b where rnk = 1
select group_id,Player_id from ( select z.group_id,z.player_id, rank() over (partition by z.group_id order by z.sscore desc,z.player_id ) rnk from ( select p.group_id,p.player_id,sum(score) as sscore from players p, ( select first_player as player_id,first_score as score from matches a union all select second_player as player_id,second_score as score from matches a ) t where p.player_id=t.player_id group by t.player_id ) z ) y where rnk=1
select group_id,player_id from ( select group_id, player_id, rank() over (partition by group_id order by total_score desc,player_id) as rn from ( select a.group_id, a.player_id, sum(b.score) as total_score from players as a left join ( select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches ) as b on a.player_id = b.player_id group by 1,2 ) as tot_rank ) as n where rn = 1 group by 1
select group_id,player_id from ( select group_id, player_id, rank() over(partition by group_id order by total_score desc, player_id asc) as 'order_players' from ( select p.player_id, p.group_id, sum(case when m.second_player = p.player_id then second_score when m.first_player = p.player_id then first_score end) as 'total_score' from players p left join matches m on m.second_player = p.player_id or m.first_player = p.player_id group by p.player_id, p.group_id ) A )B where B.order_players=1
select group_id,player_id from ( select group_id,player_id,sum(score) as 'total_score', dense_rank() over(partition by group_id order by sum(score) desc, player_id) as rank_score from( (select first_player as 'player_id', first_score as 'score', p.group_id from matches m left join players p on p.player_id = m.first_player) union all (select second_player as 'player_id', second_score as 'score', p1.group_id from matches m left join players p1 on p1.player_id = m.second_player) ) AS A group by player_id, group_id ) as B where rank_score = 1
select group_id,player_id from ( select group_id,player_id,sum(score) score , rank() over(partition by group_id order by sum(score) desc) rnk, row_number() over(partition by group_id order by sum(score) desc) rownum from ( select group_id,player_id,match_id,first_score score from Players P join Matches M on P.player_id = M.first_player union all select group_id,player_id,match_id,second_score score from Players P join Matches M on P.player_id = M.second_player )a group by 1,2 )a where rnk=1 and rownum=1 order by 1
select group_id,player_id from ( select p.group_id, player_id, row_number() over (partition by group_id order by total_score desc, player_id ) as row_n from (select p.* , sum(case when p.player_id=m.first_player then m.first_score else m.second_score end) as total_score from players p inner join matches m on p.player_id=m.first_player or p.player_id=m.second_player group by p.player_id, p.group_id) p) p where row_n=1
select group_id,player_id from ( select player_id, sum(score) score,group_id, rank() over(partition by group_id order by sum(score) desc, player_id) rowNum from ( select b.player_id , a.first_score score, group_id from Matches a inner join Players b on a.first_player = b.player_id union all select b.player_id , a.second_score score,group_id from Matches a inner join Players b on a.second_player = b.player_id ) sumMatchs group by player_id) as sumMatchs where rowNum = 1 order by group_id
select group_id,player_id from ( select sc.group_id group_id, sc.player_id player_id, rank() over (partition by sc.group_id order by sum(sc.score) desc, sc.player_id asc) as rnk from( select p.group_id group_id, p.player_id player_id , sum(m.first_score) as score from players p inner join matches m on p.player_id = m.first_player group by p.group_id,p.player_id union all select p.group_id group_id, p.player_id player_id , sum(second_score) as score from players p inner join matches m on p.player_id = m.second_player group by p.group_id,p.player_id ) sc group by sc.group_id,sc.player_id ) A where rnk = 1
select group_id,player_id from (select group_id,first_player as player_id, score, row_number() over(partition by group_id order by score desc ,first_player asc) rn from ( select group_id, first_player, sum(first_score) score from ( select first_player, first_score from matches union all select second_player, second_score from matches) x inner join players p on x.first_player = p.player_id group by 1,2 order by 1,2 ) xx ) xx where rn =1
select group_id,player_id from (select group_id,player_id, row_number() over (partition by group_id order by totScore desc, player) as RowNo from ((select player, sum(score) as totScore from (select first_player as player, first_score as score from Matches union all select second_player, second_score from Matches) temp group by 1) temp left join Players on Players.player_id = temp.player))temp1 where RowNo = 1
select group_id,player_id from (select p.group_id,ps.player_id,sum(ps.score) as score from players p, (select first_player as player_id, first_score as score from Matches union all select second_player, second_score from Matches) ps where ps.player_id = p.player_id group by player_id order by group_id,score desc,player_id) top_scores group by group_id
select s.group_id, s.player_id from ( select p.group_id, p.player_id, RANK() OVER(PARTITION BY p.group_id ORDER BY SUM(case when p.player_id = m.first_player then first_score when p.player_id = m.second_player then second_score else 0 end) DESC, p.player_id ASC) AS rank_player from Players p left join Matches m on p.player_id = m.first_player or p.player_id = m.second_player group by 1,2 )s where s.rank_player = 1
select z.group_id, z.player_id from ( select y.group_id, x.player_id, row_number()over(partition by y.group_id order by sum(x.score) desc, x.player_id asc) as row_cnt from ( select first_player as player_id, sum(first_score) as score from matches group by first_player union all select second_player as player_id, sum(second_score) as score from matches group by second_player ) x join players y on x.player_id = y.player_id group by x.player_id, y.group_id ) z where z.row_cnt = 1
select z.group_id, z.player_id from ( select y.group_id, x.player_id, sum(x.score) as score, row_number()over(partition by y.group_id order by sum(x.score) desc, x.player_id asc) as row_cnt from ( select first_player as player_id, sum(first_score) as score from matches group by first_player union all select second_player as player_id, sum(second_score) as score from matches group by second_player ) x join players y on x.player_id = y.player_id group by x.player_id, y.group_id ) z where z.row_cnt = 1
with A as( select first_player as "player_id", first_score as "score" from matches union all select second_player as "player_id", second_score as "score" from matches ), B as( select group_id, A.player_id, sum(score) as "total_score" from A join players p on A.player_id = p.player_id group by 1,2 ), C as( select group_id, player_id, total_score, row_number() over(partition by group_id order by total_score desc, player_id) as "score_rank" from B ) select group_id, player_id from C where score_rank = 1
with CTE1 as ( select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches ) , CTE2 AS ( SELECT a.player_id, b.group_id, sum(a.score) as score FROM CTE1 a LEFT JOIN players b on a. player_id = b.player_id group by 1,2 ) , CTE3 as ( select player_id, group_id,row_number() over(partition by group_id order by score DESC, player_id ASC) AS ranking from CTE2 ) SELECT group_id, player_id from CTE3 WHERE ranking= 1
with M1 as ( select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ), M2 as ( select player_id, sum(score) as score from M1 group by player_id ), PM1 as ( select P.player_id, P.group_id, ifnull(M2.score,0) as score from Players as P left join M2 on P.player_id=M2.player_id ), PM2 as ( select player_id, group_id, row_number() over(partition by group_id order by score desc, player_id asc) as rnk from PM1 ) select group_id, player_id from PM2 where rnk=1
with a as ( select match_id, first_player as player_id, sum(first_score) as player_score from matches group by 2 union all select match_id, second_player as player_id, sum(second_score) as player_score from matches group by 2 order by match_id), b as ( select player_id, sum(player_score) as player_score from a group by 1 order by 1), c as ( select p.group_id, p.player_id, b.player_score, rank() over(partition by p.group_id order by b.player_score desc, p.player_id asc) as rn from players p left join b on p.player_id = b.player_id) select group_id, player_id from c where rn = 1
with a as ( select player_id, SUM(score) as score FROM ( select first_player as player_id, first_score as score from matches UNION ALL select second_player as player_id, second_score as score FROm matches ) t1 group by 1), b as ( select group_id, player_id, score, rank() over(partition by group_id order by score desc) as r_num from ( select a.player_id, p.group_id, a.score from a JOIN players p ON a.player_id = p.player_id ) t1) select group_id, MIN(player_id) as player_id from b where r_num = 1 group by 1
with a as (select id, sum(score) as 'score' from (select first_player as id, first_score as score from matches union all select second_player as id, second_score as score from matches) tmp group by 1) , b as (select group_id, player_id from (select group_id, player_id, rank() over(partition by group_id order by score desc) as 'rank' from players, a where player_id = id order by 1, 2) tmp where tmp.rank = 1) select distinct group_id, player_id from (select group_id, player_id, rank() over(partition by group_id order by player_id) as 'final' from b) as tmp where tmp.final = 1
with a as( select first_player, first_score from matches union all select second_player, second_score from matches), b as( select first_player, sum(first_score) as score from a group by 1), c as ( select p.group_id, p.player_id, ifnull(b.score,0) as score from players p left join b on p.player_id=b.first_player order by 1, 3 desc) select group_id, player_id from ( select *, row_number() over (partition by group_id order by score desc, player_id asc) as rnk from c) as d where rnk=1
with a as( select first_player, sum(first_score) as score_1 from Matches group by 1 ), b as( select second_player, sum(second_score) as score_2 from Matches group by 1 ), score as( select p.player_id, p.group_id, row_number() over(partition by group_id order by coalesce(a.score_1, 0)+coalesce(b.score_2, 0) desc, player_id ) as rnk from Players p left join a on p.player_id = a.first_player left join b on p.player_id = b.second_player) select player_id, group_id from score where rnk = 1 order by group_id
with all_player as ( select match_id, first_player as player_id, first_score as player_score from matches union select match_id, second_player, second_score from matches ) , player_total_score as ( select player_id, sum(player_score) as total_score from all_player group by 1 ) select distinct group_id, player_id from ( select group_id, pts.player_id , rank() over(partition by group_id order by pts.total_score desc, player_id asc) as player_rnk from player_total_score pts join players on players.player_id=pts.player_id ) tmp where player_rnk=1
with base as ( select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ), base2 as ( select player_id, sum(score) as total from base group by player_id ), base3 as (select base2.player_id, p.group_id, base2.total from base2 inner join Players p on base2.player_id = p.player_id ), base4 as ( select player_id, group_id, row_number() over(partition by group_id order by total desc, player_id) as rk from base3 ) select group_id, player_id from base4 where rk=1
with base as ( select group_id, player_id, first_score score from Matches left join players on first_player = player_id union all select group_id, player_id, second_score score from Matches left join players on second_player = player_id), score as (select group_id, player_id, sum(score) score from base group by 1, 2), top_score as ( select group_id, player_id, rank() over ( partition by group_id order by score desc, player_id asc) rn from score ) select group_id, player_id from top_score where rn =1
with base as ( select player_id, sum(score) as score from ( select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches )_ group by player_id ) select group_id, player_id from ( select p.group_id, p.player_id, row_number() over (partition by p.group_id order by ifnull(score, 0) desc, p.player_id asc) as ranking from players p left join base s on p.player_id = s.player_id )_ where ranking = 1
with baseTable as( Select first_player as player_id, first_score as score from Matches union all Select second_player as player_id, second_score as score from Matches ), playerGroup as ( Select t.player_id as player_id,p.group_id as group_id, sum(t.score) as player_score from baseTable t join Players p on t.player_id=p.player_id group by t.player_id ) Select group_id , player_id from (Select group_id , player_id, DENSE_RANK() OVER(PARTITION BY group_id ORDER BY player_score desc,player_id) as ScoreRank from playerGroup) t where ScoreRank=1
with c as ( select first_player as player_id, first_score as score, group_id from Matches as a inner join Players as b on a.first_player = b.player_id union all select second_player as player_id, second_score as score, group_id from Matches as a inner join Players as b on a.second_player = b.player_id), e as ( select group_id, player_id,sum(score) as scor from c group by group_id, player_id), f as ( select group_id, player_id, row_number() over (partition by group_id order by scor desc, player_id) as k from e) select group_id, player_id from f where k = 1
with combine as ( select match_id, first_player as player_id, first_score as score from Matches UNION ALL select match_id, second_player as player_id, second_score as score from Matches ) select group_id, player_id from ( select group_id, c.player_id, rank() over(partition by group_id order by sum(score) desc, player_id) as rnk from combine c JOIN Players p on p.player_id = c.player_id group by c.player_id ) a where rnk = 1
with cte (match_id,player_id,score) as (select match_id,first_player,first_score from Matches union select match_id,second_player ,second_score from Matches), cte1 as (select player_id,sum(score) as total_score from cte group by player_id), cte2 as (select cte1.player_id,cte1.total_score,Players.group_id from cte1 left join Players on cte1.player_id = Players.player_id), cte3 as (select *,max(total_score) over (partition by group_id ) as max_score from cte2), cte4 as (select *,min(player_id) over (partition by group_id) as min_id from cte3 where total_score=max_score) select group_id,player_id from cte4 where player_id=min_id order by group_id
with cte as ( select first_player as player_id, first_score as points from matches union all select second_player as player_id, second_score as points from matches), cte2 as ( select cte.player_id, sum(points), max(group_id) as group_id, dense_rank() over (partition by group_id order by sum(points) desc, cte.player_id) as rnk from cte left join players p on cte.player_id = p.player_id group by cte.player_id) select group_id, player_id from cte2 where rnk = 1 group by 1,2
with cte as ( select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ), cte2 as ( select p.player_id, p.group_id, c.score from Players p left join ( select player_id, sum(score) as score from cte group by player_id )c on p.player_id = c.player_id ) select group_id, player_id from ( select group_id, player_id, rank() over(partition by group_id order by score desc, player_id asc) as rnk from cte2 )t where rnk = 1
with cte as ( select group_id ,first_player player_id ,first_score score from Matches a join players b on a.first_player = b.player_id union all select group_id ,second_player player_id ,second_score score from Matches a join players b on a.first_player = b.player_id ) , cte2 as ( select group_id ,player_id ,sum(score) score from cte group by 1,2 ) select distinct group_id ,player_id from ( select group_id ,player_id ,score ,rank() over(partition by group_id order by score desc, player_id) rnk from cte2 )x where rnk = 1 order by 1
with cte as ( select group_id,player_id,sum(total_score) as total_score from ( ( select A.group_id,A.player_id,sum(first_score) as total_score from Players as A left join Matches as B on A.player_id=B.first_player group by 1,2 UNION ALL select A.group_id,A.player_id,sum(second_score) as total_score from Players as A left join Matches as B on A.player_id=B.second_player group by 1,2 ) ) X group by 1,2 ) select group_id,player_id from ( select group_id,player_id, row_number() over(partition by group_id order by total_score desc, player_id asc) as rw_num from cte ) Y where rw_num=1
with cte as ( select player, sum(score) as final_score from (select first_player as player, first_score as score from matches union all select second_player as player, second_score as score from matches) as tab group by player ) select group_id, player_id from ( select p.group_id as group_id, p.player_id as player_id, rank() over(partition by p.group_id order by c.final_score desc, p.player_id asc) as rnk from Players p inner join cte c on p.player_id = c.player ) as tab1 where rnk = 1
with cte as ( select player, sum(score) as final_score from (select first_player as player, sum(first_score) as score from matches group by 1 union all select second_player as player, sum(second_score) as score from matches group by 1) as tab group by player ) select group_id, player_id from ( select p.group_id as group_id, p.player_id as player_id, rank() over(partition by p.group_id order by c.final_score desc, p.player_id asc) as rnk from Players p inner join cte c on p.player_id = c.player ) as tab1 where rnk = 1
with cte as ( select player, sum(score) as total_score from ( select first_player as player, first_score as score from matches union all select second_player, second_score from matches ) t group by player ) select group_id, player_id from ( select player_id, group_id, rank() over(partition by group_id order by total_score desc, player_id) as row_id from cte inner join players p on cte.player = p.player_id ) t where row_id = 1
with cte as ( select player, sum(score) score from ( select first_player player, first_score score from matches union all select second_player player, second_score score from matches ) f group by 1 ) select group_id, player_id from ( select p.player_id, ifnull(cte.score, 0), p.group_id, rank() over (partition by p.group_id order by cte.score desc, p.player_id) r from players p left join cte on p.player_id = cte.player ) cte1 where r = 1
with cte as ( select player_id, sum(score) as score from (select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ) t group by player_id ) select group_id, player_id from (select P.player_id, P.group_id, row_number() over (partition by P.group_id order by C.score desc, P.player_id) as r from Players P left join cte C on P.player_id=C.player_id) t where r=1
with cte as (SELECT player_id, group_id, SUM(CASE WHEN player_id = first_player THEN first_score ELSE second_score END) as tot_score from Players p JOIN Matches m ON p.player_id = m.first_player OR p.player_id = m.second_player GROUP BY player_id, group_id) select group_id, player_id from (select player_id, group_id, RANK() OVER(PARTITION BY group_id ORDER BY tot_score DESC, player_id) AS rnk from cte) tmp where rnk =1
with cte as (select first_player as player_id , first_score as score from Matches UNION ALL select second_player as player_id , second_score as score from Matches order by player_id ) , cte2 as (select player_id , sum(score) as tot_score from cte group by 1 ) , cte3 as (select c.player_id , group_id , rank() over ( partition by group_id order by tot_score DESC) as rnk from cte2 c join Players p on c.player_id = p.player_id ) select group_id , player_id from cte3 where rnk = 1 group by 1
with cte as (select first_player as player_id, first_score as score from Matches Union all select second_player as player_id, second_score as score from Matches), cte2 as (select cte.player_id, sum(score) as total, group_id from cte left join players on cte.player_id = players.player_id group by player_id), cte3 as (select group_id, player_id, rank()over(partition by group_id order by total desc, player_id asc) as rnk, total from cte2) select group_id, player_id from cte3 where rnk = 1 order by group_id
with cte as (select first_player as player_id, first_score as score from matches union all select second_player,second_score from matches), scores as (select player_id, sum(score) as total_score from cte group by player_id), final as (select *, dense_rank()over(partition by group_id order by total_score desc) as ranking from players left join scores using (player_id) ) select group_id, min(player_id) as player_id from final where ranking = 1 group by group_id
with cte as (select first_player as player_id,first_score as score from matches union all select second_player as player_id,second_score as score from matches) select group_id,player_id from (select P.group_id,P.player_id,rank() over(partition by group_id order by sum(score) desc, player_id) as rnk from cte C join players P on C.player_id=P.player_id group by P.group_id,P.player_id) t1 where rnk=1
with cte as (select p.player_id,scores,group_id from players p join (select player_id,sum(score) as scores from(select first_player as player_id,first_score as score from matches union all select second_player as player_id,second_score as score from matches)c group by 1)d on d.player_id=p.player_id) select group_id,player_id from(select group_id,player_id,scores,rank() over(partition by group_id order by scores desc, player_id)rn from cte)c where rn=1
with cte as (select player, sum(score) as score from ((select first_player as player, first_score as score from Matches) union all (select second_player as player, second_score as score from Matches)) as tmp1 group by 1) select group_id, player_id from (select u.player_id, u.group_id, dense_rank() over (partition by group_id order by score desc, player_id asc) as _rank from Players u left join cte on u.player_id = cte.player) as tmp where _rank = 1
with cte as (select player_id, sum(score) as score from (select first_player as player_id, sum(first_score) as score from Matches group by 1 union all select second_player as player_id, sum(second_score) as score from Matches group by 1)cte1 group by 1) select group_id, min(player_id) as player_id from (select a.group_id, a.player_id, rank()over(partition by a.group_id order by b.score desc) as rnk from Players a join cte b on a.player_id = b.player_id order by 1, 2)cte2 where rnk = 1 group by 1
with cte as (select player_id,group_id,rank() over (partition by group_id order by total_score desc,player_id) as rankd from (select p.player_id,group_id,sum(case when p.player_id=m.first_player then first_score else 0 end)+sum(case when p.player_id=m.second_player then second_score else 0 end) as total_score from players as p join matches as m on p.player_id=m.first_player or p.player_id=m.second_player group by 1,2) as a) select group_id,player_id from cte where rankd=1
with cte as( (select first_player as player, first_score as score from Matches) union all (select second_player as player, second_score as score from Matches)) , cte1 as( select player, sum(score) as total from cte group by player) select group_id,player_id from (select p.player_id, p.group_id, c.total, rank()over(partition by p.group_id order by c.total desc, p.player_id) as rnk from Players p join cte1 c on p.player_id = c.player) a where rnk = 1 order by group_id
with cte as( SELECT first_player AS player_id, first_score AS score FROM Matches m UNION ALL SELECT second_player AS player_id, second_score AS score FROM Matches m) , cte1 as (select player_id, sum(score) as sum from cte group by player_id) , cte2 as( select players.group_id, cte1.player_id, cte1.sum, dense_rank()over(partition by group_id order by cte1.sum desc, player_id asc) as rnk from cte1 join players on cte1.player_id =players.player_id order by group_id) select group_id, player_id from cte2 where rnk = 1
with cte as( select distinct p.group_id, t.player_id, sum(t.score) over (partition by t.player_id) as score from (select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches)t join Players as p on t.player_id = p.player_id ) select group_id, player_id from (select *, rank() over (partition by group_id order by score desc, player_id asc) as rnk from cte)t where rnk=1
with cte as( select first_player as player, first_score as score from Matches union all select second_player as player, second_score as score from Matches ), cte2 as( select player, sum(score) as score from cte group by player ) select distinct group_id, player as player_id from ( select group_id, cte2.player, score, dense_rank() over(partition by group_id order by score desc, player) as rnk from cte2 left join Players p on cte2.player = p.player_id ) temp where rnk = 1
with cte as( select first_player as player, sum(first_score) as scores from (SELECT FIRST_PLAYER,FIRST_SCORE from matches union all select second_player,second_score from matches)c group by 1) select group_id,player as player_id from (select player,scores,group_id,rank() over (partition by group_id order by scores desc,player) as rnk from cte left join players on cte.player=players.player_id)c where rnk=1
with cte as( select player, sum(score) as sum_score from( select first_player as player, first_score as score from matches union all select second_player as player, second_score as score from matches ) sub group by player ) select group_id, player as player_id from( select player, group_id, sum_score, rank() over(partition by group_id order by sum_score desc, player) as rank0 from cte c join players p on c.player = p.player_id ) sub2 where rank0 = 1
with cte as(select distinct first_player player_id, sum(first_score) over(partition by first_player) score from Matches union all select distinct second_player player_id, sum(second_score) over(partition by second_player) score from Matches), cte2 as (select player_id, sum(score) as total_score from cte group by player_id order by player_id ), cte3 as(select player_id, group_id, ifnull(total_score,0) total_score, row_number() over(partition by group_id order by total_score desc) rnk from cte2 right join Players using(player_id)) select distinct group_id, player_id from cte3 where rnk = 1
with cte as(select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches) select group_id, player_id from (select group_id, a.player_id,rank() over (partition by group_id order by sum_score desc,player_id )as rk from (select player_id,sum(score)as sum_score from cte group by 1)as a left join Players on a.player_id = Players.player_id) as b where rk = 1
with cte1 as ( select first_player, first_score from Matches union all select second_player, second_score from Matches ), cte2 as ( select p.group_id, first_player, sum(first_score) as tot_score from cte1 join Players p on cte1.first_player = p.player_id group by first_player order by p.group_id asc, first_player asc, tot_score desc ), cte3 as ( select cte2.*, row_number() over (partition by group_id order by tot_score desc) as giv_rank from cte2 ) select group_id as GROUP_ID, first_player as PLAYER_ID from cte3 where giv_rank = 1
with cte1 as ( select group_id, player_id, sum(case when player_id = first_player then first_score when player_id = second_player then second_score end) as 'score' from Matches m join Players p on p.player_id in (first_player, second_player) group by group_id, player_id), cte2 as ( select *, rank()over(partition by group_id order by score desc, player_id asc) as 'rk' from cte1) select group_id, player_id from cte2 where rk = 1
with cte2 as(select player_id, sum(score) as score from(select first_player as player_id, first_score as score from matches union all select second_player, second_score from matches) cte1 group by 1), cte3 as(select p.group_id, c.player_id, c.score from cte2 c join players p on c.player_id=p.player_id group by 1,2) select group_id, player_id from cte3 where (group_id, score) in (select group_id, max(score) from cte3 group by 1) group by 1 order by 1
with cte_1 as (SELECT p.group_id, p.player_id, IFNULL(SUM(m.first_score),0) AS first_score_total FROM players p LEFT JOIN matches m ON p.player_id = m.first_player GROUP BY 2), cte_2 as( SELECT p.group_id, p.player_id, IFNULL(SUM(m.second_score),0) AS second_score_total FROM players p LEFT JOIN matches m ON p.player_id = m.second_player GROUP BY 2), cte as( SELECT cte_1.group_id, cte_1.player_id, DENSE_RANK() OVER (PARTITION BY cte_1.group_id ORDER BY cte_1.first_score_total+ cte_2.second_score_total DESC) AS ranking FROM cte_1 JOIN cte_2 ON cte_1.player_id = cte_2.player_id) SELECT group_id, MIN(player_id) AS player_id FROM cte WHERE ranking = 1 GROUP BY 1
with cte_player_agg as ( select p.player_id, p.group_id, sum(if(p.player_id = m.first_player, m.first_score, m.second_score)) as total_points from Players as p left join Matches as m on p.player_id = m.first_player or p.player_id = m.second_player group by 1, 2 ), cte_group_rank as ( select player_id, group_id, row_number() over ( partition by group_id order by total_points desc, player_id ) as player_rank from cte_player_agg ), cte_final as ( select group_id, max( if(player_rank = 1, player_id, null) ) as player_id from cte_group_rank group by 1 ) select * from cte_final
with cte_player_agg as ( select p.player_id, p.group_id, sum(if(p.player_id = m.first_player, m.first_score, m.second_score)) as total_points from Players as p left join Matches as m on p.player_id = m.first_player or p.player_id = m.second_player group by 1, 2 ), cte_group_rank as ( select player_id, group_id, row_number() over ( partition by group_id order by total_points desc, player_id ) as player_rank from cte_player_agg ), cte_final as ( select group_id, player_id from cte_group_rank where player_rank = 1 ) select * from cte_final
with cumulative_score as ( select p.group_id, p.player_id, sum(m.first_score) "total_score" from players p join matches m on p.player_id = m.first_player group by 2 union all select p.group_id, p.player_id, sum(m.second_score) "total_score" from players p join matches m on p.player_id = m.second_player group by 2 ) select group_id, player_id from (select group_id, player_id, rank() over (partition by group_id order by sum(total_score) desc, player_id) "score_rank" from cumulative_score group by 2 ) result_table where score_rank = 1
with d1 as ( select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ), d2 as ( select player_id, sum(score) as score from d1 group by player_id ), d3 as ( select Players.player_id, Players.group_id, row_number() over(partition by group_id order by coalesce(d2.score, 0) desc, Players.player_id asc) as row_num from Players left outer join d2 on Players.player_id = d2.player_id ) select group_id, player_id from d3 where row_num = 1 order by group_id
with e as ( select a.player_id, group_id, row_number() over (partition by group_id order by total_score desc, a.player_id) seq from ( select player_id, sum(score) total_score from ( select first_player player_id, first_score score from Matches union all (select second_player player_id, second_score score from Matches) ) c group by player_id ) a join Players b on a.player_id = b.player_id ) select group_id, player_id from e where seq = 1 order by group_id
with full_scores as ( SELECT m.first_player as player_id, m.first_score as score, p.group_id as group_id FROM matches m JOIN players p ON m.first_player = p.player_id UNION ALL SELECT m.second_player as player_id, m.second_score as score, p.group_id as group_id FROM matches m JOIN players p ON m.second_player = p.player_id ), rankings as ( SELECT group_id, player_id, RANK() OVER(PARTITION BY group_id ORDER BY SUM(score) DESC) as ranking FROM full_scores GROUP BY group_id, player_id ) SELECT group_id, MIN(player_id) as player_id FROM rankings WHERE ranking = 1 GROUP BY ranking, group_id
with home as ( select p.*, ifnull(m.first_score,0) as first_score from Players p left join Matches m on p.player_id = m.first_player), home_agg as ( select h.player_id, h.group_id, sum(h.first_score) ts from home h group by h.player_id), away as ( select p.*, ifnull(m.second_score,0) as second_score from Players p left join Matches m on p.player_id = m.second_player), away_agg as ( select a.player_id, a.group_id, sum(a.second_score) ts from away a group by a.player_id), temp as ( select a.player_id, a.group_id, a.ts + b.ts as total_score from home_agg a join away_agg b using (player_id)) select temp.group_id, min(temp.player_id) player_id from temp where (temp.group_id, temp.total_score) in ( select tem.group_id, max(tem.total_score) from temp tem group by tem.group_id) group by temp.group_id
with joined_scores as ( select match_id, first_player as player, first_score as score from matches m union all select match_id, second_player as player, second_score as score from matches m ) , player_scores as ( select p.group_id, p.player_id, coalesce(sum(score),0) as score from players p left join joined_scores j on p.player_id = j.player group by 1,2 ) , max_in_group as ( select group_id, max(score) as max_score from player_scores group by 1 ) select p.group_id, min(p.player_id) as player_id from player_scores p inner join max_in_group m on m.group_id = p.group_id and m.max_score = p.score group by 1 order by 1
with main as ( select b.*, score from (select first_player player_id, first_score score from matches UNION ALL select second_player player_id, second_score score from matches ) a join players b on a.player_id = b.player_id ), sum_ranked as ( select group_id, player_id, sum(score) total_score , rank() over (partition by group_id order by sum(score) desc, player_id asc) rank_val from main group by group_id, player_id ) select group_id, player_id from sum_ranked where rank_val = 1
with mtch AS ( SELECT p.group_id, m.player_id, SUM(m.score) sum_score FROM (SELECT first_player AS player_id, first_score AS score FROM Matches UNION ALL SELECT second_player AS player_id, second_score as score FROM Matches) m JOIN Players p ON p.player_id = m.player_id GROUP BY group_id, player_id ORDER BY group_id, player_id ) SELECT player_id, group_id FROM (SELECT group_id, player_id, RANK() OVER (PARTITION BY group_id ORDER BY sum_score DESC, player_id) rk FROM mtch) cte WHERE rk=1
with player_points as ( select player_id, group_id, sum( case when player_id=first_player then first_score when player_id=second_player then second_score else 0 end ) as tot_points from players p left join matches m on p.player_id = m.first_player or p.player_id = m.second_player group by player_id ), rnk_players as ( select group_id, player_id, rank() over (partition by group_id order by tot_points desc,player_id) as rnk from player_points ) select group_id, player_id from rnk_players where rnk=1
with player_scores as ( select player_id, sum(score) as total_score from ( select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches ) f group by 1 ) select group_id, player_id from ( select s.player_id, group_id, row_number() over(partition by group_id order by total_score desc) as ranked from player_scores s join players p on p.player_id = s.player_id ) f where ranked = 1
with player_scores as( select b.group_id, a.player_id, sum(a.score) score from (select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches )a inner join players b on a.player_id = b.player_id group by 1, 2 ) select group_id, min(player_id) as player_id from player_scores where (group_id, score) in (select group_id, max(score) from player_scores group by 1) group by 1 order by 1
with playerpoints as( select p.player_id,p.group_id, sum( case when p.player_id=m.first_player then first_score else second_score end) as points from players as p left join matches as m on p.player_id=m.first_player or p.player_id=m.second_player group by p.player_id,p.group_id ) select group_id, player_id from( select group_id, player_id, dense_rank()over(partition by group_id order by points desc, player_id) as playerrank from playerpoints )a where playerrank=1
with playerpoints as( select p.player_id,p.group_id, sum(case when p.player_id=m.first_player then first_score when p.player_id=m.second_player then second_score end) as points from players as p left join matches as m on p.player_id=m.first_player or p.player_id=m.second_player group by p.player_id,p.group_id ) select group_id, player_id from( select group_id, player_id, dense_rank()over(partition by group_id order by points desc, player_id) as playerrank from playerpoints )a where playerrank=1
with players_score as ( select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ) select group_id, min(player_id) player_id from ( select distinct group_id, p.player_id, rank() over(partition by group_id order by score desc) as rnk from Players p inner join ( select player_id, sum(score) as score from players_score group by 1) s on p.player_id=s.player_id ) a where rnk=1 group by 1
with playerscore as( select player ,sum(score) as score from( select first_player as player ,first_score as score from Matches union all select second_player as player ,second_score as score from Matches ) m group by player ) select p.group_id as group_id ,min(p.player_id) as player_id from playerscore ps join Players p on ps.player = p.player_id where ps.score = ( select max(psa.score) as max_score from playerscore psa join Players pa on psa.player = pa.player_id and pa.group_id = p.group_id ) group by group_id
with score as ( select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches ), tmp as (select p.group_id, p.player_id, coalesce(sum(score),0) as total from players as p left join score on p.player_id = score.player_id group by p.group_id, p.player_id ), tmp2 as ( select group_id, player_id, total, row_number()over(partition by group_id order by total desc) as rnk from tmp ) select group_id, player_id from tmp2 where rnk = 1
with score as ( select first_player as player_id, sum(first_score) as score from matches group by 1 union all select second_player as player_id, sum(second_score) as score from matches group by 1 ) select p.group_id, p.player_id from players p join ( select p.group_id, p.player_id, row_number() over(partition by p.group_id order by sum(s.score) desc) as rk from players p join score s on s.player_id = p.player_id group by 1, 2 ) tmp on tmp.group_id = p.group_id and tmp.rk = 1 and tmp.player_id = p.player_id
with score as ( select player_id, sum(score) total_score from (select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches) temp1 group by player_id ) select group_id, player_id from (select Players.group_id, Players.player_id, rank() over(partition by Players.group_id order by score.total_score desc, Players.player_id) rank_score from Players join score on Players.player_id = score.player_id) temp1 where rank_score = 1
with score as (select first_player player_id, first_score score from Matches union all select second_player player_id, second_score score from Matches ) select group_id,player_id from( select group_id, player_id,rank() over(partition by group_id order by sum(score) desc,player_id) rk from Players p join score s using (player_id) group by 1,2 ) a where rk=1
with score as (select p.player_id, p.group_id, ifnull(sum(m.score),0) as total_score from players p left join (select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches) m on p.player_id = m.player_id group by 1,2) select group_id, player_id from (select *, rank() over(partition by group_id order by total_score desc, player_id asc) as rk from score) a where rk = 1
with score as( select player, sum(score) as total_score from( select first_player as player, first_score as score from matches union all select second_player as player, second_score as score from matches) as sub group by player), player as( select player_id, total_score, group_id from players as p join score as s on p.player_id = s.player) select group_id, player_id from( select group_id, player_id, rank() over(partition by group_id order by total_score desc, player_id asc) as ranks from player) as sub2 where ranks =1
with scores as ( select player_id, sum(score) score from (select first_player player_id, first_score score from Matches union all select second_player player_id, second_score score from Matches) t group by player_id ) select group_id, player_id from ( select p.group_id, ps.player_id, sum(ps.score) as score from Players p join scores ps on p.player_id = ps.player_id group by ps.player_id order by group_id, score desc, player_id) top_scores group by group_id
with scores as (select player, sum(score) as total_score from (select first_player as player, first_score as score from Matches UNION ALL select second_player as player, second_score as score from Matches ) A group by player ) (select group_id, min(p1.player_id) as player_id from Players p1 left join scores on p1.player_id = scores.player where total_score = (select max(total_score) from Players left join scores on players.player_id = scores.player where players.group_id = p1.group_id ) group by group_id )
with scores_grouped as ( select first_player as player, first_score as score from matches union all select second_player as player, second_score as score from matches ), scores as( select player, sum(score) as score from scores_grouped group by player ), score_player as ( select group_id,player_id,score, max(score) over(partition by group_id) as group_max from players join scores on player_id=player ) select group_id,player_id from ( select group_id,player_id, min(player_id) over(partition by group_id) as min_player from score_player where score=group_max )min_player where player_id=min_player
with stack as ( select p.group_id , m.first_player as player_id , m.first_score as score from matches m inner join players p on p.player_id =m.first_player union all select p.group_id , m.second_player , m.second_score from matches m inner join players p on p.player_id =m.first_player ) , scoreagg as( select group_id, player_id, sum(score) scoreagg from stack group by group_id, player_id ) select group_id, player_id from ( select *, row_number()over(partition by group_id order by scoreagg desc, player_id)rn from scoreagg )d where rn=1
with t as ( SELECT match_id, first_player As player_id, first_score As 'score' FROM Matches UNION ALL SELECT match_id, second_player As player_id, second_score As 'score' FROM Matches ) SELECT group_id, player_id FROM ( SELECT group_id, player_id, ROW_NUMBER() OVER(PARTITION BY group_id ORDER BY score DESC, player_id) As 'rnk' FROM ( SELECT p.group_id, t.player_id, SUM(t.score) OVER(PARTITION BY player_id) As 'score' FROM t LEFT JOIN Players p ON t.player_id = p.player_id ) As t1 ) As t2 WHERE rnk=1 ORDER BY group_id
with t as ( with t as ( select first_player pid, sum(first_score) s from Matches group by first_player union all select second_player pid, sum(second_score) s from Matches group by second_player ) select t.pid, p.group_id, sum(s) as score from t join players p on t.pid = p.player_id group by pid order by group_id, score desc, pid ) select group_id, pid as player_id from t group by group_id
with t as (select first_player as player, first_score as score from Matches union all select second_player as player, second_score as score from Matches), t1 as (select group_id, player_id, sum(score) as total_score from Players p left join t on p.player_id = t.player group by 1, 2) select group_id, player_id from (select group_id, player_id, rank() over (partition by group_id order by total_score desc, player_id) as rnk from t1) tmp where rnk = 1
with t as (select player_id, sum(score) score from (select match_id, first_player player_id, first_score score from matches union select match_id, second_player player_id, second_score score from matches) m group by player_id) select player_id, group_id from (select t.player_id, group_id, row_number() over(partition by group_id order by score desc, player_id) rn from t join players p on t.player_id = p.player_id) n where rn=1
with t as( select group_id, player_id, sum(score) as total_score from Players p left join ((select match_id,first_player as player_id,first_score as score from Matches) union (select match_id,second_player,second_score from Matches))a using (player_id) group by group_id, player_id), r as ( select group_id, player_id, row_number() over(partition by group_id order by total_score desc,player_id) as rn from t) select group_id,player_id from r where rn=1
with t1 as ( select first_player as player, first_score as score from matches union all select second_player as player, second_score as score from matches ), total_score as ( select player, sum(score) as total from t1 group by player ), tmp as ( select group_id, p.player_id, row_number() over (partition by group_id order by total desc, p.player_id asc) as row_num from players p join total_score ts on p.player_id = ts.player ) select group_id, player_id from tmp where row_num = 1
with t1 as (select first_player as player, first_score as score from matches union all select second_player, second_score from matches ), t2 as (select player, sum(score) as total_score from t1 group by 1), t3 as (select group_id, p.player_id, row_number() over (partition by group_id order by total_score desc, p.player_id) as rnk from players p join t2 on p.player_id = t2.player) select group_id, player_id from t3 where rnk = 1
with t1 as (select player_id, players.group_id, coalesce(sum(case when player_id=first_player then first_score else second_score end),0) as tot from players left join matches on players.player_id = matches.first_player or players.player_id = matches.second_player group by player_id,players.group_id) , t2 as (select *, rank() over (partition by group_id order by tot desc, player_id asc ) as ran from t1) select group_id, player_id from t2 where ran=1
with t1 as( select m.first_player as player_id, sum(first_score) score from matches m group by 1 union all select m.second_player as player_id, sum(second_score) score from matches m group by 1 ), t2 as (select p.group_id, t1.player_id, sum(score) as tot from t1 join players p on p.player_id = t1.player_id group by 1,2) select t3.group_id, t3.player_id from (select t2.group_id, t2.player_id, rank() over(Partition by t2.group_id order by t2.tot desc, t2.player_id) as 'rank' from t2) t3 where t3.rank = 1
with t2 as ( SELECT player_id , SUM(WIN) cnt FROM ( SELECT first_player player_id, first_score WIN FROM Matches UNION ALL SELECT second_player, second_score WIN FROM Matches ) t1 GROUP BY PLAYER_ID ), t3 as ( SELECT p.group_id, p.player_id, COALESCE(cnt, 0) wins, ROW_NUMBER() OVER ( PARTITION BY p.group_id ORDER BY COALESCE(cnt, 0) DESC ,p.player_id ) rnum FROM Players p LEFT OUTER JOIN t2 ON p.player_id = t2.player_id ) SELECT group_id, player_id FROM T3 WHERE rnum=1
with table1 as ( select group_id as GROUP_ID, player_id as PLAYER_ID, points, ROW_NUMBER() OVER ( PARTITION BY group_id ORDER BY points desc,player_id ASC) row_num from (select a.group_id as group_id, a.player_id as player_id, sum(case when b.first_player = a.player_id then b.first_score when b.second_player = a.player_id then b.second_score end) as points from Matches b join Players a group by a.player_id, a.group_id) table2 ) select GROUP_ID, PLAYER_ID from table1 where row_num = 1
with table1 as (select p.group_id,t.player_id, sum(t.score) as score from ( select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches) t left join Players p on p.player_id=t.player_id group by 1, 2 order by 1,2) select group_id, player_id from (select *, row_number() over (partition by group_id order by score desc) as rnk from table1) a where rnk=1
with tb1 as ( select player, sum(Score) as totalScore from (select first_player as player, sum(first_score) as Score from Matches group by first_player union all select second_player as player, sum(second_score) as Score from Matches group by second_player) as a group by player), tb2 as( select tb1.player as player_id, group_id, tb1.totalScore from tb1 join Players on tb1.player=Players.player_id group by player_id order by group_id, totalScore desc, player_id ) select group_id, player_id from tb2 group by group_id
with tb1 as ( select player, sum(Score) as totalScore from (select first_player as player, sum(first_score) as Score from Matches group by first_player union all select second_player as player, sum(second_score) as Score from Matches group by second_player) as a group by player), tb2 as( select tb1.player as player_id, group_id, tb1.totalScore from tb1 join Players on tb1.player=Players.player_id group by player_id order by totalScore desc, player_id ) select group_id, player_id from tb2 group by group_id
with tbAll as ( select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches ), tbSumScore as ( select tbAll.player_id, p.group_id, sum(tbAll.score) as sumScore from tbAll join players as p on tbAll.player_id = p.player_id group by tbAll.player_id, p.group_id ), tbMaxScore as ( select group_id, max(sumScore) as maxScore from tbSumScore group by group_id ) select tbSumScore.group_id, min(tbSumScore.player_id) as player_id from tbMaxScore join tbSumScore on tbSumScore.group_id = tbMaxScore.group_id where tbSumScore.sumScore = tbMaxScore.maxScore group by tbSumScore.group_id
with tbMatchUin as ( select first_player as player_id, first_score as score from matches union all select second_player, second_score from matches ), tbSumScr as ( select m.player_id, p.group_id, sum(m.score) as sumScore from tbMatchUin as m join Players as p on m.player_id = p.player_id group by m.player_id, p.group_id ), tbMaxScr as ( select m.group_id, max(sumScore) as maxScore from tbSumScr as m group by 1 ) select tbMaxScr.group_id, min(tbSumScr.player_id) as player_id from tbSumScr join tbMaxScr on tbMaxScr.group_id = tbSumScr.group_id and tbMaxScr.maxScore = tbSumScr.sumScore group by 1
with tem as( select a.player_id, (sum(case when a.player_id = b.first_player then first_score else 0 end) + sum(case when a.player_id = b.second_player then second_score else 0 end)) as total_score, a.group_id from players a left join matches b on a.player_id = b.first_player or a.player_id = b.second_player group by player_id order by total_score desc, player_id asc) select group_id, player_id from ( select player_id, group_id, rank() over(partition by group_id order by total_score desc, player_id asc) as rank_n from tem )a where rank_n = 1
with tem as( select a.player_id, sum(case when a.player_id = b.first_player then first_score else 0 end) as first_score, sum(case when a.player_id = b.second_player then second_score else 0 end) as second_score from players a left join matches b on a.player_id = b.first_player or a.player_id = b.second_player group by player_id), tem2 as ( select a.player_id, a.first_score + a.second_score as total_score, b.group_id from tem a inner join players b on a.player_id = b.player_id group by player_id order by total_score desc, player_id asc) select group_id, player_id from ( select player_id, group_id, rank() over(partition by group_id order by total_score desc, player_id asc) as rank_n from tem2 )a where rank_n = 1
with temp as ( select * from( select match_id, first_player as player_id, first_score as score from matches union select match_id, second_player as player_id, second_score as score from matches) as t1 ) select group_id, player_id from( select p.group_id, t.player_id , sum(t.score) as total_score , row_number() over (partition by group_id order by sum(t.score) desc, t.player_id asc) as rk from temp as t inner join players as p on t.player_id=p.player_id group by player_id ) as t2 where rk=1
with temp as ( select first_player as player_id, first_score as score from Matches union all select second_player as player_id, second_score as score from Matches ), temp1 as ( select group_id, p.player_id, sum(case when score is NULL then 0 else score end) as score from Players as p join temp on p.player_id = temp.player_id group by group_id, player_id ) select group_id, player_id from (select group_id, player_id, rank() over (partition by group_id order by score desc, player_id) as ranking from temp1) as t where ranking = 1
with temp as ( select player_id, sum(point) as point from (select first_player as player_id, first_score as point from Matches union all select second_player as player_id, second_score as point from Matches) as t group by player_id ) select group_id, player_id from (select group_id, p.player_id, rank() over (partition by group_id order by point desc, player_id) as ranking from Players as p join temp on p.player_id = temp.player_id) as t where ranking = 1
with tmp as ( select player_id , group_id , first_score as score from Players t1 inner join Matches t2 on t1.player_id = t2.first_player union all select player_id , group_id , second_score as score from Players t1 inner join Matches t2 on t1.player_id = t2.second_player ), tmp1 as (select group_id, player_id, sum(score) as score from tmp group by 1,2), tmp2 as ( select group_id, player_id, dense_rank() over(partition by group_id order by score desc) as rnk from tmp1 ) select group_id, min(player_id) as player_id from tmp2 where rnk = 1 group by 1
with tmp as (select * from matches union all select match_id, second_player as first_player, first_player as second_player, second_score as first_score, first_score as second_score from matches ) select group_id, player_id from( select group_id, player_id, rank() over(partition by group_id order by sum(first_score) desc,player_id) as rnk from players a inner join tmp b on a.player_id=b.first_player group by 1,2) t where rnk=1 order by 1,2
with tmp as (select first_player , second_player , first_score , second_score from matches union all select second_player, first_player , second_score , first_score from matches ) select group_id, player_id from ( select group_id, first_player as player_id, rank() over(partition by group_id order by sum(first_score) desc, first_player) as rnk from players a inner join tmp b on a.player_id=b.first_player group by 1,2) t where rnk=1 order by 1
with total as ( select first_player as player, first_score as score from matches union all select second_player as player, second_score as score from matches), t1 as (select player, sum(score) as total_score from total group by player ) select group_id, min(a.player_id) as player_id from t1 join players a on player=a.player_id where total_score = (select max(total_score) as mx from t1 join players b on player=b.player_id where b.group_id = a.group_id group by b.group_id ) group by group_id
with tr1_flatten as ( select p.group_id as group_id, p.player_id as player_id, m1.first_score as score from Players p join Matches m1 on p.player_id = m1.first_player union all select p.group_id as group_id, p.player_id as player_id, m2.second_score as score from Players p join Matches m2 on p.player_id = m2.second_player ), tr2_agg as ( select group_id, player_id, sum(score) as total_score from tr1_flatten group by player_id ), tr3_rank as ( select group_id, player_id, rank() over (partition by group_id order by total_score desc) as rank_no from tr2_agg ) select group_id, min(player_id) as player_id from tr3_rank where rank_no = 1 group by group_id
with unionscore as ( select players.player_id ,players.group_id ,sum(score) as score from ( select first_player player_id ,first_score score from Matches union all select second_player player_id ,second_score score from Matches ) sumscore join Players players on players.player_id = sumscore.player_id group by players.player_id ,players.group_id ) select group_id ,min(player_id) as player_id from unionscore us1 where score = ( select max(score) from unionscore us2 where us1.group_id = us2.group_id ) group by group_id
with united as ( select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches ), grouped as ( select group_id, player_id, sum(score) as score from united join players using(player_id) group by 1, 2 order by score desc ) select group_id, player_id from grouped group by group_id
with x as ( select group_id, player_id, rank() over (partition by group_id order by score desc, player_id) as rn from ( select p.group_id, p.player_id, sum(m.score) as score from players p left join (select first_player as player_id, first_score as score from matches union all select second_player as player_id, second_score as score from matches) m using (player_id) group by p.group_id, p.player_id ) a ) select group_id, player_id from x where rn = 1
