SELECT * , DENSE_RANK() OVER (ORDER BY salary) team_id FROM employees WHERE salary NOT IN (SELECT salary FROM employees GROUP BY 1 HAVING COUNT(*) = 1)
SELECT *, DENSE_RANK () OVER (ORDER BY salary) team_id FROM (SELECT * FROM Employees WHERE salary IN (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) > 1)) x1
SELECT *, DENSE_RANK() OVER ( ORDER BY salary ) team_id FROM Employees WHERE salary NOT IN ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) = 1 ) ORDER BY team_id, employee_id
SELECT *, DENSE_RANK() OVER (ORDER BY SALARY) AS TEAM_ID FROM EMPLOYEES WHERE SALARY NOT IN (SELECT SALARY FROM EMPLOYEES GROUP BY SALARY HAVING COUNT(*) = 1) ORDER BY TEAM_ID, EMPLOYEE_ID
SELECT *, DENSE_RANK() OVER (ORDER BY salary) AS team_id FROM Employees WHERE salary IN (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) > 1) ORDER BY team_id, employee_id
SELECT *, DENSE_RANK() OVER (ORDER BY salary) AS team_id FROM Employees WHERE salary NOT IN( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) = 1)
SELECT *, DENSE_RANK() OVER (ORDER BY salary) team_id FROM employees WHERE salary NOT IN (SELECT salary FROM employees GROUP BY 1 HAVING COUNT(*) = 1)
SELECT *, DENSE_RANK() OVER(ORDER BY Salary) team_id FROM Employees WHERE Salary IN (SELECT salary FROM Employees GROUP BY 1 HAVING COUNT(*) > 1)
SELECT *, DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM Employees WHERE salary NOT IN ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) = 1 ) ORDER BY team_id, employee_id
SELECT *, DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM Employees WHERE salary NOT IN ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) = 1) ORDER BY team_id, employee_id
SELECT *, DENSE_RANK() OVER(ORDER BY salary) team_id FROM Employees WHERE salary NOT IN( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) = 1) ORDER BY team_id, employee_id
SELECT *, dense_rank() OVER(ORDER BY salary ASC) AS team_id FROM (SELECT a.employee_id, a.name, a.salary FROM Employees a, Employees b WHERE a.salary = b.salary AND a.employee_id < b.employee_id UNION SELECT b.employee_id, b.name, b.salary FROM Employees a, Employees b WHERE a.salary = b.salary AND a.employee_id < b.employee_id) temp1
SELECT E.employee_id, E.name, E.salary, B.team_id FROM Employees E LEFT JOIN (SELECT ROW_NUMBER() OVER (ORDER BY A.salary) team_id, A.salary FROM (SELECT salary, COUNT(salary) FROM Employees GROUP BY salary HAVING COUNT(salary) > 1) A) B ON E.salary = B.salary WHERE B.team_id IS NOT NULL ORDER BY B.team_id, E.employee_id
SELECT a.employee_id, a.name, a.salary, DENSE_RANK() OVER (ORDER BY a.salary) team_id FROM ( SELECT employee_id, name, salary FROM Employees WHERE salary NOT IN ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(employee_id) = 1 ) ) a
SELECT d1.*, d2.team_id FROM Employees as d1 JOIN ( SELECT salary, ROW_NUMBER() OVER(ORDER BY salary ASC) as team_id FROM Employees GROUP BY salary HAVING COUNT(employee_id) >= 2 ) as d2 ON d1.salary = d2.salary ORDER BY 4,1
SELECT e.employee_id, e.name, e.salary, valid_sal.team_id FROM employees e INNER JOIN ( SELECT salary, RANK() OVER (ORDER BY salary ASC) AS team_id FROM employees GROUP BY salary HAVING COUNT(employee_id) >= 2 ) valid_sal ON e.salary = valid_sal.salary ORDER BY team_id ASC, employee_id ASC
SELECT employee_id , name , salary , DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM employees WHERE salary IN ( SELECT salary FROM employees GROUP BY salary HAVING COUNT(employee_id)>1)
SELECT employee_id, NAME, salary, Dense_rank() OVER( ORDER BY salary) AS team_id FROM (SELECT *, Count(grp) OVER( partition BY grp) cnt FROM (SELECT *, Dense_rank() OVER( ORDER BY salary) AS grp FROM employees)a) b WHERE cnt > 1 ORDER BY 4, 1
SELECT employee_id, name, e.salary, team_id FROM Employees e JOIN (SELECT salary, RANK() OVER(ORDER BY salary) AS team_id FROM Employees GROUP BY salary HAVING COUNT(salary) > 1) AS temp ON e.salary = temp.salary ORDER BY team_id,employee_id
SELECT employee_id, name, employees.salary, team_id FROM employees right join (SELECT rank() over(order by salary) as team_id, salary, count(employee_id) cnt FROM Employees GROUP BY salary HAVING cnt > 1) a on employees.salary = a.salary order by team_id asc, employee_id asc
SELECT employee_id, name, salary, CAST(team_id AS SIGNED) AS team_id FROM (SELECT employee_id, name, salary, IF(@running_salary = salary, @running_team_id, @running_team_id:=@running_team_id+1) AS team_id, @running_salary:=salary FROM (SELECT employee_id, name, T2.salary FROM (SELECT employee_id, name, salary FROM Employees ORDER BY salary ASC, employee_id ASC) AS T1 LEFT JOIN (SElECT salary FROM (SELECT salary, COUNT(salary) AS totalCount FROM Employees GROUP BY salary) AS F1 WHERE totalCount > 1) AS T2 ON T1.salary = T2.salary WHERE T2.salary IS NOT NULL ORDER BY salary ASC, employee_id ASC) AS FinalTable JOIN (SELECT @running_salary:=0, @running_team_id:=0) AS RunningTable) AS FinalizedTable
SELECT employee_id, name, salary, DENSE_RANK() OVER (ORDER BY salary ASC) as team_id FROM Employees WHERE salary IN (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) > 1)
SELECT employee_id, name, salary, DENSE_RANK() OVER (ORDER BY salary) AS team_id FROM employees WHERE salary IN (SELECT salary FROM employees GROUP BY salary HAVING COUNT(*) > 1) ORDER BY 4, 1
SELECT employee_id, name, salary, DENSE_RANK() OVER (ORDER BY salary) as team_id FROM employees WHERE salary=ANY (SELECT salary FROM employees GROUP BY salary HAVING COUNT(*)>=2) ORDER BY team_id, employee_id
SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY SALARY ASC) team_id FROM Employees WHERE salary IN (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(salary)>1) ORDER BY team_id ASC, employee_id ASC
SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary ASC) AS team_id FROM Employees WHERE salary NOT IN (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) = 1) ORDER BY 4,1 ASC
SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM Employees WHERE salary IN (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(salary) > 1)
SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM Employees WHERE salary NOT IN (SELECT salary FROM (SELECT salary, COUNT(salary) AS cnt FROM employees GROUP BY 1)t WHERE cnt = 1) ORDER BY team_id, employee_id
SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM Employees WHERE salary NOT IN (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(employee_id) = 1) ORDER BY 4 ASC, 1 ASC
SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) as team_id FROM (SELECT employee_id, name, salary, COUNT(employee_id) OVER(PARTITION BY salary) as cnt FROM Employees) t WHERE cnt > 1
SELECT employee_id, name, salary, dense_rank () OVER ( ORDER BY salary ) AS team_id FROM Employees WHERE salary IN( SELECT salary FROM Employees GROUP BY salary HAVING count(salary)>=2 ) ORDER BY team_id, employee_id
SELECT employee_id,name,a.salary,team_id FROM Employees as a JOIN ( SELECT salary,CAST(@rank:=@rank+1 as UNSIGNED) as team_id FROM ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(salary)>1 ORDER BY salary ) c JOIN ( SELECT @rank:=0 ) d ) b ON a.salary=b.salary ORDER BY team_id,employee_id
SELECT employee_id,name,salary, DENSE_RANK() OVER (ORDER BY salary ASC) team_id FROM Employees WHERE salary in (SELECT salary FROM Employees GROUP BY salary HAVING count(*)>1) ORDER BY team_id ASC,employee_id ASC
SELECT employee_id,name,salary,DENSE_RANK() OVER(ORDER BY salary ASC) AS team_id FROM (SELECT *,COUNT(*) OVER(PARTITION BY salary) AS s FROM Employees) a WHERE s>1 ORDER BY team_id ASC,employee_id ASC
Select *, dense_rank() over(order by salary asc) as team_id from Employees where salary not in (Select salary from Employees group by salary having count(*) = 1) order by team_id , employee_id
WITH A AS(SELECT * FROM Employees WHERE employee_id NOT IN (SELECT employee_id FROM Employees GROUP BY salary HAVING COUNT(*)=1)) SELECT *, DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM A ORDER BY team_id, employee_id
WITH CTE AS ( SELECT *, COUNT(*) OVER (PARTITION BY team_id) AS cnt FROM ( SELECT e1.employee_id, e1.name, e1.salary, DENSE_RANK() OVER (ORDER BY e1.salary) AS team_id FROM Employees e1 JOIN Employees e2 ON e1.salary = e2.salary AND e1.employee_id != e2.employee_id ORDER BY team_id ASC, e1.employee_id ASC ) sub ) SELECT DISTINCT employee_id, name, salary, team_id FROM CTE WHERE cnt >= 2
WITH DupSalaries AS ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) > 1 ) SELECT employee_id, name, salary, DENSE_RANK() OVER (ORDER BY salary ASC) AS team_id FROM Employees WHERE salary IN (SELECT salary FROM DupSalaries) ORDER BY team_id ASC, employee_id ASC
WITH S0 AS (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(salary) > 1), S1 AS (SELECT ROW_NUMBER() OVER (ORDER BY salary ASC) team_id, salary FROM S0) SELECT employee_id, name, S1.salary, team_id FROM Employees INNER JOIN S1 ON Employees.salary = S1.salary ORDER BY team_id ASC, employee_id ASC
WITH SALARY AS ( SELECT e.salary FROM Employees e GROUP BY e.salary HAVING COUNT(*)>1 ), RANKS AS ( SELECT s1.salary, COUNT(*) AS 'rank' FROM SALARY s1, SALARY s2 WHERE s1.salary >= s2.salary GROUP BY s1.salary ) SELECT e.*, r.rank AS 'team_id' FROM Employees e JOIN RANKS r ON e.salary=r.salary ORDER BY team_id, e.employee_id
WITH SALARY AS ( SELECT e.salary FROM Employees e GROUP BY e.salary HAVING COUNT(*)>1 ), RANKS AS ( SELECT s1.salary, COUNT(*) AS 'rank' FROM SALARY s1, SALARY s2 WHERE s1.salary>=s2.salary GROUP BY s1.salary ) SELECT e.*, r.rank AS 'team_id' FROM Employees e JOIN RANKS r ON e.salary=r.salary ORDER BY team_id, e.employee_id
WITH cte AS ( SELECT salary, ROW_NUMBER() OVER(ORDER BY salary) AS team_id FROM Employees GROUP BY 1 HAVING COUNT(*) > 1 ) SELECT e.employee_id, e.name, c.salary, c.team_id FROM Employees e JOIN cte c ON e.salary = c.salary ORDER BY 4 ASC, 1 ASC
WITH cte AS( SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) as team_id FROM Employees WHERE salary NOT IN (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*)= 1) ) SELECT employee_id, name, salary, team_id FROM cte ORDER BY team_id, employee_id
WITH cte as ( Select * FROM Employees WHERE salary NOT IN (Select salary FROM Employees GROUP BY salary HAVING COUNT(salary) = 1) ) Select *, DENSE_RANK() OVER(ORDER BY salary) as team_id FROM cte ORDER BY team_id, employee_id
WITH filtered as ( SELECT * FROM Employees WHERE salary in ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) > 1 ) ) SELECT *, DENSE_RANK() OVER(ORDER BY salary ASC) as team_id FROM filtered ORDER BY team_id, employee_id
WITH group_salary AS ( SELECT DISTINCT salary, DENSE_RANK() OVER (ORDER BY salary ASC) AS team_id FROM Employees GROUP BY salary HAVING COUNT(salary) > 1 ) SELECT e.employee_id AS employee_id, e.name AS name, g.salary AS salary, g.team_id AS team_id FROM Employees AS e INNER JOIN group_salary AS g ON e.salary = g.salary ORDER BY g.team_id ASC, e.employee_id ASC
WITH main AS ( SELECT *, COUNT(*) OVER(PARTITION BY salary) AS num_emp FROM Employees ) SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM main WHERE num_emp > 1 ORDER BY team_id, employee_id
WITH min_groups AS ( SELECT employee_id, name, salary, COUNT(*) OVER (PARTITION BY salary) AS counts FROM Employees ) SELECT employee_id, name, salary, DENSE_RANK() OVER (ORDER BY salary) AS team_id FROM min_groups WHERE counts >= 2
WITH min_groups AS ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) >= 2 ) SELECT e.employee_id, e.name, e.salary, DENSE_RANK() OVER (ORDER BY salary) AS team_id FROM Employees e INNER JOIN min_groups m ON (e.salary = m.salary)
WITH raw_data AS ( SELECT employee_id, name, salary, count(*) OVER (PARTITION BY salary ORDER BY salary) as salary_count FROM employees) SELECT employee_id, name, salary, DENSE_RANK() OVER (ORDER BY salary) as team_id FROM raw_data WHERE salary_count > 1 ORDER BY 3, 1
WITH s AS (SELECT salary, ROW_NUMBER() OVER (PARTITION BY salary) AS "sal_count" FROM Employees), smult AS (SELECT DISTINCT(salary) AS "salary" FROM s WHERE sal_count > 1) SELECT e.employee_id, e.name, smult.salary, DENSE_RANK() OVER (ORDER BY smult.salary ASC) AS "team_id" FROM smult LEFT JOIN Employees e ON e.salary = smult.salary ORDER BY team_id ASC, employee_id ASC
WITH s as ( SELECT salary , count(distinct employee_id) employee_cnt FROM Employees GROUP BY salary HAVING employee_cnt > 1 ) SELECT e.employee_id , e.name , e.salary , dense_rank() over(order by salary asc) team_id FROM s LEFT JOIN Employees e on e.salary = s.salary ORDER BY team_id, e.employee_id
WITH salaries as (SELECT e.salary, COUNT(*) FROM employees e JOIN employees e1 ON e.employee_id <> e1.employee_id and e.salary = e1.salary GROUP BY e.salary HAVING COUNT(*) >= 2) SELECT e.employee_id, e.name, e.salary, DENSE_RANK() OVER(ORDER BY s.salary) AS team_id FROM employees e JOIN salaries s ON e.salary = s.salary ORDER BY team_id, e.employee_id
WITH salaries_group as (SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) > 1) SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) as team_id FROM Employees WHERE salary IN (SELECT salary FROM salaries_group) ORDER BY team_id ASC, employee_id ASC
WITH salary_group AS ( SELECT salary FROM employees GROUP BY salary HAVING COUNT(*) >=2 ), salary_group_ranking AS ( SELECT salary, RANK() OVER ( order by salary ) as team_id FROM salary_group ) SELECT e.*, s.team_id FROM employees e JOIN salary_group_ranking s ON e.salary = s.salary ORDER BY team_id, employee_id
WITH salary_level AS ( SELECT salary FROM Employees GROUP BY 1 HAVING COUNT(name) >= 2 ) SELECT *, DENSE_RANK() OVER(ORDER BY salary) as team_id FROM Employees WHERE salary IN (select * FROM salary_level) ORDER BY 4, 1
WITH t AS ( SELECT *, COUNT(*) OVER(PARTITION BY salary) s_number FROM employees ) SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) team_id FROM t WHERE s_number>1 ORDER BY team_id,employee_id
WITH t AS ( SELECT e1.employee_id, e1.name,e1.salary FROM Employees e1 WHERE e1.salary IN ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(employee_id) > 1) ) SELECT t.employee_id, t.name, t.salary, DENSE_RANK() OVER(ORDER BY t.salary) AS team_id FROM t
WITH t AS ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) > 1 ) SELECT employee_id, name, salary, DENSE_RANK() OVER(ORDER BY salary) AS team_id FROM Employees WHERE salary IN (SELECT salary FROM t) ORDER BY 4, 1
WITH t0 AS ( SELECT salary FROM Employees GROUP BY salary HAVING COUNT(*) > 1 ORDER BY salary ASC ), t1 AS ( SELECT salary, ROW_NUMBER() OVER() AS team_id FROM t0 ) SELECT employee_id, name, Employees.salary, team_id FROM Employees INNER JOIN t1 ON t1.salary=Employees.salary ORDER BY team_id, employee_id
WITH team AS ( SELECT salary, DENSE_RANK() OVER (ORDER BY salary) AS team_id FROM Employees GROUP BY salary HAVING COUNT(salary) > 1 ) SELECT e.employee_id AS employee_id, e.name AS name, t.salary AS salary, t.team_id AS team_id FROM Employees AS e INNER JOIN team AS t ON e.salary = t.salary ORDER BY t.team_id, e.employee_id
WITH teams AS ( SELECT employee_id, name, salary FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM employees GROUP BY salary HAVING COUNT(*) = 1) ) SELECT employee_id, name, salary, DENSE_RANK() OVER ( ORDER BY salary ASC) team_id FROM teams
WITH teams AS ( SELECT salary, rank() over (ORDER BY salary) as ranking FROM Employees GROUP BY salary HAVING COUNT(*) > 1 ORDER BY salary ) SELECT e.*, ranking as team_id FROM Employees e JOIN teams t ON e.salary = t.salary ORDER BY ranking, e.employee_id
WITH tmp AS ( SELECT salary, ROW_NUMBER() OVER (ORDER BY salary) AS team_id FROM Employees GROUP BY salary HAVING COUNT(1) > 1 ) SELECT employee_id, name, e.salary, team_id FROM Employees e INNER JOIN tmp t ON e.salary = t.salary ORDER BY team_id, employee_id
WITH unique_num AS ( SELECT salary, COUNT(employee_id) FROM Employees GROUP BY salary HAVING COUNT(employee_id)>1 ) SELECT employee_id, name, salary, DENSE_RANK()OVER(ORDER BY salary) AS team_id FROM Employees WHERE salary IN (SELECT salary FROM unique_num) ORDER BY 4, 1
select * , DENSE_RANK() over (order by salary) as team_id from Employees where salary not in (select salary from Employees group by salary having count(*) = 1) order by team_id , employee_id
select * , dense_rank() over (order by salary ) as team_id from Employees where salary not in ( select salary from employees group by salary having count(*)=1)
select * from (select distinct e1.employee_id, e1.name, e1.salary, dense_rank() over(order by e1.salary) as team_id from Employees e1 , employees e2 where e1.salary= e2.salary and e1.name <> e2.name)a order by team_id,employee_id
select * from (select employee_id,name,salary,dense_rank() over(order by salary) as team_id from (select * from (select *,count(name) over(partition by salary) as num from Employees)a where num>1)b )d order by team_id,employee_id
select *, DENSE_RANK() over (order by salary asc) as team_id from Employees where salary in (select salary from (select salary, COUNT(distinct employee_id) as cnt from Employees group by salary) as t where cnt >= 2) order by team_id,employee_id
select *, dense_rank () over (order by salary) as team_id from (select * from Employees where salary not in (select salary from (select salary, count(*) as cn from Employees group by 1) t1 where cn = 1))t2 order by team_id, employee_id
select *, dense_rank() over (order by salary) as team_id from (select employee_id, name,salary from (select *, count(1) over (partition by salary) cnt from employees)a where cnt>1)b
select *, dense_rank() over (order by salary) as team_id from Employees where salary in (select salary from Employees group by 1 having count(*) >= 2) order by team_id, employee_id
select *, dense_rank() over (order by salary) as team_id from employees where employee_id not in (select employee_id from employees group by salary having count(*) = 1) order by team_id, employee_id
select *, dense_rank() over (order by salary) team_id from Employees where salary in (select salary from ( select salary, count(salary) from Employees group by salary having count(salary) > 1) sub )
select *, dense_rank() over(order by salary asc) as team_id from employees where salary not in (select salary from employees group by salary having count(1)<2) order by team_id asc, employee_id asc
select *, dense_rank() over(order by salary)as team_id from Employees where employee_id not in (select employee_id from Employees group by salary having count(*) = 1 )
select *, dense_rank()over(order by salary) as team_id from (select e1.* from Employees e1 join ( select salary, count(employee_id) from Employees group by salary having count(employee_id) >=2 ) tbl on e1.salary = tbl.salary) tbl2
select *, dense_rank()over(order by salary) as team_id from employees where salary in (select salary from employees group by 1 having count(employee_id) > 1)
select E.employee_id, E.name, E.salary, dense_rank() over (order by E.salary) as team_id from Employees E inner join ( select salary, count(employee_id) as employee_cnt from Employees group by 1 ) S on E.salary = S.salary and S.employee_cnt >=2 order by E.salary, E.employee_id
select b.employee_id, b.name, b.salary, dense_rank() over (order by b.salary asc) as team_id from employees b left join (select salary, count(*) as cnt from employees group by salary) a on b.salary = a.salary where a.cnt >1
select distinct a.employee_id, a.name, a.salary, dense_rank() over(order by salary) as team_id from Employees a join Employees b on a.employee_id != b.employee_id and a.salary = b.salary order by 4, 1
select distinct a.employee_id, a.name, a.salary, dense_rank() over(order by salary) as team_id from Employees a join Employees b where a.salary = b.salary and a.employee_id != b.employee_id order by 4, 1
select distinct a.employee_id, a.name, a.salary, dense_rank()over(order by salary) as team_id from Employees a join Employees b where a.salary= b.salary and a.employee_id != b.employee_id order by 4, 1
select distinct e.employee_id, e.name, e.salary, dense_rank() over(order by salary asc) as "team_id" from Employees as e join Employees as e2 using (salary) where e.employee_id <> e2.employee_id order by team_id asc, employee_id asc
select distinct e1.employee_id, e1.name, e1.salary, dense_rank() over(order by e1.salary) as team_id from Employees e1 , employees e2 where e1.salary= e2.salary and e1.name <> e2.name order by dense_rank() over(order by e1.salary),e1.employee_id
select distinct e1.employee_id, e1.name, e1.salary, dense_rank() over(order by salary asc) as team_id from Employees e1, Employees e2 where e1.salary = e2.salary and e1.employee_id != e2.employee_id order by salary, employee_id asc
select distinct e1.employee_id,e1.name,e1.salary, dense_rank() over(order by e1.salary) as team_id from Employees e1,Employees e2 where e1.employee_id != e2.employee_id and e1.salary=e2.salary order by 4,1
select distinct employee_id, name, salary, team_id from (select a.employee_id as employee_id, a.name as name, a.salary as salary, dense_rank() over (order by a.salary) as team_id from employees a join employees b on a.salary = b.salary and a.name != b.name order by team_id, employee_id) temp
select e.*, a.team_id from Employees e join ( select salary, rank() over(order by salary) as team_id from Employees group by salary having count(salary)>1 ) a on e.salary = a.salary order by team_id, e.employee_id
select e.*, dense_rank()over(order by salary asc) as team_id from employees e where salary not in ( select salary from employees e group by salary having count(salary) < 2 ) order by team_id, employee_id
select e.*, team_id from employees e join ( select salary, rank() over (order by salary) as team_id from employees group by salary having count(employee_id) > 1 ) a on e.salary = a.salary order by team_id, employee_id
select e.employee_id as employee_id, e.name as name, s.salary as salary, s.team_id as team_id from ( select s1.salary as salary, ifnull(count(s2.salary), 0) + 1 as team_id from ( select distinct e1.salary from Employees e1 inner join Employees e2 on (e1.salary=e2.salary and e1.employee_id<e2.employee_id) ) as s1 left join ( select distinct e1.salary from Employees e1 inner join Employees e2 on (e1.salary=e2.salary and e1.employee_id<e2.employee_id) ) as s2 on (s1.salary>s2.salary) group by s1.salary ) as s inner join Employees as e on (s.salary=e.salary) order by 3,1
select e.employee_id, e.name, e.salary, a.team_id from employees as e join( select salary, dense_rank()over(order by salary) as team_id from employees group by salary having count(distinct employee_id)>1 )a on e.salary=a.salary order by a.team_id, employee_id
select e.employee_id, e.name, e.salary, dense_rank() over (order by salary asc) as team_id from Employees e where salary IN (select salary from Employees GROUP BY salary HAVING COUNT(salary) > 1)
select e.employee_id, e.name, e.salary, dense_rank() over(order by e.salary asc) as team_id from employees e inner join (select salary, count(salary) as count_emp from employees group by salary having count(*)>1) as t on e.salary = t.salary
select e.employee_id, e.name, e.salary, dense_rank() over(order by e.salary asc) team_id from employees e where e.employee_id not in (select employee_id from employees group by salary having count(salary) = 1)
select e.employee_id, e.name, e.salary, e1.team_id from employees e join (select salary, dense_rank() over(order by salary) as team_id from employees group by salary having count(distinct employee_id) >1)e1 on e.salary = e1.salary order by e1.team_id, e.employee_id
select e.employee_id, e.name, e.salary, tmp.team_id from Employees e right join( select salary, dense_rank()over(order by salary) as team_id from Employees group by salary having count(name) > 1 )tmp on e.salary = tmp.salary order by team_id,employee_id
select e.employee_id, e.name, e.salary, tt.tid as team_id from Employees e left join (select dense_rank() over(order by salary asc) as tid, salary from (select salary from Employees group by salary having count(employee_id)>1) t) tt on e.salary = tt.salary where tt.tid is not NULL order by team_id asc, employee_id asc
select e1.employee_id, e1.name, e1.salary, tab.rnk as team_id from employees e1 inner join ( select salary, rank() over(order by salary) as rnk from employees e2 group by salary having count(*) > 1 ) as tab on e1.salary = tab.salary order by 4, 1
select e1.employee_id, e1.name, e1.salary, tb3.team_id from employees e1 inner join (select tb2.salary, (select count(distinct tb.salary) from (select tt.salary from (select distinct e_temp.salary, count(distinct e_temp.employee_id) as n from employees e_temp group by 1) tt where tt.n>=2)tb where tb.salary<=tb2.salary) as team_id from (select distinct tb1.salary from (select distinct salary, count(distinct employee_id) as n from employees e group by 1) tb1 where tb1.n>1) tb2) tb3 on tb3.salary=e1.salary order by 4,1
select e1.employee_id, max(e1.name) as name, max(e1.salary) as salary, dense_rank() over (order by e1.salary) as team_id from employees e1, employees e2 where e1.salary=e2.salary group by e1.employee_id having count(e1.employee_id)>1 order by 4,1
select employee_id , name , e.salary, k.numb as team_id from Employees e join ( select salary,row_number() over( order by salary asc) as numb from Employees group by salary having count(*)>1)k on e.salary = k.salary order by team_id , employee_id
select employee_id , name , salary , dense_rank() over(order by salary ) team_id from employees where salary in (select salary from employees group by salary having count(*) >= 2)
select employee_id , name , salary , dense_rank() over(order by salary) as team_id from ( select employee_id , name , salary , count(employee_id) over(partition by salary) as team_size from employees ) tmp where tmp.team_size>1 order by team_id, employee_id
select employee_id , name , salary , dense_rank() over(order by salary) as team_id from employees e where e.salary in (select salary from employees group by salary having count(*)>1) order by team_id, employee_id
select employee_id ,name ,salary ,dense_rank() over(order by salary asc) as team_id from employees where salary not in (select salary from employees group by salary having count(*) = 1) order by team_id, employee_id
select employee_id, name, b.salary, team_id from employees a join ( select salary, row_number() over (order by salary asc) as team_id from employees group by salary having count(employee_id) >= 2) b on a.salary = b.salary order by team_id asc, employee_id asc
select employee_id, name, e.salary, dense_rank() over(order by e.salary asc) as team_id from Employees e join (select salary from Employees group by salary having count(employee_id) > 1) filter_tmp on e.salary = filter_tmp.salary order by team_id asc, employee_id asc
select employee_id, name, e.salary, team_id from Employees e, ( select row_number() over (order by salary) as team_id , salary from Employees group by salary having count(employee_id) > 1 ) a where e.salary = a.salary order by team_id, employee_id
select employee_id, name, salary, DENSE_RANK() OVER (order by salary)team_id from employees e1 where salary IN (select salary from employees group by salary having count(employee_id) > 1) order by team_id, employee_id
select employee_id, name, salary, dense_rank() over (order by salary asc) as team_id from employees where salary in (select salary from employees group by salary having count(*) > 1) order by salary asc, employee_id asc
select employee_id, name, salary, dense_rank() over (order by salary) as team_id from (select *, count(*) over (partition by salary) as ct from employees) a where ct >= 2 order by 4, 1
select employee_id, name, salary, dense_rank() over (order by salary) as team_id from Employees where salary in ( select salary from Employees e group by salary having count(0)>1) order by team_id, employee_id
select employee_id, name, salary, dense_rank() over (order by salary) as team_id from employees where salary in (select salary from employees group by salary having count(salary)>1)
select employee_id, name, salary, dense_rank() over(order by salary asc) 'team_id' from employees where salary IN (select salary from employees group by salary having count(*) > 1)
select employee_id, name, salary, dense_rank() over(order by salary asc) as team_id from employees where salary in (select salary from Employees group by salary having count(*)>1)
select employee_id, name, salary, dense_rank() over(order by salary) as team_id from ( select distinct e1.employee_id, e1.name, e1.salary from employees e1 join employees e2 on e1.salary = e2.salary and e1.employee_id != e2.employee_id ) t order by 4, 1
select employee_id, name, salary, dense_rank() over(order by salary) as team_id from (select *, count(employee_id) over(partition by salary) as num from Employees) t where num > 1 order by salary, employee_id
select employee_id, name, salary, dense_rank() over(order by salary) as team_id from employees where salary in ( select salary from employees group by salary having count(salary)>1)
select employee_id, name, salary, dense_rank() over(order by salary) as team_id from employees where salary not in (select salary from employees group by salary having count(salary)<2) order by 4, employee_id
select employee_id, name, salary, rnk as team_id from( select employee_id, name, salary, dense_rank() over (order by salary) as rnk from ( select employee_id, name, salary, count(name) over (partition by salary) as cnt from employees) a where cnt>1)b
select employee_id, name, salary, team_id from ( select s2.employee_id, s2.name, s2.salary, convert(if (s2.salary = @prevsal, @id := @id, @id := @id + 1), signed) as team_id, @prevsal := s2.salary from ( select e1.employee_id, e1.name, e1.salary from Employees e1 left join (select salary, count(employee_id) as groupcount from Employees group by salary) s1 on s1.salary = e1.salary where s1.groupcount > 1 order by e1.salary, e1.employee_id ) s2 cross join (select @id := 0, @prevsal := -1) s3 ) s4
select employee_id, name, salary, team_id from( select employee_id, name, salary, dense_rank() over(order by salary asc) team_id from ( select * from ( select employee_id, name, salary, count(salary) over(partition by salary) cnt from employees ) f1 where cnt >= 2 ) f2 ) f3 order by team_id asc, employee_id asc
select employee_id,name,salary, DENSE_RANK() OVER (order by salary) as team_id from Employees where salary NOT IN ( select salary from employees group by salary having count(salary) = 1 )
select employee_id,name,salary, dense_rank() over (order by salary asc) as team_id from ( select *, count(salary) over (partition by salary) as c from Employees) a where c > 1
select employees.employee_id, employees.name, employees.salary, distinctSalaryWithTeam.team_id from Employees join ( select dSalary, @curRow := @curRow+1 as team_id from ( select salary as dSalary from employees group by salary having count(*)>1 order by dSalary ) as distinctSalary JOIN (SELECT @curRow := 0) r) as distinctSalaryWithTeam on Employees.salary = distinctSalaryWithTeam.dSalary order by salary, employee_id
with CTE AS ( SELECt name, salary FROM Employees GROUP BY Salary HAVING count(*)=1 ) SELECT employee_id, name, salary, DENSE_RANK() OVER(order by salary ASC) AS team_id FROM Employees WHERE salary not in ( SELECT salary FROM CTE) ORDER BY team_id, employee_id
with EE2 as (select count(name) over w as team_num, employee_id, name, salary from Employees WINDOW w as (partition by salary)) select employee_id, name, salary, dense_rank() over (order by salary asc) as team_id from EE2 where team_num>1 order by team_id asc, employee_id asc
with EE2 as (select team_num, employee_id, name, salary from (select count(name) over w as team_num, employee_id, name, salary from Employees WINDOW w as (partition by salary)) EE where team_num>1) select employee_id, name, salary, dense_rank() over (order by salary asc) as team_id from EE2 order by team_id asc, employee_id asc
with Table1 as ( SELECT salary ,count(*) FROM Employees GROUP BY 1 HAVING count(*) > 1 ) SELECT * FROM ( SELECT employee_id ,name ,salary ,DENSE_RANK() OVER(ORDER BY Salary ASC) as team_id FROM employees WHERE salary in (SELECT salary From Table1) ) t ORDER BY team_id,employee_id ASC
with a as ( select salary from Employees group by salary having count(employee_id)>=2) select e.employee_id, e.name, a.salary, dense_rank() over(order by salary) as team_id from a inner join Employees e on a.salary = e.salary order by 4 asc, 1 asc
with a as ( select salary, ROW_NUMBER() OVER(ORDER BY salary ASC) as team_id from Employees group by salary having count(employee_id)>=2) select e.employee_id, e.name, a.salary, a.team_id from a inner join Employees e on a.salary = e.salary order by 4 asc, 1 asc
with a as (SELECT salary, rank()over(order by salary) as rnk FROM Employees GROUP BY salary having count(salary) >= 2 ) SELECT e.employee_id, e.name, e.salary, a.rnk as team_id FROM Employees e JOIN a ON a.salary = e.salary ORDER BY team_id, employee_id
with a as (select salary from Employees group by salary having count(employee_id)>1 order by salary) select employee_id, name, salary, dense_rank() over (order by salary) as team_id from Employees where salary in (select salary from a)
with base1 as (select salary from Employees group by salary having count(salary) <2 ), base2 as (select * from Employees where salary not in (select salary from base1)) select employee_id, name, salary , dense_rank() over (order by salary) as team_id from base2
with cte as ( select *, count(*) over (partition by salary) as count_salary from Employees) select employee_id,name,salary, dense_rank() over (order by salary) as team_id from cte where count_salary>1 order by team_id, employee_id
with cte as ( select e.employee_id, e.name, e.salary from employees e join employees e1 on e.salary = e1.salary and e.name <> e1.name ) select distinct *, dense_rank() over (order by salary asc)team_id from cte order by salary, employee_id
with cte as ( select employee_id, name, salary, count(employee_id) over (partition by salary) as sal_cnt from Employees ) select employee_id, name, salary, dense_rank() over (order by salary asc) as team_id from cte where sal_cnt >= 2 order by team_id asc, employee_id asc
with cte as ( select employee_id, name, salary, count(employee_id) over(partition by salary) cnt from employees ) select employee_id, name, salary, dense_rank() over(order by salary ) as team_id from cte where cnt>1 order by salary, employee_id
with cte as ( select employee_id, name, salary, dense_rank() over (partition by salary order by salary) as sal_rank from Employees) , teams as ( select salary, count(employee_id) as num from Employees group by 1 having count(employee_id) > 1) , ordered as ( select salary, row_number() over (order by salary ) as rn from teams) select employee_id, name, t.salary,rn as team_id from cte e join ordered t on e.salary = t.salary where sal_rank = 1 order by team_id, employee_id
with cte as ( select employee_id,name,salary from Employees e where salary in (select salary from Employees e1 group by salary having count(employee_id) >=2 ) ) select *, dense_rank() over (order by salary asc) as team_id from cte
with cte as ( select salary, count(*) from Employees group by salary having count(*) >1 ), cte2 as(select employee_id,name,a.salary from Employees a inner join cte b where a.salary = b.salary) select a.*, dense_rank() over(order by salary ) as team_id from cte2 a
with cte as ( select salary, count(1) cnt from employees group by salary having count(1) = 1 ) select employee_id, name, salary, dense_rank() over(order by salary) team_id from employees where salary not in (select salary from cte) order by team_id, employee_id
with cte as ( select salary, dense_rank() over(order by salary) as team_id from employees group by salary having count(employee_id) > 1 order by salary ), team as ( select employee_id, name, employees.salary, cte.team_id from employees join cte on employees.salary = cte.salary order by team_id, employee_id ) select * from team
with cte as ( select salary, row_number()over(order by salary ) team_id from employees group by 1 having count(*)>1) select employee_id, name,salary,team_id from employees join cte using(salary) order by 4,1
with cte as ( select salary,count(salary) as cnt from Employees group by 1 ) select employee_id,name,salary, dense_rank() over(order by salary) as team_id from Employees where salary not in (select salary from cte where cnt<2) order by 4,1
with cte as (SELECT e.salary FROM Employees e GROUP BY e.salary HAVING COUNT(*) > 1) SELECT *, DENSE_RANK() OVER(ORDER BY salary ASC) AS team_id FROM Employees e WHERE salary IN (SELECT salary FROM cte)
with cte as (select * from Employees where salary not in(select salary from Employees group by salary having count(*) = 1)) select employee_id , name , salary , dense_rank() over(order by salary) as team_id from cte
with cte as (select employee_id, name,salary, case when (count(employee_id) over (partition by salary))>=2 then 1 else 0 end as team from employees) select employee_id, name,salary, dense_rank() over (order by salary) as team_id from cte where team= 1
with cte as( select * from employees where employee_id not in( select employee_id from employees group by salary having count(*) = 1)) select employee_id, name, salary, dense_rank() over(order by salary) as 'team_id' from cte order by team_id, employee_id
with cte as( select *, dense_rank() over(order by salary asc) 'team_id' from employees where salary in (select salary from employees group by salary having count(employee_id) > 1) ) select employee_id, name, salary, team_id from cte order by team_id asc, employee_id asc
with cte as( select employee_id from Employees group by salary having count(employee_id) < 2) select employee_id, name, salary, dense_rank() over (order by salary asc) as team_id from Employees where employee_id not in (select employee_id from cte)
with cte as( select employee_id, name, a.salary from Employees a right join ( select salary from Employees group by salary having count(*) >1) b on a.salary = b.salary ) select employee_id, name, salary, dense_rank() over(order by salary) as team_id from cte order by team_id, employee_id
with cte as( select salary from Employees group by salary having count(*) > 1 ) select employee_id, name, cte.salary, dense_rank() over(order by cte.salary asc) as team_id from Employees e left join cte on e.salary = cte.salary where cte.salary is not null order by salary asc, employee_id asc
with cte1 as ( select *, dense_rank() over (order by salary) as rnk1 from Employees ), cte2 as ( select rnk1, count(rnk1) ctrk from cte1 group by rnk1 ) select employee_id, name, salary, dense_rank() over(order by salary) as team_id from cte1 where cte1.rnk1 in (select rnk1 from cte2 where ctrk>1)
with cte1 as ( select *, dense_rank() over (order by salary) as rnk1 from Employees ), cte2 as ( select rnk1, count(rnk1) ctrk from cte1 group by rnk1 ), cte3 as ( select employee_id, name, salary from cte1 where cte1.rnk1 in (select rnk1 from cte2 where ctrk>1) ) select *, dense_rank() over(order by salary) as team_id from cte3
with cte1 as ( select *, dense_rank() over (order by salary) as rnk1 from Employees ), cte2 as ( select rnk1, count(rnk1) ctrk from cte1 group by rnk1 ), cte3 as ( select employee_id, name, salary, dense_rank() over(order by salary) as team_id from cte1 where cte1.rnk1 in (select rnk1 from cte2 where ctrk>1) ) select * from cte3
with cte1 as( select employee_id, name, salary from ( select employee_id, name, salary, count(employee_id) over (partition by salary) as c from Employees)z where c>1) select employee_id, name, salary, dense_rank() over (order by salary) as team_id from cte1
with eligible_salaries as ( select distinct salary, rank() over (order by salary asc) as team_id from Employees group by salary having count(employee_id) > 1 ) select employee_id, name, t1.salary, team_id from eligible_salaries t1 inner join Employees t2 on t1.salary = t2.salary order by team_id asc, employee_id asc
with emp_sal_count as ( select salary, count(1) as n from employees group by salary having count(1) >= 2 ), teams as ( select salary, row_number() over (order by salary asc) as team_id from emp_sal_count ) select employee_id, name, employees.salary, team_id from employees inner join teams on teams.salary = employees.salary order by team_id asc, employee_id asc
with employee_rank as( select salary,rank() over(order by salary asc) as team_id from employees as e group by salary having count(*) > 1 ) select e.employee_id, e.name, e.salary, er.team_id from employee_rank as er inner join Employees as e on er.salary = e.salary order by team_id asc, employee_id asc
with get_count as ( select *, count(1) over(partition by salary) as ct from employees ), get_team as ( select *, dense_rank() over(order by salary) as team_id from get_count where ct > 1 ) select employee_id, name, salary, team_id from get_team order by team_id, employee_id
with grp_salary as ( select employee_id, name, salary ,count(*) over(partition by salary) as cnt from employees ) select employee_id, name, salary ,dense_rank() over(order by salary) as team_id from grp_salary where cnt > 1
with min_sal as ( select salary, count(salary) from Employees group by 1 having count(salary)>1 ) select employee_id, name, salary, DENSE_RANK () over(order by salary) team_id from Employees where salary in (select salary from min_sal)
with n as ( select *, count(employee_id) over (partition by salary) as num from employees ), salary as (select distinct salary from n where num >=2 ), team as (select salary, dense_rank() over (order by salary) as team_id from salary) select n.employee_id, n.name, n.salary, t.team_id from n left join team t on t.salary = n.salary where num >= 2 order by t.team_id, n.employee_id
with r as ( select salary, rank() over ( order by salary ) as team_id from employees group by salary having count(*)>1 ) select e.employee_id,e.name,e.salary,r.team_id from employees e inner join r on r.salary = e.salary order by team_id asc , employee_id asc
with ranked_sal as ( select salary, rank() over (order by salary) as team_id from employees group by salary having count(*) > 1 )select e.employee_id,e.name,e.salary,r.team_id from ranked_sal r join employees e on r.salary = e.salary order by team_id,employee_id
with s0 as ( select salary from employees group by 1 having count(*)>1 order by 1), s1 as ( select row_number() over() as team_id, salary from s0) select e.*, team_id from employees e join s1 using(salary) order by team_id, employee_id
with sal_cnt as ( select salary, rank() over (order by salary) as team_id from ( select salary, count(distinct employee_id) as ecnt from Employees group by 1 having count(distinct employee_id)> 1 ) t ) select employee_id, name, e.salary, team_id from sal_cnt left join Employees e on sal_cnt.salary = e.salary order by team_id, employee_id
with salary as (select salary from employees group by salary having count(*) > 1 ) select employee_id, name, salary, dense_rank() over(order by salary asc) as team_id from Employees where salary in (select * from salary) order by 4, 1
with salary_rank as ( select salary, rank()over(order by salary asc) as rnk from Employees group by salary having count(*)>1 ), selected_members as ( select * from Employees as emp where emp.salary in (select salary from salary_rank) ) select employee_id , name, selected_members.salary, rnk as team_id from selected_members left join salary_rank on selected_members.salary = salary_rank.salary order by team_id asc, employee_id asc
with sals as ( select salary, count(1) total from Employees group by salary ), rsal as ( select salary, rank() over (order by salary) team_id from sals where total > 1 ) select employee_id, name, rsal.salary, team_id from rsal left join Employees on rsal.salary = Employees.salary order by team_id, employee_id
with sql1 as (select employee_id,name,salary,count(employee_id) over(partition by salary) as Employee_equal_sal from Employees), sql2 as (select employee_id,name,salary,dense_rank() over(order by salary asc) as team_id from sql1 where Employee_equal_sal >=2) select * from sql2 order by team_id,employee_id
with t as ( select *, count(1) over(partition by salary) as ct from employees ) select employee_id, name,salary, dense_rank() over(order by salary) as team_id from t where ct >=2
with t as ( select *, row_number() over(partition by salary order by salary) as rn, count(1) over(partition by salary) as ct from employees ) select employee_id, name,salary, dense_rank() over(order by salary) as team_id from t where ct >=2
with t as (select e.employee_id, e.name, e.salary, count(e.employee_id) over (partition by e.salary) as cnt from employees e) select t.employee_id, t.name, t.salary, dense_rank() over (order by t.salary asc) as team_id from t where t.cnt>=2 order by team_id , t.employee_id
with t as( select salary from employees group by salary having count(*)>1 ), t2 as ( select employee_id,name,salary from employees where salary in (select * from t) )select employee_id,name,salary,dense_rank() over(order by salary) team_id from t2
with t1 as ( select salary from employees group by salary having count(*) > 1 ) select a.*, DENSE_RANK () over(order by a.salary asc) as team_id from employees a right join t1 on a.salary = t1.salary order by team_id asc, employee_id asc
with t1 as ( select salary from employees group by salary having count(*) > 1 ), t2 as ( select a.* from t1 left join employees a on t1.salary = a.salary ) select t2.*, DENSE_RANK()over(order by salary asc) as team_id from t2 order by team_id asc, employee_id asc
with t1 as (select * from Employees where employee_id not in (select employee_id from Employees group by salary having count(*) = 1)) select employee_id, name, salary, dense_rank() over(order by salary) as team_id from t1
with t1 as (select salary, count(*) as cnt from employees group by 1 having cnt >= 2), t2 as (select salary, row_number() over (order by salary) as team_id from t1) select employee_id, name, e.salary, team_id from employees e join t2 on e.salary = t2.salary order by 4, 1
with t1(salary) as ( select salary from Employees group by salary having count(*) < 2), t2 as ( select employee_id, name, salary, dense_rank() over (order by salary) as team_id from Employees where salary not in (select salary from t1)) select * from t2 order by team_id, employee_id
with team as ( select salary from Employees group by 1 having count(1) >= 2), team_id as ( select salary, row_number() over (order by salary) as team_id from team ) select e.employee_id, e.name, e.salary, t.team_id from Employees e inner join team_id t on e.salary = t.salary order by team_id, employee_id
with team_ids as ( select salary, rank() over (order by salary asc) as team_id from Employees group by salary having count(employee_id) >= 2 ) select e.*, t.team_id from Employees e inner join team_ids t on e.salary = t.salary order by t.team_id, e.employee_id asc
with team_salary as (select salary from employees group by salary having count(distinct employee_id) >1), salary_rank as (select salary, rank() over(order by salary) as rnk from team_salary) select e.*, s.rnk as team_id from employees e left join salary_rank s on e.salary = s.salary where s.salary is not null order by s.rnk, e.employee_id
with temp1 as ( select salary, count(employee_id) as team_size from Employees group by salary ), temp2 as ( select salary, row_number() over (order by salary ASC) as team_id from temp1 where team_size > 1 ) select e.employee_id, e.name, t.salary, t.team_id from temp2 t left join Employees e on t.salary = e.salary order by t.team_id ASC, e.employee_id ASC
with temp1 as (select salary, count(employee_id) as num_of_emp from Employees group by salary having count(employee_id)>=2), temp2 as ( select salary, rank() over (order by salary) as team_id from temp1 ) select employee_id, name, e.salary, team_id from Employees e join temp2 t on e.salary = t.salary order by team_id, employee_id
with temp1 as( select salary, row_number() over (order by salary) as rnk, count( salary) from employees group by salary having count(salary) > 1 order by salary ) select a.*, b.rnk as team_id from employees as a inner join temp1 as b on a.salary=b.salary order by b.rnk, a.employee_id
with test as(select employee_id, name, salary, dense_rank() over(order by salary) as cc, count(salary) over(partition by salary) as mm from employees) select employee_id, name, salary, dense_rank() over(order by salary) as team_id from test where mm>1
with tmp as ( SELECT * FROM Employees where salary in (SELECT salary FROM Employees GROUP BY salary having count(*) >1) ) SELECT employee_id,name,salary, dense_rank() over(order by salary) as team_id FROM tmp ORDER BY team_id,1
