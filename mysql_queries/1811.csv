(select contest_id, gold_medal as 'id' from contests union select contest_id, silver_medal as 'id' from contests union select contest_id, bronze_medal as 'id' from contests order by 1, 2) select name, mail from users where user_id in (select gold_medal as 'id' from contests group by 1 having count(*) >= 3) or user_id in (select distinct a1.id from a a1, a a2, a a3 where a1.id = a2.id and a2.id = a3.id and a1.contest_id + 1 = a2.contest_id and a2.contest_id + 1 = a3.contest_id)
(select name, mail from users u join (select gold_medal as user_id from contests group by gold_medal having count(contest_id) >= 3) c on u.user_id = c.user_id ) UNION select name, mail from users u join ( select distinct user_id from (select user_id, contest_id - row_number() over (partition by user_id order by contest_id) as rownum from ( (select contest_id, gold_medal as user_id from contests ) union (select contest_id, silver_medal as user_id from contests ) union ( select contest_id, bronze_medal as user_id from contests ) order by user_id, contest_id) a )b group by b.rownum, user_id having count(user_id) >= 3 )c on u.user_id = c.user_id
SELECT DISTINCT E.name, E.mail FROM (SELECT V.name, V.mail FROM (SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) >= 3) D LEFT JOIN Users V on D.gold_medal = V.user_id UNION ALL SELECT U.name, U.mail FROM (SELECT DISTINCT B.participant FROM (SELECT A.participant, A.contest_id, A.contest_id - ROW_NUMBER() OVER (PARTITION BY A.participant ORDER BY A.contest_id) ranking FROM (SELECT gold_medal participant, contest_id, 'gold' award FROM Contests UNION ALL SELECT silver_medal participant, contest_id, 'silver' award FROM Contests UNION ALL SELECT bronze_medal participant, contest_id, 'bronze' award FROM Contests) A) B GROUP BY B.participant, B.ranking HAVING COUNT(B.contest_id) >= 3) C LEFT JOIN Users U ON C.participant = U.user_id) E
SELECT DISTINCT U.name, U.mail FROM Users U, Contests C1, Contests C2, Contests C3 WHERE U.USER_ID IN (C1.GOLD_MEDAL, C1.SILVER_MEDAL, C1.BRONZE_MEDAL) AND U.USER_ID IN (C2.GOLD_MEDAL, C2.SILVER_MEDAL, C2.BRONZE_MEDAL) AND U.USER_ID IN (C3.GOLD_MEDAL, C3.SILVER_MEDAL, C3.BRONZE_MEDAL) AND C1.CONTEST_ID = C2.CONTEST_ID + 1 AND C2.CONTEST_ID = C3.CONTEST_ID +1 UNION SELECT U.NAME, U.MAIL FROM Users U JOIN Contests C on U.user_id = C.gold_medal GROUP BY U.user_id HAVING COUNT(CONTEST_ID) >= 3
SELECT DISTINCT name ,mail FROM ( SELECT u.name ,u.mail ,COUNT(t.contest_id) OVER(PARTITION BY t.user_id ORDER BY t.contest_id RANGE BETWEEN 2 PRECEDING AND CURRENT ROW) AS counts FROM Users u INNER JOIN ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests ) t ON u.user_id = t.user_id ) m WHERE counts = 3 UNION SELECT u.name ,u.mail FROM Users u INNER JOIN Contests c ON u.user_id = c.gold_medal GROUP BY u.name, u.mail, c.gold_medal HAVING COUNT(*) >= 3
SELECT DISTINCT name,mail FROM Users u left join Contests c1 ON u.user_id = c1.gold_medal left join Contests c2 ON u.user_id = c2.gold_medal left join Contests c3 ON u.user_id = c3.gold_medal where c1.contest_id != c2.contest_id and c2.contest_id != c3.contest_id and c1.contest_id != c3.contest_id union SELECT DISTINCT name,mail FROM Users u left join Contests c1 ON u.user_id = c1.gold_medal or u.user_id = c1.silver_medal or u.user_id = c1.bronze_medal left join Contests c2 ON u.user_id = c2.gold_medal or u.user_id = c2.silver_medal or u.user_id = c2.bronze_medal left join Contests c3 ON u.user_id = c3.gold_medal or u.user_id = c3.silver_medal or u.user_id = c3.bronze_medal where c1.contest_id = c2.contest_id-1 and c2.contest_id = c3.contest_id-1
SELECT distinct mail, name FROM ( (SELECT id FROM (SELECT contest_id, id, lag(contest_id, 2) over(partition by id order by contest_id) AS previous_2 FROM (SELECT contest_id, gold_medal AS id FROM Contests UNION ALL SELECT contest_id, silver_medal AS id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS id FROM Contests) a ) b WHERE contest_id-previous_2=2) UNION (SELECT gold_medal AS id FROM Contests GROUP BY 1 HAVING count(contest_id)>=3)) t JOIN Users u ON t.id=u.user_id
SELECT name , mail FROM Users WHERE user_id IN( SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(DISTINCT contest_id) >= 3 ) UNION SELECT DISTINCT x.name , x.mail FROM Users x LEFT JOIN Contests a ON x.user_id IN (a.gold_medal,a.silver_medal,a.bronze_medal) LEFT JOIN Contests b ON a.contest_id=b.contest_id-1 AND x.user_id IN (b.gold_medal,b.silver_medal,b.bronze_medal) LEFT JOIN Contests c ON a.contest_id=c.contest_id-2 AND x.user_id IN (c.gold_medal,c.silver_medal,c.bronze_medal) WHERE b.contest_id IS NOT NULL AND c.contest_id IS NOT NULL
SELECT name ,mail FROM ( SELECT DISTINCT name ,mail FROM ( SELECT u.name ,u.mail ,COUNT(t.contest_id) OVER(PARTITION BY t.user_id ORDER BY t.contest_id RANGE BETWEEN 2 PRECEDING AND CURRENT ROW) AS counts FROM Users u INNER JOIN ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests ) t ON u.user_id = t.user_id ) m WHERE counts = 3 UNION SELECT u.name ,u.mail FROM Users u INNER JOIN Contests c ON u.user_id = c.gold_medal GROUP BY u.name, u.mail, c.gold_medal HAVING COUNT(*) >= 3 ) a
SELECT name, mail FROM Contests JOIN Users ON gold_medal = user_id GROUP BY 1, 2 HAVING COUNT(DISTINCT contest_id) >= 3 UNION (SELECT DISTINCT t1.name, t1.mail FROM( SELECT name, mail, contest_id FROM Contests JOIN Users ON gold_medal = user_id OR silver_medal = user_id OR bronze_medal = user_id) AS t1 JOIN ( SELECT name, mail, contest_id FROM Contests JOIN Users ON gold_medal = user_id OR silver_medal = user_id OR bronze_medal = user_id) AS t2 ON t1.name = t2.name AND t1.mail = t2.mail AND t2.contest_id- t1.contest_id BETWEEN 0 AND 2 GROUP BY t1.name, t1.mail, t1.contest_id HAVING COUNT(DISTINCT t2.contest_id) >= 3 )
SELECT name, mail FROM Contests t1 INNER JOIN Users t2 ON gold_medal = user_id GROUP BY name, mail HAVING COUNT(*) > 2 UNION SELECT DISTINCT name, mail FROM (SELECT name, mail, contest_id, LAG(contest_id, 2) OVER (PARTITION BY user_id ORDER BY contest_id) AS prev_2 FROM (SELECT user_id, name, mail, contest_id FROM Users t1 INNER JOIN Contests t2 ON user_id = gold_medal OR user_id = silver_medal OR user_id = bronze_medal ) t ) t WHERE contest_id - prev_2 = 2
SELECT name, mail FROM Users WHERE user_id IN ( SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3 ) OR user_id IN ( SELECT DISTINCT user_id FROM ( SELECT user_id, contest_id, RANK() OVER (PARTITION BY user_id ORDER BY contest_id) AS r FROM ( SELECT gold_medal AS user_id, contest_id FROM Contests UNION SELECT silver_medal AS user_id, contest_id FROM Contests UNION SELECT bronze_medal AS user_id, contest_id FROM Contests ) a ) b GROUP BY user_id, (contest_id - r) HAVING COUNT(contest_id - r) >= 3 )
SELECT name, mail FROM Users WHERE user_id IN ( SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3 ) OR user_id IN( SELECT DISTINCT user_id FROM ( SELECT user_id, contest_id, RANK() OVER (PARTITION BY user_id ORDER BY contest_id) AS r FROM ( SELECT gold_medal AS user_id, contest_id FROM Contests UNION SELECT silver_medal AS user_id, contest_id FROM Contests UNION SELECT bronze_medal AS user_id, contest_id FROM Contests ) a ) b GROUP BY user_id, (contest_id - r) HAVING COUNT(contest_id - r) >= 3 )
SELECT name, mail FROM Users WHERE user_id IN (SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) >= 3 UNION ALL (WITH conseq_wins AS ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests ) SELECT distinct(a.user_id) FROM conseq_wins a JOIN conseq_wins b ON b.contest_id=a.contest_id+1 JOIN conseq_wins c ON c.contest_id=b.contest_id+1 WHERE a.user_id = b.user_id AND b.user_id = c.user_id))
SELECT name, mail FROM Users u LEFT JOIN Contests c ON u.user_id = c.gold_medal GROUP BY u.user_id HAVING COUNT(contest_id) >= 3 UNION SELECT name, mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) AND u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) AND u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) AND c1.contest_id - 1 = c2.contest_id AND c2.contest_id - 1 = c3.contest_id
SELECT t2.name, t2.mail FROM Contests AS t1 INNER JOIN Users AS t2 ON t1.gold_medal = t2.user_id GROUP BY t2.user_id HAVING COUNT(t1.contest_id) >= 3 UNION SELECT t3.name, t3.mail FROM Users AS t3, Contests AS t4, Contests AS t5, Contests AS t6 WHERE t3.user_id IN (t4.gold_medal, t4.silver_medal, t4.bronze_medal) AND t3.user_id IN (t5.gold_medal, t5.silver_medal, t5.bronze_medal) AND t3.user_id IN (t6.gold_medal, t6.silver_medal, t6.bronze_medal) AND t4.contest_id - 1 = t5.contest_id AND t5.contest_id - 1 = t6.contest_id
SELECT u.NAME, u.mail FROM (SELECT user_id, Count(*) OVER( partition BY user_id, grp) cnt, Sum(gold_cnt) OVER( partition BY user_id) cnt_gold FROM (SELECT u.user_id, c.*, u.user_id = c.gold_medal AS gold_cnt, contest_id - Row_number() OVER( partition BY u.user_id ORDER BY c.contest_id) AS grp FROM users u LEFT JOIN contests c ON( u.user_id = c.gold_medal OR u.user_id = c.silver_medal OR u.user_id = c.bronze_medal ) ORDER BY c.contest_id) a) b LEFT JOIN users u using(user_id) GROUP BY user_id HAVING Max(cnt) >= 3 OR Max(cnt_gold) >= 3
SELECT u.NAME, u.mail FROM (SELECT user_id, Count(*) OVER(partition BY user_id, grp) as cnt, Sum(gold_cnt) OVER(partition BY user_id) as cnt_gold FROM (SELECT u.user_id, c.*, u.user_id = c.gold_medal as gold_cnt, contest_id - Row_number() OVER(partition BY u.user_id ORDER BY c.contest_id) as grp FROM users as u LEFT JOIN contests as c ON( u.user_id = c.gold_medal OR u.user_id = c.silver_medal OR u.user_id = c.bronze_medal) ORDER BY c.contest_id) as a) as b LEFT JOIN users as u using(user_id) GROUP BY user_id HAVING Max(cnt) >= 3 OR Max(cnt_gold) >= 3
SELECT u.name, u.mail FROM (SELECT gold_medal as user_id FROM contests GROUP BY gold_medal HAVING COUNT(contest_id)>=3 UNION SELECT DISTINCT user_id FROM (SELECT u.user_id, c.contest_id, LEAD(contest_id,2) OVER(PARTITION BY user_id ORDER BY contest_id) as third_win FROM users u INNER JOIN contests c ON u.user_id=c.gold_medal or u.user_id=c.silver_medal or u.user_id=c.bronze_medal ORDER BY u.user_id, c.contest_id) temp WHERE third_win-contest_id=2)t1 INNER JOIN users u ON u.user_id=t1.user_id
SELECT u.name, u.mail FROM Contests c LEFT JOIN Users u ON c.gold_medal = u.user_id GROUP BY c.gold_medal HAVING COUNT(c.gold_medal)>=3 UNION SELECT u.name, u.mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) AND u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) AND u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) AND c1.contest_id-1 = c2.contest_id and c2.contest_id-1 = c3.contest_id
SELECT u.name, u.mail FROM Contests c LEFT JOIN Users u ON u.user_id = c.gold_medal GROUP BY u.user_id HAVING COUNT(c.contest_id) >= 3 UNION SELECT u.name, u.mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id IN (c1.gold_medal, c1.silver_medal, c1.bronze_medal) AND u.user_id IN (c2.gold_medal, c2.silver_medal, c2.bronze_medal) AND u.user_id IN (c3.gold_medal, c3.silver_medal, c3.bronze_medal) AND c1.contest_id - 1 = c2.contest_id AND c2.contest_id - 1 = c3.contest_id
SELECT u.name, u.mail FROM Users u JOIN Contests c ON c.gold_medal = u.user_id GROUP BY user_id HAVING COUNT(contest_id)>=3 UNION SELECT u.name, u.mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) AND u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) AND u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) AND c1.contest_id -1 = c2.contest_id and c2.contest_id-1 = c3.contest_id
SELECT u.name, u.mail FROM Users u JOIN Contests c ON u.user_id=c.gold_medal GROUP BY u.user_id HAVING COUNT(*) >= 3 UNION SELECT u.name, u.mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id IN (c1.gold_medal, c1.silver_medal, c1.bronze_medal) AND u.user_id IN (c2.gold_medal, c2.silver_medal, c2.bronze_medal) AND u.user_id IN (c3.gold_medal, c3.silver_medal, c3.bronze_medal) AND c1.contest_id+1 = c2.contest_id AND c2.contest_id+1 = c3.contest_id
SELECT u.name, u.mail FROM Users u JOIN Contests c ON u.user_id=c.gold_medal GROUP BY u.user_id HAVING COUNT(*) >= 3 UNION SELECT u.name, u.mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id IN (c1.gold_medal, c1.silver_medal, c1.bronze_medal) AND u.user_id IN (c2.gold_medal, c2.silver_medal, c2.bronze_medal) AND u.user_id IN (c3.gold_medal, c3.silver_medal, c3.bronze_medal) AND c1.contest_id-1 = c2.contest_id AND c2.contest_id-1 = c3.contest_id
SELECT u.name, u.mail FROM Users u JOIN Contests c ON u.user_id=c.gold_medal GROUP BY u.user_id HAVING COUNT(c.contest_id) >= 3 UNION SELECT u.name, u.mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id IN (c1.gold_medal, c1.silver_medal, c1.bronze_medal) AND u.user_id IN (c2.gold_medal, c2.silver_medal, c2.bronze_medal) AND u.user_id IN (c3.gold_medal, c3.silver_medal, c3.bronze_medal) AND c1.contest_id-1 = c2.contest_id AND c2.contest_id-1 = c3.contest_id
SELECT u.name, u.mail FROM Users u LEFT JOIN Contests c ON c.gold_medal = u.user_id GROUP BY user_id HAVING COUNT(c.contest_id)>=3 UNION SELECT u.name, u.mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id in (c1.gold_medal , c1.silver_medal, c1.bronze_medal ) AND u.user_id in (c2.gold_medal , c2.silver_medal, c2.bronze_medal ) AND u.user_id in (c3.gold_medal , c3.silver_medal, c3.bronze_medal ) AND c1.contest_id= c2.contest_id-1 AND c2.contest_id= c3.contest_id-1
SELECT u.name, u.mail FROM Users u LEFT JOIN Contests c ON u.user_id=c.gold_medal GROUP BY u.user_id HAVING COUNT(c.gold_medal)>=3 UNION SELECT u.name, u.mail FROM Users u, Contests c1, Contests c2, Contests c3 WHERE u.user_id in (c1.gold_medal ,c1.silver_medal, c1.bronze_medal) AND u.user_id in (c2.gold_medal ,c2.silver_medal, c2.bronze_medal) AND u.user_id in (c3.gold_medal ,c3.silver_medal, c3.bronze_medal) AND c1.contest_id-1 = c2.contest_id AND c2.contest_id-1 = c3.contest_id
SELECT u.name, u.mail FROM Users u WHERE u.user_id IN ( SELECT DISTINCT user_id FROM ( SELECT user_id, (DENSE_RANK() OVER (ORDER BY contest_id) - DENSE_RANK() OVER (PARTITION BY user_id ORDER BY contest_id) ) AS grp FROM ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests ORDER BY contest_id ASC) sub ) sub2 GROUP BY grp, user_id HAVING COUNT(*) >= 3) OR u.user_id IN ( SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3 )
SELECT u.name,u.mail FROM Users u INNER JOIN Contests c ON c.gold_medal=u.user_id GROUP BY u.mail,u.name HAVING COUNT(c.gold_medal)>=3 UNION SELECT DISTINCT u.name,u.mail FROM Users u INNER JOIN Contests c1 ON u.user_id=c1.gold_medal OR u.user_id=c1.silver_medal OR u.user_id=c1.bronze_medal INNER JOIN Contests c2 ON c2.contest_id=c1.contest_id+1 AND( u.user_id=c2.gold_medal OR u.user_id=c2.silver_medal OR u.user_id=c2.bronze_medal) INNER JOIN Contests c3 ON c3.contest_Id=c2.contest_id+1 AND (u.user_id=c3.gold_medal OR u.user_id=c3.silver_medal OR u.user_id=c3.bronze_medal)
Select name,mail From( Select gold_medal as user_id From Contests Group by gold_medal having count(contest_id)>=3 union Select Distinct Case When gold_medal=lag1gold and lag1gold=lag2Silver Then gold_medal When gold_medal=lag1gold and lag1gold=lag2bronze Then gold_medal When gold_medal=lag1gold and lag1gold=lag2gold Then gold_medal When gold_medal=lag1silver and lag1silver=lag2bronze Then gold_medal When gold_medal=lag1silver and lag1silver=lag2silver Then gold_medal When gold_medal=lag1silver and lag1silver=lag2gold Then gold_medal When gold_medal=lag1bronze and lag1bronze=lag2bronze Then gold_medal When gold_medal=lag1bronze and lag1bronze=lag2silver Then gold_medal When gold_medal=lag1bronze and lag1bronze=lag2gold Then gold_medal End as user_id From ( Select gold_medal, silver_medal,bronze_medal, lag(gold_medal,1) over(order by contest_id ASC) as lag1gold, lag(gold_medal,2) over(order by contest_id ASC) as lag2gold, lag(silver_medal,1) over(order by contest_id ASC) as lag1silver, lag(silver_medal,2) over(order by contest_id ASC) as lag2silver, lag(bronze_medal,1) over(order by contest_id ASC) as lag1bronze, lag(bronze_medal,2) over(order by contest_id ASC) as lag2bronze From Contests )a Union Select Case When silver_medal=lag1gold and lag1gold=lag2Silver Then silver_medal When silver_medal=lag1gold and lag1gold=lag2bronze Then silver_medal When silver_medal=lag1gold and lag1gold=lag2gold Then silver_medal When silver_medal=lag1silver and lag1silver=lag2bronze Then silver_medal When silver_medal=lag1silver and lag1silver=lag2silver Then silver_medal When silver_medal=lag1silver and lag1silver=lag2gold Then silver_medal When silver_medal=lag1bronze and lag1bronze=lag2bronze Then silver_medal When silver_medal=lag1bronze and lag1bronze=lag2silver Then silver_medal When silver_medal=lag1bronze and lag1bronze=lag2gold Then silver_medal End as user_id From ( Select gold_medal, silver_medal,bronze_medal, lag(gold_medal,1) over(order by contest_id ASC) as lag1gold, lag(gold_medal,2) over(order by contest_id ASC) as lag2gold, lag(silver_medal,1) over(order by contest_id ASC) as lag1silver, lag(silver_medal,2) over(order by contest_id ASC) as lag2silver, lag(bronze_medal,1) over(order by contest_id ASC) as lag1bronze, lag(bronze_medal,2) over(order by contest_id ASC) as lag2bronze From Contests )b union Select case When bronze_medal=lag1gold and lag1gold=lag2Silver Then bronze_medal When bronze_medal=lag1gold and lag1gold=lag2bronze Then bronze_medal When bronze_medal=lag1gold and lag1gold=lag2gold Then bronze_medal When bronze_medal=lag1silver and lag1silver=lag2bronze Then bronze_medal When bronze_medal=lag1silver and lag1silver=lag2silver Then bronze_medal When bronze_medal=lag1silver and lag1silver=lag2gold Then bronze_medal When bronze_medal=lag1bronze and lag1bronze=lag2bronze Then bronze_medal When bronze_medal=lag1bronze and lag1bronze=lag2silver Then bronze_medal When bronze_medal=lag1bronze and lag1bronze=lag2gold Then bronze_medal End as user_id From ( Select gold_medal, silver_medal,bronze_medal, lag(gold_medal,1) over(order by contest_id ASC) as lag1gold, lag(gold_medal,2) over(order by contest_id ASC) as lag2gold, lag(silver_medal,1) over(order by contest_id ASC) as lag1silver, lag(silver_medal,2) over(order by contest_id ASC) as lag2silver, lag(bronze_medal,1) over(order by contest_id ASC) as lag1bronze, lag(bronze_medal,2) over(order by contest_id ASC) as lag2bronze From Contests)a)b join Users u on u.user_id=b.user_id Where b.user_id is not null
Select u.name,u.mail from users u, Contests c where u.user_id = c.gold_medal group by u.user_id having count(contest_id) >=3 union Select u.name,u.mail from Users u, Contests c1, Contests c2,Contests c3, Contests c4 where u.user_id in (c1.gold_medal,c1.silver_medal,c1.bronze_medal) and u.user_id in (c2.gold_medal,c2.silver_medal,c2.bronze_medal) and u.user_id in (c3.gold_medal,c3.silver_medal,c3.bronze_medal) and c1.contest_id - 1 = c2.contest_id and c2.contest_id - 1 = c3.contest_id
WITH CET AS (SELECT contest_id, gold_medal as user_id, 'gold' as medal from Contests UNION ALL SELECT contest_id, silver_medal as user_id, 'silver' as medal from Contests UNION ALL SELECT contest_id, bronze_medal as user_id, 'bronze' as medal from Contests), CET2 AS (SELECT distinct c1.user_id from CET c1 inner join CET c2 on c1.user_id=c2.user_id and c1.contest_id+1=c2.contest_id inner join CET c3 on c1.user_id=c3.user_id and c1.contest_id+2=c3.contest_id), CET3 AS (SELECT gold_medal as user_id from Contests group by gold_medal having count(distinct contest_id)>=3) SELECT name, mail from Users where user_id in (select * from CET2) or user_id in (select * from CET3)
WITH CTE AS ( SELECT a.contest_id, u.name, u.mail FROM ( SELECT contest_id , gold_medal as user_id FROM Contests UNION ALL SELECT contest_id , silver_medal as user_id FROM Contests UNION ALL SELECT contest_id , bronze_medal as user_id FROM Contests ) as a JOIN Users as u ON u.user_id = a.user_id) SELECT name, mail FROM ( SELECT name, mail , contest_id - ROW_NUMBER() OVER(PARTITION BY name,mail ORDER BY contest_id) as grp FROM cte ) as c GROUP BY name, mail,grp HAVING COUNT(1)>=3 UNION SELECT u.name, u.mail FROM Contests as c JOIN Users as u ON u.user_id = c.gold_medal GROUP BY u.name, u.mail HAVING count(1)>=3
WITH CTE AS ( SELECT contest_id, gold_medal as id, "gold" as medal_type from contests UNION ALL SELECT contest_id, silver_medal as id, "silver" as medal_type from contests UNION ALL SELECT contest_id, bronze_medal as id, "bronze" as medal_type from contests ) SELECT name, mail from (SELECT id FROM CTE where medal_type="gold" GROUP BY id, medal_type having count(contest_id)>2 union select distinct c1.id from CTE c1 JOIN CTE c2 ON c1.id=c2.id AND c1.contest_id+1=c2.contest_id JOIN CTE c3 ON c2.contest_id+1=c3.contest_id AND c2.id=c3.id) x JOIN Users s ON s.user_id=x.id
WITH CTE AS ( SELECT contest_id, gold_medal as win_id FROM Contests UNION ALL SELECT contest_id, silver_medal as win_id FROM Contests UNION ALL SELECT contest_id, bronze_medal as win_id FROM Contests ), CTE1 AS ( SELECT distinct c1.win_id FROM CTE AS c1 JOIN CTE AS c2 ON c1.win_id = c2.win_id AND c1.contest_id +1 = c2.contest_id JOIN CTE AS c3 ON c2.win_id = c3.win_id AND c2.contest_id +1 = c3.contest_id UNION SELECT gold_medal AS win_id FROM Contests c GROUP BY gold_medal HAVING COUNT(gold_medal) >= 3) SELECT name, mail FROM CTE1 AS c JOIN Users AS u on c.win_id = u.user_id
WITH CTE AS ( SELECT contestent_id, contest_id - RANK() OVER (PARTITION BY contestent_id ORDER BY contest_id ) as rnk FROM (SELECT DISTINCT contestent_id,contest_id FROM( SELECT contest_id, gold_medal as contestent_id FROM Contests UNION ALL SELECT contest_id, silver_medal as contestent_id FROM Contests UNION ALL SELECT contest_id, bronze_medal as contestent_id FROM Contests ) a ORDER BY contestent_id, contest_id) b ) SELECT DISTINCT name, mail FROM CTE, Users WHERE user_id = contestent_id GROUP BY contestent_id, rnk HAVING COUNT(*) >= 3 UNION SELECT name, mail FROM Contests, Users WHERE gold_medal = user_id GROUP BY gold_medal HAVING COUNT(*) >= 3
WITH CTE AS ( Select contest_id, 'Gold' as Medal_Type, Gold_Medal as Winner_Id from contests Union Select contest_id, 'Silver' as Medal_Type, silver_Medal as Winner_Id from contests Union Select contest_id, 'Bronze' as Medal_Type, bronze_Medal as Winner_Id from contests ), CTE_TMP as (Select Winner_id, Contest_id, Contest_id - Row_number() over (Partition by Winner_id order by winner_id,contest_id) as Rn from CTE order by 1,2), CTE_Final as (Select winner_id, rn, count(distinct contest_id) as wins from cte_tmp group by 1,2 Union all Select winner_id, Medal_type, count(distinct contest_id) as wins from cte where Medal_type = 'Gold' group by 1,2) Select distinct r.name, r.mail from cte_final cf inner join users r on cf.winner_id = r.user_id where cf.wins >= 3
WITH CTE AS ((SELECT contest_id, gold_medal medal FROM Contests) UNION ALL (SELECT contest_id, silver_medal medal FROM Contests) UNION ALL (SELECT contest_id, bronze_medal medal FROM Contests)), t1 AS ((SELECT DISTINCT c1.medal FROM CTE c1 LEFT JOIN CTE c2 ON ((c2.contest_id - c1.contest_id) between 1 and 2) AND (c1.medal = c2.medal) GROUP BY c1.contest_id, c1.medal HAVING count(c2.contest_id) >=2) UNION (SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING count(gold_medal) >= 3)) SELECT name, mail FROM t1 LEFT JOIN Users u ON t1.medal = u.user_id
WITH CTE AS (select contest_id, gold_medal as medal FROM Contests UNION ALL select contest_id, silver_medal as medal FROM Contests UNION ALL select contest_id, bronze_medal as medal FROM Contests) SELECT name, mail FROM Users WHERE user_id IN ( SELECT DISTINCT a.medal FROM CTE a, CTE b, CTE c WHERE a.medal = b.medal AND b.medal = c.medal AND a.contest_id +1 = b.contest_id AND b.contest_id +1 = c.contest_id) UNION SELECT name, mail FROM Users WHERE user_id IN ( SELECT gold_medal FROM Contests GROUP BY 1 HAVING COUNT(gold_medal) >=3)
WITH CTE AS( SELECT contest_id, gold_medal AS id FROM Contests UNION ALL SELECT contest_id, silver_medal AS id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS id FROM Contests ) SELECT name, mail FROM Users u JOIN Contests c ON u.user_id = c.gold_medal GROUP BY user_id HAVING COUNT(contest_id) >= 3 UNION SELECT name, mail FROM Users WHERE user_id IN (SELECT c1.id FROM CTE c1, CTE c2, CTE c3 WHERE c1.id = c2.id AND c2.id = c3.id AND c1.contest_id = c2.contest_id - 1 AND c3.contest_id = c2.contest_id + 1)
WITH CTE1 AS ( SELECT contest_id, gold_medal AS medal FROM Contests UNION ALL SELECT contest_id, silver_medal FROM Contests UNION ALL SELECT contest_id, bronze_medal FROM Contests), CTE2 AS ( SELECT DISTINCT a.medal FROM CTE1 AS a, CTE1 AS b, CTE1 AS c WHERE a.contest_id = b.contest_id+1 AND a.contest_id = c.contest_id+2 AND a.medal = b.medal AND a.medal = c.medal), CTE3 AS ( SELECT gold_medal AS medal, COUNT(*) AS ct FROM Contests GROUP BY gold_medal HAVING ct>=3), CTE4 AS ( SELECT DISTINCT medal FROM CTE2 UNION SELECT DISTINCT medal FROM CTE3) SELECT name, mail FROM Users JOIN CTE4 ON Users.user_id = CTE4.medal;
WITH CTE1 AS ( SELECT gold_medal as user_id FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id) >= 3 ), CTE2 AS ( SELECT contest_id, gold_medal as user_id FROM Contests UNION ALL SELECT contest_id, silver_medal as user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal as user_id FROM Contests ), CTE3 AS ( SELECT DISTINCT user_id FROM ( SELECT user_id, delta, COUNT(*) AS cnt FROM ( SELECT contest_id, user_id, contest_id - ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id) as delta FROM CTE2) as sub1 GROUP BY user_id, delta ) as sub2 WHERE cnt >= 3 ) SELECT name, mail FROM Users WHERE user_id IN (SELECT user_id FROM CTE1) OR user_id IN (SELECT user_id FROM CTE3)
WITH CTE1 AS (SELECT contest_id, gold_medal AS userid FROM Contests UNION ALL SELECT contest_id, silver_medal AS userid FROM Contests UNION ALL SELECT contest_id, bronze_medal AS userid FROM Contests) , CTE2 AS (SELECT DISTINCT C1.userid FROM CTE1 C1, CTE1 C2, CTE1 C3 WHERE C1.contest_id = C2.contest_id + 1 AND C2.contest_id = C3.contest_id + 1 AND C1.userid = C2.userid AND C2.userid = C3.userid) SELECT DISTINCT name, mail FROM users WHERE user_id IN (SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id)>2) UNION SELECT DISTINCT name, mail FROM users WHERE user_id IN (SELECT * FROM CTE2)
WITH CTE1 AS (SELECT contest_id, gold_medal AS userid FROM Contests UNION SELECT contest_id, silver_medal AS userid FROM Contests UNION SELECT contest_id, bronze_medal AS userid FROM Contests) , CTE2 AS (SELECT DISTINCT C1.userid FROM CTE1 C1, CTE1 C2, CTE1 C3 WHERE C1.contest_id = C2.contest_id + 1 AND C2.contest_id = C3.contest_id + 1 AND C1.userid = C2.userid AND C2.userid = C3.userid) SELECT name, mail FROM users WHERE user_id IN (SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id)>2) UNION SELECT DISTINCT name, mail FROM users WHERE user_id IN (SELECT * FROM CTE2)
WITH Contest_Medal as ( select contest_id, gold_medal as medal from Contests union select contest_id, silver_medal as medal from Contests union select contest_id, bronze_medal as medal from Contests ) select r.mail, r.name from( select distinct cm1.medal from Contest_Medal as cm1 inner join Contest_Medal as cm2 on cm1.contest_id+1 = cm2.contest_id and cm1.medal = cm2.medal inner join Contest_Medal as cm3 on cm2.contest_id+1 = cm3.contest_id and cm2.medal = cm3.medal union select a.medal from( select gold_medal as medal, count(*) as cnt from Contests group by gold_medal ) as a where a.cnt >= 3 )as l left join Users as r on l.medal = r.user_id
WITH G AS ( SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id) >= 3 ), C AS ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION SELECT contest_id, silver_medal FROM Contests UNION SELECT contest_id, bronze_medal FROM Contests ), R AS ( SELECT DISTINCT C1.user_id FROM C AS C1 INNER JOIN C AS C2 ON C1.user_id = C2.user_id AND C2.contest_id = C1.contest_id + 1 INNER JOIN C AS C3 ON C2.user_id = C3.user_id AND C3.contest_id = C2.contest_id + 1 UNION SELECT * FROM G ) SELECT U.name, U.mail FROM R INNER JOIN Users U USING(user_id)
WITH GOLD AS (SELECT name,mail FROM Contests C1 JOIN Users U1 ON C1.gold_medal = U1.user_id GROUP BY 1,2 HAVING COUNT(gold_medal) >= 3), Contests_long as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests), CONSERCUTIVE AS (SELECT user_id FROM Contests_long WHERE (contest_id+1, user_id) IN (SELECT contest_id, user_id FROM Contests_long) AND (contest_id+2, user_id) IN (SELECT contest_id, user_id FROM Contests_long)) SELECT name,mail FROM CONSERCUTIVE CON1 JOIN Users U2 ON CON1.user_id = U2.user_id UNION SELECT * FROM GOLD
WITH GOLD_CANDIDATE AS ( SELECT GOLD_MEDAL FROM CONTESTS GROUP BY GOLD_MEDAL HAVING COUNT(*) >= 3 ), WINNER_RECORD AS ( (SELECT contest_id, GOLD_MEDAL AS WINNER FROM CONTESTS) UNION (SELECT contest_id, SILVER_MEDAL AS WINNER FROM CONTESTS) UNION (SELECT contest_id, BRONZE_MEDAL AS WINNER FROM CONTESTS) ), SERIES_CANDIDATE AS ( SELECT W1.WINNER FROM WINNER_RECORD W1 JOIN WINNER_RECORD W2 ON W1.WINNER=W2.WINNER AND W1.contest_id=W2.contest_id-1 JOIN WINNER_RECORD W3 ON W1.WINNER=W3.WINNER AND W1.contest_id=W3.contest_id-2 ) SELECT NAME, MAIL FROM USERS WHERE USER_ID IN (SELECT * FROM SERIES_CANDIDATE) OR USER_ID IN (SELECT * FROM GOLD_CANDIDATE)
WITH GoldWinner AS (SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id) >= 3), AllWinner AS (SELECT gold_medal AS user_id ,contest_id FROM Contests UNION ALL SELECT silver_medal AS user_id ,contest_id FROM Contests UNION ALL SELECT bronze_medal AS user_id ,contest_id FROM Contests), ConsecutiveWinnersTemp AS (SELECT user_id ,contest_id AS CurrentWin ,LEAD(contest_id,2) OVER(PARTITION BY user_id ORDER BY contest_id ASC) AS 3rdWin FROM AllWinner), ConsecutiveWinnersFinal AS (SELECT DISTINCT user_id FROM ConsecutiveWinnersTemp WHERE 3rdWin - CurrentWin = 2) SELECT name ,mail FROM Users WHERE user_id IN (SELECT user_id FROM GoldWinner) OR user_id IN (SELECT user_id FROM ConsecutiveWinnersFinal)
WITH Medalists AS ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION SELECT contest_id, silver_medal AS user_id FROM Contests UNION SELECT contest_id, bronze_medal AS user_id FROM Contests ) SELECT U.name, U.mail FROM Medalists M1, Medalists M2, Medalists M3, Users U WHERE M1.contest_id = M2.contest_id+1 AND M1.user_id = M2.user_id AND M1.contest_id = M3.contest_id+2 AND M1.user_id = M3.user_id AND M1.user_id = U.user_id UNION SELECT name, mail FROM Users A JOIN Contests B ON A.user_id = B.gold_medal GROUP BY user_id HAVING count(contest_id) >= 3
WITH Medalists AS ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION SELECT contest_id, silver_medal AS user_id FROM Contests UNION SELECT contest_id, bronze_medal AS user_id FROM Contests ) SELECT U.name, U.mail FROM Medalists M1, Medalists M2, Medalists M3, Users U WHERE M1.contest_id = M2.contest_id+1 AND M1.user_id = M2.user_id AND M1.contest_id = M3.contest_id+2 AND M1.user_id = M3.user_id AND M2.contest_id = M3.contest_id+1 AND M2.user_id = M3.user_id AND M1.user_id = U.user_id UNION SELECT name, mail FROM Users A JOIN Contests B ON A.user_id = B.gold_medal GROUP BY user_id HAVING count(contest_id) >= 3
WITH S0 AS (SELECT contest_id, gold_medal AS gold_medal0, silver_medal AS silver_medal0, bronze_medal AS bronze_medal0 FROM Contests), S1 AS (SELECT contest_id, gold_medal AS gold_medal1, silver_medal AS silver_medal1, bronze_medal AS bronze_medal1 FROM Contests), S2 AS (SELECT contest_id, gold_medal AS gold_medal2, silver_medal AS silver_medal2, bronze_medal AS bronze_medal2 FROM Contests), S3 AS (SELECT DISTINCT(gold_medal0) AS user_id FROM S0 INNER JOIN S1 ON S0.contest_id + 1 = S1.contest_id INNER JOIN S2 ON S0.contest_id + 2 = S2.contest_id WHERE (gold_medal0 = gold_medal1 AND gold_medal1 = gold_medal2) OR (gold_medal0 = gold_medal1 AND gold_medal1 = silver_medal2) OR (gold_medal0 = gold_medal1 AND gold_medal1 = bronze_medal2) OR (gold_medal0 = silver_medal1 AND silver_medal1 = gold_medal2) OR (gold_medal0 = silver_medal1 AND silver_medal1 = silver_medal2) OR (gold_medal0 = silver_medal1 AND silver_medal1 = bronze_medal2) OR (gold_medal0 = bronze_medal1 AND bronze_medal1 = gold_medal2) OR (gold_medal0 = bronze_medal1 AND bronze_medal1 = silver_medal2) OR (gold_medal0 = bronze_medal1 AND bronze_medal1 = bronze_medal2)), S4 AS (SELECT DISTINCT(silver_medal0) AS user_id FROM S0 INNER JOIN S1 ON S0.contest_id + 1 = S1.contest_id INNER JOIN S2 ON S0.contest_id + 2 = S2.contest_id WHERE (silver_medal0 = gold_medal1 AND gold_medal1 = gold_medal2) OR (silver_medal0 = gold_medal1 AND gold_medal1 = silver_medal2) OR (silver_medal0 = gold_medal1 AND gold_medal1 = bronze_medal2) OR (silver_medal0 = silver_medal1 AND silver_medal1 = gold_medal2) OR (silver_medal0 = silver_medal1 AND silver_medal1 = silver_medal2) OR (silver_medal0 = silver_medal1 AND silver_medal1 = bronze_medal2) OR (silver_medal0 = bronze_medal1 AND bronze_medal1 = gold_medal2) OR (silver_medal0 = bronze_medal1 AND bronze_medal1 = silver_medal2) OR (silver_medal0 = bronze_medal1 AND bronze_medal1 = bronze_medal2)), S5 AS (SELECT DISTINCT(bronze_medal0) AS user_id FROM S0 INNER JOIN S1 ON S0.contest_id + 1 = S1.contest_id INNER JOIN S2 ON S0.contest_id + 2 = S2.contest_id WHERE (bronze_medal0 = gold_medal1 AND gold_medal1 = gold_medal2) OR (bronze_medal0 = gold_medal1 AND gold_medal1 = silver_medal2) OR (bronze_medal0 = gold_medal1 AND gold_medal1 = bronze_medal2) OR (bronze_medal0 = silver_medal1 AND silver_medal1 = gold_medal2) OR (bronze_medal0 = silver_medal1 AND silver_medal1 = silver_medal2) OR (bronze_medal0 = silver_medal1 AND silver_medal1 = bronze_medal2) OR (bronze_medal0 = bronze_medal1 AND bronze_medal1 = gold_medal2) OR (bronze_medal0 = bronze_medal1 AND bronze_medal1 = silver_medal2) OR (bronze_medal0 = bronze_medal1 AND bronze_medal1 = bronze_medal2)), S6 AS (SELECT DISTINCT(gold_medal) AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) >= 3), S7 AS (SELECT user_id FROM S3 UNION SELECT user_id FROM S4 UNION SELECT user_id FROM S5 UNION SELECT user_id FROM S6) SELECT name, mail FROM S7 INNER JOIN Users ON S7.user_id = Users.user_id
WITH T AS ( SELECT *, ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id) AS row_num FROM ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests ) a ), T1 AS ( SELECT DISTINCT user_id FROM T GROUP BY user_id, contest_id - row_num HAVING COUNT(contest_id) >= 3 ), T2 AS ( SELECT DISTINCT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id) >= 3 ), U AS ( SELECT * FROM T1 UNION SELECT * FROM T2 ) SELECT a.name, a.mail FROM Users a INNER JOIN U b ON a.user_id = b.user_id
WITH T AS (SELECT U.user_id, C.contest_id FROM Users U JOIN Contests C WHERE U.user_id = C.gold_medal or U.user_id = C.silver_medal OR U.user_id = C.bronze_medal ORDER BY U.user_id, contest_id) SELECT DISTINCT name, mail FROM T T1 JOIN T T2 ON T1.user_id = T2.user_id AND T1.contest_id + 1= T2.contest_id JOIN T T3 ON T1.user_id = T3.user_id AND T1.contest_id + 2= T3.contest_id JOIN Users U ON T1.user_id = U.user_id UNION SELECT name, mail FROM Users U JOIN Contests C ON C.gold_medal = U.user_id GROUP BY gold_medal HAVING COUNT(DISTINCT contest_id) >= 3
WITH T AS( SELECT contest_id, gold_medal user_id FROM Contests UNION ALL SELECT contest_id, silver_medal FROM Contests UNION ALL SELECT contest_id, bronze_medal FROM Contests), T2 as ( select distinct a.user_id as user_id from T a, T b, T c where a.contest_id = b.contest_id -1 and a.contest_id = c.contest_id-2 and a.user_id = b.user_id and a.user_id = c.user_id), T3 AS( SELECT DISTINCT gold_medal user_id FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id) >=3 ), T4 AS( SELECT user_id FROM T2 UNION SELECT user_id FROM T3) SELECT Users.name, Users.mail FROM T4 LEFT JOIN Users ON T4.user_id = Users.user_id
WITH T0 AS (SELECT gold_medal AS user_id, contest_id FROM Contests UNION ALL SELECT silver_medal AS user_id, contest_id FROM Contests UNION ALL SELECT bronze_medal AS user_id, contest_id FROM Contests), T1 AS (SELECT user_id, (DENSE_RANK() OVER (ORDER BY contest_id ASC)) - (DENSE_RANK() OVER (PARTITION BY user_id ORDER BY contest_id ASC)) AS C FROM T0), T2 AS (SELECT user_id FROM T1 GROUP BY user_id, C HAVING COUNT(*) >= 3), T3 AS (SELECT gold_medal AS user_id FROM Contests GROUP BY 1 HAVING COUNT(*) >= 3 UNION ALL SELECT * FROM T2) SELECT DISTINCT A.name, A.mail FROM Users A INNER JOIN T3 B ON A.user_id = B.user_id
WITH T1 AS ( SELECT contest_id, gold_medal AS user_id, "gold_medal" AS result FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id, "silver_medal" AS result FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id, "bronze_medal" AS result FROM Contests), T2 AS ( SELECT DISTINCT s1.user_id FROM T1 s1, T1 s2, T1 s3 WHERE s1.user_id = s2.user_id AND s1.contest_id + 1 = s2.contest_id AND s2.user_id = s3.user_id AND s2.contest_id + 1 = s3.contest_id) SELECT name, mail FROM Users WHERE user_id IN ( SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(*) > 2) OR user_id IN ( SELECT user_id FROM T2)
WITH T1 AS (SELECT contest_id, gold_medal id FROM contests UNION ALL SELECT contest_id, silver_medal id FROM contests UNION ALL SELECT contest_id, bronze_medal id FROM contests), T2 AS (SELECT *, RANK() OVER (PARTITION BY id ORDER BY contest_id) rnk FROM T1 ORDER BY id, contest_id), T3 AS( SELECT id FROM T2 GROUP BY (contest_id - rnk),id HAVING COUNT(*) >=3 UNION SELECT gold_medal id FROM contests GROUP BY 1 HAVING COUNT(contest_id) >= 3) SELECT name, mail FROM T3 JOIN users ON T3.id = users.user_id
WITH T1 AS (SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(*)>=3), T2 AS (SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal FROM Contests UNION ALL SELECT contest_id, bronze_medal FROM Contests ORDER BY contest_id), T3 AS (SELECT contest_id, user_id, (DENSE_RANK () over (ORDER BY contest_id) - DENSE_RANK() over (PARTITION BY user_id ORDER BY contest_id)) AS series_id From T2), T4 AS (SELECT contest_id, user_id FROM T3 WHERE (user_id, series_id) IN (SELECT user_id, series_id FROM T3 GROUP BY user_id, series_id HAVING COUNT(1)>=3)) SELECT name, mail FROM users WHERE user_id in (select gold_medal FROM T1) OR user_id in (select user_id FROM T4)
WITH TEMP AS ( SELECT CONTEST_ID, GOLD_MEDAL AS ID, 'GOLD' AS MEDAL FROM CONTESTS UNION ALL SELECT CONTEST_ID, SILVER_MEDAL AS ID, 'SILVER' AS MEDAL FROM CONTESTS UNION ALL SELECT CONTEST_ID, BRONZE_MEDAL AS ID, 'BRONZE' AS MEDAL FROM CONTESTS ), COND1 AS( SELECT A.ID FROM TEMP A JOIN TEMP B ON A.ID = B.ID AND A.CONTEST_ID+1 = B.CONTEST_ID JOIN TEMP C ON A.ID = C.ID AND A.CONTEST_ID+2 = C.CONTEST_ID ), COND2 AS ( SELECT GOLD_MEDAL AS ID FROM CONTESTS GROUP BY GOLD_MEDAL HAVING COUNT(*)>=3 ), COND AS(SELECT DISTINCT(ID) FROM COND1 UNION SELECT DISTINCT(ID) FROM COND2) SELECT U.NAME, U.MAIL AS MAIL FROM COND JOIN USERS U ON U.USER_ID = COND.ID
WITH TEMP AS (SELECT user_id, contest_id FROM Contests C JOIN USERS U ON C.gold_medal = U.user_id OR C.silver_medal = U.user_id OR C.bronze_medal = U.user_id), CON1 AS (SELECT T1.user_id FROM TEMP T1, TEMP T2, TEMP T3 WHERE (T1.user_id = T2.user_id AND T2.user_id = T3.user_id AND T1.contest_id + 1 = T2.contest_id AND T2.contest_id + 1 = T3.contest_id) GROUP BY 1 ) SELECT name, mail FROM USERS WHERE user_id IN (SELECT user_id FROM CON1) OR user_id IN (SELECT gold_medal FROM Contests GROUP BY 1 HAVING COUNT(*)>=3)
WITH TMP AS ( SELECT *, row_number() over (partition by user_id order by contest_id asc) as rn FROM ( SELECT contest_id, gold_medal as user_id FROM contests UNION SELECT contest_id, silver_medal as user_id FROM contests UNION SELECT contest_id, bronze_medal as user_id FROM contests ) x ORDER BY user_id, contest_id asc ), TMP2 AS ( select contest_id - rn as tag, user_id ,count(*) from tmp group by 1,2 HAVING count(*) >= 3 ), TMP3 AS ( SELECT DISTINCT user_id FROM TMP2 UNION SELECT gold_medal as user_id FROM contests GROUP BY 1 HAVING COUNT(*) >= 3 ) SELECT name, mail FROM users a JOIN TMP3 b ON a.user_id = b.user_id
WITH a AS ( SELECT contest_id,gold_medal AS id FROM Contests UNION ALL SELECT contest_id,silver_medal AS id FROM Contests UNION ALL SELECT contest_id,bronze_medal AS id FROM Contests ), b AS ( SELECT DISTINCT id FROM ( SELECT id, LEAD(contest_id,2) OVER (PARTITION BY id ORDER BY contest_id) - contest_id AS diff FROM a )t1 WHERE diff = 2 ), c AS ( SELECT gold_medal AS id FROM Contests GROUP BY 1 HAVING COUNT(*) >= 3 ) SELECT name, mail FROM Users u JOIN (SELECT id FROM b UNION SELECT id FROM c)t2 ON u.user_id = t2.id
WITH a AS (SELECT contest_id, gold_medal AS medal,'gold' AS type FROM Contests UNION ALL SELECT contest_id, silver_medal AS medal,'silver' AS type FROM Contests UNION ALL SELECT contest_id, bronze_medal AS medal,'bronze' AS type FROM Contests) SELECT name, mail FROM (SELECT DISTINCT a1.medal AS user_id FROM a a1,a a2, a a3 WHERE a1.contest_id=a2.contest_id-1 AND a2.contest_id=a3.contest_id-1 AND a1.medal=a2.medal AND a2.medal=a3.medal UNION SELECT DISTINCT gold_medal AS user_id FROM Contests GROUP BY 1 HAVING COUNT(gold_medal)>=3) b, Users u WHERE u.user_id = b.user_id
WITH all_contests AS( SELECT contest_id, gold_medal AS user_id, "gold" AS metal FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id , "silver" AS metal FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id , "bronze" AS metal FROM Contests ), t AS ( SELECT *, contest_id - LAG(contest_id) OVER(PARTITION BY user_id ORDER BY contest_id) as diff1, contest_id - LAG(contest_id, 2) OVER(PARTITION BY user_id ORDER BY contest_id) as diff2, COUNT(CASE WHEN metal = "gold" THEN 1 END) OVER (PARTITION BY user_id) as gold_cnt FROM all_contests ) SELECT name, mail FROM Users WHERE user_id IN (SELECT user_id FROM t WHERE (diff1=1 and diff2=2) OR gold_cnt>=3 )
WITH all_medals AS ( SELECT contest_id, gold_medal AS medal FROM Contests UNION SELECT contest_id, silver_medal AS medal FROM Contests UNION SELECT contest_id, bronze_medal AS medal FROM Contests ), consecutive_medas AS ( SELECT DISTINCT u.name, u.mail FROM all_medals a1 INNER JOIN all_medals a2 ON (a2.contest_id = a1.contest_id + 1 AND a1.medal = a2.medal) INNER JOIN all_medals a3 ON (a3.contest_id = a1.contest_id + 2 AND a3.medal = a1.medal) INNER JOIN Users u ON (u.user_id = a1.medal) ), gold_medalists AS ( SELECT u.name, u.mail FROM Contests c INNER JOIN Users u ON (c.gold_medal = u.user_id) GROUP BY c.gold_medal HAVING COUNT(*) >= 3 ) SELECT * FROM gold_medalists UNION SELECT * FROM consecutive_medas
WITH base_table AS ( SELECT gold_medal AS user_id, contest_id FROM Contests GROUP BY 1,2 UNION ALL SELECT silver_medal AS user_id, contest_id FROM Contests GROUP BY 1,2 UNION ALL SELECT bronze_medal AS user_id, contest_id FROM Contests GROUP BY 1,2 ), contest_number AS ( SELECT user_id, contest_id, ROW_NUMBER() OVER( PARTITION BY user_id ORDER BY contest_id) AS rn, contest_id - ROW_NUMBER() OVER( PARTITION BY user_id ORDER BY contest_id) AS diff FROM base_table GROUP BY 1,2), case_two AS ( SELECT user_id, diff, COUNT(DISTINCT contest_id) AS cnt FROM contest_number GROUP BY 1,2 HAVING COUNT(DISTINCT contest_id) >= 3 ), case_one AS ( SELECT gold_medal FROM Contests GROUP BY 1 HAVING COUNT(DISTINCT contest_id) >= 3 ) SELECT name, mail FROM Users WHERE user_id IN (SELECT user_id FROM case_two) OR user_id IN (SELECT gold_medal FROM case_one) GROUP BY 1, 2
WITH c1 AS (SELECT gold_medal as uid, contest_id AS cid FROM Contests UNION ALL SELECT silver_medal as uid, contest_id AS cid FROM Contests UNION ALL SELECT bronze_medal as uid, contest_id AS cid FROM Contests) ,c2 AS (SELECT gold_medal AS uid FROM Contests GROUP BY gold_medal HAVING COUNT(DISTINCT contest_id) >=3) ,c3 AS (SELECT uid, cid , ROW_NUMBER() OVER(PARTITION BY uid ORDER BY cid) AS uid_rn FROM c1) ,c4 AS (SELECT uid, cid FROM c3 GROUP BY uid, cid-uid_rn HAVING COUNT(uid) >= 3) ,c5 AS (SELECT DISTINCT uid FROM c4 UNION SELECT uid FROM c2) SELECT name,mail FROM Users u JOIN c5 ON u.user_id = c5.uid
WITH c1 AS (SELECT gold_medal as user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3), melted AS (SELECT contest_id, gold_medal as user_id FROM Contests UNION SELECT contest_id, silver_medal as user_id FROM Contests UNION SELECT contest_id, bronze_medal as user_id FROM Contests ), c2 AS ( SELECT u1.user_id FROM melted u1, melted u2, melted u3 WHERE u1. contest_id = u2.contest_id - 1 AND u2.contest_id = u3.contest_id - 1 AND u1.user_id = u2.user_id AND u2.user_id = u3.user_id ), both_conditions AS ( SELECT user_id FROM c1 UNION SELECT user_id FROM c2 ) SELECT u.name, u.mail FROM both_conditions b JOIN Users u ON b.user_id = u.user_id
WITH contest_long AS ( SELECT contest_id, gold_medal AS user_id, 'gold' AS medal FROM Contests UNION SELECT contest_id, silver_medal AS user_id, 'silver' AS medal FROM Contests UNION SELECT contest_id, bronze_medal AS user_id, 'bronze' AS medal FROM Contests ), users_3_consec AS ( SELECT DISTINCT(MCF1.user_id) FROM contest_long AS MCF1 JOIN contest_long AS MCF2 ON MCF1.user_id = MCF2.user_id AND MCF1.contest_id = MCF2.contest_id + 1 JOIN contest_long AS MCF3 ON MCF1.user_id = MCF3.user_id AND MCF1.contest_id = MCF3.contest_id + 2 ), gold_3 AS ( SELECT user_id FROM contest_long WHERE medal = 'gold' GROUP BY user_id HAVING COUNT(DISTINCT(contest_id)) >= 3 ), all_user AS ( SELECT user_id FROM gold_3 UNION SELECT user_id FROM users_3_consec ) SELECT name, mail FROM Users WHERE user_id IN (SELECT * FROM all_user)
WITH conts AS ( SELECT c1.gold_medal, c1.silver_medal, c1.bronze_medal, c2.gold_medal AS c2_gold_medal, c2.silver_medal AS c2_silver_medal, c2.bronze_medal AS c2_bronze_medal, c3.gold_medal AS c3_gold_medal, c3.silver_medal AS c3_silver_medal, c3.bronze_medal AS c3_bronze_medal, c3.contest_id AS 2_conts_ago FROM Contests c1 LEFT JOIN Contests c2 ON c2.contest_id = c1.contest_id-1 LEFT JOIN Contests c3 ON c3.contest_id = c1.contest_id-2 ), cte AS ( SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id) >= 3 UNION SELECT gold_medal AS user_id FROM conts WHERE 2_conts_ago IS NOT Null AND gold_medal IN (c2_gold_medal, c2_silver_medal, c2_bronze_medal) AND gold_medal IN (c3_gold_medal, c3_silver_medal, c3_bronze_medal) UNION SELECT silver_medal AS user_id FROM conts WHERE 2_conts_ago IS NOT Null AND silver_medal IN (c2_gold_medal, c2_silver_medal, c2_bronze_medal) AND silver_medal IN (c3_gold_medal, c3_silver_medal, c3_bronze_medal) UNION SELECT bronze_medal AS user_id FROM conts WHERE 2_conts_ago IS NOT Null AND bronze_medal IN (c2_gold_medal, c2_silver_medal, c2_bronze_medal) AND bronze_medal IN (c3_gold_medal, c3_silver_medal, c3_bronze_medal) ) SELECT u.name, u.mail FROM cte c LEFT JOIN Users u ON c.user_id = u.user_id
WITH cte AS ( SELECT name, mail, contest_id FROM Contests JOIN Users ON gold_medal = user_id OR silver_medal = user_id OR bronze_medal = user_id ) SELECT name, mail FROM Contests JOIN Users ON gold_medal = user_id GROUP BY 1, 2 HAVING COUNT(DISTINCT contest_id) >= 3 UNION (SELECT DISTINCT t1.name, t1.mail FROM cte AS t1 JOIN cte AS t2 ON t1.name = t2.name AND t1.mail = t2.mail AND t2.contest_id- t1.contest_id BETWEEN 0 AND 2 GROUP BY t1.name, t1.mail, t1.contest_id HAVING COUNT(DISTINCT t2.contest_id) >= 3 )
WITH cte AS ( SELECT name, mail, contest_id FROM Contests JOIN Users ON gold_medal = user_id OR silver_medal = user_id OR bronze_medal = user_id ) SELECT name, mail FROM Contests JOIN Users ON gold_medal = user_id GROUP BY 1, 2 HAVING COUNT(DISTINCT contest_id) >= 3 UNION (SELECT DISTINCT t1.name, t1.mail FROM cte AS t1 JOIN cte AS t2 ON t1.name = t2.name AND t1.mail = t2.mail AND t2.contest_id- t1.contest_id BETWEEN 0 AND 2 GROUP BY t1.name, t1.mail, t1.contest_id HAVING COUNT(DISTINCT t2.contest_id) >= 3)
WITH cte AS ( SELECT user_id, contest_id - ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id) AS consecutive FROM (SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests) t ) SELECT us.name, us.mail FROM (SELECT user_id FROM cte GROUP BY user_id, consecutive HAVING COUNT(*) >= 3 UNION SELECT gold_medal AS user_id FROM Contests GROUP BY 1 HAVING COUNT(*) >= 3) u JOIN Users us ON u.user_id = us.user_id
WITH cte AS ( SELECT user_id, name, mail, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, lag(contest_id, 2) over (partition by user_id order by contest_id) as lag_contest FROM Users LEFT JOIN Contests ON user_id = gold_medal OR user_id = silver_medal OR user_id = bronze_medal ) SELECT name, mail FROM cte GROUP BY user_id HAVING SUM(gold) >= 3 OR SUM(contest_id - lag_contest = 2) >= 1
WITH cte AS (SELECT DISTINCT * FROM Contests c LEFT JOIN Users u ON c.silver_medal = u.user_id OR c.bronze_medal = u.user_id OR c.gold_medal = u.user_id ), cte_2 AS (SELECT DISTINCT * FROM Users u JOIN Contests c ON u.user_id = c.gold_medal ) SELECT c1.name,c1.mail FROM cte c1 JOIN cte c2 ON (c1.contest_id = c2.contest_id + 1 AND c1.user_id = c2.user_id) OR (c1.contest_id = c2.contest_id - 1 AND c1.user_id = c2.user_id) GROUP BY c1.user_id,c1.contest_id HAVING COUNT(*) = 2 UNION SELECT name,mail FROM cte_2 GROUP BY user_id HAVING COUNT(*) >=3
WITH cte AS (SELECT DISTINCT a.name, a.mail, LEAD(contest_id,2) OVER (PARTITION BY a.user_id ORDER BY contest_id)-contest_id AS DIFF2 FROM Users a LEFT JOIN Contests b ON a.user_id = b.gold_medal OR a.user_id = b.silver_medal OR a.user_id = b.bronze_medal ), cte2 AS (SELECT a.name, a.mail, COUNT(1) AS gold FROM Users a LEFT JOIN Contests b ON a.user_id = b.gold_medal GROUP BY a.user_id HAVING gold>=3) SELECT DISTINCT name, mail FROM cte WHERE DIFF2=2 UNION SELECT DISTINCT name, mail FROM cte2
WITH cte AS (SELECT DISTINCT gold_medal AS winner FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3), cte2 AS (SELECT *, LEAD(gold_medal, 1) OVER(ORDER BY contest_id) AS next_gold, LEAD(silver_medal, 1) OVER(ORDER BY contest_id) AS next_silver, LEAD(bronze_medal, 1) OVER(ORDER BY contest_id) AS next_bronze, LEAD(gold_medal, 2) OVER(ORDER BY contest_id) AS next2_gold, LEAD(silver_medal, 2) OVER(ORDER BY contest_id) AS next2_silver, LEAD(bronze_medal, 2) OVER(ORDER BY contest_id) AS next2_bronze FROM Contests), cte3 AS (SELECT DISTINCT user_id FROM cte2 JOIN users ON (user_id IN (next_gold, next_silver, next_bronze)) AND (user_id IN (next2_gold, next2_silver, next2_bronze)) AND (user_id IN (gold_medal, silver_medal, bronze_medal))) SELECT name, mail FROM (SELECT winner FROM cte UNION SELECT user_id FROM cte3) AS sub, Users WHERE winner = user_id
WITH cte AS (SELECT contest_id, gold_medal AS medal FROM Contests UNION ALL SELECT contest_id, silver_medal AS medal FROM Contests UNION ALL SELECT contest_id, bronze_medal AS medal FROM Contests) SELECT u.name, u.mail FROM (SELECT DISTINCT c1.medal AS medal FROM cte c1, cte c2, cte c3 WHERE c2.contest_id - c1.contest_id = 1 AND c3.contest_id - c2.contest_id = 1 AND c1.medal = c2.medal AND c3.medal = c2.medal UNION SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) >= 3) t LEFT JOIN Users u ON u.user_id = t.medal
WITH cte AS (SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests) SELECT DISTINCT name, mail FROM Users JOIN (SELECT DISTINCT C1.user_id FROM cte AS C1 LEFT JOIN cte AS C2 ON C1.contest_id = C2.contest_id + 1 LEFT JOIN cte AS C3 ON C1.contest_id = C3.contest_id - 1 WHERE C1.user_id = C2.user_id AND C1.user_id = C3.user_id UNION ALL SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3) AS T USING (user_id)
WITH cte AS (SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests) SELECT name, mail FROM Users JOIN (SELECT DISTINCT C1.user_id FROM cte AS C1 LEFT JOIN cte AS C2 ON C1.contest_id = C2.contest_id + 1 LEFT JOIN cte AS C3 ON C1.contest_id = C3.contest_id - 1 WHERE C1.user_id = C2.user_id AND C1.user_id = C3.user_id UNION SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3) AS T USING (user_id)
WITH cte AS (SELECT user_id ,contest_id ,medal FROM (SELECT contest_id ,gold_medal AS user_id ,'gold' AS medal FROM Contests UNION ALL SELECT contest_id ,silver_medal AS user_id ,'silver' AS medal FROM Contests UNION ALL SELECT contest_id ,bronze_medal AS user_id ,'bronze' AS medal FROM Contests) m ORDER BY 1,2) SELECT DISTINCT name ,mail FROM Users WHERE user_id IN (SELECT user_id FROM cte GROUP BY 1 HAVING SUM(CASE WHEN medal='gold' THEN 1 ELSE 0 END)>=3) OR user_id IN (SELECT DISTINCT c1.user_id FROM cte c1, cte c2, cte c3 WHERE c1.user_id = c2.user_id AND c2.user_id = c3.user_id AND ( (c1.contest_id = c2.contest_id - 1 AND c1.contest_id = c3.contest_id -2) OR (c1.contest_id = c2.contest_id + 1 AND c1.contest_id = c3.contest_id -1) OR (c1.contest_id = c2.contest_id + 2 AND c1.contest_id = c3.contest_id +1) ))
WITH cte AS (SELECT user_id, contest_id, RANK()OVER(PARTITION BY user_id ORDER BY contest_id) AS rnk FROM (SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests)t) SELECT DISTINCT name, mail FROM Users WHERE user_id IN (SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(DISTINCT contest_id) >= 3) OR user_id IN (SELECT user_id FROM cte GROUP BY user_id, (contest_id - rnk) HAVING COUNT(*) >= 3)
WITH cte AS (select user_id, name, mail, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, lag(contest_id, 2) OVER(partition by user_id order by contest_id) as prevprev from Users LEFT JOIN Contests ON user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal) select name, mail from cte group by user_id Having SUM(gold) >= 3 OR SUM(contest_id - prevprev = 2) >= 1
WITH cte AS( SELECT contest_id, gold_medal as user_id FROM contests UNION ALL SELECT contest_id, silver_medal as user_id FROM contests UNION ALL SELECT contest_id, bronze_medal as user_id FROM contests ), cte2 AS ( SELECT distinct t1.user_id FROM cte as t1, cte as t2, cte as t3 WHERE t1.user_id = t2.user_id AND t1.user_id = t3.user_id AND t1.contest_id = t2.contest_id +1 AND t2.contest_id = t3.contest_id +1 UNION SELECT gold_medal as user_id FROM contests GROUP BY 1 HAVING count(distinct contest_id) >= 3 ) SELECT name, mail FROM users WHERE user_id IN ( SELECT distinct user_id FROM cte2 )
WITH cte AS( SELECT u.name, u.mail, c.contest_id, CASE WHEN u.user_id=c.gold_medal THEN 1 ELSE 0 END as Gold, CASE WHEN u.user_id=c.silver_medal THEN 1 ELSE 0 END as Silver, CASE WHEN u.user_id=c.bronze_medal THEN 1 ELSE 0 END as Bronze, contest_id-ROW_NUMBER()OVER(PARTITION BY name, mail ORDER BY c.contest_id) AS grp FROM Contests as c JOIN Users as u ON u.user_id=c.gold_medal OR u.user_id=c.silver_medal OR u.user_id=c.bronze_medal ) SELECT DISTINCT name, mail FROM( SELECT name, mail, SUM(Gold+Silver+Bronze) OVER(PARTITION BY name,mail,grp) as medalsum, SUM(GOLD) OVER(PARTITION BY name,mail) as goldsum FROM CTE )a WHERE medalsum>=3 or goldsum>=3
WITH cte AS( SELECT u.name, u.mail, c.contest_id, CASE WHEN u.user_id=c.gold_medal THEN 1 ELSE 0 END as Gold, CASE WHEN u.user_id=c.silver_medal THEN 1 ELSE 0 END as Silver, CASE WHEN u.user_id=c.bronze_medal THEN 1 ELSE 0 END as Bronze, contest_id-ROW_NUMBER()OVER(PARTITION BY name, mail ORDER BY c.contest_id) AS grp FROM Contests as c LEFT JOIN Users as u ON u.user_id=c.gold_medal OR u.user_id=c.silver_medal OR u.user_id=c.bronze_medal ) (SELECT name, mail FROM CTE GROUP BY name, mail HAVING SUM(gold)>=3) UNION (SELECT DISTINCT name, mail FROM( SELECT e.name, e.mail, SUM(Gold+Silver+Bronze) OVER(PARTITION BY name,mail,grp ORDER BY c.contest_id) as medalsum FROM contests as c LEFT JOIN CTE as e ON c.contest_id=e.contest_id )a WHERE medalsum>=3)
WITH cte AS( SELECT u.name, u.mail, c.contest_id, CASE WHEN u.user_id=c.gold_medal THEN 1 ELSE 0 END as Gold, CASE WHEN u.user_id=c.silver_medal THEN 1 ELSE 0 END as Silver, CASE WHEN u.user_id=c.bronze_medal THEN 1 ELSE 0 END as Bronze, contest_id-ROW_NUMBER()OVER(PARTITION BY name, mail ORDER BY c.contest_id) AS grp FROM Contests as c LEFT JOIN Users as u ON u.user_id=c.gold_medal OR u.user_id=c.silver_medal OR u.user_id=c.bronze_medal ) SELECT DISTINCT name, mail FROM( SELECT name, mail, SUM(Gold+Silver+Bronze) OVER(PARTITION BY name,mail,grp ORDER BY contest_id) as medalsum, SUM(GOLD) OVER(PARTITION BY name,mail ORDER BY contest_id) as goldsum FROM CTE )a WHERE medalsum>=3 or goldsum>=3
WITH cte as (SELECT contest_id, gold_medal as medal FROM Contests UNION ALL SELECT contest_id, silver_medal as medal FROM Contests UNION ALL SELECT contest_id, bronze_medal as medal FROM Contests) SELECT name, mail FROM Users WHERE user_id IN (SELECT gold_medal FROM Contests GROUP BY gold_medal HAving COUNT(*) >=3) UNION SELECT name, mail FROM Users WHERE user_id IN ( SELECT DISTINCT A.medal FROM cte A, cte B, cte C WHERE A.contest_id = B.contest_id - 1 AND A.contest_id = C.contest_id - 2 AND A.medal = B.medal AND A.medal = C.medal)
WITH cte as( SELECT c.contest_id,u.name, u.mail, CASE WHEN gold_medal=user_id THEN 1 ElSE 0 END AS gold, CASE WHEN silver_medal=user_id THEN 1 ElSE 0 END AS silver, CASE WHEN bronze_medal=user_id THEN 1 ElSE 0 END AS bronze, c.contest_id-ROW_NUMBER()OVER(PARTITION BY u.user_id order by c.contest_id) as indgrp FROM contests as c JOIN users as u ON c.gold_medal=u.user_id or c.silver_medal=u.user_id or c.bronze_medal=u.user_id ) SELECT DISTINCT name, mail FROM( SELECT name, mail, SUM(gold)OVER(PARTITION BY name,mail) AS goldsum, SUM(gold+silver+bronze)OVER(PARTITION BY name,mail,indgrp) AS medalsum FROM cte )a WHERE goldsum>=3 or medalsum>=3
WITH cte1 AS( SELECT contest_id, gold_medal as user_id from Contests Union SELECT contest_id, silver_medal as user_id from Contests Union SELECT contest_id, bronze_medal as user_id from Contests ), cte2 AS( select c1.user_id as id from cte1 c1 JOIN cte1 c2 on c1.user_id = c2.user_id and c1.contest_id+1 = c2.contest_id JOIN cte1 c3 on c2.user_id = c3.user_id and c2.contest_id + 1 = c3.contest_id ) SELECT u1.name,mail FROM cte2 LEFT JOIN Users u1 ON cte2.id = u1.user_id UNION SELECT U2.name, mail FROM( select gold_medal as gold_id,count(*) as count1 FROM Contests GROUP BY gold_medal)a LEFT JOIN USers U2 ON a.gold_id =U2.user_id WHERE count1>=3
WITH cte1 AS( SELECT gold_medal AS user_id, contest_id, 'gold' AS medal FROM Contests UNION ALL SELECT silver_medal AS user_id, contest_id, 'silver' AS medal FROM Contests UNION ALL SELECT bronze_medal AS user_id, contest_id, 'bronze' AS medal FROM Contests ), cte2 AS( SELECT user_id, contest_id, ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id) AS rn FROM cte1 ), cte3 AS( SELECT DISTINCT user_id FROM cte2 GROUP BY user_id, contest_id - rn HAVING COUNT(*) >= 3 UNION SELECT gold_medal AS user_id FROM Contests GROUP BY user_id HAVING COUNT(contest_id) >= 3 ) SELECT name, mail FROM Users WHERE user_id IN (SELECT * FROM cte3)
WITH cte1 AS( SELECT gold_medal AS user_id, contest_id, 'gold' AS medal FROM Contests UNION SELECT silver_medal AS user_id, contest_id, 'silver' AS medal FROM Contests UNION SELECT bronze_medal AS user_id, contest_id, 'bronze' AS medal FROM Contests ), cte2 AS( SELECT user_id, contest_id, LEAD(contest_id) OVER(PARTITION BY user_id ORDER BY contest_id) AS ld, LEAD(contest_id, 2) OVER(PARTITION BY user_id ORDER BY contest_id) AS ld_ld FROM cte1 ), cte3 AS( SELECT user_id FROM cte2 WHERE contest_id = ld - 1 AND ld = ld_ld - 1 UNION SELECT gold_medal AS user_id FROM Contests GROUP BY user_id HAVING COUNT(contest_id) >= 3 ) SELECT name, mail FROM Users WHERE user_id IN (SELECT * FROM cte3)
WITH cte1 AS( SELECT gold_medal, COUNT(1) FROM Contests GROUP BY gold_medal HAVING COUNT(1) >= 3) ,cte2 AS( SELECT contest_id, gold_medal AS medal FROM Contests UNION ALL SELECT contest_id, silver_medal AS medal FROM Contests UNION ALL SELECT contest_id, bronze_medal AS medal FROM Contests) ,cte3 AS( SELECT c1.medal FROM cte2 c1 JOIN cte2 c2 ON c1.medal = c2.medal AND c1.contest_id - c2.contest_id BETWEEN 1 AND 2 GROUP BY c1.medal, c1.contest_id HAVING COUNT(c1.contest_id) >= 2 UNION SELECT gold_medal FROM cte1) SELECT u.name, u.mail FROM cte3 c JOIN Users u ON c.medal = u.user_id
WITH cte_contest AS ( SELECT contest_id, gold_medal AS user_id, 'gold' AS metal_type FROM Contests UNION SELECT contest_id, silver_medal AS user_id, 'silver' AS metal_type FROM Contests UNION SELECT contest_id, bronze_medal AS user_id, 'bronze' AS metal_type FROM Contests ) SELECT name, mail FROM Users WHERE user_id IN ( SELECT user_id FROM cte_contest WHERE metal_type = 'gold' GROUP BY user_id HAVING COUNT(1) >= 3 UNION SELECT DISTINCT user_id FROM ( SELECT user_id, contest_id AS current_contest_id, LEAD(contest_id, 2) OVER (PARTITION BY user_id ORDER BY contest_id) AS lead_contest_id FROM cte_contest ) l WHERE lead_contest_id - current_contest_id = 2 )
WITH g AS ( SELECT contest_id, gold_medal m FROM contests ), s AS ( SELECT contest_id, silver_medal m FROM contests ), b AS ( SELECT contest_id, bronze_medal m FROM contests ), criteria1 AS ( SELECT m, contest_id, LEAD(contest_id,2) OVER(PARTITION BY m ORDER BY contest_id) 3rd_contest_id FROM (SELECT * FROM g UNION SELECT * FROM s UNION SELECT * FROM b) t ), criteria2 AS ( SELECT m, COUNT(*) wins FROM g GROUP BY m ) SELECT u.name name, u.mail mail FROM ( SELECT m FROM criteria1 WHERE contest_id+2=3rd_contest_id UNION SELECT m FROM criteria2 WHERE wins>=3 ) c JOIN users u ON u.user_id=m
WITH gold AS ( SELECT c.contest_id, c.gold_medal AS win FROM Contests c), silver AS ( SELECT c.contest_id, c.silver_medal AS win FROM Contests c), bronze AS ( SELECT c.contest_id, c.bronze_medal AS win FROM Contests c) SELECT name, mail FROM Users WHERE user_id IN (SELECT DISTINCT win FROM (SELECT p.win, COUNT(contest_id) OVER(PARTITION BY win ORDER BY contest_id RANGE BETWEEN 2 PRECEDING AND CURRENT ROW) AS consec_win FROM (SELECT * FROM gold UNION SELECT * FROM silver UNION SELECT * FROM bronze) AS p) AS consec WHERE consec_win = 3 UNION (SELECT gold_medal AS win FROM Contests GROUP BY win HAVING COUNT(contest_id)>=3))
WITH gold AS ( SELECT c.gold_medal AS 'user_id' FROM Contests c GROUP BY c.gold_medal HAVING COUNT(1) >= 3 ), all_users AS ( SELECT u.user_id, c.contest_id FROM Users u JOIN Contests c ON u.user_id = c.gold_medal OR u.user_id = c.silver_medal OR u.user_id = c.bronze_medal ), con AS ( SELECT a1.user_id, a1.contest_id - ROW_NUMBER() OVER(PARTITION BY a1.user_id ORDER BY a1.contest_id ASC) AS 'rows' FROM all_users a1 ), con2 AS ( SELECT DISTINCT c.user_id FROM con c GROUP BY c.user_id, c.rows HAVING COUNT(1) >=3 ) SELECT DISTINCT u.name, u.mail FROM Users u LEFT JOIN gold g ON u.user_id = g.user_id LEFT JOIN con2 c ON u.user_id = c.user_id WHERE g.user_id IS NOT NULL OR c.user_id IS NOT NULL
WITH gold AS ( SELECT gold_medal id FROM contests GROUP BY gold_medal HAVING COUNT(*) >= 3 ), medalists AS ( SELECT contest_id, gold_medal id FROM contests UNION ALL SELECT contest_id, silver_medal id FROM contests UNION ALL SELECT contest_id, bronze_medal id FROM contests ORDER BY id, contest_id ), any_three AS ( SELECT DISTINCT id FROM ( SELECT id, consec, COUNT(*) num_consec FROM ( SELECT id, contest_id, contest_id - ROW_NUMBER() OVER(PARTITION BY id ORDER BY contest_id) consec FROM medalists) t1 GROUP BY id, consec) t2 WHERE num_consec >= 3 ) SELECT u.name, u.mail FROM any_three a LEFT JOIN users u ON a.id = u.user_id UNION SELECT u.name, u.mail FROM gold g LEFT JOIN users u ON g.id = u.user_id
WITH gold_any AS ( SELECT gold_medal as user_id FROM Contests GROUP BY 1 HAVING COUNT(*) >=3 ), contest_user AS ( SELECT contest_id, gold_medal as user_id FROM Contests UNION ALL SELECT contest_id, silver_medal as user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal as user_id FROM Contests ), conse_medal AS ( SELECT a.contest_id,a.user_id FROM contest_user a, contest_user b, contest_user c WHERE a.user_id = b.user_id AND a.user_id = c.user_id AND a.contest_id -1 = b.contest_id AND b.contest_id - 1 = c.contest_id GROUP BY 1,2 ), all_po AS( SELECT * FROM( SELECT user_id FROM gold_any UNION ALL SELECT user_id FROM conse_medal) temp GROUP BY 1 ) SELECT u.name,u.mail FROM Users u JOIN all_po a ON u.user_id = a.user_id
WITH gold_criteria AS (SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) > 2), unioned AS (SELECT * FROM (SELECT contest_id, gold_medal AS medal FROM Contests UNION ALL SELECT contest_id, silver_medal AS medal FROM Contests UNION ALL SELECT contest_id, bronze_medal AS medal FROM Contests) AS xx ORDER BY medal, contest_id), laged AS (SELECT contest_id, medal, LAG(contest_id, 1) OVER (PARTITION BY medal ORDER BY contest_id) AS l1, LAG(contest_id, 2) OVER (PARTITION BY medal ORDER BY contest_id) AS l2 FROM unioned), res AS (SELECT * FROM (SELECT medal AS md FROM laged WHERE contest_id - l1 = 1 AND l1 - l2 = 1 UNION ALL SELECT gold_medal AS md FROM gold_criteria) AS yy GROUP BY md) SELECT u.name, u.mail FROM res AS r JOIN Users AS u ON r.md = u.user_id
WITH gold_medals AS( SELECT gold_medal, COUNT(*) as medal_number FROM Contests GROUP BY gold_medal HAVING medal_number >= 3), all_medal AS( SELECT gold_medal as user_id, contest_id FROM Contests UNION ALL SELECT silver_medal as user_id, contest_id FROM Contests UNION ALL SELECT bronze_medal as user_ud, contest_id FROM Contests ), lag_all AS( SELECT user_id, contest_id - LAG(contest_id, 2) OVER(PARTITION BY user_id ORDER BY contest_id) as diff FROM all_medal) SELECT u.name, u.mail FROM Users u WHERE user_id in (SELECT gold_medal FROM gold_medals) OR user_id in (SELECT user_id FROM lag_all WHERE diff = 2)
WITH gold_tbl AS (SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id) >= 3), cons_tbl AS (SELECT contest_id, user_id, (contest_id - RANK() OVER(PARTITION BY user_id ORDER BY contest_id)) AS grp FROM (SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests) a) SELECT name, mail FROM Users u JOIN gold_tbl g ON u.user_id = g.user_id UNION SELECT name, mail FROM Users u JOIN cons_tbl c ON u.user_id = c.user_id GROUP BY u.user_id, grp HAVING COUNT(contest_id) >= 3
WITH joined_contest AS ( SELECT contest_id, gold_medal AS user_id, 'gold' AS metal FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id, 'sliver' AS metal FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id, 'bronze' AS metal FROM Contests ), cte AS ( SELECT user_id, SUM(CASE WHEN metal='gold' THEN 1 ELSE 0 END) OVER(PARTITION BY user_id) AS num_gold_metals, ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id ASC) AS row_num, contest_id FROM joined_contest ), u1 AS ( SELECT user_id FROM cte GROUP BY user_id, contest_id-row_num HAVING COUNT(*)>=3 ), u2 AS ( SELECT user_id FROM cte WHERE num_gold_metals>=3 ) SELECT name, mail FROM Users WHERE user_id IN (SELECT * FROM u1) OR user_id IN (SELECT * FROM u2)
WITH m AS (SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests) SELECT u.name, u.mail FROM (SELECT DISTINCT user_id FROM m WHERE (contest_id + 1, user_id) IN (SELECT * FROM m) AND (contest_id + 2, user_id) IN (SELECT * FROM m) UNION SELECT gold_medal AS user_id FROM Contests GROUP BY 1 HAVING COUNT(gold_medal) >= 3) AS c JOIN Users AS u ON c.user_id = u.user_id
WITH m AS (SELECT contest_id, gold_medal AS user_id FROM contests UNION ALL SELECT contest_id, silver_medal FROM contests UNION ALL SELECT contest_id, bronze_medal FROM contests) SELECT name, mail FROM users WHERE user_id IN (SELECT gold_medal FROM contests GROUP BY 1 HAVING COUNT(contest_id) > 2) OR user_id IN (SELECT m3.user_id FROM m m1 JOIN m m2 ON m1.contest_id = m2.contest_id - 1 AND m1.user_id = m2.user_id JOIN m m3 ON m2.user_id = m3.user_id AND m2.contest_id = m3.contest_id - 1 GROUP BY 1)
WITH main AS ( SELECT user_id, mail, name, (CASE WHEN (contest_id + 2) = LEAD(contest_id,2) OVER(PARTITION BY user_id ORDER BY contest_id) THEN 1 ELSE 0 END) AS qualifying FROM Users INNER JOIN Contests ON user_id = gold_medal OR user_id = silver_medal OR user_id = bronze_medal ) SELECT DISTINCT mail, name FROM Users INNER JOIN Contests ON user_id = gold_medal GROUP BY user_id HAVING COUNT(*) >=3 UNION SELECT DISTINCT mail, name FROM main WHERE qualifying = 1
WITH medal_list AS(select medal, CASE WHEN (contest_id-LEAD(contest_id,2) OVER (PARTITION BY medal ORDER BY contest_id DESC))=2 THEN 1 ELSE 0 END con1, SUM(CASE WHEN type='gold' THEN 1 ELSE 0 END) OVER(PARTITION BY medal) con2 from ( select gold_medal medal, 'gold' type, contest_id from contests union all select silver_medal medal, 'silver' type, contest_id from contests union all select bronze_medal medal, 'bronze' type, contest_id from contests ) sub1) SELECT u.name, u.mail FROM Users u JOIN medal_list m ON m.medal=u.user_id GROUP BY 1,2 HAVING MAX(m.con1)=1 OR MAX(m.con2)>=3
WITH medals AS ( SELECT 'gold' AS medal UNION ALL SELECT 'silver' AS medal UNION ALL SELECT 'bronze' AS medal ) , contests_base AS ( SELECT contest_id, medal, CASE WHEN medal = 'gold' THEN gold_medal WHEN medal = 'silver' THEN silver_medal ELSE bronze_medal END AS winner_id FROM contests CROSS JOIN medals ) SELECT DISTINCT u.name, u.mail FROM ( SELECT contest_id, medal, winner_id, LEAD(contest_id, 1) OVER (PARTITION BY winner_id ORDER BY contest_id) AS next_contest_won, LEAD(contest_id, 2) OVER (PARTITION BY winner_id ORDER BY contest_id) AS 3rd_contest_won FROM contests_base ) c JOIN users u ON c.winner_id = u.user_id WHERE next_contest_won - contest_id = 1 AND 3rd_contest_won - next_contest_won = 1 UNION SELECT u.name, u.mail FROM ( SELECT winner_id FROM contests_base WHERE medal = 'gold' GROUP BY winner_id HAVING COUNT(contest_id) >= 3 ) c JOIN users u ON c.winner_id = u.user_id
WITH medals AS (SELECT gold_medal AS user, contest_id FROM contests UNION ALL SELECT silver_medal AS user, contest_id FROM contests UNION ALL SELECT bronze_medal AS user, contest_id FROM contests), t1 AS (SELECT user, contest_id, row_number() over(PARTITION BY user ORDER BY contest_id) AS row_num FROM medals), candidates AS (SELECT user AS user_id FROM t1 GROUP BY user, contest_id - row_num HAVING count(*) >= 3 UNION SELECT gold_medal AS user_id FROM contests GROUP BY gold_medal HAVING count(*) >= 3) SELECT u.name, u.mail FROM users u INNER JOIN candidates c ON u.user_id = c.user_id
WITH new_contests AS ( SELECT contest_id, gold_medal AS medal FROM contests UNION ALL SELECT contest_id, silver_medal AS medal FROM contests UNION ALL SELECT contest_id, bronze_medal AS medal FROM contests ), case1 AS ( SELECT DISTINCT c1.medal as id FROM new_contests AS c1 LEFT JOIN new_contests AS c2 on c1.contest_id + 1 = c2.contest_id LEFT JOIN new_contests AS c3 on c1.contest_id + 2 = c3.contest_id WHERE c1.medal = c2.medal and c2.medal = c3.medal ), case2 AS ( SELECT DISTINCT gold_medal as id FROM contests GROUP BY gold_medal HAVING count(contest_id) >= 3 ) SELECT name, mail FROM users AS u INNER JOIN ( select id from case1 union select id from case2 ) AS c ON u.user_id = c.id
WITH num_gold AS ( SELECT gold_medal AS user_id, COUNT(*) AS num_gold FROM contests GROUP BY 1 ), consec_current_bronze AS ( SELECT DISTINCT user_id FROM ( SELECT bronze_medal AS user_id, LAG(bronze_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_bronze, LAG(silver_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_silver, LAG(gold_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_gold, LAG(bronze_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_bronze, LAG(silver_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_silver, LAG(gold_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_gold FROM contests ) z1 WHERE user_id IN (prev1_bronze, prev1_silver, prev1_gold) AND user_id IN (prev2_bronze, prev2_silver, prev2_gold) ), consec_current_silver AS ( SELECT DISTINCT user_id FROM ( SELECT silver_medal AS user_id, LAG(bronze_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_bronze, LAG(silver_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_silver, LAG(gold_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_gold, LAG(bronze_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_bronze, LAG(silver_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_silver, LAG(gold_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_gold FROM contests ) z1 WHERE user_id IN (prev1_bronze, prev1_silver, prev1_gold) AND user_id IN (prev2_bronze, prev2_silver, prev2_gold) ), consec_current_gold AS ( SELECT DISTINCT user_id FROM ( SELECT gold_medal AS user_id, LAG(bronze_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_bronze, LAG(silver_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_silver, LAG(gold_medal,1) OVER (ORDER BY contest_id ASC) AS prev1_gold, LAG(bronze_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_bronze, LAG(silver_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_silver, LAG(gold_medal,2) OVER (ORDER BY contest_id ASC) AS prev2_gold FROM contests ) z1 WHERE user_id IN (prev1_bronze, prev1_silver, prev1_gold) AND user_id IN (prev2_bronze, prev2_silver, prev2_gold) ) SELECT name, mail FROM ( SELECT user_id FROM num_gold WHERE num_gold >= 3 UNION SELECT user_id FROM consec_current_bronze UNION SELECT user_id FROM consec_current_silver UNION SELECT user_id FROM consec_current_gold ) zz LEFT JOIN users u ON zz.user_id = u.user_id
WITH order_users AS ( SELECT gold_medal AS user_id, contest_id, 1 AS medal FROM Contests UNION ALL SELECT silver_medal AS user_id, contest_id, 2 AS medal FROM Contests UNION ALL SELECT bronze_medal AS user_id, contest_id, 3 AS medal FROM Contests ORDER BY user_id, contest_id ) SELECT DISTINCT f.name, f.mail FROM (SELECT DISTINCT g.name, g.mail FROM (SELECT u.user_id, u.name, u.mail, ou.contest_id, (ou.contest_id - LAG(ou.contest_id, 2) OVER (PARTITION BY ou.user_id ORDER BY ou.contest_id)) AS 'lag_emp_id' FROM Users u JOIN order_users ou ON u.user_id = ou.`user_id` WHERE ou.`medal` IN (1, 2, 3)) g WHERE g.lag_emp_id = 2 UNION ALL ( SELECT h.name, h.mail FROM ( SELECT u.user_id, u.name, u.mail, ou.contest_id, SUM(ou.medal) OVER (PARTITION BY ou.user_id ORDER BY ou.contest_id) AS 'gold_medal_count' FROM Users u JOIN order_users ou ON u.user_id = ou.`user_id` WHERE ou.`medal` = 1 ) h WHERE h.gold_medal_count = 3)) f ORDER BY f.name
WITH r AS( SELECT contest_id, gold_medal as u_id FROM Contests UNION ALL SELECT contest_id, silver_medal as u_id FROM Contests UNION ALL SELECT contest_id, bronze_medal as u_id FROM Contests ) SELECT u.name, u.mail FROM ( SELECT r3.u_id FROM( SELECT r2.u_id, r2.contest_id - r2.rnk AS cd, COUNT(*) AS cnt FROM( SELECT u_id, contest_id,COUNT(*), ROW_NUMBER()OVER(PARTITION BY u_id ORDER BY contest_id) AS rnk FROM r GROUP BY 1,2 ) r2 GROUP BY 1,2 HAVING COUNT(*)>=3 )r3 UNION SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(DISTINCT contest_id) >=3 ) r4 JOIN Users u ON r4.u_id = u.user_id
WITH results as ( SELECT contest_id , gold_medal user_id FROM Contests UNION ALL SELECT contest_id , silver_medal user_id FROM Contests UNION ALL SELECT contest_id , bronze_medal user_id FROM Contests ), consW as ( SELECT user_id, contest_id - ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id) cons FROM results ), Win as ( SELECT user_id , cons FROM consW GROUP BY user_id, cons HAVING count(*) >= 3 ) SELECT name, mail FROM Win w JOIN Users u ON w.user_id = u.user_id UNION SELECT name, mail FROM Contests c JOIN Users u ON c.gold_medal = u.user_id GROUP BY name, mail HAVING COUNT(gold_medal) >= 3
WITH sum_cte AS ( SELECT u.name, u.mail, contest_id, (contest_id - ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY contest_id)) AS medal_rank, CASE WHEN u.user_id = c.gold_medal THEN 1 ELSE 0 END AS gold_medal FROM Contests c JOIN Users u ON u.user_id = c.gold_medal OR u.user_id = c.silver_medal or u.user_id = c.bronze_medal) SELECT name, mail FROM sum_cte GROUP BY name, mail, medal_rank HAVING COUNT(medal_rank)>=3 UNION SELECT name, mail FROM sum_cte GROUP BY name, mail HAVING SUM(gold_medal)>=3
WITH t AS ( SELECT contest_id, gold_medal AS user_id FROM Contests UNION SELECT contest_id, silver_medal AS user_id FROM Contests UNION SELECT contest_id, bronze_medal AS user_id FROM Contests ), c AS ( SELECT DISTINCT user_id FROM ( SELECT user_id, contest_id - (ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id)) AS r FROM t ) tt GROUP BY user_id, r HAVING COUNT(*) >= 3 UNION SELECT gold_medal AS user_id FROM Contests GROUP BY user_id HAVING COUNT(*) >= 3 ) SELECT name, mail FROM Users u INNER JOIN c ON c.user_id = u.user_id
WITH t AS( SELECT contest_id, gold_medal AS 'user_id' FROM Contests UNION ALL SELECT contest_id, silver_medal FROM Contests UNION ALL SELECT contest_id, bronze_medal FROM Contests ) , t1 AS( SELECT *, LAG(contest_id, 2) OVER (PARTITION BY user_id ORDER BY contest_id) AS 'diff' FROM t ) , t2 AS( SELECT user_id FROM t1 WHERE (contest_id = diff + 2) UNION ALL SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3 ) SELECT DISTINCT mail, name FROM t2 INNER JOIN Users USING (user_id)
WITH t AS( SELECT gold_medal AS 'user_id' FROM Contests GROUP BY gold_medal HAVING COUNT(1) >= 3 ) , t0 AS( SELECT contest_id, gold_medal AS 'user_id' FROM Contests UNION ALL SELECT contest_id, silver_medal FROM Contests UNION ALL SELECT contest_id, bronze_medal FROM Contests ) , t1 AS( SELECT *, RANK() OVER (PARTITION BY user_id ORDER BY contest_id) AS 'rnk' FROM t0 ) , t2 AS( SELECT user_id FROM t1 GROUP BY user_id, contest_id - rnk HAVING COUNT(1) >= 3 UNION ALL SELECT user_id FROM t ) SELECT DISTINCT name, mail FROM t2 INNER JOIN Users USING (user_id)
WITH t0 AS ( SELECT gold_medal AS user_id, contest_id FROM Contests UNION ALL SELECT silver_medal AS user_id, contest_id FROM Contests UNION ALL SELECT bronze_medal AS user_id, contest_id FROM Contests ), t1 AS ( SELECT user_id, contest_id, ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id) rn FROM t0 ), t2 AS ( SELECT user_id FROM ( SELECT user_id, contest_id - rn FROM t1 GROUP BY 1, 2 HAVING COUNT(*)>=3 ) tmp UNION ALL SELECT gold_medal user_id FROM Contests GROUP BY 1 HAVING COUNT(*)>=3 ) SELECT u.name, u.mail FROM t2 JOIN Users u ON t2.user_id = u.user_id GROUP BY 1, 2
WITH t0 AS (SELECT gold_medal AS user_id, contest_id FROM Contests UNION ALL SELECT silver_medal AS user_id, contest_id FROM Contests UNION ALL SELECT bronze_medal AS user_id, contest_id FROM Contests ), t1 AS (SELECT user_id, contest_id, ROW_NUMBER()OVER(PARTITION BY user_id ORDER BY contest_id) AS rn FROM t0), t2 AS (SELECT user_id FROM t1 GROUP BY user_id, contest_id - rn HAVING COUNT(*)>=3 UNION SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*)>=3) SELECT mail, name FROM Users WHERE user_id IN (SELECT user_id FROM t2)
WITH t0 as ( SELECT gold_medal AS user, contest_id FROM contests UNION ALL SELECT silver_medal AS user, contest_id FROM contests UNION ALL SELECT bronze_medal AS user, contest_id FROM contests ) , t1 AS ( SELECT user, contest_id, ROW_NUMBER() OVER (PARTITION BY user ORDER BY contest_id) AS rn FROM t0 ) , t2 AS ( SELECT user AS user_id FROM t1 GROUP BY user, contest_id - rn HAVING COUNT(*) >= 3 UNION ALL SELECT gold_medal AS user_id FROM contests GROUP BY gold_medal HAVING COUNT(*) >= 3 ) SELECT DISTINCT u.name, u.mail FROM t2 INNER JOIN users u ON t2.user_id = u.user_id
WITH t1 AS ( SELECT contest_id, gold_medal AS id FROM Contests UNION ALL SELECT contest_id, silver_medal AS id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS id FROM Contests ), t2 AS ( SELECT id, contest_id, ROW_NUMBER()OVER (PARTITION BY id ORDER BY contest_id) AS num FROM t1 ), t3 AS ( SELECT DISTINCT gold_medal AS id FROM Contests GROUP BY gold_medal HAVING COUNT(*)>=3 ) SELECT DISTINCT name, mail FROM t2 INNER JOIN Users u ON t2.id=u.user_id GROUP BY id, contest_id-num HAVING COUNT(*)>=3 UNION SELECT name, mail FROM t3 INNER JOIN Users u ON t3.id=u.user_id
WITH t1 AS ( SELECT contest_id, gold_medal AS id FROM Contests UNION ALL SELECT contest_id, silver_medal FROM Contests UNION ALL SELECT contest_id, bronze_medal FROM Contests ), t2 AS ( SELECT id, contest_id, ROW_NUMBER()OVER(PARTITION BY id ORDER BY contest_id) AS num FROM t1 ), t3 AS ( SELECT id FROM t2 GROUP BY id, contest_id-num HAVING COUNT(*)>=3 UNION ALL SELECT gold_medal AS id FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id)>=3 ) SELECT DISTINCT name, mail FROM t3 INNER JOIN Users ON t3.id=Users.user_id
WITH t1 AS (SELECT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(contest_id) >= 3), t2 AS (SELECT contest_id, gold_medal AS user_id FROM contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM contests), t3 AS (SELECT user_id, contest_id, LEAD(contest_id, 2) OVER (PARTITION BY user_id ORDER BY contest_id) AS lag_contest FROM t2) SELECT name, mail FROM Users WHERE user_id IN (SELECT gold_medal FROM t1) OR user_id IN (SELECT user_id FROM t3 WHERE lag_contest - contest_id = 2)
WITH t1 AS (SELECT gold_medal FROM contests GROUP BY gold_medal HAVING COUNT(contest_id) >= 3), t2 AS (SELECT contest_id, gold_medal AS user_id FROM contests UNION ALL SELECT contest_id, silver_medal FROM contests UNION ALL SELECT contest_id, bronze_medal FROM contests), t3 AS (SELECT contest_id, user_id FROM t2 WHERE((contest_id+1, user_id) in (select contest_id, user_id from t2) AND (contest_id+2, user_id) in (select contest_id, user_id from t2)) OR((contest_id-1, user_id) in (select contest_id, user_id from t2) AND (contest_id-2, user_id) in (select contest_id, user_id from t2))) SELECT name, mail FROM users WHERE user_id IN (SELECT gold_medal FROM t1) OR user_id IN (SELECT user_id FROM t3)
WITH t1 AS( SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3 ), t2 AS( SELECT *, contest_id - RANK() OVER(PARTITION BY user_id ORDER BY contest_id) AS num FROM (SELECT contest_id, gold_medal AS user_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id FROM Contests ) t ) SELECT name, mail FROM Users WHERE user_id IN (SELECT user_id FROM t2 GROUP BY user_id, num HAVING COUNT(*) >= 3) OR user_id IN (SELECT user_id FROM t1)
WITH t1 AS( SELECT gold_medal FROM contests GROUP BY 1 HAVING COUNT(contest_id) >= 3), t2 AS( SELECT contest_id, gold_medal AS user_id FROM contests UNION ALL SELECT contest_id, silver_medal FROM contests UNION ALL SELECT contest_id, bronze_medal FROM contests), t3 AS ( SELECT contest_id, user_id FROM t2 WHERE (contest_id + 1, user_id) IN (SELECT contest_id, user_id from t2) AND (contest_id + 2, user_id) IN (SELECT contest_id, user_id from t2)) SELECT name, mail FROM users WHERE user_id IN (SELECT gold_medal from t1) OR user_id IN (SELECT user_id from t3)
WITH table1 AS (SELECT gold_medal AS user_id, contest_id FROM Contests UNION SELECT silver_medal AS user_id, contest_id FROM Contests UNION SELECT bronze_medal AS user_id, contest_id FROM Contests), table2 AS (SELECT *, ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id) as row_num FROM table1) SELECT DISTINCT u.name, u.mail FROM Users AS u JOIN (SELECT user_id FROM table2 GROUP BY user_id, contest_id - row_num HAVING COUNT(*) >= 3 UNION ALL SELECT gold_medal AS user_id FROM Contests GROUP BY gold_medal HAVING COUNT(*) >= 3) AS t on u.user_id = t.user_id
WITH table1 AS( SELECT gold_medal, COUNT(gold_medal) AS cnt FROM Contests GROUP BY gold_medal ), table2 AS( (SELECT contest_id, gold_medal AS medal FROM Contests) UNION ALL (SELECT contest_id, silver_medal FROM Contests) UNION ALL (SELECT contest_id, bronze_medal FROM Contests) ), table3 AS( SELECT medal, contest_id, LEAD(contest_id,1)OVER(PARTITION BY medal ORDER BY contest_id) AS lead1, LEAD(contest_id,2)OVER(PARTITION BY medal ORDER BY contest_id) AS lead2 FROM table2 ORDER BY medal, contest_id ), table4 AS( (SELECT name, mail FROM table1 INNER JOIN Users u ON table1.gold_medal=u.user_id WHERE cnt>=3) UNION ALL (SELECT name, mail FROM table3 INNER JOIN Users u ON table3.medal=u.user_id WHERE (lead2-lead1=1) AND (lead1-contest_id=1)) ) SELECT DISTINCT name, mail FROM table4
WITH tbl1 AS ( SELECT contest_id, gold_medal AS medal FROM Contests UNION ALL SELECT contest_id, silver_medal AS medal FROM Contests UNION ALL SELECT contest_id, bronze_medal AS medal FROM Contests ), tbl2 AS ( SELECT DISTINCT c1.medal FROM tbl1 c1 JOIN tbl1 c2 ON c2.contest_id - c1.contest_id = 1 AND c1.medal = c2.medal JOIN tbl1 c3 ON c3.contest_id - c2.contest_id = 1 AND c1.medal = c3.medal UNION ALL SELECT DISTINCT gold_medal AS medal FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) >= 3 ) SELECT DISTINCT u.name, u.mail FROM tbl2 JOIN Users u ON tbl2.medal = u.user_id
WITH temp1 AS( SELECT gold_medal, COUNT(contest_id) as gold_times FROM contests GROUP BY 1 ), temp2 AS ( SELECT gold_medal AS medalist_id, contest_id FROM contests UNION ALL SELECT silver_medal AS medalist_id, contest_id FROM contests UNION ALL SELECT bronze_medal AS medalist_id, contest_id FROM contests ), temp3 AS ( SELECT DISTINCT medalist_id FROM temp2 WHERE (medalist_id, contest_id - 1) IN (SELECT * FROM temp2) AND (medalist_id, contest_id + 1) IN (SELECT * FROM temp2) UNION ALL SELECT gold_medal as medalsit_id FROM temp1 WHERE gold_times >=3 ) SELECT name, mail FROM users WHERE user_id IN (SELECT * FROM temp3)
WITH three_golds as (SELECT gold_medal as user_id FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) >= 3), three_consecutive_a as (SELECT contest_id, gold_medal as user_id FROM Contests UNION ALL SELECT contest_id, silver_medal as user_id FROM Contests UNION ALL SELECT contest_id, bronze_medal as user_id FROM Contests), three_consecutive_b as (SELECT *, row_number() OVER (PARTITION BY user_id ORDER BY contest_id) as row_num FROM three_consecutive_a), three_consecutive as (SELECT DISTINCT user_id FROM three_consecutive_b GROUP BY user_id, contest_id - row_num HAVING count(user_id) >= 3) SELECT name, mail FROM Users WHERE user_id in (SELECT user_id from three_golds union all SELECT user_id from three_consecutive)
WITH tmp AS (SELECT contest_id, gold_medal AS 'medal' FROM Contests UNION ALL SELECT contest_id, bronze_medal AS 'medal' FROM Contests UNION ALL SELECT contest_id, silver_medal AS 'medal' FROM Contests) SELECT name, mail FROM (SELECT DISTINCT a.medal FROM tmp AS a, tmp AS b, tmp AS c WHERE b.contest_id = a.contest_id + 1 AND c.contest_id = b.contest_id + 1 AND a.medal = b.medal AND b.medal = c.medal UNION SELECT DISTINCT gold_medal FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) >= 3) AS d INNER JOIN Users ON d.medal = Users.user_id
WITH tmp1 AS (SELECT gold_medal AS user FROM Contests GROUP BY gold_medal HAVING count(*) >= 3), tmp2 AS (SELECT contest_id, gold_medal as user FROM Contests UNION ALL SELECT contest_id, silver_medal as user FROM Contests UNION ALL SELECT contest_id, bronze_medal as user FROM Contests), tmp3 AS (SELECT user, contest_id, row_number() OVER(PARTITION BY user ORDER BY contest_id) as rn FROM tmp2), tmp4 AS (SELECT user FROM tmp3 GROUP BY user, contest_id - rn HAVING count(*) >=3 UNION DISTINCT SELECT user FROM tmp1) SELECT name, mail FROM Users JOIN tmp4 ON user_id = user
WITH total_golds AS ( SELECT gold_medal AS pl_id FROM Contests GROUP BY gold_medal HAVING count(*) >= 3 ), all_medals AS ( SELECT contest_id, gold_medal as pl_id FROM Contests UNION ALL SELECT contest_id, silver_medal as pl_id FROM Contests UNION ALL SELECT contest_id, bronze_medal as pl_id FROM Contests ), cons_medals AS ( SELECT DISTINCT pl_id FROM (SELECT contest_id, pl_id, LAG(contest_id, 2) OVER(PARTITION BY pl_id ORDER BY contest_id) AS pre_pre_contest FROM all_medals) C WHERE contest_id - pre_pre_contest = 2 ) SELECT U.name,U.mail FROM (SELECT * FROM total_golds UNION SELECT * FROM cons_medals) W INNER JOIN Users U ON W.pl_id=U.user_id
WITH unions AS ( SELECT contest_id, gold_medal as user_id, 'gold' as medal_type FROM contests UNION ALL SELECT contest_id, silver_medal as user_id, 'silver' as medal_type FROM contests UNION ALL SELECT contest_id, bronze_medal as user_id, 'bronze' as medal_type FROM contests), gold_winners AS ( SELECT user_id FROM unions WHERE medal_type = 'gold' GROUP BY user_id HAVING COUNT(*) > 2), winners as (SELECT user_id, (contest_id - ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY contest_id)) as grp FROM unions), consecutive AS ( SELECT user_id, grp FROM winners GROUP BY user_id, grp HAVING COUNT(*) > 2) SELECT name, mail FROM gold_winners INNER JOIN users on gold_winners.user_id = users.user_id UNION SELECT name, mail FROM consecutive INNER JOIN users on consecutive.user_id = users.user_id
WITH unpivot AS ( SELECT contest_id, 'gold' AS medal, gold_medal AS winer_id FROM contests UNION ALL SELECT contest_id, 'silver' AS medal, silver_medal AS winer_id FROM contests UNION ALL SELECT contest_id, 'bronze' AS medal, bronze_medal AS winer_id FROM contests ), ordered AS ( SELECT winer_id , contest_id , name , mail , medal , LAG(contest_id, 2) OVER(PARTITION BY winer_id ORDER BY contest_id) AS prepre FROM unpivot p JOIN users u ON p.winer_id = u.user_id) SELECT name , mail FROM ordered GROUP BY winer_id HAVING SUM(medal = 'gold') >= 3 OR SUM(contest_id - prepre = 2) >= 1
WITH user_medal AS ( SELECT contest_id, gold_medal AS user_id, 'gold_medal' AS medal FROM Contests UNION ALL SELECT contest_id, silver_medal AS user_id, 'silver_medal' AS medal FROM Contests UNION ALL SELECT contest_id, bronze_medal AS user_id, 'bronze_medal' AS medal FROM Contests ), user_rn AS ( SELECT user_id, contest_id, medal, ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY contest_id) AS rn FROM user_medal ), stg AS( SELECT user_id FROM user_rn GROUP BY user_id, contest_id - rn HAVING COUNT(1) >= 3 UNION ALL SELECT user_id FROM user_medal WHERE medal = 'gold_medal' GROUP BY user_id HAVING COUNT(1)>=3 ) SELECT name, mail FROM Users WHERE user_id IN (SELECT user_id FROM stg)
WITH winner_id AS ( SELECT contest_id, gold_medal AS win_id FROM Contests UNION ALL SELECT contest_id, silver_medal AS win_id FROM Contests UNION ALL SELECT contest_id, bronze_medal AS win_id FROM Contests ), three_win AS ( SELECT DISTINCT sub.win_id FROM ( SELECT w1.contest_id, w1.win_id, w2.win_id AS win_id2, w3.win_id AS win_id3 FROM winner_id AS w1 INNER JOIN winner_id AS w2 ON w1.contest_id +1 = w2.contest_id AND w1.win_id = w2.win_id INNER JOIN winner_id AS w3 ON w2.contest_id +1 = w3.contest_id AND w2.win_id = w3.win_id) AS sub UNION ALL SELECT DISTINCT gold_medal AS gold_win_id FROM Contests GROUP BY gold_medal HAVING COUNT(gold_medal) >=3 ) SELECT DISTINCT u.name, u.mail FROM Users AS u INNER JOIN three_win AS t ON u.user_id = t.win_id
With CTE AS (SELECT contest_id, gold_medal as id, "gold" as medal FROM Contests UNION ALL SELECT contest_id, silver_medal as id, "silver" as medal FROM Contests UNION ALL SELECT contest_id, bronze_medal as id, "bronze" as medal FROM Contests) SELECT name, mail FROM (SELECT id FROM CTE WHERE medal="gold" GROUP BY id HAVING COUNT(contest_id)>2 UNION SELECT Distinct c1.id FROM CTE c1 JOIN CTE c2 ON c1.id=c2.id AND c1.contest_id+1=c2.contest_id JOIN CTE c3 on c2.id=c3.id AND c2.contest_id+1=c3.contest_id ) X JOIN users u on X.id=u.user_id
With CTE as(SELECT gold_medal as medal, contest_id from Contests union all SELECT silver_medal as medal,contest_id from Contests union all SELECT bronze_medal as medal,contest_id from Contests), CTE2 as (SELECT medal ,contest_id,IFNULL(LAG(contest_id,2)over(partition by medal order by contest_id),0)as lagresult from CTE), CTE3 AS(select distinct A.medal from((select distinct medal from CTE2 WHERE contest_id - lagresult ='2') UNION ALL (select gold_medal as medal from Contests group by gold_medal having count(medal)>=3))A) SELECT U.name,U.mail from Users U right join Cte3 C ON U.user_id = C.medal
With T1 as ( Select contest_id, gold_medal as userid From Contests Union all Select contest_id, silver_medal as userid From Contests Union all Select contest_id, bronze_medal as userid From Contests), T2 as (Select distinct a.userid as id From T1 a Left Join T1 b on a.contest_id = b.contest_id - 1 Join T1 c on b.contest_id = c.contest_id - 1 Where a.userid = b.userid And b.userid = c.userid), T3 as ( Select gold_medal as id From Contests Group by gold_medal Having Count(contest_id) >=3) Select distinct name, mail From Users Where user_id In (Select id From T2) Or user_id In (Select id from T3)
With allMedals as ( Select contest_id, gold_medal as medal from Contests union all Select contest_id, silver_medal as medal from Contests union all Select contest_id, bronze_medal as medal from Contests ), t1 as( Select a1.medal from allMedals a1 join allMedals a2 on a1.contest_id + 1 = a2.contest_id and a1.medal = a2.medal join allMedals a3 on a1.contest_id + 2 = a3.contest_id and a1.medal = a3.medal ), t2 as( Select distinct medal from t1 union Select gold_medal from Contests group by gold_medal having count(contest_id) >= 3 ) Select u.name, u.mail from t2 join Users u on t2.medal = u.user_id
With cont as ( (select contest_id, gold_medal user_id from Contests) UNION ALL (select contest_id, silver_medal user_id from Contests) UNION ALL (select contest_id, bronze_medal user_id from Contests) ) select name, mail from (select gold_medal user_id from Contests group by gold_medal having count(*) >= 3 UNION (select distinct c1.user_id from cont c1 JOIN cont c2 JOIN cont c3 ON c1.user_id = c2.user_id AND c2.user_id = c3.user_id WHERE c2.contest_id = c1.contest_id+1 AND c3.contest_id = c1.contest_id +2 )) int_cand JOIN Users u ON int_cand.user_id = u.user_id
With cte as ( select contest_id, gold_medal as medal from Contests union all select contest_id, silver_medal as medal from Contests union all select contest_id, bronze_medal as medal from Contests ) select name, mail from (select distinct c1.medal from cte c1, cte c2, cte c3 where c1.medal = c2.medal and c1.contest_id = c2.contest_id - 1 and c1.medal = c3.medal and c1.contest_id = c3.contest_id - 2 union (select distinct gold_medal as medal from Contests group by gold_medal having count(contest_id) >= 3) ) tmp1, Users where tmp1.medal = users.user_id
With cte as(select user_id, name, mail, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, lag(contest_id, 2) over (partition by user_id order by contest_id) as prevprev from Users left join Contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal) select name, mail from cte group by user_id having sum(gold)>=3 or sum(contest_id - prevprev = 2) >= 1
With t1 as ( select gold_medal as user_id from Contests group by gold_medal having count(contest_id) >=3 ), t2 as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ), t3 as ( select contest_id, user_id from ( select p1.contest_id as contest_id, p1.user_id, p2.contest_id as next_contest_id from t2 as p1 left join t2 as p2 on p1.user_id = p2.user_id and (p2.contest_id - p1.contest_id) between 0 and 2 ) t group by contest_id, user_id having count(next_contest_id) = 3 ) select name, mail from Users where user_id in (select user_id from t1) or user_id in (select user_id from t3)
With tmp as ( SELECT u, contest_id, lag(contest_id, 1) over(partition by u order by contest_id) as pre1, lag(contest_id, 2) over(partition by u order by contest_id) as pre2, lead(contest_id, 1) over(partition by u order by contest_id) as nxt1, lead(contest_id, 2) over(partition by u order by contest_id) as nxt2 FROM (SELECT contest_id, gold_medal as u FROM Contests UNION ALL SELECT contest_id, silver_medal as u FROM Contests UNION ALL SELECT contest_id, bronze_medal as u FROM Contests) tmp), tmp2 as ( SELECT DISTINCT u FROM tmp WHERE (pre1 = contest_id - 1 AND pre2 = contest_id - 2) OR (pre1 = contest_id - 1 AND nxt1 = contest_id + 1) OR (nxt1 = contest_id + 1 AND nxt2 = contest_id + 2) UNION (SELECT gold_medal as u FROM Contests GROUP BY 1 HAVING COUNT(contest_id) >= 3)) SELECT name, mail FROM Users WHERE user_id IN (SELECT u FROM tmp2)
select a.name, a.mail from ( select * , lag(contest_id, 2) over (partition by user_id order by contest_id) as lag_two FROM Users u JOIN Contests c on u.user_id in (c.gold_medal, c.silver_medal, c.bronze_medal) ) a group by user_id having sum(user_id = gold_medal) >= 3 or sum(contest_id - lag_two = 2) >= 1
select a.name, a.mail from users a, contests b, contests c, contests d where (a.user_id = b.gold_medal or a.user_id = b.silver_medal or a.user_id = b.bronze_medal) and (a.user_id = c.gold_medal or a.user_id = c.silver_medal or a.user_id = c.bronze_medal) and (a.user_id = d.gold_medal or a.user_id = d.silver_medal or a.user_id = d.bronze_medal) and b.contest_id = c.contest_id-1 and c.contest_id = d.contest_id-1 union select distinct b.name, b.mail from contests a, users b where a.gold_medal = b.user_id group by a.gold_medal having count(a.gold_medal) > 2
select c.name, c.mail from( select user_id, name, mail from users c) as C where (select case when count(gap) = 0 then 0 else 1 end as 'result' from ( select contest_id - rank_num as 'gap', count(*) as 'num_group' from ( select contest_id, dense_rank() over(order by contest_id) as 'rank_num' from contests where gold_medal = c.user_id or silver_medal = c.user_id or bronze_medal = c.user_id) as A group by contest_id - rank_num having num_group >= 3) as B) = 1 union select u.name, u.mail from contests c left join users u on c.gold_medal = u.user_id group by u.name, u.mail having count(contest_id) >= 3
select d.name,d.mail from (select distinct medal as user_id from (select medal, contest_id,lead(contest_id,1) over(partition by medal order by contest_id) as next_contest_id ,lead(contest_id,2) over(partition by medal order by contest_id) as next_2_contest_id from (select distinct contest_id,medal from (select contest_id, gold_medal as medal from Contests union all select contest_id, silver_medal as medal from Contests union all select contest_id, bronze_medal as medal from Contests)a)b)c where next_contest_id=contest_id+1 and next_2_contest_id=contest_id+2 union select distinct medal as user_id from (select medal, count(medal) as num from (select contest_id, gold_medal as medal from Contests)a group by medal having num>=3)b)c left join Users d on c.user_id=d.user_id
select distinct a.name, a.mail from users a, contests b, contests c, contests d where (a.user_id = b.gold_medal or a.user_id = b.silver_medal or a.user_id = b.bronze_medal) and (a.user_id = c.gold_medal or a.user_id = c.silver_medal or a.user_id = c.bronze_medal) and (a.user_id = d.gold_medal or a.user_id = d.silver_medal or a.user_id = d.bronze_medal) and b.contest_id <> c.contest_id and c.contest_id <> d.contest_id and b.contest_id <> d.contest_id and ((b.contest_id = c.contest_id-1 and c.contest_id = d.contest_id-1) or (a.user_id = b.gold_medal and b.gold_medal = c.gold_medal and c.gold_medal = d.gold_medal))
select distinct b.name,b.mail from (select a.user_id, contest_id - row_number() over(partition by user_id order by contest_id) as 'groupid' from Users a inner join Contests b on a.user_id = b.silver_medal or a.user_id = b.bronze_medal or a.user_id = b.gold_medal) a inner join Users b on a.user_id = b.user_id group by a.user_id , a.groupid having count(a.groupid) >= 3 union select distinct b.name,b.mail from Contests a inner join Users b on a.gold_medal = b.user_id group by a.gold_medal having count(a.gold_medal ) >= 3
select distinct name, mail from ( select name, mail, contest_id-(lag(contest_id,2) over (partition by medal order by contest_id)) as diff from ( select contest_id, gold_medal as medal from Contests as a group by 1,2 union all select contest_id, silver_medal as medal from Contests as a group by 1,2 union all select contest_id, bronze_medal as medal from Contests as a group by 1,2 ) as x inner join users as b on x.medal=b.user_id ) as y where diff=2 union select distinct name, mail from ( select gold_medal as id from Contests as a group by gold_medal having count(*)>=3 ) as x inner join Users as y on x.id=y.user_id
select distinct name, mail from ( select user_id,name, mail, A.contest_id - A.medal_order as 'grp' from ( select u.user_id, name, u.mail, c.contest_id, row_number() over(partition by u.user_id order by c.contest_id) 'medal_order' from users u inner join contests c on u.user_id = c.gold_medal or u.user_id = c.silver_medal or u.user_id = c.bronze_medal )A )B group by user_id, name, mail, grp having count(*) >=3 union select name , u.mail from users u inner join contests c on u.user_id = c.gold_medal group by u.name, u.mail having count(c.contest_id)>=3
select distinct name, mail from (select distinct u.name, u.mail from (select winner, grp, count(*) as consecutive_medals from ( select contest_id, winner, contest_id - row_number() over (partition by winner order by contest_id) as grp from (select contest_id, gold_medal as winner from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests) a ) b group by winner, grp) c inner join users u on u.user_id = c.winner where c.consecutive_medals >=3 union all select u.name, u.mail from (select gold_medal as winner, count(*) as gold from contests c group by gold_medal) c inner join users u on u.user_id = c.winner where gold>=3) w
select distinct name, mail from (select distinct u.name, u.mail from (select winner, grp, count(*) as consecutive_medals from ( select contest_id, winner, contest_id - row_number() over (partition by winner order by contest_id) as grp from (select contest_id, gold_medal as winner from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests) a order by winner, contest_id ) b group by winner, grp) c inner join users u on u.user_id = c.winner where c.consecutive_medals >=3 union all select u.name, u.mail from (select gold_medal as winner, count(*) as gold from contests c group by gold_medal) c inner join users u on u.user_id = c.winner where gold>=3) w
select distinct name, mail from( select users.*, if(lead(contest_id,1) over (partition by user_id order by contest_id)=contest_id+1 and lead(contest_id,2) over (partition by user_id order by contest_id)=contest_id+2,1,0 )as sign, sum(gold_medal=user_id) over (partition by user_id) as gold from users left join contests on gold_medal = user_id or silver_medal = user_id or bronze_medal = user_id ) cte where gold>=3 or sign=1
select distinct name, mail from( select users.*, lead(contest_id,2) over (partition by user_id order by contest_id)=contest_id+2 as sign, sum(gold_medal=user_id) over (partition by user_id) as gold from users left join contests on gold_medal = user_id or silver_medal = user_id or bronze_medal = user_id ) cte where gold>=3 or sign=1
select distinct temp.name,temp.mail from (select u.name, u.user_id, u.mail ,c.contest_id-row_number() over (partition by u.user_id order by c.contest_id) as grp from users u left join contests c on u.user_id=c.gold_medal or u.user_id=c.silver_medal or u.user_id=c.bronze_medal) temp group by temp.user_id,temp.grp having count(*)>=3 union select name, mail from users u inner join contests c on u.user_id=c.gold_medal group by u.user_id having count(c.contest_id)>=3
select distinct u.name, u.mail from contests c1 join contests c2 on c2.contest_id - c1.contest_id = 1 join contests c3 on c3.contest_id - c2.contest_id = 1 join users u on u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) union select distinct u.name, u.mail from (select gold_medal from contests group by 1 having count(*) >= 3) t join users u on t.gold_medal = u.user_id
select name, mail from ( select name, mail, contest_id - dense_rank() over(partition by u.user_id order by contest_id) as Con_diff from Users as u inner join Contests as c on u.user_id = c.gold_medal or u.user_id = c.silver_medal or u.user_id = c.bronze_medal ) as tmp group by name, mail,Con_diff HAVING COUNT(Con_diff) >=3 union select name, mail from ( select name, mail from Users as u1 inner join Contests as c1 on u1.user_id = c1.gold_medal GROUP BY name, mail, gold_medal HAVING COUNT(gold_medal) >=3 ) as tmpg
select name, mail from ( select name, mail, contest_id, lead(contest_id,2) over(partition by user_id order by contest_id) cons from contests c join users u on c.gold_medal = u.user_id or c.silver_medal = u.user_id or c.bronze_medal = u.user_id) f1 where cons = contest_id + 2 union select name, mail from contests c join users u on c.gold_medal = u.user_id group by user_id having count(user_id) >= 3
select name, mail from ( select user_id, name, mail, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, lag(contest_id, 2) over (partition by user_id order by contest_id) as prevprev from Users left join Contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal ) a group by user_id having sum(gold) >= 3 or sum(contest_id - prevprev = 2) >= 1
select name, mail from ( with tmp as (select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests), tmp2 as ( select * from tmp order by user_id, contest_id ) , tmp3 as ( select distinct t1.user_id from tmp2 t1 left join tmp2 t2 on t1.user_id = t2.user_id and t1.contest_id = t2. contest_id+1 left join tmp2 t3 on t2.user_id = t3.user_id and t2.contest_id = t3. contest_id+1 where t3.contest_id is not null ) select Users.name, Users.mail from tmp3 left join Users on tmp3.user_id = Users.user_id group by 1,2 union all select t2.name, t2.mail from ( select contest_id, gold_medal as user_id from Contests) t1 left join Users t2 on t1.user_id = t2.user_id group by 1,2 having count(*) >=3 ) t5 group by 1,2
select name, mail from Users join (select user_id from Users u join Contests c on u.user_id = c.gold_medal group by 1 having count(contest_id) >= 3 union select distinct user_id from Users u, Contests c1, Contests c2, Contests c3 where c1.contest_id + 1 = c2.contest_id and c2.contest_id + 1 = c3.contest_id and user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal)) t on Users.user_id = t.user_id
select name, mail from Users u join ((select distinct user_id from (select (contest_id - row_number() over(partition by a.user_id order by contest_id)) row_num, a.user_id from Contests join Users a on gold_medal = a.user_id or silver_medal = a.user_id or bronze_medal = a.user_id) as a group by user_id, row_num having count(*) >= 3) union (select distinct user_id from Contests join Users on gold_medal = user_id group by user_id having count(*) >= 3)) l on u.user_id = l.user_id
select name, mail from Users u join (with u as ( select contest_id, gold_medal as medal, "gold" as type from Contests union select contest_id, silver_medal as medal, "silver" as type from Contests union select contest_id, bronze_medal as medal, "bronze" as type from Contests) select medal from u where type="gold" group by medal having count(contest_id) >= 3 union select distinct m.medal from u f join u m join u l on (f.contest_id=m.contest_id-1 and f.contest_id=l.contest_id-2) and (f.medal=m.medal) and (f.medal=l.medal)) x on x.medal=u.user_id
select name, mail from Users u, Contests c group by user_id having sum(u.user_id = c.gold_medal) >= 3 union select u.name, u.mail from Users u, Contests c1, Contests c2, Contests c3 where u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) and c1.contest_id = c2.contest_id -1 and c2.contest_id = c3.contest_id -1
select name, mail from Users where user_id in ( select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >= 3 union all (with contest_and_medal as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests) select c1.user_id from contest_and_medal c1, contest_and_medal c2, contest_and_medal c3 where c1.contest_id - c2.contest_id = 1 and c2.contest_id - c3.contest_id = 1 and c1.user_id = c2.user_id and c1.user_id = c3.user_id))
select name, mail from Users where user_id in ( select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >= 3 union all (with contest_and_medal as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests) select distinct c1.user_id from contest_and_medal c1, contest_and_medal c2, contest_and_medal c3 where c1.contest_id - c2.contest_id = 1 and c2.contest_id - c3.contest_id = 1 and c1.user_id = c2.user_id and c1.user_id = c3.user_id))
select name, mail from Users where user_id in ( with contest_medal (contest_id, user_id) as ( select contest_id, gold_medal user_id from Contests union all select contest_id, silver_medal from Contests union all select contest_id, bronze_medal from Contests ) select distinct c1.user_id from contest_medal c1 inner join contest_medal c2 on c1.user_id = c2.user_id and c1.contest_id = c2.contest_id - 1 inner join contest_medal c3 on c1.user_id = c3.user_id and c1.contest_id = c3.contest_id - 2 union all select gold_medal from Contests group by gold_medal having(count(*)) > 2 )
select name, mail from Users where user_id in( with new_table as (select contest_id, 'gold_medal' as medal, gold_medal as user_id from Contests union all select contest_id, 'selver_medal' as medal, silver_medal as user_id from Contests union all select contest_id, 'bronze_medal' as medal, bronze_medal as user_id from Contests order by contest_id, case when medal = 'gold_medal' then 1 when medal = 'silver_medal' then 2 else 3 end) select distinct N1.user_id from new_table as N1 inner join new_table as N2 on N1.user_id = N2.user_id inner join new_table as N3 on N3.user_id = N1.user_id where N2.contest_id = N1.contest_id + 1 and N3.contest_id = N2.contest_id + 1 union select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >= 3)
select name, mail from Users, Contests where user_id = gold_medal group by name, mail having count(gold_medal) >= 3 union (with cs as ( select contest_id, gold_medal as user from Contests union all select contest_id, silver_medal as user from Contests union all select contest_id, bronze_medal as user from Contests) select name, mail from Users u, cs a, cs b, cs c where a.user = b.user and b.user = c.user and a.contest_id = b.contest_id - 1 and b.contest_id = c.contest_id - 1 and u.user_id = a.user)
select name, mail from users where user_id in (select distinct user_id from (select contest_id, user_id, count(case when medal = 'gold' then contest_id end) over (partition by user_id) as goldcount, lead(contest_id) over (partition by user_id order by contest_id) as ldcontest,lag(contest_id) over (partition by user_id order by contest_id) as lgcontest from (select contest_id, gold_medal as user_id, "gold" as medal from contests union all select contest_id, silver_medal as user_id, "silver" as medal from contests union all select contest_id, bronze_medal as user_id, "bronze" as medal from contests) as t) as t where goldcount >= 3 or (ldcontest = contest_id+1 and lgcontest = contest_id - 1))
select name, mail from users where user_id in (select distinct user_id from (select contest_id, user_id, medal, count(case when medal = 'gold' then contest_id end) over (partition by user_id) as goldcnt, lead(contest_id) over (partition by user_id order by contest_id) as ld, lag(contest_id) over (partition by user_id order by contest_id) as lg from (select contest_id, user_id, medal from (select contest_id, gold_medal as user_id, "gold" as medal from contests union all select contest_id, silver_medal as user_id, "silver" as medal from contests union all select contest_id, bronze_medal as user_id, "bronze" as medal from contests) as t) as t) as t where goldcnt >= 3 or (contest_id = lg+1 and contest_id= ld-1 ))
select name, mail from users where user_id in (select gold_medal as cand_id from contests group by gold_medal having count(contest_id)>=3) or user_id in (select distinct cand_id from (select t.cand_id, t.contest_id, t.contest_id-rank()over(partition by cand_id order by contest_id) as diff from (select contest_id, silver_medal as cand_id from contests union all select contest_id, bronze_medal as cand_id from contests union all select contest_id, gold_medal as cand_id from contests) t) t2 group by cand_id,diff having count(diff)>=3)
select name, mail from users, contests where user_id = gold_medal group by user_id having count(user_id) >= 3 union select name, mail from users, contests c1, contests c2, contests c3 where user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) and c1.contest_id-1 = c2.contest_id and c2.contest_id-1 = c3.contest_id
select name,mail from (select distinct(c1.medal) from ( select contest_id,silver_medal as medal from contests union all select contest_id,gold_medal as medal from contests union all select contest_id,bronze_medal as medal from contests ) c1, (select contest_id,silver_medal as medal from contests union all select contest_id,gold_medal as medal from contests union all select contest_id,bronze_medal as medal from contests) c2, (select contest_id,silver_medal as medal from contests union all select contest_id,gold_medal as medal from contests union all select contest_id,bronze_medal as medal from contests) c3 where (c1.contest_id,c1.medal) = (c2.contest_id-1,c2.medal) and (c1.contest_id,c1.medal) = (c3.contest_id-2,c3.medal) union select gold_medal from contests group by 1 having count(*) > 2) a1 inner join users u on a1.medal = u.user_id
select name,mail from( select name, mail, sum(gold_medal = user_id) goldwon from contests c, users u where u.user_id = c.gold_medal group by user_id having goldwon >=3 )a union select u.name, u.mail from Users u , Contests c1 , Contests c2, Contests c3 where u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) and c1.contest_id-1 = c2.contest_id and c2.contest_id-1 = c3.contest_id
select t2.name, t2.mail from (select distinct userid from ( select userid,contest_id,lead(contest_id, 2) over(partition by userid order by contest_id) as lead3 from (select contest_id, gold_medal as userid from contests union all select contest_id, silver_medal as userid from contests union all select contest_id, bronze_medal as userid from contests)a )b where lead3 is not null and lead3-contest_id = 2 union distinct select distinct userid from ( select gold_medal as userid, count(*) from contests group by gold_medal having count(*)>=3)a)t1, users t2 where t1.userid = t2.user_id
select tb.name name, tb.mail mail from (select u.name, u.mail, (c.contest_id - row_number() over(partition by u.user_id order by c.contest_id )) as num from users u left join contests c on u.user_id = c.gold_medal or u.user_id = c.silver_medal or u.user_id = c.bronze_medal ) tb group by tb.name, tb.mail, tb.num having count(tb.num) >=3 union select name, mail from ( select name, mail, count(*) as cnt from contests left join users on contests.gold_medal=users.user_id group by user_id having cnt>=3 ) as temp
select tmp.name, tmp.mail from (select c.contest_id, u.user_id, u.name, u.mail, dense_rank() over (partition by u.user_id order by c.contest_id) as rnk from users u inner join contests c on u.user_id = c.gold_medal or u.user_id = c.silver_medal or u.user_id = c.bronze_medal ) as tmp group by 1,2, (tmp.contest_id - rnk) having count(tmp.contest_id - rnk) >= 3 union select tmp.name, tmp.mail from (select c.contest_id, u.user_id, u.name, u.mail from users u inner join contests c on u.user_id = c.gold_medal ) as tmp group by 1, 2 having count(contest_id) >=3
select tmp.name, tmp.mail from (select c.contest_id, u.user_id, u.name, u.mail, dense_rank() over (partition by u.user_id order by c.contest_id) as rnk from users u inner join contests c on u.user_id = c.gold_medal or u.user_id = c.silver_medal or u.user_id = c.bronze_medal ) as tmp group by tmp.name, tmp.mail,(tmp.contest_id - rnk) having count(tmp.contest_id - rnk) >= 3 union select tmp.name, tmp.mail from (select c.contest_id, u.user_id, u.name, u.mail from users u inner join contests c on u.user_id = c.gold_medal ) as tmp group by tmp.name, tmp.mail having count(contest_id) >=3
select u.name, u.mail from Contests as c join Users as u on c.gold_medal = u.user_id group by gold_medal having count(contest_id)>=3 union select t2.name,t2.mail from (select user_id,mail,name, if((lag(contest_id,1) over (partition by user_id order by contest_id) = contest_id-1) and (lead(contest_id,1) over (partition by user_id order by contest_id) = contest_id+1), 1, 0) as flag from (select c.contest_id, u.user_id, u.mail,u.name from Contests as c join Users as u on c.gold_medal = u.user_id or c.silver_medal = u.user_id or c.bronze_medal = u.user_id)t1)t2 where flag = 1 group by user_id
select u.name, u.mail from Contests c, Users u where u.user_id = c.gold_medal group by u.user_id having count(contest_id)>=3 union select u.name, u.mail from Users u , Contests c1 , Contests c2, Contests c3 where u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) and c1.contest_id = c2.contest_id-1 and c2.contest_id = c3.contest_id-1
select u.name, u.mail from Contests c, Users u where u.user_id = c.gold_medal group by u.user_id having count(contest_id)>=3 union select u.name, u.mail from Users u , Contests c1 , Contests c2, Contests c3 where u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) and c1.contest_id+1 = c2.contest_id and c2.contest_id+1 = c3.contest_id
select u.name, u.mail from Contests c, Users u where u.user_id = c.gold_medal group by u.user_id having count(contest_id)>=3 union select u.name, u.mail from Users u , Contests c1 , Contests c2, Contests c3 where u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) and c1.contest_id-1 = c2.contest_id and c2.contest_id-1 = c3.contest_id
select u.name, u.mail from Users as u join Contests as c on u.user_id = c.gold_medal group by u.user_id having count(c.contest_id)>=3 union select u.name, u.mail from Users as u join contests as c1,contests as c2, contests as c3 where u.user_id in (c1.gold_medal,c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal,c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal,c3.silver_medal, c3.bronze_medal) and c1.contest_id= c2.contest_id-1 and c2.contest_id= c3.contest_id-1
select u.name, u.mail from Users u, Contests c1, Contests c2, Contests c3 where c1.contest_id+1 = c2.contest_id and c2.contest_id+1 = c3.contest_id and u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) union select u.name, u.mail from Users u join Contests c on c.gold_medal = u.user_id group by u.user_id having count(contest_id) >= 3
select u.name, u.mail from contests c join users u on c.gold_medal=u.user_id group by u.user_id having count(u.user_id)>=3 union select u.name, u.mail from Contests c1, Contests c2, Contests c3, users u where u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) and c1.contest_id +1 = c2.contest_id and c2.contest_id +1=c3.contest_id
select u.name, u.mail from users u, (select t1.gold_medal user_id from contests t1, contests t2, contests t3 where t2.contest_id = t1.contest_id + 1 and t3.contest_id = t2.contest_id + 1 and (t1.gold_medal = t2.gold_medal or t1.gold_medal = t2.silver_medal or t1.gold_medal = t2.bronze_medal) and (t1.gold_medal = t3.gold_medal or t1.gold_medal = t3.silver_medal or t1.gold_medal = t3.bronze_medal) union select t1.silver_medal user_id from contests t1, contests t2, contests t3 where t2.contest_id = t1.contest_id + 1 and t3.contest_id = t2.contest_id + 1 and (t1.silver_medal = t2.gold_medal or t1.silver_medal = t2.silver_medal or t1.silver_medal = t2.bronze_medal) and (t1.silver_medal = t3.gold_medal or t1.silver_medal = t3.silver_medal or t1.silver_medal = t3.bronze_medal) union select t1.bronze_medal user_id from contests t1, contests t2, contests t3 where t2.contest_id = t1.contest_id + 1 and t3.contest_id = t2.contest_id + 1 and (t1.bronze_medal = t2.gold_medal or t1.bronze_medal = t2.silver_medal or t1.bronze_medal = t2.bronze_medal) and (t1.bronze_medal = t3.gold_medal or t1.bronze_medal = t3.silver_medal or t1.bronze_medal = t3.bronze_medal) union select gold_medal user_id from contests group by gold_medal having count(*) > 2) t where u.user_id = t.user_id
select u.name,u.mail from users u join contests c ON u.user_id = c.gold_medal group by gold_medal having count(contest_id) >= 3 union select u.name, u.mail from users u,contests c1,contests c2,contests c3 where u.user_id IN (c1.gold_medal,c1.silver_medal,c1.bronze_medal) and u.user_id IN (c2.gold_medal,c2.silver_medal,c2.bronze_medal) and u.user_id IN (c3.gold_medal,c3.silver_medal,c3.bronze_medal) and c1.contest_id = c2.contest_id+1 and c2.contest_id = c3.contest_id+1
select us.name as name, us.mail as mail from users us, contests cn where us.user_id = cn.gold_medal group by us.user_id having count(cn.contest_id) >= 3 union select us.name as name, us.mail as mail from users us, contests cn1,contests cn2,contests cn3 where us.user_id in (cn1.gold_medal,cn1.silver_medal,cn1.bronze_medal) and us.user_id in (cn2.gold_medal,cn2.silver_medal,cn2.bronze_medal) and us.user_id in (cn3.gold_medal,cn3.silver_medal,cn3.bronze_medal) and cn1.contest_id-1 = cn2.contest_id and cn2.contest_id-1 = cn3.contest_id
with C AS( SELECT CASE WHEN (GOLD_MEDAL = LAG(GOLD_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR GOLD_MEDAL = LAG(SILVER_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR GOLD_MEDAL = LAG(BRONZE_MEDAL,1)OVER(ORDER BY CONTEST_ID)) AND (GOLD_MEDAL = LEAD(GOLD_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR GOLD_MEDAL = LEAD(SILVER_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR GOLD_MEDAL = LEAD(BRONZE_MEDAL,1)OVER(ORDER BY CONTEST_ID)) THEN GOLD_MEDAL ELSE NULL END AS USER_ID1, CASE WHEN (SILVER_MEDAL = LAG(GOLD_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR SILVER_MEDAL = LAG(SILVER_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR SILVER_MEDAL = LAG(BRONZE_MEDAL,1)OVER(ORDER BY CONTEST_ID)) AND (SILVER_MEDAL = LEAD(GOLD_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR SILVER_MEDAL = LEAD(SILVER_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR SILVER_MEDAL = LEAD(BRONZE_MEDAL,1)OVER(ORDER BY CONTEST_ID)) THEN SILVER_MEDAL ELSE NULL END AS USER_ID2, CASE WHEN (BRONZE_MEDAL = LAG(GOLD_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR BRONZE_MEDAL = LAG(SILVER_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR BRONZE_MEDAL = LAG(BRONZE_MEDAL,1)OVER(ORDER BY CONTEST_ID)) AND (BRONZE_MEDAL = LEAD(GOLD_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR BRONZE_MEDAL = LEAD(SILVER_MEDAL,1)OVER(ORDER BY CONTEST_ID) OR BRONZE_MEDAL = LEAD(BRONZE_MEDAL,1)OVER(ORDER BY CONTEST_ID)) THEN BRONZE_MEDAL ELSE NULL END AS USER_ID3 FROM CONTESTS ), UNI AS( SELECT USER_ID1 AS USER_ID FROM C WHERE USER_ID1 IS NOT NULL UNION ALL SELECT USER_ID2 AS USER_ID FROM C WHERE USER_ID2 IS NOT NULL UNION ALL SELECT USER_ID3 AS USER_ID FROM C WHERE USER_ID3 IS NOT NULL ) ,CAN AS( SELECT DISTINCT(USER_ID) AS USER_ID FROM UNI UNION SELECT DISTINCT(gold_medal) AS USER_ID FROM Contests GROUP BY GOLD_MEDAL HAVING COUNT(*)>=3 ) SELECT U.NAME, U.MAIL FROM CAN C JOIN USERS U ON C.USER_ID = U.USER_ID
with CONT as ( SELECT U.USER_ID, U.NAME, U.MAIL, C.CONTEST_ID FROM USERS U JOIN CONTESTS C ON ( U.USER_ID = C.GOLD_MEDAL OR U.USER_ID = C.SILVER_MEDAL OR U.USER_ID = C.BRONZE_MEDAL) ), FIRST_COND AS ( SELECT C.USER_ID, C.NAME, C.MAIL FROM CONT C JOIN CONT C1 ON (C.USER_ID = C1.USER_ID AND C.CONTEST_ID = C1.CONTEST_ID+1) JOIN CONT C2 ON (C1.USER_ID = C2.USER_ID AND C1.CONTEST_ID = C2.CONTEST_ID +1) GROUP BY 1 ), SECOND_COND AS (SELECT USER_ID, NAME, MAIL FROM ( SELECT U.USER_ID, U.NAME, U.MAIL, count(C.CONTEST_ID) as cnt FROM USERS U JOIN CONTESTS C ON ( U.USER_ID = C.GOLD_MEDAL) GROUP BY 1 )X WHERE X.CNT >=3 ) SELECT F.NAME, F.MAIL FROM FIRST_COND F UNION SELECT S.NAME, S.MAIL FROM SECOND_COND S
with ContestLong as( select contest_id, gold_medal as medal from Contests union select contest_id, silver_medal as medal from Contests union select contest_id, bronze_medal as medal from Contests ), WindowFunction as( select contest_id, medal as user_id, rank() over( partition by medal order by contest_id ) rank_medal from ContestLong ), CrossJoin as ( select w1.user_id, w1.contest_id id1, w2.contest_id id2 from WindowFunction w1 , WindowFunction w2 where w1.user_id = w2.user_id and w1.rank_medal = w2.rank_medal + 3-1 and w1.contest_id = w2.contest_id + 3-1 ) select name, mail from ( select distinct user_id from CrossJoin union select gold_medal as user_id from Contests group by gold_medal having count(distinct contest_id) >= 3 ) t0 left join Users using (user_id)
with Union_table as ( select contest_id, gold_medal as medal_winnder from Contests union all select contest_id, silver_medal as medal_winnder from Contests union all select contest_id, bronze_medal as medal_winnder from Contests ) select name, mail from Users where user_id in (select distinct medal_winnder from (select *, contest_id - row_number() over (Partition by medal_winnder order by contest_id ) as group_id from Union_table ) A group by medal_winnder, group_id having count(group_id)>=3) or user_id in (select distinct gold_medal from Contests group by gold_medal having count(1) >=3 )
with a as ( select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests ) select distinct u.name, u.mail from (select distinct a3.user_id from a a1 join a a2 on a1.contest_id + 1 = a2.contest_id and a1.user_id = a2.user_id join a a3 on a2.user_id = a3.user_id and a2.contest_id + 1 = a3.contest_id group by 1 union all select gold_medal as userid from contests group by 1 having count(*) >= 3) t join users u on t.user_id = u.user_id
with a as ( select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests ), b as ( select *, row_number() over (partition by user_id order by contest_id) as rn from a ), c as ( select user_id from b group by user_id, contest_id - rn having count(*) >= 3 union all select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct u.name, u.mail from c join users u on c.user_id = u.user_id
with a as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests), b as ( select user, contest_id, row_number()over(partition by user order by contest_id) as num from a), c as ( select user as user_id from b group by 1, contest_id - num having count(*) >=3 union all select gold_medal as user_id from contests group by 1 having count(*) >=3) select distinct name, mail from users u join c on u.user_id = c.user_id
with a as ( select gold_medal as user_id, contest_id from contests union all select silver_medal as user_id, contest_id from contests union all select bronze_medal as user_id, contest_id from contests ) select u.name, u.mail from users u join ( select distinct a1.user_id from ( select a.user_id, a.contest_id - rank() over (partition by a.user_id order by a.contest_id) as diff from a ) a1 group by a1.user_id, diff having count(*) >= 3 union select gold_medal as user_id from contests group by gold_medal having count(contest_id) >= 3 ) b on u.user_id = b.user_id
with a as (SELECT userid,contest_id as g FROM (SELECT gold_medal as userid,contest_id FROM Contests UNION SELECT silver_medal as userid,contest_id FROM Contests UNION SELECT bronze_medal as userid,contest_id FROM Contests) t ORDER BY userid,contest_id) SELECT u.name, u.mail FROM Users u RIGHT JOIN ( SELECT gold_medal as users FROM Contests GROUP BY gold_medal HAVING count(gold_medal)>=3 UNION SELECT distinct a1.userid as users FROM a as a1, a as a2, a as a3 where a1.userid = a2.userid and a2.userid= a3.userid and a1.g = a2.g-1 and a2.g = a3.g-1 and a1.userid not in (SELECT userid FROM a group by userid having count(userid)<3 ) ) as s ON s.users = u.user_id
with a as (select contest_id, gold_medal as 'id' from contests union select contest_id, silver_medal as 'id' from contests union select contest_id, bronze_medal as 'id' from contests order by 1, 2) select name, mail from users where user_id in (select gold_medal as 'id' from contests group by 1 having count(*) >= 3) or user_id in (select distinct a1.id from a a1 cross join a a2 cross join a a3 where a1.id = a2.id and a2.id = a3.id and a1.contest_id + 1 = a2.contest_id and a2.contest_id + 1 = a3.contest_id)
with a as (select contest_id, gold_medal as 'id' from contests union select contest_id, silver_medal as 'id' from contests union select contest_id, bronze_medal as 'id' from contests order by 1, 2) select name, mail from users where user_id in (select gold_medal as 'id' from contests group by 1 having count(*) >= 3) or user_id in (select distinct a1.id from a a1, a a2, a a3 where a1.id = a2.id and a2.id = a3.id and a1.contest_id + 1 = a2.contest_id and a2.contest_id + 1 = a3.contest_id)
with a as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests order by 2, 1), b as (select user_id, contest_id, lead(contest_id) over (partition by user_id) as second, lead(contest_id, 2) over (partition by user_id) as third from a), c as (select distinct user_id from b where contest_id = second - 1 and second = third - 1 union select gold_medal from contests group by 1 having count(gold_medal) >= 3) select u.name, u.mail from c inner join Users as u on u.user_id = c.user_id
with a as (select gold_medal from Contests group by gold_medal having count(contest_id)>=3), b as( select contest_id,gold_medal as user_id from Contests union all select contest_id,silver_medal from Contests union all select contest_id,bronze_medal from Contests), c as( select user_id, contest_id-row_number()over(partition by user_id order by contest_id)as diff from b) select name,mail from Users where user_id in (select user_id from c group by user_id,diff having count(diff)>=3) or user_id in (select gold_medal from a)
with all_gold as (select distinct gold_medal as user_id from contests group by gold_medal having count(contest_id)>2), all_medal as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests) select distinct u.name, u.mail from (select distinct m.user_id from all_medal m, all_medal n, all_medal l where m.user_id = n.user_id and n.user_id = l.user_id and m.contest_id+1 = n.contest_id and n.contest_id+1 = l.contest_id union all select distinct user_id from all_gold )a left join users u on a.user_id = u.user_id
with allothers as( select contest_id , gold_medal from Contests union all select contest_id , silver_medal from Contests union all select contest_id , bronze_medal from Contests ), group2 as ( select distinct(gold_medal) from ( select contest_id , gold_medal, contest_id -row_number() over (partition by gold_medal order by contest_id asc) as diff from allothers order by gold_medal,contest_id asc)g group by gold_medal, diff having count(gold_medal) >=3 union select gold_medal from contests group by gold_medal having count(gold_medal)>=3) select name, mail from Users where user_id in (select * from group2)
with any_medal as ( with cte as ( select contest_id, gold_medal as champ from Contests union all select contest_id, silver_medal as champ from Contests union all select contest_id, bronze_medal as champ from Contests) select distinct champ from cte where (contest_id + 1, champ) in (select * from cte) and (contest_id + 2, champ) in (select * from cte)) , gold_medel as ( select gold_medal as champ from Contests group by gold_medal having count(gold_medal) >= 3 ) select name, mail from Users b right join ( select * from any_medal union select * from gold_medel) a on b.user_id = a.champ
with any_medals as ( select contest_id, gold_medal as winner_id from contests union all select contest_id, silver_medal as winner_id from contests union all select contest_id, bronze_medal as winner_id from contests ), gold_medals as ( select contest_id, gold_medal from contests ) select u.name, u.mail from gold_medals as gm left join Users as u on gm.gold_medal = u.user_id group by gm.gold_medal having count(distinct contest_id) >=3 union select distinct u.name, u.mail from any_medals am1, any_medals am2, any_medals am3, users u where am1.contest_id + 1 = am2.contest_id and am2.contest_id + 1 = am3.contest_id and am1.winner_id = am2.winner_id and am2.winner_id = am3.winner_id and am1.winner_id = u.user_id
with any_medals as ( select contest_id, gold_medal as winner_id from contests union all select contest_id, silver_medal as winner_id from contests union all select contest_id, bronze_medal as winner_id from contests ), gold_medals as ( select contest_id, gold_medal from contests ) select u.name, u.mail from gold_medals as gm left join Users as u on gm.gold_medal = u.user_id group by gm.gold_medal having count(distinct contest_id) >=3 union select distinct u.name, u.mail from any_medals as am1 inner join any_medals as am2 on am1.contest_id + 1 = am2.contest_id and am1.winner_id = am2.winner_id inner join any_medals as am3 on am2.contest_id + 1 = am3.contest_id and am2.winner_id = am3.winner_id join users as u on am1.winner_id = u.user_id
with base as ( select contest_id, 'gold' as medal, gold_medal as player from Contests union all select contest_id, 'silver' as medal, silver_medal as player from Contests union all select contest_id, 'bronze' as medal, bronze_medal as player from Contests ), p2 as ( select player, sum(case when medal = 'gold' then 1 else 0 end) as n_gold from base group by 1 having sum(case when medal = 'gold' then 1 else 0 end) >= 3), p3 as ( select b.contest_id, b.player, p.gold_medal as prev_gold, p.silver_medal as prev_silver, p.bronze_medal as prev_bronze, n.gold_medal as next_gold, n.silver_medal as next_silver, n.bronze_medal as next_bronze, case when b.player = p.gold_medal then 1 else 0 end as a, case when b.player = p.silver_medal then 1 else 0 end as b, case when b.player = p.bronze_medal then 1 else 0 end as c, case when b.player = n.gold_medal then 1 else 0 end as d, case when b.player = n.silver_medal then 1 else 0 end as e, case when b.player = n.bronze_medal then 1 else 0 end as f from base b left outer join Contests p on b.contest_id = p.contest_id + 1 left outer join Contests n on b.contest_id+1 = n.contest_id ), idLs as ( select distinct player from p3 where a+b+c+d+e+f >= 2 union select distinct player from p2 ) select name,mail from users where user_id in ( select player from idLs)
with base as( select contest_id, gold_medal as winner, 'g' as flag from contests union select contest_id, silver_medal as winner, 's' as flag from contests union select contest_id, bronze_medal as winner, 'b' as flag from contests order by 1 ), seq as( select contest_id, winner, flag, dense_rank() over(partition by winner order by contest_id) as seq from base ), start_position as( select contest_id, winner, flag, seq, contest_id - seq as start_position from seq ), consecutive_winner as( select distinct winner from (select winner, count(*) as consecutive_cnt from start_position group by start_position, winner) a where consecutive_cnt >= 3 ), gold_r as ( select winner from base where flag = 'g' group by winner having count(*) >= 3 ) select name, mail from users where user_id in (select * from consecutive_winner) or user_id in (select * from gold_r)
with base as( select gold_medal as medal, contest_id from contests union select silver_medal as medal, contest_id from contests union select bronze_medal as medal, contest_id from contests order by medal, contest_id ), consec_winners as( select distinct b1.medal as user_id from base b1, base b2, base b3 where b1.medal = b2.medal and b2.medal = b3.medal and b1.contest_id = b2.contest_id - 1 and b2.contest_id = b3.contest_id - 1 ), gold_winners as( select user_id from( select gold_medal as user_id, count(distinct contest_id) as count_gold from contests group by gold_medal ) sub where count_gold>=3 ) select name, mail from users where user_id in (select user_id from consec_winners) or user_id in (select user_id from gold_winners)
with c as ( select contest_id,gold_medal as user from contests union all select contest_id,silver_medal as user from contests union all select contest_id,bronze_medal as user from contests ), cte as ( select distinct c1.user from c as c1 join c c2 on c1.user=c2.user and c1.contest_id=c2.contest_id-1 join c c3 on c2.user=c3.user and c2.contest_id=c3.contest_id-1 union select gold_medal as user from contests group by gold_medal having count(contest_id)>=3) select name,mail from users join cte on users.user_id=cte.user
with c as (select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ) select distinct name, mail from users u, c c1, c c2, c c3 where u.user_id=c1.user_id and u.user_id=c2.user_id and u.user_id=c3.user_id and c1.contest_id=c2.contest_id + 1 and c2.contest_id=c3.contest_id + 1 union select name, mail from users u, contests c where u.user_id=c.gold_medal group by u.user_id having count(*) >= 3
with c1 as ( select medal from ( select contest_id, medal, lead(contest_id,2) over(partition by medal order by contest_id) as nx from ( select contest_id, gold_medal as medal from Contests union all select contest_id, silver_medal as medal from Contests union all select contest_id, bronze_medal as medal from Contests ) sub1 )sub2 where nx - contest_id = 2), c2 as (select gold_medal as medal from contests group by gold_medal having count(gold_medal) >= 3) select u.name, u.mail from users u inner join ( select c1.medal from c1 union select c2.medal from c2 ) s on u.user_id = s.medal
with c1 as (select contest_id, gold_medal as id from contests union all select contest_id, silver_medal as id from contests union all select contest_id, bronze_medal as id from contests), c2 as (select contest_id, id, row_number() over(partition by id order by contest_id) as rnk from c1), c3 as (select id from c2 group by id, contest_id - rnk having count(*) >= 3 union all select gold_medal from contests group by 1 having count(*) >= 3) select distinct name, mail from users join c3 on c3.id = users.user_id
with c1 as (select u.user_id, c.contest_id from Users u join Contests c on u.user_id = c.gold_medal union all select u.user_id, c.contest_id from Users u join Contests c on u.user_id = c.silver_medal union all select u.user_id, c.contest_id from Users u join Contests c on u.user_id = c.bronze_medal), c2 as (select user_id,contest_id, ifnull(lead(contest_id,2) over(partition by user_id order by contest_id),0) as next_2 from c1 order by user_id,contest_id), c3 as (select distinct user_id from c2 where (next_2 - contest_id) =2), c4 as (select gold_medal as id from Contests group by gold_medal having count(gold_medal) >= 3) select name, mail from Users where user_id in (select user_id from c3) or user_id in (select id from c4)
with cond1 as (select distinct user_id from (select u.user_id, u.name, c.contest_id, lead(c.contest_id, 2) over (partition by u.user_id order by c.contest_id) as 3nd_medal, (cast(c.contest_id as UNSIGNED) + 2) as seq_3 from Users u join Contests c on c.gold_medal = u.user_id or c.silver_medal = u.user_id or c.bronze_medal = u.user_id order by 2,3) sub where 3nd_medal = seq_3), cond2 as (select gold_medal from Contests group by 1 having count(gold_medal) >= 3 ) select u.name, u.mail from (select * from cond1 union select * from cond2) sub1 join Users u on sub1.user_id = u.user_id
with condition_one as ( select distinct user_id from ( select distinct contest_id, user_id, lag(contest_id, 1) over(partition by user_id ORDER BY contest_id) as pp1, lag(contest_id, 2) over(partition by user_id ORDER BY contest_id) as pp2 from ( select contest_id, gold_medal user_id from contests union select contest_id, silver_medal user_id from contests union select contest_id, bronze_medal user_id from contests ) a ) b where contest_id = pp1 + 1 and contest_id = pp2 + 2 ), condition_two as ( select distinct gold_medal user_id from contests group by gold_medal having count(contest_id)>=3) select name, mail from users where user_id in (select * from condition_one) or user_id in (select * from condition_two)
with cons_id as ( select *, contest_id-lag(contest_id,2)over(partition by user_id order by contest_id ) as second_lag, contest_id-lag(contest_id,1)over(partition by user_id order by contest_id ) as first_lag from (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests ) b ) select name,mail from users where user_id in (select gold_medal from contests group by gold_medal having count(distinct contest_id)>=3) or user_id in (select distinct user_id from cons_id where first_lag=1 and second_lag=2)
with consecutive as( select *, lead(contest_id,2)over(partition by medal order by contest_id) contest_id_led from( select contest_id, gold_medal as medal from Contests union select contest_id, silver_medal as medal from Contests union select contest_id, bronze_medal as medal from Contests )a ) select name, mail from Users join consecutive on user_id = medal where contest_id_led - contest_id = 2 union select name, mail from Contests join Users on gold_medal = user_id group by gold_medal having count(gold_medal) >=3
with cont as ( select contest_id, gold_medal as user_id from Contests union select contest_id, silver_medal as user_id from Contests union select contest_id, bronze_medal as user_id from Contests ) select name, mail from users where user_id in ( select distinct c1.user_id from cont c1, cont c2, cont c3 where c1.contest_id + 1 = c2.contest_id and c2.contest_id + 1 = c3.contest_id and c1.user_id = c2.user_id and c2.user_id = c3.user_id union select gold_medal as user_id from contests group by gold_medal having count(*) >=3)
with contest_and_medal as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests) select name,mail from Users where user_id in (select gold_medal FROM Contests c group by gold_medal having count(0) >= 3) or user_id in (select distinct c1.user_id from contest_and_medal c1, contest_and_medal c2, contest_and_medal c3 WHERE c1.contest_id + 1 = c2.contest_id and c2.contest_id + 1 = c3.contest_id and c1.user_id = c2.user_id and c2.user_id = c3.user_id)
with contest_unpivot as ( select contest_id,type, contestant_id from( select contest_id,'gold' as type ,gold_medal as contestant_id from Contests union all select contest_id,'silver' as type ,silver_medal as contestant_id from Contests union all select contest_id,'bronze' as type ,bronze_medal as contestant_id from Contests) a ), three_gold_cons as ( select contestant_id from contest_unpivot where type = 'gold' group by contestant_id having count(type) >2 union all select distinct contestant_id from (select contestant_id,contest_id as curr, lag(contest_id,2) over(partition by contestant_id order by contest_id) as prev_2 from contest_unpivot order by contestant_id, contest_id ) a where curr-prev_2=2 ) select distinct u.name,u.mail from users u inner join three_gold_cons w on u.user_id = w.contestant_id
with contest_unpivot as ( select u.name,u.mail, a.contest_id,a.type,row_number() over (partition by a.contestant_id order by a.contest_id ) as row_num from( select contest_id,'gold' as type ,gold_medal as contestant_id from Contests union all select contest_id,'silver' as type ,silver_medal as contestant_id from Contests union all select contest_id,'bronze' as type ,bronze_medal as contestant_id from Contests) a inner join users u on u.user_id =a.contestant_id ) select u.name,u.mail from contest_unpivot u group by name,mail,contest_id-row_num having count(*) >=3 union select u.name,u.mail from contest_unpivot u where type='gold' group by name,mail having count(type)>=3
with contest_view as ( select * from ( select c.gold_medal as user, c.contest_id from Contests c union all select c.silver_medal as user, c.contest_id from Contests c union all select c.bronze_medal as user, c.contest_id from Contests c) t order by t.user ), gold_contest_view as ( select distinct c.gold_medal, count(c.contest_id) from Contests c group by c.gold_medal having count(c.contest_id) >=3 ) select distinct t.* from( select distinct u.name, u.mail from contest_view c left join Users u on c.user = u.user_id where (c.contest_id + 1 in (select c1.contest_id from contest_view c1 where c1.user = c.user) and c.contest_id in (select c1.contest_id from contest_view c1 where c1.user = c.user) and c.contest_id-1 in (select c1.contest_id from contest_view c1 where c1.user = c.user)) union all select distinct u.name, u.mail from gold_contest_view gc left join Users u on gc.gold_medal = u.user_id) t
with contests_union as ( select contest_id , gold_medal as user_id , 'gold' as category from Contests union select contest_id , silver_medal as user_id , 'silver' as category from Contests union select contest_id , bronze_medal as user_id , 'bronze' as category from Contests order by contest_id ) select user.name as name ,user.mail as mail from Users user join( select user_id from( select gold_medal as user_id ,count(contest_id) as gold from Contests group by user_id having gold >= 3 ) A union select user_id from( select user_id ,contest_id ,coalesce(lead(contest_id,1) over (partition by user_id order by contest_id),0) as lead_1 ,coalesce(lead(contest_id,2) over (partition by user_id order by contest_id),0) as lead_2 from contests_union ) C where (contest_id+1)=lead_1 and (contest_id+2=lead_2) ) D on user.user_id = D.user_id
with contests_union as ( select contest_id , gold_medal as user_id , 'gold' as category from Contests union select contest_id , silver_medal as user_id , 'silver' as category from Contests union select contest_id , bronze_medal as user_id , 'bronze' as category from Contests order by contest_id ) select user.name as name ,user.mail as mail from Users user join( select user_id from( select gold_medal as user_id ,count(contest_id) as gold from Contests group by user_id having gold >= 3 ) A union select user_id from( select user_id ,contest_id ,coalesce(lead(contest_id,1) over (partition by user_id),0) as lead_1 ,coalesce(lead(contest_id,2) over (partition by user_id),0) as lead_2 from contests_union ) C where (contest_id+1)=lead_1 and (contest_id+2=lead_2) ) D on user.user_id = D.user_id
with contesttable as( select u.name, u.mail, c.contest_id, case when c.gold_medal=u.user_id then 1 else 0 end as gold, case when (c.gold_medal=u.user_id or c.silver_medal=u.user_id or c.bronze_medal=u.user_id) then 1 else 0 end as medal from users as u join contests as c on c.gold_medal=u.user_id or c.silver_medal=u.user_id or c.bronze_medal=u.user_id order by u.name, u.mail, c.contest_id ) select name, mail from contesttable group by name, mail having sum(gold)>=3 union select name, mail from( select name, mail, contest_id-row_number()over(partition by name,mail order by contest_id) as grp from contesttable )a group by name,mail, grp having count(*)>=3
with contesttable as( select u.name, u.mail, c.contest_id, case when c.gold_medal=u.user_id then 1 else 0 end as gold, case when c.silver_medal=u.user_id then 1 else 0 end as silver, case when c.bronze_medal=u.user_id then 1 else 0 end as bronze, contest_id-row_number()over(partition by u.name, u.mail order by c.contest_id) as grp from users as u join contests as c on c.gold_medal=u.user_id or c.silver_medal=u.user_id or c.bronze_medal=u.user_id order by u.name, u.mail, c.contest_id ) select distinct name, mail from( select name, mail, sum(gold) over(partition by name,mail) as goldsum, sum(gold+silver+bronze)over(partition by name,mail, grp) as medalsum from contesttable )a where goldsum>=3 or medalsum>=3
with criteria_1 as ( select medal from ( select agg.medal , agg.contest_id , row_number() over(partition by agg.medal order by agg.contest_id) as req_rank from ( select gold_medal as medal, contest_id from contests union all select silver_medal as medal, contest_id from contests union all select bronze_medal as medal, contest_id from contests ) agg ) FINAL group by medal, contest_id - req_rank having count(*) >= 3 ) , criteria_2 as ( select gold_medal as medal from contests group by 1 having count(distinct contest_id) > 2 ) select u.name , u.mail from ( select medal from criteria_1 union select medal from criteria_2 ) agg inner join users u on u.user_id = agg.medal
with ct as ( select gold_medal as user_id from contests group by gold_medal having count(*) > 2 union distinct select u.user_id from users u, contests c1, contests c2, contests c3 where u.user_id in (c1.gold_medal, c1.silver_medal, c1.bronze_medal) and u.user_id in (c2.gold_medal, c2.silver_medal, c2.bronze_medal) and u.user_id in (c3.gold_medal, c3.silver_medal, c3.bronze_medal) and c1.contest_id = c2.contest_id + 1 and c2.contest_id = c3.contest_id + 1 ) select name, mail from users join ct on users.user_id = ct.user_id
with cte as ( (select contest_id ,gold_medal as medal from Contests ) union all (select contest_id ,silver_medal as medal from Contests ) union all (select contest_id ,bronze_medal as medal from Contests ) ) select u.name, u.mail from ( (select c1.medal from cte c1 join cte c2 on c1.contest_id < c2.contest_id+3 and c1.contest_id >= c2.contest_id and c1.medal = c2.medal group by c1.medal,c1.contest_id having count(distinct c2.contest_id)>=3) union (select gold_medal from Contests group by gold_medal having count(distinct contest_id)>=3) )a join Users u on a.medal = u.user_id
with cte as ( SELECT contest_id, gold_medal as medal FROM Contests UNION ALL SELECT contest_id, silver_medal as medal FROM Contests UNION ALL SELECT contest_id, bronze_medal as medal FROM Contests ), cte_2 as ( SELECT gold_medal as medal, COUNT(contest_id) as cnt_gold FROM Contests GROUP BY 1 HAVING cnt_gold >= 3 ) SELECT name, mail FROM Users WHERE user_id IN ( SELECT distinct a.medal FROM cte a JOIN cte b on a.contest_id + 1 = b.contest_id JOIN cte c on a.contest_id + 2 = c.contest_id WHERE a.medal = b.medal and b.medal = c.medal UNION SELECT medal FROM cte_2 )
with cte as ( Select c.contest_id, case when c.gold_medal in (c1.gold_medal_1, c1.silver_medal_1, c1.bronze_medal_1) and c.gold_medal in (c2.gold_medal_2, c2.silver_medal_2, c2.bronze_medal_2) then c.gold_medal else 0 end as user_id_1, case when c.silver_medal in (c1.gold_medal_1, c1.silver_medal_1, c1.bronze_medal_1) and c.silver_medal in (c2.gold_medal_2, c2.silver_medal_2, c2.bronze_medal_2) then c.silver_medal else 0 end as user_id_2, case when c.bronze_medal in (c1.gold_medal_1, c1.silver_medal_1, c1.bronze_medal_1) and c.bronze_medal in (c2.gold_medal_2, c2.silver_medal_2, c2.bronze_medal_2) then c.bronze_medal else 0 end as user_id_3 from ( Select contest_id, gold_medal,silver_medal, bronze_medal from Contests )c inner join ( Select contest_id, lead(contest_id,1) over() contest_1, lead(gold_medal,1) over() gold_medal_1, lead(silver_medal,1) over() silver_medal_1, lead(bronze_medal,1) over() bronze_medal_1 from Contests )c1 on c.contest_id = c1.contest_id inner join ( Select contest_id, lead(contest_id,2) over() contest_2, lead(gold_medal,2) over() gold_medal_2, lead(silver_medal,2) over() silver_medal_2, lead(bronze_medal,2) over() bronze_medal_2 from Contests )c2 on c.contest_id = c2.contest_id ) select distinct u.name, u.mail from (select user_id_1 user_id from cte union all select user_id_2 user_id from cte union all select user_id_3 user_id from cte union all select gold_medal user_id from Contests group by gold_medal having count(contest_id)-1 >= 2 )final inner join users u on final.user_id = u.user_id
with cte as ( select contest_id ,gold_medal user_id ,'gold' type from Contests union select contest_id ,silver_medal user_id ,'silver' type from Contests union select contest_id ,bronze_medal user_id ,'broze' type from Contests group by contest_id order by contest_id ) select name, mail from Users where user_id in (select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >= 3 union all ( select distinct a.user_id as user_id from cte a, cte b, cte c where a.contest_id = b.contest_id -1 and a.contest_id = c.contest_id-2 and a.user_id = b.user_id and a.user_id = c.user_id ))
with cte as ( select contest_id, gold_medal 'winner', 'gold' as 'position' from Contests union all select contest_id, silver_medal, 'silver' from Contests union all select contest_id, bronze_medal, 'bronze' from Contests ) , cte_2 as ( select winner, sum(if(position = 'gold',1,0)) 'sum' from cte group by winner having sum >= 3 union select A.winner,'sum' from cte A inner join cte B on A.winner = B.winner and A.contest_id + 1 = B.contest_id inner join cte C on A.winner = C.winner and A.contest_id + 2 = C.contest_id ) select distinct name, mail from cte_2 A inner join users B on A.winner = B.user_id
with cte as ( select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests) select name, mail from users where user_id in (select a.medal from cte a, cte b,cte c where a.medal = b.medal and b.medal = c.medal and b.contest_id = a.contest_id+1 and c.contest_id = b.contest_id+1) union select name, mail from users where user_id in (select gold_medal from contests group by gold_medal having count(gold_medal) >=3 )
with cte as ( select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests ) select name , mail from users where user_id in ( select gold_medal from contests group by 1 having count(contest_id) >= 3 ) or user_id in ( select distinct c1.user_id from cte c1 inner join cte c2 on c1.user_id = c2.user_id and c1.contest_id + 1 = c2.contest_id inner join cte c3 on c1.user_id = c3.user_id and c1.contest_id + 2 = c3.contest_id )
with cte as ( select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests ) select name , mail from users where user_id in ( select gold_medal from contests group by gold_medal having count(contest_id) >= 3 ) or user_id in ( select distinct c1.user_id from cte c1 inner join cte c2 on c1.user_id = c2.user_id and c1.contest_id + 1 = c2.contest_id inner join cte c3 on c1.user_id = c3.user_id and c1.contest_id + 2 = c3.contest_id )
with cte as ( select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests) select distinct name, mail from ( select distinct c1.user_id from cte c1, cte c2, cte c3 where c1.contest_id = c2.contest_id + 1 and c2.contest_id = c3.contest_id +1 and c1.user_id = c2.user_id and c1.user_id = c3.user_id union all select gold_medal as user_id from contests group by 1 having count(gold_medal) >= 3) a left join users using(user_id)
with cte as ( select contest_id, gold_medal as user_id from contests union select contest_id, silver_medal as user_id from contests union select contest_id, bronze_medal as user_id from contests ) select name, mail from users where user_id in (select c.user_id from cte as a join cte as b on a.contest_id = b.contest_id-1 and a.user_id = b.user_id join cte as c on b.contest_id = c.contest_id-1 and b.user_id = c.user_id) or user_id in (select gold_medal from contests group by gold_medal having count(contest_id)>=3)
with cte as ( select contest_id, gold_medal as user_id, 'g' as type from Contests con union all select contest_id, silver_medal as user_id, 's' as type from Contests con union all select contest_id, bronze_medal as user_id, 'b' as type from Contests con ) , cte1 as (select user_id, case when type = 'g' then 1 else 0 end as gold_cnt, row_number() over(partition by user_id order by contest_id) rn, contest_id - row_number() over(partition by user_id order by contest_id) gr from cte) select u.name, u.mail from cte1 c join Users u on c.user_id = u.user_id group by c.user_id having sum(gold_cnt) >= 3 union select u.name, u.mail from cte1 c join Users u on c.user_id = u.user_id group by c.user_id, gr having count(gold_cnt) >= 3
with cte as ( select contest_id, gold_medal as winner,'gold' as 'medal' from contests union all select contest_id, silver_medal, 'silver' as 'medal' from contests union all select contest_id, bronze_medal, 'bronze' as 'medal' from contests ) , cte2 as ( select winner, contest_id, row_number() over(partition by winner order by contest_id asc) 'r' from cte ) select u.name, u.mail from users u join (select distinct winner from cte2 group by winner, contest_id-r having count(contest_id)>=3 union select winner from cte where medal = 'gold' group by winner having count(contest_id)>=3 ) sub on sub.winner = u.user_id
with cte as ( select contest_id, gold_medal as winner,'gold' as 'medal' from contests union all select contest_id, silver_medal, 'silver' as 'medal' from contests union all select contest_id, bronze_medal, 'bronze' as 'medal' from contests ) select u.name, u.mail from users u join (select distinct winner from ( select winner, contest_id, lead(contest_id,1) over(partition by winner order by contest_id asc) 'nextone', lead(contest_id,2) over(partition by winner order by contest_id asc) 'nexttwo' from cte ) sub where sub.contest_id+1=sub.nextone and sub.nextone+1=sub.nexttwo union select winner from cte where medal = 'gold' group by 1 having count(contest_id) >=3 ) sub2 on u.user_id = sub2.winner
with cte as ( select contest_id, gold_medal from contests union select contest_id, silver_medal from contests union select contest_id, bronze_medal from contests ) select name, mail from users where user_id in (select gold_medal from contests group by gold_medal having count(*)>= 3) or user_id in (select c1.gold_medal from cte c1, cte c2, cte c3 where c1.contest_id = c2.contest_id - 1 and c2.contest_id = c3.contest_id - 1 and c1.gold_medal = c2.gold_medal and c2.gold_medal = c3.gold_medal)
with cte as ( select contest_id, gold_medal winner_id from Contests union all select contest_id, silver_medal winner_id from Contests union all select contest_id, bronze_medal winner_id from Contests ), cte2 as ( select distinct c1.winner_id from cte c1, cte c2, cte c3 where c1.winner_id = c2.winner_id and c1.winner_id= c3.winner_id and c1.contest_id = c2.contest_id -1 and c1.contest_id = c3.contest_id -2 ), cte3 as( select distinct gold_medal from Contests group by gold_medal having count(*)>=3), cte4 as( select winner_id id from cte2 union all select gold_medal id from cte3 ) select distinct name, mail from Users where user_id in (select id from cte4)
with cte as ( select contest_id, user_id, contest_id - lag(contest_id, 2) over (partition by user_id order by contest_id) as ld from Users left join Contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal ) select name, mail from Users left join Contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal left join cte on Users.user_id = cte.user_id and Contests.contest_id = cte.contest_id group by Users.user_id having sum(gold_medal = Users.user_id) >= 3 or sum(cte.ld = 2) >= 1
with cte as ( select contest_id,gold_medal as medal from Contests union all select contest_id,silver_medal as medal from Contests union all select contest_id,bronze_medal as medal from Contests ),cte1 as ( select distinct t1.medal from cte t1 join cte t2 join cte t3 on t1.contest_id+1 = t2.contest_id and t2.contest_id+1 = t3.contest_id and t1.medal = t2.medal and t2.medal = t3.medal ) select name,mail from cte1 join Users on cte1.medal = Users.user_id union distinct select name,mail from Users join Contests on Users.user_id = Contests.gold_medal group by Contests.gold_medal having count(Contests.gold_medal) >= 3
with cte as ( select contest_id,medal, dense_rank() over (order by contest_id) as rnk from ( select contest_id, gold_medal as medal from Contests union all select contest_id, silver_medal from Contests union all select contest_id, bronze_medal from Contests ) a ), cte2 as ( select a.medal from cte a join cte b on a.contest_id+1=b.contest_id and a.medal=b.medal join cte c on b.contest_id+1=c.contest_id and b.medal=c.medal union select gold_medal from Contests group by gold_medal having count(1)>=3 ) select name ,mail from Users u join cte2 c on c.medal=u.user_id
with cte as ( select gold_medal as userid, contest_id from contests union all select silver_medal as userid, contest_id from contests union all select bronze_medal as userid, contest_id from contests ), cte1 as ( select userid, contest_id, lead(contest_id,2) over (partition by userid order by contest_id) as next_2 from cte ), cte2 as ( select distinct userid from cte1 where next_2 - contest_id =2 union all select gold_medal from contests group by 1 having count(*) >=3 ) select distinct users.name, users.mail from cte2 left join users on cte2.userid = users.user_id order by users.user_id
with cte as ( select u.*, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, lag(contest_id,2) over(partition by user_id order by contest_id) as prevprev from users as u left join contests as c on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal) select name, mail from cte group by user_id having sum(gold) >= 3 or sum(contest_id - prevprev = 2) >= 1
with cte as ( select user_id, mail, name, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, contest_id, lag(contest_id, 2) over(partition by user_id order by contest_id) as prevprev from users left join contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal) select name, mail from cte group by user_id having sum(gold)>=3 or sum(contest_id - prevprev = 2) >=1
with cte as ( select user_id, name, mail, contest_id, gold_medal, lag(contest_id, 2) over (partition by user_id order by contest_id) as prevprev from Users left join Contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal ) select name, mail from cte group by user_id having sum(user_id = gold_medal) >= 3 or sum(contest_id - prevprev = 2) >= 1
with cte as ( select user_id, name, mail, contest_id, user_id = gold_medal as gold, lag(contest_id, 2) over (partition by user_id order by contest_id) as prevprev from Users left join Contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal ) select name, mail from cte group by user_id having sum(gold) >= 3 or sum(contest_id - prevprev = 2) >= 1
with cte as ( select user_id, name, mail, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, lag(contest_id, 2) over (partition by user_id order by contest_id) as prevprev from Users left join Contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal ) select name, mail from cte group by user_id having sum(gold) >= 3 or sum(contest_id - prevprev = 2) >= 1
with cte as ( select user_id, name,mail, case when user_id in (gold_medal,silver_medal,bronze_medal) then contest_id else null end contest_won, case when user_id = gold_medal then 1 else 0 end as gold_med from Users u join Contests c order by 1) ,days as ( select user_id, mail, name, contest_won, lead(contest_won,1) over (partition by user_id order by contest_won) as cont2, lead(contest_won,2) over (partition by user_id order by contest_won) as cont3, gold_med from cte where contest_won is not null ) , consec as ( select * , case when (abs(cont2 - contest_won) +abs(cont2-cont3)) = 2 then 'yes' else 'no' end as win from days where cont2 is not null and cont3 is not null) select distinct mail, name from consec where win='yes' union select mail, name from days group by 1,2 having sum(gold_med) >=3
with cte as ( select user_id,mail,name,contests.contest_id from users cross join contests where user_id in (gold_medal,silver_medal,bronze_medal)), cte2 as (select distinct user_id,mail,name,contests.contest_id from users cross join contests where user_id in (gold_medal) group by user_id having count(*)>=3) (select distinct a.name,a.mail from cte a join cte b on a.user_id=b.user_id and a.contest_id=b.contest_id+1 join cte c on a.contest_id=c.contest_id-1 and a.user_id=c.user_id) union (select distinct name,mail from cte2)
with cte as (select C1.contest_id, C1.gold_medal as 'all_medal' from Contests C1 union all select C2.contest_id, C2.silver_medal from Contests C2 union all select C3.contest_id, C3.bronze_medal from Contests C3) select distinct U.name, U.mail from Users U join (select distinct cte1.all_medal from cte cte1 join cte cte2 on cte1.contest_id +1= cte2.contest_id join cte cte3 on cte1.contest_id+2= cte3.contest_id where cte1.all_medal= cte2.all_medal and cte1.all_medal= cte3.all_medal union all select C.gold_medal from Contests C group by C.gold_medal having count(distinct C.contest_id)>=3 ) t on t.all_medal= U.user_id
with cte as (select contest_id, 'gold medal' as medal_type, gold_medal as user_id from Contests union select contest_id, 'silver medal' as medal_type, silver_medal as user_id from Contests union select contest_id, 'bronze medal' as medal_type, bronze_medal as user_id from Contests order by contest_id, medal_type) select name, mail from Users inner join (select user_id from cte where medal_type = 'gold medal' group by user_id having count(*) >= 3 union select distinct a.user_id from cte a join cte b on b.contest_id = a.contest_id + 1 join cte c on c.contest_id = b.contest_id + 1 where a.user_id = b.user_id and b.user_id = c.user_id and a.user_id = c.user_id)t on Users.user_id = t.user_id
with cte as (select contest_id, 'gold_medal' as medal, gold_medal as id from Contests union all select contest_id, 'silver_medal' as medal, silver_medal as id from Contests union all select contest_id, 'bronze_medal' as medal, bronze_medal as id from Contests), cte1 as (select distinct id from (select *,count(medal) over(partition by id, medal) as cnt from cte)m where medal='gold_medal' and cnt>=3) select u.name,u.mail from Users u join (select distinct id from (select *, lead(contest_id,1) over(partition by id order by contest_id) as l1, lead(contest_id,2) over(partition by id order by contest_id) as l2 from cte)t where l1=contest_id+1 and l2=l1+1 union select * from cte1)t1 on t1.id=u.user_id
with cte as (select contest_id, gold_medal as 'user_id', 'gold' as 'medal' from contests union all select contest_id, silver_medal as 'user_id', 'silver' as 'medal' from contests union all select contest_id, bronze_medal as 'user_id', 'bronze' as 'medal' from contests order by user_id, contest_id) select distinct mail, name from users u join cte using (user_id) where u.user_id in (select user_id from cte where medal = 'gold' group by user_id having count(distinct contest_id) >= 3) or u.user_id in (select distinct c1.user_id from cte c1, cte c2, cte c3 where c1.contest_id = c2.contest_id - 1 and c2.contest_id = c3.contest_id - 1 and c1.user_id = c2.user_id and c2.user_id = c3.user_id)
with cte as (select contest_id, gold_medal as id from contests union select contest_id, silver_medal as id from contests union select contest_id, bronze_medal as id from contests ), ctf as (select id, contest_id, row_number() over(partition by id order by contest_id) as rn from cte), rt as (select distinct id as user_id from ctf group by id, contest_id - rn having count(*) >=3 union select gold_medal as user_id from contests group by gold_medal having count(*) >= 3) select name, mail from users, rt where users.user_id = rt.user_id
with cte as (select contest_id, gold_medal as user_id, 'gold' as medal from contests union all select contest_id, silver_medal as user_id, 'silver' as medal from contests union all select contest_id, bronze_medal as user_id, 'bronze' as medal from contests ), cte1 as ( select user_id from cte where medal = 'gold' group by user_id having count(*) >= 3 ), cte2 as ( select user_id from (select user_id, (contest_id - row_number() over (partition by user_id order by contest_id)) as diff from cte) a group by user_id, diff having count(*) >= 3 ) select name, mail from users where user_id in (select * from cte1 union select * from cte2)
with cte as (select distinct gold_medal from contests group by 1 having count(*) >=3) ,cte2 as(select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests ) ,cte3 as (select gold_medal as id from cte union select distinct c1.medal from cte2 c1 join cte2 c2 on c1.contest_id = c2.contest_id - 1 join cte2 c3 on c1.contest_id = c3.contest_id - 2 where c1.medal = c2.medal and c1.medal = c3.medal) select u.name, u.mail from cte3 c join users u on c.id = u.user_id
with cte as (select distinct user_id from (select contest_id,lag(contest_id,2) over (partition by user_id order by contest_id) as lag_id, contest_id-lag(contest_id,2) over (partition by user_id order by contest_id) as id_diff,user_id from (select contest_id, gold_medal as user_id from contests UNION ALL select contest_id, silver_medal as user_id from contests UNION ALL select contest_id, bronze_medal as user_id from contests) as a) as b where id_diff=2), cte2 as (select gold_medal from contests group by 1 having count(gold_medal)>=3) select distinct name,mail from users where user_id in (Select user_id from cte) or user_id in (select gold_medal from cte2)
with cte as (select gold_medal from Contests group by gold_medal having count(contest_id) >= 3), cte1 as (select contest_id, gold_medal as medal from Contests union all select contest_id, silver_medal as medal from Contests union all select contest_id, bronze_medal as medal from Contests), cte2 as (select distinct a.medal from cte1 a join cte1 b on a.medal = b.medal and a.contest_id = b.contest_id - 1 join cte1 c on a.medal = c.medal and a.contest_id = c.contest_id - 2) select name, mail from Users where user_id in (select * from cte union distinct select * from cte2)
with cte as (select user_id, name, mail, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, lag(contest_id, 2) OVER(partition by user_id order by contest_id ) as prevprev from Users LEFT JOIN Contests ON user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal) select name, mail from cte group by user_id having sum(gold) >= 3 or sum(contest_id - prevprev = 2) >= 1
with cte as( ( select contest_id, gold_medal from Contests) union all ( select contest_id, silver_medal from Contests) union all ( select contest_id, bronze_medal from Contests) ) select u.name, u.mail from ( (select distinct c2.gold_medal as user_id from cte c1 join cte c2 on c2.contest_id <= c1.contest_id and c1.contest_id < c2.contest_id+3 and c1.gold_medal = c2.gold_medal group by c1.contest_id,c1.gold_medal having count(distinct c2.contest_id)>=3) union (select gold_medal from Contests group by gold_medal having count(distinct contest_id) >=3 ) )a join Users u on a.user_id = u.user_id
with cte as( select contest_id, 'gold' as medal, gold_medal as user_id from Contests union all select contest_id, 'silver' as medal, silver_medal as user_id from Contests union all select contest_id, 'bronze' as medal, bronze_medal as user_id from Contests), con1t as ( select distinct a.user_id as user_id from cte a, cte b, cte c where a.contest_id = b.contest_id -1 and a.contest_id = c.contest_id-2 and a.user_id = b.user_id and a.user_id = c.user_id), con2t as ( select user_id from cte where medal = 'gold' group by user_id having count(distinct contest_id) >=3) select name, mail from Users where user_id in (select user_id from con1t union all select user_id from con2t)
with cte as( select contest_id, 'gold' as medal, gold_medal as user_id from Contests union all select contest_id, 'silver' as medal, silver_medal as user_id from Contests union all select contest_id, 'bronze' as medal, bronze_medal as user_id from Contests), con1t as ( select distinct a.user_id as user_id from cte a, cte b, cte c where a.contest_id = b.contest_id -1 and a.contest_id = c.contest_id-2 and a.user_id = b.user_id and a.user_id = c.user_id), con2t as ( select user_id from cte where medal = 'gold' group by user_id having count(distinct contest_id) >=3) select name, mail from Users where user_id in (select user_id from con1t union select user_id from con2t)
with cte as( select contest_id, 'gold' as medal, gold_medal as user_id from contests union all select contest_id, 'silver' as medal, silver_medal as user_id from contests union all select contest_id, 'bronze' as medal, bronze_medal as user_id from contests ), condition1 as( select distinct a.user_id from cte a, cte b, cte c where a.contest_id = b.contest_id - 1 and a.contest_id = c.contest_id - 2 and a.user_id = b.user_id and a.user_id = c.user_id ), condition2 as( select gold_medal as user_id from contests group by 1 having count(*)>=3 ) select name, mail from users where user_id in (select user_id from condition1 union select user_id from condition2)
with cte as( select contest_id, gold_medal user_id, 'gold' medal from contests union all select contest_id, silver_medal user_id, 'silver' medal from contests union all select contest_id, bronze_medal user_id, 'bronze' medal from contests ), a as ( select contest_id, user_id, medal, dense_rank() over(order by contest_id) drnk from cte ), b as ( select contest_id, user_id, medal, dense_rank() over(partition by user_id order by contest_id) usrdrnk from cte ), c as ( select contest_id, user_id, medal, dense_rank() over(order by contest_id) drnk, dense_rank() over(partition by user_id order by contest_id) usrdrnk, (dense_rank() over(order by contest_id) - dense_rank() over(partition by user_id order by contest_id)) as grp from cte ), d as ( select *, count(user_id) cnt from c group by grp, user_id having count(user_id) > 2 ), gold as ( select contest_id, gold_medal from contests group by gold_medal having count(gold_medal) > 2 ) select distinct name, mail from(select contest_id, user_id from d union select contest_id, gold_medal from gold)t left join users u on t.user_id = u.user_id
with cte as( select contest_id, gold_medal user_id, 'gold' medal from contests union all select contest_id, silver_medal user_id, 'silver' medal from contests union all select contest_id, bronze_medal user_id, 'bronze' medal from contests ), a as( select contest_id, user_id, medal, row_number() over(order by contest_id) rn, row_number() over(partition by user_id order by contest_id) usrdrnk, (dense_rank() over(order by contest_id) - dense_rank() over(partition by user_id order by contest_id)) as grp from cte ), b as( select * from a group by grp, user_id having count(6) > 2 ), c as( select * from contests group by gold_medal having count(gold_medal) > 2 ) select distinct name, mail from( select contest_id, user_id from b union select contest_id, gold_medal from c )t left join users u on t.user_id = u.user_id
with cte as( select contest_id, gold_medal user_id, 'gold' medal from contests union all select contest_id, silver_medal user_id, 'silver' medal from contests union all select contest_id, bronze_medal user_id, 'bronze' medal from contests ), c as ( select contest_id, user_id, medal, dense_rank() over(order by contest_id) drnk, dense_rank() over(partition by user_id order by contest_id) usrdrnk, (dense_rank() over(order by contest_id) - dense_rank() over(partition by user_id order by contest_id)) as grp from cte ), d as ( select *, count(user_id) cnt from c group by grp, user_id having count(user_id) > 2 ), gold as ( select contest_id, gold_medal from contests group by gold_medal having count(gold_medal) > 2 ) select distinct name, mail from(select contest_id, user_id from d union select contest_id, gold_medal from gold)t left join users u on t.user_id = u.user_id
with cte as( select contest_id, gold_medal user_id, 'gold' medal from contests union all select contest_id, silver_medal user_id, 'silver' medal from contests union all select contest_id, bronze_medal user_id, 'bronze' medal from contests ), c as ( select contest_id, user_id, medal, dense_rank() over(order by contest_id) drnk, dense_rank() over(partition by user_id order by contest_id) usrdrnk, (dense_rank() over(order by contest_id) - row_number() over(partition by user_id order by contest_id)) as grp from cte ), d as ( select *, count(user_id) cnt from c group by grp, user_id having count(user_id) > 2 ), gold as ( select contest_id, gold_medal from contests group by gold_medal having count(gold_medal) > 2 ) select distinct name, mail from(select contest_id, user_id from d union select contest_id, gold_medal from gold)t left join users u on t.user_id = u.user_id
with cte as( select gold_medal as user_id, contest_id from contests union all select silver_medal, contest_id from contests union all select bronze_medal, contest_id from contests ) select name, mail from users where user_id in ( select distinct c1.user_id from cte c1, cte c2, cte c3 where c1.user_id = c2.user_id and c2.user_id = c3.user_id and c1.contest_id = c2.contest_id - 1 and c2.contest_id = c3.contest_id - 1 union select distinct gold_medal from contests group by 1 having count(1) >= 3)
with cte as( select name, mail, c.contest_id, case when u.user_id=c.gold_medal then 1 else 0 end as Gold, case when u.user_id=c.silver_medal then 1 else 0 end as Silver, case when u.user_id=c.bronze_medal then 1 else 0 end as Bronze, contest_id - row_number() over(partition by name, mail order by c.contest_id) as diff from Contests as c LEFT JOIN Users as u ON u.user_id=c.gold_medal OR u.user_id=c.silver_medal OR u.user_id=c.bronze_medal ) SELECT DISTINCT name, mail FROM( SELECT name, mail, SUM(Gold+Silver+Bronze) OVER(PARTITION BY name,mail,diff) as medalsum, SUM(GOLD) OVER(PARTITION BY name,mail) as goldsum FROM CTE )a WHERE medalsum >= 3 or goldsum >= 3
with cte as( select user_id, mail, name, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, contest_id, lag(contest_id, 2) over(partition by user_id order by contest_id) as prepre from users a left join contests b on a.user_id = b.gold_medal or a.user_id = b.silver_medal or a.user_id = b.bronze_medal) select name, mail from cte group by user_id having sum(gold) >= 3 or sum(contest_id - prepre = 2) >= 1
with cte as(select contest_id, gold_medal from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests) select u.name, u.mail from users u join contests c on u.user_id = c.gold_medal group by c.gold_medal having count( distinct contest_id)>=3 union select u.name, u.mail from cte c1 join cte c2 on c2.contest_id-c1.contest_id=1 and c1.gold_medal = c2.gold_medal join cte c3 on c3.contest_id-c1.contest_id = 2 and c3.gold_medal = c2.gold_medal left join users u on u.user_id = c1.gold_medal
with cte0 as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests), cte1 as (select *, row_number() over (partition by user_id order by contest_id) as rn from cte0), cte2 as (select user_id from cte1 group by user_id, contest_id - rn having count(user_id) >= 3 union select gold_medal as user_id from contests group by 1 having count(*) >= 3) select name, mail from users a join cte2 b on a.user_id = b.user_id
with cte1 as ( Select contest_id, gold_medal as user_id from Contests UNION ALL Select contest_id, silver_medal as user_id from Contests UNION ALL Select contest_id, bronze_medal as user_id from Contests ), cte2 as ( Select DISTINCT c1.user_id from cte1 c1 inner join cte1 c2 on c1.user_id = c2.user_id and c1.contest_id = c2.contest_id - 1 inner join cte1 c3 on c1.user_id = c3.user_id and c1.contest_id = c3.contest_id - 2 ), cte3 as ( Select gold_medal as user_id from COntests group by gold_medal having count(DISTINCT contest_id) >= 3 ) Select name, mail from Users where user_id IN (Select user_id from cte2) or user_id in (Select user_id from cte3)
with cte1 as ( select contest_id, gold_medal "user_id" from contests union select contest_id, silver_medal "user_id" from contests union select contest_id, bronze_medal "user_id" from contests ), cte2 as ( select distinct c1.user_id from cte1 c1, cte1 c2, cte1 c3 where c1.contest_id = c2.contest_id + 1 and c2.contest_id = c3.contest_id + 1 and c1.user_id = c2.user_id and c2.user_id = c3.user_id ) select name, mail from users where user_id in (select gold_medal from contests group by gold_medal having count(*) > 2) union select distinct name, mail from users where user_id in (select * from cte2)
with cte1 as ( select contest_id, gold_medal "user_id" from contests union select contest_id, silver_medal "user_id" from contests union select contest_id, bronze_medal "user_id" from contests ), cte2 as ( select distinct c1.user_id from cte1 c1, cte1 c2, cte1 c3 where c1.contest_id = c2.contest_id + 1 and c2.contest_id = c3.contest_id + 1 and c1.user_id = c2.user_id and c2.user_id = c3.user_id ) select name, mail from users where user_id in (select gold_medal from contests group by gold_medal having count(*) > 2) union select distinct u.name, u.mail from users u where user_id in (select * from cte2)
with cte1 as ( select contest_id, gold_medal as 'user_id' from Contests union all select contest_id, silver_medal as 'user_id' from Contests union all select contest_id, bronze_medal as 'user_id' from Contests) , cte2 as ( select contest_id, user_id, rank() over(partition by user_id order by contest_id) as 'rk' from cte1) ,cte3 as ( select user_id from cte2 group by user_id, contest_id-rk having count(*) >=3 union all select gold_medal as 'user_id' from Contests group by gold_medal having count(*) >=3 ) select distinct name, mail from cte3 join Users using(user_id)
with cte1 as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ), cte2 as ( select user_id, contest_id, row_number() over(partition by user_id order by contest_id) as r from cte1 group by 1,2 ), cte3 as ( select user_id from cte2 group by user_id, contest_id-r having count(*) >= 3 union all select gold_medal as user_id from Contests group by gold_medal having count(*) >= 3 ) select distinct name, mail from cte3 join Users using(user_id)
with cte1 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ), cte2 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from cte1 ), cte3 as ( select user as user_id from cte2 group by user, contest_id - rn having count(*) >= 3 union all select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct u.name, u.mail from cte3 join users u on cte3.user_id = u.user_id
with cte1 as ( select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >=3 ), cte2 as ( select gold_medal as user_id, contest_id from Contests union select silver_medal as user_id, contest_id from Contests union select bronze_medal as user_id, contest_id from Contests ), cte3 as ( select distinct user_id from ( select user_id, contest_id, Lead(contest_id,2) over(partition by user_id order by contest_id) as cnt from cte2) as F where F.cnt-F.contest_id=2 union select user_id from cte1 ) select u.name, u.mail from cte3 join Users as u using (user_id) order by user_id
with cte1 as ( select gold_medal as user_id from contests group by gold_medal having count(gold_medal) >= 3 ), cte2 as ( select gold_medal as user_id, contest_id from contests union select silver_medal as user_id, contest_id from contests union select bronze_medal as user_id, contest_id from contests ), cte3 as ( select distinct user_id from ( select user_id, contest_id, lead(contest_id, 2) over(partition by user_id order by contest_id) as cnt from cte2) as F where F.cnt-F.contest_id = 2 union select user_id from cte1 ) select u.name, u.mail from cte3 join users as u using (user_id) order by user_id
with cte1 as ( select gold_medal as user_id from contests group by gold_medal having count(gold_medal)>=3 ), cte2 as ( select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests ), cte3 as ( select user_id, dense_rank() over(order by contest_id) - dense_rank() over(partition by user_id order by contest_id) as diff from cte2 ), cte4 as ( select user_id from cte3 group by user_id, diff having count(user_id)>=3 ) select name, mail from users where user_id in (select user_id from cte1) or user_id in (select user_id from cte4)
with cte1 as ( select u.user_id, u.name, u.mail, c.contest_id from Contests c join Users u on c.gold_medal = u.user_id or c.silver_medal = u.user_id or c.bronze_medal = u.user_id order by u.user_id, c.contest_id ) select distinct a.name as name, a.mail as mail from cte1 a, cte1 b, cte1 c where (a.contest_id = b.contest_id + 1 and a.user_id = b.user_id) and (a.contest_id = c.contest_id - 1 and a.user_id = c.user_id) union select u.name as name, u.mail as mail from Contests c join Users u on c.gold_medal = u.user_id group by 1,2 having count(*) >= 3
with cte1 as (select contest_id, gold_medal 'user_id' from Contests union all select contest_id, silver_medal from Contests union all select contest_id, bronze_medal from Contests), cte2 as (select user_id, contest_id 'first', lead(contest_id,1) over(partition by user_id order by contest_id) 'second', lead(contest_id,2) over(partition by user_id order by contest_id) 'third' from cte1), cte3 as (select distinct user_id from cte2 where first+1 = second and second+1 = third), cte4 as (select gold_medal from Contests group by gold_medal having count(gold_medal) >= 3), cte5 as (select user_id from cte3 union all select gold_medal from cte4) select distinct u.name, u.mail from Users u join cte5 c using (user_id)
with cte1 as (select contest_id, gold_medal as id from Contests union all select contest_id, silver_medal as id from Contests union all select contest_id, bronze_medal as id from Contests order by id,contest_id), cte2 as (select gold_medal as id from Contests group by gold_medal having(count(*))>=3) select u.name, u.mail from (select distinct t1.id from cte1 t1 join cte1 t2 on t1.id=t2.id and t1.contest_id=t2.contest_id-1 join cte1 t3 on t2.id=t3.id and t2.contest_id=t3.contest_id-1 union select * from cte2)m left join Users u on m.id=u.user_id
with cte1 as (select gold_medal as user , contest_id From Contests Union All Select silver_medal, contest_id From Contests Union All Select bronze_medal,contest_id From Contests), cte2 as ( select a.user From cte1 a Join cte1 b On a.user = b.user and a.contest_id = b.contest_id + 1 Join cte1 c On a.user = c.user and a.contest_id = c.contest_id + 2), cte3 as (select gold_medal as user From Contests Group by gold_medal having count(*)>= 3), cte4 as (select user from cte3 Union select user from cte2) Select mail,name From cte4 Join Users On cte4.user = Users.user_id
with cte1 as (select gold_medal as user_id from contests group by gold_medal having count(contest_id) >= 3), cte2 as (select contest_id, gold_medal as medal from contests union select contest_id, silver_medal as medal from contests union select contest_id, bronze_medal as medal from contests order by medal asc, contest_id asc), cte3 as (select distinct a.medal as user_id from cte2 as a join cte2 as b on a.medal = b.medal and a.contest_id = b.contest_id - 1 join cte2 as c on b.medal = c.medal and b.contest_id = c.contest_id - 1) (select a.name, a.mail from users as a join cte1 as b on a.user_id = b.user_id) union (select a.name, a.mail from users as a join cte3 as b on a.user_id = b.user_id)
with cte1 as (select gold_medal as user_id from contests group by gold_medal having count(contest_id) >= 3), cte2 as (select contest_id, gold_medal as medal from contests union select contest_id, silver_medal as medal from contests union select contest_id, bronze_medal as medal from contests), cte3 as (select distinct a.medal as user_id from cte2 as a join cte2 as b on a.medal = b.medal and a.contest_id = b.contest_id - 1 join cte2 as c on b.medal = c.medal and b.contest_id = c.contest_id - 1) (select a.name, a.mail from users as a join cte1 as b on a.user_id = b.user_id) union (select a.name, a.mail from users as a join cte3 as b on a.user_id = b.user_id)
with cte1 as( select gold_medal as user_id, contest_id from contests union all select silver_medal as user_id, contest_id from contests union all select bronze_medal as user_id, contest_id from contests ), cte2 as( select user_id, contest_id, row_number() over(partition by user_id order by contest_id) as rn from cte1 ), cte3 as( select distinct user_id from cte2 group by user_id, contest_id - rn having count(*) >= 3 ), cte4 as( select gold_medal as user_id from contests group by 1 having count(*) >= 3 ) select name, mail from users where user_id in (select * from cte3 union select * from cte4)
with cte1 as(select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests), cte2 as(select c1.contest_id, c1.medal from cte1 c1 join cte1 c2 on c1.contest_id+1=c2.contest_id and c1.medal=c2.medal join cte1 c3 on c1.contest_id+2=c3.contest_id and c1.medal=c3.medal), cte3 as(select gold_medal from contests group by 1 having count(gold_medal)>=3) select name, mail from users u join (select medal from cte2 union select gold_medal from cte3) as cte4 on u.user_id=cte4.medal
with cte2 as ( select c.contest_id, u.user_id , u.name, u.mail from contests c join users u on c.gold_medal=u.user_id or c.silver_medal=u.user_id or c.bronze_medal=u.user_id ) select c1.name, c1.mail from cte2 c1 join cte2 c2 on c1.contest_id=c2.contest_id-1 and c1.user_id =c2.user_id join cte2 c3 on c1.contest_id=c3.contest_id-2 and c1.user_id =c3.user_id union select name, mail from users join ( select user_id from contests c join users u on gold_medal=user_id group by 1 having sum(case when gold_medal=user_id then 1 else null end)>=3 )temp on users.user_id=temp.user_id
with cte2 as ( select c.contest_id, u.user_id , u.name, u.mail from contests c join users u on c.gold_medal=u.user_id or c.silver_medal=u.user_id or c.bronze_medal=u.user_id ) select name, mail from users join ( select c1.user_id from cte2 c1 join cte2 c2 on c1.contest_id=c2.contest_id-1 and c1.user_id =c2.user_id join cte2 c3 on c1.contest_id=c3.contest_id-2 and c1.user_id =c3.user_id ) t1 on users.user_id=t1.user_id union select name, mail from users join ( select user_id from contests c join users u on gold_medal=user_id group by 1 having sum(case when gold_medal=user_id then 1 else null end)>=3 )temp on users.user_id=temp.user_id
with cte_allmedal as ( select contest_id, gold_medal w_plyr from Contests union all select contest_id, silver_medal w_plyr from Contests union all select contest_id, bronze_medal w_plyr from Contests), cte_conseq as ( select w_plyr, contest_id-rk grp from ( select w_plyr,contest_id, dense_rank() over (partition by w_plyr order by contest_id) rk from cte_allmedal) tbl ), cte_group as ( select w_plyr from cte_conseq group by w_plyr, grp having count(*)>=3) select name, mail from ( select w_plyr user_id from cte_group union select gold_medal user_id from contests group by gold_medal having count(*)>=3) tbl join Users on tbl.user_id = Users.user_id
with cte_gold as ( select gold_medal as user_id from contests group by gold_medal having count(1) >=3 ), cte_unpivot as ( select contest_id, gold_medal as user_id from contests union select contest_id, silver_medal as user_id from contests union select contest_id, bronze_medal as user_id from contests ), cte_consecutive as ( select u1.user_id from users u1 join cte_unpivot c1 on u1.user_id = c1.user_id join cte_unpivot c2 on c1.contest_id = c2.contest_id - 1 and u1.user_id = c2.user_id join cte_unpivot c3 on c2.contest_id = c3.contest_id - 1 and u1.user_id = c3.user_id ) select name, mail from users u join (select * from cte_consecutive union select * from cte_gold)x on u.user_id = x.user_id
with cte_gold as ( select gold_medal as user_id, count(*) from Contests group by gold_medal having count(*)>=3 ), cte_other as ( select C1.gold_medal as user_id from Contests C1, Contests C2, Contests C3 where (C1.contest_id = C2.contest_id+1 and (C1.gold_medal=C2.gold_medal or C1.gold_medal=C2.silver_medal or C1.gold_medal=C2.bronze_medal) ) and (C1.contest_id = C3.contest_id+2 and (C1.gold_medal=C3.gold_medal or C1.gold_medal=C3.silver_medal or C1.gold_medal=C3.bronze_medal) ) union select C1.silver_medal as user_id from Contests C1, Contests C2, Contests C3 where (C1.contest_id = C2.contest_id+1 and (C1.silver_medal=C2.gold_medal or C1.silver_medal=C2.silver_medal or C1.silver_medal=C2.bronze_medal) ) and (C1.contest_id = C3.contest_id+2 and (C1.silver_medal=C3.gold_medal or C1.silver_medal=C3.silver_medal or C1.silver_medal=C3.bronze_medal) ) union select C1.bronze_medal as user_id from Contests C1, Contests C2, Contests C3 where (C1.contest_id = C2.contest_id+1 and (C1.bronze_medal=C2.gold_medal or C1.bronze_medal=C2.silver_medal or C1.bronze_medal=C2.bronze_medal) ) and (C1.contest_id = C3.contest_id+2 and (C1.bronze_medal=C3.gold_medal or C1.bronze_medal=C3.silver_medal or C1.bronze_medal=C3.bronze_medal) ) ) select name, mail from ( select user_id from cte_gold union select user_id from cte_other )sub join users U on sub.user_id=U.user_id
with cte_unstack as ( select contest_id, case when place = '1' then gold_medal when place = '2' then silver_medal when place = '3' then bronze_medal end as medalist_id from Contests cross join ( select '1' as place union all select '2' as place union all select '3' as place ) as places ), cte_3x_consec_medalists as ( select medalist_id, contest_id as idx_0, lead(contest_id, 1) over ( partition by medalist_id order by contest_id ) as idx_1, lead(contest_id, 2) over( partition by medalist_id order by contest_id ) as idx_2 from cte_unstack ), cte_interview_candidates as ( select gold_medal as user_id from Contests group by 1 having count(*) >= 3 union select medalist_id as user_id from cte_3x_consec_medalists where idx_2 - idx_1 = 1 and idx_1 - idx_0 = 1 ), cte_final as ( select u.name, u.mail from cte_interview_candidates as cand join Users as u on cand.user_id = u.user_id ) select * from cte_final
with d_ans_1 as (select gold_medal user_id from contests group by gold_medal having count(contest_id) >= 3), gold as (select users.user_id, contest_id from users left join contests on users.user_id=contests.gold_medal where contest_id is not null), silver as (select users.user_id, contest_id from users left join contests on users.user_id=contests.silver_medal where contest_id is not null), bronze as (select users.user_id, contest_id from users left join contests on users.user_id=contests.bronze_medal where contest_id is not null), d1 as (select * from gold union select * from silver union select * from bronze), d2 as (select user_id, contest_id, if(@pre_user<>(@pre_user:=user_id),@ct:=1, if(@pre_contest-(@pre_contest:=contest_id)=-1,@ct:=@ct+1,@ct:=1)) ct from d1, (select @pre_user:=null,@pre_contest:=null,@ct:=0) init order by user_id asc, contest_id asc), d_ans_2 as (select user_id from d2 where ct=3), d_final as (select * from d_ans_1 union select * from d_ans_2) select name, mail from d_final left join users on d_final.user_id=users.user_id
with flat_contests as ( select contest_id, gold_medal as player_id, 'gold_medal' as medal_type from contests union all select contest_id, silver_medal as player_id, 'silver_medal' as medal_type from contests union all select contest_id, bronze_medal as player_id, 'bronze_medal' as medal_type from contests ), ranked_contests as ( select contest_id, player_id, lead(contest_id,2) over(partition by player_id order by contest_id) as third_win, sum(case when medal_type='gold_medal' then 1 else 0 end) over(partition by player_id) as gold_wins from flat_contests ) select distinct name, mail from ranked_contests r inner join Users u on r.player_id=u.user_id where gold_wins>=3 or third_win-contest_id=2
with flat_table_contests as ( select contest_id, gold_medal as player, 'gold_medal' as medal from contests union all select contest_id, silver_medal as player, 'silver_medal' as medal from contests union all select contest_id, bronze_medal as player, 'bronze_medal' as medal from contests ), ranked_contest as ( select contest_id, player, lead(contest_id,2) over(partition by player order by contest_id) as next_winner, sum(case when medal='gold_medal' then 1 else 0 end) over(partition by player) as count_of_gold_medal from flat_table_contests ) select distinct name, mail from ranked_contest f inner join users u on f.player=u.user_id where count_of_gold_medal>=3 or next_winner-contest_id=2
with g as (select gold_medal as user_id from contests group by 1 having count(*) >= 3), t as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests order by contest_id ), cte3 as ( select distinct user_id from ( select user_id, contest_id, Lead(contest_id,2) over(partition by user_id order by contest_id) as cnt from t) as F where F.cnt-F.contest_id=2 union select user_id from g) select u.name, u.mail from cte3 join Users as u using (user_id) order by user_id
with gold as ( select distinct gold_medal as 'user_id', count(gold_medal) from contests c join users u on c.gold_medal = u.user_id group by u.user_id having count(gold_medal) >= 3), m as( select contest_id, gold_medal as 'user_id' from contests union all select contest_id, silver_medal as 'user_id' from contests union all select contest_id, bronze_medal as 'user_id' from contests), any as ( select distinct m1.user_id from m m1, m m2, m m3 where m1.user_id = m2.user_id and m1.user_id = m3.user_id and m2.contest_id - m1.contest_id = 1 and m3.contest_id - m2.contest_id = 1) select name, mail from users u join gold g on u.user_id = g.user_id union select name, mail from users u join any a on u.user_id = a.user_id
with gold as ( select distinct gold_medal as user_id from contests group by gold_medal having count(gold_medal)>=3), cte as ( select contest_id,gold_medal as user_id from contests union all select contest_id,silver_medal as user_id from contests union all select contest_id,bronze_medal as user_id from contests), medal as ( select distinct c1.user_id from cte c1 join cte c2 on c1.user_id=c2.user_id and c1.contest_id=c2.contest_id-1 join cte c3 on c2.user_id=c3.user_id and c2.contest_id=c3.contest_id-1) select name,mail from users where user_id in (select user_id from medal) or user_id in (select user_id from gold)
with gold as ( select gold_medal as user from Contests group by gold_medal HAVING COUNT(contest_id) >= 3 ), Q1 as ( select contest_id, gold_medal AS user from Contests UNION select contest_id, silver_medal AS user from Contests UNION select contest_id, bronze_medal AS user from Contests ORDER BY contest_id ), Q2 AS ( SELECT user, contest_id, dense_rank() over (partition by user order by contest_id ) from q1 ), Q3 as ( select distinct a.user as user from q2 a, q2 b, q2 c where a.user= b.user and a.user= c.user and a.contest_id = b.contest_id-1 and a.contest_id = c.contest_id-2 union select gold_medal as user from Contests group by gold_medal HAVING COUNT(contest_id) >= 3 ) select name, mail from Q3 a left join Users b on user = user_id
with gold as ( select gold_medal as user_id from Contests group by 1 having count(gold_medal) >=3 ), all_record as( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ), qualified_ids as( select distinct user_id from ( select contest_id, user_id, count(user_id)over(partition by user_id order by contest_id range between 2 preceding and current row) as cnt from all_record order by 1) a where a.cnt=3 union select user_id from gold ) select name,mail from Users join qualified_ids using (user_id)
with gold as ( select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >= 3 ), allmedal as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ), candidates as ( select distinct a.user_id from ( select contest_id, user_id, count(user_id) over (partition by user_id order by contest_id range between 2 preceding and current row) as cnt from allmedal ) as a where a.cnt >= 3 union select user_id from gold ) select u.name, u.mail from Users u join candidates on u.user_id = candidates.user_id
with gold as ( select gold_medal as user_id from Contests group by gold_medal having count(gold_medal)>=3 ), any_medal as( select contest_id, gold_medal as id from Contests union all select contest_id, silver_medal as id from Contests union all select contest_id, bronze_medal as id from Contests ), temp as (select id, row_number() over (partition by id order by contest_id) as grp, contest_id from any_medal), medal as(select id from temp group by id,(contest_id - grp ) having count(*)>=3) select name, mail from users where user_id in (select * from gold) or user_id in (select * from medal)
with gold as ( select gold_medal as user_id from contests group by gold_medal having count(gold_medal) >=3 ), c as ( select contest_id, gold_medal as m from contests union all select contest_id, silver_medal as m from contests union all select contest_id, bronze_medal as m from contests ), con as ( select distinct c.m as user_id from c join c as c1 on c.contest_id+1 = c1.contest_id and c.m = c1.m join c as c2 on c.contest_id+2 = c2.contest_id and c.m = c2.m ) select u1.name, u1.mail from (select * from con union select * from gold) as u join users u1 on u.user_id = u1.user_id
with gold as ( select gold_medal, count(distinct contest_id) as gold_user from Contests group by gold_medal having count(distinct contest_id) > 2 ) , a as ( select contest_id , gold_medal as medal from Contests union all select contest_id , silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests ) , b as ( select contest_id,medal,dense_rank() over(order by contest_id) - dense_rank() over (partition by medal order by contest_id) rk from a) , c as ( select rk,medal from b group by rk,medal having count(1) > 2 ) select distinct u.name,u.mail from (select distinct medal from c union select distinct gold_medal as medal from gold) t left join users u on t.medal=u.user_id
with gold as (Select name, mail From Users u join Contests c on u.user_id = c.gold_medal group by 1,2 having count(*) >=3 ), all_med as (select contest_id, gold_medal as user_id from Contests UNION ALL select contest_id, silver_medal as user_id from Contests UNION ALL select contest_id, bronze_medal as user_id from Contests ), check_all as (select name,mail, contest_id, lead(contest_id, 2) over (partition by u.user_id order by contest_id) as lead_con from Users u join all_med a on u.user_id = a.user_id) select distinct name,mail from check_all where contest_id + 2 = lead_con union select * from gold
with gold as( select gold_medal as user_id from Contests group by 1 having count(*) >= 3 ), alltbl as( select gold_medal as user_id, contest_id from Contests union all select silver_medal as user_id, contest_id from Contests union all select bronze_medal as user_id, contest_id from Contests ), tmp as( select *, count(*) over(partition by user_id order by contest_id range between 2 preceding and current row) as cnt from alltbl ), final as( select distinct user_id from tmp where cnt >= 3 union select user_id from gold ) select name, mail from Users where user_id in (select user_id from final)
with gold as( select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ), data as ( select gold_medal as user_id, contest_id from contests union all select silver_medal as user_id, contest_id from contests union all select bronze_medal as user_id, contest_id from contests), data1 as ( select user_id, contest_id, rank() over(partition by user_id order by contest_id) as c_rnk from data ), data2 as ( select user_id from data1 group by user_id, contest_id - c_rnk having count(*) >= 3 ) select distinct u.name, u.mail from (select d2.user_id from data2 d2 union select g.user_id from gold g) c left join users u on c.user_id = u.user_id
with gold_cand as ( select gold_medal user_id from Contests group by gold_medal having count(distinct contest_id) >= 3 ), usermedals as ( select contest_id, gold_medal user_id from Contests union all select contest_id, silver_medal user_id from Contests union all select contest_id, bronze_medal user_id from Contests ), medals as ( select user_id from ( select user_id, contest_id - (row_number() over(partition by user_id order by contest_id)) diff from usermedals ) T group by user_id, diff having count(*) >= 3 ) select name, mail from Users where user_id in ( select user_id from gold_cand union select user_id from medals )
with gold_cte as ( Select gold_medal from contests group by gold_medal having count(*)>=3 ), union_cte as ( Select contest_id,gold_medal as user_id from contests union Select contest_id,silver_medal as user_id from contests union Select contest_id,bronze_medal as user_id from contests ) , union_gold_consecutive_cte as ( select u1.user_id from union_cte u1 inner join union_cte u2 on u1.contest_id+1=u2.contest_id and u1.user_id=u2.user_id inner join union_cte as u3 on u1.contest_id+2=u3.contest_id and u2.contest_id+1=u3.contest_id and u1.user_id=u3.user_id and u3.user_id=u2.user_id UNION Select * from gold_cte ) Select name,mail from users as u inner join union_gold_consecutive_cte as gc on u.user_id=gc.user_id
with gold_cte as (select gold_medal as medal from contests group by gold_medal having count(gold_medal) >=3), cte1 as (select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests), cte2 as (select c1.contest_id, c1.medal from cte1 c1 left join cte1 c2 on c1.medal = c2.medal left join cte1 c3 on c2.medal = c3.medal where c3.contest_id = c2.contest_id + 1 and c2.contest_id = c1.contest_id + 1 ) select distinct name, mail from (select medal as id from gold_cte union all select medal as id from cte2)a inner join users u on a.id = u.user_id
with gold_medal_users as ( select gold_medal from users u inner join contests c on c.gold_medal = u.user_id group by 1 having count(1) >= 3 ),three_consecutive_gold as ( select c1.gold_medal from Contests c1 inner join Contests c2 on c2.contest_id = c1.contest_id + 1 and ( c1.gold_medal = c2.silver_medal or c1.gold_medal = c2.gold_medal or c1.gold_medal = c2.bronze_medal ) inner join Contests c3 on c3.contest_id = c2.contest_id + 1 and( c1.gold_medal = c3.silver_medal or c1.gold_medal = c3.gold_medal or c1.gold_medal = c3.bronze_medal ) ),three_consecutive_silver as ( select c1.silver_medal from Contests c1 inner join Contests c2 on c2.contest_id = c1.contest_id + 1 and ( c1.silver_medal = c2.silver_medal or c1.silver_medal = c2.gold_medal or c1.silver_medal = c2.bronze_medal ) inner join Contests c3 on c3.contest_id = c2.contest_id + 1 and( c1.silver_medal = c3.silver_medal or c1.silver_medal = c3.gold_medal or c1.silver_medal = c3.bronze_medal ) ), three_consecutive_bronze as ( select c1.bronze_medal from Contests c1 inner join Contests c2 on c2.contest_id = c1.contest_id + 1 and ( c1.bronze_medal = c2.silver_medal or c1.bronze_medal = c2.gold_medal or c1.bronze_medal = c2.bronze_medal ) inner join Contests c3 on c3.contest_id = c2.contest_id + 1 and( c1.bronze_medal = c3.silver_medal or c1.bronze_medal = c3.gold_medal or c1.bronze_medal = c3.bronze_medal ) ) select name, mail from ( select silver_medal as id from three_consecutive_silver union select gold_medal as id from three_consecutive_gold union select bronze_medal as id from three_consecutive_bronze union select * from gold_medal_users )a inner join users u on a.id = u.user_id
with gold_medals as ( Select gold_medal, count(*) as num_golds From Contests group by 1 ), bronze_silver as( Select *, case when (lead(silver_medal,1) over(order by contest_id) = gold_medal or lead(bronze_medal,1) over(order by contest_id) = gold_medal or lead(gold_medal,1) over(order by contest_id) = gold_medal) and (lead(silver_medal,2) over(order by contest_id) = gold_medal or lead(bronze_medal,2) over(order by contest_id) = gold_medal or lead(gold_medal,2) over(order by contest_id) = gold_medal) then gold_medal else null end as gold_condition, case when (lead(gold_medal,1) over(order by contest_id) = silver_medal or lead(silver_medal,1) over(order by contest_id) = silver_medal or lead(bronze_medal,1) over(order by contest_id) = silver_medal) and (lead(gold_medal,2) over(order by contest_id) = silver_medal or lead(silver_medal,2) over(order by contest_id) = silver_medal or lead(bronze_medal,2) over(order by contest_id) = silver_medal) then silver_medal else null end as silver_condition, case when (lead(gold_medal,1) over(order by contest_id) = bronze_medal or lead(silver_medal,1) over(order by contest_id) = bronze_medal or lead(bronze_medal,1) over(order by contest_id) = bronze_medal) and (lead(gold_medal,2) over(order by contest_id) = bronze_medal or lead(silver_medal,2) over(order by contest_id) = bronze_medal or lead(bronze_medal,2) over(order by contest_id) = bronze_medal) then bronze_medal else null end as bronze_condition From Contests ) Select distinct u.name, u.mail From ( Select distinct medal From ( Select contest_id, gold_medal as medal, gold_condition as medal_condition From bronze_silver union all Select contest_id, silver_medal as medal, silver_condition as medal_condition From bronze_silver union all Select contest_id, bronze_medal as medal, bronze_condition as medal_condition From bronze_silver )a where medal_condition is not null union all ( select distinct gold_medal as medal From gold_medals where num_golds >= 3 ) )c Join Users u on u.user_id = c.medal
with gold_t as (select contest_id, gold_medal from contests group by gold_medal having count(gold_medal)>=3 ), any_t as ( select contest_id, gold_medal as id from contests union select contest_id, silver_medal as id from contests union select contest_id, bronze_medal as id from contests order by contest_id, id ) select name, mail from users where user_id in (select gold_medal from gold_t) or user_id in (select a.id from any_t as a, any_t as b, any_t as c where a.id = b.id and b.id= c.id and a.contest_id + 1 = b.contest_id and b.contest_id + 1 = c.contest_id)
with gold_table as ( select gold_medal as user_id from Contests group by gold_medal having count(*) >= 3 ), union_table as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ), medal_table as ( select distinct u1.user_id from union_table u1 inner join union_table u2 on u1.user_id = u2.user_id and u1.contest_id + 1 = u2.contest_id inner join union_table u3 on u1.user_id = u3.user_id and u1.contest_id - 1 = u3.contest_id where u1.contest_id is not null and u2.contest_id is not null and u3.contest_id is not null ) select name, mail from Users where user_id in ( select user_id from gold_table ) or user_id in ( select user_id from medal_table )
with golds as ( select gold_medal as user_id from contests group by gold_medal having count(gold_medal) >= 3 ), all_data as ( select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests ), consecs as ( select contest_id, user_id from all_data where (contest_id + 1, user_id) in (select contest_id, user_id from all_data) and (contest_id + 2, user_id) in (select contest_id, user_id from all_data) ) select name, mail from users u where exists (select * from golds g where u.user_id = g.user_id) or exists (select * from consecs c where u.user_id = c.user_id)
with golds as (select gold_medal as uid from Contests group by gold_medal having count(contest_id)>=3 ), ptable as (select contest_id, gold_medal as uid from Contests UNION ALL select contest_id, silver_medal as uid from Contests UNION ALL select contest_id, bronze_medal as uid from Contests ), consecutive as (select p1.contest_id, p1.uid from ptable p1, ptable p2, ptable p3 where (p1.contest_id+1 = p2.contest_id AND p1.contest_id+2 = p3.contest_id) AND (p1.uid = p2.uid) AND p1.uid = p3.uid ) select name, mail from users where user_id IN (select uid from golds) OR user_id IN (select uid from consecutive)
with id1 as (select distinct user_id as id from (select a.user_id, b.contest_id - (row_number() over (partition by a.user_id order by contest_id)) as x from Users as a join Contests as b on (a.user_id=b.gold_medal or a.user_id=b.silver_medal or a.user_id=b.bronze_medal)) as aa group by user_id, x having count(x) > 2), id2 as (select gold_medal as id from Contests group by gold_medal having count(contest_id)>2) select name, mail from users where user_id in (select id from id1) or user_id in (select id from id2)
with identified as(select u1.name,u1.mail,c1.contest_id,case when u1.user_id=c1.gold_medal then 1 else 0 end as medal,case when (c1.contest_id+1=lead(c1.contest_id,1) over(partition by u1.name,u1.mail order by c1.contest_id)) and (c1.contest_id+2=lead(c1.contest_id,2) over(partition by u1.name,u1.mail order by c1.contest_id)) then 1 else 0 end as threeTime from Users u1 inner join Contests c1 on u1.user_id=c1.gold_medal or u1.user_id=c1.silver_medal or u1.user_id=c1.bronze_medal ) select name,mail from identified group by 1,2 having SUM(medal)>=3 or SUM(threeTime)>=1
with identified as(select u1.name,u1.mail,c1.contest_id,case when u1.user_id=c1.gold_medal then 1 else 0 end as medal,case when (c1.contest_id+1=lead(c1.contest_id,1) over(partition by u1.name,u1.mail order by c1.contest_id)) and (c1.contest_id+2=lead(c1.contest_id,2) over(partition by u1.name,u1.mail order by c1.contest_id)) then 1 else 0 end as threeTime from Users u1 left join Contests c1 on u1.user_id=c1.gold_medal or u1.user_id=c1.silver_medal or u1.user_id=c1.bronze_medal where c1.contest_id is not null order by 1,2) select name,mail from identified group by 1,2 having SUM(medal)>=3 or SUM(threeTime)>=1
with identified as(select u1.name,u1.mail,c1.contest_id,case when u1.user_id=c1.gold_medal then 1 else 0 end as medal,case when (c1.contest_id+1=lead(c1.contest_id,1) over(partition by u1.name,u1.mail order by c1.contest_id)) and (c1.contest_id+2=lead(c1.contest_id,2) over(partition by u1.name,u1.mail order by c1.contest_id)) then 1 else 0 end as threeTime from Users u1 left join Contests c1 on u1.user_id=c1.gold_medal or u1.user_id=c1.silver_medal or u1.user_id=c1.bronze_medal where c1.contest_id is not null) select name,mail from identified group by 1,2 having SUM(medal)>=3 or SUM(threeTime)>=1
with long_format as ( select contest_id, gold_medal as user_id from contests union select contest_id, silver_medal as user_id from contests union select contest_id, bronze_medal as user_id from contests order by 1 ), rnking as ( select contest_id, user_id, row_number() over(partition by user_id order by contest_id) as rnk from long_format ), gold_medal as ( select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ), candidate_ids as ( select user_id from rnking group by user_id, contest_id-rnk having count(*) >= 3 union select user_id from gold_medal ) select name, mail from users join candidate_ids candi on users.user_id=candi.user_id
with md as (select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests), temp as (select medal, contest_id, rank() over(partition by medal order by contest_id) as mrk from md order by medal, mrk) select name, mail from users where user_id in (select gold_medal from contests group by gold_medal having count(*)>=3) or user_id in (select distinct medal from temp group by medal, contest_id-mrk having count(*)>=3)
with medal as( select contest_id, gold_medal as id from contests union select contest_id, silver_medal as id from contests union select contest_id, bronze_medal as id from contests order by id, contest_id ), case1 as (select id from (select id, contest_id, lead(contest_id, 1) over (partition by id order by contest_id) as contest_id_2, lead(contest_id, 2) over (partition by id order by contest_id) as contest_id_3 from medal ) t where (contest_id+1= contest_id_2) and (contest_id+2= contest_id_3) ), case2 as (select count(contest_id) as num, gold_medal as id from contests group by gold_medal having count(contest_id)>=3) select name, mail from users where user_id in ( select id from case1 union select id from case2 )
with medal_format as ( select gold_medal as medal, contest_id from Contests union all select silver_medal as medal, contest_id from Contests union all select bronze_medal as medal, contest_id from Contests order by medal, contest_id ) select name, mail from Users where user_id in( select medal from( select medal, contest_id, contest_id_lag, case when contest_id_lag is null then @counter:=0 when contest_id - contest_id_lag = 1 then @counter:=@counter+1 else @counter:=0 end as consecutive_flag from (select medal, contest_id, lag(contest_id) over(partition by medal order by contest_id) as contest_id_lag from medal_format ) lag_data ) consecutive_data where consecutive_flag = 2 union select gold_medal from Contests group by gold_medal having count(gold_medal) > 2 )
with medal_list as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests), medal_list_num as( select contest_id, user_id, rank() over(partition by user_id order by contest_id) as rank_num from medal_list), all_name_list as (select user_id from medal_list_num group by user_id, contest_id- rank_num having count(1)>=3 union all select gold_medal as user_id from Contests group by gold_medal having count(1)>=3) select distinct t2.name, t2.mail from all_name_list t1 join Users t2 on t1.user_id = t2.user_id
with medal_tab as (SELECT contest_id,gold_medal as user_id, "gold" as medal FROM Contests UNION SELECT contest_id,silver_medal as user_id, "silver" as medal FROM Contests UNION SELECT contest_id,bronze_medal as user_id, "bronze" as medal FROM Contests) SELECT u.name as name,u.mail as mail FROM (SELECT gold_medal AS user_id FROM Contests GROUP BY 1 HAVING COUNT(gold_medal)>=3 UNION SELECT DISTINCT(t2.user_id) as user_id FROM (SELECT t1.user_id as user_id,t1.diff as diff,count(t1.contest_id) as consec_num FROM (SELECT user_id,medal,contest_id,(contest_id-RANK() OVER (PARTITION BY user_id ORDER BY contest_id)) as diff FROM medal_tab) t1 GROUP BY 1,2 HAVING count(t1.contest_id) >=3) t2) t3 LEFT JOIN Users u ON t3.user_id=u.user_id
with medal_winners as ( SELECT contest_id, 'gold' as medal, gold_medal as user_id FROM contests UNION ALL SELECT contest_id, 'silver' as medal, silver_medal as user_id FROM contests UNION ALL SELECT contest_id, 'bronze' as medal, bronze_medal as user_id FROM contests ), gold_medal_winners as ( SELECT user_id FROM medal_winners GROUP BY user_id HAVING COUNT(CASE WHEN medal ='gold' then 1 end ) >=3 ), consecutive_winners as ( SELECT m1.user_id as user_id FROM medal_winners m1 JOIN medal_winners m2 ON m1.user_id = m2.user_id and m1.contest_id = m2.contest_id - 1 JOIN medal_winners m3 ON m2.user_id = m3.user_id and m2.contest_id = m3.contest_id - 1 ) SELECT name, mail FROM (SELECT user_id FROM consecutive_winners UNION SELECT user_id FROM gold_medal_winners) w JOIN users u ON u.user_id = w.user_id
with medalinfo as (select * from (select contest_id , gold_medal as medal from contests union all select contest_id , silver_medal as medal from contests union all select contest_id , bronze_medal as medal from contests) a), threecons as (select distinct a.medal from medalinfo a left join medalinfo b on a.medal = b.medal where a.contest_id between b.contest_id - 2 and b.contest_id group by a.medal , a.contest_id having count(distinct b.contest_id) = 3 order by 1), goldinfo as (select gold_medal as medal from contests group by 1 having count(distinct contest_id) >= 3), usersinfo as (select medal as user_id from goldinfo union select medal as user_id from threecons) select name , mail from users a join usersinfo b on a.user_id = b.user_id
with medals as ( select gold_medal as user_id, 'gold' as medal, contest_id from contests union all select silver_medal as user_id, 'silver' as medal, contest_id from contests union all select bronze_medal as user_id, 'bronze' as medal, contest_id from contests ), lag_and_count as ( select user_id, medal, contest_id, lag(contest_id, 2) over(partition by user_id order by contest_id) prevprev, count(1) over(partition by user_id, medal) cnt from medals ) select distinct t2.name, t2.mail from lag_and_count t1 left join users t2 on t1.user_id = t2.user_id where t1.medal = 'gold' and cnt >= 3 or t1.contest_id - prevprev = 2
with medals as ( select gold_medal as user_id, 'gold' as medal, contest_id from contests union all select silver_medal as user_id, 'silver' as medal, contest_id from contests union all select bronze_medal as user_id, 'bronze' as medal, contest_id from contests ), lagged_and_counted as ( select user_id, medal, contest_id, lag(contest_id, 2) over (partition by user_id order by contest_id) as lag_2, count(1) over (partition by user_id, medal) as medal_count from medals ) select distinct name, mail from lagged_and_counted natural join Users where contest_id = lag_2 + 2 or (medal = 'gold' and medal_count >= 3)
with medals as ( select gold_medal as user_id, 'gold' as medal, contest_id from contests union all select silver_medal as user_id, 'silver' as medal, contest_id from contests union all select bronze_medal as user_id, 'bronze' as medal, contest_id from contests ), lagged_and_counted as ( select user_id, medal,contest_id, lag(contest_id, 2) over (partition by user_id order by contest_id) as lag_2, count(1) over (partition by user_id, medal) as medal_count from medals ) select distinct name, mail from lagged_and_counted natural join Users where contest_id = lag_2 + 2 or (medal = 'gold' and medal_count >= 3)
with medals as (select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ) select u.name, u.mail from (select a.user_id from medals a join medals b on a.contest_id = b.contest_id +1 and a.user_id = b.user_id join medals c on a.contest_id = c.contest_id -1 and a.user_id = c.user_id union select gold_medal as user_id from Contests group by user_id having count(*) >=3) t join Users u on t.user_id = u.user_id
with medals as(select contest_id, gold_medal as medal from Contests union all select contest_id, silver_medal as medal from Contests union all select contest_id, bronze_medal as medal from Contests), ids as(select contest_id, medal, contest_id - row_number() over(partition by medal order by contest_id) as id_group from medals), medal_cnt as(select contest_id, medal, count(*) over(partition by medal, id_group) as cnt from ids), any_medal as(select distinct medal as user_id from medal_cnt where cnt >= 3), gold_medal as(select distinct gold_medal as user_id, count(gold_medal) as cnt from Contests group by gold_medal having count(gold_medal)>=3), candidates as(select user_id from gold_medal union select user_id from any_medal) select name, mail from candidates c join Users u on u.user_id = c.user_id
with medals as(select contest_id, gold_medal medal from contests union select contest_id, silver_medal medal from contests union select contest_id, bronze_medal medal from contests) select distinct u.name, u.mail from (select medal user_id, contest_id, rank() over (partition by medal order by contest_id) ranks from medals) t join users u on t.user_id=u.user_id group by u.user_id, (t.contest_id-t.ranks) having count(t.contest_id-t.ranks) >=3 union select distinct u.name, u.mail from (select gold_medal from contests group by 1 having count(contest_id)>=3) t join users u on t.gold_medal = u.user_id
with new as( select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests ), case_1 as ( select distinct n1.medal as id from new n1 left join new n2 on n1.contest_id+1=n2.contest_id left join new n3 on n1.contest_id+2=n3.contest_id where n1.medal=n2.medal and n2.medal=n3.medal ), case_2 as ( select distinct gold_medal as id from contests group by gold_medal having count(gold_medal)>=3 ) select u.name,u.mail from users u inner join (select id from case_1 union select id from case_2)as c on u.user_id=c.id
with new_c as ( select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests ), case1 as ( select distinct c1.medal as id from new_c c1 left join new_c c2 on c1.contest_id +1 = c2.contest_id left join new_c c3 on c1.contest_id +2 = c3.contest_id where c1.medal=c2.medal and c2.medal=c3.medal), case2 as ( select gold_medal as id from contests group by gold_medal having count(contest_id)>=3 ) select u.name,u.mail from (select id from case1 union select id from case2) as t inner join users u on u.user_id = t.id
with new_c as ( select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests ), case1 as ( select distinct c1.medal from new_c c1 left join new_c c2 on c1.contest_id +1 = c2.contest_id left join new_c c3 on c1.contest_id +2 = c3.contest_id where c1.medal=c2.medal and c2.medal=c3.medal ), case2 as ( select distinct gold_medal from contests group by gold_medal having count(*) >= 3) select name, mail from( select medal as user_id from case1 union select gold_medal as user_id from case2)A join users u on u.user_id = A.user_id
with new_c as ( select contest_id, gold_medal as medal from contests union select contest_id, silver_medal as medal from contests union select contest_id, bronze_medal as medal from contests ), case1 as ( select distinct c1.medal as id from new_c c1 left join new_c c2 on c1.contest_id +1 = c2.contest_id left join new_c c3 on c1.contest_id +2 = c3.contest_id where c1.medal=c2.medal and c2.medal=c3.medal), case2 as ( select gold_medal as id from contests group by gold_medal having count(contest_id)>=3 ) select u.name,u.mail from (select id from case1 union select id from case2) as t inner join users u on u.user_id = t.id
with new_c as (select contest_id,gold_medal as user_id from contests union all select contest_id,silver_medal as user_id from contests union all select contest_id,bronze_medal as user_id from contests) ,case1 as (select distinct a.user_id from new_c a LEFT JOIN new_c b ON a.contest_id + 1 = b.contest_id LEFT JOIN new_c c ON a.contest_id + 2 = c.contest_id where a.user_id = b.user_id and b.user_id = c.user_id) ,case2 as (select gold_medal as user_id from contests group by gold_medal having count(contest_id) >= 3) select u.name,u.mail from (select user_id from case1 union select user_id from case2) d JOIN users u ON d.user_id = u.user_id
with new_data as ( select contest_id , gold_medal as user_id from contests union all select contest_id , silver_medal as user_id from contests union all select contest_id , bronze_medal as user_id from contests) select distinct name, mail from users u cross join (select distinct(user_id) from (select *, lag(contest_id,1) over (partition by user_id order by contest_id) as lag_1, lag(contest_id,2) over (partition by user_id order by contest_id) as lag_2 from new_data)a where contest_id - lag_2=2 and contest_id - lag_1=1 union all select gold_medal as user_id from contests group by gold_medal having count(gold_medal) >=3)a on u.user_id = a.user_id
with new_data as ( select contest_id , gold_medal as user_id from contests union all select contest_id , silver_medal as user_id from contests union all select contest_id , bronze_medal as user_id from contests) select distinct name, mail from users u join ( select distinct(user_id) from (select *, lag(contest_id,1) over (partition by user_id order by contest_id) as lag_1, lag(contest_id,2) over (partition by user_id order by contest_id) as lag_2 from new_data)b where contest_id - lag_2=2 and contest_id - lag_1=1 union all select gold_medal as user_id from contests group by gold_medal having count(gold_medal) >=3 )a on u.user_id = a.user_id
with new_data as ( select contest_id , gold_medal as user_id from contests union all select contest_id , silver_medal as user_id from contests union all select contest_id , bronze_medal as user_id from contests) select distinct name, mail from users u join (select distinct(user_id) from (select *, lag(contest_id,1) over (partition by user_id order by contest_id) as lag_1, lag(contest_id,2) over (partition by user_id order by contest_id) as lag_2 from new_data)a where contest_id - lag_2=2 and contest_id - lag_1=1 union all select gold_medal as user_id from contests group by gold_medal having count(gold_medal) >=3)a on u.user_id = a.user_id
with res as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests), temp as (select distinct a.user_id from res as a join res as b on a.user_id = b.user_id join res as c on b.user_id = c.user_id where a.contest_id+1 = b.contest_id and b.contest_id +1 =c.contest_id union all select gold_medal as user_id from contests group by gold_medal having count(gold_medal)>=3) select distinct u.name, u.mail from temp as t left join users as u on t.user_id = u.user_id
with res_temp as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ) select B.name, B.mail from ( select distinct A.user_id from res_temp A join res_temp B on A.user_id = B.user_id and A.contest_id + 1 = B.contest_id join res_temp C on B.user_id = C.user_id and B.contest_id + 1 = C.contest_id union select gold_medal as user_id from Contests group by gold_medal having count(*) >= 3 ) A left join Users B on A.user_id = B.user_id
with res_temp as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ) select u.name, u.mail from ( select distinct A.user_id from res_temp A join res_temp B on A.user_id = B.user_id and A.contest_id + 1 = B.contest_id join res_temp C on B.user_id = C.user_id and B.contest_id + 1 = C.contest_id union select gold_medal as user_id from Contests group by 1 having count(contest_id) >= 3 ) a left join Users u on a.user_id = u.user_id
with res_temp as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests ), temp as (select distinct A.user_id from res_temp A join res_temp B on A.user_id = B.user_id and A.contest_id + 1 = B.contest_id join res_temp C on B.user_id = C.user_id and B.contest_id + 1 = C.contest_id union all select gold_medal from contests group by gold_medal having count(*) >= 3) select u.name, u.mail from (select distinct user_id from temp) as newTemp left join users as u on newTemp.user_id = u.user_id
with selected_users as (select gold_medal as user_id from Contests group by gold_medal having count(distinct contest_id) >2 union select c1.gold_medal as user_id from Contests c1 join Contests c2 on (c1.contest_id+1=c2.contest_id) join Contests c3 on (c2.contest_id+1=c3.contest_id) where c1.gold_medal in (c2.gold_medal,c2.silver_medal,c2.bronze_medal) and c1.gold_medal in (c3.gold_medal,c3.silver_medal,c3.bronze_medal) union select c1.silver_medal as user_id from Contests c1 join Contests c2 on (c1.contest_id+1=c2.contest_id) join Contests c3 on (c2.contest_id+1=c3.contest_id) where c1.silver_medal in (c2.gold_medal,c2.silver_medal,c2.bronze_medal) and c1.silver_medal in (c3.gold_medal,c3.silver_medal,c3.bronze_medal) union select c1.bronze_medal as user_id from Contests c1 join Contests c2 on (c1.contest_id+1=c2.contest_id) join Contests c3 on (c2.contest_id+1=c3.contest_id) where c1.bronze_medal in (c2.gold_medal,c2.silver_medal,c2.bronze_medal) and c1.bronze_medal in (c3.gold_medal,c3.silver_medal,c3.bronze_medal) ) select r.name, r.mail from Users r join selected_users on (r.user_id=selected_users.user_id)
with squeezed as ( select contest_id, gold_medal as uid from Contests union select contest_id, silver_medal as uid from Contests union select contest_id, bronze_medal as uid from Contests ), w as ( select contest_id, uid, lag(contest_id, 2) over (partition by uid order by contest_id) as prev from squeezed ), t2 as ( select uid from w where contest_id - prev = 2 ) select name, mail from t2 join users u on t2.uid = u.user_id union select u.name, u.mail from Contests c left join Users u on c.gold_medal = u.user_id group by gold_medal having count(*) >= 3
with squeezed as ( select contest_id, gold_medal as uid from Contests union select contest_id, silver_medal as uid from Contests union select contest_id, bronze_medal as uid from Contests ), w as ( select contest_id, uid, lag(contest_id, 2) over (partition by uid order by contest_id) as prev from squeezed ), t2 as ( select uid from w where contest_id - prev = 2 ) select u.name, u.mail from Contests c join users u on c.gold_medal = u.user_id group by gold_medal having count(gold_medal) >= 3 union select name, mail from t2 join users u on t2.uid = u.user_id
with t as ( SELECT *, contest_id - RANK() over (PARTITION BY user_id,user_id in (gold_medal, silver_medal, bronze_medal) order by contest_id) consecutive_ref FROM Contests JOIN Users on user_id in (gold_medal, silver_medal, bronze_medal) order by user_id, contest_id ), u as ( SELECT user_id from t GROUP BY 1 having sum(user_id=gold_medal)>=3 union select user_id FROM t GROUP BY user_id,consecutive_ref HAVING count(1) >=3 ) SELECT name, mail FROM u LEFT JOIN Users using(user_id)
with t as ( select contest_id, gold_medal as id from Contests union select contest_id, silver_medal as id from Contests union select contest_id, bronze_medal as id from Contests), cte as (select distinct t1.id from t t1, t t2, t t3 where t1.contest_id = t2.contest_id-1 and t1.contest_id = t3.contest_id -2 and t1.id = t2.id and t1.id = t3.id union select gold_medal as id from Contests group by gold_medal having count(1) >= 3) select name, mail from Users where user_id in (select id from cte)
with t as ( select contest_id, gold_medal as winner, 'gold' as medal from contests union select contest_id, bronze_medal as winner, 'bronze' as medal from contests union select contest_id, silver_medal as winner, 'silver' as medal from contests ), t1 as ( select winner,count(1) as num_gm from t where medal = 'gold' group by 1 ), t2 as ( select winner,contest_id as con, lead(contest_id) over(partition by winner order by contest_id) as next_con, lag(contest_id) over(partition by winner order by contest_id) as prev_con from t ), w as ( select winner,'g',num_gm as x from t1 where num_gm >= 3 union select winner,'c',con as x from t2 where (next_con - con) =1 and (con - prev_con) =1 ) select distinct name,mail from users u join w on u.user_id = w.winner
with t as ( select contest_id,name,mail,rank()over(partition by user_id order by contest_id) as rnk from Users join Contests on gold_medal=user_id or silver_medal=user_id or bronze_medal=user_id) select distinct name,mail from t group by mail,(contest_id -rnk) having count(contest_id-rnk)>=3 union select name,mail from Users join Contests on gold_medal=user_id group by user_id having count(user_id)>=3
with t as (select contest_id, "gold" as medal, gold_medal as user_id from contests union all select contest_id, "silver" as medal, silver_medal as user_id from contests union all select contest_id, "bronze" as medal, bronze_medal as user_id from contests) ,t2 as (select user_id from t where medal = "gold" group by user_id having count(contest_id) >= 3) ,t3 as (select distinct temp1.user_id from t temp1, t temp2 where temp1.user_id = temp2.user_id and (temp1.contest_id - temp2.contest_id) between 1 and 2 group by temp1.user_id, temp1.contest_id having count(distinct temp2.contest_id) = 2) select name, mail from t2 join users on t2.user_id = users.user_id union select name, mail from t3 join users on t3.user_id = users.user_id
with t as (select contest_id, 'gold' as medal, gold_medal as user_id from Contests union all select contest_id, 'silver' as medal, silver_medal as user_id from Contests union all select contest_id, 'bronze' as medal, bronze_medal as user_id from Contests) select name, mail from Users where user_id in ((select user_id from t where medal='gold' group by 1 having count(distinct contest_id)>=3) union all (select distinct t1.user_id from t t1, t t2, t t3 where t1.contest_id=t2.contest_id-1 and t2.contest_id=t3.contest_id-1 and t1.user_id=t2.user_id and t2.user_id=t3.user_id))
with t as (select contest_id, gold_medal as medal from Contests UNION ALL select contest_id, silver_medal as medal from Contests UNION ALL select contest_id, bronze_medal as medal from Contests) select distinct name, mail from Users where user_id in (select t1.medal from t t1 join t t2 on t1.medal = t2.medal and (t2.contest_id - t1.contest_id) between 0 and 2 group by t1.medal, t1.contest_id having count(distinct t2.contest_id) >= 3) or user_id in (select gold_medal from Contests group by gold_medal having count(distinct contest_id) >= 3)
with t as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests), t1 as (select distinct a.user_id from t a, t b, t c where a.contest_id = b.contest_id - 1 and b.contest_id = c.contest_id - 1 and a.user_id = b.user_id and b.user_id = c.user_id) select name, mail from users where user_id in (select * from t1 union all select gold_medal as user_id from contests group by 1 having count(*) >= 3)
with t as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests), t1 as (select distinct a.user_id from t a, t b, t c where a.contest_id = b.contest_id - 1 and b.contest_id = c.contest_id - 1 and a.user_id = b.user_id and b.user_id = c.user_id) select name, mail from users where user_id in (select * from t1 union all select gold_medal as user_id from contests group by 1 having count(distinct contest_id) >= 3)
with t as (select contest_id, name, mail, rank() over(partition by user_id order by contest_id) as rnk from Users u join contests c on gold_medal = user_id or silver_medal = user_id or bronze_medal = user_id) select distinct name, mail from t group by mail, (contest_id - rnk) having count(contest_id - rnk) >= 3 union select name, mail from Users join Contests on gold_medal = user_id group by user_id having count(user_id) >= 3
with t as (select contest_id,gold_medal as id from contests union all select contest_id,silver_medal as id from contests union all select contest_id,bronze_medal as id from contests ), t2 as ( select id, contest_id - row_number()over (partition by id order by contest_id) as seq from t ), t3 as (select id from t2 group by seq,id having count(*)>=3), t4 as (select * from t3 union select gold_medal as id from Contests group by gold_medal having count(*)>=3) select name,mail from t4 inner join users as u on t4.id = u.user_id
with t as (select contest_id,u.name,u.mail, u.user_id,sum(case when c.gold_medal = u.user_id then 1 else 0 end) as g from Contests as c inner join Users as u on c.gold_medal = u.user_id or c.silver_medal = u.user_id or c.bronze_medal = u.user_id group by u.user_id,u.name,u.mail,contest_id), t2 as (select name,mail,contest_id - row_number()over(partition by user_id order by contest_id asc) as seq from t ) select name, mail from t group by name, mail,user_id having sum(g) >= 3 union select name,mail from t2 group by name,mail,seq having count(*) >=3
with t as (select gold_medal as user_id, contest_id from contests union select silver_medal as user_id, contest_id from contests union select bronze_medal as user_id, contest_id from contests), opt1 as (select user_id, contest_id - rk, count(*) from (select user_id,contest_id, rank() over(partition by user_id order by contest_id) as rk from t) t1 group by 1,2 having count(*)>=3), opt2 as (select gold_medal from contests group by 1 having count(distinct contest_id) >= 3) select distinct name, mail from users where user_id in (select distinct user_id from opt1) or user_id in (select distinct gold_medal from opt2)
with t as (select user_id, mail, name, contest_id - row_number() over(partition by user_id order by contest_id) diff from users join contests on user_id=gold_medal or user_id=silver_medal or user_id=bronze_medal) select distinct name, mail from t group by user_id, diff having count(*)>=3 union select name, mail from users where user_id in (select gold_medal from contests group by gold_medal having count(*)>=3)
with t as (select user_id, mail, name, gold_medal, contest_id - row_number() over(partition by user_id order by contest_id) diff from users join contests on user_id=gold_medal or user_id=silver_medal or user_id=bronze_medal) select distinct name, mail from t group by user_id, diff having count(*)>=3 union select name, mail from users where user_id in (select gold_medal from contests group by gold_medal having count(*)>=3)
with t as( ( select gold_medal as uid from contests group by gold_medal having count(*) >= 3 ) union ( with t as( select contest_id, gold_medal as uid from contests union all select contest_id, silver_medal as uid from contests union all select contest_id, bronze_medal as uid from contests ) select distinct t.uid from t join t t2 on t2.contest_id >= t.contest_id - 2 and t2.contest_id <= t.contest_id and t.uid = t2.uid group by t.contest_id, t.uid having count(t2.uid) >= 3 ) ) select name, mail from t join users on uid = user_id
with t as( select contest_id, gold_medal as contestant from contests union select contest_id,silver_medal as contestant from contests union select contest_id,bronze_medal as contestant from contests ),t2 as ( select distinct a.contestant from t a join t b on a.contest_id+1=b.contest_id and a.contestant=b.contestant join t c on b.contest_id+1=c.contest_id and b.contestant=c.contestant ),t3 as ( select distinct gold_medal from Contests group by gold_medal having count(distinct contest_id)>=3 ),t4 as( select * from t2 union select * from t3 )select u.name,u.mail from t4 join users u on t4.contestant=u.user_id
with t0 AS ( SELECT gold_medal AS user, contest_id FROM Contests UNION ALL SELECT silver_medal AS user, contest_id FROM Contests UNION ALL SELECT bronze_medal AS user, contest_id FROM Contests ) , t1 AS( SELECT user, contest_id, RANK() OVER(PARTITION BY user ORDER BY contest_id) AS rk FROM t0 ) , t2 AS( SELECT user AS user_id, contest_id FROM t1 GROUP BY user_id, contest_id - rk HAVING COUNT(*) >= 3 UNION ALL SELECT gold_medal AS user_id, contest_id FROM Contests GROUP BY user_id HAVING COUNT(*) >=3 ) SELECT DISTINCT U.name, U.mail FROM Users U JOIN t2 ON U.user_id = t2.user_id
with t0 as ( select contest_id, gold_medal as user from contests union select contest_id, silver_medal as user from contests union select contest_id, bronze_medal as user from contests), t1 as( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ), t2 as ( select user as user_id from t1 group by user, contest_id - rn having count(*) >= 3 union all select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct u.name, u.mail from t2 inner join users u on t2.user_id = u.user_id
with t0 as ( select contest_id, gold_medal user_id from Contests union select contest_id, silver_medal user_id from Contests union select contest_id, bronze_medal user_id from Contests ), t1 as ( select distinct a.user_id from t0 a join t0 b on a.user_id=b.user_id and a.contest_id=b.contest_id-1 join t0 c on a.user_id=c.user_id and a.contest_id=c.contest_id-2 ), t2 as ( select contest_id, gold_medal user_id from Contests ), t3 as( select user_id from t2 group by user_id having count(contest_id)>=3 ), t4 as ( select user_id from t1 union select user_id from t3 ) select u.mail, u.name from t4 join Users u on t4.user_id=u.user_id
with t0 as ( select contest_id, gold_medal user_id from Contests union select contest_id, silver_medal user_id from Contests union select contest_id, bronze_medal user_id from Contests ), t1 as ( select distinct a.user_id from t0 a join t0 b on a.user_id=b.user_id and a.contest_id=b.contest_id-1 join t0 c on a.user_id=c.user_id and a.contest_id=c.contest_id-2 ), t2 as ( select contest_id, gold_medal user_id from Contests ), t3 as( select user_id from t2 group by user_id having count(contest_id)>=3 ), t4 as ( select user_id from t1 union select user_id from t3 ) select u.name, u.mail from t4 join Users u on t4.user_id=u.user_id
with t0 as ( select contest_id,silver_medal as user from contests union all select contest_id,gold_medal as user from contests union all select contest_id,bronze_medal as user from contests ), t1 as( select contest_id, user, row_number () over (partition by user order by contest_id) as rn from t0 ), t2 as ( select distinct user from t1 group by user, contest_id - rn having count(*)>=3 union all select distinct gold_medal as user from contests group by gold_medal having count(contest_id)>=3 ) select distinct name,mail from users inner join t2 on users.user_id = t2.user
with t0 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ) , t1 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ) , t2 as ( select user as user_id from t1 group by user , contest_id - rn having count(*) >= 3 union all select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct u.name, u.mail from t2 inner join users u on t2.user_id = u.user_id
with t0 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ) , t1 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ) , t2 as ( select user as user_id from t1 group by user, contest_id - rn having count(*) >= 3 union all select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct name, mail from t2 join users u on t2.user_id = u.user_id
with t0 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ) , t1 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ) , t2 as ( select user as user_id from t1 group by user, contest_id - rn having count(*) >= 3 union all select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct u.name, u.mail from t2 inner join users u on t2.user_id = u.user_id
with t0 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ) , t1 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ) , t2 as ( select user as user_id from t1 group by user, contest_id - rn having count(*) >= 3 union select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct u.name, u.mail from t2 inner join users u on t2.user_id = u.user_id
with t0 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ) , t1 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ) , t2 as ( select user as user_id from t1 group by user, contest_id - rn having count(*) >= 3 union select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select u.name, u.mail from t2 inner join users u on t2.user_id = u.user_id
with t0 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ) , t1 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ) , t2 as ( select user as user_id from t1 group by user, contest_id - rn having count(*) >= 3 union select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select u.name, u.mail from t2 join users u on t2.user_id = u.user_id
with t0 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ), t1 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ), t2 as ( select distinct user user_id from t1 group by user, contest_id-rn having count(*) >= 3 union all select gold_medal user_id from contests group by gold_medal having count(*) >=3 ) select name, mail from users where user_id in (select * from t2)
with t0 as ( select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests) , t1 as ( select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0 ) , t2 as ( select user as user_id from t1 group by user, contest_id - rn having count(*) >= 3 union all select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct u.name, u.mail from t2 inner join users u on t2.user_id = u.user_id
with t0 as ( select gold_medal as user_id, contest_id from Contests union all select silver_medal as user_id, contest_id from Contests union all select bronze_medal as user_id, contest_id from Contests ), t1 as ( select user_id, contest_id, row_number() over(partition by user_id order by contest_id) as flag from t0 ), t2 as ( select user_id from t1 group by user_id,contest_id - flag having count(*) >= 3 union all select gold_medal as user_id from Contests group by user_id having count(*) >= 3 ) select distinct u.name,u.mail from t2 t join Users u on t.user_id = u.user_id
with t0 as (select gold_medal as user, contest_id from Contests union all select silver_medal as user, contest_id from Contests union all select bronze_medal as user, contest_id from Contests) , t1 as (select user, contest_id, row_number()over(partition by user order by contest_id) as rn from t0 ), t2 as (select user as user_id from t1 group by user, contest_id -rn having count(*)>=3 union all select gold_medal as user_id from contests group by gold_medal having count(*)>=3) select distinct u.name, u.mail from t2 inner join users u on t2.user_id = u.user_id
with t0 as (select gold_medal as user, contest_id from contests union all select silver_medal as user, contest_id from contests union all select bronze_medal as user, contest_id from contests ) , t1 as (select user, contest_id, row_number() over(partition by user order by contest_id) as rn from t0) , t2 as (select user as user_id from t1 group by user, contest_id - rn having count(*) >= 3 union all select gold_medal as user_id from contests group by gold_medal having count(*) >= 3 ) select distinct name, mail from t2 join users u on t2.user_id = u.user_id
with t0 as (select gold_medal as user_id, contest_id from Contests union select silver_medal as user_id, contest_id from Contests union select bronze_medal as user_id, contest_id from Contests), t1 as ( select user_id, contest_id, row_number()over(partition by user_id order by contest_id) as rnk from t0 ), t2 as ( select user_id from t1 group by user_id, contest_id - rnk having count(*) >=3 union select gold_medal as user_id from Contests group by gold_medal having count(contest_id) >= 3 ) select name, mail from t2 inner join Users u on t2.user_id = u.user_id
with t0 as( SELECT gold_medal as user, contest_id from Contests union all SELECT silver_medal as user, contest_id from Contests union all SELECT bronze_medal as user, contest_id from Contests) , t1 as ( select user, contest_id, row_number()OVER(PARTITION BY user ORDER BY contest_id) as 'rn' from t0) , t2 as ( select user as user_id from t1 GROUP BY user, contest_id-rn HAVING count(*)>=3 union all SELECT gold_medal as user_id FROM contests GROUP BY 1 HAVING count(*)>=3) SELECT distinct u.name, u.mail FROM t2 JOIN Users u on t2.user_id = u.user_id
with t1 as ( select contest_id, 'gold' as medal, gold_medal as user_id from contests union select contest_id, 'silver' as medal, silver_medal as user_id from contests union select contest_id, 'bronze' as medal, bronze_medal as user_id from contests), t2 as ( select user_id from t1 where medal = 'gold' group by user_id having count(*)>=3 union select a.user_id from t1 a join t1 b on a.contest_id=b.contest_id + 1 join t1 c on b.contest_id=c.contest_id + 1 where a.user_id = b.user_id and b.user_id = c.user_id) select name, mail from users inner join t2 on users.user_id = t2.user_id
with t1 as ( select contest_id, gold_medal as medal from Contests union all select contest_id, silver_medal as medal from Contests union all select contest_id, bronze_medal as medal from Contests ) select u.name, u.mail from ( (select distinct a.medal as user_id from t1 a left join t1 b on a.medal=b.medal left join t1 c on a.medal=c.medal where a.contest_id+1=b.contest_id and a.contest_id+2=c.contest_id union select distinct gold_medal as user_id from Contests group by gold_medal having count(*)>=3))d join Users u on d.user_id=u.user_id
with t1 as ( select contest_id, gold_medal as winner from contests union all select contest_id, silver_medal as winner from contests union all select contest_id, bronze_medal as winner from contests ), t2 as ( select winner, contest_id, row_number () over (partition by winner order by contest_id) as roww from t1 ), t3 as (select distinct winner, (contest_id - roww) as gap from t2 group by winner, contest_id - roww having count(*) >= 3 ) select u.name, u.mail from t3 join users u on t3.winner = u.user_id union select u.name, u.mail from ( select gold_medal from contests group by gold_medal having count(gold_medal) >= 3 ) a join users u on a.gold_medal = u.user_id
with t1 as ( select gold_medal from Contests group by gold_medal having count(*) >=3 ), t2 as ( select gold_medal as user, contest_id from contests union select silver_medal as user, contest_id from contests union select bronze_medal as user, contest_id from contests ), t3 as ( select user ,contest_id, row_number() over (partition by user order by contest_id) as rn from t2 ), t4 as ( select user from t3 group by user, contest_id-rn having count(*) >=3 ), t5 as ( select t1.gold_medal as user_id from t1 union select t4. user from t4) select u.name as name, u.mail as mail from t5 join users u on t5.user_id = u.user_id
with t1 as ( select gold_medal from Contests group by gold_medal having count(contest_id) >=3 ), t2 as ( select gold_medal as user_id, contest_id from Contests union select silver_medal as user_id, contest_id from Contests union select bronze_medal as user_id, contest_id from Contests ), t3 as ( select user_id, contest_id, LAG(contest_id, 2) over (partition by user_id order by contest_id) as lag_count from t2 ) select name, mail from Users u where u.User_id in (select gold_medal from t1) or u.User_id in (select user_id from t3 where t3.contest_id = 2+lag_count )
with t1 as ( select name, mail from contests c join users u on c.gold_medal = u.user_id group by gold_medal having count(contest_id) >= 3), t2 as ( select contest_id, gold_medal as user_id from contests UNION select contest_id, silver_medal from contests UNION select contest_id, bronze_medal from contests), t3 as ( select a.user_id from t2 a, t2 b, t2 c where a.user_id = b.user_id and a.user_id = c.user_id and b.user_id =c.user_id and a.contest_id +1 = b.contest_id and b.contest_id +1 = c.contest_id and a.contest_id +2 = c.contest_id) select distinct name, mail from t3 join users on t3.user_id = users.user_id UNION SELECT * from t1
with t1 as ( select user_id, mail, name, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze , lag(contest_id, 2) over (partition by user_id order by contest_id) as consec_wins from users u left join contests c on u.user_id = c.gold_medal or u.user_id = c.silver_medal or u.user_id = c.bronze_medal ) select name, mail from t1 group by user_id having sum(gold) >= 3 or sum(contest_id - consec_wins = 2) > 0
with t1 as ( select user_id, name, mail, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id=bronze_medal as bronze, lag(contest_id, 2) over (partition by user_id order by contest_id) as prev_2 from Users left join Contests on user_id = gold_medal or user_id = silver_medal or user_id = bronze_medal ) select name, mail from t1 group by user_id having sum(gold)>=3 or sum(contest_id-prev_2=2)>=1
with t1 as (select contest_id, mail, name, rank() over(partition by user_id order by contest_id) as rnk from Contests c join Users u on c.gold_medal = u.user_id or c.silver_medal = u.user_id or c.bronze_medal = u.user_id) select name, mail from t1 group by mail, (contest_id-rnk) having count(contest_id-rnk) >= 3 union select name, mail from Contests c join Users u on c.gold_medal = u.user_id group by gold_medal having count(contest_id) >= 3
with t1 as (select gold_medal as user_id from contests group by 1 having count(*) >= 3), t2 as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests), t3 as (select user_id from t2 where (contest_id+1, user_id) in (select * from t2) and (contest_id+2, user_id) in (select * from t2)) select name, mail from users where user_id in (select * from t1 union select * from t3)
with t1 as (select gold_medal from Contests group by gold_medal having count(gold_medal)>=3 ), t2 as (select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal from Contests union all select contest_id, bronze_medal from Contests order by contest_id ), t3 as (select contest_id, user_id from t2 where (contest_id, user_id) in (select contest_id-1, user_id from t2) and (contest_id, user_id) in (select contest_id+1, user_id from t2) ) select name, mail from Users where user_id in (select gold_medal from t1) or user_id in (select user_id from t3)
with t1 as (select gold_medal from contests group by gold_medal having count(contest_id) >= 3), t2 as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests), t3 as (select contest_id, user_id from t2 where ((contest_id + 1, user_id) in (select contest_id, user_id from t2) and (contest_id + 2, user_id) in (select contest_id, user_id from t2)) or ((contest_id - 1, user_id) in (select contest_id, user_id from t2) and (contest_id - 2, user_id) in (select contest_id, user_id from t2))) select name, mail from users where user_id in (select gold_medal from t1) or user_id in (select user_id from t3)
with t1 as (select gold_medal from contests group by gold_medal having count(contest_id) >= 3), t2 as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests), t3 as (select contest_id, user_id from t2 where ((contest_id+1, user_id) in (select contest_id, user_id from t2) and (contest_id+2, user_id) in (select contest_id, user_id from t2)) or ((contest_id-1, user_id) in (select contest_id, user_id from t2) and (contest_id-2, user_id) in (select contest_id, user_id from t2))) select name, mail from users where user_id in (select gold_medal from t1) or user_id in (select user_id from t3)
with t1 as (select gold_medal from contests group by gold_medal having count(contest_id) >= 3), t2 as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests), t3 as (select contest_id, user_id from t2 where ((contest_id+1, user_id) in (select contest_id, user_id from t2) and (contest_id+2, user_id) in (select contest_id, user_id from t2))) select name, mail from users where user_id in (select gold_medal from t1) or user_id in (select user_id from t3)
with t1 as (select gold_medal from contests group by gold_medal having count(contest_id) >= 3), t2 as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal from contests union all select contest_id, bronze_medal from contests), t3 as (select contest_id, user_id from t2 where (contest_id+1, user_id) in (select contest_id, user_id from t2) and (contest_id+2, user_id) in (select contest_id, user_id from t2)) select name, mail from users where user_id in (select gold_medal from t1) or user_id in (select user_id from t3)
with t1 as (select gold_medal, count(gold_medal) from contests group by gold_medal having count(gold_medal) >= 3), t2 as (select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests), t3 as (select medal, contest_id, lag(contest_id, 2) over (partition by medal order by contest_id) as l from t2) select name, mail from users u inner join (select distinct medal from t3 where contest_id - l = 2 union select gold_medal as medal from t1) t on user_id = medal
with t1 as(select gold_medal from contests group by gold_medal having count(contest_id)>=3), t2 as (select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests), t3 as (select contest_id, user_id from t2 where ((contest_id+1,user_id) in (select contest_id, user_id from t2) and (contest_id+2,user_id) in (select contest_id, user_id from t2)) or ((contest_id-1,user_id) in (select contest_id, user_id from t2) and (contest_id-2,user_id) in (select contest_id, user_id from t2))) select name, mail from users where user_id in (select gold_medal from t1) or user_id in (select user_id from t3)
with table1 as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests) select u.name, u.mail from Users u where u.user_id in (select distinct a.user_id from table1 a join table1 b on a.contest_id+1=b.contest_id and a.user_id=b.user_id join table1 c on a.contest_id+2=c.contest_id and a.user_id=c.user_id ) or u.user_id in (select gold_medal from Contests group by 1 having count(contest_id)>=3)
with tb1 as ( select Contest_id, gold_medal from Contests union all select Contest_id, silver_medal from Contests union all select Contest_id, bronze_medal from Contests ) select name,mail from ( select distinct a.gold_medal from tb1 a, tb1 b, tb1 c where a.Contest_id+1=b.Contest_id and a.Contest_id+2=c.Contest_id and a.gold_medal=b.gold_medal and b.gold_medal=c.gold_medal union select gold_medal from contests group by gold_medal having count(gold_medal)>=3) tb2, users where users.user_id=tb2.gold_medal
with tb1 as ( select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests ), tb2 as ( select contest_id, medal, contest_id - rank() over(partition by medal order by contest_id) as gp from tb1 ), tb3 as ( select gold_medal as medal from contests group by gold_medal having count(*) > 2 ), tb4 as ( select distinct medal from tb2 group by medal, gp having count(*) > 2) select distinct mail, name from users where user_id in (select medal from tb3 union select medal from tb4)
with temp as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests), temp2 as ( select t1.user_id as uid from temp t1 join temp t2 on t1.user_id=t2.user_id and t1.contest_id=t2.contest_id+1 join temp t3 on t2.user_id=t3.user_id and t2.contest_id=t3.contest_id+1 union (select gold_medal as uid from contests group by 1 having count(1)>=3)) select name, mail from users where user_id in (select uid from temp2)
with temp as ( select gold_medal as user_id, contest_id from contests union all select silver_medal as user_id, contest_id from contests union all select bronze_medal as user_id, contest_id from contests order by user_id, contest_id), temp_2 as (select user_id, contest_id, lead(contest_id,2) over(partition by user_id order by contest_id) as nx_2 from temp), temp_3 as (select distinct user_id as user_id from temp_2 where nx_2 - contest_id = 2 union select gold_medal as user_id from contests group by gold_medal having count(contest_id) >=3) select name, mail from users where user_id in (select user_id from temp_3)
with temp as ( select user_id, contest_id, rank() over (partition by user_id order by contest_id) as rnk from ( select gold_medal as user_id, contest_id from Contests union select silver_medal as user_id, contest_id from Contests union select bronze_medal as user_id, contest_id from Contests ) TBL), temp2 as ( select distinct U.name, U.mail from ( select user_id, contest_id - rnk as delta, count(*) as consecutive_cnt from temp group by 1,2) TBL left join Users U on TBL.user_id = U.user_id where consecutive_cnt >= 3 ) (select distinct U.name, U.mail from( select gold_medal, count(contest_id) as gold_cnt from Contests group by 1 ) TBL left join Users U on TBL.gold_medal = U.user_id where gold_cnt >=3) union select * from temp2
with temp as ( select user_id, contest_id, rank() over (partition by user_id order by contest_id) as rnk from ( select gold_medal as user_id, contest_id from Contests union select silver_medal as user_id, contest_id from Contests union select bronze_medal as user_id, contest_id from Contests ) TBL), temp2 as ( select user_id from temp group by user_id, contest_id - rnk having count(*) >=3 union select gold_medal as user_id from Contests group by 1 having count(*) >=3 ) select distinct U.name, U.mail from temp2 left join Users U on temp2.user_id = U.user_id
with temp as (select contest_id, gold_medal as medal from Contests UNION select contest_id, silver_medal as medal from Contests UNION select contest_id, bronze_medal as medal from Contests), temp1 as (select distinct t1.medal as id from temp t1, temp t2, temp t3 where t1.contest_id=t2.contest_id-1 and t1.contest_id=t3.contest_id-2 and t1.medal=t2.medal and t2.medal=t3.medal), temp3 as (select gold_medal as id from Contests group by gold_medal having count(gold_medal) >=3) select u.name, u.mail from Users u join (select id from temp1 union select id from temp3) a on u.user_id=a.id
with temp as( select contest_id,gold_medal as user_id from Contests union all select contest_id,silver_medal as user_id from Contests union all select contest_id,bronze_medal as user_id from Contests ) select b.name,b.mail from( select distinct a.user_id from temp a join temp b on a.user_id = b.user_id and a.contest_id+1 = b.contest_id join temp c on b.user_id = c.user_id and b.contest_id+1 = c.contest_id union select gold_medal as user_id from Contests group by gold_medal having count(*) >= 3 ) a left join Users b on a.user_id = b.user_id
with temp as(select user_id, name, mail, contest_id, user_id = gold_medal as gold, user_id = silver_medal as silver, user_id = bronze_medal as bronze, lag(contest_id, 2) over(partition by user_id order by contest_id) as previous from users left join contests on user_id = gold_medal or user_id = silver_medal or user_id=bronze_medal) select name, mail from temp group by user_id having sum(gold) >= 3 or sum(contest_id - previous = 2) >= 1
with temp1 as ( select contest_id, gold_medal as uid from Contests UNION ALL select contest_id, silver_medal as uid from Contests UNION ALL select contest_id, bronze_medal as uid from Contests ) , temp2 as ( select uid, temp1.contest_id, row_number() over(partition by uid order by temp1.contest_id) as rn from temp1 ), temp3 as ( select uid as user_id from temp2 group by uid, contest_id - rn having count(*) >= 3 UNION ALL select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >= 3 ) select distinct u.name, mail from temp3 inner join Users u on u.user_id = temp3.user_id
with temp1 as( select gold_medal as user_id from contests group by gold_medal having count(user_id) >=3 ), temp2 as( select contest_id, gold_medal as medal from contests union all select contest_id, silver_medal as medal from contests union all select contest_id, bronze_medal as medal from contests ), temp3 as( select contest_id, medal as user_id from temp2 where ((contest_id+1, medal) in (select contest_id, medal from temp2)) and ((contest_id+2, medal) in (select contest_id, medal from temp2)) or ((contest_id-1, medal) in (select contest_id, medal from temp2)) and ((contest_id-2, medal) in (select contest_id, medal from temp2)) ) select name, mail from users where user_id in (select user_id from temp1) or user_id in (select user_id from temp3)
with three_golds as ( select b.name, mail from Contests a inner join Users b on a.gold_medal=b.user_id group by 1,2 Having count(contest_id)>=3 ), all_winners as ( select contest_id, gold_medal as user_id from Contests UNION ALL select contest_id, silver_medal as user_id from Contests UNION ALL select contest_id, bronze_medal as user_id from Contests ) select name, mail from three_golds UNION select distinct b.name, b.mail from( select user_id, contest_id - row_number() over (partition by user_id order by contest_id) as diff from all_winners )a inner join Users b on a.user_id =b.user_id group by 1,2,diff Having count(diff) >=3
with three_plus_gold as ( select gold_medal as user_id from contests group by gold_medal having count(contest_id)>=3 ), all_medal as ( select contest_id, gold_medal as user_id from contests union all select contest_id, silver_medal as user_id from contests union all select contest_id, bronze_medal as user_id from contests ), rn as ( select user_id, contest_id, row_number() over(partition by user_id order by contest_id) as rn from all_medal ), three_consecutive as ( select user_id, contest_id-rn, count(*) from rn group by user_id, contest_id-rn having count(*)>=3 ) , selected as ( select user_id from three_plus_gold union select user_id from three_consecutive ) select u.name, u.mail from users u inner join selected s on s.user_id=u.user_id
with tmp as ( select contest_id, gold_medal as user_id from Contests union all select contest_id, silver_medal as user_id from Contests union all select contest_id, bronze_medal as user_id from Contests order by 2,1) select a.name, a.mail from users a inner join ( select gold_medal as user_id from Contests group by 1 having count(contest_id)>=3 union select distinct user_id from (select user_id, lead(contest_id,2) over (partition by user_id order by contest_id) - contest_id as diff from tmp) t where diff=2) b on a.user_id=b.user_id
with tmp as (select contest_id, 'gold' as medal, gold_medal as user_id from contests union select contest_id, 'silver' as medal, silver_medal as user_id from contests union select contest_id, 'bronze' as medal, bronze_medal as user_id from contests order by user_id, contest_id ) select name, mail from (select * from tmp where medal='gold') a inner join users b on a.user_id=b.user_id group by 1,2 having count(contest_id)>=3 union select distinct name,mail from (select *, lead(contest_id,2) over (partition by user_id order by contest_id) as lead_contest from tmp) a inner join users b on a.user_id=b.user_id where lead_contest-contest_id=2
with tmp as( select contest_id, gold_medal as medal from contests union select contest_id, silver_medal as medal from contests union select contest_id, bronze_medal as medal from contests ), tmp2 as( select *, row_number() over(partition by medal order by contest_id) as rn from tmp ), tmp3 as( select medal from tmp2 group by medal, (contest_id - rn) having count(*) >= 3 ), tmp4 as( select gold_medal from contests group by 1 having count(*) >= 3 ) select name, mail from users where user_id in ( select gold_medal as medal from tmp4 union select medal from tmp3 )
with unioncontests as ( select contest_id ,gold_medal user_id ,'gold' type from Contests union select contest_id ,silver_medal user_id ,'silver' type from Contests union select contest_id ,bronze_medal user_id ,'broze' type from Contests group by contest_id order by contest_id ) select name, mail from Users where user_id in (select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >= 3 union all ( select c1.user_id from unioncontests c1 join unioncontests c2 on c1.contest_id+1 = c2.contest_id join unioncontests c3 on c2.contest_id+1 = c3.contest_id where c1.user_id = c2.user_id and c2.user_id = c3.user_id ))
with unioncontests as ( select contest_id ,gold_medal user_id ,'gold' type from Contests union select contest_id ,silver_medal user_id ,'silver' type from Contests union select contest_id ,bronze_medal user_id ,'broze' type from Contests group by contest_id order by contest_id ) select users.name ,users.mail from Users users join( select gold_medal as user_id from Contests group by gold_medal having count(gold_medal) >= 3 union ( select c1.user_id from unioncontests c1 join unioncontests c2 on c1.contest_id+1 = c2.contest_id join unioncontests c3 on c2.contest_id+1 = c3.contest_id where c1.user_id = c2.user_id and c2.user_id = c3.user_id ) ) A on users.user_id = A.user_id
with uniontbl as (select contest_id, gold_medal as userid from contests union all select contest_id, silver_medal as userid from contests union all select contest_id, bronze_medal as userid from contests), ordertbl as (select *, row_number() over(partition by userid order by contest_id asc) as rn from uniontbl order by userid asc, contest_id asc), anymedal as (select distinct userid from (select *, contest_id-rn as diff from ordertbl)temp group by userid, diff having count(*) >= 3), goldmedal as (select gold_medal as userid_gold from contests group by gold_medal having count(*) >=3) select name, mail from users u join anymedal a on u.user_id = a.userid union select name, mail from users u join goldmedal g on u.user_id = g.userid_gold
with userInfo as ( select contest_id, gold_medal as user_id from Contests UNION ALL select contest_id, silver_medal as user_id from Contests UNION ALL select contest_id, bronze_medal as user_id from Contests ), qualifUsers as ( select distinct a.user_id from (select user_id, contest_id - lag(contest_id, 1) over (partition by user_id order by contest_id) as diff1, contest_id - lag(contest_id, 2) over (partition by user_id order by contest_id) as diff2 from userInfo) a where diff1 = 1 and diff2 = 2 ), qualifUsers2 as ( select gold_medal as user_id from Contests group by 1 having count(contest_id) >= 3 ) select name, mail from Users left join qualifUsers using (user_id) left join qualifUsers2 using (user_id) where qualifUsers.user_id is not null or qualifUsers2.user_id is not null
with userInfo as ( select contest_id, gold_medal as user_id from Contests UNION ALL select contest_id, silver_medal as user_id from Contests UNION ALL select contest_id, bronze_medal as user_id from Contests ), qualifUsers as ( select distinct a.user_id from userInfo a join userInfo b on a.contest_id = b.contest_id - 1 and a.user_id = b.user_id join userInfo c on a.contest_id = c.contest_id - 2 and a.user_id = c.user_id ), qualifUsers2 as ( select gold_medal as user_id from Contests group by 1 having count(contest_id) >= 3 ) select name, mail from Users left join qualifUsers using (user_id) left join qualifUsers2 using (user_id) where qualifUsers.user_id is not null or qualifUsers2.user_id is not null
with user_medal as ( select user_id, mail, name, contest_id, case when user_id=gold_medal then 'gold' when user_id=silver_medal then 'silver' when user_id=bronze_medal then 'bronze' end as award from users u join contests c on user_id=gold_medal or user_id=silver_medal or user_id=bronze_medal ) select u1.name, u1.mail from user_medal u1 join user_medal u2 on u1.contest_id-u2.contest_id<=2 and u1.contest_id-u2.contest_id>=0 and u1.user_id=u2.user_id group by u1.user_id, u1.mail, u1.name, u1.contest_id having count(u1.award)=3 union select name, mail from user_medal group by user_id having sum(case when award='gold' then 1 end)>=3
with win_3_medal as( select gold_medal as id from contests group by gold_medal having count(*) >= 3 ), win_3_consecutive as( select contest_id, gold_medal as id from contests union select contest_id,silver_medal as id from contests union select contest_id, bronze_medal as id from contests), tmp as( select w1.id from win_3_consecutive as w1 join win_3_consecutive as w2 join win_3_consecutive as w3 on w1.contest_id = w2.contest_id-1 and w2.contest_id=w3.contest_id-1 where w1.id = w2.id and w2.id=w3.id and w1.id=w3.id ), tmp1 as( select id from win_3_medal union select id from tmp) select users.name,users.mail from tmp1 left join users on tmp1.id= users.user_id
with won_medal as ( select contest_id, Users.user_id from Contests inner join Users on (Users.user_id = Contests.gold_medal) or (Users.user_id = Contests.silver_medal) or (Users.user_id =Contests.bronze_medal) ), any_medal as ( select user_id from ( select user_id, contest_id, lead(contest_id) over(partition by user_id order by contest_id) as lead_, lag(contest_id) over (partition by user_id order by contest_id) as lag_ from won_medal A ) A where lead_ - contest_id =1 and contest_id-lag_=1 ), gold_candidates as ( select gold_medal as user_id from Contests group by gold_medal having count(*)>=3 ), all_candidates as ( select * from gold_candidates union select * from any_medal ) select Users.name, Users.mail from Users inner join all_candidates on Users.user_id = all_candidates.user_id
with x as ( select gold_medal as user_id, contest_id from contests union all select silver_medal as user_id, contest_id from contests union all select bronze_medal as user_id, contest_id from contests ), y as ( select user_id, contest_id, row_number() over (partition by user_id order by contest_id) as rn from x ), z as ( select user_id, contest_id-rn, count(contest_id-rn) from y group by 1,2 having count(contest_id-rn) >= 3 ), a as ( select gold_medal as user_id from contests group by 1 having count(contest_id) >= 3 ) select name,mail from users where user_id in ( select user_id from z union select user_id from a )
with x as ( select u.*, c.contest_id, CASE WHEN c.gold_medal = u.user_id then 1 else 0 end as gold_medal, 1 as medal_winner from users u join contests c on u.user_id = c.gold_medal or u.user_id = c.silver_medal or u.user_id = c.bronze_medal ), gold as ( select name, mail from x group by 1, 2 having sum(gold_medal) >= 3), three_or_more as ( select name, mail from (select name, mail, (contest_id - row_number() over (partition by user_id order by contest_id)) as grp from x) a group by name, mail, grp having count(*) >= 3 ) select * from three_or_more union select * from gold
