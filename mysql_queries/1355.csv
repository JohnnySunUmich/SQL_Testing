SELECT A.activity FROM ( SELECT activity, COUNT(*) num_friends FROM Friends GROUP BY activity ) AS A INNER JOIN ( SELECT MIN(num_friends) min_count, MAX(num_friends) max_count FROM ( SELECT activity, COUNT(*) num_friends FROM Friends GROUP BY activity ) AS A ) AS B ON A.num_friends != B.min_count AND A.num_friends != B.max_count
SELECT A.activity FROM (SELECT activity, COUNT(name) AS count_name, MAX(COUNT(*)) OVER () AS max_count, MIN(COUNT(*)) OVER () AS min_count FROM Friends GROUP BY activity) AS A WHERE A.count_name NOT IN (A.max_count, A.min_count)
SELECT ACTIVITY FROM (SELECT A.name AS ACTIVITY, COUNT(*) AS counter FROM Activities A JOIN Friends F ON A.name=F.activity GROUP BY A.id, A.name HAVING counter NOT IN (SELECT MAX(counter) FROM(SELECT COUNT(*) AS counter FROM Activities A JOIN Friends F ON A.name=F.activity GROUP BY A.id, A.name ) Temp) AND counter NOT IN (SELECT MIN(counter) FROM(SELECT COUNT(*) AS counter FROM Activities A JOIN Friends F ON A.name=F.activity GROUP BY A.id, A.name ) Temp)) Temp2
SELECT ACTIVITY FROM (with cte as (SELECT COUNT(ACTIVITY) MINMAX, ACTIVITY FROM FRIENDS GROUP BY ACTIVITY) SELECT ACTIVITY, COUNT(ACTIVITY) FROM FRIENDS GROUP BY ACTIVITY HAVING COUNT(ACTIVITY) != (SELECT MAX(MINMAX) FROM CTE) AND COUNT(ACTIVITY) != (SELECT MIN(MINMAX) FROM CTE) ) AS B
SELECT B.activity FROM (SELECT activity, COUNT(id) no_count FROM Friends GROUP BY activity) B WHERE B.no_count != (SELECT MIN(A.no_count) min_count FROM (SELECT activity, COUNT(id) no_count FROM Friends GROUP BY activity) A) AND B.no_count != (SELECT MAX(A.no_count) max_count FROM (SELECT activity, COUNT(id) no_count FROM Friends GROUP BY activity) A)
SELECT DISTINCT activity FROM Friends GROUP BY 1 HAVING COUNT(id) != ( SELECT COUNT(id) FROM Friends GROUP BY activity ORDER BY COUNT(id) LIMIT 1) AND COUNT(id) != ( SELECT COUNT(id) FROM Friends GROUP BY activity ORDER BY COUNT(id) DESC LIMIT 1)
SELECT DISTINCT activity FROM Friends GROUP BY activity HAVING COUNT(id) != (SELECT COUNT(id) FROM Friends GROUP BY activity ORDER BY COUNT(id) LIMIT 1) AND COUNT(id) != (SELECT COUNT(id) FROM Friends GROUP BY activity ORDER BY COUNT(id) DESC LIMIT 1)
SELECT DISTINCT(name) AS "activity" FROM Activities WHERE name NOT IN (select activity from friends group by activity having count(*)= (select count(*) from friends group by activity order by 1 limit 1) or count(*)= (select count(*) from friends group by activity order by 1 desc limit 1))
SELECT F.activity FROM Friends F GROUP BY 1 HAVING COUNT(*) < (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY 1 DESC LIMIT 1) AND COUNT(*) > (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY 1 ASC LIMIT 1)
SELECT a.activity FROM ( SELECT activity, COUNT(id) AS cnt FROM friends GROUP BY activity ) a INNER JOIN ( SELECT MIN(cnt) AS min_cnt, MAX(cnt) AS max_cnt FROM ( SELECT activity, COUNT(id) AS cnt FROM friends GROUP BY activity ) x ) m ON a.cnt NOT IN (m.min_cnt, m.max_cnt)
SELECT activity FROM ( SELECT activity, COUNT(*) AS 'act_num', MAX(COUNT(*)) OVER() AS 'max_act', MIN(COUNT(*)) OVER() AS 'min_act' FROM Friends GROUP BY activity ORDER BY act_num DESC ) AS TABLE1 WHERE act_num NOT IN (max_act, min_act)
SELECT activity FROM ( SELECT activity, COUNT(*) as 'counts', DENSE_RANK() OVER(order by count(distinct id) desc) as 'rank_desc', DENSE_RANK() OVER(order by count(distinct id) asc) as 'rank_asc' FROM Friends GROUP BY activity ) as tmp WHERE rank_desc!=1 AND rank_asc!=1
SELECT activity FROM ( SELECT activity, COUNT(activity), RANK() OVER(ORDER BY COUNT(activity) ASC) AS 'r1', RANK() OVER(ORDER BY COUNT(activity) DESC) AS 'r2' FROM Friends GROUP BY activity) AS tbl WHERE r1 != 1 AND r2 != 1
SELECT activity FROM ( SELECT activity, COUNT(id) AS ct FROM Friends GROUP BY activity ) AS t2 WHERE ct NOT IN ( SELECT MAX(ct) AS max_ct FROM ( SELECT activity, COUNT(id) AS ct FROM Friends GROUP BY activity ) AS t1 ) AND ct NOT IN ( SELECT MIN(ct) AS max_ct FROM ( SELECT activity, COUNT(id) AS ct FROM Friends GROUP BY activity ) AS t1 )
SELECT activity FROM ( SELECT activity, COUNT(id) AS ct, MAX(COUNT(id)) OVER () AS max_ct, MIN(COUNT(id)) OVER () AS min_ct FROM friends GROUP BY activity ) a WHERE ct <> max_Ct and ct <> min_ct
SELECT activity FROM ( SELECT activity, COUNT(id) AS participants FROM Friends GROUP BY activity HAVING participants != (SELECT MAX(p) FROM (SELECT COUNT(id) AS p,activity FROM Friends GROUP BY 2) a) AND participants != (SELECT MIN(p) FROM (SELECT COUNT(id) AS p,activity FROM Friends GROUP BY 2) a) ) b
SELECT activity FROM ( SELECT activity, RANK() OVER(ORDER BY COUNT(*)) AS rk, RANK() OVER(ORDER BY COUNT(*) DESC) AS rk_desc FROM Friends GROUP BY activity) temp WHERE rk!=1 AND rk_desc!=1
SELECT activity FROM ( SELECT activity, RANK() OVER(ORDER BY COUNT(F.id) ASC) AS RK1, RANK() OVER(ORDER BY COUNT(F.id) DESC) AS RK2 FROM Activities A LEFT JOIN Friends F ON A.name = F.activity GROUP BY activity ) T WHERE RK1 <> 1 AND RK2 <> 1
SELECT activity FROM ( SELECT activity, RANK() OVER(ORDER BY ct ASC) AS ranking_asc, RANK() OVER(ORDER BY ct DESC) AS ranking_desc FROM ( SELECT activity, COUNT(DISTINCT id) as ct FROM Friends GROUP BY activity) as sub1) as sub2 WHERE ranking_asc != 1 AND ranking_desc != 1
SELECT activity FROM (SELECT A1.name activity, COUNT(*) CNT, MAX(COUNT(*)) OVER() MAX_CNT, MIN(COUNT(*)) OVER() MIN_CNT FROM Activities A1 JOIN Friends F1 ON A1.name = F1.activity GROUP BY 1) TEMP WHERE CNT <> MAX_CNT AND CNT <> MIN_CNT
SELECT activity FROM (SELECT activity, DENSE_RANK() OVER(ORDER BY COUNT(id)) AS rk1, DENSE_RANK() OVER( ORDER BY COUNT(id) DESC) AS rk2 FROM Friends GROUP BY activity) AS temp WHERE rk1 != 1 AND rk2 != 1
SELECT activity FROM (SELECT activity, RANK() OVER(ORDER BY COUNT(DISTINCT id) DESC) AS rk1, RANK() OVER(ORDER BY COUNT(DISTINCT id)) AS rk2 FROM Friends GROUP BY 1) AS t WHERE rk1 != 1 AND rk2 != 1
SELECT activity FROM (SELECT activity, count(activity) as ac, max(count(activity)) OVER () as max_num, min(count(activity)) OVER () as min_num FROM Friends GROUP BY activity ) tb1 WHERE ac not in (max_num, min_num)
SELECT activity FROM (SELECT activity, dense_rank() over(order by count(distinct id) desc) AS top_rnk, dense_rank() over(order by count(distinct id) asc) AS bot_rnk FROM Friends GROUP BY 1) t WHERE top_rnk!=1 AND bot_rnk!=1
SELECT activity FROM (SELECT activity, dense_rank() over(order by count(id) desc) AS top_rnk, dense_rank() over(order by count(id) asc) AS bot_rnk FROM Friends GROUP BY 1) t WHERE top_rnk!=1 AND bot_rnk!=1
SELECT activity FROM (SELECT id, activity, RANK() OVER(ORDER BY COUNT(*) DESC) rk_desc, RANK() OVER(ORDER BY COUNT(*) ASC) rk_asc FROM Friends GROUP BY 2) tmp WHERE rk_desc != 1 AND rk_asc!=1
SELECT activity FROM Friends GROUP BY 1 HAVING COUNT(*) <> (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1) AND COUNT(*)<> (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY COUNT(*) LIMIT 1)
SELECT activity FROM Friends GROUP BY 1 HAVING COUNT(id) > (SELECT COUNT(id) FROM Friends GROUP BY activity ORDER BY 1 LIMIT 1) AND COUNT(id) < (SELECT COUNT(id) FROM Friends GROUP BY activity ORDER BY 1 DESC LIMIT 1)
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(*) <> (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY 1 LIMIT 1) AND COUNT(*) <> (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY 1 DESC LIMIT 1)
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(*) > (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY 1 ASC LIMIT 1) AND COUNT(*) < (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY 1 DESC LIMIT 1)
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(*) > (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY COUNT(*) LIMIT 1) AND COUNT(*) < (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(*) NOT IN ( (select count(*) from Friends group by activity order by 1 limit 1),(select count(*) from friends group by activity order by 1 DESC limit 1))
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(*) NOT IN ( SELECT MIN(counts) AS cnt FROM ( SELECT activity ,COUNT(*) AS counts FROM Friends GROUP BY activity ) t1 UNION ALL SELECT MAX(counts) AS cnt FROM ( SELECT activity ,COUNT(*) AS counts FROM Friends GROUP BY activity ) t2 )
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(*) NOT IN ( SELECT MIN(counts) FROM ( SELECT activity ,COUNT(*) AS counts FROM Friends GROUP BY activity ) t1 UNION ALL SELECT MAX(counts) FROM ( SELECT activity ,COUNT(*) AS counts FROM Friends GROUP BY activity ) t2 )
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(id) < (SELECT COUNT(id) FROM Friends GROUP BY activity ORDER BY count(id) DESC LIMIT 1) AND COUNT(id) > (SELECT COUNT(id) FROM Friends GROUP BY activity ORDER BY count(id) LIMIT 1)
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(id)<(SELECT COUNT(id) From friends GROUP BY activity ORDER BY COUNT(id) DESC LIMIT 1) and COUNT(id)>(SELECT COUNT(id) From friends GROUP BY activity ORDER BY COUNT(id) LIMIT 1)
SELECT activity FROM Friends GROUP BY activity HAVING COUNT(name) <> (SELECT COUNT(name) FROM Friends GROUP BY activity ORDER BY COUNT(name) ASC LIMIT 1) AND COUNT(name) <> (SELECT COUNT(name) FROM Friends GROUP BY activity ORDER BY COUNT(name) DESC LIMIT 1)
SELECT activity FROM Friends GROUP By activity Having COUNT(id) NOT IN ((SELECT COUNT(id) FROM Friends GROUP BY activity order by count(id) ASC limit 1),(SELECT COUNT(id) FROM Friends GROUP BY activity order by count(id) desc limit 1))
SELECT activity FROM friends GROUP BY activity HAVING COUNT(*) != (SELECT COUNT(*) FROM friends GROUP BY activity ORDER BY COUNT(*) ASC LIMIT 1) AND COUNT(*) != (SELECT COUNT(*) FROM friends GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)
SELECT activity FROM friends GROUP BY activity HAVING COUNT(*) > (SELECT COUNT(*) AS NUM FROM friends GROUP BY activity ORDER BY 1 ASC LIMIT 1) AND COUNT(*) < (SELECT COUNT(*) AS NUM FROM friends GROUP BY activity ORDER BY 1 DESC LIMIT 1)
SELECT activity FROM friends GROUP BY activity HAVING COUNT(*) > (SELECT COUNT(*) FROM friends GROUP BY activity ORDER BY COUNT(*) LIMIT 1) AND COUNT(*) < (SELECT COUNT(*) FROM friends GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)
SELECT activity FROM friends GROUP BY activity HAVING COUNT(id) > (SELECT COUNT(id) FROM friends GROUP BY activity ORDER BY 1 LIMIT 1) AND COUNT(id) < (SELECT COUNT(id) FROM friends GROUP BY activity ORDER BY 1 DESC LIMIT 1)
SELECT activity FROM friends GROUP BY activity HAVING count(*) != (SELECT count(*) FROM friends GROUP BY activity ORDER BY count(*) desc LIMIT 1) AND count(*) != (SELECT count(*) FROM friends GROUP BY activity ORDER BY count(*) LIMIT 1)
SELECT activity FROM( SELECT activity, DENSE_RANK() OVER(ORDER BY num DESC) AS rnk_desc, DENSE_RANK() OVER(ORDER BY num ) AS rnk_asc FROM( SELECT DISTINCT activity, COUNT(f.name) OVER (PARTITION BY f.activity) num FROM Friends f LEFT JOIN Activities a ON f.activity = a.name ) cte1 ) cte2 WHERE rnk_desc != 1 AND rnk_asc != 1
SELECT activity as ACTIVITY FROM (SELECT Activities.name, Friends.activity, DENSE_RANK() OVER(ORDER BY COUNT(DISTINCT Friends.id) ASC) as asc_ranking, DENSE_RANK() OVER(ORDER BY COUNT(DISTINCT Friends.id) DESC) as desc_ranking FROM Friends RIGHT JOIN Activities ON Activities.name = Friends.activity GROUP BY 1) t1 WHERE asc_ranking <> 1 AND desc_ranking <> 1
SELECT distinct activity FROM Friends GROUP BY activity HAVING count(distinct id) NOT IN ( SELECT max(counts) FROM( SELECT count(distinct id) counts FROM Friends GROUP BY activity) G ) AND count(distinct id) NOT IN ( SELECT min(counts) FROM( SELECT count(distinct id) counts FROM Friends GROUP BY activity) G )
SELECT t.activity FROM (SELECT activity, MAX(COUNT(id)) OVER() AS maxn, MIN(COUNT(id)) OVER() AS minn, COUNT(id) AS co FROM Friends GROUP BY activity) AS t WHERE t.co != t.maxn AND t.co != t.minn
Select Activity From Friends Group by activity Having Count(*) <> (Select Count(*) From Friends Group by activity Order by Count(*) Limit 1) and Count(*)<> (Select Count(*) From Friends Group by activity Order by Count(*) DESC Limit 1)
Select distinct activity from Friends where activity not in ( Select activity from ( Select activity,participant_act,rank() over (order by participant_act desc) as rnk from ( select activity,count(*) as participant_act from Friends group by activity order by count(*) desc )A) B where rnk=1 union Select activity from ( Select activity,participant_act,rank() over (order by participant_act asc) as rnk2 from ( select activity,count(*) as participant_act from Friends group by activity order by count(*) desc )A) B where rnk2=1 )
WITH A AS ( SELECT id, COUNT(activity) as rnk, activity FROM Friends GROUP BY activity ) SELECT e.ACTIVITY AS activity FROM A e WHERE e.rnk <>(SELECT MAX(rnk) FROM A ) AND e.rnk <>(SELECT MIN(rnk) FROM A )
WITH ActRanks AS ( SELECT activity, COUNT(id), RANK() OVER(ORDER BY COUNT(id)) AS 'r' FROM Friends GROUP BY activity ) SELECT activity FROM ActRanks WHERE r > 1 AND r < (SELECT MAX(r) FROM ActRanks)
WITH ActivityCount AS ( SELECT activity, COUNT(DISTINCT id) num_participants FROM Friends GROUP BY activity ), MaxNMin AS ( SELECT MAX(num_participants) max_participants, MIN(num_participants) min_participants FROM ActivityCount ) SELECT DISTINCT activity FROM ActivityCount WHERE num_participants > ( SELECT min_participants FROM MaxNMin ) AND num_participants < ( SELECT max_participants FROM MaxNMin )
WITH ActivityRanking AS (SELECT activity ,RANK() OVER(ORDER BY COUNT(id) DESC) AS HRk ,RANK() OVER(ORDER BY COUNT(id) ASC) AS LRk FROM Friends GROUP BY activity) SELECT DISTINCT activity FROM Friends WHERE activity NOT IN (SELECT activity FROM ActivityRanking WHERE HRk = 1) AND activity NOT IN (SELECT activity FROM ActivityRanking WHERE LRk = 1)
WITH Activity_count AS (SELECT DISTINCT activity as activity, COUNT(name) OVER (PARTITION BY activity) as n_participants FROM Friends ) SELECT DISTINCT activity FROM ACtivity_count WHERE n_participants != (SELECT MAX(n_participants) FROM activity_count) AND n_participants != (SELECT MIN(n_participants) FROM activity_count)
WITH CET AS (SELECT activity, COUNT(name) AS cnt FROM Friends GROUP BY activity) SELECT activity FROM CET WHERE cnt NOT IN (SELECT MAX(cnt) FROM CET) AND cnt NOT IN (SELECT MIN(cnt) FROM CET)
WITH CTE AS ( SELECT activity, COUNT(*) as counts FROM friends GROUP BY activity ) SELECT activity FROM CTE WHERE counts not in (Select max(counts) from cte) AND counts not in (select min(counts) from cte)
WITH CTE AS ( SELECT activity, COUNT(*) cnt FROM Friends GROUP BY activity ) SELECT activity FROM CTE WHERE cnt NOT IN(SELECT MAX(cnt) m FROM CTE UNION SELECT MIN(cnt) m FROM CTE)
WITH CTE AS ( SELECT activity, COUNT(name) AS participants FROM Friends GROUP BY activity ) SELECT activity FROM CTE WHERE participants != (SELECT MAX(participants) FROM CTE) AND participants != (SELECT MIN(participants) FROM CTE)
WITH CTE AS ( SELECT f.activity, COUNT(f.name) AS participant_cnt FROM Friends f GROUP BY f.activity ) SELECT c.activity FROM CTE c CROSS JOIN ( SELECT MIN(participant_cnt) AS min_cnt, MAX(participant_cnt) AS max_cnt FROM CTE ) AS t WHERE ( c.participant_cnt > min_cnt AND c.participant_cnt < max_cnt )
WITH CTE AS (SELECT A1.name, COUNT(F1.name) cnt FROM Activities A1 LEFT JOIN Friends F1 ON A1.name = F1.activity GROUP BY A1.name) SELECT name activity FROM CTE WHERE cnt <> (SELECT MAX(cnt) FROM CTE) AND cnt <> (SELECT MIN(cnt) FROM CTE)
WITH CTE AS (SELECT a.id, a.name, COUNT(f.activity) AS count FROM Activities a LEFT JOIN Friends f ON a.name = f.activity GROUP BY a.id, a.name) SELECT name AS activity FROM CTE WHERE count > (SELECT MIN(Count) FROM CTE) AND count < (SELECT MAX(count) FROM CTE)
WITH CTE AS (SELECT activity, COUNT(activity) AS num_a FROM Friends GROUP BY 1) SELECT activity FROM Friends GROUP BY activity HAVING COUNT(activity) <> (SELECT MAX(num_a) FROM CTE) AND COUNT(activity) <> (SELECT MIN(num_a) FROM CTE)
WITH CTE AS(SELECT activity,COUNT(*) as totalnum FROM Friends GROUP BY 1) SELECT activity FROM CTE WHERE totalnum NOT IN ((SELECT MAX(totalnum) FROM CTE), (SELECT Min(totalnum) FROM CTE))
WITH CTE1 AS ( SELECT activity, COUNT(id) AS counts FROM Friends f GROUP BY activity ) SELECT activity FROM CTE1 WHERE counts NOT IN ( SELECT MIN(counts) AS counts FROM CTE1 UNION SELECT MAX(counts) AS counts FROM CTE1 )
WITH CTE_1 AS ( SELECT ACTIVITY, COUNT(ACTIVITY) ACT_COUNT FROM FRIENDS GROUP BY ACTIVITY ), CTE_2 AS ( SELECT MAX(ACT_COUNT) MAX_ACT_COUNT, MIN(ACT_COUNT) MIN_ACT_COUNT FROM CTE_1 ) SELECT ACTIVITY FROM ( SELECT F.ACTIVITY, COUNT(F.ACTIVITY) FROM FRIENDS F GROUP BY F.ACTIVITY HAVING COUNT(F.ACTIVITY) < ( SELECT MAX_ACT_COUNT FROM CTE_2 ) AND COUNT(F.ACTIVITY) > ( SELECT MIN_ACT_COUNT FROM CTE_2 ) ) X
WITH FriendActivity AS (SELECT activity ,RANK() OVER (ORDER BY COUNT(id) ASC) AS High ,RANK() OVER (ORDER BY COUNT(id) DESC) AS Low FROM Friends GROUP BY activity) SELECT activity FROM FriendActivity WHERE High <> 1 AND Low <> 1
WITH PARTICIPANTS AS ( SELECT ACTIVITY, COUNT(ID) AS COUNT_PART FROM FRIENDS GROUP BY ACTIVITY ) SELECT ACTIVITY FROM PARTICIPANTS WHERE COUNT_PART <> (SELECT MAX(COUNT_PART) FROM PARTICIPANTS) AND COUNT_PART <> (SELECT MIN(COUNT_PART) FROM PARTICIPANTS)
WITH Result As ( SELECT a.name, COUNT(f.activity) AS num_count FROM Friends AS f Right JOIN Activities AS a ON f.activity = a.name GROUP BY a.name ) SELECT r.name AS activity FROM Result AS r WHERE r.num_count != (SELECT MAX(num_count) FROM Result) AND r.num_count <> (SELECT min(num_count) FROM Result)
WITH S0 AS (SELECT activity, COUNT(name) num_people FROM Friends GROUP BY activity) SELECT activity FROM S0 WHERE num_people != (SELECT MAX(num_people) FROM S0) AND num_people != (SELECT MIN(num_people) FROM S0)
WITH TEMP AS ( SELECT activity, COUNT(activity) AS cnt FROM Friends GROUP BY activity ) SELECT DISTINCT activity FROM TEMP WHERE cnt != (SELECT MAX(cnt) FROM TEMP) AND cnt != (SELECT MIN(cnt) FROM TEMP)
WITH TEMP AS ( SELECT activity, COUNT(activity) AS cnt FROM Friends GROUP BY activity ) SELECT activity FROM TEMP WHERE cnt != (SELECT MAX(cnt) FROM TEMP) AND cnt != (SELECT MIN(cnt) FROM TEMP)
WITH TEMP AS (SELECT ACTIVITY, COUNT(NAME) AS NUM_PARTICIPANTS FROM FRIENDS GROUP BY ACTIVITY) SELECT ACTIVITY FROM TEMP WHERE NUM_PARTICIPANTS > (SELECT MIN(NUM_PARTICIPANTS) FROM TEMP) AND NUM_PARTICIPANTS < (SELECT MAX(NUM_PARTICIPANTS) FROM TEMP)
WITH act_cnt AS( SELECT f.activity, COUNT(f.id) AS cnt FROM Friends AS f RIGHT JOIN Activities AS a ON f.activity=a.name GROUP BY a.name ) SELECT activity FROM act_cnt WHERE cnt != (SELECT MAX(cnt) FROM act_cnt) AND cnt!= (SELECT MIN(cnt) FROM act_cnt)
WITH activity_cnt AS ( SELECT a.name AS activity, COUNT(f.id) AS count_users FROM Friends f RIGHT JOIN Activities a ON f.activity = a.name GROUP BY a.name ) SELECT DISTINCT activity FROM activity_cnt WHERE count_users NOT IN (SELECT MAX(count_users) FROM activity_cnt) AND count_users NOT IN (SELECT MIN(count_users) FROM activity_cnt)
WITH activity_cnts AS (SELECT activity, COUNT(*) as cnt FROM friends GROUP BY activity) SELECT activity FROM activity_cnts WHERE cnt < (SELECT MAX(cnt) FROM activity_cnts) AND cnt > (SELECT MIN(cnt) FROM activity_cnts)
WITH activity_count AS (SELECT activity, COUNT(id) AS participants FROM Friends GROUP BY activity) SELECT activity FROM activity_count WHERE participants <> (SELECT MAX(participants) FROM activity_count) AND participants <> (SELECT MIN(participants) FROM activity_count)
WITH activity_count as ( SELECT a.name, COUNT(*) AS cnt FROM ACTIVITIES a JOIN FRIENDS f ON a.name = f.activity GROUP BY a.name ), min_max_cnt as ( SELECT MIN(cnt) as min_cnt, MAX(cnt) as max_cnt FROM activity_count ) select name as ACTIVITY from activity_count WHERE cnt NOT IN (select min_cnt FROM min_max_cnt union select max_cnt FROM min_max_cnt)
WITH activity_freq as ( select count(*) as freq, activity from Friends group by activity) select activity from activity_freq where freq <> (select min(freq) from activity_freq) and freq <> (select max(freq) from activity_freq)
WITH agg_activity AS ( SELECT activity, COUNT(*) AS num_participants FROM Friends GROUP BY 1 ) SELECT name AS activity FROM Activities WHERE name NOT IN ( SELECT activity FROM agg_activity WHERE num_participants = (SELECT MAX(num_participants) FROM agg_activity) OR num_participants = (SELECT MIN(num_participants) FROM agg_activity) )
WITH cnt AS( SELECT A.name, COUNT(DISTINCT F.id) AS num FROM Activities A LEFT JOIN Friends F ON A.name = F.activity GROUP BY A.name) SELECT name as ACTIVITY FROM cnt WHERE num <> (SELECT MIN(num) FROM cnt) AND num <> (SELECT MAX(num) FROM cnt)
WITH count_CTE AS ( SELECT *, COUNT(id) OVER (partition by activity) count_act FROM Friends ) SELECT DISTINCT activity FROM count_CTE WHERE count_act NOT IN (SELECT MIN(count_act) FROM count_CTE) AND count_act NOT IN (SELECT MAX(count_act) FROM count_CTE)
WITH count_act as( SELECT activity, count(activity) as act_cnt FROM Friends GROUP BY activity ) SELECT activity FROM count_act WHERE act_cnt NOT IN (SELECT min(act_cnt) FROM count_act) AND act_cnt NOT IN (SELECT max(act_cnt) FROM count_act)
WITH count_c AS ( SELECT activity, count(*) as total_c FROM Friends GROUP BY activity ) SELECT activity FROM Friends GROUP BY activity HAVING count(*) != (SELECT MAX(total_c) FROM count_c) AND COUNT(*) != (SELECT MIN(total_c) FROM count_c)
WITH counts AS ( SElECT count(DISTINCT id) as c FROM Friends GROUP BY activity ) SELECT activity FROM Friends GROUP BY Activity HAVING Count(DISTINCT id) NOT IN (SELECT MAX(c) from counts) AND Count(DISTINCT id) NOT IN (SELECT MIN(c) from counts)
WITH cte AS ( SELECT activity ,COUNT(activity) AS cnt_activity ,RANK() OVER(ORDER BY COUNT(activity) ASC) rnk_asc ,RANK() OVER(ORDER BY COUNT(activity) DESC) rnk_desc FROM Friends GROUP BY activity ) SELECT activity FROM cte WHERE activity NOT IN ( SELECT activity FROM cte WHERE rnk_asc = 1 OR rnk_desc = 1 )
WITH cte AS ( SELECT activity ,COUNT(activity) AS cnt_activity ,RANK() OVER(ORDER BY COUNT(activity) ASC) rnk_asc ,RANK() OVER(ORDER BY COUNT(activity) DESC) rnk_desc FROM Friends GROUP BY activity ) SELECT activity FROM cte WHERE rnk_asc != 1 AND rnk_desc != 1
WITH cte AS ( SELECT activity ,RANK() OVER(ORDER BY COUNT(activity) ASC) rnk_asc ,RANK() OVER(ORDER BY COUNT(activity) DESC) rnk_desc FROM Friends GROUP BY activity ) SELECT activity FROM cte WHERE rnk_asc != 1 AND rnk_desc != 1
WITH cte AS ( SELECT activity, RANK() OVER(ORDER BY COUNT(activity) DESC) AS rnk FROM Friends GROUP BY activity ) SELECT activity FROM cte WHERE cte.rnk <> 1 AND cte.rnk <> (SELECT MAX(rnk) FROM cte)
WITH cte AS (SELECT *, COUNT(*) AS total FROM Friends GROUP BY activity) SELECT activity FROM cte WHERE total != (Select MIN(total) FROM cte) AND total!= (Select MAX(total) FROM cte)
WITH cte AS (SELECT *, COUNT(*) OVER(PARTITION BY activity) AS total FROM Friends) SELECT DISTINCT(activity) FROM cte WHERE total != (Select MIN(total) FROM cte) AND total!= (Select MAX(total) FROM cte)
WITH cte AS (SELECT DISTINCT A.name, COUNT(*) OVER(PARTITION BY F.activity) AS cnt FROM Friends AS F JOIN Activities AS A ON A.name = F.activity) SELECT name AS activity FROM cte WHERE cnt != (SELECT MAX(cnt) FROM cte) AND cnt != (SELECT MIN(cnt) FROM cte)
WITH cte AS (SELECT a.name AS activity, COUNT(f.id) AS cnt FROM Activities a LEFT JOIN Friends f ON f.activity = a.name GROUP BY a.name) SELECT activity FROM cte WHERE cnt != (SELECT MAX(cnt) FROM cte) AND cnt != (SELECT MIN(cnt) FROM cte)
WITH cte AS (SELECT activity, COUNT(activity) AS freq FROM Friends GROUP BY activity) SELECT activity FROM cte WHERE freq != (SELECT MAX(freq) FROM cte) AND freq != (SELECT MIN(freq) FROM cte)
WITH cte AS (SELECT activity, COUNT(id) AS ct FROM Friends GROUP BY activity) SELECT activity FROM cte WHERE ct != (SELECT MAX(ct) FROM cte) AND ct!= (SELECT MIN(ct) FROM cte)
WITH cte AS (SELECT activity, COUNT(name) AS cnt FROM friends GROUP BY activity) SELECT activity FROM cte WHERE cnt <> (SELECT MAX(cnt) FROM cte) AND cnt <> (SELECT MIN(cnt) FROM cte)
WITH cte AS( SELECT COUNT(*) num, activity FROM Friends GROUP BY activity ) SELECT activity FROM ( SELECT *, MAX(num) OVER () max_num, MIN(num) OVER () min_num FROM cte ) tmp WHERE num < max_num AND num > min_num
WITH cte AS( SELECT a.name, COUNT(f.id) AS num FROM Activities a LEFT JOIN Friends f ON a.name = f.activity GROUP BY a.name ) SELECT t.name AS activity FROM cte t WHERE t.num != (SELECT MAX(num) FROM cte) AND t.num != (SELECT MIN(num) FROM cte)
WITH cte_activity AS ( SELECT activity, COUNT(1) AS part_num FROM Friends GROUP BY activity ) SELECT activity FROM cte_activity WHERE part_num > (SELECT MIN(part_num) FROM cte_activity) AND part_num < (SELECT MAX(part_num) FROM cte_activity)
WITH max_min_table AS ( SELECT max(t.cnt) AS max_cnt, min(t.cnt) AS min_cnt FROM ( SELECT activity, COUNT(name) as cnt FROM Friends GROUP BY activity ) t ) SELECT activity FROM Friends GROUP BY activity HAVING COUNT(name) != (SELECT max_cnt FROM max_min_table) AND COUNT(name) != (SELECT min_cnt FROM max_min_table)
WITH nb_act as ( select activity , count(0) as nb FROM Friends GROUP BY activity ) SELECT act.name as activity FROM Friends fr JOIN Activities act on fr.activity = act.name GROUP BY act.name HAVING count(fr.id) != (select max(nb) FROM nb_act) AND count(fr.id) != (select min(nb) FROM nb_act)
WITH num_participants AS ( SELECT activity, COUNT(name) as num_p FROM Friends GROUP BY activity ) SELECT activity FROM Friends GROUP BY activity HAVING COUNT(name) > (SELECT MIN(num_p) FROM num_participants) AND COUNT(name) < (SELECT MAX(num_p) FROM num_participants)
WITH result AS (SELECT T1.*, RANK() OVER(ORDER BY cnt) AS DR FROM (SELECT activity, COUNT(1) AS cnt FROM friends GROUP BY 1 ) AS T1 ) SELECT activity FROM result WHERE DR != 1 AND DR NOT IN (SELECT MAX(DR) FROM result)
WITH result AS (SELECT T1.*, RANK() OVER(ORDER BY cnt) AS DR FROM (SELECT activity, COUNT(DISTINCT ID) AS cnt FROM friends GROUP BY 1 ) AS T1 ) SELECT activity FROM result WHERE DR != 1 AND DR NOT IN (SELECT MAX(DR) FROM result)
WITH sub1 AS(SELECT activity, DENSE_RANK() OVER(ORDER BY COUNT(id) DESC) max_rank, DENSE_RANK() OVER(ORDER BY COUNT(id)) min_rank FROM Friends GROUP BY activity) SELECT activity FROM sub1 WHERE min_rank>1 AND max_rank>1
WITH t AS ( SELECT a.name AS activity, IFNULL(COUNT(f.name), 0) AS num FROM Activities a LEFT JOIN Friends f ON a.name = f.activity GROUP BY a.name ) SELECT activity FROM t WHERE num != (SELECT MAX(num) FROM t) AND num != (SELECT MIN(num) FROM t)
WITH t AS( SELECT activity, COUNT(*) ct FROM Friends GROUP BY activity) SELECT activity FROM t WHERE ct NOT IN (SELECT MAX(ct) FROM t) AND ct NOT IN (SELECT MIN(ct) FROM t)
WITH t AS( SELECT activity, RANK() OVER (ORDER BY COUNT(id) DESC) AS rnk1, RANK() OVER (ORDER BY COUNT(id)) AS rnk2 FROM Friends GROUP BY activity) SELECT activity FROM t WHERE rnk1 != 1 AND rnk2 != 1
WITH t1 AS (SELECT activity, COUNT(*) activity_cnt FROM Friends GROUP BY 1), t2 AS (SELECT activity FROM t1 WHERE activity_cnt = (SELECT MIN(activity_cnt) FROM t1) UNION ALL SELECT activity FROM t1 WHERE activity_cnt = (SELECT MAX(activity_cnt) FROM t1)) SELECT activity FROM t1 WHERE activity NOT IN (SELECT activity FROM t2)
WITH t1 as (SELECT activity, COUNT(name) as participant_count FROM Friends GROUP BY activity) SELECT activity FROM t1 WHERE participant_count < (SELECT MAX(participant_count) FROM t1) AND participant_count > (SELECT MIN(participant_count) FROM t1)
WITH temp AS ( SELECT activity, COUNT("id") AS "count" FROM Friends GROUP BY activity ) SELECT DISTINCT(name) as "activity" FROM Activities WHERE name NOT IN (SELECT DISTINCT(activity) as "activity" FROM temp where count = (SELECT MAX(count) FROM temp) UNION SELECT DISTINCT(activity) as "activity" FROM temp where count = (SELECT MIN(count) FROM temp))
WITH temp AS ( SELECT activity, COUNT(*) as cnt FROM Friends GROUP BY activity ) SELECT activity FROM temp WHERE cnt <> (SELECT MIN(cnt) FROM temp) AND cnt<> (SELECT MAX(cnt) FROM temp)
WITH temp AS ( SELECT activity, rank() OVER(ORDER BY COUNT(*)) AS rk FROM Friends GROUP BY activity ) SELECT activity FROM temp WHERE rk != ( SELECT MAX(rk) FROM temp ) AND rk != ( SELECT MIN(rk) FROM temp )
WITH temp AS(SELECT activity, COUNT(id) AS num_activity FROM Friends GROUP BY activity) SELECT activity FROM temp WHERE num_activity NOT IN (SELECT MAX(num_activity) FROM temp) AND num_activity NOT IN (SELECT MIN(num_activity) FROM temp)
WITH temp as ( select f.activity, count(f.name) as cnt from Activities a left join Friends f on f.activity = a.name group by a.name ) select activity from temp where cnt != (select max(cnt) from temp) and cnt != (select min(cnt) from temp)
WITH temp1 AS ( SELECT activity, COUNT(id) ct FROM Friends GROUP BY 1 ) SELECT activity FROM temp1 WHERE ct <> (SELECT MAX(ct) FROM temp1) AND ct <> (SELECT MIN(ct) FROM temp1)
WITH tmp AS (SELECT activity, COUNT(*) as n_friends FROM Friends AS f1 LEFT JOIN Activities AS a ON activity=a.name GROUP BY activity) SELECT activity FROM tmp WHERE n_friends != (SELECT MAX(t1.n_friends) FROM tmp AS t1) AND n_friends != (SELECT MIN(t2.n_friends) FROM tmp AS t2)
With A as (select activity, count(id) over (partition by activity) as noofpart from friends) Select distinct activity from A where noofpart != (select max(noofpart) from A) and noofpart!= (select min(noofpart) from A)
With CTE AS ( Select activity,Count(name) as ct FROM Friends GROUP BY activity ) select activity from CTE where ct not in ((select min(ct) from CTE), (select max(ct) from CTE))
With cte1 as ( Select f.activity as activity, count(f.activity) as activity_count from Friends f group by f.activity), cte2 as( Select min(activity_count) as min_count, max(activity_count) as max_count from cte1 ) Select activity from cte1 where activity_count <> (Select min_count from cte2) and activity_count <> (Select max_count from cte2)
select a.activity as ACTIVITY from (select activity, dense_rank() over(order by count(activity) asc) as r1, dense_rank() over(order by count(activity) desc) as r2 from friends group by activity )a where a.r1 != 1 and a.r2!= 1
select a.activity as activity from (select activity, count(*) as counts, max(count(*))over() as max_c, min(count(*))over()as min_c from friends group by activity) a where a.counts not in (max_c, min_c)
select a.name as activity FROM Activities as a JOIN( SELECT activity, DENSE_RANK()OVER(ORDER BY COUNT(id) DESC) as dscrank, DENSE_RANK()OVER(ORDER BY COUNT(id) aSC) as ascrank FROM Friends GROUP BY activity ) as r ON a.name=r.activity WHERE r.dscrank!=1 and r.ascrank!=1
select activity as "ACTIVITY" from Friends group by activity having count(*) != (select min(Count) from (select activity as "Activity",count(*) as "Count" from Friends group by activity) as Temp1) and count(*) != (select max(Count) from (select activity as "Activity",count(*) as "Count" from Friends group by activity) as Temp2)
select activity from ( select *, rank() over (order by counts desc) as row_num_desc, rank() over (order by counts) as row_num from ( select activity, count(name) as counts from Friends group by activity) A) B where row_num !=1 and row_num_desc !=1
select activity from ( select a.name as activity , rank() over (order by count(if(b.name, 1, 0))) rank_asc , rank() over (order by count(if(b.name, 1, 0)) desc) rank_desc from activities a left join friends b on a.name = b.activity group by activity) AS A where rank_asc = rank_desc or (rank_asc != 1 and rank_desc != 1)
select activity from ( select a.name as activity, rank() over (order by count(distinct b.id)) as rnk_asc, rank() over (order by count(distinct b.id) desc) as rnk_desc from activities a left join friends b on a.name = b.activity group by 1 ) t where rnk_asc <> 1 and rnk_desc <> 1
select activity from ( select activity, cnt, rank() over (order by cnt) as rnk_asc, rank() over (order by cnt desc) as rnk_desc from ( select a.name as activity, count(distinct b.id) as cnt from activities a left join friends b on a.name = b.activity group by 1 ) t ) t1 where rnk_asc <> 1 and rnk_desc <> 1
select activity from ( select activity, count(*) as ac, max(count(*))over()as max_num, min(count(*))over()as min_num from friends group by activity) as t where ac not in(max_num, min_num)
select activity from ( select activity, count(*) as cnt, max(count(*)) over() as max_cnt, min(count(*)) over() as min_cnt from friends group by activity )t where cnt <> max_cnt and cnt<>min_cnt
select activity from ( select activity, count(*) as times, max(count(*)) over () as max_times, min(count(*)) over () as min_times from Friends group by activity) as temp where times not in (max_times, min_times)
select activity from ( select activity, dense_rank () over (order by par_qty) as top_rk, dense_rank () over (order by par_qty desc) as bottom_rk from ( select activity, count(*) as par_qty from Friends group by activity) a ) b where top_rk<>1 and bottom_rk<>1
select activity from ( select activity, dense_rank() over (order by count(activity) desc) maxrnk, dense_rank() over (order by count(activity) ) minrnk from Friends group by activity)a where minrnk != 1 and maxrnk != 1
select activity from ( select activity, dense_rank() over (order by count(id)) as rnk, dense_rank() over (order by count(id) desc) as rnk_desc from Friends group by activity ) t where rnk != 1 and rnk_desc != 1
select activity from ( select activity, dense_rank()over(order by count(id) desc) as cntdesc, dense_rank()over(order by count(id) ) as cntasc from friends group by activity )a where cntdesc!=1 and cntasc!=1
select activity from ( select activity, rank() over(order by count(activity)) as rank1, rank() over(order by count(activity) desc) as rank2 from Friends group by activity ) t where rank1 != 1 and rank2 != 1
select activity from ( select activity, rank() over(order by count(id) asc) as count_asc, rank() over(order by count(id) desc) as count_desc from friends group by activity ) a where count_asc!=1 and count_desc !=1
select activity from ( select activity,count(name) as ac, max(count(name)) over() as max_n, min(count(name)) over() as min_n from Friends group by activity) t where ac not in (max_n,min_n)
select activity from (select activity, cnt, dense_rank()over(order by cnt) as rnk1, dense_rank()over(order by cnt desc) as rnk2 from (select activity, count(activity) as cnt from Friends group by activity) a) b where rnk1 !=1 and rnk2 !=1
select activity from (select activity, count(id) "num_friends" from friends group by activity ) act where num_friends < (select max(num_friends) from (select activity, count(id) "num_friends" from friends group by activity) maxa) and num_friends > (select min(num_friends) from (select activity, count(id) "num_friends" from friends group by activity) mina)
select activity from (select activity, count(id), rank() over (order by count(id) desc) drank, rank() over (order by count(id)) arank from Friends group by activity) a where drank <> 1 and arank <> 1
select activity from (select activity, dense_rank() over (order by count(name)) as min_rank, dense_rank() over (order by count(name) desc) as max_rank from Friends group by activity) t where min_rank !=1 and max_rank !=1
select activity from (select activity, dense_rank() over(order by num desc) 'drank', dense_rank() over(order by num asc) 'arank' from (select activity, count(id) 'num' from friends group by activity) a ) b where b.drank<>1 and b.arank<>1
select activity from (select activity, rank() over (order by cnt desc) rnk1, rank() over (order by cnt) rnk2 from (select activity, count(distinct id) cnt from Friends group by activity) a) b where rnk1!=1 and rnk2!=1
select activity from (select activity, rank() over (order by numParts) as ascRank, rank() over (order by numParts desc) as descRank from (select activity, count(*) as numParts from Activities a left join Friends f on f.activity = a.name group by activity) as counts) as ranked where ascRank != 1 and descRank != 1
select activity from (select activity, rank() over(order by cnt desc) as max_rnk, rank() over(order by cnt asc) as min_rnk from (select activity, count(id) as cnt from friends group by activity)x)y where max_rnk != 1 and min_rnk != 1
select activity from (select activity, rank() over(order by count(id) desc ) activity_max, rank() over (order by count(id)) activity_min from Friends group by activity)A where activity_max <> 1 and activity_min <> 1
select activity from (select activity, rank() over(order by count(id) desc) as max_rank, rank() over(order by count(id) asc) as min_rank from Friends group by activity) rank_tmp where max_rank != 1 and min_rank != 1
select activity from (select activity, rank() over(order by count(id)) as rk_asc, rank() over(order by count(id) desc) as rk_desc from Friends group by 1) t where rk_asc!=1 and rk_desc!=1
select activity from (select activity, rank()over(order by ppl) as act_rank, rank()over(order by ppl desc) as act_rank_reverse from (select activity, count(name) as ppl from Friends group by 1) t1) t2 where act_rank !=1 and act_rank_reverse !=1 order by 1
select activity from (select activity,count(activity) as num from friends group by 1) as a where num not in (select max(num) from (select activity,count(activity) as num from friends group by 1) as a) and num not in (select min(num) from (select activity,count(activity) as num from friends group by 1) as a)
select activity from (select distinct activity, count(id) as cnt from friends group by activity) t where cnt != (select count(id) from friends group by activity order by 1 desc limit 1) and cnt != (select count(id) from friends group by activity order by 1 limit 1)
select activity from (select distinct activity, dense_rank() over(order by count(id) asc ) as rnk_asc, dense_rank() over(order by count(id) desc ) as rnk_desc from friends group by activity) a where rnk_asc >1 and rnk_desc > 1
select activity from (select distinct activity,rank()over (order by count(activity) desc) as top, rank() over (order by count(activity)) as bot from Friends group by activity) t where top<>1 and bot<>1
select activity from (select f.activity, count(*) as count, max(count(*)) over() as max_count, min(count(*)) over() as min_count from Friends f join Activities a on f.activity = a.name group by f.activity) t where count != max_count and count != min_count
select activity from Friends group by 1 having count(id) != (select max(ct) from (select count(activity) as ct from Friends group by activity) a) and count(id) != (select min(ct) from (select count(activity) as ct from Friends group by activity) a)
select activity from Friends group by activity HAVING COUNT(*) not in((SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY 1 LIMIT 1) , (SELECT COUNT(*) FROM Friends GROUP BY activity ORDER BY 1 DESC LIMIT 1))
select activity from Friends group by activity having count(*) != (select count(*) from friends group by activity order by count(*) asc limit 1) and count(*) != (select count(*) from friends group by activity order by count(*) desc limit 1)
select activity from Friends group by activity having count(*) > (select count(*) from friends group by activity order by 1 limit 1) and count(*) < (select count(*) from friends group by activity order by 1 desc limit 1)
select activity from Friends group by activity having count(activity) not in ( (select max(countactivity) from (select count(activity) as countactivity from Friends group by activity) a), (select min(countactivity) from (select count(activity) as countactivity from Friends group by activity) a) )
select activity from friends group by 1 having count(id) != (select count(id) from friends group by activity order by count(id) asc limit 1) and count(id) != (select count(id) from friends group by activity order by count(id) desc limit 1)
select activity from friends group by 1 having count(id) not in ( select max(id) as id from ( select activity, count(id) as id from friends group by 1) a union all select min(id)from ( select activity, count(id) as id from friends group by 1) a)
select activity from friends group by activity Having count(*) != (select count(*) from friends group by activity order by count(*) desc limit 1) and count(*) != (select count(*) from friends group by activity order by count(*) asc limit 1)
select activity from friends group by activity having count(*) != (select count(*) from friends group by activity order by count(*) desc limit 1) and count(*) != (select count(*) from friends group by activity order by count(*) limit 1)
select activity from friends group by activity having count(*) <(select count(*) cnt from friends group by activity order by cnt desc limit 1) and count(*) > (select count(*) cnt from friends group by activity order by cnt asc limit 1)
select activity from friends group by activity having count(*) > (select count(*) from friends group by activity order by 1 limit 1) and count(*) < (select count(*) from friends group by activity order by 1 desc limit 1)
select activity from friends group by activity having count(*)!= (select count(*) from friends group by activity order by count(*) asc limit 1) and count(*)!= (select count(*) from friends group by activity order by count(*) desc limit 1)
select activity from friends group by activity having count(*)> (select count(*) from friends group by activity order by 1 limit 1) and count(*)< (select count(*) from friends group by activity order by 1 desc limit 1)
select activity from friends group by activity having count(activity) <> (select count(activity) from friends group by activity order by count(activity) desc limit 1) and count(activity) <> (select count(activity) from friends group by activity order by count(activity) limit 1)
select activity from friends group by activity having count(activity) <> (select count(activity) from friends group by activity order by count(activity) limit 1) and count(activity) <> (select count(activity) from friends group by activity order by count(activity) desc limit 1)
select activity from friends group by activity having count(activity) not in ( (select count(*) from friends group by activity order by count(*) desc limit 1) , (select count(*) from friends group by activity order by count(*) limit 1) )
select activity from friends group by activity having count(distinct id) <> (select count(id) from friends group by activity order by 1 desc limit 1) and count(distinct id) <> (select count(id) from friends group by activity order by 1 asc limit 1)
select activity from friends group by activity having count(id) not in ( select max(cnt) as cnt from (select activity, count(id) as cnt from friends group by activity) tmp1 union select min(cnt) as cnt from (select activity, count(id) as cnt from friends group by activity) tmp2 )
select activity from friends group by activity having count(id)<(select count(id) from friends group by activity order by count(id) desc limit 1) and count(id)>(select count(id) from friends group by activity order by count(id) limit 1)
select activity from( select activity, rank() over(order by count(id) asc) as ranking1, rank() over(order by count(id) desc) as ranking2 from friends group by activity) as tmpt where ranking1 != 1 and ranking2 != 1
select activity from( select activity, rank() over(order by count(id)) as rank_asc, rank() over(order by count(id) desc) as rank_desc from Friends group by activity ) activity_participants where rank_asc!=1 and rank_desc!=1
select b.activity from ( select a.activity, dense_rank() over (order by req asc) as rank_asc, dense_rank() over (order by req desc) as rank_desc from ( select activity, count(*) as req from friends group by 1)a)b where b.rank_Asc != 1 and b.rank_desc !=1
select distinct activity from (select *, rank()over(order by count(activity) desc) as maxi, rank()over(order by count(activity)) as mini from friends group by activity) as temp where maxi <> 1 and mini <> 1
select distinct activity from friends group by 1 having count(*) != (select count(*) from friends group by activity order by count(*) limit 1) and count(*) != (select count(*) from friends group by activity order by count(*) desc limit 1)
select distinct activity from friends group by 1 having count(id) not in (select min(ct) from (select count(id) ct from friends group by activity)a union select max(ct) from (select count(id) ct from friends group by activity)a)
select distinct activity from friends where activity not in (select activity from (select activity, rank() over(order by count(activity) desc) as rnk from friends group by activity)a where rnk = 1 ) and activity not in (select activity from (select activity, rank() over(order by count(activity)) as rnk from friends group by activity)a where rnk = 1 )
select name as activity from activities where name not in (select activity from (select activity, num, rank()over(order by num desc)as num_rank from (select activity, count(activity)as num from friends group by activity)as t1) as t2 where num_rank=1) and name not in (select activity from (select activity, num, rank()over(order by num asc)as num_rank from (select activity, count(activity)as num from friends group by activity)as t1) as t2 where num_rank=1)
select t.activity from (select activity, rank() over(order by count(id) asc) as ra, rank() over(order by count(id) desc) as rd from friends group by 1) t where t.ra!=1 and t.rd!=1
select t2.activity from (select activity, count(id) as cnt from Friends group by activity having cnt not in (select t1.cnt from ((select activity, count(id) as cnt from Friends group by activity order by cnt desc limit 1) union (select activity, count(id) as cnt from Friends group by activity order by cnt asc limit 1))t1))t2
select temp.activity from ( select f.activity, rank() over (order by count(f.id)) as ascrnk, rank() over (order by count(f.id) desc) as descrnk from friends f group by 1 ) temp where temp.ascrnk!=1 and temp.descrnk!=1
select u.activity from ( select t.activity, t.countactivity, dense_rank() over (order by t.countactivity DESC) as 'rankdesc', dense_rank() over (order by t.countactivity ASC) as 'rankasc' from ( select activity, count(*) as 'countactivity' from Friends group by activity ) t ) u where u.rankdesc <> 1 and u.rankasc <> 1
select x.activity from ( select activity, sum(case when activity is not null then 1 else 0 end) as freq, dense_rank() over (order by sum(case when activity is not null then 1 else 0 end) asc) as asc_rnk, dense_rank() over (order by sum(case when activity is not null then 1 else 0 end) desc) as desc_rnk from friends group by activity) x where x.asc_rnk > 1 and x.desc_rnk > 1
select x.activity from ( select activity, sum(case when activity is not null then 1 else 0 end) as freq, dense_rank()over(order by sum(case when activity is not null then 1 else 0 end) asc) as asc_rnk, dense_rank()over(order by sum(case when activity is not null then 1 else 0 end) desc) as desc_rnk from friends group by activity) x where x.asc_rnk > 1 and x.desc_rnk > 1
with CTE as ( select activity, count(*) cnt from Friends group by activity ) select activity from CTE where cnt not in ((select min(cnt) from CTE), (select max(cnt) from CTE))
with CTE as (select activity, count(*) as count_activity from Friends group by activity) select activity from CTE right join Activities as A on CTE.activity=A.name where count_activity not in ((select max(count_activity) from CTE), (select min(count_activity) from CTE)) group by activity
with CTE1 as (select activity, ifnull(count(f.name),0) as activity_cnt from friends f right join Activities a on f.activity = a.name group by activity) select distinct activity from CTE1 where activity_cnt != (select max(activity_cnt) from CTE1) and activity_cnt != (select min(activity_cnt) from CTE1)
with Friends_activity as (select activity, count(1) as cnt from Friends group by activity), extremes as ( select max(cnt) as cnt_act from Friends_activity union select min(cnt) as cnt_act from Friends_activity ) select activity from Friends_activity where cnt not in (select cnt_act from extremes)
with TA as (select activity, count(activity) as counta from Friends group by activity) select activity from TA where counta != (select max(counta) from TA ) and counta != (select min(counta) from TA )
with a as ( select activity, cnt, dense_rank() over(order by cnt desc) as ranks from( select activity, ifnull(count(f.id),0) as cnt from friends as f right join activities as a on f.activity = a.name group by activity) as sub ) select activity from a where ranks <> 1 and ranks <> (select count(distinct ranks) from a)
with a as ( select activity, count(activity) as cnt from Friends group by activity ) select distinct activity from a where a.cnt not in ((select max(cnt) from a), (select min(cnt) from a))
with a as (SELECT activity, count(activity) as numact FROM friends group by activity ), b as ( SELECT max(numact) as maxnum, min(numact) as minnum FROM a ) select activity from a as a inner join b as b on numact <> maxnum and numact <> minnum
with a as (select activity, count(id) over (partition by activity) as cnt from friends) select distinct activity from a where cnt not in (select max(cnt) from a) and cnt not in (select min(cnt) from a)
with a as( select activity, count(*) as activity_count from friends group by activity order by 2 desc) select activity from a where activity_count not in (select max(activity_count) from a) and activity_count not in (select min(activity_count) from a)
with a as( select activity, count(name) as activity_count from friends group by activity) select activity from a where activity_count not in (select max(activity_count) from a) and activity_count not in (select min(activity_count) from a)
with abc as (select activity ,count(activity) as counts from friends group by 1) select activity from abc where counts< (select Max(counts) from abc) and counts> (select min(counts) from abc)
with act as ( select activity, count(*) as cnt from Friends a inner join Activities b on a.activity = b.name group by a.activity) select activity from act where cnt not in (select max(cnt) from act) and cnt not in (select min(cnt) from act)
with act as ( select activity, count(*) as cnt from Friends group by 1 order by 2) select name as activity from activities where name in (select activity from act where cnt <>(select max(cnt) from act) and cnt <>(select min(cnt) from act))
with act as ( select activity, count(id) as total from friends group by activity) select activity from act where total not in (select max(total) from act) and total not in (select min(total) from act)
with act_count as ( select activity, rank() over(order by count(name)) as count_rank from Friends group by 1 ) select activity from act_count where count_rank!=1 and count_rank!= (select max(count_rank) from act_count )
with act_count as( select a.name, count(f.id) as activity_count from activities a left join friends f on a.name=f.activity group by a.name ) select name as activity from act_count where activity_count!=(select max(activity_count) from act_count) and activity_count!=(select min(activity_count) from act_count)
with act_rank_tb as ( select activity, dense_rank() over(order by act_num) as act_rank from( select activity, count(name) as act_num from Friends group by activity) as A ) select activity from act_rank_tb where act_rank <> (select min(act_rank) from act_rank_tb) and act_rank <> (select max(act_rank) from act_rank_tb)
with activity_cnt as ( select activity, count(f.id) cnt from friends f group by activity) select activity from activity_cnt where cnt > (select min(cnt) from activity_cnt) and cnt < (select max(cnt) from activity_cnt)
with activity_cnt as (select activity,count(activity) as cnt from friends group by activity order by count(activity) ), max_min_cnt as (select max(cnt) as max_a_cnt , min(cnt) as min_cnt from activity_cnt) select distinct activity from activity_cnt where cnt != (Select max_a_cnt from max_min_cnt) and cnt != (Select min_cnt from max_min_cnt)
with acttable as( select activity, dense_rank()over(order by count(id) desc) as cntdesc, dense_rank()over(order by count(id) ) as cntasc from friends group by activity ) select activity from acttable where cntdesc!=1 and cntasc!=1
with base as ( select a.id, a.name, count(distinct f.id) as counts from Friends f join activities a on f.activity = a.name group by 1,2 ) select name as activity from base where counts <> (select max(counts) from base) and counts <> (select min(counts) from base)
with base as (select activity, count(activity) as cnt from friends group by activity) select A.activity from (select activity from (select activity, dense_rank() over (order by cnt asc) as rk from base) aa where rk!=1) A join (select activity from (select activity, dense_rank() over (order by cnt desc) as rk from base) aa where rk!=1) B on A.activity = B.activity
with basetable as (select activity, count(*) as counts from friends group by activity), minCount as (select min(counts) from basetable), maxCount as (select max(counts) from basetable) select activity from basetable where counts > (select * from minCount) and counts < (select * from maxCount)
with c as( select a.name, case when count(a.id) is null then 0 else count(a.id) end as count from activities a left join friends f on a.name = f.activity group by a.name), m as( select max(count) as m1,min(count) as m2 from c ) select c.name as ACTIVITY from c where c.count not in (select m1 from m) and c.count not in (select m2 from m)
with cnt as ( select a.name as activity, ifnull(count(b.id),0) as cnt from activities as a left join friends as b on a.name = b.activity group by 1 ) select a.name as activity from activities as a left join friends as b on a.name = b.activity group by 1 having ifnull(count(b.id),0) not in (select min(cnt) from cnt) and ifnull(count(b.id),0) not in (select max(cnt) from cnt)
with cnt as ( select activity, count(*) as times from Friends group by activity) select activity from cnt where times not in ( select max(times) from cnt) and times not in ( select min(times) from cnt)
with cnt as ( select activity, count(id) as num from friends group by 1) select activity from cnt where num not in (select max(num) from cnt) and num not in (select min(num) from cnt)
with cntact as ( select activity ,count(activity) as cnt from Friends group by activity ) select activity from cntact where cnt != (select max(cnt) from cntact) and cnt != (select min(cnt) from cntact)
with cntact as ( select activity ,count(activity) as cnt from Friends group by activity ) select activity from cntact where cnt not in ((select max(cnt) from cntact),(select min(cnt) from cntact))
with cnts as ( select activity, count(id) as cnts from Friends group by 1) ,min_max as ( select activity, cnts, dense_rank() over (order by cnts) as min_rn, dense_rank() over (order by cnts desc) as max_rn from cnts) select name as activity from Activities where name in ( select activity from min_max where min_rn > 1 and max_rn > 1 )
with ct_ as (select activity, count(name) as ct from friends group by 1), max_min as (select max(ct) as most, min(ct) as least from ct_) select activity from ct_ where ct != (select most from max_min) and ct!= (select least from max_min)
with cte as ( SELECT f.activity, COUNT(f.name) as cnt FROM Friends f GROUP BY f.activity ) SELECT activity FROM cte WHERE cnt != (SELECT min(cnt) FROM cte) and cnt != (SELECT max(cnt) FROM cte)
with cte as ( Select activity, count(id) holder from Friends group by Activity ) Select activity from cte where holder not in ( ( Select max(holder) from cte ), (select min(holder) from cte))
with cte as ( select *, count(activity) as ct from Friends group by activity) select activity from cte where ct not in ((select max(ct) from cte), (select min(ct) from cte))
with cte as ( select a.name as activity, count(*) as activity_count from activities a left join friends f on f.activity=a.name group by a.name ) select activity from cte where activity_count< (select max(activity_count) from cte) and activity_count>(select min(activity_count) from cte)
with cte as ( select a.name, count(activity) as counta from Activities as a join Friends as f on a.name = f.activity group by f.activity ) select cte.name as Activity from cte where cte.counta not in (select max(counta) as value from cte union select min(counta) as value from cte)
with cte as ( select a.name, count(f.name) as cnt from Activities as a join Friends as f on a.name = f.activity group by 1 ) select name as activity from cte where cnt != (select min(cnt) from cte) and cnt != (select max(cnt) from cte)
with cte as ( select activity, count(*) as cnt from Friends group by 1 ) select activity from cte where cnt <> (select max(cnt) from cte) and cnt <> (select min(cnt) from cte)
with cte as ( select activity, count(*) as cnt from friends group by 1 ), rank_all as ( select activity, rank() over (order by cnt desc) as max_rnk, rank() over (order by cnt) as min_rnk from cte ) select activity from rank_all where max_rnk != 1 and min_rnk != 1
with cte as ( select activity, count(*) as counts from friends group by activity ) select activity as ACTIVITY from cte where counts not in (select max(counts) from cte) and counts not in (select min(counts) from cte)
with cte as ( select activity, count(*) cnt from friends group by activity ), cte2 as (select min(cnt) as mincnt, max(cnt) as maxcnt from cte) select cte1.activity from cte cte1, cte2 cte2 where cte1.cnt <> cte2.mincnt and cte1.cnt <> cte2.maxcnt
with cte as ( select activity, count(1) as cnt from friends group by 1 ) select activity from cte where cnt not in (select max(cnt) from cte) and cnt not in (select min(cnt) from cte)
with cte as ( select activity, count(1) as cnt from friends group by 1 ),max_min_active as ( select max(cnt) max_cnt, min(cnt) as min_cnt from cte ) select activity from cte where cnt not in (select max_cnt from max_min_active) and cnt not in (select min_cnt from max_min_active)
with cte as ( select activity, count(activity) as acount from friends group by activity ) select activity from friends group by activity having count(activity) not in (select max(acount) from cte union select min(acount) from cte)
with cte as ( select activity, count(id) as friends_count from Friends group by activity ) select activity from cte where friends_count not in ((select max(friends_count) from cte), (select min(friends_count) from cte))
with cte as ( select activity, count(id) as total from friends group by 1 ) select activity from cte where total not in (select max(total) from cte) and total not in (select min(total) from cte)
with cte as ( select activity, count(id) cnt from friends group by activity ) select activity from cte where cnt != (select min(cnt) from cte) and cnt != (select max(cnt) from cte)
with cte as ( select activity, count(name) as cnts from Friends group by activity ) select activity from cte where cnts != (select max(cnts) from cte) and cnts != (select min(cnts) from cte)
with cte as ( select activity, rank() over (order by count(*) desc) as rnk from Friends group by 1 ) select activity from cte where rnk<>1 and rnk <> (select max(rnk) from cte)
with cte as ( select activity, rank() over (order by count(*)) rnk from friends group by 1 ) select activity from cte where rnk <> (select max(rnk) from cte) and rnk <> (select min(rnk) from cte)
with cte as ( select activity, rank() over(order by cnt asc) as rnk from (select activity, count(id) as cnt from Friends group by 1) x ), cte1 as ( select activity, rank() over(order by cnt desc) as rnk from (select activity, count(id) as cnt from Friends group by 1) x ) select name as activity from Activities where name not in (select activity from cte where rnk = 1) and name not in (select activity from cte1 where rnk = 1)
with cte as ( select activity,c,dense_rank() over (order by c desc) as rn from (select activity,count(*) as c from Friends group by activity)t1 ) select activity from cte where cte.rn != 1 and cte.rn != (select max(rn) from cte)
with cte as ( select activity,count(*) as count from friends group by activity ) select activity from cte where count not in (select max(count) from cte) and count not in (select min(count) from cte)
with cte as ( select distinct activity, count(id) over(partition by activity) as no_p from friends), cte1 as ( select max(no_p) over(order by no_p desc) as max_val, min(no_p) over(order by no_p) as min_val from cte) select distinct activity from cte join cte1 on no_p <> max_val and no_p <> min_val
with cte as ( select fr.activity , count(fr.name) as participant_cnt from friends as fr group by fr.activity ) select c.activity from cte as c cross join ( select min(participant_cnt) as min_cnt, max(participant_cnt) as max_cnt from cte ) as t where (c.participant_cnt > min_cnt and c.participant_cnt < max_cnt)
with cte as (SELECT activity, COUNT(DISTINCT id) as num_act from Friends group by 1) select name as activity from Activities where name not in ( select activity from cte where num_act in (select max(num_act) from cte)) and name not in ( select activity from cte where num_act in (select min(num_act) from cte))
with cte as (Select activity, count(activity) as act_cnt from friends group by activity) Select distinct activity from friends where activity not in( select cte.activity from cte join (Select min(cte.act_cnt) as min_cnt from cte) a on a.min_cnt = cte.act_cnt union all select cte.activity from cte join (Select max(cte.act_cnt) as max_cnt from cte) a on a.max_cnt = cte.act_cnt )
with cte as (select *, count(*) as act_count, min(count(*)) over () as min_act_count, max(count(*)) over () as max_act_count from Friends group by activity) select activity from cte where act_count != min_act_count and act_count != max_act_count
with cte as (select *, count(*) as act_count, min(count(*)) over () as min_act_count, max(count(*)) over () as max_act_count from Friends group by activity) select cte.activity from cte left join Activities on cte.activity = Activities.name where act_count != min_act_count and act_count != max_act_count
with cte as (select a.name as activity_name, count(b.id) as counts from Activities a inner join Friends b on a.name = b.activity group by 1) select activity_name as activity from cte where counts not in (select max(counts) from cte) and counts not in (select min(counts) from cte) order by 1
with cte as (select activity, count(*) as act_count from friends group by activity) select activity from cte where act_count!=(select max(act_count) from cte) and act_count!=(select min(act_count) from cte)
with cte as (select activity, count(*) as cnt from Friends group by activity) Select activity from cte where cnt!=(select max(cnt) from cte) and cnt!=(select min(cnt) from cte)
with cte as (select activity, count(*) as cnt from Friends group by activity) select distinct(activity) from cte where cnt not in (select min(cnt) from cte) and cnt not in (select max(cnt) from cte)
with cte as (select activity, count(*) as cnt, rank() over(order by count(*) desc) as max_count, rank() over(order by count(*) asc) as min_count from Friends group by activity) select distinct(activity) from cte where max_count <> 1 and min_count <> 1
with cte as (select activity, count(*) as ct from Friends group by activity) select distinct activity from cte where ct not in (select max(ct) from cte) and ct not in (select min(ct) from cte)
with cte as (select activity, count(*) as num from friends group by activity) select activity from cte where num not in ((select max(num) from cte), (select min(num) from cte))
with cte as (select activity, count(id) as ct from Friends group by activity) select distinct activity from cte where ct not in (select max(ct) from cte) and ct not in (select min(ct) from cte)
with cte as (select activity, count(id) as n_participants from friends group by activity) select activity from cte where n_participants <> (select min(n_participants) from cte) and n_participants <> (select max(n_participants) from cte)
with cte as (select activity, count(name) as num_participant from Friends group by activity) select activity as ACTIVITY from (select activity, num_participant, max(num_participant) over () as max_participant, min(num_participant) over () as min_participant from cte ) sub where num_participant < max_participant and num_participant > min_participant
with cte as (select activity,count(activity) as cnt from friends group by 1) select activity from cte where cnt<>(select max(cnt) from cte) and cnt <>(select min(cnt) from cte)
with cte as (select count(id) as cnt, activity from Friends group by 2) select activity from cte where cnt not in (select max(cnt) from cte) and cnt not in (select min(cnt) from cte)
with cte as (select distinct a.name as activity,count(f.id) cnts from activities a LEFT JOIN friends f ON f.activity = a.name group by a.name) select activity from cte where cnts < (select MAX(cnts) from cte) and cnts > (select MIN(cnts) from cte)
with cte as (select min(count_names) as min_count, max(count_names) as max_count from (select activity, count(name) count_names from Friends group by activity) as a) select activity from Friends group by activity having count(name) != (select min_count from cte) and count(name) != (select max_count from cte)
with cte as( select activity, count(*) as cnt from friends group by 1 ) select distinct activity from cte where cnt not in (select max(cnt) from cte) and cnt not in (select min(cnt) from cte)
with cte as( select activity, count(*) c from Friends group by 1 order by 2) select activity from cte where c > (select min(c) from cte) and c < (select max(c) from cte)
with cte as( select activity, count(distinct id) as person from friends group by activity ) select activity from cte where person not in (select max(person) from cte) and person not in (select min(person) from cte)
with cte as( select activity, count(name) as cnt from Friends group by activity ) select activity from cte where cnt between (select min(cnt) from cte)+1 and (select max(cnt) from cte)-1
with cte as( select activity, dense_rank() over(order by count(id) desc) as activity_rank from Friends group by activity ) select distinct activity from cte where activity_rank <> (select max(activity_rank) from cte) and activity_rank <> (select min(activity_rank) from cte)
with cte1 as ( select activity from ( select activity , count(id) as x , rank() over(order by count(id) desc) as d_rank , rank() over(order by count(id) ) as i_rank from friends group by 1 ) agg where agg.d_rank != 1 and agg.i_rank != 1 ) select name as activity from activities where name in (select * from cte1)
with cte1 as ( select activity, rank() over (order by num) r, rank() over (order by num desc) rd from ( select activity, count(activity) num from friends group by 1) cte order by 2 desc) select activity from cte1 where r != 1 and rd != 1
with cte_1 as ( select activity, count(*)over (partition by activity) 'cnt' from Friends ) ,min_max_cte as ( select max(cnt) as 'max_cnt',min(cnt) as 'min_cnt' from cte_1 ) select distinct activity from cte_1 A,min_max_cte where cnt != min_max_cte.max_cnt and cnt != min_max_cte.min_cnt
with extreme as ( select activity, count(*) as num from Friends group by activity ) select activity from extreme where num != (select max(num) from extreme) and num != (select min(num) from extreme)
with main as ( select a.name as activity , rank() over (order by count(if(b.name, 1, 0))) rank_asc , rank() over (order by count(if(b.name, 1, 0)) desc) rank_desc from activities a left join friends b on a.name = b.activity group by activity ) select activity from main where rank_asc = rank_desc or (rank_asc != 1 and rank_desc != 1)
with mima as ( select activity, count(1) ct from friends group by activity ) select activity from mima where ct not in (select max(ct) from mima) and ct not in (select min(ct) from mima)
with min_max_activities as ( select activity, dense_rank() over(order by total desc) as ranked_max, dense_rank() over(order by total) as ranked_min from ( select activity, count(1) as total from friends group by 1 ) f ) select name as activity from activities a left join ( select * from min_max_activities where ranked_max = 1 or ranked_min = 1 ) g on g.activity = a.name where g.activity is null
with min_max_activities as ( select activity, dense_rank() over(order by total desc) as ranked_max, dense_rank() over(order by total) as ranked_min from ( select activity, count(1) as total from friends group by 1 ) f ) select name as activity from activities a left join ( select activity from min_max_activities where ranked_max = 1 or ranked_min = 1 ) g on g.activity = a.name where g.activity is null
with minm as(Select activity, count(id) as c from Friends group by 1 order by count(id) asc), maxm as(Select activity,count(id) as c from Friends group by 1 order by count(id) desc), minc as(Select activity , rank() over(order by c asc) as r from minm), maxc as(Select activity , rank() over(order by c desc) as r from maxm) select distinct activity from Friends where activity not in (select activity from minc where r=1) and activity not in (select activity from maxc where r=1)
with new as (select activity, count(id) as cnt from friends group by 1) select activity from new where cnt not in(select max(cnt) from new) and cnt not in (select min(cnt) from new)
with part_num as (select activity, count(distinct id) as num_participates from Friends f group by activity) select activity from part_num where num_participates != (select max(num_participates) from part_num) and num_participates != (select min(num_participates) from part_num)
with part_num as (select activity, count(distinct id) as num_participates from Friends f group by activity), max_part as (select max(num_participates) as max_num_participates from part_num), min_part as (select min(num_participates) as min_num_participates from part_num) select activity from part_num where num_participates != (select max_num_participates from max_part) and num_participates != (select min_num_participates from min_part)
with subq as ( select activity,count(name) ptcip from friends group by activity ) select activity from subq where ptcip not in ((select max(ptcip) from subq), (select min(ptcip) from subq))
with t as ( select activity, count(*) as size from activities a left join friends f on a.name = f.activity group by a.id ) select activity from t where size != (select max(size) from t) and size != (select min(size) from t)
with t as (select a.name, count(f.id) as sum, rank() over (order by count(f.id)) as R1, rank() over (order by count(f.id) desc) as R2 from activities a left join friends f on a.name= f.activity group by f.activity, a.name) select t.name as activity from t where t.R1 !=1 and t.R2 !=1
with t as (select activity, count(0) as ct from Friends group by activity) select activity from t where ct <> (select max(ct) from t) and ct<>(select min(ct) from t)
with t as (select activity, count(name) as cnt from friends group by activity) select activity from t where cnt < (select max(cnt) from t) and cnt > (select min(cnt) from t)
with t as (select f.activity, dense_rank()over (order by count(*) desc) as high, dense_rank()over (order by count(*)) as low from friends as f inner join activities as a on f.activity = a.name group by 1) select activity from t where high <> 1 and low <>1
with t as( select a.name as activity, count(f.id) as participants from Activities a left join Friends f on a.name = f.activity group by 1) select activity from t where participants not in (select max(participants) from t union select min(participants) from t)
with t as(select activity, count(activity) over(partition by a.name) as count_act from friends f join activities a on f.activity = a.name) select distinct t.activity from t where t.count_act not in (select max(t.count_act) from t) and t.count_act not in (select min(t.count_act) from t)
with t1 as (select a.activity, count(*) as cnt from friends a join activities b on a.activity = b.name group by 1) select distinct activity from t1 where cnt < (select max(cnt) from t1) and cnt> (select min(cnt) from t1)
with t1 as (select activity, count(activity) as ct from Friends group by activity) select activity from t1 where ct not in (select max(ct) from t1) and ct not in (select min(ct) from t1)
with t1 as (select activity, count(distinct id) as n from friends group by 1) select a.name as activity from activities a left join t1 on a.name = t1.activity where t1.n > (select min(n) from t1) and t1.n < (select max(n) from t1)
with t1 as (select activity, count(id) as cnt_act from friends group by activity) select activity from t1 where cnt_act != (select max(cnt_act) from t1) and cnt_act !=(select min(cnt_act) from t1)
with t1 as (select activity, count(id) as number from friends group by activity) select activity from t1 where number < (select max(number) from t1) and number > (select min(number) from t1)
with t1 as( select activity, count(*) as times from friends group by activity ) select activity from t1 where times < (select max(times) from t1) and times > (select min(times) from t1)
with tem as ( select activity, count(id) as cnt from friends group by activity ) select activity from tem where cnt not in ( select min(cnt) as cnt from tem union (select max(cnt) as cnt from tem))
with tem as (select activity, count(*) as total from Friends group by activity) select activity from tem where total not in (select max(total) from (select activity, count(*) as total from Friends group by activity) a) and total not in (select min(total) from (select activity, count(*) as total from Friends group by activity) a)
with temp as ( select activity, count(id) as t from friends group by 1 ) select name as activity from Activities where name not in (select activity from temp where t=(select max(t) from temp) or t=(select min(t) from temp))
with temp as ( select activity,count(*) as act_count from friends group by activity) select activity from temp where act_count < (select max(act_count) from temp) and act_count > (select min(act_count) from temp)
with temp as (SELECT F.id, F.name, F.activity, T.counts FROM Friends F LEFT JOIN (select activity, count(activity) as counts from Friends group by 1) AS T ON F.activity = T.activity) select activity from temp where counts < (select max(counts) from temp) and counts > (select min(counts) from temp) group by 1
with temp as (SELECT a.name, COUNT(f.id) as num_counts FROM Activities a LEFT JOIN Friends f ON a.name = f.activity GROUP BY a.name) SELECT t.name as activity FROM temp t WHERE t.num_counts != (SELECT MAX(num_counts) FROM temp) AND t.num_counts != (SELECT MIN(num_counts) FROM temp)
with temp as (select activity, count(*) as act, max(count(*)) over() as max_num, min(count(*)) over() as min_num from Friends group by activity) select activity from temp where act not in (max_num, min_num)
with temp as (select activity, count(*) as count_ from Friends group by activity) select activity from temp where count_ not in ((select max(count_) from temp), (select min(count_) from temp))
with temp as (select activity, count(*) as peoplecount from Friends group by activity ), temp2 as (select temp.activity, rank() over (order by peoplecount ) as ranka, rank() over (order by peoplecount DESC) as rankb from temp) select temp2.activity from temp2 where ranka!=1 and rankb!=1
with temp as (select activity, count(activity) as students from friends group by activity ) select activity from temp where students > (select min(students) from temp) and students < (select max(students) from temp)
with temp as (select activity, count(name) as num_people from Friends group by activity) select name as ACTIVITY from activities where name not in ( select activity from temp where num_people = (select max(num_people) from temp) or num_people = (select min(num_people) from temp) )
with temp as (select activity, rank () over ( order by count(id) asc) as minrank,rank () over (order by count(id) desc) as maxrank from friends group by activity) select name as activity from activities where name not in (select activity from temp where minrank=1 or maxrank=1)
with temp as (select activity, rank() over (order by count(id) desc) max_activity, rank() over (order by count(id)) min_activity from friends group by 1) select activity from temp where max_activity!=1 and min_activity!=1
with temp as (select activity, rank() over (order by count(id) desc) max_activity, rank() over (order by count(id)) min_activity from friends group by 1) select name as activity from activities join temp on activities.name=temp.activity where max_activity!=1 and min_activity!=1
with temp as (select activity, rank() over(order by count(*) desc) as ranking, rank() over(order by count(*)) as ranking2 from friends group by activity) select activity from temp where ranking != 1 and ranking2 !=1
with temp as( select activity, count(distinct id) as num_activity from Friends group by 1 ) select activity from temp where num_activity not in ( (select max(num_activity) from temp), (select min(num_activity) from temp) )
with temp1 as ( select activity, count(activity) from friends group by activity having count(activity) <> (select distinct max(count(activity)) over() from friends group by activity) and count(activity) <> (select distinct min(count(activity)) over() from friends group by activity)) select distinct activity from temp1
with temp1 as ( select activity, count(activity) from friends group by activity having count(activity) not in ((select distinct max(count(activity)) over() from friends group by activity), (select distinct min(count(activity)) over() from friends group by activity))) select distinct activity from temp1
with tmp as ( select activity, count(1) as cnt from friends group by 1 order by 2 ) select activity from tmp where cnt != (select max(cnt) from tmp) and cnt != (select min(cnt) from tmp)
with tmp as ( select count(f.id) as ct from activities a left join friends f on a.name = f.activity group by a.name ) select a.name as activity from activities a left join friends f on a.name = f.activity group by a.name having count(f.id) not in (select max(ct) from tmp union select min(ct) from tmp)
with tmp as (select activity, count(id) as part from friends group by activity) select activity from tmp where part != (select max(part) from tmp) and part != (Select min(part) from tmp)
with tmp as (select activity, count(id) as val from friends group by 1 ) select activity from tmp where val between (select min(val)+1 from tmp) and (select max(val)-1 from tmp)
with tmp as (select activity, rank() over (order by count(id)) as rnk_asc, rank() over (order by count(id) desc) as rnk_desc from friends group by 1 ) select activity from tmp where rnk_asc <> 1 and rnk_desc <> 1
with tmp as (select activity, rank() over(order by count(distinct id)) as rnk_asc, rank() over(order by count(distinct id) desc) as rnk_desc from friends group by 1 ) select activity from tmp where activity not in (select activity from tmp where rnk_asc=1) and activity not in (select activity from tmp where rnk_desc=1)
with tmp as( select activity, count(activity) cnt from Friends group by activity) select activity from tmp where cnt > (select min(cnt) from tmp) and cnt < (select max(cnt) from tmp)
with total_friends_per_activity as ( select activity, count(1) as total from friends group by 1 ), min_max_activities as ( select min(total) as min_friends, max(total) as max_friends from total_friends_per_activity ) select activity from total_friends_per_activity a where total <> (select min_friends from min_max_activities) and total <> (select max_friends from min_max_activities)
with y as ( select activity , count(distinct id) as x , dense_rank() over(order by count(distinct id)) as seq from friends group by 1 ) select activity from y where seq not in (select min(seq) from y ) and seq not in (select max(seq) from y) group by 1
with y as ( select activity, count(distinct id) as x from friends group by 1) select activity from y where x not in (select max(x) from y) and x not in (select min(x) from y )
with y as (select activity , count(distinct id) as x from friends group by 1) select activity from y where x not in (select min(x) from y ) and x not in (select max(x) from y)
