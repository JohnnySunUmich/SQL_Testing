( SELECT SUM(o.quantity * p.price) as sq, month(o.order_date) as m, c.customer_id, c.name FROM Customers as c INNER JOIN orders as o ON c.customer_id = o.customer_id INNER JOIN Product as p ON o.product_id = p.product_id WHERE month(o.order_date) IN (6,7) GROUP BY o.customer_id, month(o.order_date) )*/ WITH sumquantity AS( select customers.name, customers.customer_id,sum(orders.quantity*product.price) as fprice, month(orders.order_date) as mnth from customers inner join orders on customers.customer_id = orders.customer_id inner join product on orders.product_id = product.product_id group by customers.customer_id,mnth ) select s.name,s.customer_id from sumquantity as s inner join sumquantity as t on s.customer_id = t.customer_id and s.mnth = 6 and t.mnth = 7 and s.fprice >= 100 and t.fprice >= 100
SELECT A.customer_id as customer_id, A.name as name FROM (SELECT C.customer_id ,C.name, SUM((CASE WHEN EXTRACT(MONTH FROM order_date) = 6 THEN (price*quantity) ELSE 0 end)) AS Jun_spend, SUM((CASE WHEN EXTRACT(MONTH FROM order_date) = 7 THEN (price*quantity) ELSE 0 end)) AS Jul_spend FROM Orders O JOIN Product P ON O.product_id = P.product_id JOIN Customers C ON C.customer_id =O.customer_id GROUP BY C.customer_id,C.name HAVING Jun_spend >= 100 AND Jul_spend >=100) A
SELECT B.customer_id, B.name FROM (SELECT A.customer_id, A.name, A.mth, SUM(A.price) FROM (SELECT C.customer_id, C.name, (CASE WHEN MONTH(O.order_date) - 10 < 0 THEN CONCAT(YEAR(O.order_date),'-0', MONTH(O.order_date)) ELSE CONCAT(YEAR(O.order_date),'-', MONTH(O.order_date)) END) mth, P.price*O.quantity price FROM Orders O LEFT JOIN Customers C ON O.customer_id = C.customer_id LEFT JOIN Product P ON O.product_id = P.product_id WHERE (MONTH(O.order_date) = 6 OR MONTH(O.order_date) = 7) AND (YEAR(O.order_date)) = 2020) A GROUP BY A.customer_id, A.name, A.mth HAVING SUM(A.price) >= 100) B GROUP BY B.customer_id, B.name HAVING COUNT(B.name) = 2
SELECT C.CUSTOMER_ID, C.NAME FROM CUSTOMERS C JOIN (SELECT CUSTOMER_ID, SUM(CASE WHEN DATE_FORMAT(ORDER_DATE, '%m') = '06' THEN P.PRICE * QUANTITY END) JUNE_SUM, SUM(CASE WHEN DATE_FORMAT(ORDER_DATE, '%m') = '07' THEN P.PRICE * QUANTITY END) JULY_SUM FROM ORDERS O JOIN PRODUCT P ON P.PRODUCT_ID = O.PRODUCT_ID GROUP BY CUSTOMER_ID HAVING JUNE_SUM >= 100 AND JULY_SUM >= 100 ) TOTAL ON C.CUSTOMER_ID = TOTAL.CUSTOMER_ID
SELECT CUSTOMER_ID, NAME FROM ( SELECT C.customer_id CUSTOMER_ID, C.name NAME, SUM(O.quantity * P.price) TOTAL FROM Customers C LEFT JOIN Orders O ON C.customer_id = O.customer_id LEFT JOIN Product P ON O.product_id = P.product_id WHERE O.order_date >= '2020-06-01' AND O.order_date <= '2020-07-31' GROUP BY C.customer_id, MONTH(O.order_date) ) as T WHERE TOTAL >= 100 GROUP BY CUSTOMER_ID HAVING COUNT(CUSTOMER_ID) > 1
SELECT CUSTOMER_ID, NAME FROM CUSTOMERS WHERE customer_id IN (SELECT customer_id FROM ORDERS O JOIN PRODUCT P ON O.product_id = P.product_id GROUP BY 1 HAVING SUM(CASE WHEN LEFT(order_date,7)='2020-06' then (quantity*price) else 0 end)>=100 AND SUM(CASE WHEN LEFT(order_date,7)='2020-07' THEN (quantity*price) else 0 end) >=100)
SELECT Customers.customer_id, name FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Product ON Orders.product_id = Product.product_id WHERE DATE_FORMAT(order_date, '%Y-%m') = '2020-06' OR DATE_FORMAT(order_date, '%Y-%m') = '2020-07' GROUP BY Customers.customer_id HAVING SUM(IF(MONTH(order_date) = 6, quantity * price, 0)) >= 100 AND SUM(IF(MONTH(order_date) = 7, quantity * price, 0)) >= 100
SELECT DISTINCT customer_id , name FROM ( SELECT z1.customer_id , z1.name , MONTH(order_date) AS month , SUM(CASE WHEN MONTH(order_date) = 6 THEN z2.quantity * z3.price END) AS jun_order_value , SUM(CASE WHEN MONTH(order_date) = 7 THEN z2.quantity * z3.price END) AS jul_order_value FROM Customers z1 JOIN Orders z2 ON z1.customer_id = z2.customer_id JOIN Product z3 ON z2.product_id = z3.product_id WHERE MONTH(order_date) IN (6,7) GROUP BY 1,2 ) y1 WHERE jun_order_value >= 100 AND jul_order_value >= 100
SELECT DISTINCT(customer_id), name FROM Customers as c JOIN Orders USING(customer_id) JOIN Product USING(product_id) GROUP BY customer_id HAVING SUM(CASE WHEN LEFT(order_date,7)='2020-06' THEN price*quantity ELSE 0 END) >= 100 AND SUM(CASE WHEN LEFT(order_date,7)='2020-07' THEN price*quantity ELSE 0 END) >= 100
SELECT O.customer_id AS CUSTOMER_ID , C.name AS NAME FROM Orders O LEFT JOIN Product P ON P.product_id = O.product_id LEFT JOIN Customers C ON C.customer_id = O.customer_id WHERE MONTH(O.order_date) = 6 AND YEAR(O.order_date) = 2020 AND O.customer_id IN (SELECT O.customer_id FROM Orders O LEFT JOIN Product P ON P.product_id = O.product_id WHERE MONTH(O.order_date) = 7 AND YEAR(O.order_date) = 2020 GROUP BY O.customer_id HAVING SUM(O.quantity*P.price) >= 100) GROUP BY O.customer_id HAVING SUM(O.quantity*P.price) >= 100
SELECT O.customer_id, C.name FROM Customers C JOIN Orders O ON C.customer_id=O.customer_id JOIN product P ON P.product_id=O.product_id GROUP BY O.customer_id HAVING SUM(IF(month(O.order_date) = '06', O.quantity* P.price, 0)) >= 100 AND SUM(IF(month(O.order_date) = '07', O.quantity* P.price, 0)) >= 100
SELECT Orders.customer_id, name FROM (Orders JOIN Customers ON Orders.customer_id=Customers.customer_id) JOIN Product ON Orders.product_id=Product.product_id GROUP BY Orders.customer_id HAVING SUM((CASE WHEN SUBSTRING(order_date, 1, 7)='2020-06' THEN quantity ELSE 0 END)*price)>=100 AND SUM((CASE WHEN SUBSTRING(order_date, 1, 7)='2020-07' THEN quantity ELSE 0 END)*price)>=100
SELECT T.customer_id, T.name FROM ( SELECT O.customer_id, C.name, SUM(O.quantity * P.price) AS total FROM (SELECT * FROM orders WHERE order_date BETWEEN "2020-06-01" AND "2020-07-31") AS O JOIN Customers AS C ON O.customer_id = C.customer_id JOIN Product AS P ON O.product_id = P.product_id GROUP BY O.customer_id, DATE_FORMAT(O.order_date,'%Y-%m') HAVING total >= 100 ) AS T GROUP BY T.customer_id HAVING COUNT(*) > 1
SELECT T.customer_id, T.name FROM (SELECT Customers.name, Customers.customer_id, SUM(CASE WHEN order_date BETWEEN '2020-06-01' AND '2020-06-30' THEN quantity*price ELSE 0 END) AS June, SUM(CASE WHEN order_date BETWEEN '2020-07-01' AND '2020-07-31' THEN quantity*price ELSE 0 END) AS July FROM Orders LEFT JOIN Customers ON Orders.customer_id = Customers.customer_id LEFT JOIN Product ON Orders.product_id = Product.product_id GROUP BY Orders.customer_id) AS T WHERE T.June >= 100 AND T.July >= 100
SELECT a.customer_id, a.name FROM ( SELECT Orders.customer_id, Customers.name, SUM(Orders.quantity * Product.price) as cost FROM Orders LEFT JOIN Product ON Orders.product_id = Product.product_id LEFT JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE MONTHNAME(Orders.order_date) = 'June' AND YEAR(Orders.order_date) = 2020 GROUP BY Orders.customer_id, Customers.name HAVING (cost >= 100) UNION SELECT Orders.customer_id, Customers.name, SUM(Orders.quantity * Product.price) as cost FROM Orders LEFT JOIN Product ON Orders.product_id = Product.product_id LEFT JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE MONTHNAME(Orders.order_date) = 'July' AND YEAR(Orders.order_date) = 2020 GROUP BY Orders.customer_id, Customers.name HAVING (cost >= 100)) a GROUP BY a.customer_id, a.name HAVING COUNT(a.customer_id) > 1
SELECT a.customer_id,a.name FROM Orders AS b LEFT JOIN Customers AS a ON b.customer_id=a.customer_id LEFT JOIN Product as C ON b.product_id=c.product_id GROUP BY b.customer_id HAVING SUM(IF(LEFT(b.order_date,7)='2020-06',quantity,0)*c.price)>=100 AND SUM(IF(LEFT(b.order_date,7)='2020-07',quantity,0)*c.price)>=100
SELECT c.customer_id AS customer_id, c.name AS name FROM ( SELECT o.customer_id as customer_id, MONTH(order_date) AS order_month, YEAR(order_date) AS order_year, IF(SUM(o.quantity * p.price) >= 100, 1, 0) is_spent FROM orders o JOIN product p ON o.product_id = p.product_id WHERE MONTH(order_date) IN (6, 7) AND YEAR(order_date) = 2020 GROUP BY customer_id, order_month, order_year) a JOIN customers c ON a.customer_id = c.customer_id GROUP BY customer_id, name HAVING SUM(is_spent) > 1
SELECT c.customer_id as CUSTOMER_ID, c.name as NAME FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Product p ON p.product_id = o.product_id GROUP BY 1,2 HAVING SUM(CASE WHEN MONTH(o.order_date) =6 THEN quantity*price ELSE 0 END) >=100 AND SUM(CASE WHEN MONTH(o.order_date) =7 THEN quantity*price ELSE 0 END) >=100
SELECT c.customer_id, c.name FROM Customers AS c WHERE c.customer_id IN ( SELECT o.customer_id FROM Orders AS o JOIN Product AS p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-06-01' AND '2020-06-30' GROUP BY o.customer_id HAVING SUM(o.quantity * p.price) >= 100 ) AND c.customer_id IN ( SELECT o.customer_id FROM Orders AS o JOIN Product AS p ON o.product_id = p.product_id WHERE o.order_date LIKE '2020-07%' GROUP BY o.customer_id HAVING SUM(o.quantity * p.price) >= 100 )
SELECT c.customer_id, c.name FROM Customers c JOIN ( SELECT customer_id, SUM(CASE WHEN DATE_FORMAT(order_date, '%m')='06' THEN p.price*quantity END) AS sm06, SUM(CASE WHEN DATE_FORMAT(order_date, '%m')='07' THEN p.price*quantity END) AS sm07 FROM Orders o JOIN Product p ON o.product_id=p.product_id GROUP BY customer_id HAVING sm06>=100 AND sm07>=100) t ON c.customer_id=t.customer_id
SELECT c.customer_id, c.name FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Product p ON o.product_id = p.product_id GROUP BY o.customer_id HAVING SUM(CASE WHEN MONTH(o.order_date)=6 THEN p.price*o.quantity ELSE 0 END)>=100 AND SUM(CASE WHEN MONTH(o.order_date)=7 THEN p.price*o.quantity ELSE 0 END)>=100
SELECT c.customer_id, c.name FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Product p ON p.product_id = o.product_id GROUP BY 1 HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', p.price * o.quantity, 0)) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', p.price * o.quantity, 0)) >= 100
SELECT c.customer_id, c.name FROM Customers c JOIN Orders o ON c.customer_id=o.customer_id JOIN Product p ON o.product_id=p.product_id GROUP BY c.customer_id HAVING SUM(IF(LEFT(order_date,7)="2020-06",quantity,0)*price)>=100 AND SUM(IF(LEFT(order_date,7)="2020-07",quantity,0)*price)>=100
SELECT c.customer_id, c.name FROM Customers c JOIN Orders o ON c.customer_id=o.customer_id JOIN Product p ON o.product_id=p.product_id GROUP BY customer_id HAVING SUM(CASE WHEN MONTH(o.order_date)=6 THEN o.quantity * p.price ELSE 0 END) >= 100 AND SUM(CASE WHEN MONTH(o.order_date)=7 THEN o.quantity * p.price ELSE 0 END) >= 100
SELECT c.customer_id, c.name FROM Customers c, Product p, Orders o WHERE c.customer_id = o.customer_id AND p.product_id = o.product_id GROUP BY c.customer_id HAVING SUM(CASE WHEN MONTH(o.order_date)=6 THEN p.price*o.quantity ELSE 0 END)>=100 AND SUM(CASE WHEN MONTH(o.order_date)=7 THEN p.price*o.quantity ELSE 0 END)>=100
SELECT c.customer_id, c.name FROM Orders AS o JOIN Product AS p ON o.product_id = p.product_id JOIN Customers AS c ON o.customer_id = c.customer_id GROUP BY c.customer_id HAVING SUM(IF(LEFT(o.order_date, 7) = '2020-06', p.price, 0) * o.quantity) >= 100 AND SUM(IF(LEFT(o.order_date, 7) = '2020-07', p.price, 0) * o.quantity) >= 100
SELECT c.customer_id, c.name FROM Orders AS o JOIN Product AS p ON o.product_id = p.product_id JOIN Customers AS c ON o.customer_id = c.customer_id GROUP BY o.customer_id HAVING SUM(IF(LEFT(order_date,7) = '2020-06', quantity, 0)*price)>= 100 AND SUM(IF(LEFT(order_date,7) = '2020-07', quantity, 0)*price)>= 100
SELECT c.customer_id, c.name FROM Orders o JOIN Product p ON o.product_id = p.product_id JOIN Customers c ON o.customer_id = c.customer_id GROUP BY o.customer_id HAVING SUM(CASE WHEN MONTH(order_date) = 06 THEN quantity*price END) >= 100 AND SUM(CASE WHEN MONTH(order_date) = 07 THEN quantity*price END) >= 100
SELECT c.customer_id, c.name FROM Orders o LEFT JOIN Customers c on o.customer_id = c.customer_id LEFT JOIN Product p on o.product_id = p.product_id GROUP BY o.customer_id HAVING sum(if(LEFT(o.order_date,7) = '2020-06', p.price, 0)*o.quantity) >= 100 AND sum(if(LEFT(o.order_date,7) = '2020-07', p.price, 0)*o.quantity) >= 100
SELECT c.customer_id, c.name FROM customers c JOIN product p JOIN orders o ON c.customer_id=o.customer_id and p.product_id=o.product_id GROUP BY c.customer_id HAVING SUM( case when left(o.order_date,7)='2020-06' then quantity*price else 0 end)>=100 and SUM( case when left(o.order_date,7)='2020-07' then quantity*price else 0 end)>=100
SELECT c.customer_id, c.name FROM orders O LEFT JOIN product p ON o.product_id = p.product_id LEFT JOIN customers c ON o.customer_id = c.customer_id GROUP BY c.customer_id HAVING SUM(IF(LEFT(o.order_date, 7) = '2020-06', o.quantity, 0) * price) >= 100 AND SUM(IF(LEFT(o.order_date, 7) = '2020-07',o.quantity, 0) * price) >= 100
SELECT c.customer_id, name FROM ( SELECT LEFT(order_date, 7) AS month, customer_id FROM Orders o INNER JOIN Product p ON o.product_id = p.product_id WHERE YEAR(order_date)=2020 AND (MONTH(order_date)=6 OR MONTH(order_date)=7) GROUP BY LEFT(order_date, 7), o.customer_id HAVING SUM(quantity*price) >= 100 ) sub INNER JOIN Customers c ON c.customer_id = sub.customer_id GROUP BY sub.customer_id HAVING COUNT(*)=2
SELECT c.customer_id, name FROM (SELECT o.customer_id, MONTH(o.order_date) as month, SUM(o.quantity*p.price) as spend FROM Orders as o JOIN Product as p ON o.product_id = p.product_id GROUP BY o.customer_id, month HAVING (month=6 and spend>=100) or (month=7 and spend>=100)) as inner_table JOIN customers as c ON inner_table.customer_id = c.customer_id group by c.customer_id HAVING count(month) = 2
SELECT c.customer_id, name FROM Customers c JOIN Orders o JOIN Product p on c.customer_id=o.customer_id and p.product_id=o.product_id GROUP BY c.customer_id HAVING SUM(case when month(order_date) = '06' then quantity*price end) >= 100 AND SUM(case when month(order_date) = '07' then quantity*price end) >= 100
SELECT c.customer_id, name FROM Customers c JOIN Orders o on c.customer_id = o.customer_id JOIN Product p on o.product_id = p.product_id GROUP BY c.customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT c.customer_id,c.name from customers c JOIN ( SELECT customer_id, SUM(CASE WHEN date_format(order_date,'%m')='06' THEN p.price*quantity END) sm06, SUM(CASE WHEN date_format(order_date,'%m')='07' THEN p.price*quantity END) sm07 FROM orders o JOIN product p ON p.product_id=o.product_id GROUP BY customer_id HAVING sm06>=100 AND sm07>=100 ) t ON c.customer_id=t.customer_id
SELECT c.customer_id,c.name from customers c JOIN ( SELECT customer_id, SUM(case when date_format(order_date,'%m')='06' THEN p.price*quantity END) sm06, SUM(case when date_format(order_date,'%m')='07' THEN p.price*quantity END) sm07 FROM orders o JOIN product p ON p.product_id=o.product_id GROUP BY customer_id HAVING sm06>=100 AND sm07>=100 ) t ON c.customer_id=t.customer_id
SELECT c.customer_id,name FROM Customers AS c INNER JOIN Orders AS o ON c.customer_id = o.customer_id INNER JOIN Product AS p ON p.product_id = o.product_id GROUP BY customer_id, name HAVING SUM(CASE WHEN MONTH(order_date) = 6 AND YEAR(order_date) = 2020 THEN p.price * o.quantity END) >= 100 AND SUM(CASE WHEN MONTH(order_date) = 7 AND YEAR(order_date) = 2020 THEN p.price * o.quantity END) >= 100
SELECT cs.customer_id, cs.name FROM Customers AS cs INNER JOIN Orders AS ord ON cs.customer_id = ord.customer_id INNER JOIN Product AS pr ON pr.product_id = ord.product_id GROUP BY cs.customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT cs.customer_id, cs.name FROM Customers AS cs INNER JOIN Orders AS ord USING (customer_id) INNER JOIN Product AS pr USING (product_id) GROUP BY cs.customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT customer_id , name FROM ( SELECT o.customer_id , c.name , month(o.order_date) mon ,SUM(o.quantity*p.price) amt ,row_number() over(partition by o.customer_id order by month(o.order_date)) row_num FROM Customers c JOIN Product p JOIN Orders o ON c.customer_id = o.customer_id AND p.product_id = o.product_id WHERE o.order_date LIKE "2020-06%" OR o.order_date LIKE "2020-07%" GROUP BY o.customer_id, c.name, MONTH(o.order_date) HAVING SUM(o.quantity*p.price) >=100 ) a where row_num =2
SELECT customer_id , name FROM ( SELECT o.customer_id , c.name ,row_number() over(partition by o.customer_id ) row_num FROM Customers c JOIN Product p JOIN Orders o ON c.customer_id = o.customer_id AND p.product_id = o.product_id WHERE o.order_date LIKE "2020-06%" OR o.order_date LIKE "2020-07%" GROUP BY o.customer_id, c.name, MONTH(o.order_date) HAVING SUM(o.quantity*p.price) >=100 ) a where row_num =2
SELECT customer_id , name FROM ( SELECT o.customer_id , c.name ,row_number() over(partition by o.customer_id order by month(o.order_date)) row_num FROM Customers c JOIN Product p JOIN Orders o ON c.customer_id = o.customer_id AND p.product_id = o.product_id WHERE o.order_date LIKE "2020-06%" OR o.order_date LIKE "2020-07%" GROUP BY o.customer_id, c.name, MONTH(o.order_date) HAVING SUM(o.quantity*p.price) >=100 ) a where row_num =2
SELECT customer_id AS CUSTOMER_ID, name AS NAME FROM Orders JOIN Product USING(product_id) JOIN Customers USING(customer_id) GROUP BY customer_id HAVING SUM(IF(MONTH(order_date) = 6, quantity, 0)*price) >= 100 AND SUM(IF(MONTH(order_date) = 7, quantity, 0)*price) >= 100
SELECT customer_id as CUSTOMER_ID, name as NAME FROM (SELECT c.customer_id as CUSTOMER_ID, c.name NAME, (CASE WHEN MONTH(order_date)=06 THEN o.quantity*p.price ELSE 0 END) as June_spend, (CASE WHEN MONTH(order_date)=07 THEN o.quantity*p.price ELSE 0 END) as July_spend FROM Customers c INNER JOIN Orders o ON c.customer_id=o.customer_id INNER JOIN Product p ON o.product_id=p.product_id GROUP BY c.customer_id HAVING SUM(June_spend)>=100 AND SUM(JULY_spend)>=100) p
SELECT customer_id as CUSTOMER_ID, name as NAME FROM Customers WHERE customer_id IN (SELECT customer_id FROM (SELECT customer_id, COUNT(*) as MNTHCNT FROM (SELECT A.customer_id, MONTH(A.order_date) AS MNTH, SUM(A.quantity*B.price) AS SPENT FROM (SELECT * FROM Orders WHERE MONTH(order_date) IN (6,7)) A JOIN Product B ON A.product_id =B.product_id GROUP BY A.customer_id,MONTH(A.order_date)) C WHERE SPENT>=100 GROUP BY customer_id) D WHERE MNTHCNT=2)
SELECT customer_id, name FROM ( SELECT c.customer_id, c.name, SUM(CASE WHEN DATE_FORMAT(order_date, '%Y-%m') = '2020-06' THEN p.price * o.quantity ELSE 0 END) AS t1, SUM(CASE WHEN DATE_FORMAT(order_date, '%Y-%m') = '2020-07' THEN p.price * o.quantity ELSE 0 END) AS t2 FROM Product p JOIN Orders o ON p.product_id = o.product_id JOIN Customers c ON o.customer_id = c.customer_id GROUP BY c.customer_id ) a WHERE t1 >= 100 AND t2 >= 100
SELECT customer_id, name FROM ( SELECT c.customer_id, c.name, SUM(CASE WHEN LEFT(o.order_date, 7) = '2020-06' THEN p.price*o.quantity ELSE 0 END) AS t1, SUM(CASE WHEN LEFT(o.order_date, 7) = '2020-07' THEN p.price*o.quantity ELSE 0 END) AS t2 FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN product p ON p.product_id = o.product_id GROUP BY 1 ) tmp WHERE t1 >= 100 AND t2 >= 100
SELECT customer_id, name FROM ( SELECT c.customer_id, c.name, SUM(CASE WHEN LEFT(o.order_date, 7) = '2020-06' THEN p.price*o.quantity ELSE 0 END) AS t1, SUM(CASE WHEN LEFT(o.order_date, 7) = '2020-07' THEN p.price*o.quantity ELSE 0 END) AS t2 FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN product p ON p.product_id = o.product_id GROUP BY 1 ) tmp_table WHERE t1 >= 100 AND t2 >= 100
SELECT customer_id, name FROM ( SELECT c.name, o.customer_id FROM Orders o LEFT JOIN Product p ON p.product_id = o.product_id LEFT JOIN Customers c ON c.customer_id = o.customer_id WHERE MONTH(o.order_date) = 6 OR MONTH(o.order_date) = 7 GROUP BY o.customer_id, MONTH(o.order_date) HAVING SUM(o.quantity * p.price) >= 100 ) AS tb GROUP BY name HAVING COUNT(*) = 2
SELECT customer_id, name FROM ( SELECT c.name, o.customer_id FROM Orders o LEFT JOIN Product p ON p.product_id = o.product_id LEFT JOIN Customers c ON c.customer_id = o.customer_id WHERE MONTH(o.order_date) = 6 OR MONTH(o.order_date) = 7 GROUP BY o.customer_id, MONTH(o.order_date) HAVING SUM(o.quantity * p.price) >= 100 ) as tmp GROUP BY name HAVING COUNT(*) = 2
SELECT customer_id, name FROM ( SELECT c.name, o.customer_id FROM Orders o LEFT JOIN Product p ON p.product_id = o.product_id LEFT JOIN Customers c ON c.customer_id = o.customer_id WHERE MONTH(o.order_date) = 6 OR MONTH(o.order_date) = 7 GROUP BY o.customer_id, MONTH(o.order_date) HAVING SUM(o.quantity * p.price) >= 100 ) as tmp GROUP BY name HAVING COUNT(*) > 1
SELECT customer_id, name FROM ( SELECT c.name, o.customer_id FROM Orders o LEFT JOIN Product p ON p.product_id = o.product_id LEFT JOIN Customers c ON c.customer_id = o.customer_id WHERE MONTH(o.order_date) = 6 or MONTH(o.order_date) = 7 GROUP BY o.customer_id, MONTH(o.order_date) HAVING SUM(o.quantity * p.price) >= 100 ) as tmp GROUP BY name HAVING COUNT(*) = 2
SELECT customer_id, name FROM ( SELECT customer_id, name, SUM(CASE WHEN order_date LIKE "2020-06%" THEN (quantity*PRICE) END) JUNE, SUM(CASE WHEN order_date LIKE "2020-07%" THEN (quantity*PRICE) END) JULY FROM Customers c RIGHT JOIN Orders USING(customer_id) LEFT JOIN Product USING(product_id) GROUP BY customer_id ) A WHERE JUNE>99 AND JULY>99
SELECT customer_id, name FROM ( SELECT o.customer_id, c.name FROM Orders o LEFT JOIN Product p ON p.product_id = o.product_id LEFT JOIN Customers c ON c.customer_id = o.customer_id WHERE MONTH(o.order_date) = 6 OR MONTH(o.order_date) = 7 GROUP BY o.customer_id, MONTH(o.order_date) HAVING SUM(o.quantity * p.price) >= 100 ) as tmp GROUP BY name HAVING COUNT(*) = 2
SELECT customer_id, name FROM ( SELECT o.customer_id, c.name FROM orders o LEFT JOIN product p ON o.product_id = p.product_id LEFT JOIN customers c ON o.customer_id = c.customer_id WHERE month(o.order_date) in (6, 7) GROUP BY o.customer_id, month(o.order_date) HAVING sum((o.quantity * p.price)) >= 100) a GROUP BY name HAVING COUNT(*) = 2
SELECT customer_id, name FROM ( SELECT o.customer_id, c.name, DATE_FORMAT(o.order_date, "%Y-%m") AS month, SUM(p.price*o.quantity) FROM Orders o JOIN Product p ON o.product_id = p.product_id AND o.order_date >= '2020-06-01' AND o.order_date <= '2020-07-31' JOIN Customers c ON o.customer_id = c.customer_id GROUP BY o.customer_id, c.name, DATE_FORMAT(o.order_date, "%Y-%m") HAVING SUM(p.price*o.quantity) >= 100 ) tmp GROUP BY customer_id, name HAVING COUNT(DISTINCT month) = 2
SELECT customer_id, name FROM ( SELECT o.customer_id, c.name, DATE_FORMAT(o.order_date, "%Y-%m") AS month, SUM(p.price*o.quantity) FROM Orders o JOIN Product p ON o.product_id = p.product_id AND o.order_date >= '2020-06-01' AND o.order_date <= '2020-07-31' JOIN Customers c ON o.customer_id = c.customer_id GROUP BY o.customer_id, c.name, DATE_FORMAT(o.order_date, "%Y-%m") HAVING SUM(p.price*o.quantity) >= 100 ) tmp GROUP BY customer_id, name HAVING COUNT(DISTINCT month) > 1
SELECT customer_id, name FROM ( select Customers.customer_id , name,sum(quantity*price),MONTH(Orders.order_date) from Customers join Product join Orders on Customers.customer_id=Orders.customer_id and Product.product_id=Orders.product_id WHERE MONTH(Orders.order_date) = 6 OR MONTH(Orders.order_date) = 7 group by (Customers.customer_id),MONTH(Orders.order_date) having (sum((quantity*price))>=100) ) as t1 GROUP BY name HAVING COUNT(*) = 2
SELECT customer_id, name FROM (SELECT Customers.customer_id, Customers.name, MONTH(order_date) as month, SUM(price*quantity) as asum FROM Orders LEFT JOIN Product ON Orders.product_id=Product.product_id LEFT JOIN Customers ON Customers.customer_id=Orders.customer_id WHERE MONTH(order_date)=6 OR MONTH(order_date)=7 AND YEAR(order_date)='2020' GROUP BY customer_id, MONTH(order_date) HAVING (SUM(price*quantity) >= 100)) as e GROUP BY customer_id HAVING count(*) >= 2
SELECT customer_id, name FROM (SELECT c.customer_id, c.name FROM orders o JOIN Customers c ON o.customer_id = c.customer_id JOIN Product p ON o.product_id = p.product_id WHERE (MONTH(o.order_date) between 6 AND 7) AND (YEAR(o.order_date) = 2020) GROUP BY c.name, MONTH(o.order_date) HAVING SUM(o.quantity* p.price) >= 100) AS t GROUP BY customer_id HAVING COUNT(*) = 2
SELECT customer_id, name FROM (SELECT o.customer_id, c.name, LEFT(order_date,7) AS order_month, SUM(p.price*o.quantity) AS TotalCost FROM Orders o LEFT JOIN Product p ON o.product_id=p.product_id LEFT JOIN Customers c ON o.customer_id=c.customer_id WHERE order_date LIKE '%2020-06-%' OR order_date LIKE '%2020-07-%' GROUP BY name, order_month HAVING TotalCost>=100) T GROUP BY name HAVING COUNT(name)=2
SELECT customer_id, name FROM (SELECT o.customer_id, o.product_id, o.order_date, o.quantity, p.price, c.name FROM Orders o LEFT JOIN Product p ON o.product_id = p.product_id LEFT JOIN Customers c ON o.customer_id = c.customer_id ) AS temp_table GROUP BY customer_id HAVING ( SUM(CASE WHEN (MONTH(order_date)=6 AND YEAR(order_date)=2020) THEN price*quantity ELSE NULL END)>=100 AND SUM(CASE WHEN (MONTH(order_date)=7 AND YEAR(order_date)=2020) THEN price*quantity ELSE NULL END)>=100 )
SELECT customer_id, name FROM Customers INNER JOIN Orders USING(customer_id) INNER JOIN Product USING(product_id) GROUP BY customer_id HAVING SUM(IF(DATE_FORMAT(order_date,"%Y-%m") = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(DATE_FORMAT(order_date,"%Y-%m") = '2020-07', quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers INNER JOIN Orders USING(customer_id) INNER JOIN Product USING(product_id) GROUP BY customer_id HAVING SUM(IF(MONTH(order_date) = 6, quantity, 0) * price) >= 100 AND SUM(IF(MONTH(order_date)= 7, quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING (customer_id) JOIN Product USING (product_id) GROUP BY customer_id HAVING SUM(CASE WHEN order_date LIKE '2020-06%' THEN quantity * price ELSE 0 END)>= 100 AND SUM(CASE WHEN order_date LIKE '2020-07%' THEN quantity * price ELSE 0 END)>= 100
SELECT customer_id, name FROM Customers JOIN Orders USING (customer_id) JOIN Product USING (product_id) GROUP BY customer_id HAVING SUM(IF(LEFT(order_date,7)='2020-06',quantity*price, 0))>=100 AND SUM(IF(LEFT(order_date,7)='2020-07',quantity*price, 0))>=100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) GROUP BY 1 HAVING SUM(CASE WHEN LEFT(order_date, 7) = '2020-06' THEN price*quantity ELSE 0 END) >=100 AND SUM(CASE WHEN LEFT(order_date, 7) = '2020-07' THEN price*quantity ELSE 0 END) >=100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) GROUP BY customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity* price, 0)) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity*price, 0)) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) GROUP BY customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) GROUP BY customer_id HAVING SUM(IF(MONTH(order_date)=6, quantity, 0) * price) >= 100 AND SUM(IF(MONTH(order_date)=7, quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) GROUP BY customer_id HAVING SUM(IF(SUBSTR(order_date, 1, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(SUBSTR(order_date, 1, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) WHERE MONTH(order_date) IN (6,7) GROUP BY customer_id HAVING SUM(IF(MONTH(order_date)=6, quantity, 0) * price) >= 100 AND SUM(IF(MONTH(order_date)=7, quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) WHERE year(order_date) = '2020' GROUP BY customer_id HAVING sum(case when monthname(order_date) = 'June' then price*quantity else 0 end) >= 100 AND sum(case when monthname(order_date) = 'July' then price*quantity else 0 end) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) WHERE year(order_date)='2020' GROUP BY customer_id HAVING SUM(IF(month(order_date)='06', quantity, 0) * price) >= 100 AND SUM(IF(month(order_date)='07', quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN Product USING(product_id) group by customer_id HAVING SUM(IF(DATE_FORMAT(order_date, "%Y-%m") = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(DATE_FORMAT(order_date, "%Y-%m") = '2020-07', quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers JOIN Orders USING(customer_id) JOIN product USING(product_id) GROUP BY customer_id HAVING SUM(IF(LEFT(order_date, 7) = "2020-06", quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = "2020-07", quantity, 0) * price) >= 100
SELECT customer_id, name FROM Customers JOIN Orders using (customer_id) JOIN Product using(product_id) GROUP BY customer_id HAVING SUM(IF(LEFT(Orders.order_date,7) = '2020-06', Orders.quantity, 0) * Product.price) >= 100 AND SUM(IF(LEFT(Orders.order_date, 7) = '2020-07', Orders.quantity, 0) * Product.price) >= 100
SELECT customer_id, name FROM Customers NATURAL JOIN ( SELECT customer_id, mon, SUM(tot) AS tot_spend FROM ( SELECT order_id, customer_id, product_id, YEAR(order_date) AS yr, MONTH(order_date) AS mon, price*quantity AS tot FROM Product NATURAL JOIN Orders ) AS t1 WHERE yr = '2020' AND (mon = 6 OR mon = 7) GROUP BY customer_id, mon ) AS t2 WHERE tot_spend >= 100 GROUP BY customer_id, name HAVING COUNT(DISTINCT mon) = 2
SELECT customer_id, name FROM Customers WHERE customer_id IN ( SELECT a.customer_id FROM Orders AS a JOIN Product AS b ON a.product_id = b.product_id WHERE a.order_date BETWEEN '2020-06-01' AND '2020-06-30' GROUP BY a.customer_id HAVING SUM(a.quantity * b.price) >= 100 ) AND customer_id IN ( SELECT a.customer_id FROM Orders AS a JOIN Product AS b ON a.product_id = b.product_id WHERE a.order_date BETWEEN '2020-07-01' AND '2020-07-31' GROUP BY a.customer_id HAVING SUM(a.quantity * b.price) >= 100 )
SELECT customer_id, name FROM Customers WHERE customer_id IN ( SELECT o.customer_id FROM Orders o JOIN Product p ON o.product_id = p.product_id WHERE MONTH(o.order_date) = 7 GROUP BY o.customer_id HAVING SUM(o.quantity*p.price)>=100 ) AND customer_id IN ( SELECT o.customer_id FROM Orders o JOIN Product p ON o.product_id = p.product_id WHERE MONTH(o.order_date) = 6 GROUP BY o.customer_id HAVING SUM(o.quantity*p.price)>=100 )
SELECT customer_id, name FROM Customers WHERE customer_id IN ( SELECT o.customer_id FROM Orders o LEFT JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-06-01' AND '2020-06-30' GROUP BY o.customer_id HAVING SUM(o.quantity * p.price) >= 100) AND customer_id IN ( SELECT o.customer_id FROM Orders o LEFT JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-07-01' AND '2020-07-31' GROUP BY o.customer_id HAVING SUM(o.quantity * p.price) >= 100)
SELECT customer_id, name FROM Customers WHERE customer_id IN (SELECT customer_id FROM ( SELECT customer_id, order_month, cost FROM ( SELECT customer_id, LEFT(order_date, 7) AS order_month, SUM(o.quantity * p.price) AS cost FROM Orders o INNER JOIN Product p ON o.product_id = p.product_id GROUP BY customer_id, order_month ) t WHERE (order_month = '2020-06' OR order_month = '2020-07') AND cost >= 100 ) t GROUP BY customer_id HAVING COUNT(*) = 2)
SELECT customer_id, name FROM Customers c RIGHT JOIN Orders USING(customer_id) LEFT JOIN Product USING(product_id) GROUP BY customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT customer_id, name FROM Orders INNER JOIN Product USING (product_id) INNER JOIN Customers USING (customer_id) GROUP BY customer_id HAVING SUM(IF(MONTH(order_date)=7, price*quantity, 0)) >= 100 AND SUM(IF(MONTH(order_date)=6, price*quantity, 0)) >= 100
SELECT customer_id, name FROM Orders JOIN Customers USING (customer_id) JOIN Product USING (product_id) WHERE order_date BETWEEN "2020-06-01" AND "2020-07-31" GROUP BY customer_id,name HAVING SUM(CASE WHEN MONTH(order_date) = 6 THEN price*quantity ELSE 0 END) >= 100 AND SUM(CASE WHEN MONTH(order_date) = 7 THEN price*quantity ELSE 0 END) >= 100
SELECT customer_id, name FROM Orders JOIN Product USING(product_id) JOIN Customers USING(customer_id) GROUP BY customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT customer_id, name FROM customers JOIN orders USING(customer_id) JOIN product USING(product_id) GROUP BY customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT customer_id, name FROM customers JOIN orders USING(customer_id) JOIN product USING(product_id) GROUP BY customer_id HAVING SUM(IF(SUBSTRING(order_date,1,7)='2020-06',quantity,0)*price)>=100 AND SUM(IF(SUBSTRING(order_date,1,7)='2020-07',quantity,0)*price)>=100
SELECT customer_id, name FROM customers WHERE customer_id IN (SELECT customer_id FROM (SELECT o.customer_id, MONTH(order_date) AS month, SUM(o.quantity * p.price) AS monthly_purch FROM orders o JOIN product p ON o.product_id = p.product_id GROUP BY 1, 2) sub11 WHERE monthly_purch >= 100 AND month IN (6, 7) GROUP BY 1 HAVING COUNT(*) = 2)
SELECT customer_id, name FROM( SELECT o.customer_id, c.name, SUM(CASE WHEN LEFT(o.order_date,7)='2020-06' THEN p.price*o.quantity END) AS July_sale, SUM(CASE WHEN LEFT(o.order_date,7)='2020-07' THEN p.price*o.quantity END) AS June_sale FROM Orders o LEFT JOIN Customers c on o.customer_id= c.customer_id LEFT JOIN Product p on o.product_id= p.product_id GROUP BY o.customer_id HAVING July_sale>=100 AND June_sale>=100) AS freq_tab1
SELECT customer_id, name from ( SELECT c.name, o.customer_id FROM Orders o LEFT JOIN Product p ON p.product_id = o.product_id LEFT JOIN Customers c ON c.customer_id = o.customer_id WHERE MONTH(o.order_date) = 6 OR MONTH(o.order_date) = 7 GROUP BY o.customer_id, MONTH(o.order_date) HAVING SUM(o.quantity * p.price) >= 100 ) temp Group by name having count(*) = 2
SELECT customer_id,name FROM Orders LEFT JOIN Product USING(product_id) LEFT JOIN Customers USING(customer_id) GROUP BY customer_id HAVING SUM(CASE WHEN MONTH(order_date) = 06 THEN quantity*price END) >= 100 AND SUM(CASE WHEN MONTH(order_date) = 07 THEN quantity*price END) >= 100
SELECT customers.customer_id, customers.name FROM customers JOIN (SELECT monthlyspends.customer_id, COUNT(monthlyspends.month) as monthcount FROM (SELECT custprodorder.customer_id, sum(price*custprodorder.quantity) as total, custprodorder.month FROM product JOIN (SELECT customer_id, product_id, sum(quantity) as quantity, MONTH(order_date) as month FROM orders WHERE MONTH(order_date) = 6 or MONTH(order_date) = 7 GROUP BY customer_id, product_id, MONTH(order_date)) custprodorder ON product.product_id = custprodorder.product_id GROUP BY customer_id, custprodorder.month HAVING total >= 100) as monthlyspends GROUP BY monthlyspends.customer_id HAVING monthcount = 2) result ON customers.customer_id = result.customer_id
SELECT customers.customer_id, name FROM Customers JOIN Orders ON customers.customer_id=orders.customer_id JOIN Product ON product.product_id=orders.product_id GROUP BY customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT customers.customer_id, name from customers, product, orders where orders.customer_id = customers.customer_id and orders.product_id = product.product_id GROUP BY customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
SELECT d.customer_id, d.name FROM (SELECT order_id, a.customer_id, name, SUM(CASE WHEN MONTH(a.order_date) = 6 THEN (b.price * a.quantity) ELSE NULL END) AS June_total, SUM(CASE WHEN MONTH(a.order_date) = 7 THEN (b.price * a.quantity) ELSE NULL END) AS July_total FROM Orders as a JOIN Product as b ON a.product_id = b.product_id JOIN Customers as c ON a.customer_id = c.customer_id GROUP BY a.customer_id ) d WHERE d.June_total >= 100 AND d.July_total >= 100
SELECT distinct customer_id, name FROM( SELECT c.customer_id, c.name, SUM(case when month(order_date)=6 THEN price*quantity ELSE NULL END) as junespend, SUM(case when month(order_date)=7 THEN price*quantity ELSE NULL END) as julyspend FROM Customers c LEFT JOIN Orders o on c.customer_id=o.customer_id LEFT JOIN Product p on o.product_id=p.product_id WHERE order_date between '2020-06-01' and '2020-07-31' GROUP BY 1,2) a WHERE junespend>=100 and julyspend>=100
SELECT o.customer_id, c.name FROM Orders o JOIN Product p ON o.product_id = p.product_id JOIN Customers c ON c.customer_id = o.customer_id GROUP BY o.customer_id HAVING SUM(IF(LEFT(order_date,7)='2020-06',quantity,0)*p.price)>= 100 AND SUM(IF(LEFT(order_date,7) = '2020-07',quantity,0)*p.price)>= 100
SELECT o.customer_id, c.name FROM Orders o JOIN Product p ON o.product_id= p.product_id JOIN Customers c ON o.customer_id= c.customer_id GROUP BY o.customer_id HAVING SUM(CASE WHEN MONTH(o.order_date)=6 THEN p.price*o.quantity ELSE 0 END)>=100 AND SUM(CASE WHEN MONTH(o.order_date)=7 THEN p.price*o.quantity ELSE 0 END)>=100
SELECT sub.customer_id, sub.name FROM (SELECT c.customer_id, c.name, o.order_date, p.price, o.quantity, sum(o.quantity*p.price) total FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id LEFT JOIN Product p ON p.product_id = o.product_id GROUP BY c.customer_id, month(o.order_date) HAVING total >= 100) sub WHERE MONTH(sub.order_date) IN (06, 07) GROUP BY 1 HAVING count(*) = 2
SELECT t.customer_id ,t.name FROM ( SELECT a.customer_id ,c.name ,MONTH(order_date) as OrderMonth ,SUM(p.price * a.quantity) as OrderSpend FROM orders a LEFT JOIN product p on p.product_id = a.product_id LEFT JOIN Customers c ON a.customer_id = c.customer_id WHERE 1=1 AND (MONTH(a.order_date) = 6 OR MONTH(a.order_date) = 7) GROUP BY 1,2,3 HAVING SUM(p.price * a.quantity) >= 100 ) t GROUP BY 1,2 HAVING COUNT(*) = 2
SELECT t.customer_id, c.name FROM Customers c JOIN (SELECT customer_id, SUM(CASE WHEN MONTH(o.order_date) = 6 THEN o.quantity*p.price END) as June, SUM(CASE WHEN MONTH(o.order_date) = 7 THEN o.quantity*p.price END) as July FROM Orders o JOIN Product p ON o.product_id = p.product_id GROUP BY customer_id) t on c.customer_id = t.customer_id WHERE June >= 100 and July >= 100
SELECT t1.customer_id, t3.name FROM Orders t1 LEFT JOIN Product t2 USING(product_id) LEFT JOIN Customers t3 USING(customer_id) GROUP BY t1.customer_id HAVING SUM(IF(t1.order_date LIKE '2020-06-%',t2.price*t1.quantity,0))>=100 AND SUM(IF(t1.order_date LIKE '2020-07-%',t2.price*t1.quantity,0))>=100
SELECT tmp.customer_id, tmp.name FROM (SELECT c.customer_id, c.name,SUM(o.quantity*p.price) AS amount FROM Customers c JOIN Orders o ON c.customer_id=o.customer_id JOIN Product p ON o.product_id=p.product_id WHERE MONTH(o.order_date)=6 OR MONTH(o.order_date)=7 GROUP BY c.customer_id, MONTH(o.order_date) HAVING amount>=100) tmp GROUP BY tmp.customer_id HAVING COUNT(*)>1
SELECT tmp4.customer_id, C.name FROM ( SELECT customer_id, SUM(spend_flag) as chk FROM ( SELECT *, CASE WHEN tot_spend>=100 THEN 1 ELSE 0 END AS spend_flag FROM ( SELECT customer_id, SUBSTR(order_date,1,7) AS month, SUM(spend) AS tot_spend FROM ( SELECT A.*, (A.quantity*B.price) AS spend FROM ( SELECT * FROM Orders WHERE SUBSTR(order_date,1,7) IN ('2020-06', '2020-07') ) A LEFT JOIN Product B ON A.product_id = B.product_id )tmp GROUP BY customer_id, SUBSTR(order_date,1,7) )tmp2 GROUP BY customer_id, month )tmp3 GROUP BY customer_id HAVING chk>=2 )tmp4 LEFT JOIN Customers C ON tmp4.customer_id = C.customer_id
Select Customers.customer_id, Customers.name From Customers Join (Select Orders.customer_id, Month(Orders.order_date), Sum(Product.price*Orders.quantity) as Monthly_Spending From Orders Left Join Product On Orders.product_id = Product.product_id Where Month(Orders.order_date) in (6, 7) Group By Orders.customer_id, Month(Orders.order_date)) as Orders_1 On Customers.customer_id = Orders_1.customer_id Where Orders_1.Monthly_Spending >= 100 Group By Customers.customer_id Having Count(Customers.name) = 2
Select c.customer_id, c.name from Customers c inner join Orders o on c.customer_id = o.customer_id inner join Product p on p.product_id = o.product_id group by c.customer_id having sum(case when month(o.order_date) = 06 and year(o.order_date)= 2020 then o.quantity*p.price end) >= 100 and sum(case when month(o.order_date) = 07 and year(o.order_date)= 2020 then o.quantity*p.price end) >= 100
Select c.customer_id, c.name from Customers c, Product p, Orders o where c.customer_id= o.customer_id and p.product_id= o.product_id group by c.customer_id having ( sum(case when o.order_date like '2020-06%' then o.quantity * p.price else 0 end) >= 100 and sum(case when o.order_date like '2020-07%' then o.quantity * p.price else 0 end) >= 100 )
Select customer_id, name From Orders Inner Join Customers Using(customer_id) Inner Join Product Using(product_id) Group By customer_id Having Sum(Case When Monthname(order_date) = "June" and Year(order_date) = 2020 Then quantity * price Else 0 End) >= 100 And Sum(Case When Monthname(order_date) = "July" and Year(order_date) = 2020 Then quantity * price Else 0 End) >= 100
Select customer_id, name from ( select c.customer_id, c.name, month(o.order_date) as mon from Orders o join customers c on o.customer_id=c.customer_id join product p on o.product_id=p.product_id where month(o.order_date) in (6,7) and year(o.order_date)=2020 group by c.customer_id, month(o.order_date) having sum(o.quantity * p.price ) >= 100 ) X group by customer_id having min(mon) <> max(mon)
Select customer_id,name from customers join orders using(customer_id) join product using(product_id) group by customer_id having sum(if(left(order_date,7)='2020-06',quantity,0)*price)>=100 and sum(if(left(order_date,7)='2020-07',quantity,0)*price)>=100
Select o.customer_id, c.name From Orders o, Product p, Customers c Where o.customer_id=c.customer_id And o.product_id=p.product_id Group By o.customer_id, c.name Having Sum(Case When MONTH(o.order_date) = 6 Then o.quantity*p.price Else 0 End) >= 100 And Sum(Case When MONTH(o.order_date) = 7 Then o.quantity*p.price Else 0 End) >= 100
Select o.customer_id, name From Orders o, Product p, Customers c Where o.product_id = p.product_id and c.customer_id = o.customer_id Group By 1 Having Sum(IF(LEFT(order_date,7) = '2020-06', quantity, 0) * price) >= 100 AND Sum(IF(LEFT(order_date,7) = '2020-07', quantity, 0) * price) >= 100
WITH CTE AS ( SELECT customer_id, DATE_FORMAT(o.order_date, '%Y-%m') AS yr_month FROM Orders o INNER JOIN Product p ON o.product_id = p.product_id WHERE DATE_FORMAT(o.order_date, '%Y-%m') IN ( '2020-06' ,'2020-07' ) GROUP BY o.customer_id, DATE_FORMAT(o.order_date, '%Y-%m') HAVING SUM(o.quantity * p.price) >= 100 ) SELECT cu.customer_id AS customer_id, cu.name AS name FROM Customers cu INNER JOIN CTE c ON cu.customer_id = c.customer_id GROUP BY cu.customer_id HAVING COUNT(DISTINCT yr_month) > 1
WITH CTE AS ( SELECT customer_id, product_id, CASE WHEN DATE_FORMAT(order_date, '%Y-%m') = '2020-06' THEN 'June 2020' WHEN DATE_FORMAT(order_date, '%Y-%m') = '2020-07' THEN 'July 2020' END AS order_month, quantity FROM Orders WHERE DATE_FORMAT(order_date, '%Y-%m') = '2020-06' OR DATE_FORMAT(order_date, '%Y-%m') = '2020-07' ) SELECT a.customer_id, a.name FROM ( SELECT CTE.customer_id, c.name, CTE.order_month FROM Product p JOIN CTE ON p.product_id = CTE.product_id JOIN Customers c ON CTE.customer_id = c.customer_id GROUP BY CTE.customer_id, CTE.order_month HAVING SUM(CTE.quantity * p.price) >= 100) a GROUP BY a.customer_id HAVING COUNT(*) = 2
WITH JuneInvoice AS (SELECT O.customer_id FROM Orders O INNER JOIN Product P ON O.product_id = P.product_id WHERE MONTH(order_date) = 6 AND YEAR(order_date) = 2020 GROUP BY O.customer_id HAVING SUM(P.price*O.quantity) >= 100), JulyInvoice AS (SELECT O.customer_id FROM Orders O INNER JOIN Product P ON O.product_id = P.product_id WHERE MONTH(order_date) = 7 AND YEAR(order_date) = 2020 GROUP BY O.customer_id HAVING SUM(P.price*O.quantity) >= 100) SELECT C.customer_id ,C.name FROM Customers C WHERE C.customer_id IN (SELECT customer_id FROM JuneInvoice) AND C.customer_id IN (SELECT customer_id FROM JulyInvoice)
WITH T1 AS ( SELECT A.CUSTOMER_ID AS CUSTOMER_ID, C.NAME AS NAME, SUM(B.PRICE * A.QUANTITY) AS AMT_TOT, YEAR(A.ORDER_DATE)*100+MONTH(A.ORDER_DATE) AS YM FROM (SELECT * FROM ORDERS WHERE MONTH(ORDER_DATE) IN (6,7)) A LEFT JOIN PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID LEFT JOIN CUSTOMERS C ON A.CUSTOMER_ID = C.CUSTOMER_ID GROUP BY CUSTOMER_ID, YM ), T2 AS ( SELECT CUSTOMER_ID, NAME, SUM(CASE WHEN AMT_TOT >=100 THEN 1 ELSE 0 END) AS CNT FROM T1 GROUP BY CUSTOMER_ID, NAME ) SELECT CUSTOMER_ID, NAME FROM T2 WHERE CNT =2
WITH a AS (SELECT *, sum(Orders.quantity*Product.price) as TOTALs FROM Orders LEFT JOIN Product USING (product_id) GROUP BY customer_id, MONTH(order_date) HAVING (MONTH(order_date) = 6) or (MONTH(order_date) = 7)) SELECT c.customer_id, c.name FROM a LEFT JOIN Customers c USING (customer_id) GROUP BY customer_id HAVING min(TOTALs) >= 100 AND count(*) = 2
WITH a1 AS (SELECT customer_id, o.product_id, SUM(quantity)*price as total, MONTH(order_date) as month FROM Orders as o JOIN Product as p ON o.product_id = p.product_id WHERE YEAR(order_date)=2020 AND (MONTH(order_date)=6 OR MONTH(order_date)=7) GROUP BY customer_id, o.product_id, MONTH(order_date)) SELECT c.customer_id, name FROM Customers AS c JOIN (SELECT customer_id FROM (SELECT customer_id, COUNT(*) as n_months FROM (SELECT customer_id, SUM(total) as monthly_total, month FROM a1 GROUP BY customer_id, month HAVING SUM(total) >= 100) a2 GROUP BY customer_id) a3 WHERE n_months=2) a4 ON c.customer_id=a4.customer_id
WITH base AS ( SELECT DATE_FORMAT(order_date, "%Y-%m") AS month, customer_id, name, SUM(quantity * price) AS total FROM Orders INNER JOIN Product USING (product_id) INNER JOIN Customers USING (customer_id) WHERE DATE_FORMAT(order_date, "%Y-%m") BETWEEN"2020-06" AND "2020-07" GROUP BY 1,2,3 ) SELECT customer_id, name FROM base WHERE total >= 100 GROUP BY 1,2 HAVING COUNT(DISTINCT month) = 2
WITH cte AS ( SELECT a.customer_id, a.name, SUM(CASE WHEN LEFT(b.order_date, 7) = '2020-06' THEN c.price * b.quantity ELSE 0 END) AS June_spend, SUM(CASE WHEN LEFT(b.order_date, 7) = '2020-07' THEN c.price * b.quantity ELSE 0 END) AS July_spend FROM Customers a JOIN Orders b ON a.customer_id = b.customer_id JOIN Product c ON b.product_id = c.product_id GROUP BY a.customer_id) SELECT customer_id, name FROM cte WHERE June_spend >= 100 AND July_spend >= 100
WITH cte AS ( SELECT o.customer_id, SUM(CASE WHEN MONTH(o.order_date) = 06 THEN o.quantity*p.price END) AS 'June', SUM(CASE WHEN MONTH(o.order_date) = 07 THEN o.quantity*p.price END) AS 'July' FROM Orders o INNER JOIN Product p ON p.product_id = o.product_id GROUP BY 1 ORDER BY 1 ) SELECT cte.customer_id, c.name FROM cte INNER JOIN Customers c ON cte.customer_id = c.customer_id AND cte.June >= 100 AND cte.July >= 100 ORDER BY 1
WITH cte AS ( SELECT o.customer_id, c.name, SUM(IF(MONTH(o.order_date) = 6, o.quantity * p.price, NULL)) AS 'June', SUM(IF(MONTH(o.order_date) = 7, o.quantity * p.price, NULL)) AS 'July' FROM Orders o INNER JOIN Product p ON p.product_id = o.product_id INNER JOIN Customers c ON c.customer_id = o.customer_id GROUP BY o.customer_id ORDER BY 1 ) SELECT cte.customer_id, cte.name FROM cte WHERE cte.June >= 100 AND cte.July >= 100 ORDER BY 1,2
WITH cte AS( Select o.order_id, o.customer_id,c.name, o.product_id, o.order_date, o.quantity, p.price, o.quantity*p.price as tot from orders o join customers c on o.customer_id = c.customer_id join product p on o.product_id = p.product_id WHERE order_date between '2020-06-01' and '2020-07-31') Select customer_id, name from ( Select customer_id, name, SUM(CASE WHEN month(order_date)=6 THEN tot ELSE 0 END) as june, SUM(CASE WHEN month(order_date)=7 THEN tot ELSE 0 END) as july from cte group by customer_id ) temp where june >= 100 and july >= 100
WITH cte AS(SELECT o.customer_id, c.name, (CASE WHEN SUM(p.price*o.quantity) >= 100 THEN 1 ELSE 0 END) AS b, MONTH(order_date) FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id LEFT JOIN Product p ON o.product_id = p.product_id WHERE MONTH(order_date) IN ('7', '6') GROUP BY o.customer_id, MONTH(order_date)) SELECT customer_id, name FROM cte GROUP BY name HAVING SUM(b) = 2
WITH cte1 AS (SELECT o.customer_id, c.name, order_date, SUM(price * quantity) AS 'spent' FROM Orders o JOIN Product p ON o.product_id = p.product_id JOIN Customers c ON c.customer_id = o.customer_id GROUP BY 1, MONTH(order_date) ORDER BY 1), cte2 AS ((SELECT cte1.customer_id, cte1.name, cte1.spent FROM cte1 WHERE MONTH(cte1.order_date) = 6 AND cte1.spent >= 100) UNION ALL (SELECT cte1.customer_id, cte1.name, cte1.spent FROM cte1 WHERE MONTH(cte1.order_date) = 7 AND cte1.spent >= 100)) SELECT cte2.customer_id, cte2.name FROM cte2 GROUP BY cte2.customer_id HAVING COUNT(cte2.customer_id) = 2
WITH cte_o AS ( SELECT * FROM Orders WHERE YEAR(order_date) = 2020 AND MONTH(order_date) IN (06, 07) ), cte_table AS ( SELECT customer_id, MONTH(order_date) AS month, SUM(quantity * price) AS total FROM cte_o AS o LEFT JOIN Product p ON o.product_id = p.product_id GROUP BY customer_id, MONTH(order_date) HAVING total >= 100 ) SELECT c.customer_id, c.name FROM Customers c LEFT JOIN cte_table cte ON c.customer_id = cte.customer_id GROUP BY c.customer_id HAVING COUNT(c.customer_id) = 2
WITH groupby_and_add_2_month_columns AS( SELECT SUM(IF(DATE_FORMAT(Orders.order_date, "%Y-%m") = "2020-06", quantity, 0) * Product.price) AS June_spent, SUM(IF(DATE_FORMAT(Orders.order_date, "%Y-%m") = "2020-07", quantity, 0) * Product.price) AS July_spent, Customers.customer_id, Customers.name FROM Orders INNER JOIN Product ON Orders.product_id = Product.product_id INNER JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY customer_id ) SELECT customer_id, name FROM groupby_and_add_2_month_columns WHERE June_spent >= 100 AND July_spent >= 100
WITH june_sales AS ( SELECT c.customer_id, c.name, SUM(o.quantity * p.price) AS totals FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-06-01' AND '2020-06-30' GROUP BY 1, 2 ), july_sales AS ( SELECT c.customer_id, c.name, SUM(o.quantity * p.price) AS totals FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-07-01' AND '2020-07-31' GROUP BY 1, 2 ) SELECT DISTINCT june_sales.customer_id, june_sales.name FROM june_sales JOIN july_sales ON june_sales.customer_id = july_sales.customer_id AND june_sales.name = july_sales.name WHERE june_sales.totals >= 100 AND july_sales.totals >= 100
WITH m6 AS ( SELECT customer_id, SUM(quantity * price) AS spent, month(order_date) AS order_month FROM orders o LEFT JOIN product p ON o.product_id = p.product_id WHERE month(order_date) = 6 GROUP BY customer_id, order_month ), m7 AS ( SELECT customer_id, SUM(quantity * price) AS spent, month(order_date) AS order_month FROM orders o LEFT JOIN product p ON o.product_id = p.product_id WHERE month(order_date) = 7 GROUP BY customer_id, order_month ) SELECT customer_id,name FROM customers WHERE customer_id IN (SELECT customer_id FROM m6 WHERE spent >= 100) AND customer_id IN (SELECT customer_id FROM m7 WHERE spent >= 100)
WITH ord_prd AS ( SELECT customer_id, MONTH(order_date) month, SUM(price * quantity) total FROM Orders ord JOIN Product prd ON ord.product_id = prd.product_id GROUP BY customer_id, YEAR(order_date), MONTH(order_date) ), june AS ( SELECT customer_id FROM ord_prd WHERE month = 6 AND total >= 100 ), july AS ( SELECT customer_id FROM ord_prd WHERE month = 7 AND total >= 100 ) SELECT Customers.customer_id CUSTOMER_ID, name NAME FROM Customers JOIN june ON Customers.customer_id = june.customer_id JOIN july ON Customers.customer_id = july.customer_id
WITH qualifying_orders_june AS (SELECT o.customer_id, SUM(p.price*o.quantity) AS order_total FROM Orders o INNER JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-06-01' AND '2020-06-30' GROUP BY o.customer_id HAVING order_total >= 100), qualifying_orders_july AS (SELECT o.customer_id, SUM(p.price*o.quantity) AS order_total FROM Orders o INNER JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-07-01' AND '2020-07-31' GROUP BY o.customer_id HAVING order_total >= 100) SELECT c.customer_id, c.name FROM Customers c WHERE c.customer_id IN (SELECT customer_id FROM qualifying_orders_june) AND c.customer_id iN (SELECT customer_id FROM qualifying_orders_july)
WITH r AS ( SELECT c.customer_id, c.name, MONTH(o.order_date) as month, SUM(p.price * o.quantity) AS total_sum FROM customers as c JOIN orders as o ON o.customer_id = c.customer_id JOIN product as p ON p.product_id = o.product_id GROUP BY c.customer_id, MONTH(o.order_date) HAVING total_sum >= 100 AND month IN (6, 7) ) SELECT customer_id, name FROM r GROUP BY customer_id, name HAVING COUNT(*) >= 2
WITH r AS ( SELECT c.customer_id, c.name, MONTH(o.order_date) as month, SUM(p.price * o.quantity) AS total_sum FROM customers as c JOIN orders as o ON o.customer_id = c.customer_id JOIN product as p ON p.product_id = o.product_id GROUP BY c.customer_id, MONTH(o.order_date) HAVING total_sum >= 100 and month in (6, 7) ) SELECT customer_id, name FROM r GROUP BY customer_id, name HAVING count(*) >= 2
WITH res AS ( SELECT customer_id, SUBSTR(o.order_date,1,7) AS order_month, SUM(p.price*o.quantity) AS total_price FROM Orders o JOIN Product p ON o.product_id = p.product_id WHERE SUBSTR(o.order_date,1,7) IN ('2020-06','2020-07') GROUP BY 1,2 ) SELECT r.customer_id, c.name FROM res r JOIN customers c ON r.customer_id = c.customer_id GROUP BY 1,2 HAVING SUM(CASE WHEN r.order_month = '2020-06' AND r.total_price >= 100 THEN 1 ELSE 0 END ) = 1 AND SUM(CASE WHEN r.order_month = '2020-07' AND r.total_price >= 100 THEN 1 ELSE 0 END ) = 1
WITH t AS ( SELECT Orders.customer_id, Customers.name, order_date,SUM(price*quantity) as total FROM Orders LEFT JOIN Product ON Orders.product_id = Product.product_id LEFT JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE (SUBSTRING(order_date,1,7) = '2020-06' OR SUBSTRING(order_date,1,7) = '2020-07') GROUP BY customer_id,SUBSTRING(order_date,1,7) ) SELECT customer_id, name FROM t WHERE total >= 100 GROUP BY 1 HAVING COUNT(*) = 2
WITH t AS ( SELECT o.customer_id, LEFT(order_date, 7) AS month FROM orders o JOIN product p ON o.product_id = p.product_id WHERE LEFT(o.order_date, 7) IN ('2020-06', '2020-07') GROUP BY o.customer_id, month HAVING SUM(p.price * o.quantity) >= 100 ) SELECT c.customer_id, c.name FROM t JOIN customers c ON t.customer_id = c.customer_id GROUP BY t.customer_id HAVING COUNT(month) = 2
WITH t AS( SELECT o.customer_id, c.name, DATE_FORMAT(o.order_date, "%Y-%m") AS order_date, SUM(o.quantity*p.price) AS sales FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-06-01' AND '2020-07-31' GROUP BY o.customer_id, DATE_FORMAT(o.order_date, "%Y-%m") ) SELECT CUSTOMER_ID, NAME FROM T where sales >=100 group by customer_id having count(*) =2
WITH t AS( SELECT o.customer_id, c.name, DATE_FORMAT(o.order_date, "%Y-%m") AS order_date, SUM(o.quantity*p.price) AS sales FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-06-01' AND '2020-07-31' GROUP BY o.customer_id, DATE_FORMAT(o.order_date, "%Y-%m") ) SELECT DISTINCT CUSTOMER_ID, NAME FROM T where sales >=100 group by customer_id having count(*) >1
WITH t AS( SELECT o.customer_id, c.name, DATE_FORMAT(o.order_date, "%Y-%m") AS order_date, SUM(o.quantity*p.price) AS sales FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id JOIN Product p ON o.product_id = p.product_id WHERE o.order_date BETWEEN '2020-06-01' AND '2020-07-31' GROUP BY o.customer_id, DATE_FORMAT(o.order_date, "%Y-%m") ) SELECT customer_id, name FROM t GROUP BY customer_id, name HAVING SUM(sales >= 100) = 2
WITH t0 AS( SELECT o.customer_id, o.order_date, (o.quantity*p.price) AS 'total' FROM Orders o LEFT JOIN Product p ON o.product_id = p.product_id ), t1 AS ( SELECT customer_id, COUNT(customer_id) AS 'cnt' FROM (SELECT customer_id, SUM(total) AS 'monthly', MONTH(order_date) AS 'month' FROM t0 WHERE (MONTH(order_date) = '6' OR MONTH(order_date) = '7') GROUP BY customer_id, MONTH(order_date))A WHERE A.monthly >= 100 GROUP BY customer_id ) SELECT t.customer_id, c.name FROM t1 t JOIN Customers c ON c.customer_id = t.customer_id WHERE t.cnt >= 2
WITH t1 as ( SELECT p.price, o.customer_id, o.order_date, o.quantity, (p.price * o.quantity) as total_price, YEAR(o.order_date) as year, MONTH(o.order_date) as month FROM orders o LEFT JOIN product p ON p.product_id = o.product_id WHERE ((MONTH(o.order_date) = 6) | (MONTH(o.order_date) = 7)) AND (YEAR(o.order_date) = 2020)), t2 as ( SELECT customer_id, month, SUM(total_price) as customer_monthly_spend FROM t1 GROUP BY customer_id, month HAVING (customer_monthly_spend >= 100)) SELECT t2.customer_id as customer_id, c.name as name FROM t2 LEFT JOIN customers c ON t2.customer_id = c.customer_id GROUP BY customer_id HAVING COUNT(*) > 1
WITH tb1 AS (SELECT o.customer_id, EXTRACT(YEAR_MONTH FROM order_date) AS order_month, SUM(price * quantity) AS total FROM Orders o LEFT JOIN Product p ON o.product_id = p.product_id GROUP BY o.customer_id, EXTRACT(YEAR_MONTH FROM order_date) HAVING order_month in (202006, 202007)), JUN AS (SELECT customer_id FROM tb1 WHERE order_month = 202006 AND total >= 100), JUL AS (SELECT customer_id FROM tb1 WHERE order_month = 202007 AND total >= 100) SELECT JUN.customer_id, c.name FROM JUN INNER JOIN JUL ON JUN.customer_id = JUL.customer_id JOIN Customers c ON JUN.customer_id = c.customer_id
WITH tbl AS ( SELECT c.customer_id , c.name , DATE_FORMAT(order_date,'%Y-%m') FROM Orders o LEFT JOIN Product p ON o.product_id=p.product_id LEFT JOIN Customers c ON c.customer_id=o.customer_id WHERE DATE_FORMAT(order_date,'%Y-%m') IN ('2020-06','2020-07') GROUP BY c.customer_id, c.name, DATE_FORMAT(order_date,'%Y-%m') HAVING SUM(o.quantity*p.price)>=100) SELECT customer_id , name FROM tbl GROUP BY 1,2 HAVING COUNT(name)>1
WITH temp AS ( SELECT c.customer_id, c.name, EXTRACT(MONTH FROM order_date) AS month, CASE WHEN (SUM(o.quantity * p.price) >= 100) THEN 1 ELSE 0 END AS monthly_spent_100 FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id LEFT JOIN Product p ON o.product_id = p.product_id WHERE order_date BETWEEN '2020-06-02' AND '2020-07-31' GROUP BY c.customer_id, c.name, month ) SELECT customer_id, name FROM temp GROUP BY customer_id, name HAVING SUM(monthly_spent_100) = 2
WITH temp AS ( SELECT customer_id, name, SUM(price * quantity) AS spend, LEFT(order_date, 7) AS month FROM orders JOIN customers USING(customer_id) JOIN product USING(product_id) GROUP BY orders.customer_id, LEFT(order_date, 7)) SELECT DISTINCT customer_id, name FROM temp WHERE customer_id IN (SELECT customer_id FROM temp WHERE spend >= 100 AND month = '2020-06') AND customer_id IN (SELECT customer_id FROM temp WHERE spend >= 100 AND month = '2020-07')
WITH temp AS ( SELECT o.customer_id, DATE_FORMAT(o.order_date, "%Y-%m"), SUM(o.quantity * p.price) AS total FROM Orders o JOIN Product p ON o.product_id = p.product_id WHERE MONTH(o.order_date) = 6 OR MONTH(o.order_date) = 7 GROUP BY customer_id, DATE_FORMAT(o.order_date, "%Y-%m") HAVING total >= 100 ) SELECT t.customer_id, c.name FROM temp t JOIN Customers c ON t.customer_id = c.customer_id GROUP BY t.customer_id HAVING COUNT(*) = 2
WITH temp AS ( SELECT o.customer_id, c.name, DATE_FORMAT(o.order_date, "%Y-%m") AS ym, SUM(p.price * o.quantity) AS total_spent FROM Orders o JOIN Product p ON o.product_id = p.product_id JOIN Customers c ON o.customer_id = c.customer_id WHERE DATE_FORMAT(o.order_date, "%Y-%m") IN ('2020-06', '2020-07') GROUP BY customer_id, name, ym ), temp2 AS ( SELECT customer_id, name, SUM( CASE WHEN total_spent >= 100 THEN 1 ELSE 0 END ) AS cnt FROM temp GROUP BY customer_id, name ) SELECT customer_id, name FROM temp2 WHERE cnt >= 2
WITH temp0 AS ( SELECT O.customer_id, DATE_FORMAT(order_date, '%Y-%m') AS order_month, quantity * price AS total_price FROM Orders O INNER JOIN Product P ON O.product_id = P.product_id HAVING order_month = '2020-06' OR '2020-07' ), junecustomer AS ( SELECT customer_id, SUM(total_price) AS total_price FROM temp0 WHERE order_month = '2020-06' GROUP BY customer_id HAVING total_price >= 100 ), julycustomer AS ( SELECT customer_id, SUM(total_price) AS total_price FROM temp0 WHERE order_month = '2020-07' GROUP BY customer_id HAVING total_price >= 100 ), customersraw AS ( SELECT J.customer_id FROM junecustomer J INNER JOIN julycustomer L ON J.customer_id = L.customer_id ), final AS ( SELECT Customers.customer_id AS CUSTOMER_ID, Customers.name AS NAME FROM Customers INNER JOIN customersraw ON Customers.customer_id = customersraw.customer_id ) SELECT * FROM final
WITH tmp AS ( SELECT ina.customer_id, SUM(CASE WHEN LEFT(ina.order_date, 7)='2020-06' THEN ina.quantity * inb.price ELSE 0 END) AS june, SUM(CASE WHEN LEFT(ina.order_date, 7)='2020-07' THEN ina.quantity * inb.price ELSE 0 END) AS july FROM Orders AS ina, Product AS inb WHERE ina.product_id = inb.product_id GROUP BY ina.customer_id ) SELECT ina.customer_id, ina.name FROM Customers AS ina, tmp AS inb WHERE ina.customer_id = inb.customer_id AND june >= 100 AND july >= 100
WITH totals_per_customer AS ( SELECT C.customer_id, C.name, DATE_FORMAT(order_date, '%Y%m') AS month, SUM(quantity*price) AS total_spent FROM Customers C JOIN Orders O ON C.customer_id = O.customer_id JOIN Product P ON O.product_id = P.product_id WHERE order_date >= '2020-06-01' AND order_date <= '2020-07-31' GROUP BY 1, 2, 3 HAVING total_spent >= 100 ) SELECT customer_id, name FROM totals_per_customer GROUP BY 1, 2 HAVING COUNT(1) >= 2
With cte as ( Select c.customer_id, c.name, sum(o.quantity * p.price) as price, month(order_date) as order_month from Customers c inner join Orders o on c.customer_id = o.customer_id inner join Product p on p.product_id = o.product_id where year(order_date) = 2020 group by c.customer_id, month(order_date)) Select distinct(customer_id), name from cte where price >= 100 and order_month = 7 and customer_id in (Select customer_id from cte where order_month = 6 and price >= 100)
select C.customer_id, C.name from Customers C LEFT JOIN (select O.customer_id, left(O.order_date,7) as D from Orders O LEFT JOIN Product P ON P.product_id = O.product_id where O.order_date like '2020-06%' or O.order_date like '2020-07%' group by 1,2 having sum(P.price*O.quantity)>=100) T ON C.customer_id = T.customer_id group by 1 having count(T.D)=2
select C.customer_id, C.name from Customers C left join (select O.customer_id, left(O.order_date,7) as dates from Orders O left join Product P ON O.product_id = P.product_id where O.order_date like '2020-06%' or O.order_date like '2020-07%' group by 1,2 having sum(Price*O.quantity)>=100) as T ON C.customer_id = T.customer_id group by 1 having count(dates)=2
select C.customer_id, C.name from Customers C, Product P, Orders O where O.product_id = P.product_id and O.customer_id = C.customer_id group by C.customer_id HAVING SUM(IF(LEFT(O.order_date, 7) = '2020-06', O.quantity, 0) * P.price) >= 100 AND SUM(IF(LEFT(O.order_date, 7) = '2020-07', O.quantity, 0) * P.price) >= 100
select CO.customer_id, CO.name from (select cust.customer_id, O.order_date, cust.name, O.product_id, O.quantity from Customers cust, Orders O where cust.customer_id=O.customer_id) CO inner join product p on p.product_id = CO.product_id group by CO.customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
select Spent.customer_id, c.name from (With July as (select o.customer_id, sum(o.quantity * p.price) as July_spent from Orders o join Product p on p.product_id = o.product_id where order_date < "2020-08-01" and order_date >= "2020-07-01" group by customer_id) select j.customer_id, j.July_spent, June.June_spent from July j join (select o.customer_id, sum(o.quantity * p.price) as June_spent from Orders o join Product p on p.product_id = o.product_id where order_date < "2020-07-01" and order_date >= "2020-06-01" group by customer_id) June on j.customer_id = June.customer_id group by j.customer_id) Spent join Customers c on Spent.customer_id = c.customer_id Where Spent.July_spent >= 100 and Spent.June_spent >= 100
select T.customer_id, c.name from (select customer_id, year(order_date) as y_date, month(order_date) as m_date, sum(quantity*price) as spent from orders o, Product p where o.product_id=p.product_id and year(order_date)='2020' and (month(order_date)='6' or month(order_date)='7') group by 1, 2, 3 having sum(quantity*price) >= 100)T, customers c where T.customer_id=c.customer_id group by T.customer_id having count(T.customer_id )=2
select T.customer_id, name from ( select O.customer_id, sum(O.quantity* P.price) as Amt_spent from Orders O join Product P on O.product_id = P.product_id where extract(month from O.order_date) in (6,7) group by customer_id, extract(month from O.order_date) having sum(O.quantity* P.price) >= 100 ) t join Customers C on T.customer_id = C.customer_id group by T.customer_id having count(*) = 2
select a.customer_id ,c.name from orders a join product b on a.product_id = b.product_id join customers c on a.customer_id = c.customer_id group by customer_id having sum(case when month(order_date) = 6 then b.price*a.quantity else 0 end) >= 100 and sum(case when month(order_date) = 7 then b.price*a.quantity else 0 end) >= 100
select a.customer_id as customer_id, a.name as name from customers a join product b left join orders c on a.customer_id=c.customer_id and b.product_id=c.product_id group by a.customer_id having sum( if(c.order_date between '2020-06-01' and '2020-06-30',c.quantity,0)*b.price)>=100 and sum( if (c.order_date between '2020-07-01' and '2020-07-31',c.quantity,0)*b.price)>=100
select a.customer_id as customer_id, a.name as name from orders c join customers a left join product b on c.customer_id=a.customer_id and c.product_id=b.product_id group by a.customer_id having sum( if( c.order_date between "2020-06-01" and "2020-06-30",c.quantity,0)*b.price)>=100 and sum( if( c.order_date between "2020-07-01" and "2020-07-31",c.quantity,0)*b.price)>=100
select a.customer_id, a.name from ( select c.customer_id, c.name, EXTRACT(YEAR_MONTH FROM order_date), sum(quantity*price) from customers c inner join orders o on (c.customer_id=o.customer_id) inner join Product p on (p.product_id=o.product_id) where EXTRACT(YEAR_MONTH FROM order_date) in (202006, 202007) group by c.customer_id, c.name, EXTRACT(YEAR_MONTH FROM order_date) having sum(quantity*price)>=100 ) a group by a.customer_id, a.name having count(1)>1
select a.customer_id, a.name from customers a join product b join orders c on a.customer_id = c.customer_id and b.product_id = c.product_id where c.order_date between '2020-06-01' and '2020-07-31' group by a.customer_id, a.name having sum(case when c.order_date between '2020-06-01' and '2020-06-30' then c.quantity*b.price else 0 end) >= 100 and sum(case when c.order_date between '2020-07-01' and '2020-07-31' then c.quantity*b.price else 0 end) >= 100
select a.customer_id, a.name from customers a join product b left join orders c on a.customer_id=c.customer_id and b.product_id=c.product_id group by a.customer_id having sum( if(c.order_date between '2020-06-01' and '2020-06-30',c.quantity,0)*b.price)>=100 and sum( if(c.order_date between '2020-07-01' and '2020-07-31',c.quantity,0)*b.price)>=100
select a.customer_id, b.name from (select e.customer_id from (select distinct customer_id from (select customer_id,sum(quantity*price) as total from (select a.customer_id,a.product_id,a.quantity,b.price from (select *,month(order_date) as month_1 from Orders where year(order_date)=2020 and month(order_date)=6 ) a left join Product b on a.product_id=b.product_id)c group by customer_id having total>=100)d)e inner join (select distinct customer_id from (select customer_id,sum(quantity*price) as total from (select a.customer_id,a.product_id,a.quantity,b.price from (select *,month(order_date) as month_1 from Orders where year(order_date)=2020 and month(order_date)=7 ) a left join Product b on a.product_id=b.product_id)c group by customer_id having total>=100)d)e1 on e.customer_id=e1.customer_id)a left join Customers b on a.customer_id=b.customer_id
select b.customer_id, name from (select customer_id, sum(case when month(order_date)=6 then ct else null end) as june , sum(case when month(order_date)=7 then ct else null end) as july from (select order_id, customer_id, orders.product_id, order_date, quantity* price as ct from orders left join product on orders.product_id=product.product_id) a group by customer_id) b, customers where b.customer_id=customers.customer_id and june>=100 and july>=100
select c.customer_id CUSTOMER_ID, c.name NAME from Customers c, Product p, Orders o where c.customer_id = o.customer_id and p.product_id = o.product_id and o.order_date between '2020-06-01' and '2020-06-30' and c.customer_id IN ( select c1.customer_id from Customers c1, Product p1, Orders o1 where c1.customer_id = o1.customer_id and p1.product_id = o1.product_id and o1.order_date between '2020-07-01' and '2020-07-31' group by c1.customer_id having sum(o1.quantity * p1.price) >= 100 ) group by c.customer_id having sum(o.quantity * p.price) >= 100
select c.customer_id as CUSTOMER_ID ,c.name AS NAME from customers c join ( select o.customer_id ,month(order_date) as months , sum(p.price*o.quantity) as tot , 1 as counts from Orders o join Product p on o.product_id = p.product_id where month(order_date) in (6,7) group by 1,2 having sum(p.price*o.quantity)>=100 order by months ) t1 on c.customer_id = t1.customer_id group by 1,2 having sum(counts)=2
select c.customer_id as CUSTOMER_ID,c.name as NAME from ( select a.customer_id,month(a.order_date) as mon from Orders a join Product b on a.product_id=b.product_id where a.order_date between '2020-06-01' and '2020-07-31' group by a.customer_id,month(a.order_date) having sum(quantity*price)>=100 )c1 join Customers c on c1.customer_id=c.customer_id group by c1.customer_id having count(*)=2
select c.customer_id as customer_id, c.name as name from customers c inner join ( select o.customer_id as customer_id, left(order_date, 7) as month, sum(o.quantity * p.price) as amount from orders o inner join product p on o.product_id = p.product_id where order_date between '2020-06-01' and '2020-07-31' group by o.customer_id, month ) as tab on c.customer_id = tab.customer_id where tab.amount >= 100 group by c.customer_id having count(*) = 2
select c.customer_id, c.name from ( select o.customer_id as id, Month(o.order_date) as mon, sum(o.quantity * p.price) as total from Orders o left join Product p on o.product_id = p.product_id group by o.customer_id, Month(o.order_date) having (mon = 6 &amp;&amp; total >= 100) or (mon = 7 &amp;&amp; total >= 100) ) t left join Customers c on c.customer_id = t.id group by t.id having count(t.total) = 2
select c.customer_id, c.name from ( select t.customer_id from ( select o.customer_id, substr(order_date,1,7) as month, sum(p.price * o.quantity) as Spend from Orders o JOIN Product p ON o.product_id = p.product_id and (substr(o.order_date, 1, 7) = '2020-06' OR substr(o.order_date, 1, 7) = '2020-07') group by month, customer_id ) t where Spend >=100 group by customer_id having count(t.customer_id) > 1 ) cc JOIN Customers c ON c.customer_id = cc.customer_id
select c.customer_id, c.name from (select customer_id, month(order_date) month, sum(p.price * o.quantity) total from Orders o inner join Product p on o.product_id = p.product_id group by customer_id, month having month = 6 or month = 7) temp, Customers c where c.customer_id = temp.customer_id and temp.total >= 100 group by c.name having count(*) = 2
select c.customer_id, c.name from (select o.customer_id, sum(case when left(order_date, 7) = '2020-06' then p.price*o.quantity else 0 end) as s1, sum(case when left(order_date, 7) = '2020-07' then p.price*o.quantity else 0 end) as s2 from Product p join Orders o using (product_id) group by 1) temp join Customers c using (customer_id) where s1 >= 100 and s2 >= 100
select c.customer_id, c.name from Customers as c inner join orders as o on o.customer_id = c.customer_id inner join product as p on p.product_id = o.product_id group by c.customer_id having SUM( if(LEFT(o.order_date,7)='2020-06',p.price,0)*o.quantity)>=100 AND SUM( if(LEFT(o.order_date,7)='2020-07',p.price,0)*o.quantity)>=100
select c.customer_id, c.name from Customers as c join ( select o.customer_id, sum(case when month(o.order_date) = 6 then p.price*o.quantity else Null end) as june, sum(case when month(o.order_date) = 7 then p.price*o.quantity else Null end) as july from Product as p right join Orders as o on p.product_id = o.product_id group by o.customer_id ) as temp on c.customer_id = temp.customer_id where temp.june >= 100 and temp.july >= 100
select c.customer_id, c.name from Customers c inner join Orders o on o.customer_id = c.customer_id inner join Product p on p.product_id = o.product_id group by 1,2 having sum(case when substring(order_date, 1, 7) = '2020-06' then quantity * price end) >= 100 and sum(case when substring(order_date, 1, 7) = '2020-07' then quantity * price end) >= 100
select c.customer_id, c.name from Customers c join ( select customer_id, left(order_date, 7) as `spent_month`, sum(o.quantity * p.price) as `total_spent` from Orders o join Product p on p.product_id = o.product_id where left(order_date, 7) = '2020-06' or left(order_date, 7) = '2020-07' group by customer_id, left(order_date, 7) having sum(o.quantity * p.price) >= 100 ) t on t.customer_id = c.customer_id group by t.customer_id having count(*) = 2
select c.customer_id, c.name from Customers c join ( select o.customer_id, sum(case when date_format(order_date,'%m')='07'then (quantity * price) end) sum7, sum(case when date_format(order_date,'%m')='06' then (quantity * price) end) sum6 from Orders o join Product p on o.product_id = p.product_id group by o.customer_id having sum7 >= 100 and sum6 >=100)cte on cte.customer_id = c.customer_id
select c.customer_id, c.name from Customers c join (select customer_id from Orders o join Product p on p.product_id=o.product_id where left(order_date,7) = '2020-06' group by customer_id having sum(p.price*o.quantity)>=100)t1 on c.customer_id=t1.customer_id join (select customer_id from Orders o join Product p on p.product_id=o.product_id where left(order_date,7) = '2020-07' group by customer_id having sum(p.price*o.quantity)>=100)t2 on c.customer_id=t2.customer_id
select c.customer_id, c.name from Customers c join (select customer_id, sum(case when MONTH(order_date) = '06' then quantity*p.price end) as m6, sum(case when MONTH(order_date) = '07' then quantity*p.price end) as m7 from Orders o join Product p on (o.product_id = p.product_id) group by customer_id having m6 >= 100 and m7 >= 100) x on (c.customer_id = x.customer_id)
select c.customer_id, c.name from Customers c join (select o.customer_id as customer_id, sum(case when month(o.order_date) = 6 then p.price*o.quantity end) as sm6, sum(case when month(o.order_date) = 7 then p.price * o.quantity end) as sm7 from Orders o left join Product p on o.product_id = p.product_id group by customer_id having sm6 >= 100 and sm7 >= 100) t on c.customer_id = t.customer_id
select c.customer_id, c.name from Customers c join Orders O join Product P on c.customer_id = O.customer_id and O.product_id = P.product_id group by c.customer_id having sum(if(left(order_date, 7) = '2020-06', quantity,0) * price) >=100 and sum(if(left(order_date, 7) = '2020-07', quantity,0) * price) >=100
select c.customer_id, c.name from Customers c join Orders o on c.customer_id = o.customer_id join Product p on o.product_id = p.product_id group by customer_id having sum(if(date_format(order_date,"%Y-%m") = '2020-06', quantity, 0) * price) >= 100 and sum(if(date_format(order_date,"%Y-%m") = '2020-07', quantity, 0) * price) >= 100
select c.customer_id, c.name from Customers c join Orders o using(customer_id) join Product p using(product_id) group by c.customer_id having sum(if(left(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 and sum(if(left(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
select c.customer_id, c.name from Customers c join Product p join Orders o on c.customer_id = o.customer_id and p.product_id = o.product_id group by o.customer_id HAVING SUM(IF(month(o.order_date) = '06', o.quantity, 0) * p.price) >= 100 AND SUM(IF(month(o.order_date) = '07', o.quantity, 0) * p.price) >= 100
select c.customer_id, c.name from Customers c where customer_id in( select customer_id from Orders o join Product p on o.product_id=p.product_id where year(o.order_date)=2020 and month(o.order_date)=6 group by customer_id having sum(o.quantity*p.price) >= 100 ) and customer_id in ( select customer_id from Orders o join Product p on o.product_id=p.product_id where year(o.order_date)=2020 and month(o.order_date)=7 group by customer_id having sum(o.quantity*p.price) >= 100 )
select c.customer_id, c.name from Customers c, ( select o.customer_id, sum(if(month(o.order_date) = 6, o.quantity, 0) * p.price) as jun_cost, sum(if(month(o.order_date) = 7, o.quantity, 0) * p.price) as jul_cost from orders o left join product p on o.product_id = p.product_id group by o.customer_id ) b where b.jun_cost >= 100 and b.jul_cost >= 100 and c.customer_id = b.customer_id
select c.customer_id, c.name from Orders as o join Product as p on o.product_id = p.product_id join Customers as c on o.customer_id = c.customer_id group by o.customer_id having sum((case when substring(order_date, 1, 7) = '2020-06' then quantity else 0 end) * price) >= 100 and sum((case when substring(order_date, 1, 7) = '2020-07' then quantity else 0 end) * price) >= 100
select c.customer_id, c.name from customers as c inner join (select o.customer_id, o.order_date, sum(o.quantity*p.price) as total from orders as o inner join product as p on o.product_id = p.product_id group by o.customer_id, month(o.order_date) having total >= 100 and (month(o.order_date) = 6 or month(o.order_date) = 7)) as newtable on c.customer_id = newtable.customer_id group by c.customer_id having count(c.customer_id) > 1
select c.customer_id, c.name from customers c inner join ( select customer_id, sum( case when date_format(order_date,'%m')='06' then p.price * quantity end ) june, sum( case when date_format(order_date,'%m')='07' then p.price * quantity end ) july from orders o inner join product p on p.product_id=o.product_id group by customer_id having june >= 100 and july >= 100 ) t on c.customer_id = t.customer_id
select c.customer_id, c.name from customers c inner join ( select customer_id, sum( case when date_format(order_date,'%m')='06' then p.price * quantity end ) sm06, sum( case when date_format(order_date,'%m')='07' then p.price * quantity end ) sm07 from orders o inner join product p on p.product_id=o.product_id group by customer_id having sm06 >= 100 and sm07 >= 100 ) t on c.customer_id = t.customer_id
select c.customer_id, c.name from customers c join ( select customer_id, sum(tot) as tot2 from ( select customer_id, ym, total, sum(case when total>=100 then 1 else 0 end) as tot from ( select customer_id, DATE_FORMAT(order_date,'%Y%m') as ym, sum(price*quantity) as total from orders o join product p on o.product_id = p.product_id where DATE_FORMAT(order_date,'%Y%m') in ('202006','202007') group by customer_id, DATE_FORMAT(order_date,'%Y%m') ) r group by customer_id, ym ) t group by customer_id having sum(tot)>1 ) sub on c.customer_id = sub.customer_id
select c.customer_id, c.name from customers c join orders o using (customer_id) join product p using (product_id) group by customer_id HAVING SUM(IF(month(order_date) = '06', quantity, 0) * price) >= 100 AND SUM(IF(month(order_date) = '07', quantity, 0) * price) >= 100
select c.customer_id, c.name from customers c where c.customer_id in ( select customer_id from ( select o.customer_id, substring(order_date, 1, 7) as month from product p right join orders o using (product_id) where substring(order_date, 1, 7) = '2020-06' or substring(order_date, 1, 7) = '2020-07' group by o.customer_id, substring(order_date, 1, 7) having sum(p.price*o.quantity) >= 100 ) as cm group by customer_id having count(*)=2 )
select c.customer_id, c.name from orders as o left join customers as c on o.customer_id = c.customer_id left join product as p on o.product_id = p.product_id group by o.customer_id having ( sum( case when o.order_date between '2020-06-01' and '2020-06-30' then p.price * o.quantity else 0 end ) >= 100 and sum( case when o.order_date between '2020-07-01' and '2020-07-31' then p.price * o.quantity else 0 end ) >= 100 )
select c.customer_id, c.name from( select customer_id, sum(case when extract(month from order_date) = 6 then price*quantity else 0 end) june_sales, sum(case when extract(month from order_date) = 7 then price*quantity else 0 end) july_sales from orders o join product p on o.product_id = p.product_id group by customer_id having june_sales >= 100 and july_sales>=100) x, customers c where c.customer_id = x.customer_id
select c.customer_id, name from Customers c cross join Product p inner join Orders o on c.customer_id=o.customer_id and p.product_id=o.product_id group by name having sum(case when order_date like "2020-06%" then price*quantity else 0 end)>=100 and sum(case when order_date like "2020-07%" then price*quantity else 0 end)>=100
select c.customer_id, name from Customers c inner join Product p inner join Orders o on (c.customer_id=o.customer_id and p.product_id=o.product_id) group by customer_id having (sum(case when left(order_date,7)= "2020-06" then price*quantity else 0 end)>=100) and (sum(case when left(order_date,7) = "2020-07" then price*quantity else 0 end)>=100)
select c.customer_id, name from Customers c join Orders o on o.customer_id = c.customer_id join Product p on p.product_id = o.product_id group by c.customer_id having sum(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 and sum(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
select c.customer_id, name from Orders o, Product p, Customers c where o.customer_id=c.customer_id and o.product_id=p.product_id group by c.customer_id, name having sum(case when month(order_date)=6 then quantity*price else 0 end) >= 100 and sum(case when month(order_date)=7 then quantity*price else 0 end) >= 100
select c.customer_id, name from customers as c join ( select o.customer_id, left(o.order_date, 7) as date, sum(p.price*o.quantity) as total from orders o join product p on o.product_id = p.product_id where (left(o.order_date, 7)) = '2020-06' or left(o.order_date, 7) = '2020-07' group by o.customer_id, left(o.order_date, 7) having sum(p.price*o.quantity) >= 100) tem on c.customer_id= tem.customer_id group by c.customer_id having count(*)=2
select c.customer_id, name from customers c join( select customer_id, left(order_date,7) as date, sum(price*quantity) as total from Orders o join Product p on o.product_id=p.product_id where left(order_date,7)='2020-06' or left(order_date,7)='2020-07' group by customer_id, left(order_date,7) having sum(price*quantity)>=100 )t on c.customer_id= t.customer_id group by c.customer_id having count(*)=2
select c.customer_id,c.name from Customers c join ( select customer_id,sum(case when order_date between '2020-06-01' and '2020-06-30' then tot else 0 end) as June_spend,sum(case when order_date between '2020-07-01' and '2020-07-31' then tot else 0 end) as July_spend from( select o.customer_id,o.order_date,sum(o.quantity*p.price) as tot from Orders o join Product p on o.product_id=p.product_id where o.order_date between '2020-06-01' and '2020-07-31' group by 1,2) a group by 1 having June_spend>=100 and July_spend>=100) tb on c.customer_id = tb.customer_id
select c.customer_id,c.name from customers as c inner join orders as o on c.customer_id = o.customer_id inner join product as p on p.product_id = o.product_id group by customer_id having sum(if(left(order_date,7) = '2020-06',o.quantity * p.price,0)) >= 100 and sum(if(left(order_date,7) = '2020-07',o.quantity * p.price,0)) >= 100
select c.customer_id,c.name from customers c inner join ( select customer_id, sum(case when date_format(order_date,'%m')='06' then p.price*quantity end) sm06, sum(case when date_format(order_date,'%m')='07' then p.price*quantity end) sm07 from orders o inner join product p on p.product_id=o.product_id group by customer_id having sm06>=100 and sm07>=100 ) t on c.customer_id=t.customer_id
select c.customer_id,c.name from customers c join ( select customer_id, sum(case when date_format(order_date,'%m')='06' then p.price*quantity end) sm06, sum(case when date_format(order_date,'%m')='07' then p.price*quantity end) sm07 from orders o join product p on p.product_id=o.product_id group by customer_id having sm06>=100 and sm07>=100 ) t on c.customer_id=t.customer_id
select c.customer_id,c.name from customers c join Orders o on c.customer_id=o.customer_id join Product p on p.product_id=o.product_id group by customer_id having sum(case when month(o.order_date)= 06 then p.price*o.quantity end ) >=100 and sum(case when month(o.order_date)=07 then p.price*o.quantity end ) >=100
select c.customer_id,c.name from customers c join orders o on c.customer_id = o.customer_id join product p on p.product_id = o.product_id group by 1 having sum(if(left(order_date,7) = '2020-06',quantity,0) * price) >= 100 and sum(if(left(order_date,7) = '2020-07',quantity,0) * price) >=100
select c.customer_id,c.name from orders o inner join customers c using (customer_id) inner join product p using (product_id) group by customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
select c.customer_id,c.name from orders o inner join product p using(product_id) inner join customers c using(customer_id) where substr(order_date,1,7) in ('2020-06','2020-07') group by 1 having sum(if(substr(order_date,1,7)='2020-06',quantity,0)*price)>=100 and sum(if(substr(order_date,1,7)='2020-07',quantity,0)*price)>=100
select c.customer_id,name from ( select distinct customer_id from Orders o join Product p on o.product_id=p.product_id where month(order_date)=6 and year(order_date)=2020 group by 1 having sum(price*quantity)>=100 union all select distinct customer_id from Orders o join Product p on o.product_id=p.product_id where month(order_date)=7 and year(order_date)=2020 group by 1 having sum(price*quantity)>=100 ) u join Customers c on c.customer_id=u.customer_id group by 1 having count(c.customer_id) >1
select c.customer_id,name from (select customer_id,month(order_date) as month,sum(quantity*price) as spend from Orders as o join Product as p on o.product_id=p.product_id group by 1,2 having (month=6 and spend>=100) or (month=7 and spend>=100)) as a join customers as c on a.customer_id=c.customer_id group by 1 having count(month)=2
select c.customer_id,name from Orders o inner join Customers c on o.customer_id = c.customer_id inner join Product p on o.product_id = p.product_id group by c.customer_id having SUM(case when left(order_date,7) = '2020-06'THEN (quantity*price) END) >=100 AND SUM(case when left(order_date,7) = '2020-07' THEN (quantity*price) END) >=100
select c1.customer_id, c1.name from (select o1.customer_id from orders o1 join product p1 on o1.product_id = p1.product_id where year(o1.order_date) = 2020 and month(o1.order_date) = 6 group by o1.customer_id having sum(o1.quantity * p1.price) >= 100) as temp1 join (select o2.customer_id from orders o2 join product p2 on o2.product_id = p2.product_id where year(o2.order_date) = 2020 and month(o2.order_date) = 7 group by o2.customer_id having sum(o2.quantity * p2.price) >= 100) as temp2 on temp1.customer_id = temp2.customer_id join Customers c1 on temp1.customer_id = c1.customer_id
select c2.customer_id, c2.name from ( select c.customer_id, c.name from Customers as c inner join Orders as o on c.customer_id = o.customer_id inner join Product as p on p.product_id = o.product_id where o.order_date >= '2020-06-01' and o.order_date <= '2020-07-31' group by month(o.order_date), c.customer_id having sum(o.quantity*p.price) >= 100 ) c2 group by c2.customer_id, c2.name having count(*) = 2
select cust.customer_id ,name from Customers cust join ( select ordersA.customer_id ,sum(prod.price*ordersA.quan_6) as spending_6 ,sum(prod.price*ordersA.quan_7) as spending_7 from Product prod join (select * ,case when left(order_date,7) = '2020-06' then quantity else 0 end quan_6 ,case when left(order_date,7) = '2020-07' then quantity else 0 end quan_7 from Orders where left(order_date,7) = '2020-06' or left(order_date,7) = '2020-07' ) ordersA on ordersA.product_id = prod.product_id group by ordersA.customer_id having spending_6 >= 100 and spending_7>=100 ) orderprodB on cust.customer_id = orderprodB.customer_id
select customer_id as CUSTOMER_ID, name as NAME from orders left join product using (product_id) left join customers using (customer_id) group by customer_id having sum(if(left(order_date,7)='2020-06',quantity,0)*price)>=100 and sum(if(left(order_date,7)='2020-07', quantity,0)*price)>=100
select customer_id, name as name from Customers c inner join Orders o using (customer_id) inner join Product p using (product_id) group by 1 HAVING SUM(CASE WHEN MONTH(order_date) = 6 THEN quantity*price ELSE 0 END) >= 100 AND SUM(CASE WHEN MONTH(order_date) = 7 THEN quantity*price ELSE 0 END) >= 100
select customer_id, name from ( select a.customer_id as customer_id, c.name , extract(month from order_date) as order_month from orders a join product b on a.product_id = b.product_id join customers c on a.customer_id = c.customer_id where extract(year from order_date) = 2020 and extract(month from order_date) in (6,7) group by 1,2,3 having sum(price * quantity) >= 100 ) a group by 1,2 having count(order_month) > 1
select customer_id, name from ( select a.customer_id, a.name, date_format(b.order_date, '%Y-%m') trans_mon from customers a inner join orders b on a.customer_id = b.customer_id inner join product c on b.product_id = c.product_id where date_format(order_date, '%Y-%m')= '2020-06' or date_format(order_date, '%Y-%m')='2020-07' group by 1, 2, trans_mon having sum(b.quantity*c.price) >= 100 )d group by 1, 2 having count(customer_id)=2
select customer_id, name from ( select c.customer_id, c.name, left(order_date, 7), sum(quantity * price) as 'total_amount' from orders o left join customers c on o.customer_id = c.customer_id left join product p on o.product_id = p.product_id where left(order_date, 7) in ('2020-06','2020-07') group by c.customer_id, c.name, left(order_date, 7) having sum(quantity * price) >= 100 ) as A group by customer_id, name having count(*) > 1
select customer_id, name from ( select c.customer_id, c.name, month(order_date) as month_, sum(o.quantity * p.price) as total_spend from Customers as c join Orders as o on c.customer_id = o.customer_id join product as p on p.product_id = o.product_id where month(order_date) in (6, 7) group by customer_id, month_ having total_spend >= 100) as t1 group by customer_id having count(*) >=2
select customer_id, name from ( select c.customer_id, c.name, sum(p.Price*o.quantity) as total_spend from Customers c inner join Orders o using (customer_id) inner join Product p using (product_id) where order_date > '2020-06-30' and order_date < '2020-08-01' group by c.customer_id, c.name ) july where total_spend >= 100 and customer_id in ( select customer_id from ( select c.customer_id, c.name, sum(p.Price*o.quantity) as total_spend from Customers c inner join Orders o using (customer_id) inner join Product p using (product_id) where order_date > '2020-05-30' and order_date < '2020-07-01' group by c.customer_id, c.name ) june where total_spend >= 100 )
select customer_id, name from ( select customer_id, left(order_date,7) as month, o.product_id, quantity, price, sum(quantity*price) total_price from orders o left join Product p using (product_id) where left(order_date,7)="2020-06" or left(order_date,7)="2020-07" group by 1,2 having(total_price>=100) )temp1 left join customers using (customer_id) group by customer_id having (count(month)=2)
select customer_id, name from ( select month(order_date), c.customer_id, c.name from orders o left join customers c on o.customer_id = c.customer_id left join product p on o.product_id = p.product_id where year(order_date) = 2020 and month(order_date) in (6,7) group by 1, 2, 3 having sum(o.quantity * p.price) >= 100 ) _ group by 1,2 having count(*) = 2
select customer_id, name from ( select o.customer_id, c.name, date_format(order_date, '%y-%m') as order_date, sum(o.quantity * p.price) as total from orders o left join product p on o.product_id = p.product_id left join customers c on o.customer_id = c.customer_id group by o.customer_id, date_format(order_date, '%y-%m') having sum(o.quantity * p.price) >= 100 )a where (order_date = '20-06' or order_date = '20-07') group by customer_id, name having count(customer_id) = 2
select customer_id, name from ( select o.customer_id, c.name, month(order_date) as m, sum(price * quantity) as cost from Orders o left join Product p on p.product_id = o.product_id left join Customers c on c.customer_id = o.customer_id where order_date >= '2020-06-01' and order_date <= '2020-07-31' group by o.customer_id, c.name, MONTH(order_date) ) as t group by customer_id, name having sum(if(cost >= 100,1,0)) = 2
select customer_id, name from ( select o.customer_id, name from orders o left join customers c on o.customer_id=c.customer_id left join product p on o.product_id=p.product_id where month(order_date) in (6, 7) group by customer_id, name, month(order_date) having sum(price*quantity) >= 100)a group by customer_id, name having count(*)>=2
select customer_id, name from ( select o.customer_id, name, month(order_date) m from orders o left join customers c on o.customer_id=c.customer_id left join product p on o.product_id=p.product_id where month(order_date) in (6, 7) group by customer_id, name, month(order_date) having sum(price*quantity) >= 100)a group by customer_id, name having count(*)>=2
select customer_id, name from ( select o.order_id, month(o.order_date) as month, c.customer_id, c.name, sum(p.price * o.quantity) as total from orders o join product p on o.product_id = p.product_id join customers c on o.customer_id = c.customer_id group by customer_id, month) filter_tab group by customer_id having sum(case when month=6 then total end)>=100 and sum(case when month=7 then total end)>=100 order by customer_id
select customer_id, name from ( select substring_index(t1.order_date, "-", 2) as month, t2.customer_id, t2.name from Orders t1 inner join Customers t2 on t1.customer_id=t2.customer_id inner join Product t3 on t1.product_id=t3.product_id where substring_index(t1.order_date, "-", 2) in ("2020-06", "2020-07") group by substring_index(t1.order_date, "-", 2), t2.customer_id, t2.name having sum(t3.price*t1.quantity) >= 100 )k group by customer_id, name having count(*) > 1
select customer_id, name from ( select t1.customer_id, t1.name, sum(case when month(t2.order_date) = 6 then t2.quantity * t3.price else 0 end) as june_spend, sum(case when month(t2.order_date) = 7 then t2.quantity * t3.price else 0 end) as july_spend from customers t1 left outer join orders t2 on t2.customer_id = t1.customer_id join product t3 on t3.product_id = t2.product_id group by t1.customer_id ) t where june_spend >= 100 and july_spend >= 100
select customer_id, name from (select a.customer_id as customer_id, b.name as name, sum(case when month(a.order_date)=6 then a.quantity*c.price else 0 end) as June_spend , sum(case when month(a.order_date)=7 then a.quantity*c.price else 0 end) as July_spend from Orders a, Customers b, Product c where a.customer_id=b.customer_id and a.product_id=c.product_id group by 1) temp where June_spend>=100 and July_spend>=100
select customer_id, name from (select a.customer_id, name, month(order_date) as months from Orders a join Product b on a.product_id=b.product_id join customers c on a.customer_id=c.customer_id Where order_date between '2020-06-01' and '2020-07-31' GROUP BY customer_id, name, month(order_date) Having sum(price*quantity)>=100) x group by customer_id, name having count(*)=2
select customer_id, name from (select a.customer_id, name, month(order_date) m, sum(quantity*price) tol from orders a join Customers b on a.customer_id = b.customer_id join Product c on a.product_id = c.product_id where year(order_date)=2020 and (month(order_date)=6 or month(order_date)=7) group by 1,2,3 having tol >= 100) a group by 1,2 having count(m) = 2
select customer_id, name from (select c.customer_id, c.name, sum(p.price*o.quantity) as total, substring(order_date, 1, 7) as month from Orders o left join Product p on o.product_id = p.product_id left join Customers c on o.customer_id = c.customer_id where month(order_date)="6" or month(order_date)="7" group by month, customer_id having total>=100) t group by customer_id having count(*)>=2
select customer_id, name from (select c.customer_id, c.name,date_format(o.order_date,'%Y-%m'), IFNULL(SUM(case when date_format(o.order_date,'%Y-%m') = '2020-06' then o.quantity * p.price end),0) as 'June_Amount', IFNULL(SUM(case when date_format(o.order_date,'%Y-%m') = '2020-07' then o.quantity * p.price end),0) as 'July_Amount' from Customers c inner join Orders o on c.customer_id = o.customer_id inner join Product p on p.product_id = o.product_id group by c.customer_id, date_format(o.order_date,'%Y-%m')) x group by customer_id having SUM(June_Amount) >= 100 and SUM(July_Amount) >= 100
select customer_id, name from (select c.customer_id, name from Customers c left join Orders o on c.customer_id = o.customer_id left join Product p on o.product_id = p.product_id where left(order_date,7) = '2020-06' or left(order_date,7) = '2020-07' group by 1, left(order_date,7) having sum(quantity*price) >= 100) temp group by 2 having count(*) = 2
select customer_id, name from (select c.customer_id,name, Date_format(order_date,'%Y-%m') as month, sum(price*quantity) as total from Customers as c left join Orders as o on c.customer_id=o.customer_id left join Product as p on o.product_id=p.product_id where Date_format(order_date,'%Y-%m') in ('2020-06','2020-07') group by o.customer_id, month) as a group by 1 having sum(case when month='2020-06' and total>=100 then 1 when month='2020-07' and total>=100 then 1 else 0 end)=2
select customer_id, name from (select customer_id,month(order_date) from Orders left join Product using(product_id) where year(order_date)="2020" and month(order_date) in ("06","07") group by 1,2 having sum(price*quantity) >= 100)a inner join Customers using(customer_id) group by 1 having count(1) =2
select customer_id, name from (select date_format(o.order_date, '%Y-%m')as month, o.customer_id,c.name as name, sum(o.quantity * p.price) as spent from orders o, customers c, product p where o.customer_id = c.customer_id and p.product_id = o.product_id and date_format(o.order_date, '%Y') = 2020 and (date_format(o.order_date, '%m') = 06 or date_format(o.order_date, '%m') = 07) group by date_format(o.order_date, '%Y-%m'), o.customer_id having sum(o.quantity * p.price)>=100)a group by customer_id having count(customer_id)>1
select customer_id, name from (select o.customer_id, c.name, sum(case when o.order_date like '2020-06%' then o.quantity * p.price else 0 end) as c_6, sum(case when o.order_date like '2020-07%' then o.quantity * p.price else 0 end) as c_7 from customers c join orders o using(customer_id) join product p using(product_id) group by 1) as temp where c_6 >=100 and c_7 >= 100
select customer_id, name from (select o.customer_id, c.name, sum(case when o.order_date like '2020-06%' then quantity * price else 0 end) as june, sum(case when o.order_date like '2020-07%' then quantity * price else 0 end) as july from orders o join product p on o.product_id = p.product_id join customers c on c.customer_id = o.customer_id group by 1,2 ) temp where june >= 100 and july >= 100
select customer_id, name from (select o.customer_id,name, month(order_date) as m, sum(quantity*price) spend from orders o join customers c on o.customer_id=c.customer_id join product p on o.product_id=p.product_id group by o.customer_id, month(order_date) having spend>=100 and (m=6 or m=7)) lp group by name having count(name)=2
select customer_id, name from (select o.customer_id,name, sum(quantity*price) as total, DATE_FORMAT(order_date,"%Y-%m") as month from Orders o join Product p on p.product_id=o.product_id join Customers c on c.customer_id=o.customer_id group by o.customer_id, month having month in ('2020-07','2020-06') and total >=100 ) temp group by customer_id having count(*)>=2
select customer_id, name from Customers join Orders using (customer_id) join Product using (product_id) group by customer_id having sum(case when order_date between '2020-06-01' and '2020-06-30' then quantity * price else 0 end) >= 100 and sum(case when order_date between '2020-07-01' and '2020-07-31' then quantity * price else 0 end) >= 100
select customer_id, name from Customers join Orders using (customer_id) join Product using (product_id) group by customer_id having sum(if(left(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 and sum(if(left(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
select customer_id, name from Customers join Orders using (customer_id) join Product using (product_id) group by customer_id having sum(if(left(order_date,7)='2020-06',quantity,0)*price)>= 100 and sum(if(left(order_date,7)='2020-07',quantity,0)*price)>= 100
select customer_id, name from Customers where (customer_id) in (select customer_id from Orders a join Product b on a.product_id=b.product_id where left(order_date, 7)='2020-06' group by left(order_date, 7), customer_id having sum(price*quantity)>=100) and (customer_id) in (select customer_id from Orders a join Product b on a.product_id=b.product_id where left(order_date, 7)='2020-07' group by left(order_date, 7), customer_id having sum(price*quantity)>=100)
select customer_id, name from Customers where customer_id in ( SELECT customer_id FROM ( SELECT customer_id, MONTH(order_date), SUM(spend) , CASE WHEN MONTH(ORDER_DATE) = '6' AND SUM(SPEND) >= '100' THEN 'Y' WHEN MONTH(ORDER_DATE) = '7' AND SUM(SPEND) >= '100' THEN 'Y' ELSE 'N' END AS 'FLAG' FROM ( select a.*, b.price*a.quantity as 'spend' from orders a left join product b on a.product_id = b.product_id WHERE MONTH(a.order_date) in ('6','7') ) c GROUP BY customer_id, MONTH(order_date) ) d WHERE FLAG = 'Y' GROUP BY customer_id HAVING COUNT(FLAG) = '2' )
select customer_id, name from Customers where customer_id in (select customer_id from (select customer_id, Month(order_date) from Orders a left join Product b on a.product_id = b.product_id where Month(order_date) = 6 or Month(order_date) = 7 group by customer_id, Month(order_date) having sum(quantity*price) >= 100) a group by customer_id having count(*) = 2)
select customer_id, name from Orders o join Customers using (customer_id) join Product p using (product_id) where substr(order_date,1,7) = '2020-06' AND customer_id IN (select a.customer_id from (select customer_id, sum(p.price*o.quantity) from Orders o join Customers using (customer_id) join Product p using (product_id) where substr(order_date,1,7) = '2020-07' group by customer_id having sum(p.price*o.quantity) >= 100)a) group by customer_id having sum(p.price*o.quantity) >= 100
select customer_id, name from Orders o join Customers using (customer_id) join Product p using (product_id) where substr(order_date,1,7) = '2020-06' AND customer_id IN (select customer_id from Orders o join Customers using (customer_id) join Product p using (product_id) where substr(order_date,1,7) = '2020-07' group by customer_id having sum(p.price*o.quantity) >= 100) group by customer_id having sum(p.price*o.quantity) >= 100
select customer_id, name from customers c join orders using (customer_id) join product using (product_id) group by 1 having sum(if(left(order_date, 7)='2020-06', quantity, 0)*price)>=100 and sum(if(left(order_date, 7)='2020-07', quantity, 0)*price)>=100
select customer_id, name from customers where customer_id in ( select o.customer_id from orders o join product p on o.product_id = p.product_id where EXTRACT(YEAR_MONTH from o.order_date) in ('202006', '202007') group by o.customer_id having sum(case when MONTH(o.order_date) = 6 then p.price*o.quantity else 0 end) >=100 and sum(case when MONTH(o.order_date) = 7 then p.price*o.quantity else 0 end)>=100 )
select customer_id, name from customers where customer_id in (select A.customer_id from (select o.customer_id, sum(p.price * o.quantity) as price from product p join orders o on o.product_id = p.product_id where o.order_date >= '2020-06-01' and o.order_date <= '2020-06-30' group by o.customer_id having price >= 100) as A) AND customer_id in (select B.customer_id from (select o.customer_id, sum(p.price * o.quantity) as price from product p join orders o on o.product_id = p.product_id where o.order_date >= '2020-07-01' and o.order_date <= '2020-07-31' group by o.customer_id having price >= 100) as B)
select customer_id, name from customers where customer_id in (select customer_id from orders o join product p on o.product_id = p.product_id where month(order_date) in (6) group by customer_id, month(order_date) having sum(price*quantity) >= 100) and customer_id in (select customer_id from orders o join product p on o.product_id = p.product_id where month(order_date) = 7 group by customer_id having sum(price*quantity) >= 100)
select customer_id, name from( select customer_id, name, order_month, sum(totalspent) total from ( select o.*, c.name, p.price*o.quantity as totalspent ,DATE_FORMAT(order_date,'%M') as order_month from orders o left join Customers c ON o.customer_id = c.customer_id left join Product p ON o.product_id = p.product_id ) as r where order_month IN ('June','July') group by customer_id, name, order_month having sum(totalspent) >=100) as s group by customer_id, name having count(*) >1
select customer_id,name from ( select c.customer_id,c.name, date_format(o.order_date,'%Y-%m') month from orders o join customers c on o.customer_id=c.customer_id join product p on o.product_id =p.product_id where o.order_date between "2020-06-01" and "2020-07-31" group by 1,2,3 having sum(price*quantity)>=100 ) a group by 1,2 having count(customer_id)=2
select customer_id,name from Customers where customer_id in ( select customer_id from Orders o ,Product p where p.product_id=o.product_id and month(order_date) in ('06') group by 1 having sum(price*quantity) >= 100 ) and customer_id in ( select customer_id from Orders o ,Product p where p.product_id=o.product_id and month(order_date) in ('07') group by 1 having sum(price*quantity) >= 100 )
select customer_id,name from Customers where customer_id in (select customer_id from orders join product on orders.product_id = product.product_id where year(order_date)=2020 and month(order_date)=6 group by customer_id having sum(price*quantity) >=100 ) and customer_id in (select customer_id from orders join product on orders.product_id = product.product_id where year(order_date)=2020 and month(order_date)=7 group by customer_id having sum(price*quantity) >=100)
select customers.customer_id as customer_id ,customers.name as name from Orders orders join Product prod on orders.product_id = prod.product_id join Customers customers on orders.customer_id = customers.customer_id group by customer_id having (sum(case when left(orders.order_date,7) = '2020-06' then orders.quantity*prod.price else null end) >= 100) and (sum(case when left(orders.order_date,7) = '2020-07' then orders.quantity*prod.price else null end) >= 100)
select customers.customer_id as customer_id ,customers.name as name from Orders orders join Product prod on orders.product_id = prod.product_id join Customers customers on orders.customer_id = customers.customer_id where left(orders.order_date,7) = '2020-06' or left(orders.order_date,7) = '2020-07' group by customer_id having (sum(case when left(orders.order_date,7) = '2020-06' then orders.quantity*prod.price else null end) >= 100) and (sum(case when left(orders.order_date,7) = '2020-07' then orders.quantity*prod.price else null end) >= 100)
select customers.customer_id as customer_id ,customers.name as name from Orders orders join Product prod on orders.product_id = prod.product_id join Customers customers on orders.customer_id = customers.customer_id where orders.order_date between '2020-06-01' and '2020-07-31' group by customer_id having (sum(case when left(orders.order_date,7) = '2020-06' then orders.quantity*prod.price else null end) >= 100) and (sum(case when left(orders.order_date,7) = '2020-07' then orders.quantity*prod.price else null end) >= 100)
select d.customer_id, d.name from ( select a.customer_id, b.name, year(a.order_date) as year, month(a.order_date) as month, sum(a.quantity*c.price) as spend from orders a left join customers b on a.customer_id = b.customer_id left join product c on a. product_id = c.product_id where month(a.order_date) in (6,7) and year(a.order_date) in (2020) group by a.customer_id, year, month ) d group by d.customer_id having min(d.spend)>=100 and min(d.month)!=max(d.month)
select distinct c.customer_id, c.name from Customers c inner join Orders o on c.customer_id=o.customer_id where o.customer_id in( select o.customer_id from Orders o inner join Product p on o.product_id=p.product_id where (month(o.order_date) ='06') group by o.customer_id having (sum(o.quantity * p.price))>=100 and o.customer_id in( select o.customer_id from Orders o inner join Product p on o.product_id=p.product_id where (month(o.order_date)='07') group by o.customer_id having (sum(o.quantity * p.price))>=100))
select distinct c.customer_id, c.name from Customers c left join Orders o on c.customer_id = o.customer_id left join Product p on o.product_id = p.product_id where year(o.order_date) = 2020 group by c.name having sum(case when month(o.order_date) = 6 then quantity*price else 0 end) >= 100 and sum(case when month(o.order_date) = 7 then quantity*price else 0 end) >= 100
select distinct c.customer_id, name from Customers c inner join Orders o on c.customer_id = o.customer_id inner join Product p on p.product_id = o.product_id where order_date between '2020-06-01' and '2020-07-31' group by c.customer_id having sum(if(month(order_date) = 6, quantity*price, null)) >= 100 and sum(if(month(order_date) = 7, quantity*price, null)) >= 100
select distinct c.customer_id,c.name as name from ( select o.customer_id, extract(month from order_date) as month , sum(o.quantity*p.price) as spend_per_month from Orders o inner join Product p on o.product_id=p.product_id where extract(month from order_date) in ('06','07') group by o.customer_id,month having spend_per_month>=100) a join customers c on c.customer_id=a.customer_id group by c.customer_id,c.customer_id having count(a.month) = 2
select distinct customer_id, a.name from ( select customer_id,name from customers inner join orders using(customer_id) inner join product using(product_id) where extract(year_month from order_date)='202006' group by customer_id,name having sum(price*quantity)>=100 ) a inner join ( select customer_id,name from customers inner join orders using(customer_id) inner join product using(product_id) where extract(year_month from order_date)='202007' group by customer_id,name having sum(price*quantity)>=100 ) b using(customer_id)
select distinct customer_id, name from ( select c.customer_id, c.name as name, sum(case when month(order_date)='06' then (price*quantity) end )as jun, sum(case when month(order_date)='07' then (price*quantity) end )as july from customers c join orders o on c.customer_id=o.customer_id join product p on o.product_id=p.product_id group by 1,2 )d where jun>=100 and july>=100
select distinct customer_id,name from ( select year(order_date) as year,month(order_date) as month, o.customer_id , c.name, sum((o.quantity *p.price)) as tot from Orders as o left join customers as c using (customer_id) left join product as p using(product_id) where year(order_date)='2020' and month(order_date)='6' group by year(order_date),month(order_date), o.customer_id , c.name having tot>=100 ) as a where customer_id in (select distinct customer_id from ( select year(order_date) as year,month(order_date) as month, o.customer_id , c.name, sum((o.quantity *p.price)) as tot from Orders as o left join customers as c using (customer_id) left join product as p using(product_id) where year(order_date)='2020' and month(order_date)='7' group by year(order_date),month(order_date), o.customer_id , c.name having tot>=100 ) as b )
select distinct customers.customer_id, customers.name from customers join orders on customers.customer_id=orders.customer_id join product on product.product_Id=orders.product_id where order_date between '2020-06-01' and '2020-07-31' group by 1 HAVING SUM(CASE WHEN MONTH(order_date) = 06 THEN quantity*price END) >= 100 AND SUM(CASE WHEN MONTH(order_date) = 07 THEN quantity*price END) >= 100
select distinct customers.customer_id,name from (select o.customer_id, left(order_date,7) as yearmonth,sum(quantity*price) as order_size, count(o.customer_id) over (partition by o.customer_id) as cnt from orders o join product p on o.product_id = p.product_id join customers c on c.customer_id = o.customer_id where left(order_date,7) in ('2020-06','2020-07') group by customer_id, left(order_date,7) having sum(quantity*price)>=100) a join customers on customers.customer_id = a.customer_id where a.cnt=2
select distinct e.customer_id, e.name from Customers as e left join ( select customer_id, sum(sales) as total_purchase, sum(case when ind_june = 1 then sales else 0 end) as total_purchase_june, sum(case when ind_july = 1 then sales else 0 end) as total_purchase_july from ( select a.customer_id, a.quantity*b.price as sales, case when month(a.order_date) in (6) and year(a.order_date) = 2020 then 1 else 0 end as ind_june, case when month(a.order_date) in (7) and year(a.order_date) = 2020 then 1 else 0 end as ind_july from Orders as a left join Product as b on a.product_id = b.product_id) as c group by 1) as d on e.customer_id = d.customer_id where d.total_purchase_june >= 100 and d.total_purchase_july >= 100
select distinct fin.customer_id,fin.name from (select a.customer_id,a.name,count(*) over (partition by a.customer_id) as cnt from( select year(o.order_date),month(o.order_date),o.customer_id,c.name,sum(quantity*price) as price from Orders o left join Customers c on o.customer_id=c.customer_id left join product p on p.product_id=o.product_id where year(o.order_date)=2020 and month(o.order_date) in (06,07) group by year(o.order_date),month(o.order_date),customer_id having price>=100) a ) fin where fin.cnt=2
select distinct l.customer_id,l.name from ( select z.customer_id,z.name,count(*) over(partition by name) as cnt from ( select f.customer_id,f.name,month,sum(total_cost) as m_total_cost from ( select c.customer_id,c.name,price*quantity as total_cost, month(order_date) as month from customers c left join orders o on c.customer_id=o.customer_id left join product p on o.product_id=p.product_id where order_date between '2020-06-01' and '2020-07-31') as f group by 1,2,3 having m_total_cost>=100) z ) l where cnt=2
select distinct o.customer_id as CUSTOMER_ID, c.name AS NAME from customers c inner join orders o on c.customer_id = o.customer_id where (select sum(Orders.quantity * Product.price) from Orders join Product On Orders.product_id = Product.product_id where (Month(Orders.order_date) = '06') and c.customer_id = Orders.customer_id ) >= 100 and (select sum(Orders.quantity * Product.price) from Orders join Product On Orders.product_id = Product.product_id where ( Month(Orders.order_date) = '07') and c.customer_id = Orders.customer_id ) >= 100
select distinct o.customer_id as CUSTOMER_ID, c.name as NAME from Customers c inner join Orders o On c.customer_id = o.customer_id where ( select sum(Orders.quantity * Product.price) from Orders join Product On Orders.product_id = Product.product_id where (Month(Orders.order_date) ='06') and c.customer_id = Orders.customer_id ) >= 100 and ( select sum(Orders.quantity * Product.price) from Orders join Product On Orders.product_id = Product.product_id where Month(Orders.order_date) ='07' and c.customer_id = Orders.customer_id ) >= 100
select e.customer_id, e.name from ( select d.customer_id, d.name, min(d.spend) as min_spend, min(d.month) as min_month, max(d.month) as max_month from ( select a.customer_id, b.name, year(a.order_date) as year, month(a.order_date) as month, sum(a.quantity*c.price) as spend from orders a left join customers b on a.customer_id = b.customer_id left join product c on a. product_id = c.product_id where month(a.order_date) in (6,7) and year(a.order_date) in (2020) group by a.customer_id, year(a.order_date), month(a.order_date) ) d group by d.customer_id ) e where e.min_spend >= 100 and min_month != max_month
select f.customer_id, c.name from ( select o.customer_id, month(o.order_date) as m from orders o left join product p on o.product_id = p.product_id where year(o.order_date) = 2020 and month(o.order_date) in (6, 7) group by 1,2 having sum(quantity * price) >= 100 ) f join customers c on c.customer_id = f.customer_id group by 1 having count(1) = 2
select jj.customer_id, jj.name from ( select cst.customer_id, cst.name, SUM(pd.price*ord.quantity) as tot_order, month(ord.order_date) from Orders ord left join Product pd using (product_id) left join Customers cst using (customer_id) where month(ord.order_date) in ('06','07') group by 1,4 having sum(ord.quantity * pd.price) >=100) AS jj group by 1 having count(*) = 2
select june.customer_id, june.name from (select Customers.name, Customers.customer_id from Orders inner join Customers on Orders.customer_id = Customers.customer_id inner join Product on Orders.product_id = Product.product_id where order_date like '2020-06%' group by Customers.name, Customers.customer_id having sum(price*quantity) >= 100) june inner join (select Customers.name, Customers.customer_id from Orders inner join Customers on Orders.customer_id = Customers.customer_id inner join Product on Orders.product_id = Product.product_id where order_date like '2020-07%' group by Customers.name, Customers.customer_id having sum(price*quantity) >= 100) july on june.name = july.name and july.customer_id = june.customer_id
select o.customer_id , c.name from orders as o join product as p on o.product_id = p.product_id join customers as c on o.customer_id = c.customer_id group by o.customer_id having sum(case when extract(year_month from o.order_date) = 202006 then quantity*p.price else 0 end) >= 100 and sum(case when extract(year_month from o.order_date) = 202007 then quantity*p.price else 0 end) >= 100
select o.customer_id, c.name FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id JOIN Product p ON o.product_id = p.product_id group by o.customer_id HAVING SUM(IF(LEFT(order_date,7)='2020-06', quantity, 0)*price) >= 100 AND SUM(IF(LEFT(order_date,7)='2020-07', quantity, 0)*price) >= 100
select o.customer_id, c.name from Customers c, Orders o, Product p where o.product_id=p.product_id and o.customer_id=c.customer_id and o.order_date <= '20200731' and o.order_date>='20200601' group by o.customer_id having sum(if(left(o.order_date, 7) = '2020-06', o.quantity * p.price, 0)) >= 100 and sum(if(left(o.order_date, 7) = '2020-07', o.quantity * p.price, 0)) >= 100
select o.customer_id, c.name from Customers c, Product p, Orders o where c.customer_id = o.customer_id and p.product_id = o.product_id group by o.customer_id having ( sum(case when o.order_date like '2020-06%' then o.quantity*p.price else 0 end) >= 100 and sum(case when o.order_date like '2020-07%' then o.quantity*p.price else 0 end) >= 100 )
select o.customer_id, c.name from Orders as o join Product as p on o.product_id = p.product_id join Customers as c on o.customer_id = c.customer_id group by o.customer_id having sum(if(month(o.order_date)= 7, p.price*o.quantity,0)) >= 100 and sum(if(month(o.order_date) = 6, p.price*o.quantity,0)) >= 100
select o.customer_id, c.name from Orders o inner join Product p on o.product_id = p.product_id inner join Customers c on o.customer_id=c.customer_id group by o.customer_id,c.name having sum(case when extract(month from o.order_date) = 6 then p.price * o.quantity end) >=100 and sum(case when extract(month from o.order_date) = 7 then p.price * o.quantity end)>=100
select o.customer_id, c.name from Orders o join Product p on o.product_id=p.product_id join Customers c on o.customer_id=c.customer_id where date_format(order_date,'%Y-%m') in ('2020-06', '2020-07') group by 1,2 having sum(case when date_format(order_date,'%Y-%m')='2020-06' then o.quantity*p.price else 0 end)>=100 and sum(case when date_format(order_date,'%Y-%m')='2020-07' then o.quantity*p.price else 0 end)>=100
select o.customer_id, c.name from customers as c join orders as o join product as p on c.customer_id=o.customer_id and p.product_id=o.product_id group by o.customer_id HAVING SUM(IF(LEFT(order_date, 7) = '2020-06', quantity, 0) * price) >= 100 AND SUM(IF(LEFT(order_date, 7) = '2020-07', quantity, 0) * price) >= 100
select o.customer_id, c.name from orders o join product p on o.product_id = p.product_id join customers c on c.customer_id = o.customer_id group by o.customer_id having sum(if(month(o.order_date) = '06',quantity,0)*price) >= 100 and sum(if(month(o.order_date) = '07',quantity,0)*price) >= 100
select o.customer_id, c.name from orders o join product p on o.product_id = p.product_id join customers c on o.customer_id = c.customer_id group by o.customer_id having SUM(CASE WHEN MONTH(order_date) = 06 THEN quantity*price END) >= 100 AND SUM(CASE WHEN MONTH(order_date) = 07 THEN quantity*price END) >= 100
select o.customer_id, c.name from orders o join product p on o.product_id = p.product_id join customers c on o.customer_id = c.customer_id group by o.customer_id having sum(case when date_format(order_Date,'%Y%m') = 202006 THEN (p.price*o.quantity) END) >= 100 AND SUM(case when date_format(order_Date,'%Y%m') = 202007 THEN (p.price*o.quantity)END) >= 100
select o.customer_id, c.name from orders o join product p on o.product_id=p.product_id join customers c on o.customer_id=c.customer_id group by c.customer_id having sum(if (month(o.order_date)=6, o.quantity, 0) * p.price )>=100 and sum(if (month(o.order_date)=7, o.quantity, 0) * p.price )>=100
select o.customer_id, c.name from orders o left join product p on o.product_id = p.product_id left join customers c on o.customer_id = c.customer_id group by 1,2 having sum(case when left(order_date, 7) = '2020-06' then quantity * price else 0 end) >= 100 and sum(case when left(order_date, 7) = '2020-07' then quantity * price else 0 end) >= 100
select o.customer_id, c.name from orders o left join product p using(product_id) left join customers c using(customer_id) group by o.customer_id having sum(if(left(o.order_date, 7) = '2020-06',quantity,0)*price) >= 100 and sum(if(left(o.order_date, 7) = '2020-07', quantity, 0) * price) >= 100
select o.customer_id, name from Orders o join Product p on p.product_id = o.product_id join Customers c on c.customer_id = o.customer_id group by o.customer_id having sum(if(left(order_date, 7) = '2020-06', quantity, 0)*price) >=100 and sum(if(left(order_date, 7) = '2020-07', quantity, 0)*price) >=100
select o.customer_id, name from orders o, product p, customers c where o.customer_id = c.customer_id and o.product_id = p.product_id group by o.customer_id having sum(if(left(order_date,7)="2020-06",quantity,0)*price)>=100 and sum(if(left(order_date,7)="2020-07",quantity,0)*price)>=100
select o.customer_id,c.name from Orders o JOIN Product p ON o.product_id= p.product_id JOIN Customers c ON o.customer_id= c.customer_id group by o.customer_id having sum(case when MONTH(o.order_date)=6 then p.price*o.quantity else 0 END)>=100 and sum(case when MONTH(o.order_date)=7 then p.price*o.quantity else 0 END)>=100
select o.customer_id,c.name from orders o join product p on p.product_id=o.product_id join customers c on o.customer_id = c.customer_id group by o.customer_id having sum(case when date_format(order_date,'%m')='06' then p.price*quantity end)>=100 and sum(case when date_format(order_date,'%m')='07' then p.price*quantity end) >=100
select o.customer_id,c.name from orders o join product p on p.product_id=o.product_id join customers c on o.customer_id = c.customer_id group by o.customer_id having sum(case when month(order_date)=6 then p.price*quantity end)>=100 and sum(case when month(order_date)=7 then p.price*quantity end) >=100
select o.customer_id,c.name from( select o.customer_id, month(order_date), sum(o.quantity*p.price) as monthpurchase from orders as o join product as p using (product_id) where year(order_date)=2020 and (month(order_date)=6 or month(order_date)=7) group by o.customer_id, month(order_date) )o join customers as c using (customer_id) where o.monthpurchase>=100 group by customer_id, c.name having count(monthpurchase)=2
select sub.customer_id, sub.name from (select o.order_id, o.customer_id, c.name, o.product_id, year(o.order_date) as 'year', month(o.order_date) as 'month', sum(p.price*o.quantity) as total_price from Customers c right join Orders o on c.customer_id = o.customer_id left join Product p on o.product_id = p.product_id group by o.customer_id, year, month having total_price >= 100 and year = '2020' and month in ('6', '7')) sub group by sub.customer_id having count(sub.customer_id) = 2
select summary.customer_id, summary.name from (select Orders_month.customer_id, c.name, Orders_month.month, sum(Orders_month.quantity * p.price) as total from (select order_id, customer_id, product_id, order_date, quantity, (case when order_date between "2020-06-01" and "2020-06-30" then "June" when order_date between "2020-07-01" and "2020-07-30" then "July" else "other_month"end) as "month" from Orders) as Orders_month join Customers c on c.customer_id = Orders_month.customer_id join Product p on p.product_id = Orders_month.product_id where Orders_month.month = 'June' or Orders_month.month = 'July' group by Orders_month.customer_id, c.name, Orders_month.month having sum(Orders_month.quantity * p.price) >= 100 order by Orders_month.customer_id, c.name, Orders_month.month desc) as summary group by summary.customer_id, summary.name having count(distinct summary.month) = 2
select t.customer_id as customer_id, c.name as name from (select o.customer_id as customer_id, month(o.order_date) as month_p from orders o join product p on o.product_id=p.product_id where (month(o.order_date)=6 or month(o.order_date)=7) group by o.customer_id, month_p having sum(p.price*o.quantity)>=100 ) t join customers as c on t.customer_id=c.customer_id group by customer_id, name having count(*)=2
select t.customer_id, b.name from orders t join Product a on t.product_id=a.product_id join customers b on t.customer_id=b.customer_id where month(t.order_date) in (7,6) group by t.customer_id,b.name having sum(case when month(t.order_date)=6 then t.quantity*a.price else 0 end)>=100 and sum(case when month(t.order_date)=7 then t.quantity*a.price else 0 end)>=100
select t.customer_id, t.name from ( select customer_id, name, sum(p1) as s1 from(select o.customer_id, c.name, sum(quantity)* p.price as p1 from orders o, Product p, customers c where left(order_date,7) in ('2020-06') and p.product_id=o.product_id and c.customer_id=o.customer_id group by o.product_id, o.customer_id order by o.customer_id)k group by customer_id)t, (select customer_id, name, sum(p2) as s2 from(select o.customer_id, c.name, sum(quantity)* p.price as p2 from orders o, Product p, customers c where left(order_date,7) in ('2020-07') and p.product_id=o.product_id and c.customer_id=o.customer_id group by o.product_id, o.customer_id order by o.customer_id)k group by customer_id)k where k.customer_id=t.customer_id and s2>=100 and s1>=100
select t.customer_id, t.name from (select month(o.order_date) as mn,c.customer_id,c.name, sum(p.price*o.quantity) as x from customers c join orders o ON c.customer_id = o.customer_id JOIN product p ON p.product_id = o.product_id where month(o.order_date) = '06' or month(o.order_date) = '07' and year(o.order_date)='2020' group by month(o.order_date),c.customer_id, c.name having sum(p.price*o.quantity)>=100 )t group by t.customer_id, t.name having count(t.mn)=2
select t.customer_id,c.name from customers c join ( select o.customer_id,month(order_date) as month, sum(price*quantity) as total_price from orders o join product p on o.product_id=p.product_id where order_date between '2020-06-01' and '2020-07-31' group by customer_id,month(order_date) HAVING total_price >= 100 AND month in (6,7) ) t on c.customer_id=t.customer_id group by c.customer_id having count(c.customer_id)>1
select t.customer_id,name from customers c join ( select customer_id,month(o.order_date) as month, SUM(quantity*price) as total from orders o join product p on o.product_id = p.product_id where order_date between '2020-06-01' and '2020-07-30' group by customer_id,month(o.order_date) ) t on c.customer_id = t.customer_id where total >= 100 group by t.customer_id having count(t.customer_id) >= 2
select t1.customer_id, c.name from( select customer_id from( select o.customer_id from orders o left join product p on p.product_id = o.product_id where ((month(order_date) = 6 and year(order_date) = 2020)) or (month(order_date) = 7 and year(order_date) = 2020) group by o.customer_id, left(order_date, 7) having sum(p.price * o.quantity) >= 100) t group by customer_id having count(customer_id) > 1) t1 left join customers c on c.customer_id = t1.customer_id
select t1.customer_id, t2.name from ( select t.customer_id, month(t.order_date) as mon from orders t join Product a on t.product_id=a.product_id where month(t.order_date) in (7,6) group by t.customer_id,month(t.order_date) having sum(t.quantity*a.price)>=100 ) t1 join Customers t2 on t1.customer_id=t2.customer_id group by t1.customer_id,t2.name having count(1)=2
select tab.customer_id, c.name from (select t.customer_id from (select o.customer_id, p.product_id, p.price*o.quantity amount, left(o.order_date, 7) Dates from orders o inner join product p on p.product_id = o.product_id where left(o.order_date, 7) = '2020-06' or left(o.order_date, 7) = '2020-07') t group by t.customer_id, t.Dates having sum(t.amount) >= 100) tab inner join customers c on c.customer_id = tab.customer_id group by tab.customer_id having count(tab.customer_id) > 1
select temp.customer_id, name from ( select customer_id, month(order_date) as month, sum(quantity*price) as total from orders o left join product p on o.product_id=p.product_id where month(order_date) in (6,7) group by customer_id, month having total >= 100 )temp, Customers c where temp.customer_id = c.customer_id group by customer_id having count(*) =2
select temp.customer_id, temp.name from (select c.customer_id, c.name, month(order_date) month, sum(p.price * o.quantity) total from Orders o inner join Product p on o.product_id = p.product_id inner join Customers c on c.customer_id = o.customer_id group by customer_id, month having month = 6 or month = 7) temp where temp.total >= 100 group by temp.name having count(*) = 2
select tmp.customer_id, c.name from Customers c join (select o.customer_id, month(o.order_date) mon, sum(p.price * o.quantity) cost from orders o join product p on p.product_id = o.product_id group by o.customer_id, month(o.order_date) ) tmp on c.customer_id = tmp.customer_id group by tmp.customer_id having sum(if(mon=6, cost, 0)) >= 100 and sum(if(mon=7, cost, 0)) >= 100
select x.customer_id, x.name from (select c.customer_id, c.name, o.date_order, sum(o.quantity*p.price) as total from customers c join (select *, left(order_date, 7) as date_order from orders where order_date between '2020-06-01' and '2020-07-31') o on c.customer_id=o.customer_id join product p on p.product_id=o.product_id group by 1, 2,3) x group by 1, 2 having sum(total>=100)=2
with CTE as ( select sum(p.price*O.quantity) as amount_spent, O.customer_id,C.name, month(order_date) from Orders O inner join Customers C on O.customer_id=C.customer_id left join Product P on O.product_id=P.product_id where month(order_date)='6'and year(order_date)='2020' group by month(order_date),O.customer_id,name having amount_spent>=100), CTE2 as ( select sum(p.price*O.quantity) as amount_spent, O.customer_id,C.name, month(order_date) from Orders O inner join Customers C on O.customer_id=C.customer_id left join Product P on O.product_id=P.product_id where month(order_date)='7'and year(order_date)='2020' group by month(order_date),O.customer_id,name having amount_spent>=100 ) select a.customer_id,a.name from CTE a inner join CTE2 b on a.customer_id=b.customer_id
with OP1 as ( select O.customer_id, date_format(O.order_date,'%Y-%m') as YM, O.quantity*P.price as spending from Orders as O, Product as P where O.product_id=P.product_id and O.order_date between '2020-06-01' and '2020-07-31' ), OP2 as ( select customer_id, YM, sum(spending) as spending from OP1 group by customer_id, YM having sum(spending)>=100 ) select customer_id, name from Customers where customer_id in (select customer_id from OP2 group by customer_id having count(*)=2 )
with a as ( select customer_id, date_format(order_date, '%Y-%m') mon, sum(quantity*price) sum_price from Orders t1 join Product t2 on t1.product_id = t2.product_id where order_date BETWEEN '2020-06-01' AND '2020-07-31' group by customer_id, mon) select a.customer_id, name from a join Customers on a.customer_id = Customers.customer_id group by customer_id,name having sum(sum_price >= 100) = 2
with a as (select c.customer_id,c.name,sum(o.quantity * p.price) as total, extract(month from o.order_date) as month from customers c inner join orders o on o.customer_id=c.customer_id inner join product p on p.product_id = o.product_id group by c.customer_id,c.name,month order by customer_id ), x as (select distinct customer_id, name, month from a where a.total > 99 and a.month= 6), y as (select distinct customer_id,name, month from a where a.total > 99 and a.month= 7 ) select x.customer_id, x.name from x inner join y on x.customer_id=y.customer_id
with a as(select customer_id,month,sum(quantity*price) as total_spend from (select orders.*,price,DATE_FORMAT(order_date,'%Y-%m') as month from orders left join Product on orders.product_id = Product.product_id) as temp group by customer_id,month) select customer_id, name from Customers where customer_id in (select customer_id from a where month ='2020-07' and total_spend >=100) and customer_id in (select customer_id from a where month ='2020-06' and total_spend >=100)
with base as (select c.customer_id, c.name, substring(order_date,6,2) as month, sum(o.quantity * p.price) as spent from customers c left join orders o on c.customer_id = o.customer_id left join product p on o.product_id = p.product_id where o.order_date between '2020-06-01' and '2020-07-31' group by 1,2,3) select distinct customer_id, name from base where spent >= 100 group by 1,2 having count(distinct month) = 2
with c as (select customer_id from (select o.customer_id,month(o.order_date) mon ,o.quantity * p.price tot from orders o inner join product p on o.product_id = p.product_id where month(order_date) in (6,7)) a group by customer_id,mon having sum(tot) >=100) select c.customer_id,c1.name from c inner join customers c1 on c.customer_id = c1.customer_id group by customer_id having count(*) = 2
with cte as ( Select c.customer_id, c.name, date_format(o.order_date, '%Y-%m') as month, sum(p.price * o.quantity) as total_spend from Customers c join Orders o on c.customer_id = o.customer_id join Product p on o.product_id = p.product_id group by customer_id, month having total_spend >= 100 ) Select customer_id, name from cte where month in ('2020-06', '2020-07') group by customer_id having count(*) = 2
with cte as ( Select o.*,quantity*price as amountspent from orders as o inner join product as p on o.product_id=p.product_id ), next_cte as ( Select customer_id from ( select customer_id,Month(order_date) as Month,sum(amountspent) as AM from cte where Month(order_date)=6 or Month(order_date)=7 group by customer_id,2 having sum(amountspent)>=100 ) a group by 1 having count(*)>1 ) select c.customer_id,name from customers c inner join next_cte as nc on c.customer_id=nc.customer_id
with cte as ( Select o.customer_id, c.name, date_format(o.order_date, '%Y-%m') month, sum(p.price*o.quantity) total from Orders o join Product p on p.product_id = o.product_id join Customers c on c.customer_id = o.customer_id where (date_format(o.order_date, '%Y-%m') = '2020-06' or date_format(o.order_date, '%Y-%m') = '2020-07') group by 1,2,3 having sum(p.price*o.quantity) >= 100 ) Select c1.customer_id, c1.name from cte c1, cte c2 where c1.customer_id = c2.customer_id and c1.month = '2020-06' and c2.month = '2020-07'
with cte as ( select a.customer_id, a.name, month(b.order_date) as order_month, sum(b.quantity*c.price) as spent from customers a left join orders b on a.customer_id = b.customer_id left join product c on b.product_id = c.product_id group by a.customer_id, a.name, order_month ), cte2 as ( (select customer_id, name, order_month, spent from cte where order_month = 6 and spent >= 100) union all (select customer_id, name, order_month, spent from cte where order_month = 7 and spent >= 100) ) select customer_id, name from cte2 group by customer_id, name having count(name) > 1
with cte as ( select c.customer_id, c.name from customers c join product p join orders o on c.customer_id = o.customer_id and p.product_id = o.product_id where month(o.order_date) in (6,7) and year(o.order_date)=2020 group by o.customer_id, month(o.order_date) having sum(o.quantity * p.price) >= 100 ) select customer_id, name from cte group by customer_id having count(*) = 2
with cte as ( select c.customer_id, c.name, month(a.order_date) as month, sum(a.quantity*b.price) as total_sum from orders a left join product b on a.product_id = b.product_id left join customers c on a.customer_id = c.customer_id group by name, month ), jun as ( select customer_id, name, month, total_sum from cte where month = 6 and total_sum >= 100 ), jul as ( select customer_id, name, month, total_sum from cte where month = 7 and total_sum >= 100 ) select a.customer_id, a.name from jun a inner join jul b on a.customer_id = b.customer_id
with cte as ( select c.customer_id, c.name, year(o.order_date) orderyear, month(o.order_date) ordermonth,sum(o.quantity*p.price) as totalprice from customers c join orders o on c.customer_id = o.customer_id join product p on p.product_id = o.product_id where month(o.order_date) in (6,7) and year(o.order_date) = 2020 group by c.customer_id, c.name, year(o.order_date), month(o.order_date) ) select customer_id, name from ( select customer_id, name, sum(case when totalprice >= 100 then 1 else 0 end) as times from cte group by customer_id, name ) a where times > 1
with cte as ( select customer_id, sum(case when monthname(order_date) = 'June' then p.price*o.quantity else 0 end) as 'June_Sales', sum(case when monthname(order_date) = 'July' then p.price*o.quantity else 0 end) as 'July_Sales' from Orders o inner join Product p using (product_id) where year(order_date) = '2020' group by customer_id) select cte.customer_id, name from cte inner join customers using (customer_id) where June_Sales >= 100 and July_Sales >= 100
with cte as ( select distinct customer_id as cid, date_format(order_date,'%Y-%m') as dt from orders o join product p on o.product_id = p.product_id where date_format(order_date,'%Y-%m') in ('2020-06','2020-07') group by customer_id,date_format(order_date,'%Y-%m') having sum(quantity*price)>=100 ) select c.customer_id, c.name from customers c join cte on c.customer_id = cte.cid group by c.customer_id, c.name having count(cte.dt)=2
with cte as ( select extract(month from order_date) as Month, o.customer_id, sum(quantity*price) from Orders o inner join Product p on o.product_id = p.product_id where order_date >= '2020-06-01' and order_date < '2020-08-01' group by extract(month from order_date), o.customer_id having sum(quantity*price) >= 100 ) select customer_id, name from Customers where customer_id in ( select customer_id from cte group by customer_id having count(*) = 2 )
with cte as ( select month(order_date) as mo ,customer_id, sum(quantity*price) from orders o join product p on o.product_id = p.product_id where order_date between '2020-06-01' and '2020-07-31' group by month(order_date) ,customer_id having sum(quantity*price) >= 100 ) select c.customer_id, c.name from customers c join cte as cte1 on cte1.customer_id = c.customer_id and cte1.mo = 6 join cte as cte2 on cte2.customer_id = c.customer_id and cte2.mo = 7
with cte as ( select o.customer_id, c.name, extract(month from order_date) as order_month, sum(quantity*price) as total_sales from orders o join product p on o.product_id = p.product_id join customers c on o.customer_id = c.customer_id where order_date between '2020-06-01' and '2020-07-31' group by 1,2,3 having total_sales >= 100 ) select customer_id, name from cte group by 1,2 having count(customer_id) > 1
with cte as ( select o.customer_id, name, date_format(order_date, '%Y-%m') as od, sum(quantity*price) as pr from orders o left join customers c on o.customer_id = c.customer_id left join product p on o.product_id = p.product_id where date_format(order_date, '%Y-%m') in ('2020-06', '2020-07') group by o.customer_id, name, od having pr >= 100) select customer_id, name from cte group by customer_id, name having count(od) = 2
with cte as ( select o.customer_id, name, extract(month from order_date), sum(price*quantity) as s from orders o join product p on o.product_id=p.product_id join customers c on c.customer_id=o.customer_id where order_date between '2020-06-01' and '2020-07-31' group by 1,2,3 ) select customer_id, name from cte where s>=100 group by 1,2 having count(*)=2
with cte as (select a.customer_id, a.name, sum(case when left(order_date, 7) = '2020-06' then price*quantity else 0 end) as total_june, sum(case when left(order_date, 7) = '2020-07' then price*quantity else 0 end) as total_july from customers a join orders b on a.customer_id = b.customer_id join product c on b.product_id = c.product_id group by 1,2 ) select customer_id, name from cte where total_june >= 100 and total_july >= 100
with cte as (select a.customer_id, a.product_id,a.month, sum(a.quantity*b.price) as total from (select customer_id,product_id,month(order_date) as month, quantity from orders where customer_id in (select customer_id from orders where month(order_date) = 6) and customer_id in (select customer_id from orders where month(order_date) = 7)) a left join product b on a.product_id = b.product_id group by a.customer_id, a.month) select distinct c.customer_id, d.name from cte c left join customers d on c.customer_id = d.customer_id where c.customer_id in (select customer_id from cte where month = 6 and total >=100) and c.customer_id in (select customer_id from cte where month = 7 and total >= 100)
with cte as (select c.customer_id, c.name from orders as o join customers as c on o.customer_id = c.customer_id join product as p on o.product_id = p.product_id where order_date like '2020-06%' or order_date like '2020-07%' group by c.customer_id, month(order_date) having sum(o.quantity*p.price) >= 100) select customer_id, name from cte group by customer_id having count(*)>1
with cte as (select c.name, a.customer_id from (select o.*, p.price, (price*quantity) as total from orders o inner join product p on o.product_id = p.product_id) a inner join customers c on a.customer_id = c.customer_id WHERE MONTH(a.order_date) = 6 OR MONTH(a.order_date) = 7 GROUP BY a.customer_id, MONTH(a.order_date) HAVING SUM(a.total) >= 100) select name, customer_id from cte group by name having count(*) >=2
with cte as (select o.customer_id, sum(case when month(o.order_date) = 06 then o.quantity*price end) as June, sum(case when month(o.order_Date) = 07 then o.quantity*price end) as July from orders o join product p using (product_id) group by 1 order by 1 ) select c.customer_id, c.name from customers c join cte b on c.customer_id = b.customer_id and b.June >= 100 and b.July >= 100 order by 1
with cte as( select b.customer_id, sum(a.price*b.quantity) price,month(b.order_date) as d from product a inner join orders b using(product_id) where month(b.order_date) in (6,7) group by customer_id , month(b.order_date) having price >=100) select a.customer_id ,a.name from customers a inner join cte b using(customer_id) group by b.customer_id having count(*)=2
with cte as( select customer_id, month(O.order_date) as month_num, sum(O.quantity * P.price) as spent from Orders O join Product P on O.product_id = p.product_id group by 1,2 having month_num in (6,7)) select C.customer_id, C.name from Customers C join cte ct using (customer_id) group by 1,2 having sum(case when ct.spent >=100 then 1 else 0 end) =2
with cte as( select customer_id, month(order_date) as month, sum(price*quantity) as total from Orders o join Product p on o.product_id = p.product_id group by customer_id, month ), c2 as( select customer_id, sum(case when total >=100 then 1 else 0 end) as chec from cte where month = 6 or month = 7 group by customer_id ) select c.customer_id, name from Customers c left join c2 on c.customer_id = c2.customer_id where chec = 2
with cte as( select customer_id, sum(case when order_date between '2020-06-01' and '2020-06-30' then quantity*price else 0 end) as June, sum(case when order_date between '2020-07-01' and '2020-07-31' then quantity*price else 0 end) as July from orders inner join product on product.product_id = orders.product_id group by orders.customer_id ) select customer_id,name from customers inner join cte using (customer_id) where June >= 100 and July >= 100
with cte as( select o.customer_id, sum(case when left(o.order_date,7) = '2020-06' then o.quantity * p.price end) as a, sum(case when left(o.order_date,7) = '2020-07' then o.quantity * p.price end) as b from orders o join product p using(product_id) group by 1 ) select cte.customer_id, c.name from customers c join cte using(customer_id) where cte.a >= 100 and cte.b >= 100
with cte as( select order_id, o.customer_id, c.name, o.product_id, order_date, date_format(order_date, '%Y-%m') as order_month, quantity, p.price from Orders o left join Customers c on o.customer_id = c.customer_id left join Product p on o.product_id = p.product_id ) select customer_id, name from( select customer_id, name, case when order_month in ('2020-06', '2020-07') then 1 else 0 end as ind from( select customer_id, name, order_month from cte group by customer_id, name, order_month having sum(quantity * price) >= 100 )t )t1 group by customer_id, name having sum(ind) = 2
with cte as( select order_id, o.customer_id, name, product_id, order_date, quantity from customers as c right join orders as o on c.customer_id = o.customer_id), cte2 as( select order_id, customer_id, name, cte.product_id, order_date, quantity from cte left join product as p on cte.product_id = p.product_id where left(order_date,7) = '2020-06' or left(order_date,7) = '2020-07') select customer_id, name from ( select customer_id, name, sum(quantity*price) as total_price, month(order_date) as month from cte2 left join product as p on cte2.product_id = p.product_id group by 1,4) as sub where total_price >= 100 group by 1 having count(*)=2
with cte as(select a.customer_id,a.order_date, b.name, quantity*price cost from Orders a left join customers b on a.customer_id = b.customer_id left join Product c on a.product_id = c.product_id) select customer_id, name from (select customer_id, max(name) name, sum(case when Month(order_date)=6 AND Year(order_date)=2020 THEN cost ELSE 0 END) cost_Jun_2020, sum(case when Month(order_date)=7 AND Year(order_date)=2020 THEN cost ELSE 0 END) cost_Jul_2020 from cte group by customer_id) d where cost_Jun_2020 >= 100 AND cost_Jul_2020 >= 100
with cte1 as ( Select customer_id, order_date, extract(month from order_date) as mon, extract(year from order_date), price*quantity as rev from Orders o join Product p using(product_id) where (extract(month from order_date) = 6 or extract(month from order_date) = 7) and extract(year from order_date) = 2020 ),cte2 as ( Select customer_id, mon, sum(rev), case when sum(rev)>= 100 then 1 else 0 end as yes from cte1 group by 1,2 ),cte3 as( select customer_id from cte2 group by customer_id having sum(yes)=2 ) select customer_id, name from cte3 join Customers using(customer_id)
with cte1 as ( select customer_id , order_date , price , quantity from Orders inner join Product using (product_id) ), jun as ( select customer_id from cte1 where order_date between '2020-06-01' and '2020-06-30' group by 1 having sum(price * quantity) >= 100 ), jul as ( select customer_id from cte1 where order_date between '2020-07-01' and '2020-07-31' group by 1 having sum(price * quantity) >= 100 ) select customer_id , name from Customers where customer_id in (select * from jun) and customer_id in (select * from jul)
with cte1 as (select c.customer_id,c.name,price,quantity,month(order_date) as month from customers c inner join orders r on c.customer_id = r.customer_id inner join product p on p.product_id = r.product_id where order_date between '2020-06-01' and '2020-07-31') select customer_id,name from ( select customer_id,name,month,sum(price*quantity) as spent_month from cte1 group by customer_id,name,month having sum(price*quantity) >= 100) t group by 1,2 having count(month) = 2
with cteResult as (select c.customer_id, name, month(order_date),sum(quantity*price) from orders o join product p on o.product_id=p.product_id join customers c on c.customer_Id=o.customer_id where month(order_date) in (6,7) group by c.customer_id,name,month(order_date) having sum(quantity*price)>=100) select customer_id,name from cteResult group by customer_id,name having count(*)>1
with cte_june as ( select customer_id from Orders Inner Join Product on Orders.product_id = Product.product_id where YEAR(order_date)=2020 and MONTH(order_date)=06 group by customer_id having sum(quantity*price) >=100 ), cte_july as ( select customer_id from Orders Inner Join Product on Orders.product_id = Product.product_id where YEAR(order_date)=2020 and MONTH(order_date)=07 group by customer_id having sum(quantity*price) >=100 ) select Customers.customer_id, name from cte_june inner join Customers on Customers.customer_id = cte_june.customer_id where cte_june.customer_id in ( Select customer_id from cte_july )
with cust_buy as ( select orders.customer_id, date_format(orders.order_date, '%Y-%m') as month, (product.price*orders.quantity) as purchase from orders join product on orders.product_id = product.product_id ) ,june_buy as ( select customer_id, month, sum(purchase) as tot_price from cust_buy where month = '2020-06' group by customer_id, month having tot_price >= 100 ) , july_buy as ( select customer_id,month, sum(purchase) as tot_price from cust_buy where month = '2020-07' group by customer_id, month having tot_price >= 100 ) select customer_id, name from customers where customer_id in ( select distinct customer_id from june_buy where customer_id in (select customer_id from july_buy) )
with customer_spending as ( select a.customer_id, a.name, month(orders.order_date) as mth, sum(orders.quantity*product.price) as spending from customers a join orders on a.customer_id= orders.customer_id join Product on orders.product_id = Product.product_id where year(order_date) = 2020 and month(orders.order_date) in (6,7) group by a.customer_id, a.name, month(orders.order_date) ) select distinct a.customer_id, a.name from customer_spending a where spending >= 100 and mth =6 and a.customer_id in (select distinct customer_id from customer_spending where spending >=100 and mth = 7)
with frequency as (select customer_id, name, sum(quantity * price) as total, month(order_date) as month from Orders o join Customers c using(customer_id) join Product p using(product_id) where year(order_date) = 2020 group by customer_id, name, month) select customer_id, name from frequency where (month = 6 or month = 7) and total >= 100 group by customer_id, name having count(name) = 2
with group_customer as (select c.customer_id, c.name, sum(case when year(order_date) = 2020 and month(order_date)=6 then quantity * price else 0 end) as june_cost, sum(case when year(order_date)=2020 and month(order_date)=7 then quantity*price else 0 end) as july_cost from customers c, orders o, product p where c.customer_id=o.customer_id and o.product_id = p.product_id group by c.customer_id, c.name ) select customer_id, name from group_customer where june_cost>=100 and july_cost>=100
with info as (SELECT c.customer_id,c.name,p.product_id, p.price,o.order_date,o.quantity FROM Product p right join Orders o on p.product_id = o.product_id left join Customers c on o.customer_id = c.customer_id ) select customer_id, name from (select month(order_date), customer_id, name,sum(price*quantity) from info where month(order_date)=6 or month(order_date)=7 group by month(order_date),customer_id HAVING sum(price*quantity) >= 100) a GROUP BY customer_id HAVING count(customer_id) = 2
with june as ( SELECT customer_id FROM Orders O JOIN Product P ON O.product_id = P.product_id WHERE Year(order_date) = 2020 AND Month(Order_date) = 6 GROUP BY customer_id HAVING SUM(O.quantity*P.price) >= 100), july as( SELECT customer_id FROM Orders O JOIN Product P ON O.product_id = P.product_id WHERE Year(order_date) = 2020 AND Month(Order_date) = 7 GROUP BY customer_id HAVING SUM(O.quantity*P.price) >= 100) SELECT C.customer_id,C.name FROM Customers C JOIN june ON C.customer_id = june.customer_id JOIN july ON june.customer_id = july.customer_id ORDER BY customer_id
with june as ( select c.customer_id, c.name from Customers c inner join Orders o on c.customer_id = o.customer_id inner join product p on p.product_id = o.product_id where o.order_date between '2020-06-01' and '2020-06-30' group by c.customer_id, c.name having sum(o.quantity * p.price) >= 100 ) , july as ( select c.customer_id, c.name from Customers c inner join Orders o on c.customer_id = o.customer_id inner join product p on p.product_id = o.product_id where o.order_date between '2020-07-01' and '2020-07-31' group by c.customer_id, c.name having sum(o.quantity * p.price) >= 100 ) select m6.customer_id, m6.name from june m6 inner join july m7 on m6.customer_id = m7.customer_id group by m6.customer_id, m6.name
with june as ( select customer_id from orders o inner join product p on o.product_id = p.product_id where order_date between '2020-06-01' and '2020-06-30' group by customer_id having sum(price * quantity) >= 100 ), july as ( select customer_id from orders o inner join product p on o.product_id = p.product_id where order_date between '2020-07-01' and '2020-07-31' group by customer_id having sum(price * quantity) >= 100 ) select c.customer_id, c.name from Customers c inner join june on c.customer_id = june.customer_id inner join july on c.customer_id = july.customer_id
with june as (select distinct * from Orders where order_date >= "2020-06-01" and order_date <= "2020-06-30"), july as (select distinct * from Orders where order_date >= "2020-07-01" and order_date <= "2020-07-31"), june_price as (select customer_id, sum(price*quantity) as price from june left join Product on Product.product_id = june.product_id group by customer_id), july_price as (select customer_id, sum(price*quantity) as price from july left join Product on Product.product_id = july.product_id group by customer_id) select june_price.customer_id, name from june_price inner join july_price on june_price.customer_id = july_price.customer_id inner join Customers on june_price.customer_id = Customers.customer_id where june_price.price >= 100 and july_price.price >= 100
with june_customers as (select customer_id from Product p join Orders o on p.product_id = o.product_id where month(order_date) = '06' group by customer_id having sum(quantity * price) >= 100), july_customers as (select customer_id from Product p join Orders o on p.product_id = o.product_id where month(order_date) = '07' group by customer_id having sum(quantity * price) >= 100) select customer_id, name from customers where customer_id in (select customer_id from june_customers) and customer_id in (select customer_id from july_customers)
with june_customers as (select customers.customer_id from orders join customers join product on orders.customer_id = customers.customer_id and orders.product_id = product.product_id where orders.order_date between '2020-06-01' and '2020-06-30' group by customers.customer_id having sum(product.price * orders.quantity) >= 100), july_customers as (select customers.customer_id from orders join customers join product on orders.customer_id = customers.customer_id and orders.product_id = product.product_id where orders.order_date between '2020-07-01' and '2020-07-31' group by customers.customer_id having sum(product.price * orders.quantity) >= 100) select customer_id, name from customers where customer_id in (select customer_id from june_customers) and customer_id in (select customer_id from july_customers)
with june_sales as (select Orders.customer_id, Orders.quantity, Product.price from Orders left join Product on Orders.product_id = Product.product_id where order_date between date("2020-06-01") and date("2020-06-30")), july_sales as (select Orders.customer_id, Orders.quantity, Product.price from Orders left join Product on Orders.product_id = Product.product_id where order_date between date("2020-07-01") and date("2020-07-31")) select c.customer_id, c.name from Customers c left join june_sales on c.customer_id = june_sales.customer_id left join july_sales on c.customer_id = july_sales.customer_id group by c.customer_id having sum(june_sales.quantity * june_sales.price) >= 100 and sum(july_sales.quantity * july_sales.price) >= 100
with month as (select customer_id, month(order_date) as month, sum(quantity*price) as spent from Orders o join Product p on p.product_id = o.product_id where order_date between '2020-06-01' and '2020-07-31' group by customer_id, month(order_date) having sum(quantity*price) >= 100) select m1.customer_id,c.name from month m1 join month m2 on m1.customer_id = m2.customer_id and m1.month = 6 and m2.month = 7 join customers c on c.customer_id = m1.customer_id
with month_sp as( select customer_id, month(order_date) as month, sum(p.price * o.quantity) as total_price from Orders o join Product p on o.product_id = p.product_id where month(order_date) = 6 or month(order_date) = 7 group by customer_id, month(order_date) ) select m.customer_id, c.name from month_sp m join Customers c on m.customer_id = c.customer_id where m.total_price >= 100 group by m.customer_id having count(month) =2
with monthly_spend_gr_100 as ( select Customers.customer_id ,Customers.name ,DATE_FORMAT(Orders.order_date, "%M") as order_month ,sum(Orders.quantity*Product.price) as spend from Orders inner join Customers on Orders.customer_id = Customers.customer_id inner join Product on Orders.product_id = Product.product_id where order_date between '2020-06-01' and '2020-07-31' group by Customers.customer_id ,Customers.name ,DATE_FORMAT(Orders.order_date, "%M") having sum(Orders.quantity*Product.price) >= 100 ) select customer_id ,name from monthly_spend_gr_100 group by customer_id ,name having count(distinct order_month) = 2
with name1 as (select distinct c.customer_id,c.name from orders a LEFT JOIN product b On a.product_id = b.product_id JOIN customers c On c.customer_id = a.customer_id where left(order_date,7) = '2020-06' group by 1,left(order_date,7) having sum(price*quantity) >= 100 ), name2 as ( select distinct c.customer_id,c.name from orders a LEFT JOIN product b On a.product_id = b.product_id JOIN customers c On c.customer_id = a.customer_id where left(order_date,7) = '2020-07' group by 1,left(order_date,7) having sum(price*quantity) >= 100 ) select distinct a.customer_id,a.name from name1 a JOIN name2 b On a.name = b.name
with ord_quant as (Select o.customer_id, substring(o.order_date,1,7) as st, sum(p.price*o.quantity) as tot from Orders o join product p on o.product_id=p.product_id where o.order_date >='2020-06-01' and o.order_date<='2020-07-31' group by 1,2 having sum(p.price*o.quantity) >=100) select o.customer_id,c.name from customers c join ord_quant o on c.customer_id=o.customer_id group by 1,2 having count(st)=2
with order_month(order_id,customer_id,product_id,month,quantity) as (select order_id,customer_id,product_id,month(order_date),quantity from orders where month(order_date)=6 or month(order_date)=7) select * from (select c.customer_id as CUSTOMER_ID, name as NAME from product p join order_month o using(product_id) join customers c on o.customer_id = c.customer_id group by c.customer_id,month having sum(price*quantity)>=100) as tem group by CUSTOMER_ID Having count(*)=2
with r as ( select c.customer_id, c.name, p.price, month(o.order_date) as month, sum(p.price * o.quantity) as total_sum from customers c join orders o on c.customer_id = o.customer_id join product p on p.product_id = o.product_id group by c.customer_id, month(o.order_date) having total_sum >= 100 and month in (6, 7) ) select customer_id, name from r group by customer_id, name having count(*) >= 2
with r as (select o.customer_id,month(o.order_date) as month,c.name,sum(p.price*o.quantity) as total_price from Orders o join Product p on p.product_id= o.product_id join Customers c on c.customer_id= o.customer_id where month(o.order_date) between 6 and 7 group by o.customer_id, month(o.order_date) having total_price >=100 and month in (6,7) ) SELECT customer_id, name FROM r GROUP BY customer_id HAVING COUNT(*) = 2
with t as ( select o.customer_id, c.name, month(order_date) as o_month from Orders o LEFT JOIN Product p on o.product_id = p.product_id LEFT JOIN Customers c on o.customer_id = c.customer_id where year(order_date) = 2020 and month(order_date) IN (6,7) group by customer_id, c.name, month(order_date) having sum(p.price*o.quantity) >= 100 ) select customer_id, name from t group by customer_id, name having count(distinct o_month) = 2
with t1 as ( select a.customer_id, c.name, sum(b.price * a.quantity) as cost, date_format (order_date, "%M") as month from Orders as a join Product as b on a.product_id=b.product_id join Customers as c on a.customer_id=c.customer_id where date_format (order_date, "%M") in ("June","July") group by a.customer_id,month ) select customer_id, name from (select customer_id, name, sum(case when cost >= 100 then 1 else 0 end) as s from t1 group by customer_id having s=2) t2
with t1 as ( select c.customer_id, c.name name, month(order_date) as mon, sum(quantity*price) as sum from orders o left join customers c on c.customer_id=o.customer_id left join product p on p.product_id=o.product_id group by 1,2,3 having sum>=100), t2 as ( select a.customer_id from ( (select distinct customer_id, name from t1 where mon='06')a inner join (select distinct customer_id, name from t1 where mon='07')b on a.customer_id=b.customer_id) ) select distinct customer_id, name from t1 where customer_id in (select customer_id from t2)
with t1 as ( select o.customer_id, c.name, case when order_date between '2020-06-01' and '2020-06-30' then "June" when order_date between '2020-07-01' and '2020-07-31' then "July" else null end as month, sum(quantity*price) as total from Orders as o left join Customers as c on o.customer_id=c.customer_id left join Product as p on o.product_id = p.product_id where order_date between'2020-06-01' and '2020-07-31' group by o.customer_id, month) select customer_id, name from t1 where total>=100 group by customer_id having count(*) =2
with t1 as (select c.customer_id,c.name, month(o.order_date) as month,sum(p.price*o.quantity) as tot_sale from customers c join orders o on c.customer_id=o.customer_id join product p on p.product_id=o.product_id where (month(o.order_date)=06 or month(o.order_date)=07) and year(o.order_date)=2020 group by c.customer_id,c.name,month ) select distinct customer_id,name from t1 where (customer_id,name) in (select customer_id,name from t1 where month=06 and tot_sale>=100) and (customer_id,name) in (select customer_id,name from t1 where month=07 and tot_sale>=100)
with t1 as( SELECT customer_id, MONTH(order_date) as month, YEAR(order_date) as year, SUM(quantity*p.price) as total FROM Orders o LEFT JOIN Product p ON o.product_id = p.product_id WHERE MONTH(order_date) IN (6,7) and YEAR(order_date) = 2020 GROUP BY 1,2,3 ) select t2.customer_id, c.name from (select customer_id from t1 where total >= 100 group by customer_id having count(*) = 2) t2 left join customers c on t2.customer_id = c.customer_id
with t1 as( select c.customer_id, name, sum(price*quantity) as sales from customers c join orders o on c.customer_id = o.customer_id join Product p on p.product_id = o.product_id where order_date between '2020-06-01' and '2020-07-31' group by c.customer_id, name, month(order_date) having sales>=100) select customer_id, name from t1 group by customer_id having count(customer_id)>1
with table1 as (select c.customer_id, c.name from Customers c left join Orders o on c.customer_id = o.customer_id left join Product p on p.product_id = o.product_id where o.order_date like '2020-06%' group by 1,2 Having sum(p.price * o.quantity)>100), table2 as (select c.customer_id, c.name from Customers c left join Orders o on c.customer_id = o.customer_id left join Product p on p.product_id = o.product_id where o.order_date like '2020-07%' group by 1,2 Having sum(p.price * o.quantity)>=100) select t1.customer_id, t1.name from table1 t1 join table2 t2 ON t1.customer_id = t2.customer_id
with tb1 as( select distinct o.customer_id, month(o.order_date) as month,sum(p.price*o.quantity) as total_price from Orders o left join Product p on o.product_id = p.product_id where month(o.order_date) = 6 or month(o.order_date) = 7 group by o.customer_id, month(o.order_date)) select tb2.customer_id, c.name from (select tb1.customer_id from tb1 where customer_id in (select customer_id from tb1 where month = 6 and total_price>=100) and month = 7 and total_price>=100) tb2 left join Customers c on tb2.customer_id = c.customer_id
with tb1 as(select customer_id, date_format(order_date, '%Y-%m') as month, sum(p.price*o.quantity) as sales from orders o left join product p on o.product_id = p.product_id group by customer_id, month having sales>=100 ) select tb1.customer_id, c.name from tb1 left join customers c on tb1.customer_id = c.customer_id where month = '2020-06' or month = '2020-07' group by c.customer_id having count(c.customer_id) =2
with tb1 as(select order_id,customer_id,O.product_id,order_date,quantity,price from Orders as O join Product as P on P.product_id=O.product_id), tb2 as ( select sum(price*quantity) as totalPrice, month(order_date) as month1,customer_id from tb1 where month(order_date)=7 or month(order_date)=6 group by month1,customer_id having totalPrice>=100 ), tb3 as ( select customer_id from tb2 group by customer_id having count(distinct month1)>1 ) select tb3.customer_id,name from tb3 join Customers on tb3.customer_id=Customers.customer_id
with tbA as ( select c.customer_id, c.name, month(o.order_date) as mDate, year(o.order_date) as yDate, sum(p.price*o.quantity) as moneySpent from customers as c join orders as o on c.customer_id = o.customer_id join product as p on p.product_id = o.product_id where year(o.order_date) = 2020 and month(o.order_date) in (6,7) group by c.customer_id, c.name, month(o.order_date), year(o.order_date) ) select t1.customer_id, t1.name from tbA as t1 join tbA as t2 on t1.customer_id = t2.customer_id and t1.mDate = 6 and t2.mDate = 7 where t1.moneySpent >= 100 and t2.moneySpent >= 100
with tbl1 as ( select Customers.customer_id as cust, Customers.name, SUM(Orders.quantity * Product.price) as amount, MONTH(Orders.order_date) as mnth from Customers join Orders using (customer_id) join Product using (product_id) group by Customers.customer_id, MONTH(Orders.order_date)), jun_tab as ( select * from tbl1 where mnth = 6 and amount >= 100), jul_tab as ( select * from tbl1 where mnth = 7 and amount >= 100) select jun_tab.cust as customer_id, jun_tab.name from jun_tab join jul_tab using (cust)
with temp as ( select customer_id, left(order_date,7) as month, sum(quantity*price) as spent from orders o join product p on o.product_id=p.product_id where left(order_date,7)='2020-06' or left(order_date,7)='2020-07' group by 1,2 having sum(quantity*price)>=100 ) select c.customer_id, name from customers c join temp t on c.customer_id=t.customer_id group by 1,2 having count(c.customer_id)=2
with temp as (select customer_id, left(order_date, 7) as month, sum(quantity*price) as spend from orders o join product p on o.product_id=p.product_id where left( order_date , 7) >= '2020-06' and left(order_date, 7) <= '2020-07' group by customer_id, month having spend>=100 ) select distinct t.customer_id, name from temp t join customers c on c.customer_id = t.customer_id where t.customer_id in (select customer_id from temp where month = '2020-07' ) and t.customer_id in (select customer_id from temp where month = '2020-06' )
with temp as (select order_id, customer_id, product_id, quantity, case when month(order_date)=6 then "June" when month(order_date)=7 then "July" else Null end Month from orders), temp2 as (select temp.month, temp.customer_id, (temp.quantity*Product.price) as sales from temp join Product on Product.product_id=temp.product_id and month is Not Null), temp3 as (select Customers.customer_id, Customers.name, temp2.month from temp2 join Customers on temp2.customer_id=Customers.customer_id group by Customers.customer_id, temp2.month having sum(temp2.sales)>=100) select temp3.customer_id, temp3.name from temp3 group by customer_id having count(*)>1
with temp as( select c.customer_id, c.name, sum(p.price * o.quantity) as cost from Customers c inner join Orders o on c.customer_id = o.customer_id inner join Product p on o.product_id = p.product_id where o.order_date like '2020-06%' or o.order_date like '2020-07%' group by c.customer_id, c.name, month(o.order_date)) select customer_id, name from temp group by customer_id, name having sum(case when cost >= 100 then 1 else 0 end) = 2
with temp as( select o.customer_id, name, month(order_date) as mnt, sum(price*quantity) as tot from orders o left join product p on o.product_id = p.product_id left join customers c on o.customer_id = c.customer_id group by o.customer_id, name, month(order_date) having sum(price*quantity) >=100 and mnt in (6,7)) select customer_id, name from temp group by customer_id, name having round(avg(mnt), 2) > 6 and round(avg(mnt), 2) < 7
with tmp as ( SELECT c.customer_id, c.name, DATE_FORMAT(o.order_date,'%M %Y') AS year_month_dt, p.price * o.quantity as order_amount FROM Orders as o INNER JOIN Customers as c on o.customer_id = c.customer_id INNER JOIN Product as p on o.product_id = p.product_id WHERE o.order_date>=date("2020-06-01") AND o.order_date<=date("2020-07-31") ) select customer_id, name FROM ( select customer_id, name, year_month_dt, sum(order_amount) as month_amount from tmp group by customer_id, year_month_dt ) as tmp2 WHERE month_amount>=100 group by customer_id HAVING count(customer_id)>=2
with tmp as ( SELECT c.customer_id, c.name, DATE_FORMAT(o.order_date,'%M %Y') AS year_month_dt, sum(p.price * o.quantity) as order_amount FROM Orders as o INNER JOIN Customers as c on o.customer_id = c.customer_id INNER JOIN Product as p on o.product_id = p.product_id WHERE o.order_date>=date("2020-06-01") AND o.order_date<=date("2020-07-31") group by c.customer_id, DATE_FORMAT(o.order_date,'%M %Y') having sum(p.price * o.quantity)>=100 ) select customer_id, name from tmp group by customer_id having count(customer_id)>=2
with tmp as ( select extract(month from order_date) as month, customer_id, sum(quantity * price) as spending from orders o join product p on o.product_id = p.product_id and o.order_date >= '2020-06-01' and o.order_date < '2020-08-01' group by month, customer_id having spending>= 100 ) select tmp.customer_id, name from tmp join customers c on tmp.customer_id = c.customer_id group by tmp.customer_id, name having count(*) = 2
with tmp as (select customer_id, date_format(a.order_date, '%Y-%m') as order_date, sum(a.quantity*b.price) as sales from orders a join product b on a.product_id = b.product_id group by 1,2 having sum(a.quantity*b.price) >= 100) select distinct a.customer_id, b.name from tmp a join customers b on a.customer_id = b.customer_id where a.order_date in ('2020-06', '2020-07') group by a.customer_id having count(distinct a.order_date) = 2
with totals as (select C.customer_id CID, C.Name name, sum(P.price*O.quantity) total, DATE_FORMAT(O.order_date, "%M %2020") dateFix from Orders O join Customers C on O.customer_id=C.customer_id join Product P on P.product_id = O.product_id where O.order_date between "2020-06-01" and "2020-07-31" group by CID, name, dateFix having total >= 100) select distinct twice2.customer_id, twice2.name from (select totals.CID "customer_id", totals.name "name", count(*) over (partition by totals.name) twice from totals) twice2 where twice2.twice > 1
with x as (select c.customer_id,c.name, extract( month from o.order_date) as month, sum(p.price*o.quantity) as total_price from orders o inner join customers c on c.customer_id=o.customer_id inner join product p on p.product_id=o.product_id where extract( month from o.order_date) in (6,7) group by o.customer_id,month having sum(p.price*o.quantity) >99 order by c.customer_id ), y as ( select *,coalesce(lead(total_price) over(partition by customer_id order by month),0) as t from x ) select customer_id,name from y where total_price>99 and t>99
with x as (select distinct o.customer_id, c.name, month(order_date) as m, sum(o.quantity*p.price) as tot from Orders as o left join Product as p on o.product_id =p.product_id left join Customers as c on o.customer_id = c.customer_id group by customer_id, m having m = 6 or m = 7 ), x1 as (select * from x where customer_id in (select customer_id from x group by customer_id having count(m)=2) ) select distinct customer_id, name from x1 having customer_id not in (select customer_id from x1 where tot < 100)
