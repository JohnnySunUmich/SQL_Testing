SELECT A.project_id, A.employee_id FROM (SELECT P.project_id, P.employee_id, DENSE_RANK() OVER(PARTITION BY P.project_id ORDER BY E.experience_years DESC) AS exp FROM Project P JOIN Employee E ON P.employee_id = E.employee_id) A WHERE A.exp = 1
SELECT DISTINCT a.project_id, a.employee_id FROM ( SELECT project_id, Project.employee_id, experience_years, MAX(experience_years) OVER (PARTITION BY project_id) AS "max_years" FROM Project JOIN Employee on Project.employee_id = Employee.employee_id ) AS a WHERE a.experience_years = a.max_years
SELECT DISTINCT combined_table.project_id, combined_table.employee_id FROM (SELECT a.project_id, MAX(b.experience_years) OVER (PARTITION BY a.project_id) AS max_exp_years_project FROM Project a JOIN Employee b ON a.employee_id = b.employee_id ) max_table INNER JOIN (SELECT a.project_id,b.employee_id, b.experience_years FROM Project a JOIN Employee b ON a.employee_id = b.employee_id ) combined_table ON max_table.project_id = combined_table.project_id AND max_table.max_exp_years_project = combined_table.experience_years ORDER BY project_id
SELECT P.project_id, E.employee_id FROM Project P JOIN Employee E ON P.employee_id = E.employee_id JOIN( SELECT P.project_id, MAX(E.experience_years) as exp FROM Project P, Employee E WHERE P.employee_id = E.employee_id GROUP BY P.project_id) AS T on E.experience_years = T.exp AND P.project_id = T.project_id
SELECT P.project_id, P.employee_id FROM Project P JOIN Employee E ON P.employee_id=E.employee_id WHERE (P.project_id,E.experience_years) IN (SELECT P2.project_id, MAX(E2.experience_years) FROM Project P2 JOIN Employee E2 ON P2.employee_id=E2.employee_id GROUP BY P2.project_id)
SELECT P.project_id, P.employee_id FROM Project P LEFT JOIN Employee E ON P.employee_id = E.employee_id WHERE (P.project_id, E.experience_years) IN (SELECT P.project_id, MAX(E.experience_years) max_exp FROM Project P LEFT JOIN Employee E ON P.employee_id = E.employee_id GROUP BY P.project_id)
SELECT PROJECT_ID,EMPLOYEE_ID FROM ( SELECT P.PROJECT_ID,P.EMPLOYEE_ID,RANK() OVER(PARTITION BY P.PROJECT_ID ORDER BY E.EXPERIENCE_YEARS DESC) AS RK FROM PROJECT P LEFT JOIN EMPLOYEE E ON P.EMPLOYEE_ID=E.EMPLOYEE_ID )X WHERE RK=1
SELECT PROJECT_ID,P.EMPLOYEE_ID FROM PROJECT P JOIN EMPLOYEE E ON P.EMPLOYEE_ID = E.EMPLOYEE_ID WHERE (PROJECT_ID,EXPERIENCE_YEARS) IN (SELECT PROJECT_ID,MAX(EXPERIENCE_YEARS) FROM PROJECT P JOIN EMPLOYEE E ON E.EMPLOYEE_ID = P.EMPLOYEE_ID GROUP BY PROJECT_ID)
SELECT Project.project_id, Employee.employee_id FROM Project INNER JOIN Employee ON Project.employee_id = Employee.employee_id WHERE (project_id , Employee.experience_years) IN (SELECT project_id, max(e.experience_years) AS max_exp_year FROM Employee e, Project p WHERE e.employee_id = p.employee_id GROUP BY project_id )
SELECT Project.project_id, Project.employee_id FROM Project INNER JOIN (SELECT project_id, max(experience_years) as years FROM Project INNER JOIN Employee ON Project.employee_id = Employee.employee_id GROUP BY project_id ) AS Maxes ON Maxes.project_id = Project.project_id INNER JOIN Employee ON Project.employee_id = Employee.employee_id WHERE Employee.experience_years = Maxes.years
SELECT a.project_id, a.employee_id FROM (SELECT p.project_id, p.employee_id, rank() over(PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS ranking FROM project p JOIN employee e ON p.employee_id=e.employee_id) AS a WHERE a.ranking=1
SELECT b. project_id,b.employee_id FROM ( SELECT project_id, p.employee_id,experience_years, RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) AS exp_rank FROM Project p JOIN Employee e ON p. employee_id = e. employee_id)b WHERE b.exp_rank = 1
SELECT p.project_id, e.employee_id from project as p inner join employee as e on e.employee_id = p.employee_id where (p.project_id, e.experience_years) in (SELECT p.project_id, max(e.experience_years) from project as p inner join employee as e on e.employee_id = p.employee_id group by project_id)
SELECT p.project_id, p.employee_id FROM Project as p JOIN Employee as e ON p.employee_id = e.employee_id WHERE (p.project_id, e.experience_years) in (select a.project_id, max(b.experience_years) from Project as a join employee as b on a.employee_id = b.employee_id GROUP BY project_id )
SELECT p.project_id, p.employee_id FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id WHERE (p.project_id, e.experience_years) IN ( SELECT project_id, MAX(e.experience_years) years FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id GROUP BY 1)
SELECT p.project_id, p.employee_id FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id WHERE (p.project_id, e.experience_years) IN (SELECT p.project_id, MAX(e.experience_years) FROM Employee e INNER JOIN Project p ON e.employee_id = p.employee_id GROUP BY p.project_id)
SELECT p.project_id, p.employee_id FROM Project p JOIN Employee e ON p.employee_id = e.employee_id WHERE (p.project_id, e.experience_years) in (SELECT p.project_id, MAX(e.experience_years) FROM Project p JOIN Employee e ON p.employee_id = e.employee_id GROUP BY p.project_id) ORDER BY p.project_id
SELECT p.project_id, p.employee_id FROM Project p JOIN Employee e ON p.employee_id = e.employee_id WHERE (project_id, experience_years) IN ( SELECT p.project_id, MAX(experience_years) FROM Project p JOIN Employee e ON p.employee_id = e.employee_id GROUP BY 1 )
SELECT p.project_id, p.employee_id FROM Project p JOIN Employee e ON p.employee_id=e.employee_id WHERE (p.project_id, e.experience_years) IN (SELECT p.project_id, MAX(experience_years) FROM Project p JOIN Employee e ON p.employee_id=e.employee_id GROUP BY 1)
SELECT p.project_id, p.employee_id FROM project p JOIN employee e ON e.employee_id = p.employee_id WHERE (p.project_id, e.experience_years) IN ( SELECT a.project_id, MAX(b.experience_years) FROM project a JOIN employee b ON a.employee_id = b.employee_id GROUP BY a.project_id)
SELECT p.project_id,p.employee_id from project p inner join employee e on e.employee_id=p.employee_id WHERE (p.project_id, e.experience_years) in (SELECT p.project_id, max(e.experience_years) from project as p inner join employee e on e.employee_id=p.employee_id group by project_id)
SELECT p1.project_id , p1.employee_id FROM ( SELECT p.project_id , p.employee_id , DENSE_RANK() OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS yoe_rk FROM Project p LEFT OUTER JOIN EMployee e ON e.employee_id = p.employee_id ) p1 WHERE p1.yoe_rk = 1
SELECT p1.project_id, p1.employee_id employee_id FROM ( SELECT p.project_id, p.employee_id, RANK() OVER(PARTITION BY project_id ORDER BY e.experience_years DESC) years_rk FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id) p1 WHERE years_rk = 1
SELECT project_id, employee_id FROM ( SELECT Project.project_id, Project.employee_id, RANK() OVER (PARTITION BY Project.project_id ORDER BY experience_years DESC) AS ranks FROM Project LEFT JOIN Employee ON Project.employee_id = Employee.employee_id) sub WHERE ranks = 1
SELECT project_id, employee_id FROM ( SELECT p.project_id, p.employee_id, DENSE_RANK () OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS rnk FROM project p JOIN employee e ON p.employee_id = e.employee_id) t WHERE rnk = 1
SELECT project_id, employee_id FROM ( SELECT p.project_id, p.employee_id, RANK() OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS rnk FROM Project p LEFT JOIN Employee e USING (employee_id)) t WHERE rnk = 1
SELECT project_id, employee_id FROM ( SELECT p.project_id, p.employee_id, RANK() OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS years_rank FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id ) r WHERE years_rank = 1 ORDER BY project_id, employee_id
SELECT project_id, employee_id FROM ( SELECT p.project_id, p.employee_id, RANK() OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) experience_rank FROM project p LEFT JOIN employee e ON p.employee_id = e.employee_id ) t WHERE experience_rank = 1
SELECT project_id, employee_id FROM ( SELECT p.project_id, p.employee_id, e.experience_years, RANK() OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS years_rank FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id ) r WHERE years_rank = 1 ORDER BY project_id, employee_id
SELECT project_id, employee_id FROM ( SELECT p.project_id, p.employee_id, experience_years, MAX(experience_years) OVER(PARTITION BY p.project_id) AS max_years FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id ) t WHERE experience_years = max_years
SELECT project_id, employee_id FROM ( SELECT project_id, e.employee_id, e.experience_years, MAX(experience_years) OVER (PARTITION BY project_id) as max_experience_years FROM employee e LEFT JOIN project p ON e.employee_id = p.employee_id ) z WHERE experience_years = max_experience_years AND project_id IS NOT NULL
SELECT project_id, employee_id FROM (SELECT P.project_id AS project_id, P.employee_id AS employee_id, RANK() OVER(PARTITION BY P.project_id ORDER BY E.experience_years DESC) AS rnk FROM Project P JOIN Employee E ON P.employee_id=E.employee_id) Temp WHERE rnk=1
SELECT project_id, employee_id FROM (SELECT p.project_id, p.employee_id, DENSE_RANK() OVER(partition by p.project_id ORDER BY e.experience_years DESC) as rnk FROM project p JOIN employee e ON p.employee_id = e.employee_id ) a WHERE a.rnk = 1
SELECT project_id, employee_id FROM (SELECT p.project_id, p.employee_id, dense_rank() over (partition by p.project_id order by experience_years DESC) as rownum FROM employee as e INNER JOIN project as p ON p.employee_id = e.employee_id) as sub WHERE rownum = 1
SELECT project_id, employee_id FROM (SELECT p.project_id, p.employee_id, e.experience_years, dense_rank() OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) ee FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id) a WHERE ee = 1
SELECT project_id, employee_id FROM (SELECT p.project_id, p.employee_id, e.name, e.experience_years, RANK() OVER(PARTITION BY p.project_id ORDER BY e.experience_years DESC) rk FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id) tmp WHERE rk =1
SELECT project_id, employee_id FROM (SELECT p.project_id, p.employee_id, rank() over (partition by p.project_id order by experience_years DESC) as rownum FROM employee as e INNER JOIN project as p ON p.employee_id = e.employee_id) as sub WHERE rownum = 1
SELECT project_id, employee_id FROM (SELECT project_id, e.employee_id, experience_years, RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) AS ranking FROM Project p JOIN Employee e ON p.employee_id = e.employee_id) a WHERE ranking = 1
SELECT project_id, employee_id FROM (SELECT project_id, employee_id, RANK() OVER (PARTITION BY project_id ORDER BY experience_years DESC) AS rnk FROM Project JOIN Employee USING (employee_id)) t WHERE rnk = 1
SELECT project_id, employee_id FROM (SELECT project_id, employee_id, RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) AS RNK FROM Project JOIN Employee USING(employee_id)) TEMP WHERE RNK = 1
SELECT project_id, employee_id FROM (SELECT project_id, employee_id, RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) AS experience_rank FROM project INNER JOIN employee USING (employee_id)) ranked_employees WHERE experience_rank = 1
SELECT project_id, employee_id FROM (SELECT project_id, p.employee_id, DENSE_RANK() OVER(partition by project_id order by experience_years DESC) AS rk FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id) AS temp WHERE rk = 1
SELECT project_id, employee_id FROM (SELECT project_id, p.employee_id, e.experience_years, Dense_rank() OVER ( partition BY p.project_id ORDER BY experience_years DESC) AS rank_no FROM project p JOIN employee e ON p.employee_id = e.employee_id) tbl WHERE tbl.rank_no = 1
SELECT project_id, employee_id FROM (SELECT project_id,p.employee_id, experience_years, rank() OVER (partition by project_id order by experience_years DESC) AS rnk FROM Project p JOIN Employee e USING (employee_id)) a WHERE rnk = 1
SELECT project_id, employee_id FROM Project JOIN Employee USING (employee_id) WHERE (project_id, experience_years) IN (SELECT project_id, MAX(experience_years) FROM Project JOIN Employee USING (employee_id) GROUP BY project_id)
SELECT project_id, employee_id FROM Project JOIN Employee USING(employee_id) WHERE (project_id, experience_years) IN ( SELECT project_id, MAX(experience_years) FROM Project JOIN Employee USING(employee_id) GROUP BY project_id )
SELECT project_id, employee_id FROM project JOIN employee USING(employee_id) WHERE (project_id, experience_years) in ( SELECT project_id, max(experience_years) FROM project JOIN employee USING(employee_id) group by project_id )
SELECT project_id, employee_id FROM( SELECT p.project_id, p.employee_id, e.experience_years, RANK() OVER(PARTITION BY p.project_id ORDER BY e.experience_years DESC) as rank0 FROM project p JOIN employee e ON p.employee_id = e.employee_id ) sub WHERE rank0 = 1
SELECT project_id, employee_id FROM( SELECT project_id , e.employee_id , rank() over (partition by project_id order by experience_years desc) as rk FROM Project p JOIN Employee e ON e.employee_id = p.employee_id)temp WHERE rk = 1
SELECT project_id, employee_id FROM( SELECT project_id, employee.employee_id, DENSE_RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) rnk FROM project JOIN employee USING(employee_id))t1 WHERE rnk = 1
SELECT project_id, employee_id FROM( SELECT project_id, employee_id, experience_years, MAX(experience_years) OVER (PARTITION BY project_id) AS max_year FROM Project JOIN Employee USING (employee_id) ) AS base WHERE experience_years = max_year
SELECT project_id, employee_id FROM( SELECT project_id, employee_id, experience_years, MAX(experience_years) OVER(PARTITION BY project_id) 'max_experience' FROM project LEFT JOIN employee USING (employee_id) ) f WHERE experience_years = max_experience
SELECT project_id, employee_id FROM( SELECT project_id, p.employee_id, RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) AS num FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id ) tmp WHERE num = 1
SELECT project_id, employee_id from (SELECT project_id, p.employee_id, rank() over(partition by project_id order by experience_years DESC ) as ranking from Project p left join Employee e on e.employee_id=p.employee_id)p1 where ranking=1
SELECT project_id, project.employee_id FROM project INNER JOIN employee ON project.employee_id = employee.employee_id WHERE (project_id,experience_years) In (SELECT project_id, max(experience_years) as experience_years FROM project INNER JOIN employee ON project.employee_id = employee.employee_id GROUP BY project_id)
SELECT project_id, t1.employee_id FROM Project t1 LEFT JOIN Employee t2 ON t1.employee_id = t2.employee_id WHERE (project_id, experience_years) IN ( SELECT project_id, MAX(experience_years) FROM Project t1 LEFT JOIN Employee t2 ON t1.employee_id = t2.employee_id GROUP BY project_id )
SELECT project_id,employee_id FROM( SELECT project_id, p.employee_id, dense_rank() OVER (PARTITION BY project_id ORDER BY experience_years DESC) AS r FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id ) tb WHERE r = 1
SELECT r.project_id, r.employee_id FROM( SELECT p.project_id, p.employee_id, RANK()OVER(PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS rnk FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id ) r WHERE r.rnk =1 ORDER BY 1
SELECT sub.project_id, sub.employee_id FROM( SELECT p.project_id, p.employee_id, e.experience_years, rank() over(partition by p.project_id order by e.experience_years DESC) as ranked FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id ) sub WHERE sub.ranked =1
SELECT t1.project_id, t1.employee_id FROM ( SELECT p.project_id, e.employee_id, e.experience_years FROM project p LEFT JOIN employee e ON p.employee_id = e.employee_id ) t1 INNER JOIN ( SELECT p.project_id, MAX(e.experience_years) max_years FROM project p LEFT JOIN employee e ON p.employee_id = e.employee_id GROUP BY 1 ) t2 ON t1.project_id = t2.project_id AND t1.experience_years = t2.max_years
SELECT t1.project_id, t1.employee_id FROM Project AS t1 INNER JOIN Employee AS t2 ON t1.employee_id = t2.employee_id WHERE (t1.project_id, t2.experience_years) IN (SELECT t3.project_id, MAX(t4.experience_years) AS max_year FROM Project AS t3 INNER JOIN Employee AS t4 ON t3.employee_id = t4.employee_id GROUP BY t3.project_id)
SELECT t1.project_id, t2.employee_id FROM (SELECT p.project_id, MAX(e.experience_years) AS most_experienced FROM Project p JOIN Employee e ON p.employee_id = e.employee_id GROUP BY 1) t1 JOIN (SELECT p.project_id, p.employee_id, e.experience_years FROM Project p JOIN employee e ON p.employee_id = e.employee_id) t2 ON t1.project_id = t2.project_id AND t1.most_experienced = t2.experience_years
SELECT tb1.project_id, tb1.employee_id FROM ( SELECT project_id, Project.employee_id,experience_years, DENSE_RANK() OVER (PARTITION BY project_id ORDER BY experience_years DESC) AS r_num FROM Project INNER JOIN Employee ON project.employee_id=Employee.employee_id) tb1 WHERE r_num=1
SELECT temp.project_id, temp.employee_id FROM (SELECT p.project_id, e.employee_id, RANK () OVER (partition by project_id ORDER BY experience_years desc) rnk FROM employee e JOIN Project p ON e.employee_id=p.employee_id) temp WHERE rnk = 1
SELECT x1.project_id, x1.employee_id FROM Project x1 JOIN Employee x2 ON x1.employee_id = x2.employee_id WHERE (x1.project_id, x2.experience_years) IN (SELECT x1.project_id, MAX(x2.experience_years) FROM Project x1 JOIN Employee x2 ON x1.employee_id = x2.employee_id GROUP BY x1.project_id)
Select D.project_id, D.employee_id From (Select P.project_id, E.employee_id, RANK() OVER(partition by P.project_id order by E.experience_years DESC) as max_exp From Project as P Left Join Employee as E on P.employee_id = E.employee_id ) as D Where max_exp=1
Select g.project_id, g.employee_id from (select p.project_id, p.employee_id, e.experience_years, rank() over( PARTITION BY project_id order by (experience_years) DESC )myrank from Project as p left join Employee as e on p.employee_id = e.employee_id) as g where g.myrank =1
Select p.project_id, p.employee_id from Project P join employee e on e.employee_id = p.employee_id where (p.project_id, e.experience_years) in (Select p.project_id, max(e.experience_years) from project p join employee e on e.employee_id = p.employee_id group by project_id)
Select project_id, employee_id From (Select project_id, employee_id, Dense_Rank() Over(Partition By project_id Order By experience_years Desc)as position From Project Inner Join Employee Using(employee_id)) tmp Where position = 1
Select project_id, employee_id from ( Select project_id, p.employee_id as employee_id, name, rank() over (partition by project_id order by experience_years desc) as exp from Project p Join Employee e on p.employee_id = e.employee_id )res where exp = 1
Select project_id,employee_id from ( Select project_id,employee_id,experience_years, RANK() over (partition by project_id order by experience_years desc) as RANK_EXP from ( Select a.*,b.experience_years from Project a inner join Employee b on a.employee_id = b.employee_id ) temp ) temp2 where RANK_EXP in (1)
WITH CTE AS ( SELECT p.project_id, e.employee_id, RANK() OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS rk FROM Project p JOIN Employee e ON e.employee_id = p.employee_id) SELECT project_id, employee_id FROM CTE WHERE rk = 1
WITH CTE AS ( SELECT p.project_id, p.employee_id, e.name, LAST_VALUE(e.experience_years) OVER ( PARTITION BY p.project_id, p.employee_id RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) AS most_experience_per_project FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id ) SELECT sub.project_id, sub.employee_id FROM ( SELECT a.project_id, a.employee_id, RANK() OVER( PARTITION BY a.project_id ORDER BY a.most_experience_per_project DESC ) AS rnk_exp FROM CTE a ) sub WHERE sub.rnk_exp = 1
WITH CTE AS (SELECT project_id, P.employee_id, RANK() OVER(PARTITION BY PROJECT_ID ORDER BY experience_years DESC) AS RK FROM PROJECT P JOIN EMPLOYEE E ON P.employee_id = E.employee_id) SELECT project_id, employee_id FROM CTE WHERE RK = 1
WITH CTE_1 AS( SELECT P.PROJECT_ID, E.EMPLOYEE_ID, E.NAME, E.EXPERIENCE_YEARS, MAX(EXPERIENCE_YEARS) OVER (PARTITION BY P.PROJECT_ID) AS MAX_PROJ_YRS FROM PROJECT P, EMPLOYEE E WHERE P.EMPLOYEE_ID = E.EMPLOYEE_ID ) SELECT PROJECT_ID, EMPLOYEE_ID FROM CTE_1 WHERE MAX_PROJ_YRS = EXPERIENCE_YEARS
WITH CTE_T AS ( SELECT a.project_id,a.employee_id,experience_years, MAX(experience_years) OVER (PARTITION BY a.project_id) as max_exp_year FROM Project a JOIN Employee b ON a.employee_id=b.employee_id ) SELECT project_id,employee_id FROM CTE_T WHERE max_exp_year = experience_years
WITH MAX_YEAR_TABLES AS( SELECT project_id , P.employee_id , experience_years , MAX(E.experience_years) OVER(PARTITION BY project_id) AS MAX_YEAR FROM Project P JOIN Employee E USING(employee_id) ) SELECT project_id, employee_id FROM MAX_YEAR_TABLES WHERE experience_years = MAX_YEAR
WITH Most_experienced AS ( SELECT project_id, MAX(experience_years) AS max_exp_years FROM Project AS p JOIN Employee AS e ON p.employee_id = e.employee_id GROUP BY project_id ) SELECT p.project_id, p.employee_id FROM Project AS p JOIN Employee AS e ON p.employee_id = e.employee_id JOIN Most_experienced AS m ON p.project_id = m.project_id AND e.experience_years = m.max_exp_years
WITH R AS ( SELECT p.project_id, e.employee_id, rank() OVER(PARTITION BY project_id ORDER BY experience_years DESC) AS rnk FROM Project p JOIN Employee e ON p.employee_id = e.employee_id ) SELECT project_id, employee_id FROM R WHERE rnk=1
WITH T1 AS (SELECT A.project_id, A.employee_id, experience_years FROM Project A JOIN Employee B ON A.employee_id = B.employee_id), T2 AS (SELECT MAX(experience_years) AS M, project_id FROM T1 GROUP BY project_id ) SELECT T1.project_id, employee_id FROM T1 JOIN T2 ON T1.experience_years = T2.M AND T1.project_id = T2.project_id
WITH a AS ( SELECT Project.project_id, Project.employee_id, Employee.experience_years FROM Project LEFT JOIN Employee ON Project.employee_id = Employee.employee_id), b AS ( SELECT project_id, employee_id, (DENSE_RANK() OVER (PARTITION BY project_id ORDER BY experience_years DESC)) as ranks FROM a) SELECT project_id, employee_id FROM b WHERE ranks = 1
WITH baseline AS ( SELECT project_id, Employee.employee_id, rank() over(partition by project_id order by experience_years DESC) as rnk FROM Project JOIN Employee ON Project.employee_id = Employee.employee_id ) SELECT project_id, employee_id FROM baseline WHERE rnk = 1
WITH cte AS ( SELECT p.project_id, p.employee_id, rank() over(PARTITION BY p.project_id ORDER BY e.experience_years DESC) as rk FROM project p JOIN employee e USING (employee_id) ) SELECT project_id, employee_id FROM cte WHERE rk=1
WITH cte AS (SELECT P.project_id, MAX(experience_years) AS maxyear FROM Project P JOIN Employee E ON P.employee_id=E.employee_id GROUP BY P.project_id) SELECT P.project_id, P.employee_id FROM Project P LEFT JOIN Employee E ON P.employee_id=E.employee_id LEFT JOIN cte ON P.project_id=cte.project_id WHERE E.experience_years=cte.maxyear
WITH cte AS (SELECT project_id, p.employee_id, experience_years FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id) SELECT project_id, employee_id FROM cte WHERE (project_id, experience_years) IN (SELECT project_id, MAX(experience_years) FROM cte GROUP BY project_id)
WITH cte AS( SELECT p.project_id as project_id, p.employee_id as employee_id, dense_rank() OVER (PARTITION BY project_id ORDER BY e.experience_years DESC) AS rk FROM Project p JOIN Employee e ON p.employee_id = e.employee_id) SELECT project_id, employee_id from cte WHERE rk =1
WITH cte1 AS (SELECT p.project_id, p.employee_id, e.experience_years FROM Project p JOIN Employee e ON p.employee_id = e.employee_id) , cte2 AS (SELECT project_id, MAX(experience_years) AS max_exp FROM cte1 GROUP BY project_id) SELECT c1.project_id, c1.employee_id FROM cte1 c1 JOIN cte2 c2 ON c1.project_id = c2.project_id AND c1.experience_years = c2.max_exp
WITH cte1 as (SELECT project_id, e.employee_id, experience_years, RANK() OVER (PARTITION BY project_id ORDER BY experience_years DESC) as rnk FROM Project p JOIN Employee e USING (employee_id)) SELECT project_id, employee_id FROM cte1 WHERE rnk=1
WITH cte_1 AS ( SELECT project_id,p.employee_id, experience_years, RANK()OVER (PARTITION BY project_id ORDER BY experience_years DESC ) AS rnk FROM Project p LEFT JOIN Employee e ON p.employee_id=e.employee_id) SELECT project_id,employee_id FROM cte_1 WHERE rnk=1
WITH employee_experience AS ( SELECT p.project_id, p.employee_id, e.experience_years, max(e.experience_years) OVER(PARTITION BY p.project_id) maxExperienceOfProject FROM project p JOIN employee e ON p.employee_id = e.employee_id) SELECT project_id, employee_id FROM employee_experience WHERE experience_years = maxExperienceOfProject
WITH exp AS ( SELECT project_id, project.employee_id, employee.experience_years FROM project LEFT JOIN employee ON project.employee_id = employee.employee_id ), exp_ranked AS ( SELECT *, DENSE_RANK() OVER (PARTITION BY project_id ORDER BY experience_years DESC) AS exp_rank FROM exp ) SELECT project_id, employee_id FROM exp_ranked WHERE exp_rank = 1 ORDER BY 1
WITH grouped AS ( SELECT P.project_id, E.employee_id, E.name, E.experience_years, RANK () OVER (PARTITION BY P.project_id ORDER BY E.experience_years DESC) ranked FROM Project P LEFT JOIN Employee E ON P.employee_id = E.employee_id) SELECT project_id,employee_id FROM grouped WHERE ranked = 1
WITH info AS (SELECT p.project_id, p.employee_id, e.name, e.experience_years FROM Project p, Employee e WHERE p.employee_id = e.employee_id), ranking AS (SELECT project_id, employee_id, RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) as a FROM info) SELECT r1.project_id, r1.employee_id FROM ranking r1 WHERE r1.a = 1
WITH joined_tb AS ( SELECT Project.project_id, Project.employee_id, Employee.experience_years, MAX(Employee.experience_years) OVER(PARTITION BY project_id) AS max_exp FROM Project INNER JOIN Employee ON Project.employee_id = Employee.employee_id ) SELECT project_id, employee_id FROM joined_tb WHERE experience_years = max_exp
WITH main AS ( SELECT project_id, employee_id, DENSE_RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) AS Ranking FROM Project INNER JOIN Employee USING(employee_id) ) SELECT project_id, employee_id FROM main WHERE Ranking = 1
WITH max_yr AS ( SELECT P.project_id, MAX(E.experience_years) AS experience_years FROM Project AS P JOIN Employee AS E ON P.employee_id = E.employee_id GROUP BY P.project_id ) SELECT P.project_id, E.employee_id FROM Project AS P JOIN Employee AS E ON P.employee_id = E.employee_id JOIN max_yr ON max_yr.project_id = P.project_id WHERE E.experience_years = max_yr.experience_years
WITH project_exp AS ( SELECT p.project_id, MAX(experience_years) as years FROM Project p LEFT JOIN Employee e USING (employee_id) GROUP BY 1 ) SELECT pe.project_id, e.employee_id FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id LEFT JOIN project_exp pe ON p.project_id = pe.project_id WHERE e.experience_years = pe.years
WITH project_experience AS ( SELECT project_id, MAX(experience_years) AS max_experience FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id GROUP BY project_id ) SELECT p.project_id, p.employee_id FROM Project p INNER JOIN Employee e ON p.employee_id = e.employee_id INNER JOIN project_experience pe ON p.project_id = pe.project_id WHERE e.experience_years = pe.max_experience
WITH r AS ( SELECT project_id, project.employee_id, experience_years, DENSE_RANK() OVER (PARTITION BY project_id ORDER BY experience_years DESC) AS ranking FROM project INNER JOIN Employee ON project.employee_id = Employee.employee_id) SELECT project_id, employee_id FROM r WHERE ranking = 1
WITH ranked_table AS ( SELECT project_id, P.employee_id, DENSE_RANK() OVER (PARTITION BY project_id ORDER BY experience_years DESC) AS rk FROM Project P INNER JOIN Employee E ON P.employee_id = E.employee_id ) SELECT project_id, ranked_table.employee_id FROM ranked_table WHERE rk = 1
WITH ranking as ( select p.project_id, p.employee_id, e.experience_years, rank() over (partition by p.project_id order by e.experience_years desc) as ranks from Project as p join Employee as e on p.employee_id = e.employee_id ) select project_id, employee_id from ranking where ranks = 1
WITH res AS ( SELECT p.project_id, p.employee_id, DENSE_RANK() OVER(PARTITION BY p.project_id ORDER BY e.experience_years DESC) AS rnk FROM Project p JOIN Employee e ON p.employee_id = e.employee_id ) SELECT project_id, employee_id FROM res WHERE rnk = 1
WITH result AS ( SELECT project_id, employee_id, experience_years, MAX(experience_years) OVER(PARTITION BY project_id) max_experience_years FROM Project JOIN Employee USING(employee_id)) SELECT project_id, employee_id FROM result WHERE experience_years = max_experience_years
WITH sub AS ( SELECT p.project_id, p.employee_id, e.experience_years, MAX(e.experience_years) OVER(PARTITION BY p.project_id) AS max_years FROM Project p JOIN Employee e ON p.employee_id = e.employee_id ) SELECT project_id, employee_id FROM sub WHERE experience_years = max_years
WITH t AS ( SELECT p.project_id, p.employee_id, e.experience_years, MAX(e.experience_years) OVER (PARTITION BY project_id) AS max_experience_years FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id ) SELECT project_id, employee_id FROM t WHERE experience_years = max_experience_years
WITH t AS ( SELECT project_id, MAX(experience_years) experience_years FROM project p JOIN employee e ON p.employee_id=e.employee_id GROUP BY project_id ) SELECT p.project_id project_id, e.employee_id employee_id FROM project p JOIN employee e ON p.employee_id=e.employee_id JOIN t ON p.project_id=t.project_id AND e.experience_years=t.experience_years
WITH t AS (SELECT a.project_id,a.employee_id,b.experience_years, RANK() OVER(PARTITION BY a.project_id ORDER BY b.experience_years DESC) AS rnk FROM Project AS a INNER JOIN Employee AS b ON a.employee_id = b.employee_id ) SELECT DISTINCT t.project_id,t.employee_id FROM t WHERE rnk=1
WITH t as (SELECT p.project_id ,e.employee_id ,DENSE_RANK () OVER (PARTITION BY project_id ORDER BY experience_years DESC) rnk FROM Project p LEFT JOIN Employee e on p.employee_id = e.employee_id) SELECT project_id ,employee_id FROM t WHERE rnk=1
WITH t1 AS (SELECT p.project_id, MAX(e.experience_years) ey FROM Project p JOIN Employee e ON p.employee_id = e.employee_id GROUP BY project_id), t2 AS(SELECT p.*, t1.ey, e.experience_years FROM Project p JOIN t1 ON p.project_id = t1.project_id JOIN Employee e ON e.employee_id = p.employee_id) SELECT project_id, employee_id FROM t2 WHERE ey = experience_years
WITH temp AS (SELECT DISTINCT p.project_id, MAX(e.experience_years) AS max_year FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id GROUP BY p.project_id) SELECT p.project_id, p.employee_id FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id WHERE (p.project_id, e.experience_years) IN (SELECT * FROM temp)
WITH temp AS (SELECT project_id,p.employee_id, experience_years,RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) AS rk FROM Project p LEFT JOIN Employee e USING (employee_id)) SELECT project_id,employee_id FROM temp WHERE rk=1
WITH temp AS( SELECT p.project_id, p.employee_id, e.experience_years FROM Project p JOIN Employee e ON p.employee_id = e.employee_id ) SELECT project_id, employee_id FROM temp WHERE (experience_years, project_id) IN (SELECT MAX(experience_years), project_id FROM temp GROUP BY project_id)
WITH temp as ( SELECT e.employee_id, project_id, rank() OVER (PARTITION BY p.project_id ORDER BY experience_years DESC) rnk FROM Employee e JOIN Project p ON e.employee_id=p.employee_id ) SELECT project_id, employee_id FROM temp WHERE temp.rnk = 1
WITH temp as ( SELECT e.employee_id, project_id, rank() OVER (PARTITION BY p.project_id ORDER BY experience_years DESC) rnk FROM Employee e JOIN Project p ON e.employee_id=p.employee_id ) SELECT project_id, employee_id FROM temp WHERE temp.rnk = 1 GROUP BY project_id, employee_id
WITH temp as ( SELECT project_id, Project.employee_id, experience_years, MAX(experience_years) OVER (PARTITION BY project_id) AS "max_experience" FROM Project JOIN Employee on Project.employee_id = Employee.employee_id ) SELECT DISTINCT project_id, employee_id from temp where experience_years = max_experience
WITH tp AS (SELECT project_id, employee_id, experience_years, MAX(experience_years) OVER(PARTITION BY project_id) AS max_exp FROM project JOIN employee USING(employee_id)) SELECT project_id, employee_id FROM tp WHERE experience_years=max_exp
WITH tp as (Select p.employee_id , p.project_id, e.experience_years, dense_rank() OVER(partition by p.project_id order by e.experience_years DESC) as rnk FROM Project p LEFT JOIN Employee e ON e.employee_id = p.employee_id ) Select tp.project_id ,tp.employee_id FROM tp where tp.rnk= 1
With CTE as ( Select p.project_id, p.employee_id, e.experience_years, RANK() OVER (partition by p.project_id order by e.experience_years desc) as year_rank from project p left join employee e on p.employee_id=e.employee_id ) Select project_id, employee_id from CTE where year_rank=1
With cte as (Select p.project_id,p.employee_id,e.experience_years from project p,employee e where p.employee_id=e.employee_id) select project_id,employee_id from (select project_id,employee_id, dense_rank() over(partition by project_id order by experience_years desc) as rnk from cte) as i where rnk=1
With exp as ( Select a.project_id,a.employee_id,b.experience_years from project a, employee b where a.employee_id = b.employee_id ) Select project_id, employee_id from exp where (project_id,experience_years) in ( Select project_id,max(experience_years) from exp group by project_id )
With max_e as (select distinct project_id, Employee.employee_id, experience_years, max(experience_years) over (partition by project_id) as maxim from Project inner join Employee on Project.employee_id = Employee.employee_id) Select max_e.project_id, employee_id from max_e where experience_years = maxim
With new AS( SELECT project_id,a.employee_id,experience_years,rank () over (partition by project_id order by experience_years desc) num FROM Project a INNER JOIN Employee b ON a.employee_id=b.employee_id) SELECT project_id,employee_id FROM new WHERE num=1
With t as (select project_id, p.employee_id, DENSE_RANK() over (partition by project_id order by experience_years desc) as rnk from Project p JOIN Employee e on p.employee_id = e.employee_id) select project_id, employee_id from t where rnk = 1
select A.project_id as project_id, A.employee_id as employee_id from (select distinct proj.project_id as project_id, proj.employee_id as employee_id, emp.experience_years as experience_years from Project proj inner join employee emp on proj.employee_id = emp.employee_id) A inner join (select distinct proj.project_id, max(emp.experience_years) over(partition by proj.project_id) as exp from Project proj inner join employee emp on proj.employee_id = emp.employee_id) B on A.project_id = B.project_id and A.experience_years = B.exp
select P.project_id , E.employee_id from Project P join Employee E on P.employee_id = E.employee_id where (P.project_id ,E.experience_years ) in (select P.project_id , max(experience_years) from Project P join Employee E on P.employee_id = E.employee_id group by P.project_id )
select Project.project_id, Employee.employee_id from Project join Employee on Project.employee_id = Employee.employee_id where (Project.project_id, Employee.experience_years ) in (select project_id, max(experience_years) as years from Employee join Project on project.employee_id = Employee.employee_id group by project_id)
select Project_id, employee_id from ( select distinct Project_id, p.employee_id, rank() over (partition by Project_id order by experience_years desc ) rnk from Project p inner join Employee e on e.employee_id =p.employee_id )a where rnk=1
select a.project_id , a.employee_id from ( select a.project_id , b.employee_id , b.experience_years , RANK() OVER( PARTITION BY a.project_id ORDER BY b.experience_years DESC) as years from project a join Employee b on a.employee_id = b.employee_id ) a where a.years = 1
select a.project_id , a.employee_id from ( select p.project_id , e.employee_id , dense_rank()over(partition by p.project_id order by e.experience_years desc) as 'Ranks' from Project p join Employee e on p.employee_id=e.employee_id ) a where a.Ranks=1
select a.project_id, a.employee_id from ( select a.*, b.experience_years, rank()over (partition by a.project_id order by b.experience_years desc ) as rnk from project a inner join employee b on a.employee_id = b.employee_id )a where a.rnk=1
select a.project_id, a.employee_id from (select a.project_id, a.employee_id, dense_rank() over (partition by a.project_id order by b.experience_years desc) as year_rank from Project a left join Employee b on a.employee_id=b.employee_id ) a where a.year_rank=1
select a.project_id, a.employee_id from (select p.project_id, e.employee_id, dense_rank() over(partition by p.project_id order by e.experience_years desc) as r from project p inner join employee e on p.employee_id = e.employee_id)a where a.r = 1
select a.project_id, a.employee_id from (select p.project_id, p.employee_id, e.experience_years, RANK() over (PARTITION BY p.project_id order by e.experience_years desc) as ranked from Project p INNER JOIN Employee e ON p.employee_id = e.employee_id) as a where ranked = 1
select a.project_id, a.employee_id from (select p.project_id, p.employee_id, e.experience_years, rank() over(partition by p.project_id order by e.experience_years desc ) rnk from project p, employee e where p.employee_id = e.employee_id)a where a.rnk = 1
select a.project_id, a.employee_id from (select project_id, Project.employee_id,rank() over (partition by project_id order by experience_years desc) as "rank" from Project join employee on Project.employee_id = employee.employee_id) a where a.rank = 1
select a.project_id, a.employee_id from Project a left join Employee b on a.employee_id = b.employee_id where (a.project_id, b.experience_years) in (select a.project_id, max(b.experience_years) from Project a left join Employee b on a.employee_id = b.employee_id group by a.project_id)
select a.project_id, a.employee_id from project a left join employee b on a.employee_id = b.employee_id where (a.project_id, b.experience_years) in (select a.project_id, max(b.experience_years) from project a join employee b on a.employee_id = b.employee_id group by project_id)
select a.project_id,a.employee_id from ( select project_id,p.employee_id,rank() over(partition by project_id order by experience_years DESC ) as avg_exp from project p left join employee e on p.employee_id=e.employee_id) a where a.avg_exp=1
select a.project_id,a.employee_id from (select project_id,p.employee_id,experience_years from project p inner join employee e on p.employee_id=e.employee_id) a inner join (select project_id, max(experience_years) experience_years from project p inner join employee e on p.employee_id=e.employee_id group by project_id) b on a.project_id=b.project_id and a.experience_years=b.experience_years
select b.project_id, b.employee_id from (select a.project_id,a.employee_id, dense_rank() over(partition by a.project_id order by a.experience_years desc) ds from (select distinct p.project_id, e.employee_id,e.experience_years from employee e inner join project p on p.employee_id = e.employee_id) a)b where b.ds = 1
select c.project_id, c.employee_id from ( select a.project_id, a.employee_id, b.experience_years, max(b.experience_years) over(partition by a.project_id) as max_years from Project as a inner join Employee as b on a.employee_id=b.employee_id ) as c where c.experience_years=c.max_years
select c.project_id, c.employee_id from (select a.project_id, a.employee_id, rank () over (partition by a.project_id order by b.experience_years desc) as rk from Project a join Employee b on a.employee_id=b.employee_id) c where c.rk=1
select distinct a.project_id, a.employee_id from Project a left join Employee b on a.employee_id = b.employee_id left join ( select a.project_id, max(b.experience_years) as yrs from Project a left join Employee b on a.employee_id = b.employee_id group by 1) c on a.project_id = c.project_id and b.experience_years = c.yrs where c.yrs is not null
select distinct project_id,employee_id from ( select p.project_id,e.employee_id,experience_years,max(experience_years) over(partition by project_id) mx from project p left join employee e on p.employee_id=e.employee_id order by 1, 3 desc ) t where experience_years= mx
select grp1.project_id, grp1.employee_id from ( select project_id, e.employee_id, dense_rank() over(partition by project_id order by experience_years desc) rnk from project p inner join employee e on p.employee_id = e.employee_id ) grp1 where grp1.rnk = 1
select p.project_id, e.employee_id from Project p inner join Employee e on p.employee_id = e.employee_id inner join (select project_id, max(experience_years) as max_years from Project p inner join Employee e on p.employee_id = e.employee_id group by project_id) a on p.project_id = a.project_id and e.experience_years = a.max_years
select p.project_id, e.employee_id from Project p inner join employee e on p.employee_id = e.employee_id WHERE (project_id, experience_years) in (select p.project_id, max(e.experience_years) as experience_years from Project p inner join employee e on p.employee_id = e.employee_id group by 1)
select p.project_id, e.employee_id from Project p left join Employee e on p.employee_id = e.employee_id where (p.project_id, e.experience_years) in (select p.project_id, max(e.experience_years) from Project p left join Employee e on p.employee_id = e.employee_id group by project_id)
select p.project_id, e.employee_id from Project p left join Employee e on p.employee_id = e.employee_id where (p.project_id, e.experience_years) in (select p.project_id, max(e.experience_years) from Project p left join Employee e on p.employee_id = e.employee_id group by project_id) order by p.project_id, e.experience_years
select p.project_id, e.employee_id from Project p left join Employee e on p.employee_id = e.employee_id, (select p.project_id, max(e.experience_years) as num from Project p left join Employee e on p.employee_id = e.employee_id group by p.project_id) as temp where p.project_id = temp.project_id and e.experience_years = temp.num
select p.project_id, e.employee_id from employee e join project p on e.employee_id = p.employee_id join (select project_id, max(experience_years) as max from project p join employee e on p.employee_id = e.employee_id group by project_id) t on e.experience_years = max and p.project_id = t.project_id
select p.project_id, e.employee_id from project p left join employee e on p.employee_id = e.employee_id right join (select a.project_id, max(b.experience_years) as max from project a left join employee b on a.employee_id = b.employee_Id group by 1) as c on p.project_id = c.project_id and e.experience_years = c.max
select p.project_id, e.employee_id from project p left join employee e on p.employee_id=e.employee_id where (p.project_id, e.experience_years)=(select p2.project_id, max(e2.experience_years) from project p2 join employee e2 on p2.employee_id = e2.employee_id where p.project_id = p2.project_id )
select p.project_id, p.employee_id from Project p join Employee e on p.employee_id = e.employee_id where (p.project_id, e.experience_years) in ( select a.project_id, max(b.experience_years) from Project a join Employee b on a.employee_id = b.employee_id group by a.project_id)
select p.project_id, p.employee_id from Project p join Employee e on p.employee_id = e.employee_id where (p.project_id, e.experience_years) in ( select p1.project_id, max(e1.experience_years) from Project p1 join Employee e1 on e1.employee_id = p1.employee_id group by p1.project_id)
select p.project_id, p.employee_id from Project p join Employee e on p.employee_id = e.employee_id where (p.project_id, e.experience_years) in (select p.project_id, max(e.experience_years) experience_years from Project p join Employee e on p.employee_id = e.employee_id group by p.project_id)
select p.project_id, p.employee_id from Project p join Employee e on p.employee_id=e.employee_id where (p.project_id,e.experience_years) in (select p.project_id,max(e.experience_years) from Project p join Employee e on p.employee_id=e.employee_id group by 1)
select p.project_id, p.employee_id from Project p left outer join Employee e on e.employee_id = p.employee_id where (p.project_id, e.experience_years) in ( select p.project_id, max(e.experience_years) from Project p left outer join Employee e on e.employee_id = p.employee_id group by p.project_id )
select p.project_id, p.employee_id from project as p join Employee as e on p.employee_id = e.employee_id where (p.project_id, e.experience_years) in ( select a.project_id, max(b.experience_years) from project as a join Employee as b on a.employee_id = b.employee_id group by a.project_id )
select p.project_id, p.employee_id from project as p join employee as e on p.employee_id = e.employee_id where (p.project_id, e.experience_years) in (select p.project_id, max(e.experience_years) from project as p join employee as e on p.employee_id = e.employee_id group by p.project_id)
select p.project_id, p.employee_id from project p join employee e on e.employee_id=p.employee_id where (p.project_id, e.experience_years) in (select p.project_id, max(e.experience_years) from project p join employee e on e.employee_id=p.employee_id group by p.project_id)
select p.project_id, p.employee_id from project p join employee e on p.employee_id = e.employee_id join (select project_id, max(experience_years) as yrs from project p join employee e on p.employee_id = e.employee_id group by project_id)a on a.project_id = p.project_id and a.yrs = e.experience_years
select p.project_id, p.employee_id from project p join employee e on p.employee_id = e.employee_id where (p.project_id, e.experience_years) in (select p.project_id, max(e.experience_years) from project p join employee e on p.employee_id = e.employee_id group by p.project_id)
select p.project_id, p.employee_id from project p left join employee e on p.employee_id=e.employee_id where (p.project_id, e.experience_years) in (select p.project_id, max(e.experience_years) from employee e left join project p on e.employee_id=p.employee_id group by p.project_id)
select p1.project_id, p1.employee_id from project p1 join employee e1 on p1.employee_id = e1.employee_id where (p1.project_id, e1.experience_years) in ( select p2.project_id, max(e2.experience_years) max_years from project p2 join employee e2 on p2.employee_id = e2.employee_id group by p2.project_id )
select p1.project_id,p1.employee_id from project p1 inner join employee e1 on p1.employee_id=e1.employee_id inner join ( select p.project_id,max(experience_years) max_yrs from Project p inner join employee e on p.employee_id=e.employee_id group by 1 )m on p1.project_id=m.project_id and e1.experience_years=m.max_yrs
select p2.project_id, e2.employee_id from project p2 inner join employee e2 on e2.employee_id=p2.employee_id where (p2.project_id, e2.experience_years) in (select p.project_id, max(experience_years) as experience_years from project p inner join employee e on e.employee_id = p.employee_id group by p.project_id)
select pe.project_id, pe.employee_id from( select p.*, rank() over(partition by p.project_id order by e.experience_years desc) as desc_rank from Project p join Employee e on p.employee_id = e.employee_id ) pe where pe.desc_rank = 1
select pp.project_id, pp.employee_id from (select p.project_id, p.employee_id ,e.experience_years from project p left join Employee e on e.employee_id = p.employee_id ) pp join (select p.project_id , max(e.experience_years) exp from project p left join Employee e on e.employee_id = p.employee_id group by 1 order by 1 desc ) most_exp on most_exp.exp = pp.experience_years and most_exp.project_id = pp.project_id
select pr.project_id, pr.employee_id from project pr left join employee em using(employee_id) where em.experience_years = (select max(em1.experience_years) from project pr1 left join employee em1 using(employee_id) where pr.project_id = pr1.project_id)
select project_id , employee_id from ( select a.project_id, a.employee_id ,dense_rank() over(partition by a.project_id order by b.experience_years desc) as rn from project a inner join employee b on a.employee_id = b.employee_id ) t where rn =1
select project_id , employee_id from ( select p.project_id, p.employee_id, e.experience_years, e.name, dense_rank() over(partition by p.project_id order by experience_years desc) as seq from project p join employee e on p.employee_id = e.employee_id ) x where seq = 1
select project_id , employee_id from (select project_id , Project.employee_id,dense_rank()over(partition by project_id order by experience_years desc) as r from Project left join Employee on Employee.employee_id=Project.employee_id) a where a.r=1
select project_id , employee_id from(select p.project_id, p.employee_id, dense_rank()over(partition by p.project_id order by e.experience_years desc) as rnk from project as p inner join employee as e on p.employee_id = e.employee_id)t where rnk = 1
select project_id ,employee_id from (Select project_id ,Employee.employee_id,dense_rank()over(partition by project_id order by experience_years desc) as r from Project,employee where Project.employee_id=Employee.employee_id) a where a.r=1
select project_id, Project.employee_id from Project inner join Employee on Project.employee_id = Employee.employee_id where (project_id, experience_years) in (select project_id, max(experience_years) as years from Project inner join Employee on Project.employee_id = Employee.employee_id group by project_id)
select project_id, a.employee_id from Project a inner join Employee b using (employee_id) where (project_id, experience_years) in (select project_id, max(experience_years) from Employee inner join Project using (employee_id) group by 1)
select project_id, employee_Id from ( select project_id, b.employee_id, dense_rank()over(partition by project_id order by experience_years desc) as rnk from project left join employee b using(employee_id)) as t where rnk=1
select project_id, employee_id from ( select *, dense_rank() over(partition by project_id order by experience_years desc) as rank_ from ( select p.project_id, p.employee_id, e.experience_years from project p join employee e on p.employee_id=e.employee_id) as a) as b where rank_=1
select project_id, employee_id from ( select a.project_id, a.employee_id, dense_rank() over (partition by project_id order by experience_years desc) as denserank from project a inner join employee b on a.employee_id = b.employee_id ) a where denserank =1
select project_id, employee_id from ( select a.project_id, a.employee_id, rank() over (partition by project_id order by experience_years desc) as rnk from project a left join employee b on a.employee_id=b.employee_id )z where rnk=1
select project_id, employee_id from ( select a.project_id, a.employee_id, rank() over(partition by project_id order by experience_years desc) rk from Project a join Employee b on a.employee_id = b.employee_id ) T where rk = 1
select project_id, employee_id from ( select a.project_id, b.employee_id, b.experience_years ,dense_rank() over (partition by a.project_id order by b.experience_years desc) as rnk from project a join employee b on a.employee_id =b.employee_id) a where rnk =1
select project_id, employee_id from ( select distinct p.project_id, p.employee_id, dense_rank() over(partition by p.project_id order by e.experience_years desc) as emp_rank from project p left join employee e on p.employee_id = e.employee_id) as tmp where emp_rank = 1
select project_id, employee_id from ( select distinct p.project_id, p.employee_id, e.experience_years, max(e.experience_years) over(partition by p.project_id) as max_years from Project p inner join Employee e on p.employee_id = e.employee_id ) as tmp where experience_years = max_years
select project_id, employee_id from ( select p.*, rank() over(partition by p.project_id order by e.experience_years desc) as experience_rank from Project p inner join Employee e on p.employee_id = e.employee_id ) ep where experience_rank = 1
select project_id, employee_id from ( select p.project_id , e.employee_id, rank() over(partition by p.project_id order by e.experience_years desc) as rk from employee e join project p on e.employee_id=p.employee_id) A where rk=1
select project_id, employee_id from ( select p.project_id ,p.employee_id ,rank() over (partition by p.project_id order by e.experience_years desc) as experience_rank from Project p left join Employee e on p.employee_id = e.employee_id ) a where experience_rank = 1
select project_id, employee_id from ( select p.project_id, e.employee_id, e.experience_years, dense_rank() over(partition by p.project_id order by e.experience_years desc) as er from Project p join employee e on p.employee_id = e.employee_id ) aaa where er = 1
select project_id, employee_id from ( select p.project_id, p.employee_id, dense_rank() over (partition by p.project_id order by e.experience_years desc) as 'exp_rank' from Project p join Employee e on p.employee_id = e.employee_id ) t where t.exp_rank = 1
select project_id, employee_id from ( select p.project_id, p.employee_id, e.experience_years, rank() over (partition by p.project_id order by e.experience_years desc) as ranking from project p inner join employee e on p.employee_id = e.employee_id ) asd where ranking = 1
select project_id, employee_id from ( select p.project_id, p.employee_id, name, experience_years, dense_rank() over (partition by project_id order by experience_years desc) as rnk from Project p left join Employee e on p.employee_id = e.employee_id) a where rnk = 1
select project_id, employee_id from ( select p.project_id, p.employee_id, rank() over (partition by p.project_id order by e.experience_years desc) as 'exp_rank' from Project p join Employee e on p.employee_id = e.employee_id ) t where t.exp_rank = 1
select project_id, employee_id from ( select p.project_id, p.employee_id, rank() over (partition by project_id order by e.experience_years desc) as rn from project p left join employee e using (employee_id) ) a where rn = 1 order by project_id, employee_id
select project_id, employee_id from ( select p.project_id, p.employee_id, rank() over(partition by p.project_id order by experience_years desc) as rk from project p join employee e on p.employee_id = e.employee_id ) t where rk = 1 order by project_id, employee_id
select project_id, employee_id from ( select p.project_id, p.employee_id, rank()over(partition by p.project_id order by e.experience_years desc) as rak from project p left join employee e on p.employee_id = e.employee_id) as t where rak =1
select project_id, employee_id from ( select project_id, E.employee_id, rank() over(partition by project_id order by experience_years desc) as rnk_emp_yrs from Project P join Employee E on P.employee_id = E.employee_id ) tbl where rnk_emp_yrs = 1
select project_id, employee_id from ( select project_id, a.employee_id, dense_rank()over(partition by project_id order by experience_years desc) as rnk from employee a right join project b using(employee_id)) t where rnk=1
select project_id, employee_id from ( select project_id, a.employee_id, rank() over(partition by project_id order by experience_years desc) as employee_rank from Project a join Employee b on a.employee_id = b.employee_id ) c where employee_rank = 1
select project_id, employee_id from ( select project_id, b.employee_id, dense_rank() over (partition by project_id order by experience_years desc) rnk from project a join employee b using (employee_id) )t where rnk = 1
select project_id, employee_id from ( select project_id, employee_id, DENSE_RANK() over(PARTITION by project_id order by experience_years desc) as mx from Project p join employee e using (employee_id))t where t.mx = 1
select project_id, employee_id from ( select project_id, p.employee_id as employee_id, rank() over (partition by project_id order by experience_years desc) experienced from project p join employee e on p.employee_id = e.employee_id) as d where experienced = 1
select project_id, employee_id from ( select project_id, p.employee_id, dense_rank( ) over (partition by project_id order by experience_years desc) as rnk from Project as p join Employee as e on p.employee_id = e.employee_id ) as t where rnk = 1
select project_id, employee_id from ( select project_id, p.employee_id, dense_rank() over(partition by project_id order by experience_years desc) as rnk from project p inner join employee e on p.employee_id = e.employee_id ) a where a.rnk=1
select project_id, employee_id from ( select project_id, p.employee_id, experience_years, dense_rank() over(partition by project_id order by experience_years desc) as 'rk' from project p left join employee e on p.employee_id = e.employee_id) as A where rk = 1
select project_id, employee_id from ( select project_id, p.employee_id, experience_years, dense_rank() over(partition by project_id order by experience_years desc) as rank_num from project p left join employee e on p.employee_id = e.employee_id ) as A where rank_num = 1
select project_id, employee_id from ( select project_id, p.employee_id, experience_years, rank() over(partition by project_id order by experience_years desc) as rk from project p left join employee e on p.employee_id = e.employee_id ) a where rk = 1
select project_id, employee_id from ( select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as rank_num from project p left join employee e on p.employee_id = e.employee_id ) cte where rank_num = 1
select project_id, employee_id from ( select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as rnk from project p join employee e on p.employee_id = e.employee_id )a where rnk = 1
select project_id, employee_id from ( select project_id, project.employee_id, experience_years, rank() over(partition by project_id order by experience_years desc) as ranking from project left join employee on project.employee_id = employee.employee_id ) as t where ranking = 1
select project_id, employee_id from ( select t1.project_id, t1.employee_id, rank() over (partition by t1.project_id order by t2.experience_years desc) as year_rank from project t1 join employee t2 on t2.employee_id = t1.employee_id ) t where year_rank = 1
select project_id, employee_id from ( select tab1.project_id, tab1.employee_id, dense_rank() over (partition by tab1.project_id order by tab2.experience_years desc) rk from Project tab1 left join Employee tab2 on tab1.employee_id = tab2.employee_id ) tmp where rk =1
select project_id, employee_id from (Select E.employee_id, project_id, rank() over(partition by project_id order by experience_years desc) as exp_rank from Employee E inner join Project P on E.employee_id = P.employee_id) temp where exp_rank = 1
select project_id, employee_id from (select Project.project_id, Project.employee_id, dense_rank() over(partition by Project.project_id order by experience_years desc) as ranking from Project left join Employee on Project.employee_id = Employee.employee_id) as t1 where ranking = 1
select project_id, employee_id from (select a.*, rank() over (partition by project_id order by experience_years desc) as rnk from project a inner join employee b on a.employee_id=b.employee_id) t where rnk=1
select project_id, employee_id from (select a.project_id, a.employee_id, rank() over (partition by a.project_id order by b.experience_years desc) as r from project as a join employee as b on a.employee_id=b.employee_id) as c where r=1
select project_id, employee_id from (select a.project_id, a.employee_id, rank()over(partition by a.project_id order by b.experience_years desc) as rnk from Project a join Employee b on a.employee_id = b.employee_id) cte where rnk = 1
select project_id, employee_id from (select a.project_id, b.employee_id, rank() over(partition by a.project_id order by b.experience_years desc) as rnk from project a left join employee b on a.employee_id = b.employee_id) t where rnk =1
select project_id, employee_id from (select b.project_id, a.employee_id, dense_rank() over (partition by b.project_id order by experience_years desc) as rnk from employee a join project b on a.employee_id = b.employee_id) temp where rnk = 1
select project_id, employee_id from (select distinct p.project_id, e.employee_id, dense_rank() over (partition by p.project_id order by experience_years desc) "yoe_rank" from project p join employee e on p.employee_id = e.employee_id group by e.employee_id, p.project_id ) tab where tab.yoe_rank = 1
select project_id, employee_id from (select p.project_id, e.*, rank() over (partition by p.project_id order by e.experience_years desc) as rnk from Project p left join Employee e on p.employee_id = e.employee_id) t where rnk = 1 order by 1 asc
select project_id, employee_id from (select p.project_id, e.employee_id , e.experience_years, dense_rank() over(partition by p.project_id order by e.experience_years desc) as r from project p left join employee e on p.employee_id = e.employee_id ) dudu where r = 1
select project_id, employee_id from (select p.project_id, e.employee_id, e.experience_years, rank()over(partition by p.project_id order by e.experience_years desc) rnk from project p left join employee e on p.employee_id = e.employee_id) e where rnk = 1
select project_id, employee_id from (select p.project_id, p.employee_id, RANK() OVER (partition by p.project_id order by experience_years desc) as rnk from project p join employee e on p.employee_id = e.employee_id) a where rnk = 1
select project_id, employee_id from (select p.project_id, p.employee_id, RANK() over (partition by p.project_id order by e.experience_years desc) rnk from project p left join employee e on e.employee_id = p.employee_id ) tmp where rnk = 1
select project_id, employee_id from (select p.project_id, p.employee_id, dense_rank() over (partition by project_id order by e.experience_years desc) as rnk from Project as p join Employee as e using(employee_id))a where a.rnk = 1
select project_id, employee_id from (select p.project_id, p.employee_id, dense_rank() over(partition by p.project_id order by e.experience_years desc) as rk from Project p join Employee e on p.employee_id = e.employee_id)k where k.rk = 1
select project_id, employee_id from (select p.project_id, p.employee_id, experience_years, dense_rank()over(partition by p.project_id order by experience_years desc) as rnk from Project p inner join Employee e on p.employee_id = e.employee_id) a where rnk =1
select project_id, employee_id from (select p.project_id, p.employee_id, rank() over (partition by p.project_id order by e.experience_years desc) as ranked from Project p join Employee e on p.employee_id = e.employee_id order by p.project_id, e.experience_years desc) as inner_query where ranked = 1
select project_id, employee_id from (select p.project_id, p.employee_id, rank() over (partition by p.project_id order by e.experience_years desc) as rankk from Project p inner join Employee e on p.employee_id = e.employee_id) temp where temp.rankk = 1 order by project_id asc
select project_id, employee_id from (select p.project_id, p.employee_id, rank() over (partition by p.project_id order by experience_years desc) as exp_rank from Project as p join Employee as e on p.employee_id = e.employee_id) as a where exp_rank = 1 order by 1, 2
select project_id, employee_id from (select p.project_id, p.employee_id,e.experience_years, rank() over (partition by p.project_id order by e.experience_years desc) as exp_rank from Project p left join Employee e on p.employee_id=e.employee_id) as tbl where exp_rank=1
select project_id, employee_id from (select project_id, a.employee_id, rank() over(partition by project_id order by experience_years DESC) as num from Project a inner join Employee b on a.employee_id=b.employee_id ) a where num=1
select project_id, employee_id from (select project_id, a.employee_id, rank() over(partition by project_id order by experience_years desc) rnk from Project a join Employee b on a.employee_id = b.employee_id) a where rnk=1
select project_id, employee_id from (select project_id, a.employee_id,b.experience_years,rank() over(partition by project_id order by experience_years DESC) as rk from Project a join Employee b on a.employee_id=b.employee_id order by 1,2,3) d where rk=1
select project_id, employee_id from (select project_id, e.employee_id, rank() over (partition by project_id order by experience_years desc) as ranking from employee as e join project as p on e.employee_id = p.employee_id) as t where ranking = 1
select project_id, employee_id from (select project_id, e.employee_id, rank() over(partition by project_id order by experience_years desc) rk from project p left join employee e on p.employee_id = e.employee_id) a where rk = 1
select project_id, employee_id from (select project_id, e.employee_id, rank() over(partition by project_id order by experience_years desc) rnk from Employee e join Project p on e.employee_id = p.employee_id) temp where rnk = 1
select project_id, employee_id from (select project_id, employee_id, experience_years, dense_rank() over (partition by project_id order by experience_years desc) as rk from project join employee using (employee_id)) a where rk= 1
select project_id, employee_id from (select project_id, p.employee_id as employee_id, experience_years, DENSE_RANK() OVER(PARTITION BY project_id order by experience_years desc) as rnk from project p join employee e on p.employee_id = e.employee_id) as temp where rnk =1
select project_id, employee_id from (select project_id, p.employee_id, dense_rank() over (partition by project_id order by experience_years desc) as rn from employee e inner join project p on e.employee_id = p.employee_id) as t where rn = 1
select project_id, employee_id from (select project_id, p.employee_id, experience_years, rank() over (partition by project_id order by experience_years desc) as exp_ranking from employee e join project p on e.employee_id = p.employee_id) r where r.exp_ranking = 1
select project_id, employee_id from (select project_id, p.employee_id, rank () over (partition by project_id order by experience_years desc) as rnk from project p left join employee e on p.employee_id = e.employee_id) a where rnk =1
select project_id, employee_id from (select project_id, p.employee_id, rank() over (partition by project_id order by experience_years desc) as rnk from project p inner join employee e on p.employee_id=e.employee_id) tmp where rnk=1
select project_id, employee_id from (select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as r from project p join employee e on p.employee_id = e.employee_id) t where r = 1
select project_id, employee_id from (select project_id, p.employee_id,experience_years,dense_rank() over(partition by project_id order by experience_years desc) as rn from Project p join Employee e using(employee_id)) aaa where rn = 1
select project_id, employee_id from (select project_id, project.employee_id, experience_years, dense_rank()over(partition by project_id order by experience_years desc) rexp from project join employee on project.employee_id = employee.employee_id) a where rexp=1
select project_id, employee_id from Project join Employee using (employee_id) where (project_id, experience_years) in (select project_id, max(experience_years) as max_year from Project join Employee using (employee_id) group by project_id)
select project_id, employee_id from Project join Employee using (employee_id) where (project_id,experience_years) in ( select project_id,max(experience_years) from project join employee using(employee_id) group by project_id )
select project_id, employee_id from project natural join employee where (project_id, experience_years) in ( select project_id, max(experience_years) from project natural join employee group by project_id )
select project_id, employee_id from project p inner join employee e using(employee_id) where (project_id, experience_years) in ( select project_id, max(experience_years) from project p inner join employee e on p.employee_id = e.employee_id group by project_id )
select project_id, employee_id from( Select agg.project_id , agg.employee_id , rank() over(partition by project_id order by sum(agg.experience_years) desc) as rr from ( Select e.employee_id , e.name , e.experience_years , p.project_id from employee e inner join project p on e.employee_id = p.employee_id ) agg group by 1,2 ) FINAL where final.rr = 1
select project_id, employee_id from( select e.employee_id, name, p.project_id,experience_years, dense_Rank() over(partition by project_id order by experience_years desc) as rnk from employee e inner join project p on p.employee_id = e.employee_id) x where rnk = 1
select project_id, employee_id from( select p.project_id, e.employee_id, RANK() over (partition by p.project_id order by e.experience_years desc) as rk from Project p inner join Employee e on p.employee_id=e.employee_id ) r where rk=1
select project_id, employee_id from( select proj.project_id, proj.employee_id, rank() over(partition by proj.project_id order by emp.experience_years desc) as r from Project proj join Employee emp on proj.employee_id = emp.employee_id ) a where r = 1
select project_id, employee_id from(select employee_id, project_id, dense_rank() over (partition by project_id order by experience_years desc) as rk from project left join employee using (employee_id)) b where rk = 1
select project_id, project.employee_id from Project JOIN Employee ON project.employee_id = employee.employee_id WHERE (project_id, experience_years) in (select project_id, max(experience_years) from Project, Employee where project.employee_id = employee.employee_id group by 1 )
select project_id, t1.employee_id from (select project_id, project.employee_id, dense_rank() over (partition by project_id order by experience_years desc) as drank from project join employee on project.employee_id = employee.employee_id) as t1 where drank = 1 order by project_id, t1.employee_id
select project_id, tmp.employee_id from (select Project.project_id, Employee.employee_id, rank() over(partition by Project.project_id order by experience_years desc) as ranking from Project join Employee on Project.employee_id = Employee.employee_id) as tmp where ranking = 1
select project_id,Project.employee_id from Project join Employee on Project.employee_id = Employee.employee_id where (project_id,experience_years) in (select project_id,max(experience_years) from Project join Employee on Project.employee_id = Employee.employee_id group by project_id)
select project_id,employee_id from ( select *,dense_rank() over (partition by project_id order by experience_years desc) as rk from (select a.*,b.experience_years from Project a left join Employee b on a.employee_id=b.employee_id)a)b where rk=1 order by 1,2
select project_id,employee_id from ( select p.project_id as project_id,e.employee_id as employee_id, dense_rank() over(partition by p.project_id order by e.experience_years desc) as rnk from project p join employee e on p.employee_id=e.employee_id ) as temp where rnk=1
select project_id,employee_id from ( select p.project_id, e.employee_id, rank() over(partition by p.project_id order by e.experience_years desc) as rk from employee e join project p on e.employee_id = p.employee_id ) as e where rk=1
select project_id,employee_id from ( select p.project_id,e.employee_id,experience_years,max(experience_years) over(partition by project_id) mx from project p left join employee e on p.employee_id=e.employee_id order by 1, 3 desc ) t where experience_years= mx
select project_id,employee_id from ( select p.project_id,p.employee_id, rank() over (partition by p.project_id order by e.experience_years desc) rn from employee e join project p on p.employee_id = e.employee_id ) a where rn = 1
select project_id,employee_id from ( select p.project_id,p.employee_id,e.experience_years, rank() over (partition by project_id order by experience_years desc) as rn from project p left join employee e on p.employee_id = e.employee_id) t where rn = 1
select project_id,employee_id from ( select project_id,employee_id , dense_rank () over(partition by project_id order by experience_years desc) as rnk from ( select p.project_id,e.employee_id ,e.experience_years from Project p JOIN Employee e on p.employee_id = e.employee_id ) as a ) as b where b.rnk =1
select project_id,employee_id from ( select project_id,p.employee_id,rank()over(partition by project_id order by experience_years desc) as r from project p left join employee e on p.employee_id=e.employee_id) tmp where tmp.r=1
select project_id,employee_id from ( select t1.project_id,t1.employee_id,rank() over(partition by t1.project_id order by experience_years desc) as rnum from Project t1 join Employee t2 on t1.employee_id=t2.employee_id ) tbl where rnum=1 order by 1,2
select project_id,employee_id from (select p.project_id, e.employee_id, RANK() over ( partition by project_id order by experience_years desc) AS num_ranking from Employee e join Project p on e.employee_id = p.employee_id) as tmp where num_ranking = 1
select project_id,employee_id from (select project_id,p.employee_id,e.experience_years, rank() over(partition by project_id order by experience_years desc) prjrank from project p join employee e on p.employee_id = e.employee_id)a where prjrank=1
select project_id,employee_id from project join employee using(employee_id) where (project_id, experience_years ) in ( select project_id,max(experience_years) from project join employee using(employee_id) group by project_id )
select project_id,employee_id from( select p.project_id, p.employee_id, e.experience_years, dense_rank() over (partition by p.project_id order by e.experience_years DESC) as 'rank' from Project p left join Employee e on p.employee_id = e.employee_id )as a where a.rank=1
select project_id,employee_id from( select p.project_id, p.employee_id, e.experience_years,dense_rank() over (partition by p.project_id order by e.experience_years desc) as rank_exp from project p join Employee e on p.employee_id = e.employee_id) as t1 where rank_exp = 1
select project_id,employee_id from( select project_id,Project.employee_id, rank() over(partition by project_id order by experience_years desc) as rnk from Project left join Employee on Project.employee_id = Employee.employee_id) as A where rnk =1
select project_id,employee_id from( select project_id,employee_id, rank()over(partition by project_id order by experience_years desc ) as rnk from( select project_id , p.employee_id, name, experience_years from Project p join Employee e on p.employee_id =e.employee_id) t) t2 where rnk =1
select sub.project_id, Employee.employee_id from (select project_id, max(E.experience_years) maxyears from Project P join Employee E on P.employee_id = E.employee_id group by P.project_id)sub join Project on sub.project_id = Project.project_id join Employee on Project.employee_id = Employee.employee_id and sub.maxyears = Employee.experience_years
select t.project_id, e.employee_id from employee e join (select project_id, max(experience_years) as max from project p join employee e on p.employee_id = e.employee_id group by project_id) t on e.experience_years = t.max join project p on p.project_id = t.project_id and e.employee_id = p.employee_id
select t.project_id, t.employee_id from ( select a.project_id, a.employee_id, dense_RANK() over( partition by a.project_id order by b.experience_years desc ) as rnk from Project a inner join Employee b on a.employee_id=b.employee_id ) t where rnk =1
select t.project_id, t.employee_id from ( select p.project_id, e.employee_id, e.experience_years, max(e.experience_years) over(partition by p.project_id) as mx from Project p left join Employee e on p.employee_id = e.employee_id )t where t.experience_years = t.mx
select t.project_id, t.employee_id from ( select p.project_id, e.employee_id, e.experience_years, rank() over(partition by project_id order by experience_years desc) as rnk from project p join employee e using(employee_id) ) t where rnk = 1
select t.project_id, t.employee_id from ( select p.project_id, e.employee_id, rank() over (partition by p.project_id order by experience_years desc) as rnk from Employee e join Project p on p.employee_id = e.employee_id ) t where t.rnk = 1
select t.project_id, t.employee_id from ( select p.project_id, p.employee_id, dense_rank() over (partition by p.project_id order by experience_years desc) as drk from project p join employee e on p.employee_id = e.employee_id) t where t.drk = 1
select t.project_id, t.employee_id from ( select p.project_id, p.employee_id, e.experience_years, rank() over(partition by p.project_id order by e.experience_years desc) as ranking from Project p left join Employee e using (employee_id) )t where ranking = 1
select t.project_id, t.employee_id from (select *, rank() over(partition by p.project_id order by e.experience_years desc) as erank from project p left join employee e using (employee_id)) as t where erank = 1
select t.project_id, t.employee_id from (select a.project_id, a.employee_id, dense_rank() over(partition by a.project_id order by b.experience_years desc) as exp_rnk from Project a left join Employee b on a.employee_id=b.employee_id ) t where t.exp_rnk=1
select t.project_id, t.employee_id from (select p.project_id, p.employee_id, rank() over (partition by project_id order by experience_years desc) ran from project p join employee e on p.employee_id = e.employee_id) t where t.ran = 1
select t.project_id, t.employee_id from (select project_id, Project.employee_id, rank() over(partition by project_id order by (experience_years) desc) as r from Project join Employee on Project.employee_id = Employee.employee_id) as t where t.r = 1
select t.project_id, t.employee_id from (select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as 2rank from Project p join Employee e on p.employee_id = e.employee_id) t where t.2rank = 1
select t.project_id, t.employee_id from (select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as poop from Project p join Employee e on p.employee_id = e.employee_id) t where t.poop = 1
select t.project_id, t.employee_id from (select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as r from Project p join Employee e on p.employee_id = e.employee_id) t where r = 1
select t.project_id, t.employee_id from (select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as rank_name from Project p join Employee e on p.employee_id = e.employee_id) t where t.rank_name = 1
select t.project_id, t.employee_id from (select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as rnk from Project p join Employee e on p.employee_id = e.employee_id) t where t.rnk = 1
select t.project_id, t.employee_id from (select t1.project_id, t2.employee_id, t2.experience_years, dense_rank() over(partition by t1.project_id order by t2.experience_years desc) as rnk from Project t1 left join Employee t2 on t1.employee_id=t2.employee_id) t where t.rnk =1
select t.project_id, t.employee_id from( select project_id, p.employee_id, rank() over(partition by project_id order by experience_years desc) as r from Project as p join Employee as e on p.employee_id = e.employee_id ) as t where t.r = 1
select t.project_id,t.employee_id from (select p.project_id,e.employee_id,e.experience_years,max(e.experience_years) over (partition by p.project_id) as mx from project p left join employee e on p.employee_id=e.employee_id)t where t.experience_years=t.mx
select t1.project_id, t1.employee_id from (select a.project_id, a.employee_id, b.experience_years, max(b.experience_years) over(partition by a.project_id) as max_exp from Project as a left join Employee as b on a.employee_id = b.employee_id) as t1 where t1.experience_years = t1.max_exp
select t1.project_id, t1.employee_id from project t1 join employee t2 on t2.employee_id = t1.employee_id join ( select t1.project_id, max(t2.experience_years) as max_years from project t1 join employee t2 on t2.employee_id = t1.employee_id group by t1.project_id ) t3 on t3.project_id = t1.project_id where t2.experience_years = t3.max_years
select t2.project_id, t2.employee_id from ( select t.project_id, t.employee_id, dense_rank() over(partition by t.project_id order by t.experience_years desc) as exp_rnk from (select a.project_id, a.employee_id, b.experience_years from Project a left join Employee b on a.employee_id=b.employee_id ) t ) t2 where t2.exp_rnk=1
select temp.project_id, temp.employee_id from (select p.*, e.name, rank() over (partition by p.project_id order by e.experience_years desc) as rnk from project p left join employee e on p.employee_id =e.employee_id ) temp where temp.rnk=1
select tmp.project_id, ee.employee_id from (select p.project_id, max(experience_years) as max_year from Project p join Employee e on p.employee_id=e.employee_id group by p.project_id) tmp join Project pp on tmp.project_id = pp.project_id join Employee ee on pp.employee_id = ee.employee_id where ee.experience_years = tmp.max_year
select tmp.project_id,tmp.employee_id from ( select p.project_id,e.employee_id,e.experience_years, rank() over(partition by project_id order by experience_years desc) rnk from Project p left join Employee e using (employee_id) ) tmp where rnk = 1
select x.project_id, x.employee_id from (select p.project_id, e.employee_id, e.experience_years, max(e.experience_years) over(partition by p.project_id) as max_num from employee e join project p using (employee_id)) x where x.experience_years=x.max_num order by 1, 2
with a as (SELECT p.project_id, p.employee_id, e.experience_years, dense_rank() OVER (PARTITION BY p.project_id ORDER BY e.experience_years DESC) ee FROM Project p LEFT JOIN Employee e ON p.employee_id = e.employee_id) SELECT project_id, employee_id FROM a WHERE ee = 1
with agg as ( select t1.employee_id, t1.project_id, t2.experience_years, rank() over( partition by project_id order by experience_years desc ) as rnk from Project t1 inner join Employee t2 on t1.employee_id = t2.employee_id ) select project_id, employee_id from agg where rnk = 1 order by project_id
with base as ( Select project_id, Project.employee_id, dense_rank() over(partition by Project.project_id order by experience_years desc) as seq from Project left join Employee on Project.employee_id = Employee.employee_id) select project_id, employee_id from base where seq=1 order by 1, 1
with base as ( select p.project_id, p.employee_id, e.experience_years, dense_rank() over(partition by p.project_id order by e.experience_years desc) as experience_rank from project p inner join employee e on e.employee_id = p.employee_id ) select project_id, employee_id from base where experience_rank = 1
with combined as ( select a.project_id, b.employee_id, b.experience_years from Project a join Employee b on a.employee_id = b.employee_id) select project_id, employee_id from combined where (project_id, experience_years) in ( select project_id, max(experience_years) from combined group by project_id)
with cte as ( SELECT a.project_id, a.employee_id, RANK() OVER(partition by project_id order by experience_years DESC) as rnk FROM Project a JOIN EMployee b ON a.employee_id = b.employee_id ) SELECT c.project_id, c.employee_id FROM cte c where rnk = 1
with cte as ( Select p.project_id, e.employee_id, DENSE_RANK() over (partition by p.project_id order by e.experience_years DESC) as rk from Project p inner join employee e on p.employee_id = e.employee_id ) Select project_id, employee_id from cte where rk = 1
with cte as ( select a.*, dense_rank() over (partition by project_id order by b.experience_years desc) as rk from Project a inner join Employee b on a.employee_id = b.employee_id) select project_id, employee_id from cte where rk =1 order by employee_id
with cte as ( select a.project_id,a.employee_id, rank() over (partition by project_id order by experience_years desc) as rnk from project a join employee b on a.employee_id=b.employee_id) select project_id,employee_id from cte where rnk=1
with cte as ( select e.employee_id,p.project_id,e.experience_years from employee as e join project as p on e.employee_id=p.employee_id ), temp as ( select project_id,max(experience_years) as years from cte group by project_id ) select temp.project_id,cte.employee_id from temp join cte on temp.years=cte.experience_years and temp.project_id=cte.project_id
with cte as ( select p.project_id, e.employee_id, e.experience_years, DENSE_RANK() OVER (PARTITION BY p.project_id ORDER BY e.experience_years desc) as rnk FROM project p inner join employee e on p.employee_id=e.employee_id order by p.project_id, e.experience_years desc ) select project_id, employee_id from cte where rnk=1
with cte as ( select p.project_id, e.employee_id, e.name, e.experience_years, dense_rank() over(partition by project_id order by experience_years desc) as rnk from project p join employee e on p.employee_id = e.employee_id ) select project_id, employee_id from cte where rnk = 1
with cte as ( select p.project_id, e.employee_id, e.name, max(e.experience_years) over (partition by p.project_id) as expyear from Employee e right join Project p on e.employee_id = p.employee_id ) select cte.project_id, cte.employee_id from cte join Employee e on cte.employee_id = e.employee_id and e.experience_years = cte.expyear
with cte as ( select p.project_id, e.employee_id, rank() over (partition by project_id order by experience_years desc) as rnk from employee e join project p on e.employee_id = p.employee_id ) select project_id, employee_id from cte where rnk = 1
with cte as ( select p.project_id, e.employee_id, rank() over(partition by p.project_id order by e.experience_years desc) as rk from employee e join project p on e.employee_id = p.employee_id ) select project_id, employee_id from cte where rk=1
with cte as ( select p.project_id, e.employee_id,e.experience_years, dense_rank() over(partition by project_id order by e.experience_years desc) as rn from project p inner join employee e on p.employee_id = e.employee_id ) select project_id, employee_id from cte where rn = 1
with cte as ( select p.project_id, p.employee_id, e.experience_years from Project p left join Employee e on p.employee_id=e.employee_id ) select p.project_id, p.employee_id from cte p inner join ( select project_id, max(experience_years) as max_yr from cte group by 1) iq on p.project_id=iq.project_id and p.experience_years=iq.max_yr
with cte as ( select p.project_id, p.employee_id, e.experience_years from project p join employee e on p.employee_id = e.employee_id ) select project_id, employee_id from ( select c1.project_id, c1.employee_id, count(distinct c2.experience_years) as rn from cte c1 join cte c2 on c1.project_id = c2.project_id and c1.experience_years <= c2.experience_years group by 1,2 )a where rn = 1
with cte as ( select p.project_id, p.employee_id, rank() over (partition by project_id order by e.experience_years desc) as rk from project p left join employee e using (employee_id) ) select project_id, employee_id from cte where rk = 1
with cte as ( select p.project_id, p.employee_id, rank() over(partition by p.project_id order by e.experience_years desc) as r from Project p join Employee e using(employee_id) group by 1,2 ) select project_id, employee_id from cte where r = 1 order by 1
with cte as ( select p.project_id, p.employee_id,e.experience_years from Project p join Employee e on p.employee_id = e.employee_id) select project_id, employee_id from cte where (project_id,experience_years) in ( select project_id, max(experience_years) from cte group by project_id )
with cte as ( select project_id, e.employee_id, rank() over(partition by project_id order by experience_years desc ) as rk from Project as p inner join Employee as e on p.employee_id=e.employee_id ) select project_id, employee_id from cte where rk=1
with cte as ( select project_id, employee_id, experience_years from project as p join employee as e using (employee_id) ), cte1 as ( select project_id, employee_id, rank()over(partition by project_id order by experience_years desc) as ranks from cte) select project_id, employee_id from cte1 where ranks = 1
with cte as ( select project_id, p.employee_id, experience_years, dense_rank() over(partition by project_id order by experience_years desc) as rnk from project p left join employee e on p.employee_id = e.employee_id ) select project_id, employee_id from cte where rnk = 1
with cte as ( select project_id,max(experience_years) as max_yrs from project p join employee e on p.employee_id = e.employee_id group by project_id ) select p.project_id , p.employee_id from project p join employee e on p.employee_id = e.employee_id join cte c on c.project_id = p.project_id and c.max_yrs=e.experience_years
with cte as (SELECT project_id, Employee.employee_id, Employee.name, experience_years as experience_years FROM Project INNER JOIN Employee ON Project.employee_id = Employee.employee_id GROUP BY project_id, Employee.employee_id), ranks as (SELECT *, DENSE_RANK() OVER(PARTITION BY project_id ORDER BY experience_years DESC) as employeeExperienceRank FROM cte) SELECT project_id, employee_id FROM ranks WHERE employeeExperienceRank = 1
with cte as (select P.project_id, P.employee_id , Rank()over(partition by project_id order by e.experience_years desc) as ranks from Project P left join Employee e on p.employee_id = e. employee_id) select project_id, employee_id from cte where ranks=1 order by 1,2
with cte as (select a.project_id, b.employee_id, rank() over (partition by a.project_id order by experience_years desc) as ek from Project a inner join Employee b on a.employee_id = b.employee_id) select project_id, employee_id from cte where ek = 1
with cte as (select p.project_id, e.employee_id, e.experience_years, dense_rank() over(partition by project_id order by experience_years desc) as `rank` from project p join employee e on p.employee_id = e.employee_id) select project_id, employee_id from cte where `rank` = 1
with cte as (select p.project_id, e.employee_id, e.experience_years, rank() over (partition by p.project_id order by e.experience_years desc) as rnk from Project p join Employee e on p.employee_id = e.employee_id) select project_id, employee_id from cte where rnk =1
with cte as (select p.project_id, e.employee_id, e.name, e.experience_years, dense_rank() over(partition by project_id order by e.experience_years desc) as `rank` from project p join employee e on p.employee_id = e.employee_id) select project_id, employee_id from cte where `rank` = 1
with cte as (select p.project_id, p.employee_id, e.name, e.experience_years, dense_rank() over(partition by p.project_id order by e.experience_years desc) row_num from Project p left join Employee e on p.employee_id = e.employee_id order by p.project_id) select project_id, employee_id from cte where row_num = 1
with cte as (select p.project_id,p.employee_id,dense_rank() over(partition by project_id order by experience_years desc) rk from employee e join project p on e.employee_id=p.employee_id) select project_id,employee_id from cte where rk=1
with cte as (select project_id , employee.employee_id , dense_rank() over(partition by project_id order by experience_years desc) my_rank from project join employee on project.employee_id = employee.employee_id) select project_id , employee_id from cte where my_rank = 1
with cte as (select project_id, p.employee_id, rank() over (partition by project_id order by experience_years desc) rk from project p left join employee e on e.employee_id=p.employee_id) select project_id, employee_id from cte where rk =1
with cte as( select *, dense_rank() over (partition by project_id order by experience_years desc) as rnk from employee e join project p using (employee_id) ) select project_id, employee_id from cte where rnk = 1
with cte as( select *, rank() over(partition by project_id order by experience_years desc) rnk from Project p join Employee e using(employee_id)) select project_id,employee_id from cte where rnk =1 order by 1
with cte as( select p.employee_id, project_id, rank() over (partition by project_id order by experience_years desc) rnk from Project p join employee e on e.employee_id=p.employee_id ) select project_id, employee_id from cte where rnk=1
with cte as( select p.project_id, e.employee_id, max(e.experience_years) over(partition by project_id order by experience_years desc) as max_experience from Project p left join Employee e on p.employee_id = e.employee_id ) select project_id, e.employee_id from cte join Employee e on e.employee_id = cte.employee_id where e.experience_years = cte.max_experience
with cte_1 as ( select project_id, E.employee_id, name, rank() over (partition by project_id order by experience_years desc) as 'exp' from Employee E inner join Project P on E.employee_id = P.employee_id ) select project_id,employee_id from cte_1 where exp=1
with cte_inter as ( select project_id, Project.employee_id, dense_rank() over(partition by project_id order by max(experience_years) desc) as ranking from Project left join Employee on Employee.employee_id = Project.employee_id group by 1, 2) select project_id, employee_id from cte_inter where ranking = 1
with drvd as (select p.project_id, e.employee_id, e.experience_years from project p join employee e on p.employee_id = e.employee_id), drvd2 as (select project_id, employee_id, dense_rank() over (partition by project_id order by experience_years DESC) as rnk from drvd ) select project_id, employee_id from drvd2 where rnk = 1
with employee_experience as ( select p.project_id, p.employee_id, RANK() over(partition by p.project_id order by e.experience_years desc) as "rank" from Project p join Employee e on p.employee_id = e.employee_id ) select project_id, employee_id from employee_experience where employee_experience.rank = 1
with exp as ( select p.employee_id,p.project_id, rank () over(partition by project_id order by experience_years desc) as rnk from project p join employee e on p.employee_id = e.employee_id ) select project_id,employee_id from exp where rnk = 1
with highest_exp_project as ( select p.project_id, max(e.experience_years) max_exp from Project p left join Employee e on p.employee_id = e.employee_id group by p.project_id ) select hep.project_id, e.employee_id from highest_exp_project hep left join Project p on hep.project_id = p.project_id left join Employee e on p.employee_id = e.employee_id where e.experience_years = hep.max_exp order by hep.project_id, e.employee_id
with max_exp as( select p.project_id, max(e.experience_years) max_y from Project p left join Employee e on p.employee_id = e.employee_id group by 1) select p.project_id, p.employee_id from Project p left join Employee e on p.employee_id = e.employee_id right join max_exp m on p.project_id = m.project_id and e.experience_years = m.max_y order by 1
with p1 as ( select project_id, employee_id, rank() over(partition by project_id order by experience_years desc) as rk from project join employee using(employee_id) ) select project_id, employee_id from p1 where rk = 1 order by project_id
with pro_y as ( select project_id, p.employee_id, experience_years, max(experience_years) over(partition by project_id) as poj_max_year from Project p join Employee e on p.employee_id = e.employee_id ) select project_id, employee_id from pro_y where experience_years = poj_max_year order by 1,2
with proj_exp as ( select p.project_id , max(experience_years) years from project p inner join employee e on p.employee_id = e.employee_id group by 1 ), proj_emp as ( select p.project_id , e.employee_id , e.name, e.experience_years from project p inner join employee e on p.employee_id = e.employee_id ) select pem.project_id, pem.employee_id from proj_emp pem inner join proj_exp pex on pem.project_id = pex.project_id and pem.experience_years = pex.years
with project_employee as (select p.project_id, p.employee_id, e.experience_years from Project p join Employee e using (employee_id)) select project_id, employee_id from( select *, rank() over(partition by project_id order by experience_years desc) top_years from project_employee) pe where top_years = 1
with rk_tbl as ( select p.project_id,e.employee_id, rank() over(partition by p.project_id order by e.experience_years desc) as rk from project p join employee e on p.employee_id = e.employee_id ) select project_id, employee_id from rk_tbl where rk = 1
with t as (select p.* ,dense_rank() over (partition by project_id order by experience_years desc) as dr from Project p inner join Employee e on p.employee_id = e.employee_id) select t.project_id, t.employee_id from t where t.dr = 1
with t as (select project_id, employee_id, experience_years, max(experience_years) over(partition by project_id) max_exp from project join employee using(employee_id)) select project_id, employee_id from t where experience_years=max_exp
with t as( select project_id, max(experience_years) as highest from Project p join Employee e on p.employee_id=e.employee_id group by project_id) select p.project_id, p.employee_id from (Project p join Employee e on p.employee_id=e.employee_id) left join t on p.project_id= t.project_id where e.experience_years = t.highest
with t as(select project_id, employee_id, dense_rank()over(partition by project_id order by experience_years desc)rk from Project p inner join Employee e using(employee_id)) select project_id, employee_id from t where rk = 1
with t1 as ( select p.project_id, max(experience_years) as max_years from Project p left join Employee e on p.employee_id=e.employee_id group by p.project_id) select p.project_id, p.employee_id from Project p left join Employee e on p.employee_id=e.employee_id left join t1 t on p.project_id=t.project_id where e.experience_years = t.max_years
with t1 as (select p.project_id, p.employee_id, e.name, dense_rank() over (partition by p.project_id order by experience_years desc) as `exp` from project p join employee e using (employee_id)) select project_id, employee_id from t1 where exp = 1
with t1 as (select project_id, a.employee_id, rank() over (partition by project_id order by experience_years desc) as rnk from project a join employee b on a. employee_id = b.employee_id) select project_id, employee_id from t1 where rnk = 1
with t1 as (select project_id, b.employee_id, rank() over(partition by project_id order by experience_years desc) as rn from project a join employee b on a.employee_id = b.employee_id ) select project_id, employee_id from t1 where rn =1
with temp as ( SELECT p.project_id, p.employee_id, e.experience_years, RANK() OVER(Partition BY p.project_id ORDER BY e.experience_years DESC) as rnk FROM Project as p JOIN Employee as e ON p.employee_id = e.employee_id ) SELECT project_id, employee_id FROM temp WHERE rnk = 1
with temp as ( select p.project_id, e.employee_id, rank() over (partition by p.project_id order by experience_years DESC) as exp_rank from Project p left join Employee e on p.employee_id = e.employee_id ) select project_id, employee_id from temp where exp_rank = 1
with temp as ( select project_id, project.employee_id, dense_rank() over(partition by project_id order by experience_years desc) as rnk from project join employee on project.employee_id = employee.employee_id ) select project_id, employee_id from temp where rnk = 1
with temp as (SELECT P.project_id, P.employee_id, E.experience_years FROM Project P LEFT JOIN Employee E ON P.employee_id = E.employee_id) select project_id, employee_id from temp where (project_id, experience_years) in (select T.project_id,max(E.experience_years) from temp T LEFT JOIN Employee E ON T.employee_id = E.employee_id group by 1)
with temp as (select a.project_id, a.employee_id,e.experience_years from project a join employee e on a.employee_id = e.employee_id) select project_id, employee_id from temp a where experience_years >= all(select experience_years from temp b where a.project_id = b.project_id )
with temp as (select a.project_id, max(b.experience_years) as experience_years from Project a inner join Employee b on a.employee_id=b.employee_id group by a.project_id) select c.project_id, c.employee_id from Project c inner join Employee d on c.employee_id=d.employee_id inner join temp e on c.project_id=e.project_id where d.experience_years=e.experience_years
with temp as (select p.project_id, p.employee_id, e.experience_years, max(e.experience_years) over (partition by p.project_id) as max_project_exp from Project p join Employee e on p.employee_id = e.employee_id) select project_id, employee_id from temp where experience_years = max_project_exp
with temp as( select project_id, e.employee_id, rank() over(partition by project_id order by experience_years desc) r from project p join employee e on p.employee_id = e.employee_id ) select project_id, employee_id from temp where r = 1
with temp(project_id, employee_id, experience_years) as (select p.project_id, p.employee_id, e.experience_years from project p, employee e where p.employee_id = e.employee_id ) select project_id, employee_id from temp where (project_id, experience_years) in (select project_id, max(experience_years) from temp group by project_id)
with temp0 as (select p.project_id, max(e.experience_years) as max_exp from project p join employee e on p.employee_id = e.employee_id group by p.project_id) select p.project_id, e.employee_id from project p join employee e on p.employee_id = e.employee_id join temp0 t on p.project_id = t.project_id and e.experience_years = t.max_exp
with test as( select p.project_id as project_id, e.employee_id as employee_id, e.experience_years, dense_rank() over(partition by p.project_id order by e.experience_years desc) as rr from project p inner join employee e on p.employee_id=e.employee_id ) select project_id, employee_id from test where rr=1
with tmp as ( select t1.project_id, t1.employee_id, t2.experience_years, dense_rank() over (partition by project_id order by experience_years desc ) as rnk from Project t1 left join Employee t2 on t1.employee_id = t2.employee_id ) select project_id, employee_id from tmp where rnk = 1
with tmp as (select project_id, max(experience_years) as mx from project join employee on project.employee_id = employee.employee_id group by project_id) select a.project_id, a.employee_id from project a join tmp b on a.project_id = b.project_id join employee c on a.employee_id = c.employee_id and mx = experience_years
with tmp as( select p.project_id, p.employee_id, e.experience_years, max(e.experience_years) over(partition by p.project_id) as max_yrs from project as p left join employee as e on p.employee_id = e.employee_id ) select project_id, employee_id from tmp where experience_years=max_yrs
with tpe as ( select e.employee_id, e.name, e.experience_years, p.project_id, max(e.experience_years) over(partition by p.project_id) as max_experience_years from employee as e join project as p on e.employee_id = p.employee_id ) select tpe.project_id, tpe.employee_id from tpe where tpe.experience_years = tpe.max_experience_years
with x as ( select p.project_id,p.employee_id,e.name,e.experience_years, rank() over (partition by p.project_id order by e.experience_years desc) as rnk from project as p inner join employee as e on p.employee_id = e.employee_id ) select project_id,employee_id from x where rnk = 1
