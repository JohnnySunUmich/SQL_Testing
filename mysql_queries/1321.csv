SELECT * FROM (SELECT visited_on, SUM(daily_amount) OVER (ORDER BY visited_on ROWS 6 PRECEDING) AS amount, ROUND(AVG(daily_amount) OVER (ORDER BY visited_on ROWS 6 PRECEDING), 2) AS average_amount FROM (SELECT visited_on, SUM(amount) AS daily_amount FROM Customer GROUP BY visited_on) A) B WHERE visited_on >= DATE_ADD((SELECT MIN(visited_on) FROM Customer), INTERVAL 6 DAY)
SELECT * FROM (SELECT visited_on,SUM(amount) OVER(ORDER BY visited_on ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount,ROUND(AVG(amount) OVER(ORDER BY visited_on ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) AS average_amount FROM (SELECT SUM(amount) AS amount, visited_on FROM Customer GROUP BY visited_on) a)b WHERE DATE_SUB(visited_on, INTERVAL 6 DAY) IN (SELECT visited_on FROM Customer)
SELECT A.visited_on AS visited_on, SUM(B.day_sum) AS amount, ROUND(AVG(B.day_sum), 2) AS average_amount FROM (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on ) AS A, (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on ) AS B WHERE DATEDIFF(A.visited_on, B.visited_on) BETWEEN 0 AND 6 GROUP BY A.visited_on HAVING COUNT(B.visited_on) = 7
SELECT C1.visited_on,SUM(C2.amount) AS amount,ROUND(SUM(C2.amount)/7,2) AS average_amount FROM (SELECT visited_on,SUM(amount) AS amount FROM Customer GROUP BY visited_on) AS C1 JOIN (SELECT visited_on,SUM(amount) AS amount FROM Customer GROUP BY visited_on) AS C2 ON DATEDIFF(C1.visited_on,C2.visited_on) BETWEEN 0 AND 6 GROUP BY C1.visited_on HAVING COUNT(DISTINCT C2.visited_on)=7 ORDER BY C1.visited_on
SELECT Calendar.visited_on,SUM(amount) amount, ROUND(SUM(amount)/7,2) average_amount FROM (SELECT DISTINCT visited_on FROM Customer ) Calendar LEFT JOIN Customer C2 on DATEDIFF(Calendar.visited_on,C2.visited_on)<7 and DATEDIFF(Calendar.visited_on,C2.visited_on) >=0 GROUP BY Calendar.visited_on HAVING COUNT(DISTINCT C2.visited_on)=7
SELECT DISTINCT C1.visited_on, SUM(C2.amount) AS amount, ROUND(SUM(C2.amount)/7,2) as average_amount FROM Customer C2, (SELECT DISTINCT visited_on FROM Customer) AS C1 WHERE DATEDIFF(C1.visited_on, C2.visited_on) BETWEEN 0 AND 6 GROUP BY C1.visited_on HAVING COUNT(DISTINCT C2.visited_on) >= 7
SELECT DISTINCT visited_on, (SELECT SUM(amount) FROM Customer WHERE visited_on BETWEEN DATE_SUB(c.visited_on, INTERVAL 6 DAY) AND c.visited_on) AS amount, ROUND((SELECT SUM(amount) FROM Customer WHERE visited_on BETWEEN DATE_SUB(c.visited_on, INTERVAL 6 DAY) AND c.visited_on) / 7, 2) AS average_amount FROM Customer c LIMIT 6, 1000000000
SELECT a.visited_on AS visited_on, ROUND(SUM(b.day_sum),2) AS amount, ROUND(SUM(b.day_sum)/7, 2) AS average_amount FROM (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on ) a, (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on ) b WHERE DATEDIFF(a.visited_on, b.visited_on) BETWEEN 0 AND 6 GROUP BY a.visited_on HAVING COUNT(b.visited_on) = 7
SELECT a.visited_on AS visited_on, SUM(b.amount) AS amount, ROUND(SUM(b.amount)/7,2) AS average_amount FROM (SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on) a, (SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on) b WHERE DATEDIFF(a.visited_on, b.visited_on) BETWEEN 0 AND 6 GROUP BY a.visited_on HAVING COUNT(DISTINCT b.visited_on)=7
SELECT a.visited_on AS visited_on, SUM(b.day_sum) AS amount, ROUND(AVG(b.day_sum), 2) AS average_amount FROM (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on ) a join (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on ) b WHERE DATEDIFF(a.visited_on, b.visited_on) BETWEEN 0 AND 6 GROUP BY a.visited_on HAVING COUNT(b.visited_on) = 7
SELECT a.visited_on AS visited_on, SUM(b.day_sum) AS amount, ROUND(AVG(b.day_sum), 2) AS average_amount FROM (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on ) a, (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on ) b WHERE DATEDIFF(a.visited_on, b.visited_on) BETWEEN 0 AND 6 GROUP BY a.visited_on HAVING COUNT(b.visited_on) = 7
SELECT a.visited_on, SUM(b.amount) AS amount, ROUND(SUM(b.amount)/7, 2) AS average_amount FROM (SELECT DISTINCT visited_on FROM Customer) a JOIN Customer b ON DATEDIFF(a.visited_on, b.visited_on) BETWEEN 0 AND 6 GROUP BY a.visited_on HAVING COUNT(DISTINCT(b.visited_on)) > 6
SELECT a.visited_on, SUM(b.day_sum) AS amount, ROUND(AVG(b.day_sum), 2) AS average_amount FROM (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on) a, (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on) b WHERE DATEDIFF(a.visited_on, b.visited_on) BETWEEN 0 AND 6 GROUP BY a.visited_on HAVING COUNT(b.visited_on) = 7 ORDER BY a.visited_on
SELECT a.visited_on, a.amount, ROUND(a.amount/7,2) as average_amount FROM ( SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as amount, RANK() OVER(ORDER BY visited_on) as cust_rank FROM customer GROUP BY 1)a WHERE cust_rank>6
SELECT b.visited_on, SUM(a.amount) AS amount, ROUND(SUM(a.amount)/7, 2) AS average_amount FROM Customer a LEFT JOIN (SELECT DISTINCT visited_on FROM Customer) b ON a.visited_on BETWEEN DATE_ADD(b.visited_on, INTERVAL -6 DAY) AND b.visited_on WHERE DATE_ADD(b.visited_on, INTERVAL -6 DAY) IN (SELECT visited_on FROM Customer) GROUP BY b.visited_on ORDER BY b.visited_on
SELECT b.visited_on, SUM(a.amount) AS amount, ROUND(SUM(a.amount)/7,2) AS average_amount FROM Customer a, (SELECT DISTINCT visited_on FROM Customer) b WHERE DATEDIFF(b.visited_on, a.visited_on) BETWEEN 0 AND 6 GROUP BY b.visited_on HAVING COUNT(DISTINCT a.visited_on) = 7
SELECT b.visited_on, sum(a.amount) AS amount, round(sum(a.amount)/7,2) AS average_amount FROM Customer a, (select distinct visited_on from Customer) b WHERE DATEDIFF(b.visited_on, a.visited_on) BETWEEN 0 AND 6 GROUP BY b.visited_on HAVING count(distinct a.visited_on)=7
SELECT t1.visited_on, SUM(t2.amount_date) AS amount, ROUND(SUM(t2.amount_date)/7,2) AS average_amount FROM( SELECT visited_on, SUM(amount) AS amount_date FROM Customer GROUP BY visited_on ORDER BY visited_on ) t1 INNER JOIN ( SELECT visited_on, SUM(amount) AS amount_date FROM Customer GROUP BY visited_on ORDER BY visited_on ) t2 ON DATEDIFF(t1.visited_on, t2.visited_on) BETWEEN 0 AND 6 WHERE t1.visited_on >= ( SELECT visited_on FROM Customer LIMIT 1 ) + 6 GROUP BY t1.visited_on ORDER BY visited_on
SELECT visited_on ,running_amount AS amount ,ROUND(running_amount/7,2) AS average_amount FROM (SELECT * ,SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS running_amount ,RANK() OVER (ORDER BY visited_on) AS rk FROM (SELECT visited_on ,SUM(amount) AS amount FROM Customer GROUP BY 1) a) b WHERE rk>6 ORDER BY 1
SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(CAST(SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS FLOAT)/7.0 ,2) AS average_amount FROM Customer GROUP BY visited_on ORDER BY visited_on LIMIT 6,1000000
SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS'amount', ROUND(CAST(SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS FLOAT)/7.0 ,2) AS'average_amount' FROM Customer GROUP BY visited_on ORDER BY visited_on LIMIT 1000 OFFSET 6
SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS'amount', ROUND(CAST(SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS FLOAT)/7.0 ,2) AS'average_amount' FROM Customer GROUP BY visited_on ORDER BY visited_on LIMIT 6, 1000
SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS'amount', ROUND(CAST(SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS FLOAT)/7.0 ,2) AS'average_amount' FROM Customer GROUP BY visited_on ORDER BY visited_on LIMIT 6,1000000
SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS'amount', ROUND(CAST(SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS FLOAT)/7.0 ,2) AS'average_amount' FROM Customer GROUP BY visited_on ORDER BY visited_on limit 100 OFFSET 6
SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS'amount', ROUND(CAST(SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS FLOAT)/7.0 ,2) AS'average_amount' FROM Customer GROUP BY visited_on ORDER BY visited_on limit 1000 OFFSET 6
SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS'amount', ROUND(SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/7 ,2) AS'average_amount' FROM Customer GROUP BY visited_on ORDER BY visited_on limit 1000 OFFSET 6
SELECT visited_on, SUM(SUM(amount)) OVER(ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(SUM(SUM(amount)) OVER(ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/7.0, 2) AS average_amount FROM Customer GROUP BY visited_on ORDER BY visited_on LIMIT 6, 2000
SELECT visited_on, amount, ROUND(amount/ 7, 2) AS average_amount FROM (SELECT DENSE_RANK() OVER (ORDER BY visited_on) AS r, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, visited_on FROM Customer GROUP BY visited_on ) a WHERE r > 6
SELECT visited_on, amount, ROUND(amount/7,2) as average_amount FROM ( SELECT visited_on, SUM(amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as amount, ROW_NUMBER() OVER() as ranking FROM ( SELECT visited_on, sum(amount) as amount FROM Customer GROUP BY visited_on ) a ) b WHERE ranking >= 7
SELECT visited_on, amount, ROUND(amount/7,2) as average_amount FROM (SELECT visited_on,SUM(SUM(amount)) OVER(order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount FROM Customer GROUP BY visited_on ORDER BY visited_on LIMIT 1000 OFFSET 6) AS temp
SELECT visited_on, amount, ROUND(average_amount, 2) AS average_amount FROM (SELECT visited_on, RANK() OVER(ORDER BY visited_on) AS ranking, SUM(amount) OVER(ORDER BY visited_on ROWS 6 PRECEDING) AS amount, AVG(amount) OVER(ORDER BY visited_on ROWS 6 preceding) AS average_amount FROM (SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on) a) b WHERE ranking >= 7
SELECT visited_on, amount, ROUND(average_amount,2) AS average_amount FROM (SELECT visited_on, SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS amount, (SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING and CURRENT ROW))/7 AS average_amount FROM( SELECT visited_on, SUM(amount) AS amount FROM customer GROUP BY visited_on)t1 ) t2 WHERE visited_on >= (SELECT DATE_ADD(MIN(visited_on), INTERVAL 6 DAY) FROM customer)
SELECT visited_on, amount, average_amount FROM ( SELECT visited_on, amount, ROUND(amount/7, 2) AS average_amount, ROW_NUMBER() OVER() AS number FROM ( SELECT DISTINCT visited_on, SUM(amount) OVER(ORDER BY visited_on RANGE INTERVAL 6 DAY PRECEDING) AS amount FROM Customer ) AS s1 ) AS s2 WHERE number >= 7
SELECT visited_on, amount, average_amount FROM (SELECT visited_on, ROUND(SUM(total_amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) amount, ROUND(SUM(total_amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/7,2) average_amount, RANK() OVER(ORDER BY visited_on) RNK FROM (SELECT visited_on,SUM(amount) total_amount FROM Customer GROUP BY visited_on) Temp) Temp2 WHERE RNK >= 7
SELECT visited_on, amount, average_amount FROM( SELECT visited_on, SUM(total) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(CAST(SUM(total) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS FLOAT)/7.0 ,2) AS 'average_amount', RANK()OVER(ORDER BY visited_on) AS ranks FROM( SELECT visited_on, SUM(amount) AS total FROM Customer GROUP BY 1 ORDER BY 1) tem) tem1 WHERE ranks >= 7
SELECT visited_on, amount, round(amount/7, 2) as average_amount FROM (SELECT visited_on, row_number() over() as seq, Sum(amount) Over (order by visited_on rows between 6 preceding and current row) as amount FROM ( SELECT sum(amount) as amount, visited_on FROM Customer GROUP BY visited_on ) t ) t2 WHERE seq > 6
SELECT visited_on, amount, round(amount/7, 2) as average_amount from ( select visited_on, sum(sum(amount)) over (order by visited_on ROWS between 6 preceding and current row) as amount, dense_rank() over(order by visited_on) as rnk from Customer group by visited_on) a where rnk > 6 order by 1
SELECT visited_on, sum_amount AS amount, ROUND(sum_amount / 7, 2) AS average_amount FROM (select *, row_number() over() as seq, sum(amount) over(rows between 6 preceding and current row) as sum_amount FROM (select visited_on, sum(amount) as amount from Customer group by visited_on order by visited_on) a)b WHERE seq >6
SELECT visited_on, window_amount as amount, round(window_amount/7,2) as average_amount FROM( SELECT visited_on , sum(amount_per_day) over (order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as window_amount , dense_rank() over (order by visited_on) as rk FROM( select visited_on , sum(amount) as amount_per_day FROM Customer GROUP BY visited_on )t )t2 WHERE rk > 6
Select a.visited_on,sum(b.am) as amount, round(avg(b.am),2) as average_amount from (select visited_on,sum(amount) as am from Customer group by visited_on) as a, (select visited_on,sum(amount) as am from Customer group by visited_on) as b where datediff(a.visited_on,b.visited_on) between 0 and 6 group by a.visited_on having count(b.visited_on)=7
Select c2.visited_on,sum(c1.amount) as amount,round(avg(c1.amount),2) as average_amount from (select visited_on,sum(amount) as amount from Customer group by visited_on) c1,(select visited_on,sum(amount) as amount from Customer group by visited_on) c2 where datediff(c2.visited_on,c1.visited_on) between 0 and 6 group by c2.visited_on having count(distinct c1.visited_on)=7
WITH CTE AS ( SELECT DISTINCT DATE_FORMAT(visited_on, '%Y-%m-%d') AS visited_on, SUM(amount) OVER(ORDER BY visited_on RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW) AS amount, DENSE_RANK() OVER(ORDER BY visited_on ASC) AS d_rank FROM Customer ) SELECT visited_on, amount, ROUND(SUM(amount / 7), 2) AS average_amount FROM CTE WHERE d_rank >= 7 GROUP BY 1
WITH CTE AS ( SELECT VISITED_ON, SUM(AMOUNT) AS DAILY_AMOUNT FROM CUSTOMER GROUP BY VISITED_ON ) SELECT VISITED_ON, AMOUNT, AVERAGE_AMOUNT FROM (SELECT VISITED_ON, SUM(DAILY_AMOUNT) OVER(ORDER BY VISITED_ON ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS AMOUNT, ROUND(AVG(DAILY_AMOUNT) OVER(ORDER BY VISITED_ON ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) AS AVERAGE_AMOUNT, RANK() OVER(ORDER BY VISITED_ON) AS RN FROM CTE)T WHERE RN>6
WITH CTE AS ( SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on ) select r1.visited_on, sum(r2.amount) as amount, round(sum(r2.amount)/7, 2) as average_amount from CTE as r1 join CTE as r2 on datediff(r1.visited_on, r2.visited_on) between 0 and 6 group by r1.visited_on having count(distinct r2.visited_on)>=7 order by r1.visited_on
WITH CTE AS ( SELECT visited_on, SUM(amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(AVG(amount*1.00) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) AS average_amount FROM (SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on) T ) SELECT visited_on, amount, average_amount FROM CTE WHERE DATE_ADD(visited_on, INTERVAL -6 DAY) >= (SELECT MIN(visited_on) FROM Customer) ORDER BY 1 ASC
WITH CTE AS ( SELECT visited_on, SUM(amount) as amount FROM Customer GROUP BY visited_on ) SELECT d1.visited_on, SUM(d2.amount) as amount, ROUND(AVG(d2.amount),2) as average_amount FROM CTE as d1 JOIN CTE as d2 ON DATEDIFF(d1.visited_on, d2.visited_on) BETWEEN 0 AND 6 GROUP BY d1.visited_on HAVING COUNT(DISTINCT d2.visited_on) = 7 ORDER BY 1
WITH CTE AS( SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY 1 ) SELECT visited_on, SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(AVG(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW), 2) AS average_amount FROM CTE LIMIT 6, 10000
WITH CTE1 AS ( SELECT visited_on, SUM(amount) as mid_tot FROM customer GROUP BY visited_on ), CTE2 AS (SELECT visited_on, ROUND(SUM(mid_tot) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) as amount, ROUND(AVG(mid_tot) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) as average_amount, RANK() OVER(ORDER BY visited_on) rnk FROM CTE1 ) SELECT visited_on, amount, average_amount FROM CTE2 WHERE rnk>6
WITH Customer2 AS ( SELECT visited_on, sum(amount) as amount FROM Customer GROUP BY 1 ) SELECT c1.visited_on, sum(c2.amount) as amount, round(avg(c2.amount),2) as average_amount FROM Customer2 c1 LEFT JOIN Customer2 c2 ON DATEDIFF(c1.visited_on, c2.visited_on) BETWEEN 0 and 6 GROUP BY 1 HAVING count(c2.visited_on) = 7 ORDER BY 1
WITH DR AS( SELECT VISITED_ON, SUM(AMOUNT) AS VAL, ROW_NUMBER() OVER(ORDER BY VISITED_ON ASC) AS R FROM CUSTOMER GROUP BY VISITED_ON ), MOV_AVG AS( SELECT VISITED_ON, R, VAL+LAG(VAL,1)OVER(ORDER BY VISITED_ON ASC)+ LAG(VAL,2)OVER(ORDER BY VISITED_ON ASC) + LAG(VAL,3)OVER(ORDER BY VISITED_ON ASC) + LAG(VAL,4)OVER(ORDER BY VISITED_ON ASC) + LAG(VAL,5)OVER(ORDER BY VISITED_ON ASC) + LAG(VAL,6)OVER(ORDER BY VISITED_ON ASC) AS AMOUNT, ROUND((VAL+LAG(VAL,1)OVER(ORDER BY VISITED_ON ASC)+ LAG(VAL,2)OVER(ORDER BY VISITED_ON ASC) + LAG(VAL,3)OVER(ORDER BY VISITED_ON ASC) + LAG(VAL,4)OVER(ORDER BY VISITED_ON ASC) + LAG(VAL,5)OVER(ORDER BY VISITED_ON ASC) + LAG(VAL,6)OVER(ORDER BY VISITED_ON ASC) )/7,2) AS AVERAGE_AMOUNT FROM DR ) SELECT VISITED_ON, AMOUNT, AVERAGE_AMOUNT FROM MOV_AVG WHERE R>=7
WITH DailySales AS (SELECT visited_on ,SUM(amount) AS amount FROM Customer GROUP BY visited_on), MovingTotal AS (SELECT visited_on ,SUM(amount) OVER(ORDER BY visited_on ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount ,ROW_NUMBER() OVER(ORDER BY visited_on) AS Rn FROM DailySales) SELECT visited_on ,amount ,ROUND(amount/7,2) AS average_amount FROM MovingTotal WHERE Rn > 6 ORDER BY 1 ASC
WITH DailyTotal AS (SELECT visited_on ,SUM(amount) AS amount From Customer GROUP BY visited_on), MovingTotal AS (SELECT visited_on ,SUM(amount) OVER(ORDER BY visited_on ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount ,ROW_NUMBER() OVER(ORDER BY visited_on ASC) AS Rn FROM DailyTotal) SELECT visited_on ,amount ,ROUND(amount/7,2) AS average_amount FROM MovingTotal WHERE Rn >= 7 ORDER BY 1 ASC
WITH DayTotal AS (SELECT visited_on ,SUM(amount) AS amount FROM Customer GROUP BY visited_on ORDER BY visited_on), WeekMovingTotal AS(SELECT visited_on ,ROW_NUMBER() OVER() AS Seq ,SUM(amount) OVER(ROWS BETWEEN 6 Preceding AND CURRENT ROW) AS WeekSumTotal FROM DayTotal) SELECT visited_on ,WeekSumTotal AS amount ,ROUND(WeekSumTotal/7,2) AS average_amount FROM WeekMovingTotal WHERE Seq > 6
WITH MOV_AVG AS( SELECT VISITED_ON, R, CASE WHEN R>=7 THEN SUM(VAL) OVER(ORDER BY VISITED_ON ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) ELSE NULL END AS AMOUNT FROM (SELECT VISITED_ON, SUM(AMOUNT) AS VAL, ROW_NUMBER() OVER(ORDER BY VISITED_ON ASC) AS R FROM CUSTOMER GROUP BY VISITED_ON) AS DR ) SELECT VISITED_ON, AMOUNT, ROUND(AMOUNT/7,2) AS AVERAGE_AMOUNT FROM MOV_AVG WHERE R>=7
WITH TEMP AS ( SELECT visited_on, SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS 'amount', rank() OVER(ORDER BY visited_on ASC) as 'Rank' FROM Customer GROUP BY 1) SELECT visited_on, amount, round(amount/7,2) AS average_amount FROM TEMP WHERE TEMP.rank>6 ORDER BY visited_on
WITH TEMP AS (SELECT VISITED_ON, SUM(AMOUNT) OVER (ORDER BY VISITED_ON RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW) AS AMOUNT, AVG(AMOUNT) OVER (ORDER BY VISITED_ON RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW) AS AVERAGE_AMOUNT, RANK() OVER (ORDER BY VISITED_ON) AS RNK FROM (SELECT VISITED_ON, SUM(AMOUNT) AS AMOUNT FROM CUSTOMER GROUP BY VISITED_ON) T) SELECT VISITED_ON, AMOUNT, ROUND(AVERAGE_AMOUNT,2) AVERAGE_AMOUNT FROM TEMP WHERE RNK >= 7 ORDER BY 1
WITH W AS (SELECT VISITED_ON, SUM(AMOUNT) AS SUM_A FROM CUSTOMER GROUP BY VISITED_ON) SELECT W1.VISITED_ON, sum(W2.SUM_A) AS AMOUNT, ROUND(SUM(W2.SUM_A)/7 ,2) AS AVERAGE_AMOUNT FROM W W1 JOIN W W2 ON DATEDIFF(W1.VISITED_ON, W2.VISITED_ON) <= 6 AND DATEDIFF(W1.VISITED_ON, W2.VISITED_ON) >= 0 GROUP BY W1.VISITED_ON HAVING COUNT(W1.VISITED_ON) = 7
WITH all_moving_average AS (SELECT visited_on, SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) amount, ROUND(AVG(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) average_amount, visit_rank FROM ( SELECT visited_on, SUM(amount) amount, RANK() OVER (ORDER BY visited_on) visit_rank FROM customer GROUP BY visited_on ) t) SELECT visited_on, amount, average_amount FROM all_moving_average WHERE visit_rank > 6
WITH c1 AS (SELECT visited_on ,SUM(amount) AS amount FROM Customer GROUP BY 1) ,c2 AS ( SELECT visited_on ,SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount ,ROW_NUMBER() OVER (ORDER BY visited_on) AS rn FROM c1) SELECT visited_on ,amount ,ROUND(amount/7,2) AS average_amount FROM c2 WHERE rn > 6 ORDER BY 1
WITH cal AS (SELECT DISTINCT visited_on, SUM(amount) OVER (ORDER BY visited_on RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW) amount, ROUND( SUM(amount) OVER (ORDER BY visited_on RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW)/7,2) average_amount FROM Customer) SELECT * FROM cal WHERE visited_on >= (SELECT visited_on FROM Customer ORDER BY 1 LIMIT 1) + 6 ORDER BY 1
WITH cte AS ( SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on ) SELECT c1.visited_on, SUM(c2.amount) AS amount , ROUND(AVG(c2.amount), 2) AS average_amount FROM cte c1 JOIN cte c2 ON DATEDIFF(c1.visited_on, c2.visited_on) >= 0 AND DATEDIFF(c1.visited_on, c2.visited_on) < 7 GROUP BY c1.visited_on HAVING COUNT(c2.visited_on) = 7 ORDER BY c1.visited_on
WITH cte AS ( SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on), cte1 AS( SELECT visited_on, SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, AVG(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS avg_amount, ROW_NUMBER() OVER () AS rk FROM cte) SELECT visited_on, amount, ROUND(avg_amount, 2) AS average_amount FROM cte1 WHERE rk > 6
WITH cte AS (SELECT customer_id, name, visited_on, sum(amount) AS amount, rank() OVER (order by visited_on) AS rnk FROM customer GROUP by visited_on) SELECT visited_on, amount, average_amount FROM (SELECT customer_id,rnk, name,visited_on, sum(amount) OVER (order by visited_on rows between 6 preceding and current row) AS amount, round(sum(amount) OVER (order by visited_on rows between 6 preceding and current row)/7,2) AS average_amount FROM cte) a where rnk >6
WITH cte AS (SELECT visited_on ,SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW ) AS amount ,ROUND((SUM(SUM(amount)) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW )/7),2) AS average_amount ,RANK() OVER(ORDER BY visited_on) AS rnk FROM Customer GROUP BY visited_on ) SELECT visited_on,amount,average_amount FROM cte WHERE rnk > 6 ORDER BY visited_on
WITH cte AS (SELECT visited_on, SUM(amount) AS amount,row_number() OVER(ORDER BY visited_on) as rw FROM Customer GROUP BY visited_on Order BY visited_on ASC) SELECT visited_on, amount,average_amount FROM ( SELECT visited_on, SUM(amount) OVER(rows between 6 Preceding and current row) AS amount, round(avg(amount) OVER(rows between 6 preceding and current row),2) as average_amount, rw FROM cte ORDER BY visited_on) a WHERE rw>6
WITH cte AS (SELECT visited_on, SUM(amount) AS total_amount FROM Customer GROUP BY visited_on), cte2 AS (SELECT visited_on, SUM(total_amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(AVG(total_amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW), 2) AS average_amount, ROW_NUMBER() OVER(ORDER BY visited_on) AS row_num FROM cte) SELECT visited_on, amount, average_amount FROM cte2 WHERE row_num >= 7 ORDER BY visited_on
WITH cte AS (SELECT visited_on, SUM(amount) as total FROM Customer GROUP BY 1) SELECT visited_on, amount, average_amount FROM (SELECT visited_on, ROW_NUMBER() OVER (ORDER BY visited_on ASC) AS date_ranking, SUM(total) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(SUM(total) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/7,2) AS average_amount FROM cte) sub WHERE date_ranking >= 7
WITH cte AS( SELECT visited_on, sum(amount) as amount, row_number() over (order by visited_on) as rn FROM Customer GROUP BY visited_on ), cte2 AS ( SELECT visited_on, sum(amount) over (order by visited_on rows between 6 preceding and CURRENT ROW) as amount, round(avg(amount) over (order by visited_on rows between 6 preceding and CURRENT ROW),2) as average_amount, rn FROM cte ) SELECT visited_on, amount, average_amount FROM cte2 WHERE rn >6
WITH daily_spend AS ( SELECT visited_on , SUM(amount) AS Sales , MIN(visited_on) AS f_date FROM Customer GROUP BY visited_on ) , full_set AS ( SELECT visited_on , SUM(Sales) OVER(ORDER BY visited_on ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount , ROUND(AVG(Sales) OVER(ORDER BY visited_on ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW), 2) AS average_amount FROM daily_spend ) SELECT * FROM full_set WHERE visited_on >= date_add((SELECT MIN(visited_on) FROM Customer), INTERVAL 6 DAY)
WITH daily_summary AS ( SELECT visited_on, SUM(amount) as amount FROM customer GROUP BY visited_on), rolling_window AS (SELECT visited_on, SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND current row) as amount, AVG(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND current row) as average_amount, ROW_NUMBER() OVER (ORDER BY visited_on) as rownum FROM daily_summary) SELECT visited_on, amount, ROUND(average_amount, 2) as average_amount FROM rolling_window WHERE rownum > 6
WITH daily_trans AS ( SELECT visited_on, SUM(amount) As amount FROM Customer GROUP BY 1 ) SELECT a.visited_on, SUM(b.amount) AS amount, ROUND(SUM(b.amount)/7, 2) AS average_amount FROM daily_trans a LEFT JOIN daily_trans b ON a.visited_on <= DATE_ADD(b.visited_on, INTERVAL 6 DAY) AND a.visited_on >= b.visited_on GROUP BY 1 HAVING COUNT(b.visited_on) >= 7
WITH datebased AS ( SELECT visited_on, SUM(amount) AS daily_amount FROM Customer GROUP BY visited_on ), temp AS ( SELECT C1.visited_on, SUM(C2.daily_amount) AS amount, ROUND(AVG(C2.daily_amount), 2) AS average_amount FROM datebased C1 INNER JOIN datebased C2 ON DATEDIFF(C1.visited_on, C2.visited_on) BETWEEN 0 AND 6 GROUP BY C1.visited_on HAVING COUNT(C2.daily_amount) >= 7 ORDER BY C1.visited_on ) SELECT * FROM temp
WITH day AS (SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on) SELECT t1.visited_on AS visited_on, SUM(t2.day_sum) AS amount, ROUND(AVG(t2.day_sum), 2) AS average_amount FROM day AS t1 INNER JOIN day as t2 ON DATEDIFF(t1.visited_on, t2.visited_on) BETWEEN 0 AND 6 GROUP BY t1.visited_on HAVING COUNT(t2.visited_on) = 7
WITH ranking AS ( SELECT visited_on, SUM(SUM(amount)) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, RANK() OVER (ORDER BY visited_on) rnk FROM customer GROUP BY visited_on ) SELECT visited_on, amount, ROUND(amount/7, 2) AS average_amount FROM ranking WHERE rnk > 6 ORDER BY visited_on
WITH raw_data AS ( SELECT visited_on, SUM(amount) OVER(ORDER BY visited_on RANGE BETWEEN INTERVAL '6' DAY PRECEDING AND CURRENT ROW) AS amount, DENSE_RANK() OVER(ORDER BY visited_on RANGE BETWEEN INTERVAL '6' DAY PRECEDING AND CURRENT ROW) AS num_rows FROM Customer ) SELECT DISTINCT visited_on, amount, ROUND(amount/7,2) AS average_amount FROM raw_data WHERE num_rows >=7 ORDER BY visited_on
WITH res AS ( SELECT DISTINCT visited_on, SUM(amount) OVER( ORDER BY visited_on RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW ) AS amount, DENSE_RANK() OVER( ORDER BY visited_on ) AS rnk FROM Customer ) SELECT visited_on, amount, ROUND(amount/7,2) AS average_amount FROM res WHERE rnk >= 7
WITH subt AS (SELECT visited_on, SUM(amount) amount FROM Customer GROUP BY 1 ORDER BY 2 DESC) SELECT visited_on, ROUND(SUM(amount) OVER(ORDER BY visited_on RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW ),2) amount, ROUND(AVG(amount) OVER(ORDER BY visited_on RANGE BETWEEN INTERVAL '6' DAY PRECEDING AND CURRENT ROW),2) average_amount FROM subt LIMIT 6, 17899009887789
WITH t AS ( SELECT visited_on,SUM(amount) AS amount, ROW_NUMBER() OVER(ORDER BY visited_on) AS r_num FROM Customer GROUP BY visited_on) SELECT visited_on, amount, average_amount FROM ( SELECT visited_on, SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(AVG(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) AS average_amount, r_num FROM t GROUP BY visited_on) AS d WHERE d.r_num >6 ORDER BY visited_on
WITH t AS (SELECT DISTINCT visited_on FROM customer WHERE DATE_SUB(visited_on, INTERVAL 6 DAY)>=(SELECT MIN(visited_on) FROM customer)) SELECT t.visited_on, SUM(amount) amount, ROUND(SUM(amount)/7,2) average_amount FROM customer c JOIN t ON c.visited_on BETWEEN DATE_SUB(t.visited_on, INTERVAL 6 DAY) AND t.visited_on GROUP BY t.visited_on
WITH t1 AS ( SELECT visited_on, SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(AVG(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) average_amount, visit_rank FROM( SELECT visited_on, SUM(amount) AS amount, RANK() OVER (ORDER BY visited_on) AS visit_rank FROM Customer GROUP BY 1)t) SELECT visited_on, amount, average_amount FROM t1 WHERE visit_rank > 6
WITH t1 AS ( SELECT visited_on, SUM(amount) amount FROM Customer GROUP BY 1 ) SELECT visited_on, amount, ROUND(average_amount, 2) average_amount FROM ( SELECT visited_on, SUM(amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) amount, AVG(amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) average_amount, ROW_NUMBER() OVER(ORDER BY visited_on) rn FROM t1 ) tmp WHERE rn > 6 ORDER BY 1
WITH t1 AS(SELECT visited_on, SUM(amount) AS day_sum FROM Customer GROUP BY visited_on) SELECT t1.visited_on AS visited_on, SUM(t2.day_sum) AS amount, ROUND(AVG(t2.day_sum), 2) AS average_amount FROM t1, t1 AS t2 WHERE DATEDIFF(t1.visited_on, t2.visited_on) BETWEEN 0 AND 6 GROUP BY t1.visited_on HAVING COUNT(t2.visited_on) = 7
WITH temp AS ( SELECT visited_on, ROUND(SUM(amount) OVER(ORDER BY visited_on RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW), 2) AS amount, ROUND(SUM(amount) OVER(ORDER BY visited_on RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW) / 7, 2) AS average_amount FROM Customer ) SELECT DISTINCT * FROM temp WHERE DATE_SUB(visited_on, INTERVAL 6 DAY) IN (SELECT DISTINCT visited_on FROM Customer)
WITH temp AS (SELECT row_num, visited_on, SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(AVG(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW), 2) AS average_amount FROM (SELECT ROW_NUMBER() OVER (ORDER BY visited_on) AS row_num , visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on) temp) SELECT visited_on, amount, average_amount FROM temp WHERE row_num >= 7
With daily_revenue As (Select visited_on, sum(amount) as daily_total From Customer Group By visited_on) Select a.visited_on, sum(b.daily_total) as amount, Round(sum(b.daily_total)/Count(*),2) As average_amount From daily_revenue a, daily_revenue b Where b.visited_on <= a.visited_on And date_add(b.visited_on, Interval 6 Day) >= a.visited_on And date_add(a.visited_on, Interval -6 Day) >= (Select min(visited_on) From Customer) Group By a.visited_on
With date_order as (Select distinct c1.visited_on as start_date, c2.visited_on as end_date From Customer c1 Left join Customer c2 On c2.visited_on = date_add(c1.visited_on, interval 6 day)) Select end_date as visited_on, sum(amount) as amount, round(sum(amount)/7,2) as average_amount From Customer c Join date_order d On visited_on between start_date and end_date Group by start_date, end_date order by visited_on
With date_table as (Select distinct visited_on From Customer where DateDIFF(visited_on,(Select MIN(visited_on) From Customer))>=6) Select D.visited_on, SUM(C.amount) as amount, Round(SUM(C.amount)/7,2) as average_amount From date_table D LEFT Join Customer C On DateDiff(D.visited_on, C.visited_on)>=0 and DateDiff(D.visited_on, C.visited_on)<7 Group by D.visited_on
select * from ( select visited_on, ( case when row_number() over (order by visited_on) > 6 then sum(amount) over(order by visited_on asc rows between 6 preceding and current row) else null end ) as amount, round( case when row_number() over (order by visited_on) > 6 then avg(amount) over(order by visited_on asc rows between 6 preceding and current row) else null end , 2) as average_amount from (select visited_on, sum(amount) as amount from Customer group by visited_on) as tmp2 ) as tmp where average_amount is not null order by visited_on
select * from ( select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and 0 following) as amount, round(avg(amount) over(order by visited_on rows between 6 preceding and 0 following), 2) as average_amount from ( select visited_on, sum(amount) as amount from customer group by visited_on ) a ) b where date_add(visited_on, interval -6 day) in (select distinct visited_on from customer)
select VISITED_ON, AMOUNT, AVERAGE_AMOUNT from ( select VISITED_ON, sum(amount) over (order by visited_on rows between 6 preceding and current row) AMOUNT, round((sum(amount) over (order by visited_on rows between 6 preceding and current row))/(count(amount) over (order by visited_on rows between 6 preceding and current row)),2) AVERAGE_AMOUNT, count(amount) over (order by visited_on rows between 6 preceding and current row) c from (select visited_on, sum(amount) as amount from customer group by visited_on ) a )b where c>6
select a.visited_on as visited_on, SUM(b.day_sum) as amount, ROUND(AVG(b.day_sum), 2) as average_amount from (select visited_on, sum(amount) as day_sum from customer group by visited_on) a, (select visited_on, sum(amount) as day_sum from customer group by visited_on) b where datediff(a.visited_on, b.visited_on) between 0 and 6 group by a.visited_on having count(b.visited_on) = 7
select a.visited_on as visited_on, sum(b.day_sum) as amount ,round(avg(b.day_sum),2) as average_amount from (select visited_on, sum(amount) as day_sum from customer group by visited_on) a, (select visited_on, sum(amount) as day_sum from customer group by visited_on) b where datediff(a.visited_on,b.visited_on) between 0 and 6 group by a.visited_on having count(b.visited_on)=7
select a.visited_on visited_on, sum(b.day_sum) amount, round(avg(b.day_sum),2) average_amount from (select visited_on, sum(amount) day_sum from Customer group by 1) a, (select visited_on, sum(amount) day_sum from Customer group by 1) b where datediff(a.visited_on, b.visited_on) between 0 and 6 group by 1 having count(1) = 7
select a.visited_on, SUM(b.day_sum) as amount, ROUND(AVG(b.day_sum), 2) as average_amount from (select visited_on, SUM(amount) as day_sum from Customer group by visited_on) a, (select visited_on, SUM(amount) as day_sum from Customer group by visited_on) b where DATEDIFF(a.visited_on, b.visited_on) between 0 and 6 group by a.visited_on Having count(distinct b.visited_on) = 7
select a.visited_on, sum(b.amount) as amount, round(avg(b.amount),2) as average_amount from (select visited_on, sum(amount) amount from customer group by visited_on) a join (select visited_on, sum(amount) amount from customer group by visited_on) b where a.visited_on >= b.visited_on and a.visited_on <= adddate(b.visited_on, 6) and a.visited_on >= (select adddate(min(visited_on),6) from customer) group by a.visited_on order by a.visited_on
select a.visited_on, sum(b.amount) as amount, round(avg(b.amount),2) as average_amount from (select visited_on, sum(amount) as amount from customer group by visited_on) a, (select visited_on, sum(amount) as amount from customer group by visited_on) b where datediff(a.visited_on, b.visited_on) between 0 and 6 group by a.visited_on having count(b.visited_on) = 7
select a.visited_on, sum(b.amount) as amount, round(avg(b.amount),2) as average_amount from (select visited_on, sum(amount) as amount from customer group by visited_on) a, (select visited_on, sum(amount) as amount from customer group by visited_on) b where datediff(a.visited_on, b.visited_on) between 0 and 6 group by a.visited_on having count(b.visited_on) = 7 order by a.visited_on
select a.visited_on, sum(b.amount) as amount, round(sum(b.amount)/7,2) as average_amount from (select distinct visited_on from Customer where visited_on in (select date_add(visited_on,interval 6 day) from Customer))a left join Customer b on b.visited_on between a.visited_on - interval 6 day and a.visited_on group by 1
select a.visited_on, sum(b.sum) amount, round(avg(b.sum),2) average_amount from (select visited_on, sum(amount) as sum, avg(amount) from Customer group by visited_on) a, (select visited_on, sum(amount) sum, avg(amount) from Customer group by visited_on) b where datediff(a.visited_on, b.visited_on) between 0 and 6 group by a.visited_on having count(*)=7
select a.visited_on,a.amount, a.average_amount from (select tmp.visited_on, lag(tmp.visited_on,6)over(order by tmp.visited_on) lag_date, sum(tmp.amount)over(order by tmp.visited_on rows 6 preceding) amount, round(sum(tmp.amount)over(order by tmp.visited_on rows 6 preceding) / 7,2) average_amount from (select visited_on, sum(amount) amount from customer group by visited_on) tmp) a where a.lag_date is not null
select b. visited_on, b.amount, b.average_amount from ( select a.visited_on, sum(a.amount) over (order by a.visited_on asc rows between 6 preceding and current row) as amount, round(avg(a.amount) over (order by a.visited_on asc rows between 6 preceding and current row),2) as average_amount, row_number() over (order by a.visited_on) as rownum from ( select visited_on, sum(amount) as amount from customer group by visited_on) a ) b where b.rownum >= 7
select b.visited_on, b.amount, b.average_amount from ( select a.visited_on, sum(a.amount) over (order by a.visited_on rows between 6 preceding and current row) as amount, round( avg(a.amount) over (order by a.visited_on rows between 6 preceding and current row) ,2) as average_amount, row_number() over (order by a.visited_on) as rn from (select visited_on, sum(amount) as amount from Customer group by visited_on) as a ) as b where b.rn >= 7
select b.visited_on, b.amount, b.average_amount from (select a.visited_on, sum(a.amount) over (order by a.visited_on rows between 6 preceding and current row) as amount, round(avg(a.amount) over (order by a.visited_on rows between 6 preceding and current row), 2) as average_amount, row_number() over (order by a.visited_on) as row_num from (select visited_on, sum(amount) as amount from Customer group by visited_on) a) b where b.row_num >= 7
select b.visited_on, b.amount, b.average_amount from (select a.visited_on, sum(a.amount) over (order by a.visited_on rows between 6 preceding and current row) as amount, round(avg(a.amount) over (order by visited_on rows between 6 preceding and current row),2) as average_amount, row_number() over (order by a.visited_on) as row_num from (select visited_on, sum(amount) as amount from customer group by visited_on) as a) as b where b.row_num >= 7
select b.visited_on, b.amount,b.average_amount from (select a. visited_on, sum(a.amount) over (order by a.visited_on rows between 6 preceding and current row) as amount, round(avg(a.amount) over(order by visited_on rows between 6 preceding and current row),2) as average_amount, row_number() over (order by a.visited_on ) as row_num from (select visited_on,sum(amount) as amount from customer group by visited_on)a)b where b.row_num >= 7
select b.visited_on, b.amount,b.average_amount from (select a.visited_on, sum(a.amount) over (order by a.visited_on rows between 6 preceding and current row) as amount, round(avg(a.amount) over (order by a.visited_on rows between 6 preceding and current row),2) as average_amount, row_number() over(order by visited_on) as rn from (select visited_on,sum(amount) as amount from customer group by visited_on)a)b where b.rn >=7
select b.visited_on, round((b.total+b.nxt_1+b.nxt_2+b.nxt_3+b.nxt_4+b.nxt_5+b.nxt_6),2) as amount , round((b.total+b.nxt_1+b.nxt_2+b.nxt_3+b.nxt_4+b.nxt_5+b.nxt_6)/7,2) as average_amount from (select a.visited_on, a.total, lag(a.total,1) over(order by a.visited_on) as nxt_1, lag(a.total,2) over(order by a.visited_on) as nxt_2, lag(a.total,3) over(order by a.visited_on) as nxt_3, lag(a.total,4) over(order by a.visited_on) as nxt_4, lag(a.total,5) over(order by a.visited_on) as nxt_5, lag(a.total,6) over(order by a.visited_on) as nxt_6 from (select visited_on, sum(amount) as total from customer group by 1) a) b where nxt_6 is not null
select b.visited_on, sum(a.amount) as amount, round(sum(a.amount)/7,2) as average_amount from Customer a, (select distinct visited_on from Customer) b where DATEDIFF(b.visited_on, a.visited_on) between 0 and 6 group by b.visited_on having count(distinct a.visited_on)=7
select b.visited_on, sum(a.amount) as amount, round(sum(a.amount)/7,2) as average_amount from customer a join (select distinct visited_on from Customer) b on datediff(b.visited_on, a.visited_on) between 0 and 6 group by b.visited_on having count(distinct a.visited_on) = 7
select c1.visited_on, round((select sum(c2.amount) from customer c2 where datediff(c1.visited_on, c2.visited_on) between 0 and 6 ), 2) "amount", round((select sum(c3.amount) / count(distinct c3.visited_on) from customer c3 where datediff(c1.visited_on, c3.visited_on) between 0 and 6 ), 2) "average_amount" from customer c1 where c1.visited_on > (select min(visited_on) from customer) + 5 group by 1 order by 1
select c1.visited_on, round(sum(c2.day_amount),2) as amount, round(avg(c2.day_amount),2) as average_amount from (select visited_on, sum(amount) as day_amount from Customer group by 1 ) as c1 join (select visited_on, sum(amount) as day_amount from Customer group by 1 ) as c2 on datediff(c1.visited_on, c2.visited_on) between 0 and 6 group by 1 having count(c2.visited_on) = 7
select c1.visited_on, sum(c2.amount) amount , round(sum(c2.amount)/7,2) average_amount from ( select distinct visited_on visited_on from Customer ) c1 join Customer c2 on datediff(c1.visited_on,c2.visited_on) between 0 and 6 group by c1.visited_on having c1.visited_on >= min(c2.visited_on)+6 order by c1.visited_on
select c1.visited_on, sum(c2.amount) amount, round(avg(c2.amount),2) as average_amount from (select visited_on, sum(amount) as amount from Customer group by visited_on) c1 inner join (select visited_on, sum(amount) as amount from Customer group by visited_on) c2 on datediff(c1.visited_on, c2.visited_on) between 0 and 6 group by c1.visited_on having count(c2.amount)=7
select c1.visited_on, sum(c2.amount) as amount, round(avg(c2.amount), 2) as average_amount from (select visited_on, sum(amount) as amount from customer group by visited_on) c1 join (select visited_on, sum(amount) as amount from customer group by visited_on) c2 on datediff(c1.visited_on, c2.visited_on) between 0 and 6 group by c1.visited_on having count(c2.amount) = 7
select c1.visited_on, sum(c2.amount) as amount, round(avg(c2.amount), 2) as average_amount from (select visited_on, sum(amount) as amount from customer group by visited_on) c1, (select visited_on, sum(amount) as amount from customer group by visited_on) c2 where c1.visited_on - c2.visited_on >= 0 and c1.visited_on <= date_add(c2.visited_on, interval 6 day) group by c1.visited_on having count(c2.visited_on) = 7
select c1.visited_on, sum(c2.amount) as amount, round(sum(c2.amount)/7,2) as average_amount from (select distinct visited_on from Customer) c1 inner join Customer c2 on datediff(c1.visited_on, c2.visited_on) between 0 and 6 group by 1 having count(distinct c2.visited_on) = 7
select c1.visited_on, sum(c2.total_amount) as amount, round(avg(c2.total_amount),2) as average_amount from (select visited_on, sum(amount) as total_amount from Customer group by visited_on) c1 join (select visited_on, sum(amount) as total_amount from Customer group by visited_on) c2 on datediff(c1.visited_on,c2.visited_on) between 0 and 6 group by c1.visited_on having count(c2.visited_on)=7 order by c1.visited_on
select c1.visited_on,sum(c2.amount) amount,round(sum(c2.amount)/7,2) average_amount from (select customer_id,name,visited_on,sum(amount) amount from Customer group by visited_on)c1 cross join (select customer_id,name,visited_on,sum(amount) amount from Customer group by visited_on) c2 where datediff(c1.visited_on,c2.visited_on)<7 and datediff(c1.visited_on,c2.visited_on)>=0 group by c1.visited_on having count(*)>6 order by c1.visited_on
select cs.visited_on as visited_on, (select sum(amount) from customer cs1 where datediff(cs.visited_on,cs1.visited_on) BETWEEN 0 AND 6) as amount, (select round(sum(amount)/7,2) from customer cs2 where datediff(cs.visited_on,cs2.visited_on) BETWEEN 0 AND 6) as average_amount from customer cs group by cs.visited_on having cs.visited_on >= date_add((select min(cs3.visited_on) from customer cs3), INTERVAL 6 DAY)
select distinct a.visited_on,sum(b.amount)/c.count as amount, round(sum(b.amount)/(7*c.count),2) as average_amount from Customer as a join Customer as b on datediff(a.visited_on,b.visited_on) between 0 and 6 left join (select visited_on,count(visited_on) as count from Customer group by visited_on ) as c on a.visited_on=c.visited_on group by a.visited_on having count(distinct b.visited_on)>=7 order by a.visited_on
select distinct visited_on, amount, round(amount/7, 2) as average_amount from (select visited_on, sum(amount) over (order by visited_on range between interval 6 day preceding and current row) as amount, dense_rank() over (order by visited_on) as rk from Customer) as t where rk >= 7
select t1.visited_on, sum(t2.amount) as amount, round(avg(t2.amount), 2) as average_amount from ( select visited_on, sum(amount) as amount from Customer group by visited_on) as t1 inner join ( select visited_on, sum(amount) as amount from Customer group by visited_on) as t2 on t2.visited_on between DATE_SUB(t1.visited_on, INTERVAL 6 DAY) and t1.visited_on group by t1.visited_on having count(1)=7
select temp1.* from (select temp.visited_on, sum(temp.amount) over (order by temp.visited_on rows between 6 PRECEDING and current row) as amount, round(avg(temp.amount) over (order by temp.visited_on rows between 6 PRECEDING and current row),2) as average_amount from (select c.visited_on, sum(c.amount) as amount from Customer c group by 1 order by 1) temp) temp1 where datediff(temp1.visited_on,(select min(visited_on) from customer))>=6
select visited_on , amount , round(amount / 7, 2) as average_amount from ( select visited_on , dense_rank() over (order by visited_on asc) as rn , sum(amount) over ( order by visited_on asc rows between 6 preceding and current row) amount from (select visited_on , sum(amount) as amount from customer group by 1) sub1 group by 1) sub where rn >= 7 group by 1
select visited_on, amount, average_amount from ( select visited_on, sum(sum(amount)) over(order by visited_on rows between 6 preceding and current row) amount, round(avg(sum(amount)) over(order by visited_on rows between 6 preceding and current row),2) average_amount, row_number() over(order by visited_on asc) rn from customer group by visited_on) f1 where rn>6
select visited_on, amount, average_amount from ( select visited_on, sum(total) over(order by visited_on rows between 6 preceding and current row) amount, round(sum(total) over(order by visited_on rows between 6 preceding and current row)/7, 2) average_amount, row_number() over(order by visited_on) rn from ( select visited_on, sum(amount) total from customer group by visited_on order by visited_on ) t ) t1 where rn > 6
select visited_on, amount, average_amount from (select visited_on, sum(c.amount) over(order by visited_on ROWS between 6 preceding and current row) as `amount`, round(avg(c.amount) over(order by visited_on ROWS between 6 preceding and current row),2) as `average_amount`, row_number() over (order by visited_on) as `rn` from (select visited_on,sum(amount) as amount from customer group by 1)c)t where t.rn > 6
select visited_on, amount, average_amount from (select visited_on, sum(sum(amount)) over(order by visited_on rows between 6 preceding and current row) as amount, round(avg(sum(amount)) over(order by visited_on rows between 6 preceding and current row),2) as average_amount, row_number() over(order by visited_on) as rn from customer group by visited_on) a where rn>=7
select visited_on, amount, round(amount / 7, 2) as average_amount from ( select visited_on, ( case when row_number() over (order by visited_on) > 6 then sum(amount) over(order by visited_on asc rows between 6 preceding and current row) else null end ) as amount from (select visited_on, sum(amount) as amount from Customer group by visited_on) as x1 ) as x2 where amount is not null order by visited_on
select visited_on, amount, round(amount/7, 2) as average_amount from ( select visited_on, sum(sum(amount)) over (order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as amount, rank() over (order by visited_on) rnk from customer group by visited_on ) A where rnk > 6 order by 1
select visited_on, amount, round(amount/7, 2) as average_amount from (select visited_on, sum(sum(amount)) over (order by visited_on rows between 6 preceding and current row) as amount, rank() over (order by visited_on) rnk from customer group by visited_on) A where rnk > 6 order by 1
select visited_on, amount, round(amount/7, 2) average_amount from (select visited_on, sum(sum(amount)) over(order by visited_on rows between 6 preceding and current row) as amount, rank() over(order by visited_on) as rnk from customer group by visited_on) a where rnk >= 7 order by visited_on
select visited_on, amount, round(amount/7,2) as average_amount from ( select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount, row_number() over() as ranking from (select visited_on, sum(amount) as amount from customer group by visited_on ) a ) b where ranking >= 7
select visited_on, amount, round(amount/7,2) as average_amount from ( select visited_on, sum(sum(amount)) OVER ( order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW ) as amount, rank() OVER ( order by visited_on) rnk from Customer group by visited_on)A where rnk > 6 order by 1
select visited_on, amount, round(amount/7,2) as average_amount from ( select visited_on, sum(sum(amount)) OVER (order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW ) as amount, rank() OVER (order by visited_on) rnk from Customer group by visited_on )A where rnk > 6 order by 1
select visited_on, amount, round(amount/7,2) as average_amount from ( select visited_on, sum(sum(amount)) OVER (order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW ) as amount, rank() OVER (order by visited_on) rnk from Customer group by visited_on)A where rnk > 6 order by 1
select visited_on, amount, round(amount/7,2) as average_amount from (select *, row_number() over() as seq, sum(sum_amt) over (rows between 6 preceding and current row) as amount from (select visited_on, sum(amount)as sum_amt from Customer group by 1) x group by visited_on order by visited_on) y where seq > 6
select visited_on, amount, round(amount/7,2) as average_amount from (select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) as amount, row_number() over(order by visited_on) as rank_num from (select visited_on, sum(amount) as amount from Customer group by visited_on order by visited_on) tt ) t where rank_num>=7
select visited_on, amount, round(amount/7,2) average_amount from ( select visited_on, sum(amount) over(rows between 6 preceding and current row) amount, row_number() over(order by visited_on) rnk from ( select visited_on, sum(amount) amount from customer group by visited_on order by visited_on ) t ) t1 where rnk >= 7
select visited_on, amount, round(average_amount,2) as average_amount from (select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row ) as amount, avg(amount) over (order by visited_on rows between 6 preceding and current row) as average_amount, rank() over (order by visited_on) as num from (select visited_on, sum(amount) as amount from customer group by visited_on) a) b where num > 6
select visited_on, amount, round(ma,2) as average_amount from (select visited_on, row_number() over () as seq, sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount, avg(amount) over ( order by visited_on rows between 6 preceding and current row ) as ma from (select visited_on, sum(amount) as amount from customer group by visited_on) a)b where seq> 6
select visited_on, amount,average_amount from( select visited_on, lag(visited_on, 6) over(order by visited_on) as p_days, sum(sum(amount)) over (order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) amount, round(sum(sum(amount)) over (order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) / 7,2) average_amount from customer group by visited_on) b where p_days is not null
select visited_on, round(amount,2) as amount, round(average_amount,2) as average_amount from ( select visited_on, sum(total) over (order by visited_on rows between 6 preceding and current row) as amount, avg(total) over (order by visited_on rows between 6 preceding and current row) as average_amount, row_number() over (order by visited_on ) as rowcnt from ( select visited_on, sum(amount) as total from customer group by visited_on )t )t1 where rowcnt >=7
select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount, round(avg(amount) over (order by visited_on rows between 6 preceding and current row),2) as average_amount from (select visited_on, sum(amount) as amount from customer group by visited_on) as t limit 6, 100000
select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount, round(avg(amount) over (order by visited_on rows between 6 preceding and current row),2) as average_amount from (select visited_on, sum(amount) as amount from customer group by visited_on) as t limit 6, 1000000
select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount, round(avg(amount) over (order by visited_on rows between 6 preceding and current row),2) as average_amount from( select visited_on, sum(amount) as amount from customer group by visited_on) as t limit 6, 10000
select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) as amount, round(avg(amount) over(order by visited_on rows between 6 preceding and current row),2) as average_amount from (select visited_on, sum(amount) as amount from customer group by visited_on)x limit 6,1000000000000
select visited_on, sum(sum(amount)) over(order by visited_on rows between 6 preceding and current row) as amount, round(avg(sum(amount)) over(order by visited_on rows between 6 preceding and current row),2) as average_amount FROM Customer GROUP BY visited_on ORDER BY visited_on LIMIT 6, 1000
select visited_on, sum_amount as amount, round(sum_amount/7, 2) as average_amount from( select *, row_number() over() as seq, sum(amount) over(rows between 6 preceding and current row) as sum_amount from( select visited_on, sum(amount) as amount from Customer group by visited_on order by visited_on) a) b where seq > 6
select visited_on, sum_amount as amount, round(sum_amount/7, 2) as average_amount from(select *, row_number() over() as seq, sum(amount) over(rows between 6 preceding and current row) as sum_amount from(select visited_on, sum(amount) as amount from Customer group by visited_on order by visited_on) a) b where seq > 6
select visited_on, total as amount, round(total/7,2)as average_amount from ( select *, rank () over (order by visited_on) as rk, sum(amount) over (order by visited_on rows between 6 preceding and current row) as total from ( select visited_on,sum(amount) as amount from Customer group by visited_on) a)b where rk>=7
select visited_on, window_amount as amount, ROUND(window_amount/7.0, 2) as average_amount from ( select visited_on, lag(visited_on, 6) over(order by visited_on) as lag_visited_on, sum(sum_amount) over(order by visited_on rows between 6 preceding and current row) as window_amount from ( select visited_on, sum(amount) as sum_amount from Customer group by visited_on ) as tab ) as tab1 where lag_visited_on is not null
select visited_on, window_amount as amount, round((cast(window_amount as float) / 7.0), 2) as average_amount from ( select visited_on, lag(visited_on, 6) over(order by visited_on) as p_days, sum(s_amount) over(order by visited_on rows between 6 preceding and current row) as window_amount from ( select visited_on, sum(amount) as s_amount from Customer group by visited_on ) tem1 ) tem2 where p_days is not null
select visited_on,sum_amount as amount,round(sum_amount/7,2) as average_amount from(select *,row_number() over() as seq,sum(amount) over(rows between 6 preceding and current row) as sum_amount from(select visited_on,sum(amount) as amount from customer group by 1)a)b where seq>6
with CET as ( SELECT visited_on, sum(amount) as amount from Customer group by visited_on ) SELECT visited_on, amount, average_amount from( SELECT visited_on, sum(amount) over(order by visited_on rows 6 preceding) as amount, round(avg(amount) over(order by visited_on rows 6 preceding),2) as average_amount, row_number() over(order by visited_on) as ranking from CET)p1 where ranking>=7
with CTE AS( SELECT visited_on, SUM(amount) AS amount FROM Customer GROUP BY visited_on ), CTE2 AS( SELECT visited_on, SUM(amount) OVER (ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS amount, ROUND(AVG(amount) OVER (ROWS BETWEEN 6 PRECEDING AND CURRENT ROW), 2) AS average_amount, ROW_NUMBER() OVER (ORDER BY visited_on) AS rm FROM CTE ) SELECT visited_on, amount, average_amount FROM CTE2 WHERE rm > 6
with CTE as ( select visited_on, sum(sum(amount)) over(order by visited_on range between interval '6' day preceding and current row) as amount, dense_rank() over(order by visited_on) as date_rank from customer group by visited_on ) select visited_on, amount, round(amount/7,2) as average_amount from CTE where date_rank>6 order by visited_on
with XX as ( select visited_on, sum(amount) as daily_total from customer group by visited_on ) select visited_on, amount, round(average_amount,2) as average_amount from (select visited_on, sum(daily_total) over (order by visited_on rows between 6 preceding and current row) as amount, avg(daily_total) over (order by visited_on rows between 6 preceding and current row) as average_amount from XX) sub1 where date_sub(visited_on, interval 6 day)>=(select min(visited_on) from customer)
with a as ( select visited_on, sum(amount) as amount, dense_rank() over (order by visited_on) as r from Customer group by visited_on ) select a.visited_on, sum(b.amount) as amount, round(sum(b.amount)/7,2) as average_amount from a join a as b on b.r >= a.r-6 and b.r <= a.r where a.r>=7 group by a.visited_on
with a as ( select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) amount, round((avg(amount) over(order by visited_on rows between 6 preceding and current row)),2) as average_amount, dense_rank() over (order by visited_on) as rk from (select visited_on, sum(amount) as amount from customer group by visited_on) temp) select visited_on, amount, average_amount from a where rk>=7
with a as (select visited_on,sum(amount) as amount from customer group by visited_on) select * from (select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount, round(sum(amount) over (order by visited_on rows between 6 preceding and current row)/7,2) as average_amount from a) b where date_add(visited_on, interval -6 day) in (select visited_on from a)
with amount as( select visited_on, sum(total_amount) over(order by visited_on asc rows between 6 preceding and current row) as amount from( select visited_on, sum(amount) as total_amount from customer group by visited_on) as sub) select visited_on, amount, round(amount/7,2) as average_amount from amount group by visited_on limit 100 offset 6
with base as (select distinct visited_on as end_date, DATE_ADD(visited_on, INTERVAL -6 DAY) as start_date from customer where DATE_ADD(visited_on, INTERVAL -6 DAY) in (select distinct visited_on from customer)) select c1.visited_on, sum(c2.amount) as amount, round(sum(c2.amount)/7,2) as average_amount from (select visited_on, sum(amount) as n from customer group by 1) c1 left join base b on c1.visited_on = b.end_date left join customer c2 on c2.visited_on between b.start_date and b.end_date where b.end_date is not null group by 1
with c AS( SELECT visited_on, sum(amount) AS amount FROM Customer GROUP BY 1) SELECT visited_on, moving_total AS amount, round(moving_total/7,2) AS average_amount FROM (SELECT visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) AS moving_total, row_number() over(order by visited_on) AS rn FROM c) t WHERE rn>=7 ORDER BY 1
with c as (Select visited_on,sum(amount) as amount from Customer group by visited_on) select c1.visited_on, sum(c2.amount) as amount,round(avg(c2.amount),2) as average_amount from c c1, c c2 where datediff(c1.visited_on,c2.visited_on) between 0 and 6 group by c1.visited_on having count(c2.visited_on)=7
with c1 as ( select visited_on, sum(amount) as day_sum from Customer group by visited_on ), c2 as ( select visited_on, sum(amount) as day_sum from Customer group by visited_on ) select max(c2.visited_on) as visited_on, sum(c2.day_sum) as amount, round(avg(c2.day_sum), 2) as average_amount from c1 join c2 on datediff(c1.visited_on, c2.visited_on) between 0 and 6 group by c1.visited_on having count(distinct c2.visited_on) = 7 order by 1
with ct as ( select visited_on, sum(amount) as amount from Customer group by visited_on) select c1.visited_on, sum(c2.amount) as amount, round(avg(c2.amount),2) as average_amount from ct c1, ct c2 where datediff(c1.visited_on, c2.visited_on) between 0 and 6 group by c1.visited_on having count(c2.visited_on)=7
with cte as ( SELECT visited_on, sum(amount) as amount FROM Customer GROUP BY 1) SELECT * FROM ( SELECT visited_on, sum(amount) OVER (ORDER BY visited_on ROWS 6 preceding) as amount, round(sum(amount) OVER (ORDER BY visited_on ROWS 6 preceding)/7,2) as average_amount FROM cte)t WHERE visited_on >= (SELECT min(visited_on) FROM Customer) +6
with cte as ( SELECT visited_on, sum(amount) as amount FROM Customer GROUP BY 1) SELECT visited_on, amount, average_amount FROM ( SELECT visited_on, sum(amount) OVER(order by visited_on ROWS 6 preceding) as amount, round(sum(amount) OVER(order by visited_on ROWS 6 preceding)/7,2) as average_amount FROM cte)t WHERE visited_on >= (SELECT min(visited_on) FROM Customer) + 6
with cte as ( Select visited_on, sum(amount) amount from Customer group by visited_on ) Select visited_on, amount, average_amount from ( Select visited_on, sum(amount) over ( order by visited_on ROWS between 6 preceding and current row) amount, round(avg(amount) over ( order by visited_on ROWS between 6 preceding and current row),2) average_amount, row_number() over ( order by visited_on) holder from cte group by visited_on order by visited_on ) temp where holder > 6
with cte as ( select visited_on , sum(amount ) as amount from Customer group by visited_on ) select visited_on, round(sum(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) as amount, round(avg(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),2) as average_amount from cte order by visited_on LIMIT 18446744073709551610 OFFSET 6
with cte as ( select visited_on , sum(amount) as amount from Customer group by 1 ) select c.visited_on , sum(c1.amount) as amount , round(avg(c1.amount),2) as average_amount from cte c inner join cte c1 on c1.visited_on between adddate(c.visited_on, interval -6 day) and c.visited_on group by 1 having count(distinct c1.visited_on)=7 order by 1
with cte as ( select visited_on, lead(visited_on, 6) over (order by visited_on) as ld, sum(sum(amount)) over (order by visited_on rows between current row and 6 following) as amount from customer group by visited_on) select ld as visited_on, amount, round(amount/7, 2) as average_amount from cte where ld is not null
with cte as ( select visited_on, sum(amount) as amount from Customer group by visited_on ) select visited_on, amount, round(average_amount,2) as average_amount from ( select visited_on, sum(amount) over(rows between 6 preceding and current row) as amount, avg(amount) over(rows between 6 preceding and current row) as average_amount, row_number() over() as seq from cte ) F where seq>6
with cte as ( select visited_on, sum(amount) as amount from customer group by 1) select visited_on, amount, round(average_amount,2) as average_amount from ( select visited_on, lag(visited_on,6) over(order by visited_on) as lag_log, sum(amount) over(order by visited_on rows between 6 preceding and current row) as amount, avg(amount) over(order by visited_on rows between 6 preceding and current row) as average_amount from cte ) abc where lag_log is not null
with cte as ( select visited_on, sum(amount) as amount from customer group by visited_on ) select c2.visited_on, sum(c1.amount) amount, round(avg(c1.amount),2) average_amount from cte c1 join cte c2 on datediff(c2.visited_on, c1.visited_on) between 0 and 6 group by c2.visited_on having count(1) = 7 order by c2.visited_on
with cte as ( select visited_on, sum(amount) as amount from customer group by visited_on) , cte2 as( select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount, avg(amount) over (order by visited_on rows between 6 preceding and current row) as average_amount from cte ) select visited_on, amount, round(average_amount,2) as average_amount from cte2 where visited_on - 6 >= (select min(visited_on) from customer)
with cte as ( select visited_on, sum(amount) as total_amount from Customer group by visited_on ) select a.visited_on, (select sum( b.total_amount ) from cte b where datediff(a.visited_on, b.visited_on) between 0 and 6 ) as amount , (select round( sum( b.total_amount )/7, 2 ) from cte b where datediff(a.visited_on, b.visited_on) between 0 and 6 ) as average_amount from cte a where a.visited_on - (select min(visited_on) from cte) >= 6
with cte as ( select visited_on, sum(amount) as total_amount from Customer group by visited_on ) select a.visited_on, sum(b.total_amount) as amount, round(avg(b.total_amount), 2) as average_amount from cte a left join cte b on datediff(a.visited_on, b.visited_on) between 0 and 6 group by a.visited_on having count(b.visited_on) >= 7
with cte as ( select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row) as total_amount, round(avg(amount) over (order by visited_on rows between 6 preceding and current row),2) as average, row_number() over (order by visited_on) as row_num from ( select visited_on, sum(amount) as amount from customer group by visited_on) a ) select visited_on, total_amount as amount, average as average_amount from cte where row_num >= 7
with cte as ( select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) as tot_amount, avg(amount) over(order by visited_on rows between 6 preceding and current row) as avg_amount, row_number() over() as seq from (select visited_on,sum(amount) as amount from Customer group by visited_on ) a ) select visited_on, tot_amount as amount, round(avg_amount,2) as average_amount from cte where seq > 6
with cte as (select distinct b.visited_on from customer a join customer b on date_add(a.visited_on, interval 6 day)=b.visited_on) select cte.visited_on as visited_on, sum(amount) as amount, round(sum(amount)/7,2) as average_amount from cte left join customer c on datediff(cte.visited_on,c.visited_on) between 0 and 6 group by visited_on
with cte as (select distinct visited_on, sum(amount) over (order by visited_on range between interval 6 day preceding and current row) as amount, dense_rank() over (order by visited_on) as days from Customer) select visited_on, amount, round(amount/7,2) as average_amount from cte where days >=7
with cte as (select visited_on, sum(amount) as amount from Customer group by 1) select a.visited_on as visited_on , sum(b.amount) as amount, round((sum(b.amount)/7),2) as average_amount from cte a, cte b where datediff(a.visited_on, b.visited_on) between 0 and 6 group by 1 having count(b.visited_on) = 7 order by 1
with cte as (select visited_on, sum(amount) as amount from Customer group by 1) select a_date as visited_on , sum(b_amount) as amount, round((sum(b_amount)/7),2) as average_amount from (select a.visited_on as a_date ,b.visited_on as b_date, a.amount as a_amount, b.amount as b_amount from cte a, cte b where datediff(a.visited_on, b.visited_on) between 0 and 6)t1 group by 1 having count(b_date) = 7 order by 1
with cte as (select visited_on, sum(amount) as amount from Customer group by 1) select a_date as visited_on , sum(b_amount) as amount, round((sum(b_amount)/7),2) as average_amount from (select a.visited_on as a_date ,b.visited_on as b_date, dense_rank() over (order by a.visited_on) as ranks, a.amount as a_amount, b.amount as b_amount from cte a, cte b where datediff(a.visited_on, b.visited_on) between 0 and 6)t1 where ranks >=7 group by 1 order by 1
with cte as (select visited_on, sum(amount) as amount from Customer group by visited_on order by visited_on) select visited_on, amount, round(average_amount, 2) as average_amount from ( select visited_on, case when ROW_NUMBER() over (order by visited_on) >=7 then sum(amount) over (order by visited_on rows between 6 preceding and current row) else null end as amount, case when ROW_NUMBER() over (order by visited_on) >=7 then avg(amount) over (order by visited_on rows between 6 preceding and current row) else null end as average_amount from cte) a where a.amount is not null
with cte as (select visited_on, sum(amount) as amount from Customer group by visited_on) select cte.visited_on, sum(cte.amount) over(order by cte.visited_on rows between 6 preceding and current row) as amount, round(sum(cte.amount) over(order by cte.visited_on rows between 6 preceding and current row)/7,2) as average_amount from cte order by cte.visited_on limit 9999999 offset 6
with cte as (select visited_on, sum(amount) as amount from Customer group by visited_on), con as (select cte.visited_on, sum(cte.amount) over(rows 6 preceding) as amount, round(sum(cte.amount) over(rows 6 preceding)/7,2) as average_amount from cte), top_six as (select c.visited_on from Customer c group by c.visited_on order by c.visited_on limit 6) select con.visited_on, con.amount, con.average_amount from con where con.visited_on not in (select * from top_six) order by con.visited_on
with cte as (select visited_on, sum(amount) as amount from customer group by visited_on) select c1.visited_on, sum(c2.amount) as amount, round(avg(c2.amount),2) as average_amount from cte c1 join cte c2 on datediff(c1.visited_on,c2.visited_on) between 0 and 6 where date_sub(c1.visited_on, interval 6 DAY) >= (select min(visited_on) from customer) group by c1.visited_on
with cte as (select visited_on, sum(amount) as amount from customer group by visited_on) select visited_on, amount, round(amount/7,2) as average_amount from( select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) as amount, rank() over(order by visited_on) as rnk from cte group by visited_on) as a where rnk>=7
with cte as (select visited_on, sum(amount) as amount from customer group by visited_on), cte_1 as (select visited_on, sum(amount)over(order by visited_on ROWS 6 preceding) as amount, round(avg(amount)over(order by visited_on ROWS 6 preceding),2) as average_amount, dense_rank()over(order by visited_on ) as date_order from cte) select visited_on,amount,average_amount from cte_1 where date_order >=7
with cte as (select visited_on, sum(amount) as day_sum from customer group by visited_on) select a.visited_on, sum(b.day_sum) as amount, round(avg(b.day_sum),2) as average_amount from cte a join cte b on datediff(a.visited_on,b.visited_on) between 0 and 6 group by a.visited_on having count(b.visited_on)=7
with cte as (select visited_on, sum(amount)as amt from Customer group by 1 order by 1) select a.visited_on, b.amount,b.average_amount from (select distinct visited_on from Customer where visited_on between (select date_add(min(visited_on),interval 6 day) from Customer) and (select max(visited_on) from Customer))as a left join (select visited_on, (sum(amt) over(order by visited_on rows between 6 preceding and current row))as amount, round(avg(amt) over(order by visited_on rows between 6 preceding and current row),2) as average_amount from cte) as b on a.visited_on = b.visited_on
with cte as (select visited_on,sum(amount) as amount from customer group by visited_on), cte1 as(select visited_on, avg(amount) over(order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as avg_amt, sum(amount) over(order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as sum_amt, count(*) over(order by visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as cnt from cte) select visited_on,sum_amt as amount,round(avg_amt,2) as average_amount from cte1 where cnt>=7 order by visited_on
with cte as( select visited_on, rank() over (order by visited_on asc) as rnk, sum(amount) as amount from customer group by visited_on ), cte2 as ( select visited_on, rnk, round(sum(amount) over (order by visited_on asc RANGE INTERVAL 6 DAY PRECEDING ),2) amount, round(avg(amount) over (order by visited_on asc RANGE INTERVAL 6 DAY PRECEDING ),2) average_amount from cte) select visited_on, amount, average_amount from cte2 where rnk>6
with cte as( select visited_on, sum(amount) as amount from customer group by visited_on ) select c7.visited_on, (c1.amount + c2.amount + c3.amount + c4.amount + c5.amount + c6.amount + c7.amount) as amount, round((c1.amount + c2.amount + c3.amount + c4.amount + c5.amount + c6.amount + c7.amount)/7,2) as average_amount from cte c1, cte c2, cte c3, cte c4, cte c5, cte c6, cte c7 where c1.visited_on = DATE_SUB(c2.visited_on, INTERVAL 1 DAY) and c2.visited_on = DATE_SUB(c3.visited_on, INTERVAL 1 DAY) and c3.visited_on = DATE_SUB(c4.visited_on, INTERVAL 1 DAY) and c4.visited_on = DATE_SUB(c5.visited_on, INTERVAL 1 DAY) and c5.visited_on = DATE_SUB(c6.visited_on, INTERVAL 1 DAY) and c6.visited_on = DATE_SUB(c7.visited_on, INTERVAL 1 DAY) order by 1
with cte as( select visited_on, sum(amount) as amount from customer group by visited_on) select visited_on, amount, average_amount from( select visited_on, sum(amount) over (rows between 6 preceding and current row) as amount, round(avg(amount) over (rows between 6 preceding and current row),2) as average_amount, rank() over (order by visited_on asc) as ranking from cte)a where ranking >= 7
with cte as( select visited_on,sum(amount) amount1, row_number() over(order by visited_on) rn from Customer group by visited_on order by 1 ), t2 as( select *, sum(amount1) over(order by visited_on rows 6 preceding) amount, round(avg(amount1) over(order by visited_on rows 6 preceding),2) average_amount from cte) select visited_on, amount, average_amount from t2 where rn>6
with cte as( select visited_on,sum(amount) as amount from Customer group by visited_on ) select visited_on,amount,round(average_amount,2) as average_amount from( select visited_on, sum(amount) over(order by visited_on ROWS 6 PRECEDING) as amount,avg(amount) over(order by visited_on rows 6 preceding) as average_amount, count(*) over(order by visited_on ROWS 6 PRECEDING) as co from cte) c where co>=7
with cte as( select visited_on,sum(amount) as amount from Customer group by visited_on ) select visited_on,amount,round(average_amount,2) as average_amount from( select visited_on, sum(amount) over(order by visited_on ROWS 6 PRECEDING) as amount,avg(amount) over(order by visited_on rows 6 preceding) as average_amount, count(visited_on) over(order by visited_on ROWS 6 PRECEDING) as co from cte) c where co>=7
with cte as(select visited_on, sum(amount) as amount from Customer group by 1) select visited_on, amount, round(average_amount, 2) as average_amount from (select visited_on, lag(visited_on, 6) over(order by visited_on) as last6 , sum(amount) over(order by visited_on rows between 6 preceding and current row) as amount ,avg(amount) over(order by visited_on rows between 6 preceding and current row) as average_amount from cte )k where last6 is not Null
with cte1 as ( select c.visited_on, sum(c.amount) as 'amount', dense_rank() over (order by c.visited_on ASC) as 'rowid' from Customer c group by 1 order by 1 ASC ) ,cte2 as ( select c.visited_on, sum(c.amount) over (order by c.visited_on ASC rows 6 preceding) as 'amount' from cte1 c ) select c.visited_on, c.amount, round(c.amount/7,2) as 'average_amount' from cte2 c where c.visited_on >= ( select visited_on from cte1 where rowid = 7 )
with cte1 as ( select visited_on, sum(amount) as amount from customer group by visited_on ), cte2 as ( select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) as amount, rank() over(order by visited_on) as rnk from cte1 group by visited_on ) select visited_on ,amount, round((amount/7),2) as average_amount from cte2 where rnk>6
with cte1 as ( select visited_on, sum(amount) as total_amount from Customer group by visited_on ) , cte2 as ( select c1.visited_on, sum(c2.total_amount) as amount, round (avg(c2.total_amount),2) as average_amount, count(c2.total_amount) as cnt from cte1 c1 left join cte1 c2 on datediff(c1.visited_on, c2.visited_on) >= 0 and datediff(c1.visited_on, c2.visited_on) <=6 group by c1.visited_on ) select visited_on, amount, average_amount from cte2 where cnt = 7
with cte1 as (select visited_on, sum(amount) as amount from Customer group by visited_on order by visited_on), cte2 as (select visited_on, round(sum(amount) over (order by visited_on rows 6 preceding), 2) as amount, round(avg(amount) over (order by visited_on rows 6 preceding), 2) as average_amount, lag(visited_on,6,0) over (order by visited_on) as temp from cte1 group by visited_on) select visited_on, amount, average_amount from cte2 where temp!=0
with cte1 as (select visited_on, sum(amount) as amount from Customer group by visited_on order by visited_on), cte2 as (select visited_on,sum(amount) over(rows between 6 preceding and current row) as amount, row_number() over() as rk from cte1) select visited_on,amount,round(amount/7,2) as average_amount from cte2 where rk>6
with cte2 as (select distinct visited_on, dense_rank() over (order by visited_on asc) as rnk, round(sum(amount) over (order by visited_on asc RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND INTERVAL 0 DAY FOLLOWING)) amount, round(sum(amount) over (order by visited_on asc RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND INTERVAL 0 DAY FOLLOWING)/7,2) average_amount from customer) select visited_on, amount, average_amount from cte2 where rnk>6
with cte2 as (select distinct visited_on, dense_rank() over (order by visited_on asc) as rnk, round(sum(amount) over (order by visited_on asc RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND current row)) amount, round(sum(amount) over (order by visited_on asc RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND current row)/7,2) average_amount from customer) select visited_on, amount, average_amount from cte2 where rnk>6
with cte_daily_spend as ( select visited_on, sum(amount) as daily_amount from Customer group by 1 ), cte_7d_spend as ( select visited_on, sum(daily_amount) over ( order by visited_on range between interval '6' day preceding and current row ) as amount from cte_daily_spend ), cte_final as ( select *, round(amount / 7, 2) as average_amount from cte_7d_spend order by 1 limit 6, 18446744073709551615 ) select * from cte_final
with custCte as ( select distinct visited_on, sum(amount) as amount from customer group by visited_on order by visited_on ) select visited_on, (select sum(b.amount) from custCte b where datediff(a.visited_on, b.visited_on) between 0 and 6) as 'amount', round((select avg(b.amount) from custCte b where datediff(a.visited_on, b.visited_on) between 0 and 6), 2) as 'average_amount' from custCte a where visited_on >= ADDDATE((select min(visited_on) from custCte), INTERVAL 6 DAY) order by visited_on
with customers1 as ( select visited_on,sum(amount) as amount from customer group by 1 ), average as ( select visited_on, sum(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 preceding and current row) as total_by_day, round(AVG(amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 preceding and current row),2) as avg_by_day from customers1 ) select a.visited_on,total_by_day as amount,avg_by_day as average_amount from average a join customers1 b where DATEDIFF(a.visited_on, b.visited_on) = 6
with daily_sum as ( select visited_on, sum(amount) as amount from customer group by visited_on ), cte as ( select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) as amount, count(visited_on) over(order by visited_on rows between 6 preceding and current row) as win_len from daily_sum ) select visited_on, amount, round(amount/7,2) as average_amount from cte where win_len=7
with daily_total as ( select visited_on, SUM(amount) as total FROM customer GROUP BY visited_on ), moving_average as ( select visited_on, total, sum(total) over (order by visited_on rows between 6 preceding and current row) as amount, avg(total) over (order by visited_on rows between 6 preceding and current row) as average_amount, lag(visited_on,6) over (order by visited_on asc) ascd from daily_total ) select visited_on, amount, round(average_amount,2) as average_amount FROM moving_average where ascd is not null
with date_boundaries as ( select distinct c1.visited_on as start_dt, c2.visited_on as end_dt from customer c1 join customer c2 on c1.visited_on <= c2.visited_on and datediff(c2.visited_on,c1.visited_on) =6) select db.end_dt as visited_on, sum(c.amount) as amount, round(sum(c.amount)/7,2) as average_amount from date_boundaries db join customer c on c.visited_on between db.start_dt and db.end_dt and datediff(db.end_dt, c.visited_on) <= 6 group by db.end_dt
with dates as ( select * from (select visited_on, lead(visited_on, 6) over(order by visited_on) as end_date from (select distinct visited_on from customer)a)b where b.end_date is not null ) select d.end_date as visited_on, sum(c.amount) as amount, round(sum(c.amount)/7,2) as average_amount from customer c, dates d where c.visited_on >= d.visited_on and c.visited_on<=d.end_date group by d.end_date
with first_day as ( select min(visited_on) from customer ) select c1.visited_on, round((select sum(c2.amount) from customer c2 where datediff(c1.visited_on, c2.visited_on) BETWEEN 0 AND 6 ), 2) "amount", round((select sum(c3.amount) / count(distinct c3.visited_on) from customer c3 where datediff(c1.visited_on, c3.visited_on) BETWEEN 0 AND 6 ), 2) "average_amount" from customer c1 where c1.visited_on > (select * from first_day) + 5 group by 1 order by 1
with groupby_date as ( select visited_on, sum(amount) as total FROM Customer GROUP BY visited_on ), seven_days_window as ( select visited_on, row_number() over(order by visited_on) rn, sum(total) over(order by visited_on rows between 6 preceding and current row) amount from groupby_date ) select visited_on, amount, round(amount/7.0, 2) average_amount from seven_days_window where rn >= 7
with grouped_values as ( select visited_on, sum(amount) as amount from customer group by 1 ),unfiltered_values as ( select visited_on, sum(amount) over( ROWS BETWEEN 6 preceding and Current ROW) as amount, round(avg(amount) over( ROWS BETWEEN 6 preceding and Current ROW),2) as average_amount, row_number() over(order by visited_on) as rn_number from grouped_values ) select visited_on , v.amount, v.average_amount from unfiltered_values v where rn_number >=7
with new as( select visited_on, sum(amount) as amount from customer group by visited_on) select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) as amount, round(avg(amount) over(order by visited_on rows between 6 preceding and current row),2) as average_amount from new order by visited_on limit 100 offset 6
with recursive cte_date_spine as ( select min(visited_on) as dt from Customer union all select date_add(dt, interval '1' day) as dt from cte_date_spine where dt < ( select max(visited_on) from Customer ) ), cte_join_agg as ( select s.dt as visited_on, sum(c.amount) as amount from cte_date_spine as s left join Customer as c on s.dt = c.visited_on group by 1 ), cte_final as ( select visited_on, sum(amount) over ( order by visited_on rows between 6 preceding and current row ) as amount, round( avg(amount) over ( order by visited_on rows between 6 preceding and current row ), 2 ) as average_amount from cte_join_agg order by 1 ) select * from cte_final limit 6, 18446744073709551615
with row_count as ( select visited_on, daily_amount, row_number() over(order by visited_on) cnt from (select visited_on, sum(amount) as daily_amount from Customer group by 1 order by 1) as daily_agg ), ma as ( select visited_on, sum(daily_amount) over (order by visited_on rows between 6 preceding and current row) as amount, cnt from row_count) select visited_on, amount, round(amount/7, 2) as average_amount from ma where cnt>=7
with sum_table as ( select distinct visited_on, sum(sum(amount)) over (order by visited_on rows between 6 preceding and current row) as amount, rank() over (order by visited_on) as days from Customer group by 1 ) select visited_on, amount, round(amount/7,2) as average_amount from sum_table where days >= 7
with t as ( select visited_on, row_number() over(order by visited_on) as rn, sum(sum(amount)) over(order by visited_on rows 6 preceding) as amount from Customer group by visited_on ) select visited_on, amount, round(amount/7,2) as average_amount from t where rn >= 7
with t as (select visited_on, sum(amount) as amount from Customer group by 1) select visited_on, rolling_sum as amount,round(rolling_sum/7,2) as average_amount from (select visited_on, sum(amount) over(order by visited_on rows between 6 preceding and current row) as rolling_sum, dense_rank() over(order by visited_on) as rk from t) tmp where rk>=7 order by 1
with t1 as ( select visited_on, sum(amount) as amount from Customer group by visited_on ), t2 as ( select visited_on, sum(amount) over (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as amount, round(avg(amount) OVER(ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW), 2) as average_amount, rank() over (order by visited_on) as rnk from t1 order by visited_on ) select visited_on, amount, average_amount from t2 where rnk > 6 order by 1
with t1 as (select visited_on, lag(visited_on,6) over(order by visited_on) as lagged_date, sum(amount) as amount from Customer group by visited_on order by visited_on) select visited_on, amount, average_amount from (select visited_on, lagged_date, round(sum(amount) over(order by visited_on rows between 6 preceding and current row),0) as amount,round(avg(amount) over(order by visited_on rows between 6 preceding and current row),2) as average_amount from t1) t2 where visited_on - lagged_date is not null
with t1 as (select visited_on, sum(amount) as amount from Customer group by visited_on), t2 as (select max(visited_on) as visited_on from Customer), t3 as (select adddate(visited_on,6) as visited_on, sum(amount) over(rows between 0 preceding and 6 following) as amount from t1) select t3.visited_on , t3.amount,round((t3.amount/7),2) as average_amount from t3,t2 where t3.visited_on <= t2.visited_on
with t1 as( select visited_on, sum(t.amount) over(order by visited_on rows between 6 preceding and current row) as amount, round(avg(t.amount) over(order by visited_on rows between 6 preceding and current row),2) as average_amount, rank() over(order by visited_on) as rnk from (select visited_on, sum(amount) as amount from customer group by visited_on) t) select visited_on, amount, average_amount from t1 where rnk>6
with tb1 as( SELECT DISTINCT visited_on FROM customer WHERE visited_on >= DATE_ADD((SELECT min(visited_on) FROM customer), INTERVAL 6 DAY)) select tb1.visited_on, sum(t2.amount) as amount, round(sum(t2.amount)/7,2) as average_amount from tb1 left join Customer t2 on tb1.visited_on <= DATE_ADD(t2.visited_on, INTERVAL 6 DAY) AND tb1.visited_on >= t2.visited_on group by tb1.visited_on
with tbl1 as ( select c.visited_on as first_visit, t.visited_on as secondary, t.amount from (select Customer.visited_on, sum(amount) as amount from Customer group by Customer.visited_on) c join Customer t on c.visited_on >= t.visited_on where t.visited_on >= date_sub(c.visited_on, interval 6 day) order by c.visited_on, t.visited_on) select tbl1.first_visit as visited_on, sum(tbl1.amount) as amount, round(sum(tbl1.amount)/7,2) as average_amount from tbl1 group by tbl1.first_visit having min(tbl1.secondary) <= date_sub(tbl1.first_visit, interval 6 day) order by tbl1.first_visit
with tem as( select customer_id, visited_on, sum(amount) as amount from customer group by visited_on) select visited_on, amount, round(average_amount, 2) as average_amount from ( select visited_on, avg(amount) over (order by visited_on rows between 6 preceding and current row) as average_amount, sum(amount) over (order by visited_on rows between 6 preceding and current row) as amount, min(visited_on) over(order by visited_on) as min_date from tem )a where visited_on >= date_add(min_date, interval 6 day)
with temp as ( select visited_on, sum(amount) as amount from Customer group by visited_on ), temp1 as ( select visited_on, sum(amount) over (order by visited_on rows 6 preceding) as amount, avg(amount) over (order by visited_on rows 6 preceding) as average, lag(visited_on, 6) over (order by visited_on) as lg from temp ) select visited_on, amount, round(average,2) as average_amount from temp1 where lg is not NULL
with temp as (select visited_on,sum(amount) as amount from customer group by visited_on) select c.visited_on, sum(d.amount) as amount, round(avg(d.amount),2) as average_amount from temp c, temp d where c.visited_on >= d.visited_on and datediff(c.visited_on, d.visited_on) < 7 group by c.visited_on having count(*) >= 7 order by c.visited_on
with temp as( select visited_on, sum(amount) as amount, dense_rank() over(order by visited_on) as rnk from Customer group by 1 ) select t1.visited_on, sum(t2.amount) as amount, round(sum(t2.amount)/7,2) as average_amount from temp t1 left join temp t2 on t1.visited_on >= t2.visited_on and date_sub(t1.visited_on, interval 7 day) < t2.visited_on where t1.rnk >=7 group by 1
with temp0 as ( select name, visited_on, sum(amount) as amount from Customer group by visited_on ), temp as ( select c.visited_on, c.amount+d1.amount+d2.amount+d3.amount+d4.amount+d5.amount+d6.amount as amount, round((c.amount+d1.amount+d2.amount+d3.amount+d4.amount+d5.amount+d6.amount)/7,2) as average_amount from temp0 c left join temp0 d1 on datediff(c.visited_on, d1.visited_on) = 1 left join temp0 d2 on datediff(c.visited_on, d2.visited_on) = 2 left join temp0 d3 on datediff(c.visited_on, d3.visited_on) = 3 left join temp0 d4 on datediff(c.visited_on, d4.visited_on) = 4 left join temp0 d5 on datediff(c.visited_on, d5.visited_on) = 5 left join temp0 d6 on datediff(c.visited_on, d6.visited_on) = 6 ) select * from temp where average_amount is not null order by visited_on
with temp0 as ( select visited_on, sum(amount) as amount from Customer group by visited_on ), temp as ( select visited_on, sum(amount) over (order by visited_on ASC rows between 6 preceding and current row) as sum_seven, count(visited_on) over (order by visited_on ASC rows between 6 preceding and current row) as count_seven from temp0 ) select visited_on, sum(sum_seven) as amount, round(sum(sum_seven)/7, 2) as average_amount from temp where count_seven = 7 group by visited_on order by visited_on
with temp2 as(select visited_on,sum(daily_tot) over(order by visited_on rows between 6 preceding and current row) as amount, round(avg(daily_tot) over(order by visited_on rows between 6 preceding and current row),2) as average_amount, row_number() over() as seq from (select visited_on, sum(amount) as daily_tot from Customer group by visited_on) as temp) select visited_on, amount, average_amount from temp2 where seq>6
with tmp as (select visited_on, amount, dense_rank() over (order by visited_on) as row1 from ( select visited_on, sum(amount) as amount from Customer group by 1 ) t1),tmp2 as ( select visited_on, row1, sum(amount) over (order by row1 rows between 6 preceding and current row ) as amount, cast(sum(amount) over (order by row1 rows between 6 preceding and current row ) / 7 as dec(10,2)) as average_amount from tmp ) select visited_on, amount, average_amount from tmp2 where row1 >=7
with tmp as (select visited_on, sum(amount) over (order by visited_on rows between 6 preceding and current row) as ttl, count(*) over (order by visited_on rows between 6 preceding and current row) as cnt from (select visited_on, sum(amount) as amount from customer group by 1) t order by 1 ) select visited_on, ttl as amount, round(ttl/7,2) as average_amount from tmp where cnt=7 order by 1
with tmp as( select visited_on, sum(amount) as amount from customer group by visited_on ), tmp2 as ( select visited_on, row_number()over(order by visited_on) as rnk, round(sum(amount) over(order by visited_on rows 6 preceding),2) as amount, round(avg(amount) over(order by visited_on rows 6 preceding),2) as average_amount from tmp ) select visited_on,amount,average_amount from tmp2 where rnk>= 7
with tmp1 as (select visited_on, sum(amount) as amount from customer group by 1 ), tmp2 as (select distinct visited_on from customer where visited_on >=date_add((select min(visited_on) from customer),interval 6 day) ) select a.visited_on, sum(amount) as amount, round(avg(amount),2) as average_amount from tmp2 a, tmp1 b where b.visited_on between date_sub(a.visited_on ,interval 6 day) and a.visited_on group by 1 order by 1
with tot_amt as (select visited_on, sum(amount) as amount from customer group by 1 ) select a.visited_on, sum(b.amount) as amount, round(avg(b.amount),2) as average_amount from tot_amt as a left join tot_amt as b on datediff(a.visited_on, b.visited_on) >=0 and datediff(a.visited_on, b.visited_on) <=6 group by 1 having count(b.visited_on)=7
with total_amt as ( select visited_on, sum(amount) as amount from customer group by 1) select date_format(a.visited_on,'%Y-%m-%d') as visited_on, sum(b.amount) as amount, round(avg(b.amount),2) as average_amount from total_amt as a left join total_amt as b on a.visited_on>=b.visited_on and date_add(a.visited_on,interval -6 day) <= b.visited_on group by 1 having count(b.visited_on)=7 order by a.visited_on
with uns as(select distinct visited_on, sum(amount) as am from Customer group by 1), regr as(select distinct visited_on, sum(am) over(order by visited_on rows between 6 preceding and current row) as amount, avg(am) over(order by visited_on rows between 6 preceding and current row) as average_amount, rank() over(order by visited_on asc) as r from uns) select visited_on, amount, round(average_amount,2) as average_amount from regr where r>6
with x as ( select visited_on , sum(amount) amt from customer group by 1 order by 1 ) select visited_on , round((sum(amt) over (order by visited_on rows between 6 preceding and current row)), 2) as amount , round((avg(amt) over (order by visited_on rows between 6 preceding and current row)), 2) as average_amount from x group by 1 order by 1 limit 6, 9999999
with x as ( select visited_on , sum(amount) as amt from customer group by 1 order by 1 ) select visited_on , round(amount, 2) as amount , round(average_amount, 2) as average_amount from ( select visited_on , sum(amt) over(order by visited_on rows 6 preceding) as amount , avg(amt) over(order by visited_on rows 6 preceding) as average_amount , lag(visited_on, 6) over(order by visited_on) as x from x group by 1 ) y where visited_on - x is not null order by 1
