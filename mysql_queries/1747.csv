SELECT DISTINCT A.account_id FROM LogInfo A, LogInfo B WHERE A.account_id = B.account_id AND A.ip_address != B.ip_address AND A.login <= B.logout and B.login <= A.logout
SELECT DISTINCT I1.account_id FROM LogInfo I1 INNER JOIN LogInfo I2 ON I1.account_id = I2.account_id AND I1.ip_address <> I2.ip_address AND I2.login BETWEEN I1.login AND I1.logout
SELECT DISTINCT L1.account_id FROM LogInfo AS L1, LogInfo AS L2 WHERE L1.account_id = L2.account_id AND L1.login BETWEEN L2.login AND L2.logout AND L1.ip_address != L2.ip_address
SELECT DISTINCT L1.account_id FROM LogInfo L1 INNER JOIN LogInfo L2 ON (L1.account_id = L2.account_id AND L1.ip_address <> L2.ip_address) WHERE L1.login BETWEEN L2.login AND L2.logout
SELECT DISTINCT L1.account_id FROM LogInfo L1 INNER JOIN LogInfo L2 ON L1.account_id = L2.account_id AND L1.ip_address != L2.ip_address AND L2.login BETWEEN L1.login AND L1.logout
SELECT DISTINCT L1.account_id FROM LogInfo L1 INNER JOIN LogInfo L2 ON L1.account_id = L2.account_id AND L1.ip_address <> L2.ip_address AND L1.login BETWEEN L2.login AND L2.logout ORDER BY 1 ASC
SELECT DISTINCT L1.account_id FROM LogInfo L1 LEFT JOIN LogInfo L2 ON L1.account_id=L2.account_id AND L1.ip_address!=L2.ip_address WHERE L2.login BETWEEN L1.login AND L1.logout
SELECT DISTINCT L1.account_id FROM LogInfo L1, LogInfo L2 WHERE L1.account_id = L2.account_id AND L1.ip_address <> L2.ip_address AND L1.login <= L2.login AND L1.logout >= L2.login
SELECT DISTINCT L1.account_id FROM LogInfo L1, LogInfo L2 WHERE L1.login BETWEEN L2.login AND L2.logout AND L1.account_id = L2.account_id AND L1.ip_address != L2.ip_address
SELECT DISTINCT a.account_id FROM LogInfo a INNER JOIN LogInfo b ON a.account_id = b.account_id AND a.ip_address != b.ip_address AND a.login <= b.logout AND a.logout >= b.login
SELECT DISTINCT a.account_id FROM LogInfo a JOIN LogInfo b ON (a.logout >= b.login AND a.logout <= b.logout) OR (a.login >= b.login AND a.login <= b.logout) WHERE a.account_id = b.account_id AND a.ip_address != b.ip_address
SELECT DISTINCT a.account_id FROM LogInfo a JOIN LogInfo b ON (a.logout BETWEEN b.login AND b.logout) OR (a.login BETWEEN b.login AND b.logout) WHERE a.account_id = b.account_id AND a.ip_address != b.ip_address
SELECT DISTINCT a.account_id FROM LogInfo a JOIN LogInfo b ON a.account_id = b.account_id AND a.ip_address != b.ip_address AND b.login BETWEEN a.login AND a.logout
SELECT DISTINCT a.account_id FROM LogInfo a JOIN LogInfo b ON a.account_id = b.account_id AND a.ip_address != b.ip_address WHERE GREATEST(a.login, b.login) <= LEAST(a.logout, b.logout)
SELECT DISTINCT a.account_id FROM LogInfo a JOIN LogInfo b ON a.account_id = b.account_id AND a.ip_address <> b.ip_address AND ((a.login BETWEEN b.login AND b.logout) OR (b.login BETWEEN a.login AND a.logout) )
SELECT DISTINCT a.account_id FROM LogInfo a JOIN LogInfo b ON a.account_id = b.account_id WHERE a.login BETWEEN b.login AND b.logout AND (a.ip_address <> b.ip_address)
SELECT DISTINCT a.account_id FROM LogInfo a JOIN LogInfo b USING (account_id) WHERE a.ip_address != b.ip_address AND (a.login BETWEEN b.login AND b.logout)
SELECT DISTINCT a.account_id FROM LogInfo a LEFT JOIN LogInfo b ON a.account_id = b.account_id AND ((a.login<=b.login AND a.logout>=b.login) OR (a.login>=b.login AND a.login <= b.logout)) WHERE a.ip_address <> b.ip_address
SELECT DISTINCT a.account_id FROM LogInfo a LEFT JOIN LogInfo b ON a.account_id = b.account_id AND a.ip_address != b.ip_address WHERE (b.login between a.login AND a.logout) OR (b.logout between a.login and a.logout)
SELECT DISTINCT a.account_id FROM LogInfo a, LogInfo b WHERE a.account_id = b.account_id AND a.ip_address != b.ip_address AND (a.login <= b.logout AND a.login >= b.login)
SELECT DISTINCT a.account_id FROM LogInfo a, LogInfo b WHERE a.account_id = b.account_id AND a.ip_address <> b.ip_address AND (a.logout >= b.login AND a.logout <= b.logout OR a.login >= b.login AND a.login <= b.logout)
SELECT DISTINCT a.account_id FROM LogInfo a, LogInfo b WHERE a.account_id = b.account_id AND a.ip_address <> b.ip_address AND a.login BETWEEN b.login AND b.logout
SELECT DISTINCT a.account_id FROM LogInfo a, LogInfo b WHERE a.account_id = b.account_id AND a.ip_address <> b.ip_address AND a.logout >= b.login AND a.logout <= b.logout
SELECT DISTINCT a.account_id FROM LogInfo a, LogInfo b WHERE a.account_id = b.account_id AND a.login BETWEEN b.login AND b.logout AND a.ip_address != b.ip_address
SELECT DISTINCT a.account_id FROM LogInfo a, LogInfo b WHERE a.login BETWEEN (b.login) AND (b.logout) AND a.account_id = b.account_id AND a.ip_address != b.ip_address
SELECT DISTINCT a.account_id FROM LogInfo a, LogInfo b WHERE a.login BETWEEN b.login AND b.logout AND a.account_id = b.account_id AND a.ip_address != b.ip_address
SELECT DISTINCT a.account_id FROM loginfo a JOIN loginfo b ON a.account_id = b.account_id AND a.ip_address < b.ip_address WHERE GREATEST(a.login, b.login) <= LEAST(a.logout, b.logout)
SELECT DISTINCT a.account_id FROM loginfo a JOIN loginfo b ON a.account_id = b.account_id AND a.ip_address <> b.ip_address WHERE GREATEST(a.login, b.login) <= LEAST(a.logout, b.logout)
SELECT DISTINCT account_id FROM ( SELECT LAG(logout,1) OVER (PARTITION BY account_id ORDER BY login, ip_address) AS prev_logout, LAG(ip_address,1) OVER (PARTITION BY account_id ORDER BY login, ip_address) AS prev_ip, ip_address, account_id, login, logout FROM LogInfo ) z WHERE prev_logout >= login AND prev_ip != ip_address
SELECT DISTINCT account_id FROM (SELECT *, LEAD(ip_address, 1) OVER(PARTITION BY account_id ORDER BY login) AS next_ip, LEAD(login, 1) OVER(PARTITION BY account_id ORDER BY login) AS next_login FROM LogInfo) AS t WHERE next_login <= logout AND next_ip != ip_address
SELECT DISTINCT account_id FROM( SELECT account_id, ip_address, CASE WHEN logout>= LEAD(login) OVER (PARTITION BY account_id ORDER BY login) THEN 1 ELSE 0 END to_be_banned, CASE WHEN ip_address=LEAD(ip_address) OVER (PARTITION BY account_id ORDER BY login) THEN 1 ELSE 0 END unique_ip FROM LogInfo) sub1 WHERE to_be_banned=1 AND unique_ip=0
SELECT DISTINCT info1.account_id FROM LogInfo as info1 INNER JOIN LogInfo as info2 ON info1.account_id = info2.account_id AND info1.ip_address <> info2.ip_address AND info1.login BETWEEN info2.login AND info2.logout
SELECT DISTINCT l1.account_id FROM LogInfo AS l1, LogInfo AS l2 WHERE l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND l1.login <= l2.login AND l2.login <= l1.logout
SELECT DISTINCT l1.account_id FROM LogInfo AS l1, LogInfo AS l2 WHERE l1.account_id = l2.account_id AND l1.logout >= l2.login AND l1.ip_address != l2.ip_address AND l1.login < l2.logout
SELECT DISTINCT l1.account_id FROM LogInfo as l1 JOIN LogInfo as l2 ON l1.account_id=l2.account_id WHERE l2.login BETWEEN l1.login and l1.logout and l1.ip_address!=l2.ip_address
SELECT DISTINCT l1.account_id FROM LogInfo as l1 JOIN LogInfo as l2 ON l1.account_id=l2.account_id and l2.login BETWEEN l1.login and l1.logout WHERE l1.ip_address!=l2.ip_address
SELECT DISTINCT l1.account_id FROM LogInfo l1 INNER JOIN LogInfo l2 on l1.account_id = l2.account_id ANd l1.ip_address <> l2.ip_address WHERE l1.login BETWEEN l2.login AND l2.logout
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 ON L1.account_id=L2.account_id AND l1.ip_address<>l2.ip_address AND ((l1.login BETWEEN l2.login AND l2.logout) OR (l1.logout BETWEEN l2.login AND l2.logout))
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 ON L1.account_id=L2.account_id AND l1.ip_address<>l2.ip_address AND (l1.login BETWEEN l2.login AND l2.logout)
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 ON l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND L2.login BETWEEN l1.login AND l1.logout
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 ON l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND l1.login <= l2.logout AND l1.logout >= l2.login
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 ON l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND l2.login BETWEEN l1.login AND l1.logout
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 ON l1.account_id = l2.account_id WHERE l1.ip_address!=l2.ip_address AND (l1.login BETWEEN l2.login AND l2.logout OR l2.login BETWEEN l1.login AND l1.logout)
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 WHERE l1.account_id = l2.account_id AND l1.login between l2.login and l2.logout AND l1.ip_address <> l2.ip_address
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 on l1.account_id = l2.account_id WHERE l1.ip_address != l2.ip_address AND l1.login BETWEEN l2.login AND l2.logout
SELECT DISTINCT l1.account_id FROM LogInfo l1 JOIN LogInfo l2 on l1.account_id = l2.account_id where l1.ip_address <> l2.ip_address and (l1.login between l2.login and l2.logout OR l2.login between l1.login and l1.logout)
SELECT DISTINCT l1.account_id FROM LogInfo l1 join LogInfo l2 ON l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND ( (l1.login between l2.login and l2.logout) OR (l2.login between l1.login and l1.logout) )
SELECT DISTINCT l1.account_id FROM LogInfo l1, LogInfo l2 WHERE l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND (l1.login BETWEEN l2.login AND l2.logout OR l2.login BETWEEN l1.login AND l1.logout)
SELECT DISTINCT l1.account_id FROM LogInfo l1, LogInfo l2 WHERE l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND l1.login BETWEEN l2.login AND l2.logout
SELECT DISTINCT l1.account_id FROM loginfo l1 JOIN loginfo l2 ON l1.account_id = l2.account_id AND l1.ip_address <> l2.ip_address WHERE (l1.login between (l2.login) and (l2.logout)) OR (l1.logout between (l2.login) and (l2.logout))
SELECT DISTINCT l1.account_id FROM loginfo l1 JOIN loginfo l2 ON l1.account_id = l2.account_id AND l1.ip_address <> l2.ip_address WHERE (l1.logout >= l2.login AND l1.login <= l2.logout)
SELECT DISTINCT l1.account_id FROM loginfo l1 JOIN loginfo l2 ON l1.account_id = l2.account_id AND l1.ip_address <> l2.ip_address WHERE NOT (l2.login > l1.logout OR l1.login > l2.logout)
SELECT DISTINCT l1.account_id FROM loginfo l1 JOIN loginfo l2 ON l1.account_id=l2.account_id and l1.ip_address!=l2.ip_address and l2.login between l1.login and l1.logout WHERE l2.account_id is not null
SELECT DISTINCT l1.account_id as 'account_id' FROM LogInfo l1 JOIN LogInfo l2 ON l1.account_id=l2.account_id WHERE l1.ip_address <> l2.ip_address AND l1.login BETWEEN l2.login AND l2.logout
SELECT DISTINCT l2.account_id FROM LogInfo l1 INNER JOIN LOgInfo l2 ON l1.account_id = l2.account_id AND l1.login BETWEEN l2.login AND l2.logout WHERE l1.ip_address <> l2.ip_address
SELECT DISTINCT l2.account_id FROM LogInfo l1 JOIN LogInfo l2 ON l1.account_id = l2.account_id AND l1.ip_address <> l2.ip_address AND l2.login BETWEEN l1.login AND l1.logout
SELECT DISTINCT l2.account_id FROM LogInfo l1 LEFT JOIN LogInfo l2 ON l1.account_id = l2.account_id AND l1.ip_address <> l2.ip_address AND l1.login <= l2.login AND l2.login <= l1.logout WHERE l2.account_id IS NOT NULL
SELECT DISTINCT log2.account_id FROM LogInfo log1, LogInfo log2 WHERE log1.account_id = log2.account_id AND log1.ip_address <> log2.ip_address AND log1.login BETWEEN log2.login AND log2.logout
SELECT DISTINCT t1.account_id FROM LogInfo AS t1 JOIN LogInfo AS t2 WHERE t2.login >= t1.login AND t2.login <= t1.logout AND t1.ip_address != t2.ip_address AND t1.account_id = t2.account_id
SELECT DISTINCT t1.account_id FROM LogInfo t1, LogInfo t2 WHERE t1.account_id = t2.account_id AND t1.ip_address != t2.ip_address AND t2.login BETWEEN t1.login AND t1.logout
SELECT DISTINCT(L1.account_id) AS account_id FROM LogInfo AS L1 JOIN LogInfo AS L2 ON L1.account_id = L2.account_id AND (L2.login BETWEEN L1.login AND L1.logout OR L2.logout BETWEEN L1.login AND L1.logout OR (L2.login < L1.login AND L2.logout > L1.logout)) AND L1.ip_address != L2.ip_address
SELECT DISTINCT(a.account_id) FROM LogInfo AS a JOIN LogInfo AS b ON a.account_id = b.account_id AND a.ip_address != b.ip_address WHERE a.login between (b.login) and (b.logout)
SELECT DISTINCT(a.account_id) FROM LogInfo AS a JOIN LogInfo AS b ON a.account_id = b.account_id AND a.ip_address != b.ip_address WHERE b.login <= a.logout AND a.login <= b.logout
SELECT DISTINCT(account_id) FROM LogInfo l1 JOIN LogInfo l2 USING(account_id) WHERE l1.ip_address <> l2.ip_address AND (l1.logout >= l2.login AND l1.login <= l2.logout)
SELECT DISTINCT(l1.account_id) AS account_id FROM LogInfo l1 JOIN LogInfo l2 ON l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address WHERE (l1.logout <= l2.logout and l1.logout >= l2.login) OR (l1.login >= l2.login AND l1.login <= l2.logout)
SELECT L1.account_id FROM Loginfo AS L1 JOIN Loginfo AS L2 ON L1.account_id = L2.account_id AND L1.login < L2.login AND L1.logout >= L2.Login AND L1.ip_address != L2.ip_address GROUP BY L1.account_id HAVING COUNT(DISTINCT(L1.ip_address)) >= 1
SELECT distinct a.account_id FROM LogInfo a JOIN LogInfo b ON a.account_id=b.account_id AND a.ip_address!=b.ip_address WHERE (a.login BETWEEN b.login AND b.logout) OR (b.login BETWEEN a.login AND a.logout)
SELECT distinct a.account_id FROM LogInfo as a, LogInfo as b Where a.account_id = b.account_id AND a.ip_address != b.ip_address AND a.login BETWEEN b.login AND b.logout
SELECT distinct a.account_id from LogInfo as a join LogInfo as b on a.account_id = b.account_id and a.ip_address <> b.ip_address and ((a.login between b.login and b.logout) or (b.login between a.login and a.logout))
SELECT distinct account_id FROM (SELECT *, lead(login) OVER (PARTITION BY account_id ORDER BY login) later_login, lead(ip_address) OVER (PARTITION BY account_id ORDER BY login) later_address FROM loginfo)t1 WHERE later_login BETWEEN login and logout AND later_address != ip_address
SELECT distinct l.account_id FROM loginfo l JOIN loginfo x ON x.account_id=l.account_id and l.ip_address!=x.ip_address and (l.login between x.login and x.logout or (x.login between l.login and l.logout))
SELECT distinct l1.account_id FROM LogInfo l1 JOIN LogInfo l2 ON l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND l2.login BETWEEN l1.login AND l1.logout
SELECT distinct p1.account_id FROM LogInfo p1 inner join LogInfo p2 on p1. account_id=p2.account_id and p1.ip_address!=p2.ip_address where (p1.login between p2.login and p2.logout) or (p2.login between p1.login and p1.logout)
SELECT l1.account_id FROM LogInfo AS l1 INNER JOIN LogInfo AS l2 ON l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address AND (l2.login BETWEEN l1.login AND l1.logout OR l2.logout BETWEEN l1.login AND l1.logout) GROUP BY l1.account_id
SELECT l1.account_id FROM LogInfo l1,LogInfo l2 WHERE l1.account_id=l2.account_id and l1.ip_address!=l2.ip_address AND l2.login BETWEEN l1.login and l1.logout GROUP BY l1.account_id
Select DISTINCT l1.account_id from LogInfo l1 inner join loginfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and l2.login between l1.login and l1.logout
Select distinct a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id and a.login between b.login and b.logout and a.ip_address <> b.ip_address
Select distinct a.account_id from loginfo a, loginfo b where a.login between b.login and b.logout and a.account_id=b.account_id and a.ip_address<>b.ip_address
Select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.account_id=l2.account_id and l1.ip_address<>l2.ip_address and l2.login between l1.login and l1.logout
Select distinct l1.account_id from LogInfo l1 join loginfo l2 where l2.login between l1.login and l1.logout and l1.account_id=l2.account_id and l1.ip_address!=l2.ip_address
Select distinct li.account_id from LogInfo li, LogInfo lg where li.account_id = lg.account_id and ( lg.login between li.login and li.logout or lg.logout between li.login and li.logout) and li.ip_address != lg.ip_address
WITH CTE1 AS ( SELECT DISTINCT * FROM LogInfo ORDER BY login, logout) SELECT DISTINCT A.account_id FROM CTE1 AS A, CTE1 AS B WHERE A.account_id = B.account_id AND A.ip_address != B.ip_address AND A.login<=B.login AND B.login<=A.logout
WITH cte_log AS ( SELECT account_id, login AS log_time, 'login' AS log_type, ip_address FROM LogInfo UNION SELECT account_id, logout AS log_time, 'logout' AS log_type, ip_address FROM LogInfo ) SELECT DISTINCT account_id FROM ( SELECT account_id, ip_address AS current_address, log_type AS current_log_type, LEAD(log_type, 1) OVER (PARTITION BY account_id ORDER BY log_time) AS next_log_type, LEAD(ip_address, 1) OVER (PARTITION BY account_id ORDER BY log_time) AS next_adress FROM cte_log ) l WHERE current_log_type = next_log_type AND current_address != next_adress
WITH distinct_records AS ( SELECT DISTINCT account_id, ip_address, login, logout FROM LogInfo ), find_next_login AS ( SELECT *, LEAD(login, 1) OVER(PARTITION BY account_id ORDER BY login) as next_login, LEAD(ip_address, 1) OVER(PARTITION BY account_id ORDER BY login) as next_ip FROM distinct_records ) SELECT DISTINCT account_id FROM find_next_login WHERE next_login >= login AND next_login <= logout and ip_address <> next_ip
WITH find_next_login AS ( SELECT *, LEAD(login, 1) OVER(PARTITION BY account_id ORDER BY login) as next_login, LEAD(ip_address, 1) OVER(PARTITION BY account_id ORDER BY login) as next_ip FROM LogInfo ) SELECT DISTINCT account_id FROM find_next_login WHERE next_login >= login AND next_login <= logout and ip_address <> next_ip
WITH main AS ( SELECT account_id, (CASE WHEN LEAD(ip_address) OVER W IS NULL THEN 0 WHEN ip_address <> LEAD(ip_address) OVER W AND TIMESTAMPDIFF(SECOND,logout,LEAD(login) OVER W) <= 0 THEN 1 ELSE 0 END) AS stat FROM LogInfo WINDOW W AS (PARTITION BY account_id ORDER BY login) ) SELECT DISTINCT account_id FROM main WHERE stat=1
WITH new_log AS ( SELECT l1.account_id, l1.ip_address FROM LogInfo l1, LogInfo l2 WHERE l2.login >= l1.login AND l2.login <= l1.logout AND l1.account_id = l2.account_id AND l1.ip_address != l2.ip_address ) SELECT DISTINCT account_id FROM new_log
WITH remove_duplicates AS (SELECT * FROM LogInfo) SELECT DISTINCT login1.account_id FROM remove_duplicates login1 JOIN remove_duplicates login2 ON login1.account_id = login2.account_id AND login1.ip_address != login2.ip_address WHERE login2.login BETWEEN login1.login and login1.logout
WITH table1 AS( SELECT account_id, ip_address, login, logout, LEAD(login)OVER(PARTITION BY account_id ORDER BY login ASC) AS lead_login, LEAD(ip_address)OVER(PARTITION BY account_id ORDER BY login ASC) lead_ip FROM LogInfo ) SELECT DISTINCT account_id FROM table1 WHERE (lead_login <= logout) AND (ip_address != lead_ip)
select a.account_id from LogInfo a inner join LogInfo b on a.account_id = b.account_id and a.ip_address <> b.ip_address and a.login between b.login and b.logout group by 1
select a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id where ((a.login >= b.login and a.login <= b.logout) or (a.logout >= b.login and a.logout <= b.logout) or (a.login <= b.login and a.logout >= b.logout)) and (a.ip_address != b.ip_address) group by 1
select a.account_id from LogInfo a, LogInfo b where a.login between b.login and b.logout and a.account_id = b.account_id and a.ip_address <> b.ip_address group by 1
select a.account_id from loginfo a inner join loginfo b on a.account_id = b.account_id and a.ip_address<> b.ip_address where a.login between b.login and b.logout group by 1
select a.account_id from loginfo a join loginfo b on a.account_id = b.account_id and a.ip_address != b.ip_address where b.login >= a.login and b.login <= a.logout group by account_id
select account_id from ( select l1.account_id, case when l1.login <= l2.login and l1.logout >= l2.login then 1 else 0 end as flag from loginfo l1 left join loginfo l2 on l1.account_id = l2.account_id where l1.ip_address != l2.ip_address ) cte group by 1 having sum(flag) >0
select account_id from loginfo a where exists (select 1 from loginfo where a.account_id = account_id and a.login between login and logout and a.ip_address != ip_address) group by account_id
select distinct A.account_id from LogInfo A left join LogInfo B on A.account_id = B.account_id and A.logout >=B.login and A.login <=B.logout where A.ip_address != B.ip_address
select distinct L1.account_id as account_id from LogInfo L1 join LogInfo L2 on L1.ip_address != L2.ip_address and L2.login between L1.login and L1.logout and L1.account_id = L2.account_id
select distinct L1.account_id from LogInfo L1 inner join LogInfo L2 on L1.account_id=L2.account_id and L1.ip_address != L2.ip_address where (L2.login BETWEEN L1.login AND L1.logout) OR (L1.login BETWEEN L2.login AND L2.logout)
select distinct L1.account_id from LogInfo L1 join LogInfo L2 on L1.account_id = L2.account_id where L1.ip_address <> L2.ip_address and (L1.login between L2.login and L2.logout or L2.login between L1.login and L1.logout)
select distinct L1.account_id from LogInfo L1 join LogInfo L2 on least(L1.logout,L2.logout)-greatest(L1.login,L2.login)>=0 and L1.ip_address > L2.ip_address and L1.account_id = L2.account_id
select distinct L1.account_id from LogInfo L1, LogInfo L2 where L1.account_id = L2.account_id and ( (L1.login <= L2.logout and L2.logout<=L1.logout) or (L2.login <= L1.logout and L1.logout<=L2.logout)) and L1.ip_address <> L2.ip_address
select distinct L1.account_id from LogInfo L1, LogInfo L2 where L1.ip_address <> L2.ip_address and (L1.login between L2.login and L2.logout) and L1.account_id = L2.account_id
select distinct L1.account_id from LogInfo L1, LogInfo L2 where L1.login between (L2.login) and (L2.logout) and L1.account_id = L2.account_id and L1.ip_address != L2.ip_address
select distinct L1.account_id from LogInfo as L1 left join LogInfo as L2 on L1.account_id = L2.account_id where L1.ip_address <> L2.ip_address and L1.logout >= L2.login and L1.logout <= L2.logout
select distinct a.account_id from LogInfo a inner join LogInfo b on (a.account_id=b.account_id) and (a.ip_address<>b.ip_address) where a.login>=b.login and a.login<=b.logout
select distinct a.account_id from LogInfo a inner join LogInfo b on (b.login between a.login and a.logout or b.logout between a.login and a.logout) and a.account_id = b.account_id and a.ip_address <> b.ip_address
select distinct a.account_id from LogInfo a inner join LogInfo b on a.account_id = b.account_id and a.ip_address <> b.ip_address WHERE (a.logout <= b.logout and a.logout >= b.login) union select distinct a.account_id from LogInfo a inner join LogInfo b on a.account_id = b.account_id and a.ip_address <> b.ip_address WHERE (a.login >= b.login AND a.login <= b.logout)
select distinct a.account_id from LogInfo a join LogInfo b on a. account_id=b. account_id where a.ip_address <> b.ip_address and (a.login between b.login and b.logout or b.login between a.login and a.logout)
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id and (b.login between a.login and a.logout or a.login between b.login and b.logout) and a.ip_address != b.ip_address
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id and a.ip_address != b.ip_address and b.login >= a.login and b.login <= a.logout
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id and a.ip_address != b.ip_address and b.login between a.login and a.logout
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id and a.ip_address != b.ip_address where (a.login >= b.login and a.login <= b.logout) or (a.logout <= b.logout and a.logout >= b.login)
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id and a.ip_address != b.ip_address where a.login between b.login and b.logout or a.logout between b.login and b.logout
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id and a.ip_address <> b.ip_address and b.login between a.login and a.logout
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id = b.account_id and a.login <= b.login and a.logout >=b.login and a.ip_address <> b.ip_address
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id=b.account_id and (a.logout>=b.login and a.logout<=b.logout) and a.ip_address<>b.ip_address
select distinct a.account_id from LogInfo a join LogInfo b on a.account_id=b.account_id where (b.login>=a.login and b.login<=a.logout) and a.ip_address<>b.ip_address
select distinct a.account_id from LogInfo a join LogInfo b on a.login between (b.login) and (b.logout) and a.account_id = b.account_id and a.ip_address !=b.ip_address
select distinct a.account_id from LogInfo a, LogInfo b where a.account_id = b.account_id and (a.logout >= b.login and a.logout <= b.logout) and a.ip_address != b.ip_address
select distinct a.account_id from LogInfo a, LogInfo b where a.account_id = b.account_id and (a.logout between b.login and b.logout) and a.ip_address != b.ip_address
select distinct a.account_id from LogInfo a, LogInfo b where a.account_id = b.account_id and a.login between b.login and b.logout and a.ip_address != b.ip_address
select distinct a.account_id from LogInfo a, LogInfo b where a.ip_address != b.ip_address and a.account_id = b.account_id and !(a.login > b.logout or a.logout < b.login)
select distinct a.account_id from LogInfo a, LogInfo b where a.ip_address != b.ip_address and a.account_id = b.account_id and ((a.login >= b.login and a.login <= b.logout) or (b.login >= a.login and b.login <= a.logout) or (a.logout = b.login or b.logout = a.login) )
select distinct a.account_id from LogInfo a, LogInfo b where a.login between (b.login) and (b.logout) and a.account_id = b.account_id and a.ip_address !=b.ip_address
select distinct a.account_id from LogInfo a, LogInfo b where a.login between (b.login) and (b.logout) and a.account_id = b.account_id and a.ip_address!=b.ip_address
select distinct a.account_id from LogInfo a, LogInfo b where a.login between b.login and b.logout and a.account_id = b.account_id and a.ip_address != b.ip_address
select distinct a.account_id from LogInfo a, LogInfo b where b.login between a.login and a.logout and a.account_id=b.account_id and a.ip_address <> b.ip_address
select distinct a.account_id from LogInfo as a join LogInfo as b on a.account_id = b.account_id and a.ip_address <> b.ip_address and a.login between b.login and b.logout
select distinct a.account_id from LogInfo as a join LogInfo as b on a.account_id = b.account_id where a.ip_address != b.ip_address and a.login <= b.login and a.logout >= b.login
select distinct a.account_id from LogInfo as a join LogInfo as b on a.account_id=b.account_id and a.ip_address != b.ip_address and not(b.logout<a.login or b.login>a.logout)
select distinct a.account_id from Loginfo a, Loginfo b where a.account_id = b.account_id and b.login between a.login and a.logout and a.ip_address <> b.ip_address
select distinct a.account_id from logInfo a, logInfo b where a.account_id = b.account_id and a.ip_address != b.ip_address and (a.login between b.login and b.logout)
select distinct a.account_id from loginfo a cross join loginfo b where a.account_id = b.account_id and a.ip_address != b.ip_address and a.login <= b.login and a.logout >= b.login
select distinct a.account_id from loginfo a inner join loginfo b on a.account_id=b.account_id and a.ip_address != b.ip_address and a.login >b.login and a.login<=b.logout
select distinct a.account_id from loginfo a inner join loginfo b on a.account_id=b.account_id and a.ip_address != b.ip_address and a.login<= b.logout and a.logout>=b.login
select distinct a.account_id from loginfo a join loginfo b on a. account_id=b.account_id and a.ip_address<>b.ip_address where a.login between b.login and b.logout
select distinct a.account_id from loginfo a join loginfo b on a.account_id = b.account_id and ( a.login between b.login and b.logout or a.logout between b.login and b.logout) and a.ip_address <> b.ip_Address where b.login is not null or b.logout is not null
select distinct a.account_id from loginfo a join loginfo b on a.account_id = b.account_id and a.ip_address != b.ip_address and a.login between b.login and b.logout
select distinct a.account_id from loginfo a join loginfo b on a.account_id = b.account_id and a.ip_address != b.ip_address and b.login between a.login and a.logout
select distinct a.account_id from loginfo a join loginfo b on a.account_id = b.account_id and a.ip_address != b.ip_address where (a.login >= b.login and a.login <= b.logout) or (b.login >= a.login and b.login <= a.logout)
select distinct a.account_id from loginfo a join loginfo b on a.account_id = b.account_id and a.ip_address <> b.ip_address where b.login between a.login and a.logout
select distinct a.account_id from loginfo a join loginfo b on a.account_id = b.account_id where (a.login between b.login and b.logout or b.login between a.login and a.logout) and a.ip_address <> b.ip_address
select distinct a.account_id from loginfo a join loginfo b on a.account_id = b.account_id where (a.login between b.login and b.logout) and a.ip_address <> b.ip_address
select distinct a.account_id from loginfo a join loginfo b on a.account_id=b.account_id and a.ip_address!=b.ip_address and (b.login between a.login and a.logout or b.logout between a.login and a.logout)
select distinct a.account_id from loginfo a join loginfo b on a.account_id=b.account_id and a.ip_address<> b.ip_address and ((a.login between b.login and b.logout) or (b.login between a.login and a.logout))
select distinct a.account_id from loginfo a join loginfo b on a.account_id=b.account_id and b.login >= a.login and b.login <= a.logout and a.ip_address != b.ip_address
select distinct a.account_id from loginfo a join loginfo b on a.account_id=b.account_id and b.login between a.login and a.logout and a.ip_address != b.ip_address
select distinct a.account_id from loginfo a join loginfo b on b.login between a.login and a.logout and a.account_id = b.account_id where a.ip_address !=b.ip_address
select distinct a.account_id from loginfo a join loginfo b where a.account_id=b.account_id and a.ip_address!=b.ip_address and a.login<=b.login and a.logout>=b.login
select distinct a.account_id from loginfo a left join loginfo b on a.account_id=b.account_id and a.ip_address!=b.ip_address where b.login between a.login and a.logout
select distinct a.account_id from loginfo a, loginfo b where a.account_id = b.account_id and a.ip_address != b.ip_address and (a.login <= b.logout) and (b.login <= a.logout)
select distinct a.account_id from loginfo a, loginfo b where a.account_id = b.account_id and a.ip_address <> b.ip_address and (b.login between a.login and a.logout)
select distinct a.account_id from loginfo a, loginfo b where a.account_id = b.account_id and a.ip_address <> b.ip_address and a.login between b.login and b.logout
select distinct a.account_id from loginfo a, loginfo b where a.account_id = b.account_id and a.login between b.login and b.logout and a.ip_address != b.ip_address
select distinct a.account_id from loginfo a, loginfo b where a.account_id = b.account_id and b.login between a.login and a.logout and a.ip_address <> b.ip_address
select distinct a.account_id from loginfo a, loginfo b where a.account_id=b.account_id and a.ip_address != b.ip_address and b.login between a.login and a.logout
select distinct a.account_id from loginfo a, loginfo b where a.account_id=b.account_id and a.ip_address!=b.ip_address and a.logout>=b.login and a.logout<=b.logout
select distinct a.account_id from loginfo a, loginfo b where a.account_id=b.account_id and b.login between a.login and a.logout and a.ip_address != b.ip_address
select distinct a.account_id from loginfo a, loginfo b where a.login < b.login and a.logout >= b.login and a.account_id = b.account_id and a.ip_address != b.ip_address
select distinct a.account_id from loginfo a, loginfo b where a.login between b.login and b.logout and a.account_id = b.account_id and a.ip_address <> b.ip_address
select distinct a.account_id from loginfo as a join loginfo as b on a.account_id = b.account_id and a.ip_address != b.ip_address where a.logout>= b.login and a.logout<=b.logout
select distinct a.account_id from loginfo as a join loginfo as b on a.account_id=b.account_id and (a.login between b.login and b.logout or b.login between a.login and a.logout) where a.ip_address != b.ip_address
select distinct a.account_id from loginfo as a left join loginfo as b on a.account_id = b.account_id and a.ip_address <> b.ip_address where (a.login >=b.login and a.login<=b.logout) or (b.login >=a.login and b.login<=a.logout) order by 1
select distinct a1.account_id from LogInfo as a1 join LogInfo as a2 on a1.login >= a2.login and a1.login <= a2.logout and a1.account_id = a2.account_id and a1.ip_address <> a2.ip_address
select distinct a1.account_id from loginfo as a1 join loginfo as a2 on a1.account_id=a2.account_id and a1.ip_address<>a2.ip_address and a1.login between a2.login and a2.logout
select distinct account_id from ( select a.account_id, a.ip_address, a.login as alogin, a.logout as alogout, b.login as blogin, b.logout as blogout from LogInfo a join LogInfo b on a.account_id=b.account_id and a.ip_address !=b.ip_address )a where blogin between alogin and alogout
select distinct account_id from ( select account_id, ip_address, login,logout , lead(ip_address) over (partition by account_id order by login) as next_ip, lead(login) over (partition by account_id order by login) as next_login from loginfo ) tmp where next_ip is not null and ip_address != next_ip and logout>= next_login
select distinct account_id from ( select l1.account_id, l1.ip_address as ip1, l2.ip_address as ip2, case when l1.login>=l2.login and l1.logout<=l2.logout then 1 when l1.login<=l2.login and l1.logout>=l2.logout then 1 when l1.login<=l2.logout and l1.logout>=l2.login then 1 else 0 end as overlap from LogInfo l1 join LogInfo l2 on l1.account_id=l2.account_id ) as t where overlap =1 and ip1!=ip2
select distinct account_id from ( select l1.account_id, l1.ip_address as ip1, l2.ip_address as ip2, case when l1.login>=l2.login and l1.logout<=l2.logout then 1 when l1.login<=l2.logout and l1.logout>=l2.login then 1 else 0 end as overlap from LogInfo l1 join LogInfo l2 on l1.account_id=l2.account_id ) as t where overlap =1 and ip1!=ip2
select distinct account_id from (select *, lead(login,1,0)over(partition by account_id order by login) as next_login, lead(ip_address,1,0)over(partition by account_id) as next_ip from loginfo)z where next_login between login and logout and ip_address<>next_ip
select distinct account_id from (select a.account_id,a.ip_address as ip1, b.ip_address as ip2,a.login as login1,b.login as login2 from loginfo as a join loginfo as b on a.account_id=b.account_id and a.ip_address!=b.ip_address and ((a.login between b.login and b.logout) or (b.login between a.login and a.logout))) as T
select distinct account_id from (select a.account_id,a.ip_address,b.ip_address as diff_ip_address from LogInfo a, LogInfo b where ((b.logout>=a.login and b.logout<=a.logout) or (b.login>=a.login and b.login<=a.logout)) and a.account_id=b.account_id and b.ip_address!=a.ip_address)a
select distinct account_id from (select account_id, ip_address,lag(ip_address, 1)over(partition by account_id order by login) as last_ip, login, logout, lag(logout,1)over(partition by account_id order by login) as last_out from loginfo order by login asc) as temp where login <= last_out and ip_address <> last_ip
select distinct account_id from LogInfo where account_id in ( select l1.account_id from LogInfo l1 left join LogInfo l2 on l1.account_id = l2.account_id and l1.ip_address<>l2.ip_address where (l1.login=l2.login) or(l1.logout=l2.logout) or(l1.login>l2.login and l1.login<=l2.logout) or(l1.login<l2.login and l1.logout>=l2.login))
select distinct account_id from( select account_id, ip_address, lead(ip_address) over (partition by account_id order by login) as lead_ip, login, logout, lead(login) over (partition by account_id order by login) as lead_login, lead(logout) over (partition by account_id order by login) as lead_logout from LogInfo) as TMP where lead_login between login and logout and ip_address <> lead_ip
select distinct account_id from( select l1.account_id, case when l1.logout < l2.login then 0 else 1 end banned from loginfo l1, loginfo l2 where l1.account_id = l2.account_id and l1.ip_address !=l2.ip_address and l1.login <= l2.login ) sub where banned = 1
select distinct b.account_id from LogInfo a inner join LogInfo b on a.account_id=b.account_id and a.ip_address !=b.ip_address and b.login between a.login and a.logout
select distinct c.account_id from (select a.account_id, a.ip_address from loginfo a, loginfo b where a.account_id = b.account_id and a.ip_address <> b.ip_address and a.login between b.login and b.logout) as c
select distinct case when a.login between b.login and b.logout or b.login between a.login and a.logout then a.account_id else null end as account_id from LogInfo a, LogInfo b where a.account_id = b.account_id and a.ip_address != b.ip_address and case when a.login between b.login and b.logout or b.login between a.login and a.logout then a.account_id else null end is not null
select distinct coalesce(a.account_id, b.account_id) as account_id from loginfo a join loginfo b on a.account_id = b.account_id and (a.login between b.login and b.logout or b.login between a.login and a.logout) and a.ip_address <> b.ip_address order by 1
select distinct f.account_id from loginfo f join loginfo s on f.account_id=s.account_id and f.ip_address!=s.ip_address where not(f.login>s.logout or f.logout<s.login)
select distinct l.account_id from LogInfo l inner join LogInfo l1 on l.account_id=l1.account_id and l.ip_address!=l1.ip_address where (l1.login>=l.login and l1.login<=l.logout) or (l1.logout<=l.login and l1.logout>=l.login) or (l1.login<=l.login and l1.logout>=l.logout)
select distinct l.account_id from LogInfo l join LogInfo ll on l.account_id = ll.account_id and l.login >= ll.login and l.login <= ll.logout and l.ip_address != ll.ip_address
select distinct l.account_id from LogInfo l join LogInfo r on l.account_id=r.account_id and l.login between r.login and r.logout where l.ip_address != r.ip_address
select distinct l.account_id from LogInfo l, LogInfo l2 where l2.account_id=l.account_id and l2.login<=l.logout and l2.ip_address!=l.ip_address and l2.logout>=l.login
select distinct l.account_id from loginfo l join loginfo ll on l.account_id=ll.account_id and l.ip_address!=ll.ip_address where (l.login between ll.login and ll.logout) or (ll.login between l.login and l.logout) order by l.account_id
select distinct l1.account_id from (select distinct * from loginfo) l1 left join (select distinct * from loginfo) l2 on l2.login between l1.login and l1.logout and l1.account_id = l2.account_id and l1.ip_address != l2.ip_address where l2.login is not null
select distinct l1.account_id from LogInfo as l1, LogInfo as l2 where l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and ((l1.login between l2.login and l2.logout) or (l2.login between l1.login and l1.logout))
select distinct l1.account_id from LogInfo l1 inner join LogInfo l2 on l1.account_id = l2.account_id and l1.ip_address <> l2.ip_address and (l1.login between l2.login and l2.logout or l2.login between l1.login and l1.logout)
select distinct l1.account_id from LogInfo l1 inner join LogInfo l2 on l1.account_id=l2.account_id and l1.ip_address<>l2.ip_address and ((l2.login<=l1.login and l2.logout>=l1.login) or (l2.login>=l1.login and l2.login<=l1.logout) )
select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and ((l1.login >= l2.login and l1.logout <= l2.logout) or (l1.login >= l2.login and l2.logout >= l1.login) )
select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and (l2.login between l1.login and l1.logout or l1.login between l2.login and l2.logout)
select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address where l2.login between l1.login and l1.logout
select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address where not (l1.login > l2.logout or l1.logout < l2.login)
select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.account_id = l2.account_id where l1.ip_address <> l2.ip_address and (l1.login between l2.login and l2.logout or l2.login between l1.login and l1.logout)
select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.account_id = l2.account_id where l1.ip_address!=l2.ip_address and l1.logout>=l2.login and l1.logout<=l2.logout
select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.account_id=l2.account_id where l1.ip_address !=l2.ip_address and ((l2.login between l1.login and l1.logout)or l2.logout between l1.login and l1.logout)
select distinct l1.account_id from LogInfo l1 join LogInfo l2 on l1.ip_address <>l2.ip_address and l1.account_id = l2.account_id and ((l1.login between l2.login and l2.logout) or (l1.logout between l2.login and l2.logout) or (l2.logout between l1.login and l1.logout) or (l2.login between l1.login and l1.logout))
select distinct l1.account_id from LogInfo l1 join logInfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and l1.login between l2.login and l2.logout
select distinct l1.account_id from LogInfo l1, LogInfo l2 where (l1.account_id = l2.account_id) and (l1.login between l2.login and l2.logout) and (l1.ip_address != l2.ip_address)
select distinct l1.account_id from LogInfo l1, LogInfo l2 where l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and (l1.login between l2.login and l2.logout or l2.login between l1.login and l1.logout)
select distinct l1.account_id from LogInfo l1, LogInfo l2 where l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and l2.login >= l1.login and l2.login <= l1.logout
select distinct l1.account_id from LogInfo l1, LogInfo l2 where l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and l2.login between l1.login and l1.logout
select distinct l1.account_id from LogInfo l1, LogInfo l2 where l1.account_id = l2.account_id and l1.ip_address <> l2.ip_address and l1.login <= l2.login and l2.login <= l1.logout
select distinct l1.account_id from LogInfo l1, LogInfo l2 where l1.account_id = l2.account_id and l1.logout >= l2.login and l1.login < l2.login and l1.ip_address <> l2.ip_address
select distinct l1.account_id from LogInfo l1, LogInfo l2 where l1.login between l2.login and l2 .logout and l1.ip_address != l2.ip_address and l1.account_id = l2.account_id
select distinct l1.account_id from LogInfo l1,LogInfo l2 where l1.login<=l2.logout and l1.logout>= l2.login and l1.account_id =l2.account_id and l1.ip_address <> l2.ip_address
select distinct l1.account_id from Loginfo L1, Loginfo L2 where L1.account_id = L2.account_id and L1.ip_address <> L2.ip_address and (L2.login between l1.login and l1.logout or L1.login between l2.login and l2.logout)
select distinct l1.account_id from Loginfo l1 inner join LogInfo l2 on l1.account_id = l2.account_id where l1.ip_address <> l2.ip_address and (l2.login > l1.login and l2.login <= l1.logout)
select distinct l1.account_id from loginfo as l1 inner join loginfo l2 on l1.account_id = l2.account_id and l2.login between l1.login and l1.logout and l1.ip_address <> l2.ip_address
select distinct l1.account_id from loginfo l1 inner join loginfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address where (l1.logout >= l2.login and l1.login < l2.login)
select distinct l1.account_id from loginfo l1 inner join loginfo l2 on l1.account_id = l2.account_id and l1.login <= l2.login and l1.logout >= l2.login and l1.ip_address <> l2.ip_address
select distinct l1.account_id from loginfo l1 inner join loginfo l2 on l1.account_id =l2.account_id and l1.ip_address !=l2.ip_address and l1.login > l2.login and l1.login <= l2.logout
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id = l2.account_Id and l1.ip_address!= l2.ip_address where l2.login<=l1.logout and l2.logout>=l1.login
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id = l2.account_id AND l1.ip_address <> l2.ip_address where (l1.login >= l2.login AND l1.login <= l2.logout) OR (l1.logout >= l2.login AND l1.logout <= l2.logout)
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and (l2.login between l1.login and l1.logout or l2.logout between l1.login and l1.logout)
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id = l2.account_id and l1.ip_address < l2.ip_address where l1.login between l2.login and l2.logout or l1.logout between l2.login and l2.logout or l2.login between l1.login and l1.logout or l2.logout between l1.login and l1.logout
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id = l2.account_id and l1.ip_address <> l2.ip_address where not (l1.login > l2.logout or l2.login > l1.logout)
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id = l2.account_id and l1.login between l2.login and l2.logout where l1.ip_address != l2.ip_address
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id = l2.account_id where l2.login between l1.login and l1.logout and l1.ip_address != l2.ip_address
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id=l2.account_id and l1.ip_address!=l2.ip_address and l2.login between l1.login and l1.logout
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id=l2.account_id and l1.ip_address<>l2.ip_address and l2.login between l1.login and l1.logout
select distinct l1.account_id from loginfo l1 join loginfo l2 on l1.account_id=l2.account_id where l1.ip_address<>l2.ip_address and l1.login between l2.login and l2.logout
select distinct l1.account_id from loginfo l1 join loginfo l2 on l2.account_id=l1.account_id and l2.login between l1.login and l1.logout and l2.ip_address != l1.ip_address
select distinct l1.account_id from loginfo l1 join loginfo l2 where l1.account_id=l2.account_id and l1.ip_address!=l2.ip_address and l2.login between l1.login and l1.logout
select distinct l1.account_id from loginfo l1 left join loginfo l2 on l1.account_id = l2.account_id and l1.ip_address <> l2.ip_address where not (l1.login > l2.login or l1.logout < l2.login)
select distinct l1.account_id from loginfo l1, loginfo l2 where l1.account_id = l2.account_id and l1.ip_address <> l2.ip_address and ((l1.logout between l2.login and l2.logout) or (l1.login between l2.login and l2.logout))
select distinct l1.account_id from loginfo l1,loginfo l2 where l1.login between l2.login and l2.logout and l1.ip_address !=l2.ip_address and l1.account_id =l2.account_id
select distinct l2.account_id from LogInfo l1, logInfo l2 where l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and (l2.login between l1.login and l1.logout)
select distinct lgif.account_id from LogInfo lgif join LogInfo lgif2 on lgif.account_id=lgif2.account_id and lgif.ip_address!=lgif2.ip_address and ((lgif.login<=lgif2.login and lgif.logout>=lgif2.login and lgif.logout<=lgif2.logout) or (lgif.login<= lgif2.login and lgif2.logout<=lgif.logout))
select distinct li.account_id from loginfo li inner join loginfo lili on li.account_id = lili.account_id and li.ip_address != lili.ip_address and lili.login between li.login and li.logout
select distinct t.account_id from loginfo t join loginfo tt on t.account_id = tt.account_id and t.logout >= tt.login and t.ip_address != tt.ip_address and t.login <= tt.logout
select distinct t1.account_id from LogInfo t1, LogInfo t2 where t1.account_id = t2.account_id and t1.ip_address <> t2.ip_address and t1.login < t2.login and t1.logout >= t2.login
select distinct t1.account_id from loginfo t1, loginfo t2 where t1.account_id = t2.account_id and t1.ip_address != t2.ip_address and (t2.login between t1.login and t1.logout)
select distinct t2.account_id from LogInfo t1 inner join loginfo t2 where t1.account_id=t2.account_id and t1.ip_address!=t2.ip_address and t1.login<=t2.login and t1.logout>=t2.login
select distinct t2.account_id from loginfo t1 JOIN loginfo t2 ON t1.account_id = t2.account_id and t1.ip_address <> t2.ip_address and t2.login >= t1.login and t2.login <= t1.logout
select distinct t2.account_id from loginfo t1 JOIN loginfo t2 ON t1.account_id = t2.account_id and t1.ip_address <> t2.ip_address and t2.login between t1.login and t1.logout
select distinct x.account_id from loginfo x join loginfo y on x.account_id=y.account_id and x.ip_address<>y.ip_address where x.login between y.login and y.logout
select distinct(l2.account_id) from loginfo l1 left join loginfo l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address where l2.login between l1.login and l1.logout or l2.logout between l1.login and l1.logout
select l1.account_id from loginfo l1 inner join loginfo l2 on l1.account_id = l2.account_id and l1.ip_address <> l2.ip_address where l2.login between l1.login and l1.logout group by l1.account_id
select log1.account_id from LogInfo log1 join LogInfo log2 on log1.account_id = log2.account_id and ((log1.login between log2.login and log2.logout) or (log1.logout between log2.login and log2.logout) or (log2.login between log1.login and log1.logout) or (log2.logout between log1.login and log1.logout) ) and log1.ip_address != log2.ip_address group by log1.account_id having count(log1.ip_address) >= 2
select t1.account_id from LogInfo t1 join LogInfo t2 on t1.account_id = t2.account_id and t1.ip_address != t2.ip_address where t2.login between t1.login and t1.logout group by 1
with a as (select t1.account_id, t1.login as in1, t1.logout as ou1, t2.login as in2, t2.logout as ou2 from loginfo t1 join loginfo t2 on t1.account_id = t2.account_id and t1.ip_address != t2.ip_address) SELECT DISTINCT account_id FROM a WHERE (in1 BETWEEN in2 AND ou2) OR (ou1 BETWEEN in2 AND ou2)
with cte as ( Select l1.*,l2.ip_address 'other_ip',l2.login as 'other_login',l2.logout as 'other_logout' from LogInfo l1 inner join LogInfo l2 on l1.account_id = l2.account_id and l1.ip_address <> l2.ip_address and date(l1.login) = date(l2.login) ) Select distinct account_id from cte where other_login between login and logout
with cte as ( select * , lead(login) over (partition by account_id order by login) as next_login, lead(ip_address) over (partition by account_id order by login) as next_ip from loginfo ) select distinct account_id from cte where logout >= next_login and next_ip <> ip_address
with cte as ( select account_id, ip_address, lead(ip_address,1) over (partition by account_id order by login) as next_ip, login, lead(login,1) over (partition by account_id order by login) as next_login, logout from LogInfo ) select distinct account_id from cte where ip_address <> next_ip and next_login between login and logout
with cte as ( select t1.account_id, t1.ip_address as ip_address1, t2.ip_address as ip_address2, t1.login as login1, t2.login as login2, t1.logout as logout1, t2.logout as logout2 from LogInfo t1 cross join LogInfo t2 on t1.account_id = t2.account_id where ( t1.login != t2.login or t1.logout != t2.logout ) and t1.ip_address < t2.ip_address and !(t1.login > t2.logout or t2.login > t1.logout ) ) select distinct account_id from cte
with cte as (SELECT a.account_id, a.login as login1, a.logout as logout1, b.login as login2, b.logout as logout2 FROM LogInfo a JOIN LogInfo b ON (a.account_id = b.account_id AND a.ip_address != b.ip_address)) SELECT DISTINCT account_id FROM cte WHERE (login1 BETWEEN login2 and logout2) OR (login2 BETWEEN login1 and logout1)
with cte as( select *, case when lead(login)over(partition by account_id order by login) <= logout and lead(ip_address)over(partition by account_id order by login) != ip_address then 1 else 0 end as duplicate_login from loginfo ) select distinct account_id from cte where duplicate_login = 1
with cte_session_overlap as ( select distinct l1.account_id from LogInfo as l1 join LogInfo as l2 on l1.account_id = l2.account_id and l1.ip_address != l2.ip_address and ( l2.login between l1.login and l1.logout or l2.logout between l1.login and l1.logout ) ) select * from cte_session_overlap
with lead_time AS ( SELECT *, LEAD(login,1,0) OVER (PARTITION BY account_id ORDER BY login) next_login, LEAD(ip_address, 1,0) OVER (PARTITION BY account_id ORDER BY login) next_ip FROM loginfo ) SELECT DISTINCT account_id FROM lead_time WHERE ip_address != next_ip AND next_login BETWEEN login AND logout
with logins as ( select account_id, ip_address, lead(ip_address) over (partition by account_id order by login) as next_login_ip, login, lead(login) over (partition by account_id order by login) as next_login, logout from LogInfo) , banned as ( select account_id, case when ip_address != next_login_ip and (next_login between login and logout ) then 'yes' else 'no' end as ban from logins where next_login is not null) select distinct account_id from banned where ban = 'yes' order by 1
with logins as (select account_id, ip_address, login, logout from loginfo) select distinct a.account_id from logins a inner join logins b on (a.account_id = b.account_id and a.ip_address <> b.ip_address and (a.login between b.login and b.logout or b.login between a.login and a.logout))
with logs_pn as ( select account_id, ip_address, login, logout, LAG(logout) OVER(Partition by account_id order by login) as prev_logout, LAG(ip_address) OVER(Partition by account_id order by login) as prev_ip, LEAD(login) OVER(Partition by account_id order by logout) as next_login, LEAD(ip_address) OVER(Partition by account_id order by login) as next_ip from LogInfo) select distinct account_id from logs_pn where (cast(prev_logout as datetime) >= cast(login as datetime) and prev_ip != ip_address) or (cast(logout as datetime) >= cast(next_login as datetime) and ip_address != next_ip)
with netf as(select distinct l1.account_id, l1.ip_address, lead(l1.ip_address) over(partition by l1.account_id order by l1.login) as lead_ip, l1.login, lead(l1.login) over(partition by l1.account_id order by l1.login) as leadlog, l1.logout, lead(l1.logout) over(partition by l1.account_id order by l1.login) as leadlogout from Loginfo l1) select distinct account_id from netf where leadlog between login and logout and ip_address <> lead_ip
with temp as ( select * , lag(logout, 1)over(partition by account_id order by login) as last_out , lag(ip_address, 1)over(partition by account_id order by login) as last_ip from loginfo ) select distinct account_id from temp where login<=last_out and ip_address <> last_ip
with temp as ( select *, row_number() over (partition by account_id order by login ASC) login_rk from LogInfo ), temp1 as ( select t1.account_id, t1.ip_address, t1.login, t1.logout, t2.ip_address as last_ip_address, t2.logout as last_logout from temp t1 left join temp t2 on t1.account_id = t2.account_id and t1.login_rk - 1 = t2.login_rk ) select distinct account_id from temp1 where login <= last_logout and ip_address <> last_ip_address
with temp as ( select A.account_id, sum(if(B.logout >= A.login and B.login <= A.logout, 1, 0)) as two_ip_count from LogInfo A, LogInfo B where A.account_id = B.account_id and A.ip_address != B.ip_address group by A.account_id ) select account_id from temp where two_ip_count > 0
with temp as (select *, lead(login) over(partition by account_id order by login) as nxtlogin, lead(ip_address) over(partition by account_id order by login) as nxtip from loginfo) select distinct account_id from temp where nxtlogin between login and logout and nxtip <> ip_address
with tmp as( select *, lag(logout) over(partition by account_id order by login) as ld, lag(ip_address) over(partition by account_id order by login) as ld_ip from loginfo ) select distinct account_id from tmp where ld >= login and ld_ip != ip_address
with tmp2 as ( select t1.account_id, t1.ip_address, t1.logout, t2.login, case when t1.login < t2.login and t1.logout < t2.login then 'not banned' else 'banned' end as label from LogInfo t1 left join LogInfo t2 on t1.account_id = t2.account_id and t1.ip_address <> t2.ip_address and t1.login < t2.login where t2.login <= t1.logout ) select distinct account_id from tmp2 where label = 'banned'
