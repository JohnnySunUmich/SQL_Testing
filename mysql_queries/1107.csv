SELECT A.min_date login_date,COUNT(A.user_id) user_count FROM(SELECT MIN(activity_date) min_date, user_id FROM Traffic WHERE activity='login' GROUP BY user_id HAVING MIN(activity_date) between DATE_SUB("2019-06-30",INTERVAL 90 DAY) AND "2019-06-30")A GROUP BY A.min_date
SELECT ACTIVITY_DATE AS LOGIN_DATE,COUNT(DISTINCT USER_ID) AS USER_COUNT FROM ( SELECT USER_ID,ACTIVITY_DATE,ROW_NUMBER() OVER(PARTITION BY USER_ID ORDER BY ACTIVITY_DATE) AS NM FROM TRAFFIC WHERE ACTIVITY='login' ) X WHERE NM=1 AND ACTIVITY_DATE BETWEEN '2019-04-01' AND '2019-06-30' GROUP BY ACTIVITY_DATE
SELECT B.first_date as login_date, count(B.user_id) as user_count FROM ( SELECT A.user_id, A.first_date FROM ( SELECT user_id, min(activity_date) as first_date FROM Traffic WHERE activity='login' GROUP BY user_id) AS A WHERE A.first_date >= DATE_SUB("2019-06-30",INTERVAL 90 DAY) ) AS B GROUP BY B.first_date
SELECT DAY AS LOGIN_DATE, COUNT(F.USER_ID) AS USER_COUNT FROM (SELECT T.USER_ID, MIN(T.ACTIVITY_DATE) AS DAY FROM TRAFFIC T WHERE T.ACTIVITY = 'login' GROUP BY T.USER_ID) F WHERE DATEDIFF('2019-06-30', DAY) <= 90 GROUP BY DAY
SELECT T.login_date, COUNT(DISTINCT T.user_id) AS user_count FROM (SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity = 'login' GROUP BY user_id) T WHERE DATEDIFF('2019-06-30', T.login_date) <= 90 GROUP BY T.login_date
SELECT T1.activity_date as login_date, COUNT(DISTINCT first_login.user_id) as user_count FROM Traffic T1 LEFT JOIN (SELECT min(activity_date) first_date, user_id FROM Traffic WHERE activity="login" GROUP BY user_id ) as first_login on first_login.user_id = T1.user_id and first_login.first_date = T1.activity_date GROUP by T1.activity_date HAVING DATEDIFF('2019-06-30',T1.activity_date) <= 90 AND COUNT(DISTINCT first_login.user_id)>0
SELECT a.first_login AS login_date, COUNT(*) AS user_count FROM ( SELECT user_id, min(activity_date) as first_login FROM traffic WHERE activity='login' GROUP BY user_id ) a WHERE datediff('2019-06-30',a.first_login) <= 90 GROUP BY 1 ORDER BY 1
SELECT a.first_login AS login_date, COUNT(*) AS user_count FROM ( SELECT user_id, min(activity_date) as first_login FROM traffic WHERE activity='login' GROUP BY user_id HAVING datediff('2019-06-30',min(activity_date)) <= 90 ) a GROUP BY 1 ORDER BY 1
SELECT a.first_login AS login_date, COUNT(a.user_id) AS user_count FROM (SELECT t.user_id, MIN(t.activity_date) AS first_login FROM traffic t WHERE t.activity="login" AND t.user_id NOT IN (SELECT t1.user_id FROM traffic t1 WHERE t1.activity="login" and datediff("2019-06-30",t1.activity_date)>90) GROUP BY t.user_id) AS a GROUP BY a.first_login ORDER BY a.first_login
SELECT activity_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM (SELECT user_id, RANK() OVER(PARTITION BY user_id ORDER BY activity_date) AS rnk, activity_date FROM Traffic WHERE activity = 'login') T WHERE rnk = 1 AND DATEDIFF('2019-06-30', activity_date) <= 90 GROUP BY login_date ORDER BY login_date
SELECT activity_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM (SELECT user_id, activity_date, MIN(activity_date) OVER (PARTITION BY user_id) AS first_login FROM Traffic WHERE activity = 'login' ) sub WHERE first_login = activity_date AND activity_date >= DATE_ADD('2019-06-30', interval -90 day) GROUP BY activity_date
SELECT activity_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM Traffic WHERE (user_id, activity_date) IN ( SELECT user_id, MIN(activity_date) FROM Traffic WHERE activity = 'login' GROUP BY 1 ) AND DATEDIFF('2019-06-30', activity_date) <= 90 GROUP BY 1
SELECT activity_date AS login_date, COUNT(user_id) AS user_count FROM ( SELECT user_id, activity, activity_date, ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY activity_date) AS rnk FROM traffic WHERE activity = 'login' )x WHERE rnk = 1 AND activity_date <= '2019-06-30' AND activity_date >= date_sub('2019-06-30', INTERVAL 90 DAY) GROUP BY 1 ORDER BY 1
SELECT activity_date AS login_date, COUNT(user_id) AS user_count FROM (SELECT user_id, MIN(activity_date) AS activity_date FROM Traffic t WHERE activity = 'login' GROUP BY user_id) AS t1 WHERE DATEDIFF('2019-06-30',activity_date) <= 90 GROUP BY activity_date ORDER BY activity_date
SELECT activity_date as login_date, COUNT(DISTINCT user_id) AS user_count FROM ( SELECT user_id, activity_date, rank() over(PARTITION BY user_id ORDER BY activity_date) as ranking FROM Traffic WHERE activity = 'login') a WHERE ranking =1 AND datediff('2019-06-30',activity_date) <= 90 GROUP BY activity_date
SELECT activity_date as login_date, count(distinct user_id) as user_count FROM ( SELECT *, rank() over (partition by user_id order by activity_date) as rk FROM traffic WHERE activity = 'login' ) as t WHERE datediff('2019-06-30', activity_date) <=90 AND rk = 1 GROUP BY activity_date ORDER BY activity_date
SELECT activity_date login_date, COUNT(DISTINCT user_id) user_count FROM ( SELECT *, CASE WHEN activity_date=MIN(activity_date) OVER(PARTITION BY user_id) THEN 1 ELSE 0 END first_login from Traffic WHERE activity='login' ) sub1 WHERE activity_date BETWEEN DATE_SUB('2019-06-30',INTERVAL 90 DAY) AND '2019-06-30' AND first_login=1 GROUP BY 1 ORDER BY 1
SELECT c.login_date, COUNT(DISTINCT c.user_id) AS user_count FROM (SELECT DISTINCT user_id, min(activity_date) AS login_date FROM Traffic WHERE 1=1 AND activity = 'login' GROUP BY user_id) c WHERE 1=1 AND c.login_date BETWEEN DATE_ADD("2019-06-30", INTERVAL -90 DAY) AND '2019-06-30' GROUP BY 1 ORDER BY 1
SELECT date_min AS login_date, COUNT(DISTINCT user_id) AS user_count FROM (SELECT user_id, MIN(activity_date) AS date_min FROM Traffic WHERE activity = "login" GROUP BY user_id) AS sub WHERE DATEDIFF('2019-06-30', date_min) <= 90 GROUP BY sub.date_min
SELECT first_activity_date AS login_date, COUNT(first_activity_date) AS user_count FROM ( SELECT T.user_id, MIN(T.activity_date) AS first_activity_date FROM Traffic T WHERE T.activity = 'login' GROUP BY T.user_id ) first_activity_dates GROUP BY first_activity_date HAVING login_date BETWEEN DATE_SUB('2019-06-30', INTERVAL 90 DAY) AND DATE_ADD('2019-06-30', INTERVAL 90 DAY)
SELECT first_log AS "login_date", COUNT(*) AS user_count FROM ( SELECT user_id, MIN(activity_date) AS first_log FROM Traffic WHERE activity = "login" GROUP BY user_id ) t WHERE DATEDIFF("2019-06-30", first_log) <= 90 GROUP BY login_date
SELECT first_login AS login_date, COUNT(DISTINCT user_id) AS user_count FROM ( SELECT *, MIN(activity_date) OVER (PARTITION BY user_id) AS first_login FROM Traffic WHERE activity='login') tb1 WHERE DATEDIFF('2019-06-30',first_login)<=90 AND activity='login' GROUP BY first_login
SELECT first_login login_date, COUNT(user_id) AS user_count FROM ( SELECT user_id, MIN(activity_date) AS first_login FROM Traffic WHERE activity = 'login' GROUP BY user_id ) t WHERE t.first_login BETWEEN CAST('2019-06-30' AS date) - INTERVAL 90 day AND CAST('2019-06-30' AS date) GROUP BY first_login ORDER BY first_login
SELECT firstday AS login_date, COUNT(user_id) AS user_count FROM ( SELECT user_id, MIN(activity_date) AS firstday FROM Traffic WHERE activity='login' GROUP BY user_id) AS t WHERE DATEDIFF('2019-06-30',firstday)<=90 GROUP BY firstday
SELECT firstlogin login_date, COUNT(user_id) user_count FROM ( SELECT user_id, MIN(activity_date) firstlogin FROM Traffic WHERE activity = 'login' GROUP BY user_id HAVING firstlogin >= DATE_SUB('2019-06-30', INTERVAL 90 DAY) ) a GROUP BY firstlogin ORDER BY 1
SELECT login_date ,COUNT(user_id) AS user_count FROM (SELECT user_id ,MIN(activity_date) AS login_date FROM Traffic WHERE activity = 'login' GROUP BY 1) a WHERE login_date BETWEEN DATE_ADD('2019-06-30',INTERVAL -90 DAY) AND '2019-06-30' GROUP BY 1
SELECT login_date, COUNT(*) as user_count FROM (SELECT user_id, MIN(activity_date) as login_date FROM Traffic WHERE activity='login' GROUP BY user_id)t WHERE t.login_date BETWEEN DATE_SUB('2019-06-30', interval 90 day) AND '2019-06-30' GROUP BY t.login_date
SELECT login_date, COUNT(1) user_count FROM (SELECT user_id, MIN(activity_date) login_date FROM Traffic WHERE activity = 'login' GROUP BY user_id ) t WHERE login_date BETWEEN DATE_ADD('2019-06-30', INTERVAL -90 DAY) AND '2019-06-30' GROUP BY login_date
SELECT login_date, COUNT(DISTINCT user_id) AS user_count FROM (SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity = 'login' GROUP BY user_id) x WHERE DATEDIFF('2019-06-30', login_date) <= 90 GROUP BY login_date
SELECT login_date, COUNT(user_id) AS user_count FROM (SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity = 'login' GROUP BY user_id) t WHERE DATEDIFF('2019-06-30', login_date) <= 90 GROUP BY login_date
SELECT login_date, COUNT(user_id) AS user_count FROM (SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity='login' GROUP BY user_id) a WHERE datediff('2019-06-30', login_date) <= 90 GROUP BY login_date
SELECT login_date, COUNT(user_id) user_count FROM (SELECT user_id, MIN(activity_date) as login_date FROM Traffic WHERE activity='login' GROUP BY user_id) as t WHERE DATEDIFF('2019-06-30', login_date) <= 90 GROUP BY login_date
SELECT login_date, count(distinct user_id) AS user_count FROM (SELECT user_id, min(activity_date) over(partition by user_id) AS login_date FROM Traffic WHERE activity='login') t WHERE datediff('2019-06-30', login_date)<=90 GROUP BY 1
SELECT login_date, count(user_id) as user_count FROM (SELECT MIN(activity_date) as login_date, user_id FROM Traffic WHERE activity='login' GROUP BY user_id) AS summary WHERE login_date >= (SELECT DATE_SUB("2019-06-30", INTERVAL 90 DAY)) GROUP BY login_date
SELECT login_date, count(user_id) user_count FROM ( SELECT min(t.activity_date) login_date, t.user_id FROM Traffic t WHERE activity like 'login' GROUP BY t.user_id ) t1 WHERE t1.login_date BETWEEN DATE_ADD('2019-06-30',INTERVAL -90 DAY) AND '2019-06-30' GROUP BY login_date
SELECT min_date AS login_date, COUNT(*) AS user_count FROM ( SELECT user_id, MIN(activity_date) AS min_date FROM traffic WHERE activity = 'login' GROUP BY 1 )x WHERE min_date <='2019-06-30' AND min_date >= date_sub('2019-06-30', INTERVAL 90 DAY) GROUP BY 1 ORDER BY 1
SELECT mindate as login_date, COUNT(x.user_id) as user_count FROM ( SELECT user_id, MIN(activity_date) as mindate FROM Traffic WHERE activity = 'login' GROUP BY user_id ) as x WHERE datediff('2019-06-30', mindate) <= 90 GROUP BY mindate
SELECT subquery.activity_date AS login_date, COUNT(subquery.user_id) AS user_count FROM ( SELECT DISTINCT(r.user_id) AS user_id, r.activity AS activity, MIN(r.activity_date) AS activity_date FROM Traffic r WHERE r.activity = "login" GROUP BY user_id ) subquery WHERE subquery.activity_date BETWEEN date_add('2019-06-30', interval -90 day) and '2019-06-30' GROUP BY login_date
SELECT t.activity_date as login_date, count(distinct t.user_id) as user_count FROM (SELECT activity_date, user_id,activity, rank()over(partition by user_id order by activity_date) as rnk from Traffic where activity = 'login') as t WHERE datediff('2019-06-30',t.activity_date) <= 90 and rnk=1 GROUP BY login_date ORDER BY login_date
SELECT temp.first_login_date AS login_date, COUNT(DISTINCT temp.user_id) AS user_count FROM( SELECT user_id, MIN(activity_date) AS first_login_date FROM Traffic WHERE activity = 'login' GROUP BY user_id HAVING MIN(activity_date) >= DATE_SUB('2019-06-30', INTERVAL 90 DAY) AND MIN(activity_date) <= '2019-06-30' )temp GROUP BY login_date
SELECT user_login_details.login_date, COUNT(*) AS user_count FROM ( SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity='login' GROUP BY user_id ) AS user_login_details WHERE DATEDIFF(user_login_details.login_date,'2019-06-30') BETWEEN -90 AND 0 GROUP BY user_login_details.login_date
SELECT* FROM (SELECT activity_date AS login_date, COUNT(user_id) AS user_count FROM (SELECT user_id, min(activity_date) as activity_date FROM Traffic WHERE activity = 'login' GROUP BY user_id)t GROUP BY activity_date)S WHERE DATEDIFF('2019-06-30',login_date) <=90
Select First_Login_date as 'login_date' , count(user_id) as user_count FROM (Select user_id,MIN(activity_date) as First_Login_date from traffic where activity = 'Login' group by user_id having First_Login_date >= ADDDATE(DATE("2019-06-30") , Interval -90 DAY) ) T Group by First_Login_date
Select activity_date as login_date, count(distinct user_id) as user_count from ( Select min(activity_date) as activity_date, user_id from Traffic where activity = "login" group by user_id ) ad where activity_date between DATE_ADD("2019-06-30", interval -90 DAY) and "2019-06-30" and user_id not in (Select user_id from Traffic where activity_date < DATE_ADD("2019-06-30", interval -90 DAY) and activity = "login") group by activity_date
Select login_date, count(user_id) as user_count from ( select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id ) t where datediff('2019-06-30', login_date) <= 90 group by login_date
WITH CTE AS ( SELECT * FROM Traffic WHERE activity = 'login' ), CTE1 AS ( SELECT *, rank()OVER(PARTITION BY user_id ORDER BY activity_date) AS rnk FROM CTE ), CTE2 AS ( SELECT * FROM CTE1 WHERE rnk = 1 ) SELECT activity_date As login_date, COUNT(DISTINCT user_id) AS user_count FROM CTE2 WHERE activity_date >= DATE_SUB('2019-06-30', INTERVAL 90 DAY) GROUP BY 1
WITH CTE AS (SELECT user_id, MIN(activity_date) AS first_login FROM Traffic WHERE activity = 'login' GROUP BY user_id) SELECT activity_date AS login_date, COUNT(DISTINCT a.user_id) AS user_count FROM Traffic a JOIN CTE b ON a.user_id = b.user_id AND a.activity_date = b.first_login WHERE DATEDIFF('2019-06-30', a.activity_date) BETWEEN 0 AND 90 GROUP BY 1 ORDER BY 1
WITH CTE1 AS ( SELECT DISTINCT user_id, activity, activity_date FROM Traffic WHERE activity = 'login' ), CTE2 AS ( SELECT user_id, activity_date, RANK() OVER (PARTITION BY user_id ORDER BY activity_date) AS rks FROM CTE1) SELECT activity_date AS login_date, COUNT(*) AS user_count FROM CTE2 WHERE rks = 1 AND activity_date<='2019-06-30' AND DATEDIFF('2019-06-30', activity_date)<=90 GROUP BY activity_date
WITH FIRST_LOGIN AS( SELECT USER_ID, ACTIVITY_DATE AS LOGIN_DATE, RANK() OVER(PARTITION BY USER_ID ORDER BY ACTIVITY_DATE) AS RN FROM TRAFFIC WHERE ACTIVITY ='login' ) SELECT LOGIN_DATE, COUNT(DISTINCT USER_ID ) AS USER_COUNT FROM FIRST_LOGIN WHERE DATEDIFF("2019-06-30",LOGIN_DATE)<=90 AND RN=1 GROUP BY LOGIN_DATE HAVING COUNT(DISTINCT USER_ID )>0
WITH FST AS ( SELECT T.USER_ID, T.ACTIVITY, MIN(T.ACTIVITY_DATE) AS ACTIVITY_DATE FROM TRAFFIC T WHERE T.ACTIVITY = 'login' GROUP BY T.USER_ID) SELECT FST.ACTIVITY_DATE AS LOGIN_DATE, COUNT(FST.USER_ID) AS USER_COUNT FROM FST WHERE DATEDIFF('2019-06-30', FST.ACTIVITY_DATE) <= 90 GROUP BY FST.ACTIVITY_DATE ORDER BY 1
WITH FirstLogin AS (SELECT user_id ,MIN(activity_date) AS 1stLogin FROM Traffic WHERE activity = 'login' GROUP BY user_id) SELECT 1stLogin AS login_date ,COUNT(user_id) AS user_count FROM FirstLogin WHERE 1stLogin BETWEEN DATE_SUB('2019-06-30',INTERVAL 90 DAY) AND '2019-06-30' GROUP BY 1stLogin
WITH First_login AS (SELECT user_id, MIN(activity_date) AS first_time FROM Traffic WHERE activity = 'login' GROUP BY user_id) SELECT first_time AS login_date, COUNT(*) AS user_count FROM First_login WHERE first_time BETWEEN SUBDATE('2019-06-30', INTERVAL 90 DAY) AND '2019-06-30' GROUP BY first_time
WITH HI AS ( SELECT user_id, MIN(activity_date) AS frist FROM Traffic WHERE activity ='login' GROUP BY user_id ) SELECT frist AS login_date, COUNT(user_id) AS user_count FROM HI WHERE DATEDIFF('2019-06-30',frist)<=90 GROUP BY frist
WITH MIN_DATE_TABLE AS(SELECT *, MIN(activity_date) OVER(PARTITION BY user_id) AS MIN_DATE FROM Traffic WHERE activity = 'login' ) SELECT activity_date AS login_date, COUNT(DISTINCT(user_id)) AS user_count FROM MIN_DATE_TABLE WHERE activity_date = MIN_DATE AND ABS(DATEDIFF(activity_date, '2019-06-30')) <= 90 GROUP BY activity_date
WITH S0 AS (SELECT DISTINCT(user_id) AS user_id FROM Traffic WHERE activity_date < DATE_SUB('2019-06-30', INTERVAL 90 DAY) AND activity = 'login'), S1 AS (SELECT user_id, MIN(activity_date) AS activity_date FROM Traffic WHERE activity = 'login' AND activity_date >= DATE_SUB('2019-06-30', INTERVAL 90 DAY) AND user_id NOT IN (SELECT user_id FROM S0) GROUP BY user_id) SELECT activity_date AS login_date, COUNT(user_id) AS user_count FROM S1 GROUP BY activity_date ORDER BY login_date ASC
WITH TEMP AS ( SELECT user_id, min(activity_date) as firstlogin FROM Traffic WHERE activity = 'login' GROUP BY 1 ) SELECT firstlogin AS login_date, COUNT(user_id) AS user_count FROM ( SELECT user_id, firstlogin FROM TEMP WHERE firstlogin BETWEEN date_add('2019-06-30', INTERVAL -90 DAY) AND '2019-06-30' ) b GROUP BY 1 ORDER BY 1
WITH base_table AS ( SELECT user_id, MIN(activity_date) AS first_login_date FROM Traffic WHERE activity = "login" GROUP BY 1 ) SELECT first_login_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM base_table WHERE first_login_date BETWEEN DATE_SUB("2019-06-30", INTERVAL 90 DAY) AND "2019-06-30" GROUP BY 1
WITH cte AS( SELECT user_id, MIN(activity_date) AS login_date FROM traffic WHERE activity = 'login' GROUP BY user_id ) SELECT login_date, COUNT(user_id) AS user_count FROM cte WHERE datediff('2019-06-30',login_date) <= 90 GROUP BY login_date
WITH cte AS( SELECT user_id, activity, MIN(activity_date) OVER(PARTITION BY user_id, activity) as login_date FROM traffic WHERE activity = "login" ) SELECT login_date, COUNT(DISTINCT user_id) as user_count FROM cte GROUP BY login_date HAVING login_date >= DATE_SUB('2019-06-30', INTERVAL 90 DAY)
WITH cte_date AS ( SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity = 'login' GROUP BY user_id ) SELECT login_date, COUNT(DISTINCT user_id) AS user_count FROM cte_date WHERE login_date BETWEEN '2019-04-01' AND '2019-06-30' GROUP BY login_date ORDER BY login_date
WITH first_login AS ( SELECT MIN(activity_date) AS login_date, user_id FROM Traffic WHERE activity = "login" GROUP BY user_id HAVING DATEDIFF("2019-06-30", login_date) <= 90 ) SELECT COUNT(DISTINCT user_id) AS user_count, login_date FROM first_login GROUP BY login_date
WITH firstlogin AS ( SELECT user_id, activity, min(activity_date) AS login_date FROM traffic WHERE activity = 'login' GROUP BY user_id ) SELECT login_date, COUNT(DISTINCT(user_id)) AS user_count FROM firstlogin WHERE DATEDIFF('2019-06-30', login_date) <= 90 GROUP BY login_date
WITH logindate AS (SELECT user_id,MIN(activity_date) mdate FROM Traffic WHERE activity='login' GROUP BY 1) SELECT mdate AS login_date , COUNT( user_id) AS user_count FROM logindate WHERE DATEDIFF('2019-06-30',mdate)<=90 GROUP BY 1
WITH logins_only AS ( SELECT DISTINCT user_id , activity , activity_date FROM Traffic WHERE activity = 'login' ORDER BY activity_date ASC ) , f_logins AS ( SELECT user_id , MIN(activity_date) AS f_login FROM logins_only GROUP BY user_id ) SELECT f_login AS login_date , COUNT(user_id) AS user_count FROM f_logins WHERE f_login >= DATE_ADD('2019-06-30', INTERVAL -90 DAY) GROUP BY f_login
WITH main AS ( SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity = "login" GROUP BY user_id ) SELECT login_date, SUM(CASE WHEN DATEDIFF("2019-06-30",login_date)<=90 THEN 1 ELSE 0 END) AS user_count FROM main GROUP BY login_date HAVING user_count > 0
WITH r AS( SELECT * FROM Traffic WHERE activity = "login" ) SELECT r2.activity_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM ( SELECT r.user_id, r.activity_date, RANK() OVER (PARTITION BY r.user_id ORDER BY activity_date ASC) AS rk FROM r ) r2 WHERE r2.rk = 1 AND r2.activity_date >= DATE_SUB("2019-06-30",INTERVAL 90 DAY) GROUP BY 1 ORDER BY 1
WITH t AS ( SELECT user_id, MIN(activity_date) 1st_d FROM traffic WHERE activity='login' GROUP BY user_id ) SELECT 1st_d login_date, COUNT(*) user_count FROM t GROUP BY 1st_d HAVING 1st_d BETWEEN ('2019-06-30'- INTERVAL 90 DAY) AND '2019-06-30'
WITH t1 AS (SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity = 'login' GROUP BY user_id) SELECT login_date, COUNT(user_id) AS user_count FROM t1 WHERE datediff('2019-06-30',login_date) <= 90 GROUP BY login_date
WITH table1 AS( SELECT user_id, activity, activity_date, ROW_NUMBER()OVER(PARTITION BY user_id ORDER BY activity_date ASC) AS rn FROM Traffic WHERE activity='login' ) SELECT activity_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM table1 WHERE rn=1 AND activity_date >= DATE_SUB('2019-06-30', INTERVAL 90 DAY) GROUP BY login_date
WITH table1 AS( SELECT user_id, activity, activity_date, ROW_NUMBER()OVER(PARTITION BY user_id ORDER BY activity_date ASC) AS rn FROM Traffic WHERE activity='login' ) SELECT activity_date AS login_date, COUNT(user_id) AS user_count FROM table1 WHERE rn=1 AND activity_date >= DATE_SUB('2019-06-30', INTERVAL 90 DAY) GROUP BY login_date
WITH temp AS ( SELECT user_id, MIN(activity_date) AS login_date FROM traffic WHERE activity = 'login' GROUP BY user_id) SELECT login_date, COUNT(user_id) AS user_count FROM temp GROUP BY login_date HAVING login_date >= '2019-06-30' - INTERVAL 90 DAY
WITH temp AS ( SELECT user_id, MIN(activity_date) as login_date FROM Traffic WHERE activity = 'login' GROUP BY user_id) SELECT login_date, COUNT(user_id) AS user_count FROM temp GROUP BY login_date HAVING login_date >= DATE_SUB('2019-06-30', INTERVAL 90 DAY)
WITH temp AS ( SELECT user_id, activity_date, RANK() OVER(PARTITION BY user_id ORDER BY activity_date) AS rk FROM Traffic WHERE activity = 'login' ) SELECT activity_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM temp WHERE rk = 1 AND activity_date BETWEEN DATE_SUB('2019-06-30', INTERVAL 90 DAY) AND '2019-06-30' GROUP BY activity_date
WITH temp AS (SELECT user_id, MIN(activity_date) AS first_date FROM Traffic WHERE activity = 'login' GROUP BY user_id) SELECT first_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM temp WHERE DATEDIFF('2019-06-30',first_date) <= 90 GROUP BY 1
WITH temp as (SELECT *, RANK() OVER(PARTITION BY user_id ORDER BY activity_date ASC) as r FROM Traffic WHERE activity = 'login') SELECT activity_date as login_date, COUNT(DISTINCT user_id) as user_count FROM temp t WHERE r = 1 AND DATEDIFF('2019-06-30', activity_date) <= 90 GROUP BY activity_date
WITH tmp AS (SELECT user_id, MIN(activity_date) AS login_date FROM Traffic WHERE activity = "login" GROUP BY user_id) SELECT login_date, COUNT(user_id) AS user_count FROM tmp WHERE login_date BETWEEN '2019-04-01' AND '2019-06-30' GROUP BY login_date HAVING user_count > 0
WITH win AS ( SELECT user_id, activity_date, DENSE_RANK() OVER (PARTITION BY user_id ORDER BY activity_date) AS rk FROM traffic WHERE activity = 'login' ) SELECT activity_date AS login_date, COUNT(DISTINCT user_id) AS user_count FROM win WHERE rk = 1 AND activity_date >= SUBDATE('2019-06-30', 90) GROUP BY 1
With T1 As ( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id) select login_date, count(user_id) as user_count from T1 where datediff('2019-06-30', login_date) <= 90 group by login_date
With first as ( Select user_id, Ifnull(min(activity_date),0) as logi from Traffic where activity = 'login' and activity_date > datediff('2019-06-30',activity_date) <= 90 group by 1 ) Select logi as login_date, count(distinct(user_id)) as user_count from first where datediff('2019-06-30',logi)<= 90 group by 1 order by 1 asc
select a.activity_date as login_date, count(distinct a.user_id) as user_count from traffic a inner join ( select user_id, min(activity_date) as first_login_date from traffic where activity = 'login' group by user_id ) b on a.activity_date = b.first_login_date and a.user_id = b.user_id where a.activity_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by 1 order by 1
select a.activity_date login_date,count(distinct a.user_id) user_count from traffic a join ( select user_id,min(activity_date) first_date from traffic where activity='login' group by 1)b on a.user_id = b.user_id and a.activity_date = b.first_date where a.activity_date >= date_sub('2019-06-30',interval 90 day) and activity_date <= '2019-06-30' and a.activity='login' group by 1
select a.activity_date login_date,count(distinct a.user_id) user_count from traffic a join ( select user_id,min(activity_date) first_date from traffic where activity='login' group by 1)b on a.user_id = b.user_id and a.activity_date = b.first_date where a.activity_date >= date_sub('2019-06-30',interval 90 day) and activity_date <= '2019-06-30' group by 1
select a.date as login_date, count(a.user_id) as user_count from ( select user_id, min(activity_date) as date from traffic where activity = 'login' group by user_id having datediff('2019-06-30', min(activity_date)) <= 90 ) a group by a.date
select a.date as login_date, count(a.user_id) as user_count from (select user_id, min(activity_date) as date from traffic where activity = 'login' group by user_id having datediff('2019-06-30', min(activity_date)) <= 90) a group by a.date
select a.login_date, count(distinct a.user_id) as user_count from (select distinct user_id, min(activity_date) as login_date from traffic where activity='login' group by 1 having datediff('2019-06-30', login_date)<=90) a group by 1
select activity_Date as login_date ,count(distinct user_id) as user_count from (select user_id ,activity_date, row_number() over (partition by user_id order by activity_date) rn from traffic where activity='login' order by user_id)a where rn=1 and (activity_date between date_add('2019-06-30',interval -90 day) and '2019-06-30') group by activity_date
select activity_date as 'login_date', count(distinct user_id) as 'user_count' from ( select user_id, activity_date , dense_rank() over(partition by user_id order by activity_date) as 'rk' from traffic where activity = 'login') as A where activity_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' and rk = 1 group by activity_date
select activity_date as login_date, count(distinct user_id) as user_count from ( select *, rank()over(partition by user_id order by activity_date) as login_rank from traffic where activity="login")t where login_rank = 1 and datediff('2019-06-30',activity_date)<=90 group by 1
select activity_date as login_date, count(distinct user_id) as user_count from ( select activity_date,user_id, rank() over (partition by user_id order by activity_date) as r from traffic where activity = 'login') t where r = 1 and datediff('2019-06-30',activity_date) <=90 group by activity_date
select activity_date as login_date, count(distinct user_id) as user_count from ( select user_id, activity_date, rank() over (partition by user_id order by activity_date) as first_login from Traffic where activity = 'login' ) x where first_login = 1 and activity_date >= date_add('2019-06-30',INTERVAL -90 DAY) group by activity_date
select activity_date as login_date, count(distinct user_id) as user_count from ( select user_id, activity_date, rank() over(partition by user_id order by activity_date) as rn from Traffic where activity = 'login' ) a where rn=1 and activity_date between DATE_ADD("2019-06-30", INTERVAL -90 DAY) and '2019-06-30' group by activity_date
select activity_date as login_date, count(distinct user_id) as user_count from (select *, dense_rank() over (partition by user_id order by activity_date asc) as num from traffic where activity = 'login' ) a where num = 1 and activity_date between date_sub('2019-06-30', interval 90 day) and '2019-06-30' and activity = 'login' group by login_date
select activity_date as login_date, count(distinct user_id) as user_count from (select user_id, activity_date, rank() over (partition by user_id order by activity_date asc) as rnk from Traffic where activity = "login") a where rnk = 1 and activity_date >= date_sub("2019-06-30", interval 90 day) group by 1
select activity_date as login_date, count(distinct user_id) as user_count from (select user_id, activity_date, rank() over(partition by user_id order by activity_date) as rk from traffic where activity = 'login') t where rk=1 and activity_date >= date_sub('2019-06-30', interval 90 day) group by activity_date order by login_date
select activity_date as login_date, count(distinct user_id) as user_count from (select user_id, activity_date, row_number() over(partition by user_id order by activity_date) as rnk from Traffic where activity = 'login') tmp where rnk = 1 and activity_date between date_sub('2019-06-30', interval 90 day) and '2019-06-30' group by activity_date
select activity_date as login_date, count(distinct user_id) as user_count from (select user_id, min(activity_date) as activity_date from Traffic where activity = "login" group by user_id) t where date_add(activity_date, interval 90 day) >= "2019-06-30" group by activity_date
select activity_date as login_date, count(distinct user_id) as user_count from(select user_id,activity_date, dense_rank() over(partition by user_id order by activity_date asc)rnk from traffic where activity="login")m where m.rnk=1 and activity_date BETWEEN DATE_SUB('2019-06-30', interval 90 day) AND '2019-06-30' group by activity_date
select activity_date as login_date, count(distinct(user_id)) as user_count from (select *, DENSE_RANK() over (partition by user_id order by activity_date) as rnk from traffic where activity = 'login') a where rnk = 1 and activity_date >= date_sub('2019-06-30', INTERVAL 90 DAY) group by activity_date order by activity_date
select activity_date as login_date, count(distinct(user_id)) as user_count from (select *, DENSE_RANK() over (partition by user_id order by activity_date) as rnk from traffic where activity = 'login') a where rnk = 1 and activity_date >=date_sub('2019-06-30',interval 90 day) group by activity_date order by activity_date
select activity_date as login_date, count(user_id) as user_count from ( select user_id, min(activity_date) as activity_date from Traffic where activity = 'login' group by user_id) a where datediff('2019-06-30', activity_date)<=90 group by activity_date
select activity_date as login_date, count(user_id) as user_count from (select user_id, min(activity_date) as activity_date from Traffic where activity = 'login' group by 1) a where DATEDIFF('2019-06-30',activity_date)<=90 group by 1
select activity_date as login_date, count(user_id) as user_count from( select user_id, min(activity_date) as activity_date from traffic where activity='login' group by user_id) t group by 1 having datediff("2019-06-30", login_date)<=90
select activity_date as login_date,count(distinct if(activity='login',user_id,NULL)) as user_count from ( select *, rank() over(partition by user_id order by activity_date) as rn from traffic where activity='login' ) temp where activity_date between DATE_SUB('2019-06-30',INTERVAL 90 DAY) and '2019-06-30' and rn=1 group by 1
select activity_date as login_date,count(distinct user_id) as user_count from ( select *,rank() over(partition by user_id order by activity_date) as rnum from Traffic where activity='login' ) tbl where activity_date between '2019-04-01' and '2019-06-30' and rnum=1 group by 1 order by 1
select activity_date as login_date,count(distinct user_id) as user_count from (select *, row_number() over(partition by user_id order by activity_date) as rn from (select * from traffic where activity = 'login') y ) z where rn = 1 and activity_date between '2019-04-01' and '2019-06-30' group by activity_date
select activity_date login_date , count(user_id) user_count from ( select user_id, min(activity_date)activity_date from Traffic where activity = 'login' group by user_id ) a where (activity_date >= date_add('2019-06-30', interval -90 day) and activity_date <= '2019-06-30') and user_id not in (select distinct user_id from Traffic where activity_date < date_add('2019-06-30', interval -90 day)and activity = 'login') group by activity_date order by 1
select activity_date login_date,count(distinct user_id) user_count from (select user_id,activity_date, dense_rank()over(partition by user_id order by activity_date) as rnk from Traffic where activity='login') m where activity_date >= '2019-06-30' - INterval 90 day and rnk=1 group by 1
select date login_date,count(*) user_count from (select *,min(activity_date) date from traffic where activity='login' group by user_id) t where date >= ('2019-06-30'- INTERVAL 90 DAY) group by 1 order by 1
select dates as login_date, count(user_id) as user_count from ( select user_id, min(activity_date) as dates from traffic where activity = 'login' group by user_id ) asd where dates >= DATE_SUB('2019-06-30', INTERVAL 90 DAY) group by dates
select distinct a.activity_date as login_date, count(distinct a.user_id) as user_count from (select *, rank() over(partition by user_id order by activity_date) as rnk from Traffic where activity="login") a where rnk=1 and a.activity_date>= date_sub("2019-06-30", interval 90 day) group by a.activity_date
select distinct a.activity_date as login_date, count(distinct b.user_id) as user_count from ( select distinct a.activity_date from traffic a where a.activity_date between date_sub('2019-06-30', interval 90 day) and '2019-06-30' ) a join ( select distinct a.user_id, min(a.activity_date) as min_date from traffic a where a.activity = 'login' group by a.user_id ) b on a.activity_date = b.min_date group by login_date
select distinct activity_date as login_date, count(distinct user_id) as user_count from ( select distinct user_id, activity_date, row_number() over (partition by user_id order by activity_date) rn from Traffic where activity = 'login' ) T where rn = 1 and datediff('2019-06-30' , activity_date) <= 90 group by activity_date
select earlest_date as login_date , count(distinct user_id) as user_count from ( select distinct user_id , min(activity_date) as earlest_date from Traffic where activity = 'login' group by user_id order by user_id ) a where datediff('2019-06-30', earlest_date) <= 90 group by 1 order by 1
select f_log as login_date, count(user_id) as user_count from (select user_id, min(activity_date) as f_log from Traffic where activity = 'login' group by user_id having f_log >= date_add('2019-06-30', interval -90 day) ) temp group by login_date
select first_act as login_date, count(distinct user_id) as user_count from (select user_id, min(activity_date) as first_act from traffic where activity="login" group by 1) a where first_act between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by 1
select first_login as login_date , count(user_id) as user_count from (select user_id , min(activity_date) as first_login from traffic where activity = 'login' group by user_id) temp where datediff('2019-06-30', first_login) <= 90 group by first_login order by first_login
select first_login as login_date, count(*) as user_count from ( select user_id, min(activity_date) as first_login from traffic where activity = 'login' group by 1 order by 2) s where first_login >= date_sub(date('2019-06-30'), INTERVAL 90 Day) group by 1
select first_login as login_date, count(user_id) as user_count from (select user_id, min(activity_date) as first_login from Traffic where activity = 'login' group by user_id) as fl where datediff('2019-06-30',first_login)<=90 group by login_date
select first_login login_date, count(user_id) user_count from ( select user_id, min(activity_date) as first_login from Traffic where activity = 'login' group by user_id having datediff('2019-06-30', first_login) <= 90 ) tmp group by login_date order by login_date
select first_login_date as login_date, count(*) as user_count from (select user_id, min(activity_date) as first_login_date from Traffic where activity = "login" group by 1 ) as t2 where first_login_date between (date("2019-06-30") - interval 90 day) and date("2019-06-30") group by 1
select first_login_date as login_date, count(user_id) as user_count from (select user_id, min(activity_date) as first_login_date from Traffic where activity = 'login' group by user_id ) a where first_login_date >= date_sub('2019-06-30', interval 90 day) and first_login_date <= '2019-06-30' group by first_login_date
select i.activity_date as login_date, count(i.user_id) as user_count from (select g.* from (select distinct p.user_id, min(p.activity_date) as activity_date from Traffic p where p.activity = 'login' group by p.user_id) g where date_sub('2019-06-30', Interval 90 Day) <= g.activity_date) i group by i.activity_date order by i.activity_date asc
select login as login_date, count(user_id) as user_count from (select user_id, min(activity_date) as login from (select * from Traffic where activity = 'login') temp group by user_id) as temp group by login having datediff('2019-06-30', login) <= 90
select login_date , count(distinct user_id) as user_count from (select user_id , min(activity_date) as login_date from traffic where activity = 'login' group by 1 having login_date >= '2019-06-30' - interval 90 day) as temp group by 1
select login_date, count( user_id)as user_count from( select user_id , min(activity_date) as login_date from traffic where activity = 'login' group by user_id having datediff('2019-06-30',login_date)<=90)t group by login_date
select login_date, count(*) as user_count from ( select user_id, min(activity_date) as login_date from Traffic where activity='login' group by 1 ) x where datediff('2019-06-30', login_date) <= 90 group by 1
select login_date, count(*) as user_count from ( select user_id, min(activity_date) login_date from traffic where activity='login' group by 1 ) t1 where abs(datediff(t1.login_date,'2019-06-30')) between 0 and 90 group by 1
select login_date, count(*) as user_count from (select min(activity_date) as login_date, user_id from Traffic where activity = 'login' group by user_id having login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30') aaa group by login_date
select login_date, count(*) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) as tab where login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by login_date
select login_date, count(*) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) t where t.login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by login_date
select login_date, count(*) user_count from (select min(activity_date) login_date from traffic where activity = 'login' group by user_id) t where datediff('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(*) user_count from (select user_id, min(activity_date) login_date from traffic where activity = 'login' group by user_id) a where abs(datediff(login_date,'2019-06-30')) between 0 and 90 group by login_date
select login_date, count(1) as user_count from ( select user_id, min(activity_date) as login_date from traffic where activity='login' group by 1 ) f where login_date between date_add('2019-06-30', interval - 90 day) and '2019-06-30' group by 1
select login_date, count(1) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id ) as t where t.login_date between DATE_ADD('2019-06-30', INTERVAL -90 DAY) and '2019-06-30' group by t.login_date
select login_date, count(1) user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) a where login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by login_date
select login_date, count(1) user_count from (select user_id, min(activity_date) login_date from traffic where activity = 'login' group by user_id) a where login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by login_date
select login_date, count(1) user_count from( select user_id, min(activity_date) login_date from Traffic where activity = 'login' group by user_id) t where datediff('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(distinct user_id) as user_count from ( select user_id, min(activity_date) as login_date from Traffic t where activity = 'login' group by user_id ) tmp where datediff('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(distinct user_id) as user_count from ( select user_id, min(activity_date) as login_date from Traffic where activity ='login' group by user_id ) A where datediff('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(distinct user_id) as user_count from ( select user_id, min(activity_date) over (partition by user_id) as login_date from Traffic where activity = 'login') temp where login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by login_date
select login_date, count(distinct user_id) as user_count from (select activity_date as login_date,user_id, row_number() over (partition by user_id order by activity_date) as RowNo from Traffic where activity="login")temp where RowNo = 1 and datediff("2019-06-30",login_date)<= 90 group by 1
select login_date, count(distinct user_id) as user_count from (select user_id, activity, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) firstlogin where datediff('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(distinct user_id) as user_count from (select user_id, min(activity_date )as login_date from Traffic where activity = 'login' group by user_id ) A where login_date between DATE_SUB('2019-06-30', INTERVAL 90 DAY) and DATE_ADD('2019-06-30', INTERVAL 90 DAY) group by login_date
select login_date, count(distinct user_id) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = "login" group by user_id) t where date_add(login_date, interval 90 day) >= "2019-06-30" group by login_date
select login_date, count(distinct user_id) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) as t where DATEDIFF('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(distinct user_id) as user_count from( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by 1 ) as a where login_date >= date_add('2019-06-30', interval -90 day) group by 1 ORDER BY 1
select login_date, count(distinct user_id) user_count from ( select min(activity_date) login_date, user_id from traffic where activity = 'login' group by user_id having min(activity_date) between "2019-04-01" and "2019-06-30" ) a group by login_date order by login_date
select login_date, count(user_id) as user_count from ( select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id )t where datediff('2019-06-30', login_date) <=90 group by login_date
select login_date, count(user_id) as user_count from ( select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) t where datediff('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(user_id) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by 1) as cte where login_date between date_add('2019-06-30', interval - 90 day) and '2019-06-30' group by 1
select login_date, count(user_id) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by 1)s where login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by 1
select login_date, count(user_id) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) t where datediff('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(user_id) as user_count from (select user_id, min(activity_date) as login_date from Traffic where activity='login' group by user_id) as t where datediff('2019-06-30', login_date)<=90 group by login_date
select login_date, count(user_id) as user_count from (select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id) t where datediff('2019-06-30', login_date) <= 90 group by login_date
select login_date, count(user_id) as user_count from( select user_id, min(activity_date) as login_date from traffic where activity='login' group by 1) t where login_date between date_sub(str_to_date('2019-06-30','%Y-%m-%d'),interval 90 day) and str_to_date('2019-06-30','%Y-%m-%d') group by 1 order by 1
select login_date, count(user_id) user_count from (select user_id, min(activity_date) as login_date from Traffic where activity='login' group by user_id ) t where datediff('2019-06-30',login_date)<=90 group by login_date order by login_date
select login_date, count(user_id) user_count from (select user_id, min(activity_date) as login_date from Traffic where activity='login' group by user_id having datediff('2019-06-30',login_date)<=90 ) t group by login_date order by login_date
select login_date, count(user_id) user_count from (select user_id, min(activity_date) login_date from Traffic where activity = 'login' group by 1) temp where datediff('2019-06-30', login_date) <= 90 group by 1
select login_date, count(user_id)as user_count from (select user_id,min(activity_date)as login_date from( select * from traffic where activity='login')cte group by user_id)cte2 where datediff('2019-06-30',login_date)<=90 group by login_date
select login_date,count(*) as user_count from(select min(activity_date) as login_date ,user_id from Traffic where activity='login' group by user_id)t where datediff('2019-06-30',t.login_date)<=90 group by t.login_date
select login_date,count(distinct user_id) as user_count from ( select user_id,min(activity_date) as login_date from traffic where activity='login' group by user_id ) as temp where datediff('2019-06-30',login_date) <= 90 group by login_date
select login_date,count(user_id) as user_count from ( select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) as A where abs(TIMESTAMPDIFF(day,'2019-06-30', login_date)) <= 90 group by login_date
select login_date,count(user_id) as user_count from (select min(activity_date) as login_date , user_id from Traffic where activity = 'login' GROUP BY 2) a where login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by 1
select mind as login_date, count(user_id) as user_count from ( select min(activity_date) as 'mind', user_id from Traffic where activity= 'login' group by user_id having min(activity_date)>='2019-04-01') T group by mind
select mindate as login_date, count(user_id) as user_count from (select user_id, min(activity_date) mindate from Traffic where activity = "login" group by user_id) t where datediff('2019-06-30', mindate) <= 90 group by 1
select mindate as login_date, count(user_id) as user_count from( select user_id,min(activity_date) as mindate from Traffic where activity='login' group by user_id )a where datediff('2019-06-30',mindate)<=90 group by mindate
select new.login_date, count(User_id) as user_count from( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id) new where new.login_date between '2019-04-01' and '2019-06-30' group by new.login_date
select qry.mad as login_date, count(*) as user_count from (select user_id, min(activity_date) mad from traffic where activity = 'login' group by user_id) qry where qry.mad <= '2019-06-30' and qry.mad >= date_add('2019-06-30', interval -90 day) group by qry.mad
select req_date as login_date , count(user_id) as user_count from ( select user_id , min(activity_date) as req_date from traffic t where activity ='login' group by 1 having req_date between DATE_ADD("2019-06-30", INTERVAL -90 DAY) and "2019-06-30" ) agg group by 1
select t.activity_date login_date, count(*) user_count from (select distinct user_id, activity, activity_date, dense_rank() over(partition by user_id order by activity_date asc) 'Rank' from traffic where activity = 'login') t where t.Rank = 1 and t.activity_date between '2019-04-01' and '2019-06-30' group by t.activity_date
select t.activity_date login_date, count(*) user_count from (select distinct user_id, activity, activity_date, dense_rank() over(partition by user_id order by activity_date asc) 'Rank' from traffic where activity = 'login') t where t.Rank = 1 and t.activity_date between '2019-04-01' and '2019-06-30' group by t.activity_date order by t.activity_date
select t.login_date, count(t.user_id) as user_count from ( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id) t where login_date between date_add('2019-06-30', interval -90 day) and '2019-06-30' group by login_date
select t1.login_date, count(t1.user_id) as user_count from ( select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by 1 ) t1 where login_date >= '2019-06-30' - interval 90 day group by 1
select temp.first_login as login_date, count(temp.user_id) as user_count from (select user_id, activity, min(activity_date) as first_login from Traffic where activity = 'login' group by user_id, activity) temp where temp.first_login between '2019-04-01' and '2019-09-30' group by temp.first_login
select temp.first_login as login_date, count(temp.user_id) as user_count from (select user_id, activity, min(activity_date) as first_login from Traffic where activity = 'login' group by user_id, activity) temp where temp.first_login between date_sub('2019-06-30', interval 90 day) and '2019-09-30' group by temp.first_login
select temp.first_login as login_date, count(temp.user_id) as user_count from (select user_id, activity, min(activity_date) as first_login from Traffic where activity = 'login' group by user_id, activity) temp where temp.first_login between date_sub('2019-06-30', interval 90 day) and date_add('2019-06-30', interval 90 day) group by temp.first_login
select temp.first_login_date AS login_date, count(distinct temp.user_id) as user_count from (select user_id, min(activity_date) as first_login_date from traffic where activity = 'login' group by 1 having min(activity_date) >= date_sub('2019-06-30', interval 90 day) and min(activity_date) <= '2019-06-30')temp group by 1
with A as( select user_id, min(activity_date) as "first_login" from traffic where activity = 'login' group by 1 ) select first_login as "login_date", count(user_id) as "user_count" from A where datediff('2019-06-30', first_login) <= 90 group by 1
with a as ( select min(activity_date) as login_date from traffic where activity = 'login' group by user_id ) select login_date , count(1) as user_count from a where login_date >= '2019-06-30' - interval 90 day group by 1 having user_count >0
with a as ( select user_id, min(activity_date) as activity_date from traffic where activity='login' group by user_id ) select a.activity_date as login_date, count(a.user_id) as user_count from a where datediff('2019-06-30', a.activity_date) <= 90 group by a.activity_date
with base as ( select user_id, min(activity_date) as earliest_login from Traffic where activity='login' group by 1 ) select distinct earliest_login as login_date, count(distinct user_id) as user_count from Base where datediff( '2019-06-30', earliest_login)<=90 group by 1
with c as ( select user_id , activity , activity_date , row_number() over(partition by user_id order by activity_date) as login_rn from traffic where activity = 'login' ) select activity_date as login_date , count(distinct user_id) as user_count from c where login_rn = 1 and activity_date >= '2019-06-30' - interval 90 day group by activity_date
with cte as ( Select user_id, activity_date, dense_rank() over ( partition by user_id order by activity_date) holder from Traffic where activity = 'login' ) Select activity_date login_date , count(distinct user_id) user_count from cte where holder = 1 and activity_date between date_sub('2019-06-30', interval 90 day) and '2019-06-30' group by activity_date
with cte as ( select user_id, Min(activity_date) as login_date from traffic where activity = 'login' group by user_id) select login_date, count(distinct user_id) as user_count from cte where datediff('2019-06-30', login_date) <= 90 group by login_date order by login_date
with cte as ( select user_id, activity, activity_date, dense_rank() over(partition by user_id order by activity_date) as rn from traffic where activity = 'login' ) select activity_date as login_date, count(distinct user_id) as user_count from cte where activity_date >= date_sub('2019-06-30', INTERVAL 90 DAY ) and rn = 1 group by 1
with cte as ( select user_id, activity, min(activity_date) over(partition by user_id, activity) as login_date from traffic where activity = 'Login' ) select login_date, count(distinct user_id) as user_count from cte group by login_date having login_date >= date_add('2019-06-30', interval -90 day)
with cte as ( select user_id, activity_date, rank() over(partition by user_id order by activity_date asc) as r from traffic where activity = 'login' ) select activity_date as login_date, count(distinct user_id) as user_count from cte where r = 1 and activity_date between DATE_SUB("2019-06-30", INTERVAL 90 DAY) and "2019-06-30" group by activity_date
with cte as ( select user_id, activity_date, rank() over(partition by user_id order by activity_date) as rnk from Traffic where activity = 'login' ) select activity_date as login_date, count(distinct user_id) as user_count from cte where cte.rnk = 1 and datediff('2019_06_30',activity_date) <= 90 group by activity_date order by activity_date
with cte as ( select user_id, min(activity_date) as activity_date from traffic where activity = 'login' group by user_id ) select activity_date as login_date, count(user_id) user_count from cte where activity_date between date_add('2019-06-30', INTERVAL -90 DAY) and '2019-06-30' group by activity_date
with cte as ( select user_id, min(activity_date) as first_login from Traffic where activity = 'login' group by user_id ) select b.first_login as login_date, count(distinct a.user_id) as user_count from Traffic a join cte b on a.user_id = b.user_id and a.activity_date = b.first_login where datediff('2019-06-30', a.activity_date)<=90 and a.activity = 'login' group by a.activity_date
with cte as ( select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by 1 ) select login_date, count(user_id) as user_count from cte group by 1 having datediff('2019-06-30', cte.login_date) <= 90
with cte as ( select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id ) select login_date, count(distinct user_id) as user_count from cte where datediff(login_date, '2019-06-30') between -90 and 90 group by login_date
with cte as ( select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id ) select login_date, count(user_id) as user_count from cte where datediff('2019-06-30', login_date) <= 90 group by login_date order by login_date
with cte as ( select user_id, min(activity_date) as login_date from Traffic where activity='login' group by user_id ) select login_date, count(user_id) as user_count from cte where datediff('2019-06-30', login_date) <= 90 group by login_date order by login_date
with cte as ( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id) select login_date, count(user_id) as user_count from cte where timestampdiff(day, login_date, '2019-06-30') <= 90 group by login_date
with cte as ( select user_id,activity_date from ( select distinct user_id,activity_date,rank()over(partition by user_id order by activity_date asc) as r from traffic where activity="login") t where t.r=1 and activity_date between date_sub("2019-06-30",interval 90 day) and "2019-06-30") select activity_date as login_date,count(user_id) as user_count from cte group by 1
with cte as ( select user_id,min(activity_date) 'activity_date' from Traffic where activity = 'login' group by user_id ) select activity_date 'login_date', count(distinct user_id) 'user_count' from cte where activity_date between date_sub("2019-06-30", interval 90 day) and date_add("2019-06-30", interval 90 day) group by activity_date
with cte as (select *, rank() over (partition by user_id order by activity_date) as my_rank from Traffic where activity = 'login'), cte2 as (select user_id, activity_date from cte where my_rank=1 and activity_date between date_sub('2019-06-30', interval 90 day) and '2019-06-30') select activity_date as login_date, count(distinct user_id) as user_count from cte2 group by activity_date
with cte as (select distinct user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id) select login_date, count(user_id) as user_count from cte where login_date between '2019-04-01' and '2019-06-30' group by login_date order by 1
with cte as (select t.user_id, min(t.activity_date) as logindt from Traffic t where t.activity='login' group by 1) select cte.logindt as login_date, count(cte.user_id) as user_count from cte where datediff('2019-06-30',cte.logindt)<=90 group by 1 order by 1
with cte as (select user_id, activity_date, DENSE_RANK() over (partition by user_id order by activity_date) as rnk from Traffic where activity = 'login' ) select activity_date as login_date , count(distinct user_id) as user_count from cte where rnk = 1 and DATEDIFF('2019-06-30', activity_date) <= 90 group by login_date
with cte as (select user_id, min(activity_date) as first_date from traffic where activity='login' group by user_id) select first_date as login_date, count(user_id) as user_count from cte where datediff('2019-06-30',first_date)<=90 group by first_date
with cte as( select *, min(activity_date) over(partition by user_id) early_date from Traffic WHERE activity = 'login') select activity_date login_date, count(distinct(user_id)) user_count from cte where activity_date = early_date and activity_date >= date_sub('2019-06-30', interval 90 day) group by activity_date
with cte as( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id ) select login_date, count(user_id) as user_count from cte where login_date between date_sub('2019-06-30', interval 90 day) and '2019-06-30' group by login_date
with cte as( select user_id,activity,min(activity_date) as login_date from Traffic where activity = 'login' group by user_id ) select login_date, count(user_id) as user_count from cte where datediff('2019-06-30',login_date)<= 90 group by login_date order by login_date
with cte1 as ( select user_id, min(activity_date) as login_date from traffic where activity='login' group by 1), cte2 as ( select * from cte1 where date_sub('2019-06-30', interval 90 day)<=login_date) select login_date, count(user_id) as user_count from cte2 group by 1
with cte_first_time_logins as ( select user_id, min(activity_date) as first_login_date from Traffic where activity = 'login' group by 1 ), cte_final as ( select first_login_date as login_date, count(user_id) as user_count from cte_first_time_logins where first_login_date >= date_sub('2019-06-30', interval 90 day) and first_login_date <= '2019-06-30' group by 1 order by 1 ) select * from cte_final
with cte_firstlogin as ( select user_id,min(activity_date) as first_login from traffic where activity ='login' group by user_id ) select activity_date as login_date, count(distinct t.user_id) as user_count from traffic t left join cte_firstlogin fl on t.user_id = fl.user_id where (activity_date between date_sub('2019-06-30',interval 90 day) and '2019-06-30') and t.activity_date = fl.first_login group by 1
with first_log as ( select user_id, min(activity_date) as first_login from traffic where activity = 'login' group by user_id ) select first_login as login_date, count(user_id) as user_count from first_log where first_login between date_add('2019-06-30', INTERVAL -90 DAY) and '2019-06-30' group by first_login
with first_login as ( select user_id, activity_date as login_date from ( select user_id, activity_date, row_number() over (partition by user_id order by activity_date) as rnk from Traffic where activity = "login" )z where rnk=1 ) select login_date, count(user_id) as user_count from first_login where login_date >= date_sub("2019-06-30", INTERVAL 90 DAY) group by login_date order by login_date
with first_login as ( select user_id, activity_date, rank() over (partition by user_id order by activity_date) "date_rank" from traffic where activity = 'login' group by 1, 2 ) select activity_date "login_date", count(user_id) "user_count" from first_login where date_rank = 1 and activity_date between date_sub('2019-06-30', interval 90 day) and '2019-06-30' group by 1
with first_login as ( select user_id, min(activity_date) as activity_date from Traffic where activity='login' group by user_id ) select activity_date as login_date, count(distinct user_id) as user_count from first_login where activity_date > date_add('2019-06-30', interval -91 day) group by activity_date
with first_login as ( select user_id, min(activity_date) as first_date from Traffic where activity = 'login' group by 1 ) select first_date as login_date, count(distinct user_id) as user_count from first_login where first_date between '2019-04-01' and '2019-06-30' group by first_date
with first_login as(select user_id, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id) select login_date, count(*) as user_count from first_login where datediff('2019-06-30', login_date) <= 90 group by login_date
with first_login_date as ( select user_id, min(activity_date) as first_login from Traffic where activity = 'login' group by user_id ) select first_login as login_date, count(distinct user_id) as user_count from first_login_date where datediff('2019-06-30', first_login) <= 90 group by first_login
with first_login_date as (select user_id, min(activity_date) login_date from traffic where activity = 'login' group by 1) select login_date , count(distinct f.user_id) as user_count from first_login_date f where f.login_date between DATE_ADD('2019-06-30', INTERVAL -90 DAY) and '2019-06-30' group by 1 order by 1
with firstlog as ( select user_id, min(activity_date) as activity_date from traffic where activity like 'login' group by user_id ) select activity_date as login_date, count(distinct user_id) as user_count from firstlog where user_id in (select user_id from traffic where activity like 'login' group by user_id having min(activity_date) >= date_add('2019-06-30', interval -90 day) ) group by activity_date
with firstlogin as (select user_id, activity, min(activity_date) as login_date from Traffic where activity = 'login' group by user_id ) select login_date, count(distinct user_id) as user_count from firstlogin where datediff('2019-06-30', login_date) <= 90 group by login_date
with firstlogin as (select user_id, activity, min(activity_date) as login_date from traffic where activity = "login" group by user_id) select login_date, count(distinct user_id) as user_count from firstlogin where datediff('2019-06-30',login_date) <= 90 group by login_date
with hi as( SELECT user_id, MIN(activity_date) AS 'first_login' FROM Traffic WHERE activity = 'login' GROUP BY user_id) SELECT first_login as 'login_date', COUNT(user_id) AS 'user_count' FROM hi WHERE DATEDIFF( '2019-06-30',first_login)<=90 GROUP BY first_login
with l as ( select min(activity_date) as login_date, user_id from Traffic where activity = 'login' group by user_id ) select login_date, count(*) as user_count from l where login_date between date_sub("2019-06-30", interval 90 day) and "2019-06-30" group by login_date
with login as (select user_id,activity,min(activity_date) as login_date from traffic where activity = 'login' group by user_id,activity) select login_date,count(user_id) as user_count from login where datediff( cast('2019-06-30' as date),login_date) <= 90 group by login_date
with min_login as ( select user_id , min(activity_date) min_login from Traffic where true and activity = 'login' group by user_id ) select min_login login_date , count(distinct user_id) user_count from min_login where true and min_login between date_add('2019-06-30',INTERVAL -90 DAY) AND '2019-06-30' group by login_date
with new as (select user_id, min(activity_date) as first_login_date from Traffic where activity="login" group by user_id) select new.first_login_date as login_date, count(new.user_id) as user_count from new group by new.first_login_date having datediff('2019-06-30', new.first_login_date) <= 90
with new_Traffic as ( select user_id,min(activity_date) as activity_date from Traffic where activity='login' group by user_id ) select activity_date as login_date, count(distinct user_id) as user_count from new_Traffic where DATEDIFF('2019-06-30',activity_date) <= 90 group by activity_date
with qualified_date as ( select user_id, activity, min(activity_date) as login_date from traffic where activity = 'login' group by user_id ) select login_date, count( distinct user_id) user_count from qualified_date where login_date >= date_sub('2019-06-30', interval 90 day) group by login_date
with rank_user as ( select user_id, activity_date,dense_rank() over (partition by user_id order by activity_date ) as login_time from Traffic where activity = 'login'), first_login as ( select * from rank_user where login_time = 1 ) select activity_date as login_date,count(distinct user_id) as user_count from first_login where activity_date >= "2019-04-01" group by 1 having user_count > 0
with rnktable as ( select user_id, activity, activity_date, rank() over (partition by user_id order by activity_date) as rnk from traffic where activity='login') select activity_date as login_date, count(distinct user_id) as user_count from rnktable where rnk=1 and activity_date between date_add("2019-06-30", interval -90 day) and date_add("2019-06-30", interval 90 day) group by 1
with sqll as (select distinct user_id,min(activity_date) as first_login from Traffic where activity ='login' group by user_id) select first_login as login_date,count(user_id) as user_count from sqll where first_login >= date_add('2019-06-30', INTERVAL -90 DAY) group by first_login
with t as ( select user_id, min(activity_date) as first_login_date from traffic where activity = 'login' group by user_id ) select first_login_date as login_date, count(distinct user_id) as user_count from t where first_login_date between ('2019-06-30' - interval 90 day) and '2019-06-30' group by first_login_date
with t as ( select user_id,min(activity_date) as login_date from traffic where activity = 'login' group by 1 ) select login_date, count(user_id) as user_count from t where datediff(cast('2019-06-30' as date),login_date) <= 90 group by 1
with t as (SELECT user_id, activity, activity_date, DENSE_RANK() OVER(PARTITION BY user_id ORDER BY activity_date) As 'rnk' FROM Traffic WHERE activity = 'login') SELECT activity_date As login_date, COUNT(DISTINCT user_id) As 'user_count' FROM t WHERE rnk=1 AND DATEDIFF('2019-06-30', activity_date) <= 90 GROUP BY activity_date ORDER BY activity_date
with t as (select min(activity_date) as login_date, user_id from traffic where activity = 'login' group by 2 having login_date between '2019-06-30' - interval 90 day and '2019-06-30') select login_date, count(*) user_count from t group by 1
with t1 as ( select activity_date, user_id, dense_rank() over (partition by user_id order by activity_date) as login_rank from traffic where activity = 'login') select activity_date as login_date, count(distinct(user_id)) as user_count from t1 where login_rank = 1 and activity_date >= '2019-06-30' - interval 90 day group by activity_date order by activity_date
with t1 as ( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by 1 ) select login_date, count(user_id) as user_count from t1 where datediff('2019-06-30', login_date) <= 90 group by 1
with t1 as (SELECT user_id, activity, MIN(activity_date) as first_login FROM Traffic WHERE activity = "login" GROUP BY user_id HAVING first_login BETWEEN DATE_SUB("2019-06-30", INTERVAL 90 DAY) AND "2019-06-30" ) SELECT first_login as login_date, count(user_id) as user_count FROM t1 GROUP BY login_date ORDER BY login_date ASC
with t1 as (select *, dense_rank()over(partition by user_id order by activity_date) as rnk from traffic where activity = 'login' ) select activity_date as login_date, count(distinct user_id) as user_count from t1 where rnk = 1 and datediff("2019-06-30",activity_date) <= 90 group by activity_date order by activity_date asc
with t1 as (select user_id, min(activity_date) as first_login from traffic where activity = 'login' and activity_date group by 1 having first_login between date_sub('2019-06-30', interval 90 day) and '2019-06-30') select first_login as login_date, count(distinct user_id) as user_count from t1 group by 1
with t1 as (select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by 1 having login_date between date_sub('2019-06-30', interval 90 day) and '2019-06-30') select login_date, count(distinct user_id) as user_count from t1 group by 1
with t1 as( select user_id, min(activity_date) as login_date from Traffic where activity='login' group by user_id having min(activity_date)>= (date_sub('2019-06-30',interval 90 day)) ) select login_date, count(user_id) as user_count from t1 group by login_date order by login_date
with temp as ( SELECT *, ROW_NUMBER() OVER(Partition By user_id ORDER BY activity_date) as rnk FROM Traffic WHERE activity = 'login' ) SELECT activity_date as login_date, count(user_id) as user_count FROM temp WHERE rnk = 1 AND activity_date BETWEEN DATE_SUB('2019-06-30', INTERVAL 90 day) AND '2019-06-30' GROUP BY login_date
with temp as ( select user_id, min(activity_date) as activity_date from traffic where activity = 'login' group by user_id) select activity_date as login_date, count(distinct user_id) as user_count from temp group by login_date having datediff('2019-06-30', activity_date) <=90
with temp as ( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id ) select login_date, count(user_id) as user_count from temp group by 1 having datediff('2019-06-30', login_date) <= 90
with temp as ( select user_id, min(activity_date) as login_date from traffic where activity = 'login' group by user_id ) select login_date, count(user_id) as user_count from temp where datediff('2019-06-30', login_date) <= 90 group by 1
with temp as (select user_id, min(activity_date) login_date from traffic where activity = 'login' group by user_id) select login_date, count(user_id) user_count from temp where datediff('2019-06-30',login_date)<=90group by login_date
with temp as( select *, rank() over(partition by user_id order by activity_date) login from (select * from traffic where activity = 'login') t ) select activity_date login_date, count(distinct user_id) user_count from temp where login = 1 and datediff('2019-06-30',activity_date)<=90 group by activity_date
with temp as( select user_id, MIN(activity_date) as login_date from Traffic where activity = "login" group by user_id, activity having login_date >=date_sub("2019-06-30", interval 90 day) ) select login_date, count(distinct user_id) user_count from temp group by login_date
with temp as(select user_id, MIN(activity_date) OVER(PARTITION BY user_id, activity) as login_date from Traffic where activity = "login" ) select login_date, count(distinct user_id) user_count from temp group by login_date having login_date >=date_sub("2019-06-30", interval 90 day)
with tmp as( select *, row_number() over(partition by user_id order by activity_date) as rn from traffic where activity = 'login' ) select activity_date as login_date, count(distinct user_id) as user_count from tmp where rn = 1 and activity_date >= date_add('2019-06-30', interval -90 day) group by activity_date
with tmp as( select user_id, activity_date, rank()over(partition by user_id order by activity_date) as rnk from traffic where activity = 'login' ) select activity_date as login_date, count(distinct user_id) as user_count from tmp where rnk = 1 and activity_date >= date_sub('2019-06-30',interval 90 day) group by activity_date
