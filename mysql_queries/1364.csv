SELECT A.invoice_id, A.customer_name, A.price, A.contacts_cnt, COALESCE(B.trusted_contacts_cnt, 0) trusted_contacts_cnt FROM (SELECT I.invoice_id, C.customer_name, I.price, COUNT(Co.contact_name) contacts_cnt FROM Invoices I LEFT JOIN Customers C ON I.user_id = C.customer_id LEFT JOIN Contacts Co ON I.user_id = Co.user_id GROUP BY I.invoice_id, C.customer_name, I.price) A LEFT JOIN (SELECT I.invoice_id, COUNT(C.contact_name) trusted_contacts_cnt FROM Invoices I LEFT JOIN Contacts C ON I.user_id = C.user_id WHERE C.contact_name IN (SELECT customer_name FROM Customers) GROUP BY I.invoice_id) B ON A.invoice_id = B.invoice_id ORDER BY A.invoice_id
SELECT A.invoice_id, A.customer_name, A.price, IFNULL(B.contacts_cnt, 0) AS contacts_cnt, IFNULL(B.trusted_contacts_cnt, 0) AS trusted_contacts_cnt FROM (SELECT i.invoice_id, i.user_id, c.customer_name, i.price FROM Invoices i JOIN Customers c ON i.user_id=c.customer_id) AS A LEFT JOIN (SELECT user_id, COUNT(1) AS contacts_cnt, SUM(CASE WHEN contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Contacts GROUP BY 1) AS B ON A.user_id=B.user_id ORDER BY 1
SELECT I.invoice_id AS invoice_id, C.customer_name AS customer_name, I.price AS price, COUNT(T1.contact_name) AS contacts_cnt, COUNT(C2.email) AS trusted_contacts_cnt FROM Customers C JOIN Invoices I ON I.user_id=C.customer_id LEFT JOIN Contacts T1 ON I.user_id=T1.user_id LEFT JOIN Customers C2 ON C2.email=T1.contact_email GROUP BY 1, 2 ,3 ORDER BY 1
SELECT I.invoice_id, C.customer_name, I.price, COUNT(Con.user_id) AS contacts_cnt, COUNT(C1.email) AS trusted_contacts_cnt FROM Invoices I JOIN Customers C ON I.user_id = C.customer_id LEFT JOIN Contacts Con ON C.customer_id = Con.user_id LEFT JOIN Customers C1 ON C1.email = Con.contact_email GROUP BY I.invoice_id, C.customer_name, I.price ORDER BY I.invoice_id
SELECT I.invoice_id, C.customer_name, I.price, SUM(CASE WHEN CT.contact_name is not null then 1 ELSE 0 END) AS contacts_cnt, SUM(CASE WHEN CT.contact_name in (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Customers C LEFT JOIN Contacts CT ON C.customer_id = CT.user_id INNER JOIN Invoices I ON C.customer_id = I.user_id GROUP BY I.invoice_id, C.customer_name ORDER BY I.invoice_id
SELECT I.invoice_id, C1.customer_name, I.price, COUNT(C2.contact_email) AS contacts_cnt, COUNT(C3.customer_name) AS trusted_contacts_cnt FROM Invoices I LEFT JOIN Customers C1 ON I.user_id = C1.customer_id LEFT JOIN Contacts C2 ON C2.user_id = C1.customer_id LEFT JOIN Customers C3 ON C3.customer_name = C2.contact_name GROUP BY I.invoice_id order by I.invoice_id
SELECT I.invoice_id, M.customer_name, I.price, IFNULL(T1.ct1,0) 'contacts_cnt', IFNULL(T2.ct2,0) 'trusted_contacts_cnt' FROM Invoices I LEFT JOIN Customers M ON I.user_id = M.customer_id LEFT JOIN (SELECT user_id, contact_email, COUNT(*) 'ct1' FROM Contacts GROUP BY 1) T1 ON I.user_id = T1.user_id LEFT JOIN (SELECT ct.user_id, COUNT(ct.user_id) 'ct2' FROM Customers cm, Contacts ct WHERE ct.contact_email = cm.email GROUP BY 1) T2 ON I.user_id = T2.user_id ORDER BY 1
SELECT Inv.invoice_id, c.customer_name, Inv.price, coalesce(ct.contacts_cnt, 0) contacts_cnt, coalesce(tct.trusted_contacts_cnt,0) trusted_contacts_cnt FROM Invoices Inv left join (select user_id,count(contact_name) as contacts_cnt from contacts group by user_id) ct on Inv.user_id=ct.user_id left join (select user_id,count(contact_name) as trusted_contacts_cnt from contacts where contact_name in (select customer_name from customers) group by user_id) tct on Inv.user_id=tct.user_id left join customers c on c.customer_id=Inv.user_id order by Inv.Invoice_id
SELECT T.INVOICE_ID, T.CUSTOMER_NAME, T.PRICE, COUNT(CO.CONTACT_EMAIL) CONTACTS_CNT, COUNT(C2.CUSTOMER_ID) TRUSTED_CONTACTS_CNT FROM (SELECT I.INVOICE_ID, C.CUSTOMER_NAME, C.CUSTOMER_ID, I.PRICE FROM INVOICES I, CUSTOMERS C WHERE I.USER_ID = C.CUSTOMER_ID) T LEFT OUTER JOIN CONTACTS CO ON T.CUSTOMER_ID = CO.USER_ID LEFT OUTER JOIN CUSTOMERS C2 ON CO.CONTACT_EMAIL = C2.EMAIL GROUP BY T.INVOICE_ID, T.CUSTOMER_NAME, T.PRICE ORDER BY 1
SELECT T2.invoice_id, T2.customer_name, T2.price, IFNULL(COUNT(T2.user_id),0) AS contacts_cnt, IFNULL(SUM(T2.trusted),0) AS trusted_contacts_cnt FROM (SELECT I.invoice_id, C.customer_name, I.price, T1.trusted, T1.user_id FROM Invoices I LEFT JOIN Customers C ON I.user_id=C.customer_id LEFT JOIN (SELECT user_id, contact_name, CASE WHEN contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END AS trusted FROM Contacts) T1 ON C.customer_id=T1.user_id) T2 GROUP BY T2.invoice_id, T2.customer_name, T2.price ORDER BY T2.invoice_id ASC
SELECT a.invoice_id, b.customer_name, a.price, COUNT(c.user_id) AS contacts_cnt, COUNT(d.customer_name) AS trusted_contacts_cnt FROM Invoices a LEFT JOIN Customers b ON a.user_id = b.customer_id LEFT JOIN Contacts c ON b.customer_id = c.user_id LEFT JOIN Customers d ON d.customer_name = c.contact_name GROUP BY a.invoice_id, b.customer_name, a.price ORDER BY a.invoice_id
SELECT a.invoice_id, b.customer_name, a.price, IFNULL(c.contacts_cnt,0) AS contacts_cnt, IFNULL(d.contacts_cnt,0) AS trusted_contacts_cnt FROM Invoices a LEFT JOIN Customers b ON a.user_id = b.customer_id LEFT JOIN (SELECT DISTINCT user_id, COUNT(user_id) AS contacts_cnt FROM Contacts GROUP BY user_id) c ON a.user_id = c.user_id LEFT JOIN (SELECT DISTINCT user_id, COUNT(user_id) AS contacts_cnt FROM Contacts WHERE contact_name in (SELECT DISTINCT customer_name FROM Customers) GROUP BY user_id) d ON a.user_id = d.user_id ORDER BY a.invoice_id
SELECT c.invoice_id, a.customer_name, c.price, COUNT(b.user_id) AS contacts_cnt, SUM(CASE WHEN b.contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Customers a JOIN Invoices c ON a.customer_id = c.user_id LEFT JOIN Contacts b ON b.user_id = c.user_id GROUP BY 1, 2, 3 ORDER BY 1
SELECT distinct i.invoice_id,c.customer_name,i.price, count(t.contact_email) as contacts_cnt, sum(case when (t.contact_email in (select distinct email from Customers)) then 1 else 0 end) as trusted_contacts_cnt FROM Invoices as i LEFT JOIN Customers as c ON i.user_id = c.customer_id LEFT JOIN Contacts as t ON t.user_id = c.customer_id GROUP BY i.invoice_id ORDER BY i.invoice_id
SELECT distinct i.invoice_id,c.customer_name,i.price, count(t.contact_name) as contacts_cnt, sum(case when (t.contact_name in (select distinct customer_name from Customers)) then 1 else 0 end) as trusted_contacts_cnt FROM Invoices as i LEFT JOIN Customers as c ON i.user_id = c.customer_id LEFT JOIN Contacts as t ON t.user_id = c.customer_id GROUP BY i.invoice_id ORDER BY i.invoice_id
SELECT i.invoice_id ,c1.customer_name ,i.price ,COUNT(m.contact_email) AS contacts_cnt ,COUNT(c2.email) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c1 ON i.user_id = c1.customer_id LEFT JOIN Contacts m ON c1.customer_id = m.user_id LEFT JOIN Customers c2 ON m.contact_name = c2.customer_name AND m.contact_email = c2.email GROUP BY i.invoice_id, c1.customer_name, i.price ORDER BY i.invoice_id
SELECT i.invoice_id ,c1.customer_name ,i.price ,COUNT(m.contact_email) AS contacts_cnt ,SUM(CASE WHEN c2.customer_name IS NOT NULL THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c1 ON i.user_id = c1.customer_id LEFT JOIN Contacts m ON c1.customer_id = m.user_id LEFT JOIN Customers c2 ON m.contact_name = c2.customer_name AND m.contact_email = c2.email GROUP BY i.invoice_id, c1.customer_name, i.price ORDER BY i.invoice_id
SELECT i.invoice_id ,cu.customer_name ,i.price ,COUNT(c.contact_email) contacts_cnt ,SUM(CASE WHEN c.contact_email IN ( SELECT DISTINCT email FROM Customers) THEN 1 ELSE 0 END ) trusted_contacts_cnt FROM Invoices i JOIN Customers cu ON i.user_id = cu.customer_id LEFT JOIN Contacts c ON cu.customer_id = c.user_id GROUP BY i.invoice_id ORDER BY i.invoice_id
SELECT i.invoice_id as invoice_id,sub2.customer_name as customer_name,i.price as price,sub2.contact_cnt as contacts_cnt,sub2.trusted_contacts_cnt as trusted_contacts_cnt FROM Invoices i LEFT JOIN (SELECT sub1.customer_id as customer_id,sub1.customer_name as customer_name,COUNT(sub1.contact_name) as contact_cnt, COUNT(trusted_contact) AS trusted_contacts_cnt FROM (SELECT t2.customer_id as customer_id,t2.customer_name as customer_name, t1.contact_name as contact_name, CASE WHEN t1.contact_email IN (SELECT email FROM Customers) THEN "Y" ELSE NULL END AS trusted_contact FROM Contacts t1 RIGHT JOIN Customers t2 ON t1.user_id=t2.customer_id) sub1 GROUP BY sub1.customer_id,sub1.customer_name ) sub2 ON i.user_id=sub2.customer_id order by 1
SELECT i.invoice_id, c.customer_name, i.price ,COUNT(co.user_id) AS contacts_cnt ,SUM(IF(co.contact_email IN (SELECT DISTINCT email FROM Customers),1,0)) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN Contacts co ON c.customer_id = co.user_id GROUP BY i.invoice_id ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, COALESCE(COUNT(ct.contact_name), 0) AS contacts_cnt, SUM(CASE WHEN ct.contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END ) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN Contacts ct ON c.customer_id = ct.user_id GROUP BY c.customer_name, i.invoice_id, i.price ORDER BY i.invoice_id ASC
SELECT i.invoice_id, c.customer_name, i.price, COUNT(c1.user_id) AS contacts_cnt, COUNT(c2.email) AS trusted_contacts_cnt FROM Invoices i JOIN Customers c ON (i.user_id=c.customer_id) LEFT JOIN Contacts c1 ON (c.customer_id=c1.user_id) LEFT JOIN Customers c2 ON (c2.email=c1.contact_email) GROUP BY 1, 2 ORDER BY 1
SELECT i.invoice_id, c.customer_name, i.price, COUNT(cn.user_id) contacts_cnt, COUNT(t.customer_name) trusted_contacts_cnt FROM Invoices i JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN Contacts cn ON cn.user_id = c.customer_id LEFT JOIN Customers t ON cn.contact_name = t.customer_name GROUP BY i.invoice_id, c.customer_name, i.price ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, COUNT(con.user_id) AS contacts_cnt, COUNT(c2.email) AS trusted_contacts_cnt FROM Invoices i JOIN Customers c ON c.customer_id = i.user_id LEFT JOIN Contacts con ON con.user_id = c.customer_id LEFT JOIN Customers c2 ON c2.email = con.contact_email GROUP BY i.invoice_id, c.customer_name, i.price ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, COUNT(con.user_id) AS contacts_cnt, COUNT(c2.email) AS trusted_contacts_cnt FROM Invoices i JOIN Customers c ON(c.customer_id=i.user_id) LEFT JOIN Contacts con ON(con.user_id=c.customer_id) LEFT JOIN Customers c2 ON (c2.email=con.contact_email) GROUP BY i.invoice_id, c.customer_name ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, COUNT(con.user_id) AS contacts_cnt, COUNT(c2.email) AS trusted_contacts_cnt FROM Invoices i JOIN Customers c ON(c.customer_id=i.user_id) LEFT JOIN Contacts con ON(con.user_id=c.customer_id) LEFT JOIN Customers c2 ON (c2.email=con.contact_email) GROUP BY i.invoice_id, c.customer_name, i.price ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, COUNT(con.user_id) AS contacts_cnt, COUNT(c2.email) AS trusted_contacts_cnt FROM invoices i LEFT JOIN customers c ON c.customer_id = i.user_id LEFT JOIN contacts con ON con.user_id = c.customer_id LEFT JOIN customers c2 ON c2.email = con.contact_email GROUP BY i.invoice_id ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, COUNT(ct.user_id) AS contacts_cnt, COUNT(c1.email) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Contacts ct ON i.user_id = ct.user_id LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN Customers c1 ON ct.contact_email = c1.email GROUP BY i.invoice_id ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, COUNT(ct.user_id) AS contacts_cnt, SUM(CASE WHEN ct.contact_email IN (SELECT email from customers ) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM invoices i LEFT JOIN customers c ON i.user_id=c.customer_id LEFT JOIN contacts ct ON i.user_id=ct.user_id GROUP BY i.invoice_id ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, COUNT(o.contact_name) AS contacts_cnt, SUM(IF(o.contact_name IN (SELECT customer_name FROM Customers),1,0)) AS trusted_contacts_cnt FROM Invoices i JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN Contacts o ON c.customer_id = o.user_id GROUP BY 1 ORDER BY 1
SELECT i.invoice_id, c.customer_name, i.price, IFNULL(COUNT(con.user_id),0) AS contacts_cnt, SUM(CASE WHEN cus.email IS NOT NULL THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Invoices i JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN Contacts con ON c.customer_id = con.user_id LEFT JOIN Customers cus ON con.contact_email = cus.email GROUP BY c.customer_name, i.invoice_id ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, IFNULL(COUNT(ct.contact_name),0) AS contacts_cnt, SUM(CASE WHEN ct.contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END ) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN Contacts ct ON c.customer_id = ct.user_id GROUP BY 1 ORDER BY 1
SELECT i.invoice_id, c.customer_name, i.price, IFNULL(t.ncont, 0) AS contacts_cnt, IFNULL(t.ntrust, 0) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN ( SELECT user_id, COUNT(contact_name) AS ncont, SUM(CASE WHEN contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) AS ntrust FROM Contacts GROUP BY user_id) t USING(user_id) LEFT JOIN Customers c ON i.user_id = c.customer_id ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name, i.price, c.contacts_cnt, c.trusted_contacts_cnt FROM Invoices AS i JOIN (SELECT cus.customer_id, cus.customer_name, COUNT(cont.contact_email) AS contacts_cnt, SUM(CASE WHEN cont.contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Customers cus LEFT JOIN Contacts cont ON cus.customer_id = cont.user_id GROUP BY cus.customer_id) AS c ON i.user_id = c.customer_id ORDER BY i.invoice_id
SELECT i.invoice_id, c.customer_name,i.price, count(contact_email) as contacts_cnt, sum(if (contact_email in(select email from customers),1,0)) as trusted_contacts_cnt FROM CUSTOMERS C LEFT JOIN CONTACTS CO ON c.customer_id=co.user_id JOIN invoices i on c.customer_id=i.user_id group by i.invoice_id order by i.invoice_id
SELECT i.invoice_id, c1.customer_name, i.price, COALESCE(COUNT(c2.contact_name),0) contacts_cnt, COALESCE((SUM(CASE WHEN c2.contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END)),0) trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c1 ON i.user_id=c1.customer_id LEFT JOIN Contacts c2 ON c1.customer_id=c2.user_id GROUP BY 1,2,3 ORDER BY 1
SELECT i.invoice_id, c1.customer_name, i.price, COUNT(cont.user_id) AS contacts_cnt, COUNT(c2.email) AS trusted_contacts_cnt FROM Invoices i JOIN Customers c1 ON i.user_id = c1.customer_id LEFT JOIN Contacts cont ON c1.customer_id = cont.user_id LEFT JOIN Customers c2 ON cont.contact_email = c2.email GROUP BY i.invoice_id, c1.customer_name, i.price ORDER BY i.invoice_id
SELECT i.invoice_id, c1.customer_name, i.price, IFNULL(c2.contacts_cnt,0) AS contacts_cnt, IFNULL(c2.trusted_contacts_cnt,0) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c1 ON i.user_id = c1.customer_id LEFT JOIN ( SELECT Contacts.user_id, COUNT(Contacts.contact_email) AS contacts_cnt, COUNT(Customers.email) AS trusted_contacts_cnt FROM Contacts LEFT JOIN Customers ON Contacts.contact_email = Customers.email GROUP BY Contacts.user_id ) c2 ON i.user_id = c2.user_id ORDER BY i.invoice_id
SELECT i.invoice_id, cm.customer_name, i.price, COUNT(DISTINCT ct.contact_email) contacts_cnt, SUM(CASE WHEN ct.contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END) trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers cm ON i.user_id = cm.customer_id LEFT JOIN Contacts ct ON i.user_id = ct.user_id GROUP BY i.invoice_id ORDER BY 1
SELECT i.invoice_id, cu.customer_name, i.price, COUNT(co.contact_name) AS contacts_cnt, COUNT(cu2.email) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers cu ON i.user_id = cu.customer_id LEFT JOIN Contacts co ON co.user_id = cu.customer_id LEFT JOIN Customers cu2 ON co.contact_email = cu2.email GROUP BY 1, 2, 3 ORDER BY 1
SELECT i.invoice_id, cus.customer_name, i.price, COUNT(con.contact_name) as contacts_cnt, SUM(CASE WHEN con.contact_name in (SELECT customer_name FROM Customers) and con.contact_email in (SELECT email FROM Customers) THEN 1 ELSE 0 END) as trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers cus ON i.user_id = cus.customer_id LEFT JOIN Contacts con ON i.user_id = con.user_id GROUP BY i.invoice_id ORDER BY i.invoice_id
SELECT i.invoice_id, cust.customer_name, i.price, SUM(CASE WHEN c.user_id IS NOT NULL THEN 1 ELSE 0 END) AS contacts_cnt, SUM(CASE WHEN cont_cust.customer_id IS NOT NULL THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Invoices i INNER JOIN Customers cust ON i.user_id = cust.customer_id LEFT JOIN Contacts c ON i.user_id = c.user_id LEFT JOIN Customers cont_cust ON c.contact_email = cont_cust.email GROUP BY i.invoice_id, cust.customer_name, i.price ORDER BY i.invoice_id
SELECT i.invoice_id, cx.customer_name, i.price, IFNULL(COUNT(c.contact_email), 0) contacts_cnt, SUM( IF (c.contact_email IN ( SELECT DISTINCT email FROM Customers ), 1, 0) ) trusted_contacts_cnt FROM Invoices i JOIN Customers cx ON i.user_id = cx.customer_id LEFT JOIN Contacts c ON cx.customer_id = c.user_id GROUP BY 1, 2 ORDER BY 1
SELECT i.invoice_id, us.customer_name, i.price, COUNT(co.contact_name) AS contacts_cnt, COUNT(cu.customer_name) AS trusted_contacts_cnt FROM Invoices as i LEFT JOIN Contacts as co ON i.user_id = co.user_id LEFT JOIN Customers as cu ON co.contact_name = cu.customer_name LEFT JOIN Customers as us ON us.customer_id = i.user_id GROUP BY 1,2,3 ORDER BY i.invoice_id
SELECT i1.invoice_id, c1.customer_name AS customer_name, i1.price, CASE WHEN b.contacts_cnt IS NULL THEN 0 ELSE b.contacts_cnt END AS contacts_cnt, CASE WHEN b.trusted_contacts_cnt IS NULL THEN 0 ELSE b.trusted_contacts_cnt END AS trusted_contacts_cnt FROM Invoices i1 LEFT JOIN Customers c1 ON i1.user_id = c1.customer_id LEFT JOIN( SELECT user_id, COUNT(1) AS contacts_cnt, SUM(CASE WHEN customer_id IS NOT NULL THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM( SELECT c2.user_id, c3.customer_id FROM Contacts c2 LEFT JOIN Customers c3 ON c2.contact_name = c3.customer_name AND c2.contact_email = c3.email ) a GROUP BY user_id ) b ON i1.user_id = b.user_id ORDER BY i1.invoice_id ASC
SELECT invoice_id, C1.customer_name, price, COUNT(contact_email) contacts_cnt, SUM(IF(contact_email IN (SELECT email FROM Customers),1,0)) trusted_contacts_cnt FROM Invoices I1 JOIN Customers C1 ON I1.user_id = C1.customer_id LEFT JOIN Contacts Con1 ON C1.customer_id = Con1.user_id GROUP BY invoice_id,C1.customer_name, price ORDER BY invoice_id
SELECT invoice_id, C1.customer_name, price, IFNULL(contacts_cnt,0) contacts_cnt, IFNULL(trusted_contacts_cnt,0) trusted_contacts_cnt FROM Invoices I1 JOIN Customers C1 ON I1.user_id = C1.customer_id LEFT JOIN (SELECT user_id, COUNT(contact_name) contacts_cnt FROM Contacts GROUP BY user_id) T1 ON C1.customer_id = T1.user_id LEFT JOIN (SELECT user_id, COUNT(contact_name) trusted_contacts_cnt FROM Contacts WHERE contact_name IN (SELECT customer_name FROM Customers) GROUP BY user_id) T2 ON C1.customer_id = T2.user_id ORDER BY invoice_id
SELECT invoice_id, customer_name, price, CASE WHEN contacts_cnt is NULL THEN 0 ELSE contacts_cnt END contacts_cnt, CASE WHEN trusted_contacts_cnt is NULL THEN 0 ELSE trusted_contacts_cnt END trusted_contacts_cnt FROM Customers LEFT Join (SELECT user_id, COUNT(contact_email) contacts_cnt, SUM(is_trusted) trusted_contacts_cnt FROM (SELECT * , CASE WHEN email is null THEN 0 else 1 end as is_trusted FROM Contacts CO LEFT JOIN Customers CU on CO.contact_email=CU.email) CO GROUP BY user_id) tampa on user_id=customer_id inner JOIN Invoices on Invoices.user_id=customer_id ORDER BY invoices.invoice_id
SELECT invoice_id, customer_name, price, CASE WHEN contacts_cnt is NULL THEN 0 ELSE contacts_cnt END contacts_cnt, CASE WHEN trusted_contacts_cnt is NULL THEN 0 ELSE trusted_contacts_cnt END trusted_contacts_cnt FROM Invoices LEFT Join (SELECT user_id, COUNT(contact_email) contacts_cnt, SUM(is_trusted) trusted_contacts_cnt FROM (SELECT * , CASE WHEN email is null THEN 0 else 1 end as is_trusted FROM Contacts CO LEFT JOIN Customers CU on CO.contact_email=CU.email) CO GROUP BY user_id) tampa on tampa.user_id=invoices.user_id inner JOIN Customers on Invoices.user_id=customer_id ORDER BY invoices.invoice_id
SELECT invoice_id, customer_name, price, COALESCE(t.cnt,0) contacts_cnt, COALESCE(t2.cnt,0) trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN ( SELECT user_id, COUNT(*) cnt FROM Contacts GROUP BY user_id ) t ON i.user_id = t.user_id LEFT JOIN ( SELECT user_id, COUNT(*) cnt FROM Contacts WHERE (contact_name, contact_email) IN (SELECT customer_name, email FROM Customers ) GROUP BY user_id ) t2 ON i.user_id = t2.user_id ORDER BY invoice_id
SELECT invoice_id, customer_name, price, COUNT(Contacts.contact_name ) AS contacts_cnt, SUM(IF(Contacts.contact_name IN (SELECT customer_name FROM Customers), 1, 0)) AS trusted_contacts_cnt FROM Customers JOIN Invoices ON Customers.customer_id = Invoices.user_id LEFT JOIN Contacts ON Customers.customer_id = Contacts.user_id GROUP BY invoice_id ORDER BY invoice_id
SELECT invoice_id, customer_name, price, COUNT(Contacts.user_id) AS contacts_cnt, SUM(CASE WHEN Contacts.contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Invoices INNER JOIN Customers ON Invoices.user_id = Customers.customer_id LEFT JOIN Contacts ON Customers.customer_id = Contacts.user_id GROUP BY Invoices.invoice_id, customer_name ORDER BY Invoices.invoice_id
SELECT invoice_id, customer_name, price, COUNT(contact_name) AS contacts_cnt, SUM(CASE WHEN contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers cu ON i.user_id = cu.customer_id LEFT JOIN Contacts co ON cu.customer_id = co.user_id GROUP BY invoice_id, customer_name ORDER BY invoice_id
SELECT invoice_id, customer_name, price, COUNT(distinct contact_name) as contacts_cnt, SUM(CASE WHEN contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Invoices as i JOIN Customers as cus ON i.user_id = cus.customer_id LEFT JOIN Contacts as con ON cus.customer_id = con.user_id GROUP BY invoice_id
SELECT invoice_id, customer_name, price, IFNULL(COUNT(contact_name), 0) AS contacts_cnt, IFNULL(SUM(IF(contact_email IN (SELECT email FROM Customers), 1, 0)), 0) AS trusted_contacts_cnt FROM Invoices LEFT JOIN Customers ON Customers.customer_id = Invoices.user_id LEFT JOIN Contacts ON Customers.customer_id = Contacts.user_id GROUP BY 1 ORDER BY 1
SELECT invoice_id, customer_name, price, IFNULL(contacts_cnt, 0) contacts_cnt, IFNULL(trusted_contacts_cnt,0) trusted_contacts_cnt FROM invoices i LEFT JOIN (SELECT user_id, count(contact_email) contacts_cnt FROM contacts GROUP BY 1) AS T1 USING(user_id) LEFT JOIN (SELECT user_id, count(contact_email) trusted_contacts_cnt FROM contacts WHERE contact_email IN (SELECT distinct email from customers) GROUP BY 1) AS T2 USING(user_id) JOIN customers c ON c.customer_id = i.user_id ORDER by invoice_id
SELECT invoice_id, customer_name, price, coalesce(contacts_cnt, 0) contacts_cnt, coalesce(trusted_contacts_cnt,0) trusted_contacts_cnt FROM Invoices LEFT JOIN (SELECT user_id, COUNT(contact_email) contacts_cnt FROM Contacts GROUP BY user_id) a ON Invoices.user_id = a.user_id LEFT JOIN (SELECT user_id, COUNT(contact_name) trusted_contacts_cnt FROM Contacts WHERE contact_name IN (SELECT customer_name FROM Customers) GROUP BY user_id) b ON Invoices.user_id = b.user_id JOIN Customers ON Invoices.user_id = Customers.customer_id ORDER BY invoice_id
SELECT invoice_id, customer_name, price, count(contact_email) as contacts_cnt, SUM(IF(contact_email in (select email from Customers),1,0)) as trusted_contacts_cnt FROM Customers Left Join Contacts on Customers.customer_id=Contacts.user_id JOIN Invoices on Customers.customer_id=Invoices.user_id GROUP BY invoice_id ORDER BY invoice_id
SELECT invoice_id, customer_name,price, COUNT(C2.contact_email) contacts_cnt, SUM(IF(C2.contact_email IN (SELECT email FROM Customers), 1,0)) trusted_contacts_cnt FROM Invoices I1 JOIN Customers C1 ON I1.user_id = C1.customer_id LEFT JOIN Contacts C2 ON I1.user_id = C2.user_id GROUP BY invoice_id ORDER BY 1,2,3
SELECT invoice_id, table1.customer_name, price, IFNULL(table2.count,0) as contacts_cnt, IFNULL(table3.count,0) as trusted_contacts_cnt FROM (SELECT invoice_id, customer_name, price FROM Invoices LEFT JOIN Customers ON Invoices.user_id = Customers.customer_id ) as table1 LEFT JOIN ( SELECT Customer_name, count(contact_name) as count FROM Contacts LEFT JOIN Customers ON Customers.customer_id = Contacts.user_id GROUP BY Customer_name ) as table2 ON table1.customer_name = table2.Customer_name LEFT JOIN ( SELECT Customer_name, count(contact_name) as count FROM Contacts LEFT JOIN Customers ON Customers.customer_id = Contacts.user_id WHERE Contacts.contact_name in (SELECT customer_name FROM Customers) GROUP BY Customer_name ) as table3 ON table1.customer_name = table3.Customer_name ORDER BY table1.invoice_id
SELECT invoice_id,customer_name, price, IFNULL(COUNT(contact_name),0) AS contacts_cnt, SUM(CASE WHEN contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers cu ON i.user_id=cu.customer_id LEFT JOIN Contacts co ON cu.customer_id= co.user_id GROUP BY 1, cu.customer_id ORDER BY 1
SELECT invoice_id,customer_name, price, contacts_cnt, IFNULL(trusted_contacts_cnt,0) AS trusted_contacts_cnt FROM (SELECT cte1.invoice_id,cte1.customer_id, cte1.customer_name, cte1.price, cte2.contacts_cnt FROM (SELECT cu.customer_id, cu.customer_name,COUNT(co.user_id) AS contacts_cnt FROM Customers cu LEFT JOIN Contacts co ON cu.customer_id = co.user_id GROUP BY 1,2) cte2 LEFT JOIN (SELECT i.invoice_id,cu.customer_id, cu.customer_name, i.price FROM Customers cu LEFT JOIN Invoices i ON cu.customer_id = i.user_id) cte1 ON cte1.customer_id = cte2.customer_id) cte3 LEFT JOIN (SELECT user_id, COUNT(contact_name) AS trusted_contacts_cnt FROM Contacts WHERE contact_name IN (SELECT customer_name FROM Customers) GROUP BY 1) cte4 ON cte3.customer_id = cte4.user_id WHERE invoice_id IS NOT NULL ORDER BY invoice_id
SELECT invoice_id,customer_name,price,IFNULL(contacts_cnt,0) AS contacts_cnt,IFNULL(trusted_contacts_cnt,0) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id=c.customer_id LEFT JOIN (SELECT user_id,COUNT(user_id) AS contacts_cnt,SUM(CASE WHEN contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Contacts GROUP BY user_id) a ON a.user_id=c.customer_id ORDER BY invoice_id ASC
SELECT t1.invoice_id , t2.customer_name , t1.price , COUNT(t3.user_id) as contacts_cnt , COUNT(t4.email) as trusted_contacts_cnt FROM invoices AS t1 INNER JOIN customers AS t2 ON t2.customer_id = t1.user_id LEFT JOIN contacts AS t3 ON t3.user_id = t2.customer_id LEFT JOIN customers AS t4 ON t4.email = t3.contact_email GROUP BY t1.invoice_id, t2.customer_name, t1.price ORDER BY t1.invoice_id
Select I.invoice_id,C.customer_name,I.price, ifnull(tab1.contacts_cnt,0) as contacts_cnt, ifnull(tab1.trusted_contacts_cnt,0) as trusted_contacts_cnt from Customers as C join Invoices as I on C.customer_id=I.user_id left join (select Co.user_id as user_id,count(Cu.customer_name) as trusted_contacts_cnt,count(Co.contact_name) as contacts_cnt from Contacts as Co left join Customers as Cu on Co.contact_name=Cu.customer_name group by Co.user_id) as tab1 on I.user_id=tab1.user_id order by invoice_id
Select i.invoice_id, a.customer_name, i.price, a.contacts_cnt, a.trusted_contacts_cnt From ( Select c1.customer_id, c1.customer_name, sum(case when c2.contact_email is null then 0 else 1 end) as contacts_cnt, ifnull(sum(trusted_contacts),0) as trusted_contacts_cnt From Customers c1 Left Join ( Select *, case when contact_email in (select email from Customers) then 1 else 0 end as trusted_contacts From Contacts ) c2 on c1.customer_id = c2.user_id group by 1,2 )a Join Invoices i on i.user_id = a.customer_id order by 1
Select i.invoice_id, c.customer_name, i.price, ifnull(count(co.user_id),0) as contacts_cnt, ifnull(sum(case when co.contact_email in (select email from Customers) then 1 else 0 end), 0) as trusted_contacts_cnt from Customers c inner join Invoices i on c.customer_id = i.user_id left join Contacts co on c.customer_id = co.user_id group by i.invoice_id, c.customer_name, i.price order by i.invoice_id
Select i.invoice_id, t1.customer_name, i.price, t1.contacts_cnt, t1.trusted_contacts_cnt from Invoices i join ( Select cu.customer_id, cu.customer_name, count(co.contact_name) as contacts_cnt, count(case when co.contact_name in (Select distinct customer_name from Customers) then 1 else null end) as trusted_contacts_cnt from Customers cu left join Contacts co on cu.customer_id = co.user_id group by cu.customer_id, cu.customer_name ) t1 on i.user_id = t1.customer_id order by i.invoice_id
Select i.invoice_id,c.customer_name, i.price, Count(co.user_id) as contacts_cnt, SUM(case when co.contact_email in (Select distinct email from Customers) then 1 else 0 end) as trusted_contacts_cnt From Invoices as i Left Join Customers as c On i.user_id = c.customer_id Left Join Contacts as co On c.customer_id = co.user_id Group By i.invoice_id Order By i.invoice_id
Select i.invoice_id,c.customer_name,i.price, count(distinct t.contact_name) as contacts_cnt, sum(if(t.contact_name in (select distinct customer_name from customers),1,0)) as trusted_contacts_cnt from invoices i join customers c on i.user_id=c.customer_id left join contacts t on i.user_id=t.user_id group by i.invoice_id order by i.invoice_id
Select invoice_id, c.customer_name, price, sum(case when contact_name is null then 0 else 1 end ) as contacts_cnt, sum(case when trusted='Y' then 1 else 0 end) as trusted_contacts_cnt from Invoices d left join (select customer_id ,customer_name,contact_name,(select "Y" FROM Customers WHERE customer_name=b.contact_name) as trusted from Customers a left join Contacts b on a.customer_id=b.user_id) c on d.user_id=c.customer_id group by invoice_id,c.customer_name order by invoice_id
Select tmp.invoice_id, Customers.customer_name, tmp.price, tmp.contacts_cnt, tmp.trusted_contacts_cnt From (Select invoice_id, price, user_id, coalesce(Count(Distinct contact_email), 0) as contacts_cnt, Sum(Case When contact_email in (Select email From Customers) Then 1 Else 0 End) as trusted_contacts_cnt From Invoices Left Join Contacts Using(user_id) Group By invoice_id) tmp Inner Join Customers On tmp.user_id = Customers.customer_id Order By invoice_id
WITH AllContacts AS (SELECT user_id ,COUNT(contact_name) AS contacts_cnt FROM Contacts GROUP BY user_id), TrustedContacts AS (SELECT C.user_id ,IFNULL(COUNT(Cus.customer_id),0) AS trusted_contacts_cnt FROM Contacts C LEFT JOIN Customers Cus ON C.contact_name = Cus.customer_name GROUP BY C.user_id) SELECT I.invoice_id ,C.customer_name ,I.price ,IFNULL(AC.contacts_cnt,0) AS contacts_cnt ,IFNULL(TC.trusted_contacts_cnt,0) AS trusted_contacts_cnt FROM Invoices I INNER JOIN Customers C ON I.user_id = C.customer_id LEFT JOIN AllContacts AC ON AC.user_id = I.user_id LEFT JOIN TrustedContacts TC ON TC.user_id = I.user_id ORDER BY 1 ASC
WITH C AS (SELECT user_id, COUNT(*) AS cnt FROM Contacts GROUP BY 1), D AS (SELECT user_id, COUNT(*) AS cnt FROM Contacts WHERE contact_email IN (SELECT email FROM Customers) GROUP BY 1) SELECT invoice_id, customer_name, price, IFNULL(C.cnt, 0) AS contacts_cnt, IFNULL(D.cnt, 0) AS trusted_contacts_cnt FROM Invoices A LEFT JOIN Customers B ON A.user_id = B.customer_id LEFT JOIN C ON B.customer_id = C.user_id LEFT JOIN D ON B.customer_id = D.user_id ORDER BY 1
WITH CTE AS (SELECT customer_id, customer_name, email, COALESCE(contact_count, 0) as contacts_cnt, COALESCE(trusted,0) as trusted_contacts_cnt FROM customers LEFT JOIN ( SELECT user_id, SUM(CASE WHEN email is NULL THEN 0 ELSE 1 END) as trusted, COUNT(user_id) as contact_count FROM contacts LEFT JOIN customers ON email=contact_email GROUP BY user_id ) a ON customer_id=user_id) SELECT invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt FROM CTE INNER JOIN invoices ON customer_id=user_id ORDER BY invoice_id
WITH CTE1 AS (SELECT Contacts.*, (CASE WHEN Contacts.contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) cust_count FROM Contacts), CTE1a AS (SELECT user_id, SUM(cust_count) AS cc_count FROM CTE1 GROUP BY user_id), CTE2 AS (SELECT user_id AS customer_id, COUNT(user_id) AS num_of_contacts FROM Contacts GROUP BY 1 ORDER BY 1) SELECT DISTINCT i.invoice_id AS invoice_id, c.customer_name AS customer_name, i.price AS price, IFNULL(CTE2.num_of_contacts, 0) AS contacts_cnt, IFNULL(CTE1a.cc_count, 0) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id=c.customer_id LEFT JOIN Contacts ON c.customer_id=Contacts.user_id LEFT JOIN CTE2 ON Contacts.user_id = CTE2.customer_id LEFT JOIN CTE1a ON Contacts.user_id = CTE1a.user_id ORDER BY 1
WITH CTE2 AS ( Select User_ID, CASE WHEN Contact_Email IN (Select Email From Customers) THEN 'Y' ELSE 'N' END AS CN_Exists From Contacts ) ,CTE3 AS ( Select User_ID, Count(User_ID) AS Count1, SUM(CASE WHEN CN_Exists = 'Y' THEN 1 ELSE 0 END) AS Count2 From CTE2 Group by User_ID ) Select Invoice_ID, Customer_Name, Price, IFNULL(Count1,0) AS contacts_cnt, IFNULL(Count2,0) AS trusted_contacts_cnt From Invoices AS I INNER JOIN Customers AS C ON I.User_ID = C.Customer_ID LEFT JOIN CTE3 AS C1 ON I.User_ID = C1.User_ID Order by I.Invoice_ID
WITH CTE_CONT AS ( Select user_id, count(contact_email) as contacts_cnt from Contacts group by user_id ), CTE_Trusted_contacts as ( Select user_id,count(contact_name) as trusted_contacts_cnt from Contacts where contact_name in (select customer_name from Customers) group by user_id ) Select invoice_id,CC.customer_name,price, IFNULL(CO.contacts_cnt,0) contacts_cnt , IFNULL(TCO.trusted_contacts_cnt,0) trusted_contacts_cnt FROM Invoices I join Customers CC on I.user_id = CC.customer_id left JOIN CTE_CONT CO on I.user_id= CO.user_id left join CTE_Trusted_contacts TCO on I.user_id = TCO.user_id order by 1
WITH CustContacts AS (SELECT user_id, COUNT(*) AS 'contacts_cnt' FROM Contacts GROUP BY user_id), TrustedContacts AS (SELECT user_id, COUNT(cust.email) AS 'trusted_contacts_cnt' FROM Customers AS cust LEFT JOIN Contacts AS con ON cust.email = con.contact_email GROUP BY user_id ) SELECT invoice_id, customer_name, price, IFNULL(contacts_cnt, 0) AS 'contacts_cnt', IFNULL(trusted_contacts_cnt, 0) AS 'trusted_contacts_cnt' FROM Invoices AS i LEFT JOIN Customers AS cust ON i.user_id = cust.customer_id LEFT JOIN CustContacts AS cc ON i.user_id = cc.user_id LEFT JOIN TrustedContacts AS tc ON i.user_id = tc.user_id ORDER BY invoice_id
WITH T1 AS( SELECT customer_id,COUNT(C1.user_id) AS contacts_cnt, SUM(CASE WHEN contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Contacts C1 INNER JOIN Customers C2 ON C1.user_id = C2.customer_id GROUP BY customer_id) SELECT invoice_id,customer_name,price,COALESCE(contacts_cnt,0) AS contacts_cnt, COALESCE(trusted_contacts_cnt,0) AS trusted_contacts_cnt FROM Invoices I LEFT JOIN T1 ON I.user_id = T1.customer_id INNER JOIN Customers C ON I.user_id = C.customer_id ORDER BY invoice_id
WITH c1 AS ( SELECT a.customer_id ,a.customer_name ,COUNT(b.contact_email) AS contacts_cnt ,SUM(CASE WHEN b.contact_email IN (SELECT a.email FROM Customers a) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Customers a LEFT JOIN Contacts b ON a.customer_id = b.user_id GROUP BY 1) SELECT i.invoice_id ,c1.customer_name ,i.price ,c1.contacts_cnt ,c1.trusted_contacts_cnt FROM Invoices i JOIN c1 ON i.user_id = c1.customer_id ORDER BY 1
WITH contact_info AS (SELECT i.invoice_id, i.price, i.user_id AS user_id1, co.user_id AS user_id2, co.contact_name FROM Invoices AS i LEFT JOIN Contacts AS co ON i.user_id = co.user_id), trust_contact_info AS (SELECT c.invoice_id, c.price, c.user_id1, c.user_id2, c.contact_name, cu.customer_name FROM contact_info AS c LEFT JOIN Customers AS cu ON c.contact_name = cu.customer_name), group_table AS (SELECT invoice_id, user_id1, price, SUM(CASE WHEN user_id2 IS NOT NULL THEN 1 ELSE 0 END) AS contacts_cnt, SUM(CASE WHEN customer_name IS NOT NULL THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM trust_contact_info GROUP BY 1, 2) SELECT g.invoice_id, c.customer_name, g.price, g.contacts_cnt, g.trusted_contacts_cnt FROM group_table AS g INNER JOIN Customers AS c ON g.user_id1 = c.customer_id ORDER BY g.invoice_id
WITH contact_stats as (SELECT x.user_id, count(distinct x.contact_name) as contacts_cnt, count(distinct b.customer_name) as trusted_contacts_cnt FROM Contacts x LEFT JOIN Customers b ON x.contact_name = b.customer_name GROUP BY 1) SELECT a.invoice_id, b.customer_name, a.price, ifnull(c.contacts_cnt,0) contacts_cnt, ifnull(c.trusted_contacts_cnt,0) trusted_contacts_cnt FROM Invoices a JOIN Customers b ON a.user_id = b.customer_id LEFT JOIN contact_stats c ON a.user_id = c.user_id ORDER BY 1
WITH contacts_new as (SELECT *, CASE WHEN contact_name in (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END AS trusted FROM Contacts), contact_agg as (SELECT U.customer_name, count(C.contact_email) as contacts_cnt, sum(C.trusted) as trusted_contacts_cnt FROM contacts_new C LEFT JOIN Customers U ON C.user_id = U.customer_id GROUP BY U.customer_name) SELECT I.invoice_id, U.customer_name, I.price, IFNULL(C.contacts_cnt,0) as contacts_cnt, IFNULL(C.trusted_contacts_cnt,0) as trusted_contacts_cnt FROM Invoices I LEFT JOIN Customers U ON I.user_id = U.customer_id LEFT JOIN contact_agg C ON C.customer_name = U.customer_name ORDER BY 1
WITH cte AS ( SELECT *, CASE WHEN contact_name IN (SELECT customer_name FROM customers) AND contact_email IN (SELECT email FROM customers)THEN 1 ELSE 0 END as ref FROM contacts ), cte1 AS ( SELECT i.invoice_id, i.price, i.user_id, c.ref as ref FROM invoices i LEFT JOIN cte c ON i.user_id = c.user_id ) SELECT cte1.invoice_id, c.customer_name, cte1.price, count(ref) as contacts_cnt, ifnull(sum(ref),0) as trusted_contacts_cnt FROM cte1 JOIN customers c ON cte1.user_id = c.customer_id GROUP BY 1,2,3 ORDER BY invoice_id
WITH cte AS ( SELECT user_id, COUNT(contact_name) contacts_cnt FROM Contacts GROUP BY 1 ), cte2 AS ( SELECT user_id, IFNULL(COUNT(contact_name), 0) trusted_contacts_cnt FROM Contacts WHERE contact_email IN (SELECT DISTINCT email FROM Customers) GROUP BY 1 ) SELECT i.invoice_id, cx.customer_name, i.price, IFNULL(cte.contacts_cnt, 0) contacts_cnt, IFNULL(cte2.trusted_contacts_cnt, 0) trusted_contacts_cnt FROM Invoices i JOIN Customers cx ON i.user_id = cx.customer_id LEFT JOIN cte ON cx.customer_id = cte.user_id LEFT JOIN cte2 ON cx.customer_id = cte2.user_id ORDER BY 1
WITH cte AS (SELECT C.customer_id, C.customer_name, COUNT(Cn.contact_email) AS contacts_cnt, IFNULL(SUM(Cn.contact_email IN (SELECT email FROM Customers)), 0) AS trusted_contacts_cnt FROM Customers AS C LEFT JOIN Contacts AS Cn ON C.customer_id = Cn.user_id GROUP BY C.customer_id) SELECT I.invoice_id, cte.customer_name, I.price, cte.contacts_cnt, cte.trusted_contacts_cnt FROM Invoices AS I LEFT JOIN cte ON I.user_id = cte.customer_id GROUP BY I.invoice_id ORDER BY I.invoice_id
WITH cte AS (SELECT i.invoice_id, c.customer_name, i.price, c.customer_id AS user_id FROM Invoices i JOIN Customers c ON i.user_id = c.customer_id), cte2 AS (SELECT user_id, COUNT(user_id) AS contacts_cnt, SUM(CASE WHEN contact_name IN (SELECT customer_name FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Contacts GROUP BY user_id) SELECT invoice_id, customer_name, price, COALESCE(cte2.contacts_cnt, 0) AS contacts_cnt, COALESCE(cte2.trusted_contacts_cnt, 0) AS trusted_contacts_cnt FROM cte LEFT JOIN cte2 USING(user_id) ORDER BY invoice_id
WITH cte AS (SELECT user_id, count(contact_email) contacts_cnt, sum(case when contact_email IN (SELECT email FROM Customers) then 1 else 0 end) trusted_contacts_cnt FROM Contacts GROUP BY 1) SELECT i.invoice_id, c.customer_name, i.price, IFNULL(contacts_cnt, 0) contacts_cnt, IFNULL(trusted_contacts_cnt, 0) trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN cte ON i.user_id = cte.user_id ORDER BY 1
WITH cte AS( SELECT Customers.customer_id as id, Customers.customer_name as name, Contacts.contact_name as contact_name FROM Customers LEFT JOIN Contacts ON Customers.customer_id = Contacts.user_id), cte2 AS( SELECT id,name,count(contact_name) as contacts_cnt, sum( CASE WHEN contact_name in (select customer_name from Customers) then 1 ELSE 0 end) as trusted_contacts_cnt FROM cte GROUP BY id,name ) SELECT Invoices.invoice_id, cte2.name as customer_name,Invoices.price,cte2.contacts_cnt,cte2.trusted_contacts_cnt FROM Invoices LEFT JOIN cte2 ON Invoices.user_id = cte2.id ORDER BY Invoices.invoice_id
WITH cte AS( SELECT con.user_id, COUNT(con.contact_name) AS contacts_cnt, COUNT(cus.customer_name) AS trusted_contacts_cnt FROM Contacts con LEFT JOIN Customers cus ON con.contact_name = cus.customer_name GROUP BY con.user_id ) SELECT i.invoice_id, c.customer_name, i.price, COALESCE(cte.contacts_cnt,0) AS contacts_cnt, COALESCE(cte.trusted_contacts_cnt,0) As trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN cte ON i.user_id = cte.user_id ORDER BY invoice_id
WITH cte AS( SELECT customer_id, customer_name, COUNT(contact_email) AS contacts_cnt, SUM(CASE WHEN contact_email IN (SELECT email FROM customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM customers c LEFT JOIN contacts ct ON c.customer_id = ct.user_id GROUP BY 1,2) SELECT invoice_id, customer_name, price, IFNULL(contacts_cnt,0) AS contacts_cnt, IFNULL(trusted_contacts_cnt,0) AS trusted_contacts_cnt FROM invoices i LEFT JOIN cte ON i.user_id = cte.customer_id ORDER BY 1
WITH cte_contacts_cnt AS ( SELECT user_id, COUNT(DISTINCT contact_email) as contacts_cnt FROM Contacts GROUP BY user_id ), cte_trusted_contacts_cnt AS ( SELECT user_id, COUNT(DISTINCT contact_email) as trusted_contacts_cnt FROM Contacts c1 WHERE c1.contact_email IN (SELECT email FROM Customers) GROUP BY user_id ) SELECT i.invoice_id, customer_name, price, IFNULL(contacts_cnt, 0) AS contacts_cnt, IFNULL(trusted_contacts_cnt, 0) AS trusted_contacts_cnt FROM Invoices i JOIN Customers ON i.user_id = customer_id LEFT JOIN cte_contacts_cnt cte1 ON i.user_id = cte1.user_id LEFT JOIN cte_trusted_contacts_cnt cte2 ON i.user_id = cte2.user_id ORDER BY invoice_id
WITH customer_contact AS( SELECT c.customer_id,c.customer_name, IFNULL(COUNT(t.contact_name), 0) AS contacts_cnt, IFNULL(SUM(t.contact_name IN (select customer_name from customers)), 0) as trusted_contacts_cnt FROM customers as c LEFT JOIN Contacts as t ON c.customer_id=t.user_id GROUP BY c.customer_id ) SELECT i.invoice_id, c.customer_name, i.price, c.contacts_cnt, c.trusted_contacts_cnt FROM Invoices as i LEFT JOIN customer_contact as c ON i.user_id=c.customer_id ORDER BY i.invoice_id
WITH customer_contact AS( SELECT customer_id, IFNULL(COUNT(contact_name), 0) as contacts_cnt, IFNULL(SUM(contact_name IN( select customer_name from customers)), 0) as trusted_contacts_cnt FROM customers LEFT JOIN contacts ON customer_id=user_id GROUP BY customer_id ) SELECT i.invoice_id, c.customer_name, i.price, cc.contacts_cnt, cc.trusted_contacts_cnt FROM invoices as i LEFT JOIN customers as c ON i.user_id=c.customer_id LEFT JOIN customer_contact as cc ON i.user_id=cc.customer_id ORDER BY i.invoice_id
WITH customer_contacts AS ( SELECT user_id, COUNT(*) AS cc_count FROM Contacts GROUP BY user_id ), trusted_contacts AS ( SELECT user_id, COUNT(*) AS tc_count FROM Contacts WHERE contact_name IN (SELECT customer_name FROM Customers) GROUP BY user_id ) SELECT i.invoice_id, c.customer_name, i.price, IFNULL(cc.cc_count,0) AS contacts_cnt, IFNULL(tc.tc_count,0) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN customer_contacts cc ON i.user_id = cc.user_id LEFT JOIN trusted_contacts tc ON i.user_id = tc.user_id ORDER BY invoice_id ASC
WITH customer_contacts AS( SELECT a.customer_id, a.customer_name, COUNT(b.contact_name) AS contacts_cnt, SUM(CASE WHEN b.contact_name IN (SELECT DISTINCT customer_name FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Customers a LEFT JOIN Contacts b ON a.customer_id = b.user_id GROUP BY 1, 2 ) SELECT i.invoice_id, c.customer_name, i.price, c.contacts_cnt, c.trusted_contacts_cnt FROM Invoices i JOIN customer_contacts c ON i.user_id = c.customer_id ORDER BY 1
WITH ncontacts AS (SELECT customer_id, COUNT(contact_email) countact_cnt FROM customers cus JOIN contacts con ON cus.customer_id = con.user_id GROUP BY customer_id), t AS(SELECT customer_id, COUNT(contact_email) trusted_contacts_cnt FROM customers cus JOIN contacts con ON cus.customer_id = con.user_id AND contact_email IN (SELECT email FROM customers) GROUP BY customer_id) SELECT invoice_id, cus.customer_name, price, IFNULL(countact_cnt, 0) contacts_cnt, IFNULL(trusted_contacts_cnt,0) trusted_contacts_cnt FROM invoices i JOIN customers cus ON i.user_id = cus.customer_id LEFT JOIN ncontacts ON i.user_id = ncontacts.customer_id LEFT JOIN t ON i.user_id = t. customer_id ORDER BY invoice_id
WITH related_customers_cte AS ( SELECT user_id AS customer_id, COUNT(*) AS trusted_contacts_cnt FROM contacts INNER JOIN customers ON contacts.contact_email = customers.email GROUP BY user_id ) SELECT invoice_id, customer_name, price, COUNT(contacts.user_id) AS contacts_cnt, COALESCE(trusted_contacts_cnt, 0) AS trusted_contacts_cnt FROM invoices INNER JOIN customers ON invoices.user_id = customers.customer_id LEFT JOIN contacts USING(user_id) LEFT JOIN related_customers_cte USING(customer_id) GROUP BY invoice_id ORDER BY invoice_id
WITH shop_customers AS ( SELECT DISTINCT x.contact_name, x.contact_email FROM Customers c JOIN Contacts x ON c.customer_name = x.contact_name AND c.email = x.contact_email ) SELECT i.invoice_id, c.customer_name, i.price, COUNT(x.contact_name) contacts_cnt, COUNT(s.contact_name) trusted_contacts_cnt FROM Invoices i JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN Contacts x ON c.customer_id = x.user_id LEFT JOIN shop_customers s ON x.contact_name = s.contact_name AND x.contact_email = s.contact_email GROUP BY 1,2,3 ORDER BY 1
WITH summary AS ( SELECT user_id, COUNT(contact_name) AS contacts_cnt, SUM(IF (customer_name IS NOT NULL, 1,0)) AS trusted_contacts_cnt FROM contacts LEFT JOIN customers ON contacts.contact_name = customers.customer_name GROUP BY user_id) SELECT invoice_id, customer_name, price, IFNULL(contacts_cnt,0) AS contacts_cnt, IFNULL(trusted_contacts_cnt,0) AS trusted_contacts_cnt FROM invoices LEFT JOIN customers ON invoices.user_id = customers.customer_id LEFT JOIN summary ON invoices.user_id = summary.user_id ORDER BY invoice_id
WITH t AS (SELECT user_id, COUNT(contact_name) as contacts_cnt FROM Contacts GROUP BY user_id), t2 AS (SELECT co.user_id, COUNT(c.customer_name) as trusted_contacts_cnt FROM Contacts co LEFT JOIN Customers c ON c.customer_name = co.contact_name AND c.email = co.contact_email GROUP BY co.user_id) SELECT i.invoice_id, c.customer_name, i.price, COALESCE(t.contacts_cnt, 0) as contacts_cnt, COALESCE(t2.trusted_contacts_cnt, 0) as trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN t ON t.user_id = i.user_id LEFT JOIN t2 ON t2.user_id = i.user_id ORDER BY i.invoice_id
WITH t AS( SELECT cu.customer_id, cu.customer_name, cu.email, IFNULL(COUNT(distinct c.contact_name),0) as contacts_cnt, IFNULL(COUNT(distinct trust.email),0) as trusted_contacts_cnt FROM Customers cu LEFT JOIN Contacts c ON cu.customer_id = c.user_id LEFT JOIN Customers trust ON c.contact_name = trust.customer_name AND c.contact_email = trust.email GROUP BY 1, 2, 3) SELECT invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt FROM Invoices JOIN t ON t.customer_id = Invoices.user_id ORDER BY 1
WITH t AS( SELECT customers.customer_id, customers.customer_name, customers.email, IFNULL(Count(DISTINCT contacts.contact_name), 0) contacts_cnt, IFNULL(Count(DISTINCT trust.email), 0) trusted_contacts_cnt FROM customers LEFT JOIN contacts ON customers.customer_id = contacts.user_id LEFT JOIN customers trust ON contacts.contact_name = trust.customer_name AND contacts.contact_email = trust.email GROUP BY 1, 2, 3) SELECT invoice_id,customer_name, price, contacts_cnt, trusted_contacts_cnt FROM Invoices JOIN t ON Invoices.user_id = t.customer_id ORDER BY 1
WITH t1 AS ( SELECT user_id, COUNT(DISTINCT contact_name) contact_cnt FROM Contacts c GROUP BY 1 ), t2 AS ( SELECT user_id, COUNT(DISTINCT contact_name) trusted_contact_cnt FROM Contacts c WHERE contact_email IN ( SELECT email FROM Customers ) GROUP BY 1 ) SELECT DISTINCT i.invoice_id, c.customer_name, i.price, COALESCE(t1.contact_cnt, 0) contacts_cnt, COALESCE(t2.trusted_contact_cnt, 0) trusted_contacts_cnt FROM Invoices i LEFT JOIN Customers c ON i.user_id = c.customer_id LEFT JOIN t1 ON i.user_id = t1.user_id LEFT JOIN t2 ON i.user_id = t2.user_id ORDER BY invoice_id
WITH t1 AS (SELECT c1.customer_id ,c1.customer_name ,COUNT(c2.contact_email) AS contacts_cnt ,SUM(CASE WHEN c2.contact_email IN (SELECT c1.email FROM Customers c1) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Customers c1 LEFT JOIN Contacts c2 ON c1.customer_id = c2.user_id GROUP BY 1) SELECT i.invoice_id ,t1.customer_name ,i.price ,t1.contacts_cnt ,t1.trusted_contacts_cnt FROM Invoices i JOIN t1 ON i.user_id = t1.customer_id ORDER BY 1
WITH t1 AS (SELECT c1.customer_id ,c1.customer_name ,COUNT(c2.contact_email) AS contacts_cnt FROM Customers c1 LEFT JOIN Contacts c2 ON c1.customer_id = c2.user_id GROUP BY 1) ,t2 AS ( SELECT user_id ,SUM(CASE WHEN contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts_cnt FROM Contacts GROUP BY 1) SELECT i.invoice_id ,t1.customer_name ,i.price ,IFNULL(t1.contacts_cnt,0) AS contacts_cnt ,IFNULL(t2.trusted_contacts_cnt,0) AS trusted_contacts_cnt FROM Invoices i LEFT JOIN t1 ON i.user_id = t1.customer_id LEFT JOIN t2 ON i.user_id = t2.user_id ORDER BY 1
WITH temp AS ( SELECT customer_id, customer_name, COUNT(contact_name) AS contacts_cnt, SUM( CASE WHEN c2.contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END ) AS trusted_contacts_cnt FROM Customers c1 LEFT JOIN Contacts c2 ON c1.customer_id = c2.user_id GROUP BY c1.customer_id ) SELECT i.invoice_id, t.customer_name, i.price, t.contacts_cnt, t.trusted_contacts_cnt FROM Invoices i JOIN temp t ON i.user_id = t.customer_id ORDER BY i.invoice_id
WITH temp1 AS ( SELECT *, (CASE WHEN contact_email IN (SELECT email FROM Customers) THEN 1 ELSE 0 END) AS trusted_contacts FROM Contacts ), temp2 AS ( SELECT * FROM Invoices LEFT JOIN Customers ON Invoices.user_id = Customers.customer_id ), temp3 AS ( SELECT user_id, COUNT(contact_name) AS contacts_cnt, SUM(trusted_contacts) AS trusted_contacts_cnt FROM temp1 GROUP BY user_id ) SELECT invoice_id, customer_name, price, IFNULL(contacts_cnt, 0) contacts_cnt, IFNULL(trusted_contacts_cnt, 0) trusted_contacts_cnt FROM temp2 LEFT JOIN temp3 ON temp2.user_id = temp3.user_id ORDER BY invoice_id
WITH tmp AS (SELECT user_id, COUNT(*) AS contacts_cnt, SUM(CASE WHEN email IS NULL THEN 0 ELSE 1 END) AS trusted_contacts_cnt FROM Contacts LEFT JOIN Customers ON email=contact_email GROUP BY user_id) SELECT invoice_id, customer_name, price, COALESCE(contacts_cnt, 0) AS contacts_cnt, COALESCE(trusted_contacts_cnt, 0) AS trusted_contacts_cnt FROM Invoices AS i LEFT JOIN Customers AS c ON i.user_id=c.customer_id LEFT JOIN tmp ON i.user_id=tmp.user_id ORDER BY invoice_id
WITH trusted_contacts as (SELECT user_id, COUNT(customer_id) as trusted_contacts_cnt FROM contacts as c LEFT JOIN customers as cust ON c.contact_name = cust.customer_name GROUP BY user_id), knowns AS (SELECT user_id, COUNT(contact_name) as contacts_cnt FROM contacts as c GROUP BY user_id ) SELECT i.invoice_id, c.customer_name, i.price, COALESCE(contacts_cnt, 0) as contacts_cnt, COALESCE(trusted_contacts_cnt, 0) as trusted_contacts_cnt FROM invoices as i INNER JOIN customers as c ON i.user_id = c.customer_id LEFT JOIN knowns as k ON i.user_id = k.user_id LEFT JOIN trusted_contacts as t ON i.user_id = t.user_id GROUP BY i.invoice_id, c.customer_name, i.price ORDER BY i.invoice_id
With abc as ( select a.customer_id,count(b.contact_name) as contacts_cnt, sum(CASE WHEN b.contact_name in (select distinct customer_name from customers) then 1 ELSE 0 end)as trusted_contacts_cnt from customers as a left join contacts as b on a.customer_id = b.user_id group by 1 ), xyz as ( SELECT a.invoice_id,b.customer_name,a.user_id,a.price from invoices as a left join customers as b on a.user_id = b.customer_id ) select a.invoice_id,a.customer_name, a.price, b.contacts_cnt,b.trusted_contacts_cnt from xyz as a join abc as b on a.user_id = b.customer_id order by invoice_id
With contact_count as (Select user_id as user_id, Count(contact_name) as contacts_cnt, Sum( Case When contact_email in (Select email From Customers) Then 1 Else 0 End) as trusted_contacts_cnt From Contacts Group By user_id) Select a.invoice_id as invoice_id, b.customer_name as customer_name, a.price as price, ifnull(c.contacts_cnt,0) as contacts_cnt, ifnull(c.trusted_contacts_cnt,0) as trusted_contacts_cnt From Invoices as a Left Join Customers as b On a.user_id = b.customer_id Left Join contact_count as c On a.user_id = c.user_id Order By invoice_id
With cte as (select cu.customer_id, cu.customer_name, i.invoice_id, i.price, i.user_id from Customers cu join Invoices i on cu.customer_id = i.user_id ), cte2 as (select user_id, count(distinct contact_name) as contacts_cnt , count(distinct customer_name) as trusted_contacts_cnt from Contacts co left join Customers cu on cu.customer_name=co.contact_name group by co.user_id ) Select invoice_id, customer_name, price, ifnull(contacts_cnt,0)as contacts_cnt, ifnull(trusted_contacts_cnt,0)as trusted_contacts_cnt from cte left join cte2 using (user_id) Order by invoice_id
select I.invoice_id, C.customer_name, I.price, ifnull(count(C2.user_id),0) as contacts_cnt, sum(case when C2.contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices I left join Customers C on I.user_id = C.customer_id left join Contacts C2 on I.user_id = C2.user_id group by 1 order by 1
select I.invoice_id, Cu.customer_name, I.price, count(Co.user_id) as contacts_cnt, sum(case when Co.contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices I left join Customers Cu on I.user_id = Cu.customer_Id left join Contacts Co on Cu.customer_id = Co.user_id group by I.invoice_id, Cu.customer_name, Co.user_id order by I.invoice_id
select Invoices.invoice_id, Customers.customer_name, Invoices.price, count(Contacts.user_id) as contacts_cnt, sum(if(Contacts.contact_email in (select distinct email from Customers), 1, 0)) as trusted_contacts_cnt from Invoices join Customers on Customers.customer_id = Invoices.user_id left join Contacts on Contacts.user_id = Invoices.user_id group by invoice_id, Invoices.user_id order by Invoices.invoice_id
select a.invoice_id, a.customer_name, a.price, (case when a.contacts_cnt is null then 0 else a.contacts_cnt end) as contacts_cnt, (case when b.trusted_contacts_cnt is null then 0 else b.trusted_contacts_cnt end ) as trusted_contacts_cnt from (select invoice_id, customer_id, customer_name, price, count(distinct Contacts.contact_email) as contacts_cnt from Invoices inner join Customers on Invoices.user_Id = Customers.customer_id left join Contacts on Customers.customer_id = Contacts.user_id group by invoice_id, customer_id, customer_name, price) a left join (select invoice_id, customer_id, customer_name, price, count(distinct Contacts.contact_email) as trusted_contacts_cnt from Invoices inner join Customers on Invoices.user_Id = Customers.customer_id left join Contacts on Customers.customer_id = Contacts.user_id where Contacts.contact_email in (select distinct email from Customers) group by invoice_id, customer_id, customer_name, price) b on a.invoice_id = b.invoice_id and a.customer_Id = b.customer_Id order by a.invoice_id
select a.invoice_id, b.customer_name, a.price, coalesce(c.contact_cnt,0) contacts_cnt, coalesce(d.trusted_contact_cnt,0) trusted_contacts_cnt from invoices a inner join customers b on a.user_id = b.customer_id left join (select user_id, count(*) as contact_cnt from contacts group by 1) c on a.user_id = c.user_id left join (select user_id, count(*) as trusted_contact_cnt from contacts e inner join customers f on e.contact_name = f.customer_name group by 1)d on a.user_id = d.user_id order by 1
select a.invoice_id, b.customer_name, a.price, count(c.contact_email) as contacts_cnt, sum(if(c.contact_email in (select distinct email from customers), 1, 0)) as trusted_contacts_cnt from invoices a join customers b on a.user_id = b.customer_id left join contacts c on b.customer_id = c.user_id group by a.invoice_id order by a.invoice_id
select a.invoice_id, b.customer_name, a.price, count(c.contact_name) as contacts_cnt, count(case when d.customer_name is not null then c.contact_name else null end) as trusted_contacts_cnt from Invoices a join Customers b on a.user_id=b.customer_id left join Contacts c on b.customer_id=c.user_id left join Customers d on c.contact_name=d.customer_name and c.contact_email=d.email group by a.invoice_id, b.customer_name, a.price order by a.invoice_id
select a.invoice_id, b.customer_name, a.price, count(c.contact_name) as contacts_cnt, count(d.email) as trusted_contacts_cnt from invoices a join customers b on b.customer_id = a.user_id left join contacts c on b.customer_id = c.user_id left join customers d on d.email = c.contact_email group by a.invoice_id order by a.invoice_id
select a.invoice_id, b.customer_name, a.price, count(c.contact_name) contacts_cnt, count(d.customer_name) trusted_contacts_cnt from Invoices a join Customers b on a.user_id = b.customer_id left join Contacts c on b.customer_id = c.user_id left join Customers d on c.contact_name = d.customer_name and c.contact_email = d.email group by 1,2,3 order by 1
select a.invoice_id, b.customer_name, a.price, count(contact_email) as contacts_cnt, sum(case when contact_email in (select distinct email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices a inner join Customers b on a.user_id=b.customer_id left join Contacts c using (user_id) group by 1,2,3 order by 1
select a.invoice_id, b.customer_name, a.price, count(distinct c.contact_name ) as contacts_cnt, sum(case when c.contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices as a left join customers as b on a.user_id = b.customer_id left join contacts as c on a.user_id = c.user_id group by 1,2,3 order by 1
select a.invoice_id, b.customer_name, a.price, count(distinct c.contact_name) as contacts_cnt, sum(case when c.contact_name in (select customer_name from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices a left join customers b on a.user_id = b.customer_id left join contacts c on b.customer_id = c.user_id group by a.invoice_id, b.customer_name, a.price
select a.invoice_id, b.customer_name, a.price, ifnull(count(c.contact_email),0) contacts_cnt, ifnull(d.trusted_contacts_cnt, 0) trusted_contacts_cnt from invoices a join customers b on a.user_id = b.customer_id left join contacts c on a.user_id = c.user_id left join (select user_id, count(contact_email) trusted_contacts_cnt from contacts where contact_email in (select email from customers) group by user_id) d on a.user_id = d.user_id group by a.invoice_id order by a.invoice_id
select a.invoice_id, b.customer_name, a.price, ifnull(count(c.contact_email),0) contacts_cnt, sum(case when contact_email in (select email from customers) then 1 else 0 end) trusted_contacts_cnt from invoices a join customers b on a.user_id = b.customer_id left join contacts c on a.user_id = c.user_id group by a.invoice_id order by a.invoice_id
select a.invoice_id, b.customer_name, a.price,coalesce(c.contacts_cnt,0) as contacts_cnt, coalesce(d.trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices as a left join customers as b on a.user_id=b.customer_id left join (select user_id, count(distinct contact_name) as contacts_cnt from contacts group by user_id) as c on a.user_id=c.user_id left join (select user_id, count(distinct contact_name) as trusted_contacts_cnt from contacts a inner join customers b on a.contact_name=b.customer_name group by user_id) as d on a.user_id= d.user_id order by a.invoice_id
select a.invoice_id, b.customer_name, a.price,coalesce(c.contacts_cnt,0) as contacts_cnt, coalesce(d.trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices as a left join customers as b on a.user_id=b.customer_id left join (select user_id, count(distinct contact_name) as contacts_cnt from contacts group by user_id) as c on a.user_id=c.user_id left join (select user_id, count(distinct contact_name) as trusted_contacts_cnt from contacts where contact_name in ( select distinct customer_name from customers) group by user_id) as d on a.user_id= d.user_id order by a.invoice_id
select a.invoice_id, b.customer_name, min(price) as price, count(c.user_id) as contacts_cnt, count(d.customer_id) as trusted_contacts_cnt from invoices a join customers b on a.user_id = b.customer_id left join contacts c on b.customer_id = c.user_id left join customers d on c.contact_name = d.customer_name group by a.invoice_id, b.customer_name order by 1
select a.invoice_id, c.customer_name, a.price, count(b.user_id) as contacts_cnt, sum(case when b.contact_name in (select distinct customer_name from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices a left join contacts b on a.user_id = b.user_id left join customers c on a.user_id = c.customer_id group by 1,2,3 order by 1
select a.invoice_id, customer_name, price, contacts_cnt, coalesce(trusted_contacts_cnt,0) as trusted_contacts_cnt from (select invoice_id, customer_name, price, count(distinct(co.contact_name)) as contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contacts co on co.user_id = c.customer_id group by invoice_id, customer_name, price order by invoice_id) a left join (select invoice_id, count(distinct(c.contact_name)) as trusted_contacts_cnt from invoices i left join contacts c on c.user_id = i.user_id where c.contact_name in ( select distinct(customer_name) from customers) group by invoice_id) b on a.invoice_id = b.invoice_id
select c.invoice_id , a.customer_name , c.price , count(b.user_id) contacts_cnt , sum(if( contact_email in (select email from Customers) ,1,0)) trusted_contacts_cnt from Customers a left join Contacts b on a.customer_id = b.user_id inner join Invoices c on c.user_id = a.customer_id group by 1 order by 1
select c.invoice_id, a.customer_name, c.price, a.contacts_cnt, b.trusted_contacts_cnt from (select a.customer_id, a.customer_name, ifnull(count(distinct b.contact_email),0) as contacts_cnt from customers a left join contacts b on a.customer_id = b.user_id group by a.customer_id) as a inner join (select c.customer_name, ifnull(count(distinct b.contact_email),0) as trusted_contacts_cnt from customers a inner join contacts b on a.customer_name = b.contact_name and a.email = b.contact_email right join customers c on c.customer_id = b.user_id group by c.customer_id) as b on a.customer_name = b.customer_name inner join invoices c on a.customer_id = c.user_id order by 1
select c.invoice_id, a.customer_name, c.price, count(b.contact_name) as contacts_cnt, count(distinct d.customer_name) as trusted_contacts_cnt from Invoices c left join Customers a on a.customer_id = c.user_id left join Contacts b on a.customer_id = b.user_id left join Customers d on b.contact_name = d.customer_name group by 1, 2, 3
select c.invoice_id, a.customer_name, c.price, count(b.contact_name) as contacts_cnt, count(distinct d.customer_name) as trusted_contacts_cnt from Invoices c left join Customers a on a.customer_id = c.user_id left join Contacts b on a.customer_id = b.user_id left join Customers d on b.contact_name = d.customer_name group by c.invoice_id
select distinct i.invoice_id, cu.customer_name, i.price, count(co.contact_name) over (partition by i.invoice_id) as contacts_cnt, count(if(co.contact_name in (select customer_name from Customers),1,null)) over (partition by i.invoice_id) as trusted_contacts_cnt from Customers as cu join Invoices as i on i.user_id = cu.customer_id left join Contacts as co on i.user_id = co.user_id order by i.invoice_id
select i.invoice_id , max(c.customer_name) as customer_name , max(i.price) as price , count(distinct a.contact_name) as contacts_cnt , coalesce(count(case when a.contact_name in (select customer_name from customers) then c.customer_name end), 0) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contacts a on c.customer_id = a.user_id group by 1 order by 1
select i.invoice_id , max(c.customer_name) as customer_name , max(i.price) as price , count(distinct d.contact_name) as contacts_cnt , coalesce(count(case when d.contact_name in (select customer_name from customers) then c.customer_name end), 0) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contacts d on c.customer_id = d.user_id group by 1 order by 1
select i.invoice_id as invoice_id, cu.customer_name as customer_name, i.price as price, count(con.contact_email) as contacts_cnt, sum(if(contact_email in (select email from customers), 1, 0)) as trusted_contacts_cnt from invoices as i join Customers as cu on cu.customer_id = i.user_id left join contacts as con on con.user_id = cu.customer_id group by i.invoice_id order by i.invoice_id asc
select i.invoice_id invoice_id, c.customer_name customer_name, i.price price,count(distinct co.contact_email) contacts_cnt, sum(case when co.contact_email in (select distinct email from customers) then 1 else 0 end ) trusted_contacts_cnt from invoices i left join customers c on i.user_id=c.customer_id left join contacts co on i.user_id=co.user_id group by i.invoice_id
select i.invoice_id, a.customer_name, i.price, ifnull(count(distinct b.contact_name), 0) as contacts_cnt, sum(case when b.contact_name in (select customer_name from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices i left join customers a on i.user_id = a.customer_id left join contacts b on a.customer_id = b.user_id group by 1, 2 order by 1
select i.invoice_id, c.customer_name, i.price , count(cont.contact_email) contacts_cnt , SUM(IF(cont.contact_email in (Select distinct email from Customers),1, 0)) trusted_contacts_cnt from invoices i join customers c on c.customer_id = i.user_id left join Contacts cont on cont.user_id = c.customer_id group by i.invoice_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, c.contacts_cnt, c.trusted_contacts_cnt from invoices as i left join ( select c.customer_id, c.customer_name, ifnull(count(t.contact_name),0) as contacts_cnt, ifnull(sum( case when t.contact_email in (select email from customers) then 1 else 0 end), 0) as trusted_contacts_cnt from customers as c left join contacts as t on t.user_id=c.customer_id group by c.customer_id ) as c on i.user_id=c.customer_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, c.contacts_cnt, c.trusted_contacts_cnt from invoices as i left join ( select c.customer_id, c.customer_name, ifnull(count(t.contact_name),0) as contacts_cnt, ifnull(sum(t.contact_email in (select email from customers)), 0) as trusted_contacts_cnt from customers as c left join contacts as t on t.user_id=c.customer_id group by c.customer_id ) as c on i.user_id=c.customer_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, c.contacts_cnt, c.trusted_contacts_cnt from invoices as i left join ( select c.customer_id, c.customer_name, ifnull(count(t.contact_name),0) as contacts_cnt, ifnull(sum(t.contact_name in (select customer_name from customers)), 0) as trusted_contacts_cnt from customers as c left join contacts as t on t.user_id=c.customer_id group by c.customer_id ) as c on i.user_id=c.customer_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, c.contacts_cnt,c.trusted_contacts_cnt from (select a.*, ifnull(b.trusted_contacts_cnt,0) as trusted_contacts_cnt from (select cus.customer_id, cus.customer_name, ifnull(count(contact_name),0) as contacts_cnt from Customers cus left join Contacts con on cus.customer_id = con.user_id group by cus.customer_id)a left join (select customer_id, customer_name, ifnull(count(contact_name),0) as trusted_contacts_cnt from Customers cus left join Contacts con on cus.customer_id=con.user_id where contact_name in (select customer_name from Customers) group by customer_id)b on a.customer_id=b.customer_id)c right join Invoices i on i.user_id=c.customer_id order by invoice_id
select i.invoice_id, c.customer_name, i.price, count(co.contact_email) as contacts_cnt, sum(if(co.contact_email in (select email from customers),1,0)) as trusted_contacts_cnt from invoices i join customers c on i.user_id=c.customer_id left join contacts co on co.user_id=c.customer_id group by i.invoice_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(co.user_id) as contacts_cnt, sum(case when co.contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices i inner join customers c on i.user_id = c.customer_id left join contacts co on c.customer_id = co.user_id group by c.customer_id, i.invoice_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(con.contact_email) as contacts_cnt, sum(case when con.contact_name in (select customer_name from customers ) then 1 else 0 end) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contacts con on i.user_id = con.user_id group by 1, 2, 3 order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(con.user_id) as contacts_cnt, count(c2.email) as trusted_contacts_cnt from invoices i join customers c on c.customer_id = i.user_id left join contacts con on con.user_id = c.customer_id left join customers c2 on c2.email = con.contact_email group by i.invoice_id, c.customer_name order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(con.user_id) as contacts_cnt, count(c2.email) as trusted_contacts_cnt from invoices i join customers c on c.customer_id = i.user_id left join contacts con on con.user_id = c.customer_id left join customers c2 on c2.email = con.contact_email group by i.invoice_id, c.customer_name, i.price order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(contacts.contact_name) contacts_cnt, count(c2.email) trusted_contacts_cnt from invoices i join customers c on i.user_id = c.customer_id left join contacts on contacts.user_id = i.user_id left join customers c2 on c2.email = contacts.contact_email group by i.invoice_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(ct.contact_email) as 'contacts_cnt', sum(case when ct.contact_email in (select distinct email from customers) then 1 else 0 end) as 'trusted_contacts_cnt' from invoices i left join customers c on i.user_id = c.customer_id left join contacts ct on ct.user_id = c.customer_id group by i.invoice_id,c.customer_name, i.price order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(ct.contact_name) as contacts_cnt, count(cc.email) as trusted_contacts_cnt from customers c inner join invoices i on c.customer_id = i.user_id left join contacts ct on c.customer_id = ct.user_id left join customers cc on cc.email = ct.contact_email group by 1,2,3 order by 1
select i.invoice_id, c.customer_name, i.price, count(distinct co.contact_email) as contacts_cnt, count(distinct c2.customer_id) as trusted_contacts_cnt from Invoices i inner join Customers c on c.customer_id = i.user_id left join Contacts co on c.customer_id = co.user_id left join Customers c2 on co.contact_name = c2.customer_name and co.contact_email = c2.email group by 1,2,3 order by 1
select i.invoice_id, c.customer_name, i.price, count(distinct co.contact_email) as contacts_cnt, sum(case when co.contact_email IN (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contacts co on i.user_id = co.user_id group by i.invoice_id order by 1
select i.invoice_id, c.customer_name, i.price, count(distinct con.contact_name) as contacts_cnt, count(distinct tc.customer_name) as trusted_contacts_cnt from Invoices i left join Customers c on i.user_id = c.customer_id left join Contacts con on c.customer_id = con.user_id left join Customers tc on con.contact_name = tc.customer_name group by i.invoice_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(distinct ct.contact_email) as contacts_cnt, count(distinct c2.email) as trusted_contacts_cnt from Invoices i join Customers c on i.user_id=c.customer_id left join Contacts ct on ct.user_id=c.customer_id left join Customers c2 on ct.contact_email=c2.email group by 1,2,3 order by 1
select i.invoice_id, c.customer_name, i.price, count(distinct ct.contact_name) as contacts_cnt, count(distinct cc.email) as trusted_contacts_cnt from invoices i inner join customers c on c.customer_id = i.user_id left join contacts ct on ct.user_id = c.customer_id left join customers cc on cc.email = ct.contact_email group by i.invoice_id, c.customer_name, i.price order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(distinct ct.contact_name) as contacts_cnt, count(distinct cc.email) as trusted_contacts_cnt from invoices i inner join customers c on i.user_id = c.customer_id left join contacts ct on ct.user_id= c.customer_id left join customers cc on cc.email = ct.contact_email group by i.invoice_id, c.customer_name, i.price order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(distinct t.contact_name) as contacts_cnt, sum(case when contact_name in (select distinct customer_name from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices as i join Customers as c on c.customer_id = i.user_id left join Contacts as t on c.customer_id = t.user_id group by i.invoice_id
select i.invoice_id, c.customer_name, i.price, count(distinct t.contact_name) as contacts_cnt, sum(case when t.contact_name in (select customer_name from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices i join Customers c on i.user_id = c.customer_id left join Contacts t on c.customer_id = t.user_id group by i.invoice_id
select i.invoice_id, c.customer_name, i.price, ifnull(agg.contacts_cnt,0) as contacts_cnt, ifnull(agg.trusted_contacts_cnt,0) trusted_contacts_cnt from invoices i left join (select ct.user_id, count(distinct contact_email) contacts_cnt, ifnull(count(distinct cu.customer_id),0) trusted_contacts_cnt from contacts ct left join customers cu on ct.contact_email = cu.email group by ct.user_id ) agg on i.user_id = agg.user_id left join customers c on i.user_id = c.customer_id order by invoice_id
select i.invoice_id, c.customer_name, i.price, ifnull(count(cn.contact_name),0) as contacts_cnt, sum(case when cn.contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices i left join customers c on c.customer_id = i.user_id left join contacts cn on c.customer_id = cn.user_id group by 1 order by 1
select i.invoice_id, c.customer_name, i.price, ifnull(count(co.contact_name ),0) as contacts_cnt, ifnull(count(case when co.contact_email in (select email from Customers) then 1 else null end) ,0) as trusted_contacts_cnt from Invoices i join Customers c on c.customer_id = i.user_id left join Contacts co on co.user_id = c.customer_id group by i.invoice_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price, ifnull(count(co.contact_name ),0) as contacts_cnt, ifnull(count(case when co.contact_email in (select email from Customers) then 1 else null end) ,0) as trusted_contacts_cnt from Invoices i join Customers c on c.customer_id = i.user_id left join Contacts co on co.user_id = i.user_id group by i.invoice_id order by i.invoice_id
select i.invoice_id, c.customer_name, i.price,count(ct.user_id) as contacts_cnt, sum(case when ct.contact_name in (select distinct customer_name from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices i left join Customers c on c.customer_id = i.user_id left join Contacts ct on i.user_id = ct.user_id group by i.invoice_id, c.customer_name, i.price order by i.invoice_id asc
select i.invoice_id, c.customer_name, price, count(t.user_id) contacts_cnt, count(distinct e.email) trusted_contacts_cnt from Invoices i join Customers c on i.user_id = c.customer_id left join Contacts t on t.user_id = c.customer_id left join Customers e on e.email = t.contact_email group by 1,2,3 order by 1
select i.invoice_id, c.customer_name, price, ifnull(c3.cnt1,0) as contacts_cnt, ifnull(c3.cnt2,0) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join (select c1.user_id, c1.cnt1, c2.cnt2 from (select user_id, count(user_id) as cnt1 from contacts group by user_id) c1 left join (select user_id, count(user_id) as cnt2 from contacts where contact_name in (select customer_name from customers) group by user_id) c2 on c1.user_id = c2.user_id) c3 on i.user_id = c3.user_id order by invoice_id
select i.invoice_id, c.customer_name, sum(i.price) as price, ifnull(fcnt,0) as contacts_cnt, ifnull(cfcnt,0) as trusted_contacts_cnt from customers c join invoices i on i.user_id = c.customer_id left join (select user_id, count(contact_email) as fcnt from contacts group by user_id) co on i.user_id = co.user_id left join ( select user_id, count(contact_email) as cfcnt from contacts where contact_email in (select email from customers) group by user_id ) sq on sq.user_id = i.user_id group by i.invoice_id, c.customer_name order by i.invoice_id
select i.invoice_id, c1.customer_name, i.price, coalesce(abc.ct,0) as contacts_cnt, coalesce(abc.tct,0) as trusted_contacts_cnt from invoices i left join ( select user_id, count(contact_name) as ct ,sum(trust) as tct from ( select user_id, (contact_name), case when contact_name in (select customer_name from customers) then 1 else 0 end as trust from customers c inner join contacts ct on c.customer_id = ct.user_id) a group by 1) abc on i.user_id = abc.user_id inner join customers c1 on c1.customer_id = i.user_id order by 1
select i.invoice_id, c1.customer_name, i.price, count(c.contact_name) as contacts_cnt, count(c2.email) as trusted_contacts_cnt from invoices as i left join customers as c1 on c1.customer_id = i.user_id left join contacts as c on i.user_id = c.user_id left join customers as c2 on c.contact_name = c2.customer_name group by 1,2,3 order by 1
select i.invoice_id, c1.customer_name, i.price, count(c2.contact_email) as contacts_cnt, sum(if(contact_email in (select distinct email from Customers),1,0)) as trusted_contacts_cnt from Invoices as i join Customers as c1 on c1.customer_id = i.user_id left join Contacts as c2 on c2.user_id = i.user_id group by 1 order by 1
select i.invoice_id, c1.customer_name, i.price, count(co.contact_email) as contacts_cnt, count(c2.email) as trusted_contacts_cnt from Invoices i left join Customers c1 on c1.customer_id = i.user_id left join Contacts co on co.user_id = c1.customer_id left join Customers c2 on c2.email = co.contact_email group by 1,2,3 order by 1
select i.invoice_id, c1.customer_name, i.price, count(co.contact_email) as contacts_cnt, count(c2.email) as trusted_contacts_cnt from Invoices i left join customers c1 on i.user_id = c1.customer_id left join contacts co on c1.customer_id = co.user_id left join customers c2 on co.contact_email = c2.email group by 1,2,3 order by 1
select i.invoice_id, c1.customer_name, i.price, ifnull(count(distinct c2.contact_name),0) as contacts_cnt, ifnull(count(distinct c_trust.customer_id),0) as trusted_contacts_cnt from invoices i left join customers c1 on i.user_id = c1.customer_id left join contacts c2 on c2.user_id = c1.customer_id left join customers c_trust on c_trust.email = c2.contact_email group by 1,2,3
select i.invoice_id, cu.customer_name, i.price, coalesce(b.contacts_cnt,0)contacts_cnt, coalesce(a.trusted_contacts_cnt,0)trusted_contacts_cnt from invoices i left join Customers cu on cu.customer_id=i. user_id left join(select user_id, count(contact_name)trusted_contacts_cnt from contacts where contact_name in(select customer_name from customers) group by user_id)a on i.user_id=a.user_id left join(select user_id, count(contact_name)contacts_cnt from contacts group by user_id)b on b.user_id=i.user_id order by invoice_id
select i.invoice_id, cu.customer_name, i.price, count(c.contact_name) as contacts_cnt, sum(case when c.contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices i left join contacts c using (user_id) left join customers cu on cu.customer_id = i.user_id group by 1 order by 1
select i.invoice_id, cu.customer_name, i.price, count(co.contact_name) "contacts_cnt", coalesce(tco.trusted_count, 0) "trusted_contacts_cnt" from invoices i left join customers cu on i.user_id = cu.customer_id left join contacts co on cu.customer_id = co.user_id left join (select user_id, count(contact_name) "trusted_count" from contacts where contact_email in (select distinct email from customers) group by user_id ) tco on tco.user_id = cu.customer_id group by 1, 2, 3 order by i.invoice_id
select i.invoice_id, cu.customer_name, i.price, count(co.contact_name) "contacts_cnt", coalesce(tco.trusted_count, 0) "trusted_contacts_cnt" from invoices i left join customers cu on i.user_id = cu.customer_id left join contacts co on cu.customer_id = co.user_id left join (select user_id, count(contact_name) "trusted_count" from contacts where contact_name in (select distinct customer_name from customers) group by user_id ) tco on tco.user_id = cu.customer_id group by 1, 2, 3 order by i.invoice_id
select i.invoice_id, cu.customer_name, i.price, count(distinct co.contact_name) contacts_cnt, sum(case when co.contact_email in (select email from Customers) then 1 else 0 end) trusted_contacts_cnt from Invoices i inner join Customers cu on i.user_id=cu.customer_id left join Contacts co on cu.customer_id=co.user_id group by i.invoice_id order by i.invoice_id
select i.invoice_id, cu.customer_name, i.price, count(list.c_email) as contacts_cnt, count(list.trusted_email) as trusted_contacts_cnt from invoices i left join (select co.user_id as contact_id, co.contact_email as c_email, cu.email as trusted_email from contacts co left join customers cu on cu.email = co.contact_email) list on i.user_id=list.contact_id left join customers cu on i.user_id=cu.customer_id group by i.invoice_id order by i.invoice_id asc
select i.invoice_id, cust.customer_name, i.price, count(distinct contacts.contact_name) as contacts_cnt, count(distinct trusted_cust.email) as trusted_contacts_cnt from invoices i join customers cust on i.user_id = cust.customer_id left outer join contacts on i.user_id = contacts.user_id left outer join customers trusted_cust on contacts.contact_email = trusted_cust.email group by 1, 2 , 3
select i.invoice_id, cust.customer_name,i.price, count(cont.user_id) as contacts_cnt, sum(case when cont.contact_name in (select distinct customer_name from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices i left join Customers cust on i.user_id = cust.customer_id left join Contacts cont on i.user_id = cont.user_id group by 1,2,3 order by i.invoice_id
select i.invoice_id, customer_name, i.price, count(co.user_id) as contacts_cnt, count(case when contact_email in (select email from customers) then contact_email end) trusted_contacts_cnt from invoices i left join customers cu on i.user_id=cu.customer_id left join contacts co on i.user_id=co.user_id group by 1,2,3 order by 1
select i.invoice_id, customer_name, i.price, count(cs.contact_email) as contacts_cnt, sum(if(cs.contact_email in (select email from customers), 1, 0)) as trusted_contacts_cnt from invoices i join customers c on i.user_id = c.customer_id left join contacts cs on c.customer_id = cs.user_id group by i.invoice_id, c.customer_name, i.price order by i.invoice_id
select i.invoice_id, min(cu.customer_name) as customer_name, min(i.price) as price, count(c.contact_name) as contacts_cnt, count(cu2.email) as trusted_contacts_cnt from invoices as i left join customers as cu on i.user_id = cu.customer_id left join contacts as c on i.user_id = c.user_id left join customers as cu2 on c.contact_name = cu2.customer_name group by i.invoice_id order by i.invoice_id
select i.invoice_id, t.customer_name, i.price, t.contacts_cnt, t.trusted_contacts_cnt from invoices i join (select c1.customer_id, c1.customer_name , count(distinct c.contact_email) as contacts_cnt, count(distinct c2.customer_id) as trusted_contacts_cnt from customers c1 left join contacts c on c1.customer_id = c.user_id left join customers c2 on c.contact_email = c2.email group by c1.customer_id) t on i.user_id = t.customer_id order by i.invoice_id
select i.invoice_id, t.customer_name, i.price, t.contacts_cnt, t.trusted_contacts_cnt from invoices i join (select c1.customer_id, c1.customer_name , count(distinct c.contact_email) as contacts_cnt, sum( case when c.contact_email in (select email from customers) then 1 else 0 end ) as trusted_contacts_cnt from customers c1 left join contacts c on c1.customer_id = c.user_id group by c1.customer_id)t on i.user_id = t.customer_id order by i.invoice_id
select i.invoice_id,c.customer_name,i.price, ifnull(count(distinct c1.contact_name),0) as contacts_cnt, ifnull(sum(case when contact_name in (select distinct(customer_name) from customers) then 1 else 0 end),0) as trusted_contacts_cnt from invoices i join customers c on c.customer_id=i.user_id left join contacts c1 on c.customer_id=c1.user_id group by i.invoice_id
select i.invoice_id,c.customer_name,i.price,count(con.user_id) as contacts_cnt,count(c2.email) as trusted_contacts_cnt from invoices i join customers c on c.customer_id = i.user_id left join contacts con on con.user_id = c.customer_id left join customers c2 on c2.email = con.contact_email group by i.invoice_id, c.customer_name, i.price order by i.invoice_id
select i.invoice_id,c1.customer_name,i.price, count(distinct c2.contact_name) as contacts_cnt, sum(case when c2.contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices i join Customers c1 on i.user_id=c1.customer_id left join Contacts c2 on c1.customer_id=c2.user_id group by 1
select i.invoice_id,c1.customer_name,i.price, count(distinct c2.contact_name) as contacts_cnt, sum(case when c2.contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices i join Customers c1 on i.user_id=c1.customer_id left join Contacts c2 on c1.customer_id=c2.user_id group by 1 order by 1
select i.invoice_id,c1.customer_name,i.price,count(distinct c2.contact_name) as contacts_cnt, sum(case when c2.contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices i left join Customers c1 on i.user_id=c1.customer_id left join Contacts c2 on c1.customer_id=c2.user_id group by 1 order by 1
select i.invoice_id,con.customer_name,i.price,con.contacts_cnt,con.trusted_contacts_cnt from Invoices i join (select c.customer_id,c.customer_name, count(b.contact_email)contacts_cnt,sum(case when b.contact_email in(select distinct email from Customers) then 1 else 0 end)as trusted_contacts_cnt from Customers c left join contacts b on c.customer_id=b.user_id group by c.customer_id)con on i.user_id=con.customer_id order by i.invoice_id
select inv.invoice_id as invoice_id, cus.customer_name as customer_name, inv.price as price, count(con.user_id) as contacts_cnt, count(cus1.customer_name) as trusted_contacts_cnt from invoices inv left join Customers cus on inv.user_id = cus.customer_id left join Contacts con on con.user_id = cus.customer_id left join Customers cus1 on cus1.customer_name = con.contact_name and cus1.email = con.contact_email group by 1 order by 1 asc
select inv.invoice_id, cus1.customer_name, inv.price, count(distinct con.contact_email) as contacts_cnt, count(distinct case when cus2.email is not null then con.contact_email end) as trusted_contacts_cnt from Invoices inv left join Customers cus1 on inv.user_id = cus1.customer_id left join Contacts con on inv.user_id = con.user_id left join Customers cus2 on con.contact_email = cus2.email group by 1,2,3 order by 1
select invoice_id, Cu.customer_name, I.price, coalesce(CC.contacts_cnt, 0) as contacts_cnt, coalesce(TCC.trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices as I left join Customers as Cu on I.user_id = Cu.customer_id left join (select user_id, count(*) as contacts_cnt from Contacts group by user_id) as CC on I.user_id = CC.user_id left join (select user_id, count(*) as trusted_contacts_cnt from Contacts where contact_email in (select email from Customers) group by user_id ) as TCC on I.user_id = TCC.user_id order by invoice_id
select invoice_id, Customers.customer_name ,price, coalesce(count(contact_email),0) as contacts_cnt, sum(case when c.customer_id is not null then 1 else 0 end) as trusted_contacts_cnt from Invoices inner join Customers on Invoices.user_id = Customers.customer_id left join Contacts on Customers.customer_id = Contacts.user_id left join Customers c on Contacts.contact_email = c.email group by invoice_id, Customers.customer_id order by 1
select invoice_id, b.customer_name, price, count(c.user_id) as contacts_cnt, count(b2.email) as trusted_contacts_cnt from invoices a left join customers b on a.user_id = b.customer_id left join contacts c on b.customer_id = c.user_id left join customers b2 on b2.email = c.contact_email group by 1 order by 1
select invoice_id, b.customer_name, price, count(case when c.contact_email is not null then c.contact_email else null end) as contacts_cnt, count(case when c.contact_email is not null and c.contact_email in (select distinct email from customers) then c.contact_email else null end) as trusted_contacts_cnt from invoices a inner join customers b on a.user_id=b.customer_id left join contacts c on a.user_id=c.user_id group by 1,2,3 order by 1
select invoice_id, c.customer_name, price, count(o.contact_email) contacts_cnt, sum(case when contact_email in (select email from customers) then 1 else 0 end )trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contacts o on c.customer_id = o. user_id group by i.invoice_id order by i.invoice_id
select invoice_id, c.customer_name, price, count(o.contact_name) contacts_cnt, count(a.email) trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contacts o on c.customer_id = o. user_id left join customers a on a.email = o.contact_email group by i.invoice_id, c.customer_name,i.price order by i.invoice_id
select invoice_id, c.customer_name, price, ifnull(count(distinct co.contact_email),0) contacts_cnt, sum(case when co.contact_email in (select email from Customers) then 1 else 0 end) trusted_contacts_cnt from Customers c left join Contacts co on c.customer_id = co.user_id join Invoices i on c.customer_id=i.user_id group by 1,2 order by 1,2
select invoice_id, c.customer_name, price,count(co.user_id) as contacts_cnt, count(e.email) as trusted_contacts_cnt from invoices i left join customers c on i.user_id=c.customer_id left join contacts co on c.customer_id=co.user_id left join Customers e on e.email = co.contact_email group by 1,2,3 order by 1
select invoice_id, c.customer_name,i.price ,a.contacts_cnt,ifnull(b.trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices as i left join customers as c on i.user_id=c.customer_id left join (select customer_name,count(user_id) as contacts_cnt from customers as cu left join Contacts as co on cu.customer_id=co.user_id group by customer_name) a on c.customer_name =a.customer_name left join (select customer_name,count(*) as trusted_contacts_cnt from customers as cu left join Contacts as co on cu.customer_id=co.user_id where contact_name in (select customer_name from customers) group by customer_name) b on a.customer_name=b.customer_name order by invoice_id asc
select invoice_id, customer_name , price , count(ct.user_id) as contacts_cnt , count(if(contact_name in (select customer_name from Customers ),1, null)) as trusted_contacts_cnt from customers C left join Contacts ct on C.customer_id = ct.user_id join Invoices I on C.customer_id = I.user_id group by i.invoice_id order by invoice_id
select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from ( select invoice_id, Invoices.user_id, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) trusted_contacts_cnt from Invoices left join (select user_id, count(user_id) as contacts_cnt from Contacts group by user_id) a on Invoices.user_id = a.user_id left join (select user_id, count(user_id) as trusted_contacts_cnt from Contacts, Customers where Customers.email = Contacts.contact_email group by user_id) b on Invoices.user_id = b.user_id order by invoice_id ) as combine left join Customers on combine.user_id = Customers.customer_id order by invoice_id
select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from invoices i left join (select customer_name, customer_id, count(user_id) as contacts_cnt, sum(ifnull((contact_email in (select email from customers))=1,0)) as trusted_contacts_cnt from customers c left join contacts o on c.customer_id=o.user_id group by customer_name, customer_id) t on i.user_id=t.customer_id order by invoice_id
select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from invoices join(select customers.customer_id, customers.customer_name, customers.email, ifnull(count(distinct con.contact_name), 0) as contacts_cnt, ifnull(count(distinct trust.email), 0) as trusted_contacts_cnt from customers left join contacts con on customers.customer_id = con.user_id left join customers trust on con.contact_name = trust.customer_name and con.contact_email = trust.email group by 1, 2, 3) x on invoices.user_id = x.customer_id order by 1
select invoice_id, customer_name, price, count(Contacts.user_id) as contacts_cnt, sum(case when Contacts.contact_name in (select customer_name from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices inner join Customers on Invoices.user_id = Customers.customer_id left join Contacts on Customers.customer_id = Contacts.user_id group by Invoices.invoice_id, customer_name order by Invoices.invoice_id
select invoice_id, customer_name, price, count(case when c.contact_email is not null then contact_email else null end) as contacts_cnt, count(case when c.contact_email in (select email from customers) then contact_email else null end) as trusted_contacts_cnt from invoices a inner join customers b on a.user_id=b.customer_id left join contacts c on a.user_id=c.user_id group by 1,2,3 order by 1
select invoice_id, customer_name, price, count(co.user_id) as contacts_cnt, sum(case when contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Invoices i left join Contacts co on i.user_id = co.user_id left join Customers cu on i.user_id = cu.customer_id group by invoice_id order by invoice_id
select invoice_id, customer_name, price, count(contact_email) contacts_cnt, ifnull(sum(contact_name in (select customer_name from customers)),0) trusted_contacts_cnt from invoices a left join customers b on a.user_id = b.customer_id left join contacts c on b.customer_id = c.user_id group by 1,2,3 order by 1
select invoice_id, customer_name, price, count(contact_email) contacts_cnt, sum(case when contact_name in (select customer_name from customers) then 1 else 0 end ) trusted_contacts_cnt from invoices a left join customers b on a.user_id = b.customer_id left join contacts c on b.customer_id = c.user_id group by 1,2,3 order by 1
select invoice_id, customer_name, price, count(contact_name) as contacts_cnt, sum(case when contact_name in (select customer_name from customers) then 1 else 0 end) as trusted_contacts_cnt from customers left join contacts on customers.customer_id=user_id join invoices on invoices.user_id=customers.customer_id group by invoice_id,customer_name order by invoice_id
select invoice_id, customer_name, price, count(contact_name) contacts_cnt, sum(trusted) trusted_contacts_cnt from invoices i left join (select c.customer_id, customer_name, contact_name, case when contact_name in (select customer_name from customers) then 1 else 0 end trusted from customers c left join contacts con on c.customer_id = con.user_id) temp on i.user_id = temp.customer_id group by invoice_id order by invoice_id
select invoice_id, customer_name, price, count(contacts.contact_email) contacts_cnt, sum(if(contacts.contact_email in (select customers.email from customers), 1, 0)) trusted_contacts_cnt from invoices left join customers on customers.customer_id=invoices.user_id left join contacts on contacts.user_id=customers.customer_id group by 1 order by 1
select invoice_id, customer_name, price, count(distinct contact_email) as contacts_cnt, sum(if(contact_email in (select email from Customers),1,0 )) as trusted_contacts_cnt from Invoices left join Customers on Invoices.user_id = Customers.customer_id left join Contacts using (user_id) group by invoice_id, customer_name, price order by invoice_id
select invoice_id, customer_name, price, count(distinct contact_name) contacts_cnt, sum(case when contact_name in (select distinct customer_name from Customers) then 1 else 0 end) trusted_contacts_cnt from Invoices i join Customers cs on cs.customer_id = i.user_id left join Contacts cn on cs.customer_id = cn.user_id group by 1
select invoice_id, customer_name, price, count(distinct(co.contact_name)) as contacts_cnt, sum(case when contact_name in ( select distinct(customer_name) from customers) then 1 else 0 end) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contacts co on co.user_id = c.customer_id group by invoice_id, customer_name, price order by invoice_id
select invoice_id, customer_name, price, ifnull(contact_cnt,0) as contacts_cnt, ifnull(trust_contact_cnt,0) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join (select user_id, count(contact_email) as contact_cnt from contacts group by user_id) t on i.user_id = t.user_id left join (select user_id, count(contact_email) as trust_contact_cnt from contacts where contact_email in (select email from customers) group by user_id) t2 on i.user_id = t2.user_id order by 1
select invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt, 0) as trusted_contacts_cnt from (select invoice_id, customer_name, price, user_id from Invoices a join Customers b on a.user_id = b.customer_id ) t1 left join (select user_id, count(*) as contacts_cnt, sum(case when contact_name in (select customer_name from Customers) then 1 else 0 end) as trusted_contacts_cnt from Contacts group by user_id) t2 on t1.user_id = t2.user_id order by invoice_id
select invoice_id, customer_name, price, ifnull(count(c.user_id),0) as contacts_cnt, ifnull(sum(case when c.contact_email in (select email from Customers) then 1 else 0 end),0) as trusted_contacts_cnt from Customers ct inner join Invoices i on i.user_id= ct.customer_id left join Contacts c on ct.customer_id= c.user_id group by 1,2,3 order by 1
select invoice_id, customer_name, price, ifnull(count(contact_name),0) contacts_cnt, sum(case when contact_name in (select customer_name from customers) then 1 else 0 end) trusted_contacts_cnt from invoices i join customers c on i.user_id = c.customer_id left join contacts con on i.user_id = con.user_id group by invoice_id, customer_name, price order by invoice_id
select invoice_id, customer_name,price,count(contact_email) as contacts_cnt, sum(if (contact_email in (select distinct email from Customers),1,0) )as trusted_contacts_cnt from customers c2 left join contacts c1 on c1.user_id=c2.customer_id join invoices i on i.user_id=c2.customer_id group by invoice_id order by invoice_id
select invoice_id, t2.customer_name, price, count(distinct t3.contact_name) as contacts_cnt, count(distinct t4.customer_name) as trusted_contacts_cnt from Invoices t1 left join Customers t2 on t1.user_id = t2.customer_id left join Contacts t3 on t1.user_id = t3.user_id left join Customers t4 on t3.contact_name = t4.customer_name group by 1,2,3
select invoice_id,cs.customer_name,price, count(c.contact_name) as contacts_cnt, count(c2.customer_name) as trusted_contacts_cnt from invoices join customers cs on invoices.user_id = cs.customer_id left join contacts c on cs.customer_id = c.user_id left join customers c2 on c2.customer_name = c.contact_name group by 1 order by 1
select invoice_id,customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices left join customers on invoices.user_id=customers.customer_id left join (select user_id, count(contact_name) as contacts_cnt from contacts group by user_id) sub on invoices.user_id=sub.user_id left join (select user_id, count(contact_name) as trusted_contacts_cnt from contacts where contact_name in (select customer_name from customers) group by user_id) sub2 on invoices.user_id=sub2.user_id order by invoice_id
select invoice_id,customer_name,price,ifnull(contacts_cnt,0) as contacts_cnt,ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices join Customers on Invoices.user_id=Customers.customer_id left join( select user_id as ci,count(distinct contact_email) as contacts_cnt,sum(case when contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Contacts group by ci ) t on Invoices.user_id=t.ci order by invoice_id
select invoice_id,customer_name,price,ifnull(count(contact_name),0) contacts_cnt, ifnull(sum(case when contact_email in (select email from Customers) then 1 else 0 end),0) as trusted_contacts_cnt from Invoices i left join Customers cu on i.user_id=cu.customer_id left join Contacts co using(user_id) group by 1,2,3 order by 1
select invoices.invoice_id ,customers.customer_name ,invoices.price ,count(contact_name) as contacts_cnt ,count(emails.email) as trusted_contacts_cnt from Invoices invoices left join Customers customers on invoices.user_id = customers.customer_id left join Contacts contacts on invoices.user_id = contacts.user_id left join Customers emails on emails.email = contacts.contact_email group by invoices.invoice_id,invoices.price,customers.customer_name order by invoice_id
select invoices.invoice_id, customers.customer_name, invoices.price, count(contacts.contact_name) as contacts_cnt, ifnull(sum(contact_name in (select customer_name from customers)),0) as trusted_contacts_cnt from invoices left join customers on invoices.user_id = customers.customer_id left join contacts on customers.customer_id = contacts.user_id group by 1,2,3 order by 1
select invoices.invoice_id, customers.customer_name, invoices.price, count(trusted_contacts.user_id) contacts_cnt, sum(ifnull(trusted_contacts.can_trust, 0)) trusted_contacts_cnt from invoices join customers on invoices.user_id = customers.customer_id left join ( select user_id, case when customers.customer_id is not null then 1 else 0 end can_trust from contacts left join customers on contacts.contact_name=customers.customer_name and contacts.contact_email = customers.email ) trusted_contacts on customers.customer_id = trusted_contacts.user_id group by invoices.invoice_id, invoices.user_id order by invoices.invoice_id
select t1.invoice_id, t2.customer_name, t1.price, ifnull(sum(t3.contacts_cnt),0) as contacts_cnt, ifnull(sum(t4.trusted_contacts_cnt),0) as trusted_contacts_cnt from invoices t1 join customers t2 on t1.user_id=t2.customer_id left join (select user_id, count(contact_email) as contacts_cnt from contacts group by 1) t3 on t1.user_id=t3.user_id left join (select user_id, count(contact_email) as trusted_contacts_cnt from contacts where contact_email in (select distinct email from customers) group by 1) t4 on t1.user_id=t4.user_id group by 1,2,3 order by 1
select t2.invoice_id, t1.customer_name, t2.price, ifnull(count(t3.user_id),0) as contacts_cnt, ifnull(sum(case when t3.contact_email in (select email from Customers) then 1 else 0 end), 0) as trusted_contacts_cnt from Customers as t1 join Invoices as t2 on t1.customer_id = t2.user_id left join Contacts as t3 on t1.customer_id = t3.user_id group by t2.invoice_id, t1.customer_name, t2.price order by t2.invoice_id
with CTE as ( select customer_id,customer_name,email, count(c.user_id) as contacts_cnt from customers left join Contacts c on c.user_id=customer_id group by customer_id,customer_name,email ), cte2 as( select customer_id,customer_name,email, contacts_cnt, count(tc.user_id) as trusted_contacts_cnt from cte left join Contacts tc on tc.user_id=cte.customer_id and tc.contact_email in (select email from customers) group by customer_id,customer_name,email ) select invoice_id,customer_name,price,contacts_cnt,trusted_contacts_cnt from invoices inner join cte2 on customer_id=user_id order by invoice_id
with Contact_ct as ( select user_id, count(distinct contact_name) as contacts_cnt, sum(case when contact_name in (select customer_name from Customers) then 1 else 0 end) as trusted_contacts_cnt from Contacts group by user_id ) select invoice_id, c1.customer_name, i.price, ifnull(c2.contacts_cnt, 0) as contacts_cnt, ifnull(trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices i left join Customers c1 on i.user_id = c1.customer_id left join Contact_ct c2 on c1.customer_id = c2. user_id order by invoice_id
with TC as ( select user_id, count(contact_name) as trusted_contacts_cnt from Contacts where contact_name in (select customer_name from Customers) group by user_id ), CC as ( select user_id, count(contact_name) as contacts_cnt from Contacts group by user_id ) select I.invoice_id, C.customer_name, I.price, ifnull(CC.contacts_cnt,0) as contacts_cnt, ifnull(TC.trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices as I left join Customers as C on I.user_id=C.customer_id left join CC on I.user_id=CC.user_id left join TC on I.user_id=TC.user_id order by I.invoice_id asc
with a as (select user_id, count(customer_name) trusted_contacts_cnt from Contacts co left join Customers cu on co.contact_name = cu.customer_name and co.contact_email = cu.email group by user_id), b as (select user_id, count(user_id) contacts_cnt from Contacts group by user_id) select invoice_id, customer_name, price, ifnull(contacts_cnt, 0) contacts_cnt, ifnull(trusted_contacts_cnt, 0) trusted_contacts_cnt from Invoices i left join Customers cu on cu.customer_id = i.user_id left join a on a.user_id = i.user_id left join b on b.user_id = i.user_id order by invoice_id
with a as( select i.invoice_id, c.customer_name, i.price, i.user_id from Customers c join Invoices i on c.customer_id = i.user_id), b as( select user_id, count(contact_name) as contacts_cnt from Contacts group by user_id), c as( select user_id, count(contact_name) as trusted_contacts_cnt from Contacts where contact_name in (select customer_name from Customers) group by user_id) select a.invoice_id, a.customer_name, a.price, ifnull(b.contacts_cnt, 0) as contacts_cnt, ifnull(c.trusted_contacts_cnt, 0) as trusted_contacts_cnt from a left join b on a.user_id = b.user_id left join c on a.user_id = c.user_id order by a.invoice_id
with a as(select user_id,ifnull(count(*),0) as contacts_ from contacts group by user_id) , b as (select user_id, ifnull(count(user_id),0) as trusted from contacts where contact_name in(select customer_name from customers) group by user_id) select invoice_id, customer_name, price, ifnull(contacts_,0) as contacts_cnt, ifnull(trusted,0) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join a on a.user_id = c.customer_id left join b on b.user_id = c.customer_id order by 1
with base as ( select i.invoice_id, i.price, c.customer_name, ct.contact_name, case when ct.contact_name IN (select customer_name from Customers) then 1 else 0 end as trusted from Invoices i left outer join Customers c on i.user_id = c.customer_id left outer join Contacts ct on c.customer_id = ct.user_id ) select invoice_id, customer_name, price, count(contact_name) as contacts_cnt, sum(trusted) as trusted_contacts_cnt from base group by 1,2,3 order by 1
with bb as (select a.user_id as id, count(b.customer_id) as trusted_contacts_cnt from Contacts as a left join Customers as b on a.contact_email = b.email group by a.user_id), aa as (select a.customer_id as id, a.customer_name, count(b.contact_name) as contacts_cnt from Customers as a left join Contacts as b on a.customer_id = b.user_id group by a.customer_id) select a.invoice_id, aa.customer_name, a.price, IFNULL(aa.contacts_cnt,0) as contacts_cnt, IFNULL(bb.trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices as a left join aa on a.user_id=aa.id left join bb on a.user_id=bb.id order by a.invoice_id
with cc as (select customer_id, customer_name, count(distinct contact_name) contacts_cnt from Customers a left join Contacts b on a.customer_id = b.user_id group by customer_id) , tcc as (select customer_id, count(distinct contact_name) trusted_contacts_cnt from Customers a left join Contacts b on a.customer_id = b.user_id where contact_name in (select customer_name from Customers) group by customer_id) select invoice_id, customer_name, price, contacts_cnt, ifnull(trusted_contacts_cnt, 0) trusted_contacts_cnt from Invoices a left join cc on a.user_id = cc.customer_id left join tcc on a.user_id = tcc.customer_id order by invoice_id
with cnt as ( select c.customer_name, c.customer_id, count(cn.user_id) as contacts_cnt from customers c left join contacts cn on c.customer_id=cn.user_id group by c.customer_id ), trust as ( select c.customer_name, c.customer_id, count(cn.contact_name) as trusted_contacts_cnt from customers c left join contacts cn on c.customer_id=cn.user_id where cn.contact_email in (select email from customers) group by c.customer_id ) select i.invoice_id, cnt.customer_name, i.price, ifnull(cnt.contacts_cnt,0) as contacts_cnt, ifnull(trust.trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices i left join cnt on i.user_id = cnt.customer_id left join trust on i.user_id = trust.customer_id order by invoice_id
with cnt as ( select t.user_id, count(*) contacts_cnt, sum(trusted) trusted_contacts_cnt from ( select ct.*, case when cm.email is null then 0 else 1 end trusted from contacts ct left join customers cm on ct.contact_email = cm.email ) t group by t.user_id ) select i.invoice_id, c.customer_name, i.price , coalesce(contacts_cnt, 0) contacts_cnt, coalesce(trusted_contacts_cnt, 0) trusted_contacts_cnt from invoices i join customers c on i.user_id = c.customer_id left join cnt on i.user_id = cnt.user_id order by i.invoice_id
with cnts as ( select user_id, count(*) as num from contacts group by 1 ), trusted_cnts as ( select c.user_id, count(cust.email) as trusted_count from contacts c left join customers cust on cust.email = c.contact_email group by 1 ) select i.invoice_id, con.customer_name, i.price, coalesce(c.num,0) as contacts_cnt, coalesce(t.trusted_count,0) as trusted_contacts_cnt from invoices i left join customers con on con.customer_id= i.user_id left join cnts c on c.user_id = i.user_id left join trusted_cnts t on t.user_id = i.user_id order by 1
with cont_count as( select user_id, count(*) as ct_count from contacts group by user_id ), trust_cont_count as( select ct.user_id,count(*) as trust_ct_count from contacts ct inner join customers cm on ct.contact_name=cm.customer_name and ct.contact_email=cm.email group by ct.user_id ) select i.invoice_id, c.customer_name, i.price,ifnull(c_ct.ct_count,0) as contacts_cnt, ifnull(t_ct.trust_ct_count,0) as trusted_contacts_cnt from invoices i inner join customers c on i.user_id=c.customer_id left join cont_count c_ct on i.user_id=c_ct.user_id left join trust_cont_count t_ct on i.user_id=t_ct.user_id order by i.invoice_id
with contactCnt as ( select cust.customer_id customer_id ,coalesce(count(contact.contact_email),0) as contacts_cnt from Customers cust left join Contacts contact on cust.customer_id = contact.user_id group by customer_id ) , trustContactCnt as ( select cust.customer_id customer_id ,coalesce(count(contact.contact_email),0) as contacts_cnt from Customers cust left join Contacts contact on cust.customer_id = contact.user_id and contact.contact_email in ( select email from Customers ) group by customer_id ) select invo.invoice_id as invoice_id ,cust.customer_name as customer_name ,coalesce(sum(invo.price),0) as price ,sum(contactcnt.contacts_cnt) as contacts_cnt ,sum(trustcontactcnt.contacts_cnt) as trusted_contacts_cnt from Customers cust join Invoices invo on invo.user_id = cust.customer_id join contactCnt contactcnt on contactcnt.customer_id = cust.customer_id join trustContactCnt trustcontactcnt on trustcontactcnt.customer_id = cust.customer_id group by cust.customer_id,invoice_id order by invoice_id
with contact_count as ( select cu.customer_id, count(*) as contacts_cnt from Customers cu join Contacts co on cu.customer_id = co.user_id group by cu.customer_id ), trusted_contact as ( select cu.customer_id, count(*) as trusted_contacts_cnt from Customers cu join (select * from Contacts where contact_email in (select distinct email from Customers)) co on cu.customer_id = co.user_id group by cu.customer_id ) select i.invoice_id, c.customer_name, i.price, coalesce(cc.contacts_cnt, 0) as contacts_cnt, coalesce(tc.trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices i join Customers c on i.user_id = c.customer_id left join contact_count cc on i.user_id = cc.customer_id left join trusted_contact tc on i.user_id = tc.customer_id order by i.invoice_id
with contact_info as (select user_id , count(contact_name) as contact_count , sum(contact_email in (select email from customers)) as trusted_count from contacts group by user_id) select i.invoice_id , c2.customer_name , i.price , ifnull(c1.contact_count,0) as contacts_cnt , ifnull(c1.trusted_count,0) as trusted_contacts_cnt from invoices i left join contact_info c1 on i.user_id = c1.user_id left join Customers c2 on c2.customer_id = i.user_id order by i.invoice_id asc
with contact_stats as (select x.user_id, count(distinct x.contact_name) as contacts_cnt, count(distinct b.customer_name) as trusted_contacts_cnt from Contacts x left join Customers b on x.contact_name = b.customer_name group by 1) select a.invoice_id, b.customer_name, a.price, ifnull(c.contacts_cnt,0) contacts_cnt, ifnull(c.trusted_contacts_cnt,0) trusted_contacts_cnt from Invoices a join Customers b on a.user_id = b.customer_id left join contact_stats c on a.user_id = c.user_id order by 1
with contacts_by_user as ( select user_id, count(1) as contacts_cnt, count(cu.email) as trusted_contacts_cnt from contacts c left join customers cu on c.contact_email = cu.email group by 1 ) select i.invoice_id , x.customer_name , i.price , coalesce(contacts_cnt, 0) as contacts_cnt, coalesce(trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices i left join contacts_by_user c on i.user_id = c.user_id left join Customers x on i.user_id = x.customer_id order by i.invoice_id
with contacts_by_user as ( select user_id, count(1) as contacts_cnt, count(cu.email) as trusted_contacts_cnt from contacts c left join customers cu on c.contact_email = cu.email group by 1 ) select invoice_id, cu.customer_name, price, coalesce(contacts_cnt, 0) as contacts_cnt, coalesce(trusted_contacts_cnt, 0) as trusted_contacts_cnt from invoices i left join customers cu on i.user_id = cu.customer_id left join contacts_by_user u on u.user_id = i.user_id order by 1
with contacts_cnt as ( select distinct user_id, count(contact_name) as contacts_cnt from contacts group by user_id), trusted_contacts_cnt as( select distinct co.user_id, count(cu.customer_name) as trusted_contacts_cnt from contacts co join customers cu on co.contact_name = cu.customer_name group by co.user_id) select i.invoice_id,c.customer_name, i.price, ifnull(co.contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices i left join customers c on i.user_id=c.customer_id left join contacts_cnt co on i.user_id= co.user_id left join trusted_contacts_cnt t on i.user_id= t.user_id order by i.invoice_id
with contacts_cnt as ( select user_id, count(*) as contacts_cnt from Contacts group by user_id ), trusted_contacts_cnt as ( select user_id, count(*) as trusted_contacts_cnt from Contacts where contact_email in ( select email from Customers ) group by user_id ) select i.invoice_id, c.customer_name, i.price, coalesce(cc.contacts_cnt, 0) as contacts_cnt, coalesce(tcc.trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices i inner join Customers c on c.customer_id = i.user_id left join contacts_cnt cc on cc.user_id = i.user_id left join trusted_contacts_cnt tcc on tcc.user_id = i.user_id order by i.invoice_id
with contacts_cnt as (select user_id, count(1) as contacts_cnt from contacts group by 1), trusted_contacts_cnt as (select user_id, sum((case when customer_name is NULL then 0 else 1 end)) as trusted_contacts_cnt from contacts left join customers on contacts.contact_name = customers.customer_name AND contacts.contact_email = customers.email group by 1) select I.invoice_id, C.customer_name, I.price, coalesce(CC.contacts_cnt,0) as contacts_cnt, coalesce(TCC.trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices I INNER JOIN customers C ON I.user_id = C.customer_id LEFT JOIN contacts_cnt CC ON C.customer_id = CC.user_id LEFT JOIN trusted_contacts_cnt TCC ON C.customer_id = TCC.user_id order by I.invoice_id
with contacts_lkp as ( select ct.*, case when cust_emails.email is not null then 1 else 0 end as is_trusted from contacts as ct left join ( select email from customers group by email ) as cust_emails on ct.contact_email = cust_emails.email ) , contact_info as ( select user_id, count(*) as contacts_cnt, sum(is_trusted) as trusted_contacts_cnt from contacts_lkp group by user_id ) select i.invoice_id, ct.customer_name, i.price, coalesce(ci.contacts_cnt, 0) as contacts_cnt, coalesce(ci.trusted_contacts_cnt, 0) as trusted_contacts_cnt from invoices as i inner join customers as ct on i.user_id = ct.customer_id left join contact_info as ci on i.user_id = ci.user_id order by invoice_id
with conts as ( select user_id, count(1) contacts_cnt, sum( case when customer_name is null then 0 else 1 end ) trusted_contacts_cnt from contacts con left join customers cus on con.contact_email = cus.email group by user_id ) select invoice_id, customer_name, i.price, case when contacts_cnt is null then 0 else contacts_cnt end contacts_cnt, case when trusted_contacts_cnt is null then 0 else trusted_contacts_cnt end trusted_contacts_cnt from invoices i left join conts c on i.user_id = c.user_id inner join customers cu on i.user_id = cu.customer_id order by invoice_id
with cte as ( Select distinct email from Customers ) Select i.invoice_id,c.customer_name, i.price, Count(co.user_id) as contacts_cnt, SUM(case when co.contact_email in (Select * from cte) then 1 else 0 end) as trusted_contacts_cnt From Invoices as i Left Join Customers as c On i.user_id = c.customer_id Left Join Contacts as co On c.customer_id = co.user_id Group By i.invoice_id Order By i.invoice_id
with cte as ( Select i1.*, o.contact_name from ( Select i.invoice_id, c1.customer_name, i.price,count(c.user_id) as 'contacts_cnt' ,i.user_id from Invoices i left join Contacts c on i.user_id = c.user_id inner join Customers c1 on i.user_id = c1.customer_id group by i.invoice_id ) i1 left join Contacts o on i1.user_id = o.user_id ) Select cte.invoice_id,cte.customer_name,cte.price,cte.contacts_cnt, count(c2.customer_id) as 'trusted_contacts_cnt' from cte left join customers c2 on cte.contact_name = c2.customer_name group by cte.invoice_id order by cte.invoice_id
with cte as ( select * from Contacts a left join Customers b on a.contact_name = b.customer_name ) select a.invoice_id, m.customer_name, a.price, ifnull(b.cnt,0) as contacts_cnt, ifnull(c.cnt,0) as trusted_contacts_cnt from Invoices a left join customers m on a.user_id=m.customer_id left join (select user_id, count(*) as cnt from cte group by user_id) b on a.user_id=b.user_id left join (select user_id, count(*) as cnt from cte where customer_id is not null group by user_id) c on b.user_id=c.user_id order by invoice_id
with cte as ( select c.user_id, count(c.contact_name) as 'contacts_cnt', sum(case when cust.customer_name IS NULL then 0 else 1 end) as 'trusted_contacts_cnt' from Contacts c left join Customers cust on c.contact_name = cust.customer_name group by 1 ) select i.invoice_id, cust.customer_name, i.price, ifnull(cte.contacts_cnt,0) as 'contacts_cnt', ifnull(cte.trusted_contacts_cnt,0) as 'trusted_contacts_cnt' from Invoices i left join Customers cust on i.user_id = cust.customer_id left join cte on cte.user_id = i.user_id order by 1 ASC
with cte as ( select c1.customer_id, c1.customer_name, ifnull(count(c2.user_id),0) as contacts_cnt, ifnull(count(c3.email),0) as trusted_contacts_cnt from Customers c1 left join Contacts c2 on (c1.customer_id = c2.user_id) left join Customers c3 on (c3.email = c2.contact_email) group by 1,2 ) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from Invoices i join cte on (i.user_id = cte.customer_id) order by 1
with cte as ( select c1.customer_id, max(c1.customer_name) customer_name,count(contact_name) as contacts_cnt, sum(case when contact_name in (select distinct customer_name from customers) then 1 else 0 end) trusted_contacts_cnt from contacts c right join customers c1 on c.user_id = c1.customer_id group by c1.customer_id ) select invoice_id,customer_name,price,contacts_cnt,trusted_contacts_cnt from invoices i join cte c on i.user_id=c.customer_id order by 1
with cte as ( select co.user_id, count(co.user_id) cnt, count(cu.customer_name) trusted_cnt from contacts co left join customers cu on co.contact_name = cu.customer_name group by 1) select i.invoice_id, c.customer_name, i.price, ifnull(cte.cnt, 0) contacts_cnt, ifnull(cte.trusted_cnt, 0) trusted_contacts_cnt from invoices i join customers c on i.user_id = c.customer_id left join cte on i.user_id = cte.user_id order by 1
with cte as ( select cust1.customer_id, cust1.customer_name, cust1.contact_name, cust1.contact_email from ( select cust.customer_id, cust.customer_name, c.contact_name, c.contact_email from customers cust left join contacts c on cust.customer_id=c.user_id ) cust1 ) select I.invoice_id, c.customer_name, I.price, temp.contacts_cnt, temp.trusted_contacts_cnt from invoices I inner join ( select A.customer_id, count(A.contact_name) as contacts_cnt, count(B.customer_id) as trusted_contacts_cnt from cte A left join customers B on A.contact_email=B.email group by A.customer_id ) temp on I.user_id = temp.customer_id inner join Customers c on I.user_id=c.customer_id order by I.invoice_id
with cte as ( select customer_id, customer_name, IFNULL(COUNT(contact_name),0) as contacts_cnt, SUM(CASE WHEN trusted = 'yes' THEN 1 ELSE 0 END) as trusted_contacts_cnt from (select cu.customer_id, cu.customer_name,co.contact_name, (CASE WHEN co.contact_name in (select customer_name from Customers) THEN 'yes' ELSE 'no' END) as trusted from Customers cu left join Contacts co on cu.customer_id = co.user_id) as t group by customer_name) select invoice_id, customer_name,price,contacts_cnt,trusted_contacts_cnt from Invoices i left join cte on i.user_id = cte.customer_id order by invoice_id asc
with cte as ( select customer_id, customer_name, count(co.user_id) as contacts_cnt, sum(case when co.contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from customers c left join contacts co on c.customer_id = co.user_id group by 1) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from cte c right join invoices i on c.customer_id = i.user_id order by invoice_id
with cte as ( select customer_id, customer_name, count(contact_name) as contacts_cnt, sum( case when c2.contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Customers c left join Contacts c2 on c.customer_id = c2.user_id group by customer_id ) select i.invoice_id, cte.customer_name, i.price, cte.contacts_cnt, cte.trusted_contacts_cnt from Invoices as i left join cte on cte.customer_id = i.user_id order by invoice_id
with cte as ( select customer_id,customer_name, count(user_id) as contacts_cnt, sum(case when c1.contact_email in (select distinct email from customers) then 1 else 0 end) as trusted_contacts_cnt from customers c2 left join contacts c1 on c1.user_id = c2.customer_id group by 1) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from invoices i inner join cte c on i.user_id = c.customer_id order by 1
with cte as ( select customer_id,customer_name, count(user_id) as contacts_cnt, sum(case when c1.contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from customers c2 left join contacts c1 on c1.user_id = c2.customer_id group by 1) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from invoices i inner join cte c on i.user_id = c.customer_id order by 1
with cte as ( select i.invoice_id , c.customer_name , user_id , i.price from Invoices i join Customers c on c.customer_id = i.user_id ), cte2 as( select user_id , count(distinct contact_name ) as contacts_cnt , count(distinct customer_name ) as trusted_contacts_cnt from Contacts c left join Customers cu on c.contact_name = cu.customer_name group by user_id ) select invoice_id,customer_name,price,ifnull (contacts_cnt,0) as contacts_cnt,ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from cte left join cte2 using(user_id) order by invoice_id asc
with cte as ( select i.invoice_id , c.customer_name , user_id , i.price from Invoices i join Customers c on c.customer_id = i.user_id ), cte2 as( select user_id , count(distinct contact_name ) as contacts_cnt ,count(distinct customer_name ) as trusted_contacts_cnt from Contacts c left join Customers cu on c.contact_name = cu.customer_name group by user_id ) select invoice_id,customer_name,price,coalesce (contacts_cnt,0) as contacts_cnt,coalesce (trusted_contacts_cnt,0) as trusted_contacts_cnt from cte left join cte2 using(user_id) order by invoice_id asc
with cte as ( select user_id, 1 as contact_cnt, case when contact_name in (select customer_name from Customers) then 1 else 0 end as trusted_contacts_cnt from Contacts ) select invoice_id, customer_name, price, ifnull(contacts_cnt, 0) as contacts_cnt, ifnull(trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices left join Customers on Invoices.user_id = Customers.customer_id left join ( select user_id, sum(contact_cnt) as contacts_cnt, sum(trusted_contacts_cnt) as trusted_contacts_cnt from cte group by user_id )t on Invoices.user_id = t.user_id order by invoice_id
with cte as ( select user_id, count(*) as contacts_cnt from Contacts group by 1), cte2 as ( select customer_id, count(b.contact_email) as trusted_contacts_cnt from Customers a left join Contacts b on a.customer_id = b.user_id and b.contact_email in (select email from Customers) group by 1 ) select invoice_id, customer_name, price, ifnull(contacts_cnt, 0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices x left join Customers y on x.user_id = y.customer_id left join cte i on x.user_id = i.user_id left join cte2 k on x.user_id = k.customer_id order by invoice_id
with cte as ( select user_id, count(*) as contacts_cnt, sum(trusted_contact) as trusted_contacts_cnt from ( select user_id, case when contact_email in (select email from Customers) then 1 else 0 end as trusted_contact from Contacts ) as a group by 1 ) select i.invoice_id, c.customer_name, i.price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices as i left join Customers as c on i.user_id = c.customer_id left join cte on i.user_id = cte.user_id order by 1
with cte as ( select user_id, count(contact_name) as contacts_cnt, sum(case when contacts.contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from contacts group by user_id) select invoice_id , customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join cte on cte.user_id = i.user_id order by invoice_id
with cte as (select c.customer_id, c.customer_name, sum(case when t.user_id is null then 0 else 1 end) as contacts_cnt, sum(case when t.contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from customers as c left join contacts as t on c.customer_id = t.user_id group by c.customer_id) select i.invoice_id, c.customer_name, i.price, c.contacts_cnt, c.trusted_contacts_cnt from invoices as i join cte as c on i.user_id = c.customer_id order by i.invoice_id
with cte as (select c.user_id, count(distinct contact_email) as contacts_cnt, sum(if(c1.email is not null, 1, 0)) as trusted_contacts_cnt from contacts c left join customers c1 on c.contact_email = c1.email group by c.user_id) select i.invoice_id, c.customer_name, i.price, ifnull(c1.contacts_cnt, 0) as contacts_cnt, ifnull(c1.trusted_contacts_cnt, 0) as trusted_contacts_cnt from invoices i left join customers c on c.customer_id = i.user_id left join cte c1 on c1.user_id = i.user_id order by i.invoice_id
with cte as (select customer_id, customer_name, count(b.user_id) as contacts_cnt, ifnull(sum(contact_email in (select distinct email from Customers)), 0) as trusted_contacts_cnt from Customers a left join Contacts b on a.customer_id = b.user_id group by customer_id) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from Invoices a left join cte b on a.user_id =b.customer_id order by 1
with cte as (select invoice_id, a.user_id as customer_id, customer_name, price from Invoices a left join Customers b on a.user_id = b.customer_id), cte1 as ( select a.customer_id, count(b.contact_name) as contacts_cnt from Customers a left join Contacts b on a.customer_id = b.user_id group by 1), cte2 as (select a.customer_id, count(b.contact_email) as trusted_contacts_cnt from Customers a left join Contacts b on a.customer_id = b.user_id where b.contact_email in (select email from Customers) group by 1) select invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from cte a left join cte1 b on a.customer_id = b.customer_id left join cte2 c on a.customer_id = c.customer_id order by invoice_id asc
with cte as (select invoice_id, customer_name, customer_id ,price, contact_email from Invoices inner join Customers on Invoices.user_id = Customers.customer_id left join Contacts on Customers.customer_id = Contacts.user_id) select a.invoice_id, a.customer_name, a.price, coalesce(count(contact_email),0) as contacts_cnt, count(b.customer_id) as trusted_contacts_cnt from cte a left join Customers b on a.contact_email = b.email group by 1, a.customer_id order by 1
with cte as (select invoice_id, customer_name, customer_id ,price, contact_email from Invoices inner join Customers on Invoices.user_id = Customers.customer_id left join Contacts on Customers.customer_id = Contacts.user_id) select a.invoice_id, a.customer_name, a.price, coalesce(count(contact_email),0) as contacts_cnt, sum(case when b.customer_id is not null then 1 else 0 end) as trusted_contacts_cnt from cte a left join Customers b on a.contact_email = b.email group by 1, a.customer_id order by 1
with cte as (select invoice_id, customer_name, price, customer_id from invoices a join customers c on c.customer_id = a.user_id ), cte1 as (select invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, user_id from cte left join(select user_id, count(user_id) as contacts_cnt from contacts group by user_id) b on cte.customer_id = b.user_id) select invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trust,0) as trusted_contacts_cnt from cte1 d left join (select user_id, count(user_id) as trust from contacts where contact_name in (select customer_name from customers ) group by user_id) b on d.user_id = b.user_id order by invoice_id asc
with cte as (select user_id, count(*) as ct,sum(case when contact_name in (select customer_name from Customers) then 1 else 0 end)as trusted from Contacts group by user_id) select i.invoice_id, cu.customer_name,i.price,ifnull(cte.ct,0)as contacts_cnt,ifnull(cte.trusted,0)as trusted_contacts_cnt from Invoices i left join Customers cu on i.user_id = cu.customer_id left join cte on i.user_id = cte.user_id order by 1
with cte as (select user_id, count(contact_name) as contact_cnt, count(customer_name) as trusted_contacts_cnt from contacts as ct left join customers as cm on contact_name = customer_name and contact_email = email group by user_id) select invoice_id, customer_name, price, ifnull(contact_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices as i join customers as c on i.user_id = c.customer_id left join cte on i.user_id = cte.user_id order by invoice_id
with cte as (select user_id, count(user_id) as contacts_cnt, count(cu.email) as trusted_contacts_cnt from contacts c left join customers cu on c.contact_email = cu.email group by user_id) select invoice_id, cu.customer_name, price, coalesce(contacts_cnt, 0) as contacts_cnt, coalesce(trusted_contacts_cnt, 0) as trusted_contacts_cnt from invoices i left join customers cu on i.user_id = cu.customer_id left join cte on cte.user_id = i.user_id order by invoice_id
with cte as( select user_id, count(contact_email) as contacts_cnt, sum(case when contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from contacts group by user_id) select invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices i left join cte on i.user_id = cte.user_id left join Customers c on i.user_id = c.customer_id order by invoice_id
with cte as( select user_id, count(contact_name) as contacts_cnt,count(cu.email) as trusted_contacts_cnt from Contacts c left join Customers cu on c.contact_email = cu.email group by user_id ) select invoice_id,customer_name,price,coalesce(contacts_cnt,0) as contacts_cnt,coalesce(trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices i left join Customers cu on i.user_id = cu.customer_id left join cte c on i.user_id = c.user_id order by invoice_id
with cte as( select user_id, customer_name, count(distinct contact_name) as contacts_cnt, sum(trusted_contact) as trusted_contacts_cnt from( select user_id, c2.customer_name, contact_name, if(c3.email is null,0,1) as trusted_contact from contacts c1 join customers c2 on c1.user_id = c2.customer_id left join customers c3 on c1.contact_email = c3.email ) sub group by user_id, customer_name ) select invoice_id, c.customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices i join customers c on i.user_id = c.customer_id left join cte on i.user_id = cte.user_id order by 1
with cte as(select i.invoice_id, i.user_id, i.price,c.customer_id, c.customer_name from Customers c join Invoices i on i.user_id = c.customer_id ), cte2 as (select user_id, count(distinct contact_name)as contacts_cnt , count(distinct customer_name) as trusted_contacts_cnt from Contacts cn left join Customers c on c.customer_name = cn.contact_name group by cn.user_id ) select invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt , ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from cte left join cte2 using (user_id) order by invoice_id
with cte1 as ( select a.* , b.* from Customers a left join Contacts b on a.customer_id = b.user_id ), customer_email as ( select distinct email from Customers ), cte3 as ( select customer_id,customer_name, count(user_id) as contacts_cnt, sum(case when contact_email in (select email from customer_email) then 1 else 0 end) as trusted from cte1 group by 1) select invoice_id, customer_name, price, contacts_cnt,trusted as trusted_contacts_cnt from cte3 as c right join Invoices i on c.customer_id = i.user_id order by invoice_id
with cte1 as ( select con.user_id, con.contact_name, case when cus.customer_name is null then 0 else 1 end as 'trusted' from Contacts con left join Customers cus on con.contact_name = cus.customer_name) select invoice_id, customer_name, price, count(contact_name) as 'contacts_cnt', coalesce(sum(trusted),0) as 'trusted_contacts_cnt' from Invoices a left join Customers b on a.user_id = b.customer_id left join cte1 c on b.customer_id = c.user_id group by invoice_id, customer_name, price order by invoice_id
with cte1 as ( select customer_id, count(distinct contact_name) as num1 from Customers join Contacts on Contacts.user_id = Customers.customer_id group by customer_id ), cte2 as ( select customer_id, count(distinct contact_name) as num2 from Customers join Contacts on Contacts.user_id = Customers.customer_id where contact_name in(select customer_name from Customers) group by customer_id ) select invoice_id, customer_name, price, COALESCE(cte1.num1,0) as contacts_cnt, COALESCE(cte2.num2,0) as trusted_contacts_cnt from Invoices left join Customers on Invoices.user_id = Customers.customer_id left join cte1 on Invoices.user_id = cte1.customer_id left join cte2 on Invoices.user_id = cte2.customer_id order by 1
with cte1 as ( select customer_id, count(user_id) as contacts_cnt from customers a join contacts b on a.customer_id = b.user_id group by customer_id), cte2 as ( select user_id, count(*) as trusted_contacts_cnt from contacts a join customers b on a.contact_name = b.customer_name group by user_id) select inv.invoice_id, cust.customer_name, inv.price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices inv join customers cust on inv.user_id = cust.customer_id left join cte1 on cust.customer_id = cte1.customer_id left join cte2 on cte1.customer_id = cte2.user_id order by inv.invoice_id
with cte1 as ( select user_id, count(contact_email) ct from contacts group by user_id ), cte2 as ( select user_id, count(contact_email) trusted_ct from contacts join customers on email=contact_email group by user_id ), cte3 as ( select m.customer_id, customer_name, ifnull(c1.ct, 0) ct, ifnull(c2.trusted_ct, 0) trusted_ct from customers m left join cte1 c1 on m.customer_id=c1.user_id left join cte2 c2 on m.customer_id=c2.user_id ) select invoice_id, customer_name, price, ct contacts_cnt, trusted_ct trusted_contacts_cnt from invoices join cte3 on user_id = customer_id order by 1
with cte1 as (select ct.user_id , count(*) contact_cnt, sum(case when c.customer_id is not null then 1 else 0 end) trusted_contacts_cnt from contacts ct left outer join customers c on ct.contact_name = c.customer_name and ct.contact_email = c.email group by ct.user_id ) select i.invoice_id invoice_id,c.customer_name customer_name,i.price price ,coalesce(cte1.contact_cnt,0) contacts_cnt, coalesce(cte1.trusted_contacts_cnt,0)trusted_contacts_cnt from invoices i join customers c on i.user_id = c.customer_id left outer join cte1 on c.customer_id = cte1.user_id order by invoice_id
with cte1 as (select user_id, count(customer_name) as trusted_contacts_cnt from Contacts c inner join Customers o on c.contact_name = o.customer_name and c.contact_email = o.email group by user_id), cte2 as (select invoice_id, count(c.user_id) as contacts_cnt from Invoices i inner join Contacts c on i.user_id = c.user_id group by invoice_id ) select i.invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices i left join Customers c on i.user_id = c.customer_id left join cte2 on i.invoice_id = cte2.invoice_id left join cte1 on cte1.user_id = i.user_id order by i.invoice_id
with cte_assemble as ( select invoice_id, cu.customer_name, price, count(contact_email) as contacts_cnt, sum( case when contact_email in (select email from Customers) then 1 else 0 end ) as trusted_contacts_cnt from Invoices as i join Customers as cu on i.user_id = cu.customer_id left join Contacts as cont on i.user_id = cont.user_id group by 1, 2, 3 order by 1 ) select * from cte_assemble
with cte_contacts as ( select user_id , count(contact_email) as contacts_cnt from contacts group by user_id ), cte_invoice as (select invoice_id,price,i.user_id, coalesce(contacts_cnt,0) as contacts_cnt from invoices i left join cte_contacts c on i.user_id = c.user_id), cte_trusted as ( select user_id,count(contact_email) as trusted_contacts_cnt from contacts c where contact_email in (select email from customers) group by user_id ) select invoice_id, c.customer_name,price,coalesce(contacts_cnt,0) as contacts_cnt ,coalesce(trusted_contacts_cnt,0) as trusted_contacts_cnt from cte_invoice ci left join customers c on ci.user_id = c.customer_id left join cte_trusted ct on ct.user_id = ci.user_id order by invoice_id
with cte_customer_invoice as (select i.invoice_id,c.customer_id,c.customer_name,i.price from Invoices i join customers c on i.user_id=c.customer_id), cte_total_contacts as (select user_id as customer_id,count(*)tot_contacts from contacts group by user_id), cte_trusted_contacts as (select user_id as customer_id,count(*) trusted_contacts from contacts c join customers cc on c.contact_name =cc.customer_name and c.contact_email=cc.email group by user_id), cte_contacts_merged as (select c.customer_id,tot_contacts as contacts_cnt ,coalesce(trusted_contacts,0)trusted_contacts_cnt from cte_total_contacts c left join cte_trusted_contacts cc on c.customer_id=cc.customer_id) select i.invoice_id,i.customer_name,i.price, coalesce(c.contacts_cnt,0)contacts_cnt,coalesce(c.trusted_contacts_cnt,0)trusted_contacts_cnt from cte_customer_invoice i left join cte_contacts_merged c on i.customer_id = c.customer_id order by invoice_id
with cte_join_contacts as ( select invoice_id, cu.customer_name, price, contact_name, contact_email from Invoices as i inner join Customers as cu on i.user_id = cu.customer_id left join Contacts as cont on i.user_id = cont.user_id ), cte_contacts_agg as ( select invoice_id, customer_name, price, count(contact_email) as contacts_cnt from cte_join_contacts group by 1, 2, 3 ), cte_trusted_contacts_agg as ( select invoice_id, c1.customer_name, price, count(contact_email) as trusted_contacts_cnt from cte_join_contacts as c1 join Customers as c2 on c1.contact_email = c2.email group by 1, 2, 3 ), cte_assemble as ( select c.invoice_id, c.customer_name, c.price, coalesce(contacts_cnt, 0) as contacts_cnt, coalesce(trusted_contacts_cnt, 0) as trusted_contacts_cnt from cte_contacts_agg as c left join cte_trusted_contacts_agg as tc on c.invoice_id = tc.invoice_id and c.customer_name = tc.customer_name order by 1 ) select * from cte_assemble
with cte_join_contacts as ( select invoice_id, cu.customer_name, price, contact_name, contact_email from Invoices as i join Customers as cu on i.user_id = cu.customer_id left join Contacts as cont on i.user_id = cont.user_id ), cte_contacts_agg as ( select invoice_id, customer_name, price, count(contact_email) as contacts_cnt from cte_join_contacts group by 1, 2, 3 ), cte_trusted_contacts_agg as ( select invoice_id, c1.customer_name, price, count(contact_email) as trusted_contacts_cnt from cte_join_contacts as c1 join Customers as c2 on c1.contact_email = c2.email group by 1, 2, 3 ), cte_assemble as ( select c.invoice_id, c.customer_name, c.price, coalesce(contacts_cnt, 0) as contacts_cnt, coalesce(trusted_contacts_cnt, 0) as trusted_contacts_cnt from cte_contacts_agg as c left join cte_trusted_contacts_agg as tc on c.invoice_id = tc.invoice_id and c.customer_name = tc.customer_name order by 1 ) select * from cte_assemble
with cte_join_contacts as ( select invoice_id, cu.customer_name, price, contact_name, contact_email from Invoices as i join Customers as cu on i.user_id = cu.customer_id left join Contacts as cont on i.user_id = cont.user_id ), cte_contacts_agg as ( select invoice_id, customer_name, price, count(contact_email) as contacts_cnt from cte_join_contacts group by 1, 2, 3 ), cte_trusted_contacts_agg as ( select invoice_id, c1.customer_name, price, count(contact_email) as trusted_contacts_cnt from cte_join_contacts as c1 join Customers as c2 on c1.contact_email = c2.email group by 1, 2, 3 ), cte_assemble as ( select c.invoice_id, c.customer_name, c.price, contacts_cnt as contacts_cnt, coalesce(trusted_contacts_cnt, 0) as trusted_contacts_cnt from cte_contacts_agg as c left join cte_trusted_contacts_agg as tc on c.invoice_id = tc.invoice_id and c.customer_name = tc.customer_name order by 1 ) select * from cte_assemble
with cte_join_contacts as ( select invoice_id, cu.customer_name, price, contact_name, contact_email from Invoices as i left join Customers as cu on i.user_id = cu.customer_id left join Contacts as cont on i.user_id = cont.user_id ), cte_contacts_agg as ( select invoice_id, customer_name, price, count(contact_email) as contacts_cnt from cte_join_contacts group by 1, 2, 3 ), cte_trusted_contacts_agg as ( select invoice_id, c1.customer_name, price, count(contact_email) as trusted_contacts_cnt from cte_join_contacts as c1 join Customers as c2 on c1.contact_email = c2.email group by 1, 2, 3 ), cte_assemble as ( select c.invoice_id, c.customer_name, c.price, coalesce(contacts_cnt, 0) as contacts_cnt, coalesce(trusted_contacts_cnt, 0) as trusted_contacts_cnt from cte_contacts_agg as c left join cte_trusted_contacts_agg as tc on c.invoice_id = tc.invoice_id and c.customer_name = tc.customer_name order by 1 ) select * from cte_assemble
with cust_contacts as( select customer_id, customer_name, count(distinct contact_name) as contacts_cnt from customers c left join contacts co on co.user_id = c.customer_id group by 1,2 ) , trusted_cust_contacts as( select customer_id, customer_name, count(distinct contact_name) as trusted_contacts_cnt from customers c left join contacts co on co.user_id = c.customer_id where exists ( select * from customers c1 where c1.customer_name = co.contact_name and c1.email = co.contact_email ) group by 1,2 ) select distinct invoice_id, cc.customer_name, i.price, cc.contacts_cnt, coalesce(tcc.trusted_contacts_cnt,0) trusted_contacts_cnt from invoices i left join cust_contacts cc on cc.customer_id = i.user_id left join trusted_cust_contacts tcc on tcc.customer_id = i.user_id order by 1
with customergroup as ( select a.customer_id, a.customer_name , count(b.user_id ) contacts_cnt , ifnull(c.countuser_id ,0) trusted_contacts_cnt from Customers a left join Contacts b on a.customer_id = b.user_id left join (select user_id as verifieduser, count(user_id) as countuser_id from Contacts a inner join Customers b on a.contact_email = b.email group by user_id) c on a.customer_id = c.verifieduser group by a.customer_id , a.customer_name ) select a.invoice_id , b.customer_name , a.price , b.contacts_cnt , b.trusted_contacts_cnt from Invoices a left join customergroup b on a.user_id = b.customer_id order by a.invoice_id
with e as ( select user_id, count(contact_email) as contacts_cnt, count(email) as trusted_contacts_cnt from contacts left join Customers on Customers.email= contacts.contact_email group by user_id ) select invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices left join customers on customers.customer_id= invoices.user_id left join e on e.user_id = invoices.user_id order by invoice_id
with info as (select c.customer_id, c.customer_name, sum(case when con.contact_email is not null then 1 else 0 end) as contacts_cnt, sum(case when c2.customer_id is not null then 1 else 0 end) as trusted_contacts_cnt from Customers c left join Contacts con on c.customer_id = con.user_id left join Customers c2 on con.contact_email = c2.email group by 1) select i.invoice_id, b.customer_name, i.price, b.contacts_cnt, b.trusted_contacts_cnt from Invoices i join info b on i.user_id = b.customer_id order by 1
with price as( select invoice_id, customer_name, price, user_id from customers as c right join invoices as i on c.customer_id = i.user_id group by invoice_id order by invoice_id), contact_cnt as( select c.customer_id, ifnull(count(contact_name),0) as contacts_cnt from customers as c left join contacts as co on c.customer_id = co.user_id group by user_id), trusted as( select user_id, contact_name, ifnull(count(contact_name),0) as trusted_contacts_cnt from contacts where contact_name in(select customer_name from customers) group by user_id) select invoice_id, customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from price as p left join contact_cnt as cc on p.user_id = cc.customer_id left join trusted as t on p.user_id = t.user_id
with t as (select c.user_id, count(*) as contacts_cnt, count(cm.customer_name) as trusted_contacts_cnt from Contacts c left join Customers as cm on c.contact_name = cm.customer_name and c.contact_email = cm.email group by c.user_id) select invoice_id, c.customer_name, price,ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices as i left join t on i.user_id = t.user_id inner join Customers as c on c.customer_id = i.user_id order by invoice_id
with t as( select user_id, count(contact_email) as contacts_cnt, sum(case when contact_email in (select email from Customers) then 1 else 0 end) as trusted_contacts_cnt from Contacts group by user_id) select i.invoice_id, cus.customer_name, i.price, ifnull(t.contacts_cnt, 0) as contacts_cnt, ifnull(t.trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices i left join Customers cus on i.user_id = cus.customer_id left join t on i.user_id = t.user_id order by 1
with t1 as ( select user_id, count(*) as contacts_cnt from contacts group by 1 ), t2 as ( select user_id, count(*) as trusted_contacts_cnt from contacts where contact_email in (select email from customers) group by 1 ) select a.invoice_id, b.customer_name, a.price, ifnull(t1.contacts_cnt, 0) as contacts_cnt, ifnull(t2.trusted_contacts_cnt, 0) as trusted_contacts_cnt from invoices a join customers b on a.user_id = b.customer_id left join t1 on a.user_id = t1.user_id left join t2 on a.user_id = t2.user_id order by 1
with t1 as ( select user_id, count(*) as contacts_cnt, sum(trusted_flag) as trusted_contacts_cnt from (select a.*, case when b.customer_name is not null then 1 else 0 end as trusted_flag from Contacts a left join Customers b on a.contact_name=b.customer_name and a.contact_email=b.email) c group by user_id ) select a.invoice_id,b.customer_name, a.price, coalesce(c.contacts_cnt,0) as contacts_cnt , coalesce(c.trusted_contacts_cnt,0) as trusted_contacts_cnt from Invoices a left join Customers b on a.user_id=b.customer_id left join t1 c on a.user_id=c.user_id order by a.invoice_id
with t1 as (select customer_id, customer_name, count(contact_email) as cnt1 from customers a left join contacts b on a.customer_id = b.user_id group by 1), t2 as (select customer_id, ifnull(cnt2, 0) as cnt2 from customers a left join (select user_id, count(contact_email) as cnt2 from contacts where (contact_name, contact_email) in (select customer_name, email from customers) group by 1) b on a.customer_id = b.user_id) select invoice_id, customer_name, price, cnt1 as contacts_cnt, cnt2 as trusted_contacts_cnt from invoices a join t1 on a.user_id = t1.customer_id join t2 on a.user_id = t2.customer_id order by 1
with t1 as (select i.invoice_id, c.customer_name, i.price, c.customer_id from Invoices i right join Customers c ON i.user_id = c.customer_id), t2 as ( select c.customer_id, count(d.user_id) as contacts_cnt, sum(case when d.contact_email IN (SELECT c1.email from Customers c1) then 1 else 0 end) as trusted_contacts_cnt from Customers c INNER JOIN Contacts d ON d.user_id = c.customer_id group by 1 ) select t1.invoice_id, t1.customer_name, t1.price, ifnull(t2.contacts_cnt,0) as contacts_cnt, ifnull(t2.trusted_contacts_cnt,0) as trusted_contacts_cnt from t1 left join t2 on t1.customer_id = t2.customer_id where t1.invoice_id is not null order by 1
with t1 as (select invoice_id, b.user_id, customer_name, price, customer_id from customers a join invoices b on a.customer_id = b.user_id ), t2 as (select user_id, count(contact_name)as relates, sum(case when contact_name in (select customer_name from customers) then 1 else 0 end) as trusts from contacts group by user_id) select invoice_id,t1.customer_name,price,ifnull(relates,0) as contacts_cnt,ifnull(trusts,0) as trusted_contacts_cnt from t1 left join t2 on t1.customer_id=t2.user_id order by invoice_id
with t1 as (select invoice_id,customer_id,customer_name,price from invoices a left join customers b on a.user_id=b.customer_id), t2 as (select user_id, count(contact_name) relates,count(case when contact_name in (select customer_name from customers) then 1 end) as trusts from contacts group by user_id) select invoice_id,t1.customer_name,price,ifnull(relates,0) as contacts_cnt,ifnull(trusts,0) as trusted_contacts_cnt from t1 left join t2 on t1.customer_id=t2.user_id order by invoice_id
with t1 as (select user_id, count(distinct(contact_email)) as contacts_cnt from contacts group by 1), t2 as (select user_id, count(distinct(contact_email)) as trusted_contacts_cnt from contacts where contact_email in (select email from customers) group by 1) select invoice_id, customer_name, price, ifnull(contacts_cnt, 0) as contacts_cnt, ifnull(trusted_contacts_cnt, 0) as trusted_contacts_cnt from invoices a join customers b on a.user_id = b.customer_id left join t1 on a.user_id = t1.user_id left join t2 on a.user_id = t2.user_id order by 1
with t1 as (select user_id, count(user_id) as f1 from Contacts group by user_id), t2 as (select user_id, count(user_id) as f2 from contacts con inner join Customers as cus on cus.customer_name =con.contact_name and con.contact_email = cus.email group by user_id) select i.invoice_id, c.customer_name, i.price, ifnull(t1.f1,0) as contacts_cnt, ifnull(t2.f2,0) as trusted_contacts_cnt from invoices i join customers c on c.customer_id = i.user_id left join t1 on t1.user_id = i.user_id left join t2 on t2.user_id = i.user_id order by invoice_id
with t1 as( select ct.user_id,count(ct.contact_name) as contacts_cnt, count(c.email) as trusted_contacts_cnt from contacts ct left join customers c on ct.contact_email = c.email group by 1 ), t2 as ( select c.customer_id,c.customer_name, i.invoice_id,i.price from customers c inner join invoices i on i.user_id = c.customer_id) select t2.invoice_id,t2.customer_name,t2.price, ifnull(t1.contacts_cnt,0) as contacts_cnt, ifnull(t1.trusted_contacts_cnt,0) as trusted_contacts_cnt from t2 left join t1 on t2.customer_id= t1.user_id order by 1
with tb1 as( select user_id, contact_name, contact_email,case when contact_email in (select email from Customers) then 1 else 0 end as trustContactFlag from Contacts ), tb2 as ( select C2.customer_id, C2.customer_name, count(C1.contact_email) contacts_cnt, ifnull(sum(C1.trustContactFlag),0) trusted_contacts_cnt from tb1 C1 right join Customers C2 on C1.user_id=C2.customer_id group by C2.customer_id ) select invoice_id,C.customer_name, price,C.contacts_cnt, C.trusted_contacts_cnt from Invoices as I left join tb2 as C on I.user_id=C.customer_id order by invoice_id
with tem as( select user_id, contact_name, contact_email, case when contact_email in (select email as contact_email from customers) then 1 else 0 end as trusted_contact from contacts), tem1 as( select a.*, b.* from customers a left join tem b on a.customer_id = b.user_id ), tem2 as ( select user_id, customer_id, customer_name, count(contact_email) as contacts_cnt, sum(trusted_contact) as trusted_contacts_cnt from tem1 group by customer_name ) select a.invoice_id, b.customer_name, a.price, coalesce(b.contacts_cnt,0) as contacts_cnt, coalesce(b.trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices a left join tem2 b on a.user_id = b.customer_id order by invoice_id
with temp as ( select Invoices.user_id as user_id,invoice_id,customer_name,price,(select count(contact_email) from Contacts where Contacts.user_id=Invoices.user_id) as contacts_cnt from Invoices inner join Customers on Invoices.user_id=Customers.customer_id order by 1 ) , temp2 as( select user_id, count(distinct email) as trusted_contacts_cnt from Contacts inner join Customers on Contacts.contact_name=Customers.customer_name and Contacts.contact_email=Customers.email group by 1 ) select invoice_id,customer_name,price,contacts_cnt,coalesce(trusted_contacts_cnt,0) as trusted_contacts_cnt from temp left outer join temp2 on temp.user_id=temp2.user_id order by 1
with temp as ( select customer_id, customer_name, ifnull(count(contact_name),0) as contacts_cnt ,sum(if(contact_name in (select customer_name from customers), 1, 0)) as trusted_contacts_cnt from customers c left join contacts c2 on c.customer_id=c2.user_id group by customer_id ) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from temp join invoices i on temp.customer_id=i.user_id order by 1
with temp as ( select user_id , count(distinct contact_name) as contacts_cnt, count(distinct customer_name) as trusted_contacts_cnt from Contacts co left join Customers cu on co.contact_name = cu.customer_name group by user_id) SELECT invoice_id, customer_name, price, ifnull(contacts_cnt , 0) as contacts_cnt, ifnull(trusted_contacts_cnt , 0) as trusted_contacts_cnt from Invoices i left join temp t on i.user_id = t.user_id join customers cu on cu.customer_id = i.user_id order by 1
with temp as( select C1.customer_id, C1.customer_name, count(C2.contact_name) as contacts_cnt, sum(case when C2.contact_email in (select email from Customers C1) then 1 else 0 end) as trusted_contacts_cnt from Customers C1 left join Contacts C2 on C1.customer_id = C2.user_id group by C1.customer_id) select I.Invoice_id, temp.customer_name, I.price, temp.contacts_cnt, temp.trusted_contacts_cnt from Invoices I join temp on I.user_id = temp.customer_id order by invoice_id
with temp as(select c.customer_name, count(*) as trusted_contacts_cnt from customers as c left join contacts on c.customer_id = contacts.user_id where contact_name in (select customer_name from customers) group by c.customer_id ), temp2 as (select user_id, count(*) as contacts_cnt from customers as c join contacts on c.customer_id = contacts.user_id group by user_id ) select distinct invoice_id, c.customer_name, price, ifnull(contacts_cnt,0) as contacts_cnt, ifnull(trusted_contacts_cnt,0) as trusted_contacts_cnt from invoices as i left join customers as c on i.user_id=c.customer_id left join contacts on contacts.user_id = c.customer_id left join temp on c.customer_name = temp.customer_name left join temp2 on c.customer_id = temp2.user_id order by invoice_id
with temp1 as (select user_id, count(*) contacts_cnt from contacts group by 1), temp2 as (select user_id, count(*) as trusted_contacts_cnt from contacts where contact_email in (select email from customers) group by 1), temp3 as (select t1.user_id, ifnull(t1.contacts_cnt, 0) contacts_cnt, ifnull(t2.trusted_contacts_cnt,0) trusted_contacts_cnt from temp1 t1 left join temp2 t2 on t1.user_id=t2.user_id) select invoice_id, c.customer_name, price, ifnull(contacts_cnt,0) contacts_cnt, ifnull(trusted_contacts_cnt,0) trusted_contacts_cnt from invoices i left join temp3 t on i.user_id=t.user_id join customers c on i.user_id=c.customer_id order by 1
with tmp as ( select a.user_id, count(distinct a.contact_email) contacts_cnt, sum(if(b.email is null, 0, 1)) trusted_contacts_cnt from Contacts a left join Customers b on a.contact_email = b.email group by a.user_id ) select a.invoice_id, c.customer_name, a.price, ifnull(contacts_cnt, 0) contacts_cnt, ifnull(trusted_contacts_cnt, 0) trusted_contacts_cnt from Invoices a left join tmp b on a.user_id = b.user_id join Customers c on a.user_id = c.customer_id order by invoice_id
with tmp as (select user_id, count(b.customer_name) as trusted_contacts_cnt, count(contact_name) as contacts_cnt from contacts a left join customers b on a.contact_email = b.email group by user_id), tmp1 as (select customer_id, customer_name, ifnull(trusted_contacts_cnt, 0) as trusted_contacts_cnt, ifnull(contacts_cnt, 0) as contacts_cnt from customers a left join tmp b on customer_id = user_id) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from invoices a left join tmp1 b on user_id = customer_id order by invoice_id
with tmp as( select customer_id, customer_name, count(contact_email) as contacts_cnt, sum(case when contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from customers left join contacts on customer_id = user_id group by customer_id, customer_name ) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from invoices join tmp on user_id = customer_id order by 1
with tmp as( select user_id, count(*) as contacts_cnt, sum(case when contact_email in (select email from customers) then 1 else 0 end) as trusted_contacts_cnt from contacts group by user_id ) select invoice_id, customer_name, price, ifnull(contacts_cnt, 0 ) as contacts_cnt, ifnull(trusted_contacts_cnt, 0) as trusted_contacts_cnt from (invoices join customers on user_id = customer_id) left join tmp on customer_id = tmp.user_id order by 1
with tmp_table1 as (select email from Customers) select invoice_id, max(customer_name) as customer_name, max(price) as price, count(distinct(contact_email)) as contacts_cnt, sum(case when contact_email in (select * from tmp_table1) then 1 else 0 end) as trusted_contacts_cnt from ( select a.invoice_id, b.customer_name, a.price, c.contact_email from Invoices a left join Customers b on a.user_id = b.customer_id left join Contacts c on b.customer_id = c.user_id ) d group by invoice_id order by invoice_id
with trust as ( select Con.user_id, count(Con.contact_email) as contacts_cnt, count(Cus.email) as trusted_contacts_cnt from Contacts Con LEFT JOIN Customers Cus on Cus.email = Con.contact_email group by Con.user_id) select invoice_id, customer_name, price, coalesce(T.contacts_cnt,0) contacts_cnt, coalesce(T.trusted_contacts_cnt,0) trusted_contacts_cnt from Invoices I JOIN Customers C on I.user_id = C.customer_id LEFT JOIN trust T on I.user_id = T.user_id order by invoice_id
with trust as ( select co.*, case when cu.email is not null then 1 else 0 end as trust_ind from contacts co left join customers cu on co.contact_email = cu.email ), cte as ( select cu.customer_id, cu.customer_name, count(contact_email) as contacts_cnt, ifnull(sum(t.trust_ind),0) as trusted_contacts_cnt from customers cu left join trust t on cu.customer_id = t.user_id group by 1, 2 ) select invoice_id, customer_name, price, contacts_cnt, trusted_contacts_cnt from invoices i left join cte on i.user_id = cte.customer_id order by invoice_id
with trust as ( select user_id, count(*) as trust from contacts where contact_email in (select email from Customers) group by user_id), contact_cnt as ( select c.customer_id, c.customer_name, count(ct.user_id) as contacts_cnt from customers c right join contacts ct on c.customer_id = ct.user_id group by c.customer_id) select i.invoice_id, c.customer_name, i.price, coalesce(cc.contacts_cnt, 0) as contacts_cnt, coalesce(t.trust, 0) as trusted_contacts_cnt from invoices i left join customers c on i.user_id = c.customer_id left join contact_cnt cc on i.user_id = cc.customer_id left join trust t on i.user_id = t.user_id order by i.invoice_id
with trusted as( select user_id, count(distinct contact_name) as trust from contacts where contact_name in (select customer_name from customers) group by user_id ), contact as ( select distinct c.user_id,count(distinct c.contact_name) as contacts_cnt,cus.customer_name from contacts as c right join customers as cus on c.user_id = cus.customer_id group by c.user_id ) select invoice_id, customers.customer_name, price, ifnull(contact.contacts_cnt,0) as contacts_cnt, ifnull(trust,0) as trusted_contacts_cnt from invoices as inv left join contact on inv.user_id = contact.user_id left join trusted on inv.user_id = trusted.user_id left join customers on inv.user_id = customers.customer_id order by invoice_id
with trusted_con as ( select co.user_id, count(*) trusted_contacts_cnt from contacts co join customers cu on co.contact_email = cu.email group by 1 ), con as ( select user_id, count(*) contacts_cnt from contacts group by 1 ) select invoice_id, c.customer_name, price, ifnull(con.contacts_cnt,0) contacts_cnt, ifnull(trusted_con.trusted_contacts_cnt, 0) trusted_contacts_cnt from invoices i join customers c on i.user_id = c.customer_id left join con on i.user_id = con.user_id left join trusted_con on i.user_id = trusted_con.user_id order by 1
with trusted_contacts as ( select ct.user_id,count(ct.contact_email) contacts_cnt, count(c.email) as trusted_contacts_cnt from contacts ct left join customers c on ct.contact_email = c.email group by 1 ) select i.invoice_id, c.customer_name, i.price, coalesce(t.contacts_cnt, 0) as contacts_cnt, coalesce(t.trusted_contacts_cnt, 0) as trusted_contacts_cnt from Invoices as i left join trusted_contacts as t on i.user_id = t.user_id join Customers as c on i.user_id = c.customer_id order by i.invoice_id
with trusted_contacts as (select t1.customer_id, count(t2.user_id) trusted_contacts_cnt from customers t1 left join (select user_id, contact_name, contact_email from contacts where (contact_name, contact_email) in (select customer_name, email from customers) )t2 on t1.customer_id = t2.user_id group by t1.customer_id), customer_contacts as (select t1.customer_id, t1.customer_name, count(t2.user_id) contacts_cnt from customers t1 left join contacts t2 on t1.customer_id = t2.user_id group by t1.customer_id) select t1.invoice_id, t2.customer_name, t1.price, t2.contacts_cnt , t3.trusted_contacts_cnt from invoices t1 left join customer_contacts t2 on t1.user_id = t2.customer_id left join trusted_contacts t3 on t1.user_id = t3.customer_id order by 1
with u as (select t.customer_id, t.customer_name, count(t.contact_name) as contacts_cnt, coalesce(sum(if(t.contact_email in (select email from customers), 1, 0))) as trusted_contacts_cnt from (select c.customer_id, c.customer_name, c.email, c1.contact_name, c1.contact_email from customers c left join contacts c1 on c.customer_id=c1.user_id) as t group by t.customer_id, t.customer_name ) select i.invoice_id, u.customer_name, i.price, u.contacts_cnt, u.trusted_contacts_cnt from invoices i join u on i.user_id= u.customer_id order by invoice_id
with u as (select t.customer_id, t.customer_name, count(t.contact_name) as contacts_cnt, sum(if(t.contact_email in (select email from customers), 1, 0)) as trusted_contacts_cnt from (select c.customer_id, c.customer_name, c.email, c1.contact_name, c1.contact_email from customers c left join contacts c1 on c.customer_id=c1.user_id) as t group by t.customer_id, t.customer_name ) select i.invoice_id, u.customer_name, i.price, u.contacts_cnt, u.trusted_contacts_cnt from invoices i join u on i.user_id= u.customer_id order by invoice_id
with x as ( select user_id, count(distinct contact_name) as contacts_cnt from contacts group by 1 ), y as ( select user_id, count(distinct contact_name) as trusted_contacts_cnt from contacts where contact_name in (select customer_name from customers) group by 1 ) select invoice_id, customer_name, price, case when contacts_cnt is null then 0 else contacts_cnt end as contacts_cnt, case when trusted_contacts_cnt is null then 0 else trusted_contacts_cnt end as trusted_contacts_cnt from invoices left join customers on invoices.user_id = customers.customer_id left join x on invoices.user_id = x.user_id left join y on invoices.user_id = y.user_id order by 1
