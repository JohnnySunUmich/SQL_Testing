SELECT BUSINESS_ID FROM ( SELECT EVENT_TYPE, AVG(OCCURENCES) AS AVERAGE_OCC FROM EVENTS GROUP BY EVENT_TYPE) AS CTE JOIN EVENTS E2 ON CTE.EVENT_TYPE = E2.EVENT_TYPE WHERE E2.OCCURENCES > CTE.AVERAGE_OCC GROUP BY BUSINESS_ID HAVING COUNT(DISTINCT CTE.EVENT_TYPE) > 1
SELECT DISTINCT Events.business_id FROM Events JOIN (SELECT event_type,AVG(occurences)AS mean FROM Events GROUP BY event_type) AS t ON t.event_type = Events.event_type AND occurences > mean GROUP BY business_id HAVING COUNT(business_id) >1
SELECT DISTINCT a.business_id FROM (SELECT business_id, event_type, occurences, AVG(occurences) OVER(PARTITION BY event_type) AS mean FROM Events) a WHERE a.occurences > a.mean GROUP BY a.business_id HAVING COUNT(DISTINCT a.event_type) > 1
SELECT DISTINCT business_id FROM ( SELECT business_id, event_type FROM ( SELECT business_id, event_type, occurences, SUM(occurences) OVER (PARTITION BY event_type)/ COUNT(event_type) OVER(PARTITION BY event_type) AS average FROM Events ) res1 WHERE occurences > average ) res2 GROUP BY 1 HAVING COUNT(event_type) > 1
SELECT DISTINCT business_id FROM (SELECT *, (SUM(occurences) OVER (PARTITION BY event_type)) / (COUNT(event_type) OVER (PARTITION BY event_type)) AS 'average' FROM Events) AS t WHERE occurences > average GROUP BY business_id HAVING COUNT(event_type) > 1
SELECT DISTINCT business_id FROM Events JOIN (SELECT event_type, AVG(occurences) AS avg_occ FROM Events GROUP BY event_type) AS temp1 ON Events.event_type = temp1.event_type WHERE occurences > avg_occ GROUP BY business_id HAVING COUNT(*) > 1
SELECT DISTINCT business_id FROM Events a INNER JOIN ( SELECT event_type, AVG(occurences) AS avg_occur FROM Events GROUP BY event_type ) b ON a.event_type = b.event_type and a.occurences > b.avg_occur GROUP BY a.business_id HAVING COUNT(a.event_type) > 1
SELECT DISTINCT business_id FROM events e JOIN (SELECT event_type, AVG(occurences) AS avg_occ FROM events GROUP BY event_type) tmp ON e.event_type = tmp.event_type WHERE e.occurences > tmp.avg_occ GROUP BY business_id HAVING COUNT(business_id) > 1
SELECT DISTINCT e.business_id FROM events e LEFT JOIN (SELECT event_type, AVG(occurences) AS avg_occur FROM events GROUP BY event_type) x ON e.event_type = x.event_type WHERE e.occurences> x.avg_occur GROUP BY e.business_id HAVING COUNT(DISTINCT e.event_type)>1
SELECT E.business_id FROM Events E JOIN ( SELECT event_type, AVG(occurences) as average FROM Events GROUP BY event_type ) AS T ON E.event_type = T.event_type WHERE E.occurences > T.average GROUP BY E.business_id HAVING COUNT(E.event_type) > 1
SELECT E1.business_id FROM Events E1 LEFT JOIN (SELECT event_type, avg(occurences) as avgoc FROM Events GROUP BY event_type) as E2 ON E1.event_type = e2.event_type WHERE E1.occurences > E2.avgoc GROUP BY E1.business_id HAVING COUNT(distinct E1.event_type) >1
SELECT E3.business_id FROM (SELECT business_id FROM Events E1 LEFT JOIN (SELECT event_type, AVG(occurences) as avg_occurences FROM Events GROUP BY event_type) E2 ON E1.event_type = E2.event_type WHERE E1.occurences > E2. avg_occurences) E3 GROUP BY E3.business_id HAVING COUNT(business_id) > 1
SELECT a.business_id FROM (SELECT *, AVG(occurences) OVER (PARTITION BY event_type) AS avg_occurences FROM Events) a WHERE a.occurences > a.avg_occurences GROUP BY a.business_id HAVING COUNT(a.event_type) > 1
SELECT a.business_id FROM (SELECT business_id, event_type, occurences, COUNT(event_type) OVER (PARTITION BY business_id) AS "count_event", AVG(occurences) OVER (PARTITION BY event_type) AS "avg_occurences_event" FROM Events ) as a WHERE a.occurences > a.avg_occurences_event GROUP BY a.business_id HAVING COUNT(DISTINCT a.event_type) > 1
SELECT a.business_id FROM Events AS a LEFT JOIN (SELECT event_type,AVG(occurences) AS avg_occurence FROM Events GROUP BY event_type) AS b ON a.event_type = b.event_type WHERE a.occurences > b.avg_occurence GROUP by a.business_id HAVING COUNT(*) > 1
SELECT a.business_id FROM Events a INNER JOIN ( SELECT event_type ,AVG(occurences) as AvgOccurences FROM Events GROUP BY 1 ) b on a.event_type = b.event_type WHERE 1=1 AND a.occurences > b.AvgOccurences GROUP BY 1 HAVING count(*) > 1
SELECT a.business_id FROM Events a JOIN ( SELECT event_type, AVG(occurences) AS avgocc FROM Events GROUP BY event_type ) b ON a.event_type = b.event_type AND a.occurences > b.avgocc GROUP BY a.business_id HAVING COUNT(a.event_type) > 1
SELECT a.business_id FROM Events a LEFT JOIN (SELECT DISTINCT event_type, AVG(occurences) AS avg_occ_by_event FROM Events GROUP BY 1) b ON a.event_type = b.event_type WHERE a.occurences > b.avg_occ_by_event GROUP BY 1 HAVING COUNT(DISTINCT a.event_type) > 1
SELECT b.business_id FROM Events b LEFT JOIN (SELECT event_type, AVG(occurences) AS avgocc FROM Events GROUP BY event_type) t USING(event_type) GROUP BY b.business_id HAVING SUM(CASE WHEN b.occurences > t.avgocc THEN 1 ELSE 0 END) > 1
SELECT business_id FROM ( SELECT * FROM ( SELECT *, AVG(occurences) over(partition by event_type) avg FROM Events ) t WHERE occurences > avg ) t2 GROUP BY business_id HAVING COUNT(1) >1
SELECT business_id FROM ( SELECT *, AVG(occurences) OVER(PARTITION BY event_type) AS avg_occurences FROM Events GROUP BY business_id,event_type ) temp WHERE occurences> avg_occurences GROUP BY business_id HAVING COUNT(*)> 1
SELECT business_id FROM ( SELECT business_id, SUM( CASE WHEN occurences > total_avg THEN 1 ELSE 0 END ) AS is_greater FROM (SELECT business_id, event_type, occurences, AVG(occurences) OVER (PARTITION BY event_type) AS total_avg FROM Events ) e GROUP BY business_id ) s WHERE is_greater > 1
SELECT business_id FROM ( SELECT business_id, e.event_type,e.occurences, count_occ.avg_occurences FROM Events e JOIN ( SELECT event_type, AVG(occurences) as avg_occurences FROM Events GROUP BY event_type ) count_occ ON e.event_type = count_occ.event_type AND e.occurences > count_occ.avg_occurences ) tmp GROUP BY business_id HAVING COUNT(*) > 1
SELECT business_id FROM ( SELECT business_id, event_type, occurences, AVG(occurences) OVER(PARTITION BY event_type) AS avg_occ FROM Events ) t WHERE t.occurences > t.avg_occ GROUP BY business_id HAVING COUNT(event_type) > 1
SELECT business_id FROM ( SELECT business_id, event_type, occurences, avg(occurences) over(partition by event_type) as avg_event_occ FROM Events )t WHERE occurences > avg_event_occ GROUP BY 1 HAVING COUNT(1) > 1
SELECT business_id FROM (SELECT * FROM (SELECT *, AVG(occurences) OVER(PARTITION BY event_type) AS avg_occ FROM events ORDER BY event_type, business_id) sub2 WHERE occurences > avg_occ ORDER BY 1) sub1 GROUP BY 1 HAVING COUNT(*) > 1
SELECT business_id FROM (SELECT *, AVG(occurences) OVER (PARTITION BY event_type) AS avg_occ FROM Events)t WHERE occurences>avg_occ GROUP BY business_id HAVING COUNT(*) > 1
SELECT business_id FROM (SELECT *, AVG(occurences) OVER(PARTITION BY event_type) AS avg_occ FROM events) sub1 WHERE occurences > avg_occ GROUP BY 1 HAVING COUNT(*) > 1
SELECT business_id FROM (SELECT *, AVG(occurences) OVER(PARTITION BY event_type) AS avg_occ FROM events) sub1 WHERE occurences > avg_occ GROUP BY business_id HAVING COUNT(*) > 1
SELECT business_id FROM (SELECT *, AVG(occurences) OVER(PARTITION BY event_type) as average FROM Events) e GROUP BY business_id HAVING SUM(IF(e.occurences > e.average, 1, 0)) > 1
SELECT business_id FROM (SELECT *, AVG(occurences) OVER(PARTITION BY event_type) as average FROM Events) e WHERE e.occurences > e.average GROUP BY business_id HAVING COUNT(*) > 1
SELECT business_id FROM (SELECT *, AVG(occurences) OVER(PARTITION BY event_type) average FROM Events) T1 GROUP BY business_id HAVING SUM(occurences > average) > 1
SELECT business_id FROM (SELECT *, avg(occurences) OVER(PARTITION BY event_type ORDER BY event_type ) as avgs FROM events) as sbqry WHERE occurences > avgs GROUP BY business_id HAVING COUNT(business_id) > 1
SELECT business_id FROM (SELECT *, avg(occurences) over(partition by event_type) AS type_avg FROM Events) t WHERE occurences>type_avg GROUP BY 1 HAVING count(distinct event_type)>1
SELECT business_id FROM (SELECT a.business_id , CASE WHEN a.occurences > b.avg_occurences THEN 1 ELSE 0 END AS 'flag' FROM Events a LEFT JOIN ( SELECT event_type , AVG(occurences) AS 'avg_occurences' FROM Events GROUP BY event_type ) b ON a.event_type=b.event_type GROUP BY a.business_id HAVING SUM(flag) > 1) x
SELECT business_id FROM (SELECT business_id, count(*) cnt FROM( SELECT *, AVG(occurences) OVER(Partition by event_type) overclause FROM Events) ev1 WHERE occurences > overclause GROUP BY business_id ) ev2 WHERE cnt > 1
SELECT business_id FROM (SELECT business_id, event_type, occurences, avg(occurences) over(partition by event_type) AS event_avg FROM Events) t WHERE occurences>event_avg GROUP BY 1 HAVING count(*)>1
SELECT business_id FROM (SELECT business_id, event_type,occurences, avg(occurences) over (partition by event_type) as avg FROM Events) b WHERE occurences > avg GROUP BY business_id HAVING COUNT(event_type)>=2
SELECT business_id FROM Events LEFT JOIN (SELECT event_type, AVG(occurences) as threshold FROM Events GROUP BY event_type) a USING (event_type) GROUP BY business_id HAVING SUM(occurences > threshold) > 1
SELECT business_id FROM Events T1 JOIN (SELECT event_type, AVG(occurences) average FROM Events GROUP BY event_type) T2 ON T1.event_type = T2.event_type AND T1.occurences > T2.average GROUP BY business_id HAVING COUNT(business_id) >= 2
SELECT business_id FROM Events e INNER JOIN ( SELECT event_type ,AVG(occurences) AS avg_occurences FROM Events GROUP BY event_type ) t ON e.event_type = t.event_type AND e.occurences > t.avg_occurences GROUP BY e.business_id HAVING COUNT(DISTINCT e.event_type) > 1
SELECT business_id FROM Events e JOIN ( SELECT event_type, AVG(occurences) AS average FROM Events GROUP BY 1 ) a ON e.event_type = a.event_type GROUP BY 1 HAVING SUM(e.occurences > a.average) > 1
SELECT business_id FROM Events e LEFT JOIN ( SELECT event_type, AVG(occurences) AS average_occurences FROM Events GROUP BY event_type ) average ON e.event_type = average.event_type WHERE occurences > average_occurences GROUP BY business_id HAVING COUNT(business_id) > 1
SELECT business_id FROM Events evt LEFT JOIN ( SELECT event_type, AVG(occurences ) as avg_occ FROM Events GROUP BY 1 ) avg_evt ON evt.event_type = avg_evt.event_type WHERE occurences > avg_occ GROUP BY 1 HAVING COUNT( evt.event_type) > 1
SELECT business_id FROM Events, (SELECT event_type, SUM(occurences) / COUNT(business_id) AS average FROM Events GROUP BY event_type) Total WHERE Events.event_type = Total.event_type AND Events.occurences > average GROUP BY business_id HAVING COUNT(Events.event_type) > 1
SELECT business_id FROM events JOIN ( SELECT event_type, avg(occurences) occurence_avg FROM events GROUP BY event_type ) event_avg ON events.event_type = event_avg.event_type WHERE events.occurences > event_avg.occurence_avg GROUP BY business_id HAVING count(business_id) > 1
SELECT business_id FROM events as e JOIN( SELECT event_type, AVG(occurences) as avgtimes FROM Events GROUP BY event_type )m ON e.event_type=m.event_type WHERE e.occurences>m.avgtimes GROUP BY business_id HAVING COUNT(distinct e.event_type)>1
SELECT business_id FROM( SELECT *, AVG(occurences) OVER (PARTITION BY event_type) AS avg_occurences FROM Events) sub1 WHERE occurences > avg_occurences GROUP BY business_id HAVING COUNT(*) >= 2
SELECT business_id FROM( SELECT *, AVG(occurences) OVER(Partition by event_type) overclause FROM Events) ev1 WHERE occurences > overclause GROUP BY business_id HAVING count(*) > 1
SELECT business_id FROM( SELECT business_id, event_type, occurences, AVG(occurences) OVER (PARTITION BY event_type) avg_amt FROM Events) sub1 GROUP BY 1 HAVING SUM(occurences>avg_amt)>1
SELECT business_id FROM( SELECT e.business_id, e.event_type, CASE WHEN e.occurences>a.avgcnt THEN 1 ELSE 0 END as active_event FROM events as e JOIN ( SELECT event_type, AVG(occurences) as avgcnt FROM events GROUP BY event_type )a ON e.event_type=a.event_type )a GROUP BY business_id HAVING SUM(active_event)>1
SELECT business_id from ( SELECT business_id,event_type,CASE WHEN AVG(occurences)> AVG(AVG_OCC_PER_EVENT) THEN 'Active' ELSE null END status FROM( SELECT business_id,event_type,occurences, ROUND(AVG(occurences) OVER(PARTITION BY event_type),2) AVG_OCC_PER_EVENT FROM events) tab GROUP BY business_id,event_type)tab2 group by business_id having count(status)>1
SELECT business_id from Events e JOIN ( SELECT event_type, avg(occurences) avg_occurence FROM Events GROUP BY event_type ) t ON e.event_type = t.event_type AND e.occurences > avg_occurence GROUP BY business_id HAVING count(DISTINCT e.event_type) > 1
SELECT c.business_id FROM (SELECT b.business_id, COUNT(b.event_type) AS event_count FROM (SELECT a.business_id, a.event_type FROM (SELECT business_id, event_type, occurences, AVG(occurences) OVER (PARTITION BY event_type) AS avg_occurences FROM Events) a WHERE a.occurences > a.avg_occurences) b GROUP BY b.business_id) c WHERE c.event_count > 1
SELECT e.business_id FROM EVENTS e JOIN (SELECT event_type,AVG(occurences) average FROM eVENTS GROUP BY event_type ) e2 ON e.event_type=e2.event_type WHERE e.occurences> e2.average GROUP BY e.business_id HAVING COUNT(e.event_type)>1
SELECT e.business_id FROM Events e INNER JOIN ( SELECT event_type, AVG(occurences) AS occurences_avg FROM Events GROUP BY event_type ) a ON e.event_type = a.event_type AND e.occurences > a.occurences_avg GROUP BY e.business_id HAVING COUNT(1) > 1
SELECT e.business_id FROM Events e LEFT JOIN (SELECT DISTINCT event_type, AVG(occurences) AS avg_occ FROM Events GROUP BY event_type) t ON e.event_type = t.event_type WHERE e.occurences > t.avg_occ GROUP BY e.business_id HAVING COUNT(DISTINCT e.event_type) > 1
SELECT e.business_id FROM Events e LEFT JOIN (SELECT event_type, AVG(occurences) AS avg_occ FROM Events GROUP BY 1) AS t ON e.event_type = t.event_type GROUP BY 1 HAVING SUM(CASE WHEN e.occurences > t.avg_occ THEN 1 ELSE 0 END) > 1
SELECT e.business_id FROM Events e LEFT JOIN (SELECT event_type, avg(occurences) as avg_occ FROM Events GROUP BY 1)t ON e.event_type = t.event_type WHERE e.occurences>t.avg_occ GROUP BY 1 HAVING COUNT(DISTINCT e.event_type)>1
SELECT sub.business_id FROM (SELECT DISTINCT business_id, event_type, CASE WHEN (SUM(occurences) OVER (PARTITION BY business_id, event_type)) > (AVG(occurences) OVER (PARTITION BY event_type)) THEN 1 ELSE 0 END AS ratio FROM Events ) sub GROUP BY sub.business_id HAVING SUM(sub.ratio) > 1
Select Distinct e.business_id from events e Left Join (Select event_type, Avg(occurences) AS avg_occur from events group by event_type) AS T1 On e.event_type = T1.event_type Where e.occurences > T1.avg_occur group by e.business_id Having count(Distinct e.event_type) > 1
Select business_id From(Select business_id, event_type, occurences, AVG(occurences)OVER(partition by event_type) as average from Events)t Where occurences > average Group by 1 Having count(event_type) > 1
Select business_id from ( Select *, avg(occurences) over(partition by event_type) as avge from events ) a where occurences > avge group by business_id having count(*) > 1
WITH A AS ( SELECT event_type, AVG(occurences) AS cnt FROM Events GROUP BY event_type) SELECT E.business_id FROM Events E INNER JOIN A ON E.event_type = A.event_type AND E.occurences > A.cnt GROUP BY E.business_id HAVING COUNT(*) > 1
WITH A AS (SELECT E1.EVENT_TYPE, AVG(E1.OCCURENCES) AS AVG_C FROM EVENTS E1 GROUP BY E1.EVENT_TYPE ), B AS (SELECT E2.BUSINESS_ID, E2.EVENT_TYPE, SUM(OCCURENCES) AS SUM_C FROM EVENTS E2 GROUP BY E2.BUSINESS_ID, E2.EVENT_TYPE ) SELECT DISTINCT B.BUSINESS_ID FROM B JOIN A ON A.EVENT_TYPE = B.EVENT_TYPE AND B.SUM_C > A.AVG_C GROUP BY B.BUSINESS_ID HAVING COUNT(B.EVENT_TYPE) > 1
WITH A AS (SELECT E1.EVENT_TYPE, AVG(E1.OCCURENCES) AS AVG_C FROM EVENTS E1 GROUP BY E1.EVENT_TYPE) SELECT B.BUSINESS_ID FROM Events B JOIN A ON B.EVENT_TYPE = A.EVENT_TYPE AND B.occurences > A.AVG_C GROUP BY B.BUSINESS_ID HAVING COUNT(B.EVENT_TYPE) > 1
WITH A AS( SELECT *, CASE WHEN occurences > AVG(occurences) OVER (PARTITION BY event_type) THEN 1 ELSE 0 END AS avg FROM Events) SELECT business_id FROM A GROUP BY business_id HAVING SUM(avg) >1
WITH A AS( SELECT DISTINCT(event_type), count(occurences) OVER(PARTITION BY event_type) AS s ,SUM(occurences) OVER(PARTITION BY event_type) AS target FROM Events ) SELECT e.business_id FROM Events e JOIN A a on e.event_type = a.event_type WHERE e.occurences >(a.target/a.s) GROUP BY e.business_id HAVING COUNT(a.event_type)>=2
WITH AverageOccurForEvent AS ( SELECT business_id, event_type, Occurences, AVG(Occurences) OVER (PARTITION BY event_type) AS AverageEventTypeOccurences FROM Events ) SELECT DISTINCT business_id FROM AverageOccurForEvent GROUP BY business_id HAVING SUM(CASE WHEN Occurences > AverageEventTypeOccurences THEN 1 ELSE 0 END) > 1
WITH AverageOccurForEvent AS ( SELECT business_id, event_type, Occurences, AVG(Occurences) OVER (PARTITION BY event_type) AS AverageEventTypeOccurences FROM Events ) SELECT business_id FROM AverageOccurForEvent GROUP by 1 HAVING SUM(CASE WHEN Occurences > AverageEventTypeOccurences THEN 1 ELSE 0 END) > 1
WITH AverageOccurForEvent AS ( SELECT business_id, event_type, Occurences, AVG(Occurences) OVER (PARTITION BY event_type) AS AverageEventTypeOccurences FROM Events ), cte as ( SELECT business_id, event_type FROM AverageOccurForEvent WHERE Occurences > AverageEventTypeOccurences group by 1,2 ) select business_id from cte group by 1 having count(distinct event_type)>1
WITH Average_oc AS (SELECT event_type, SUM(occurences)/COUNT(*) AS avg FROM Events GROUP BY event_type) SELECT e.business_id FROM Events AS e JOIN Average_oc AS a ON e.event_type = a.event_type AND e.occurences > a.avg GROUP BY business_id HAVING COUNT(*) > 1
WITH Average_oc AS (SELECT event_type, SUM(occurences)/COUNT(*) AS avg FROM Events GROUP BY event_type), Compared AS (SELECT e.business_id, e.event_type, a.avg FROM Events AS e JOIN Average_oc AS a ON e.event_type = a.event_type WHERE e.occurences > a.avg ORDER BY e.business_id) SELECT business_id FROM Compared GROUP BY business_id HAVING COUNT(*) > 1
WITH Avgs AS ( SELECT business_id, event_type, occurences, AVG(occurences) OVER(PARTITION BY event_type) AS 'avg_occurs', CASE WHEN occurences > AVG(occurences) OVER(PARTITION BY event_type) THEN 1 ELSE 0 END AS 'above_avg' FROM Events GROUP BY business_id, event_type ) SELECT business_id FROM Avgs GROUP BY business_id HAVING SUM(above_avg) > 1
WITH CTE AS ( SELECT *, (CASE WHEN sub.occurences > sub.avg_occur THEN 'active' ELSE 'not_active' END) AS business_cat FROM ( SELECT *, AVG(occurences) OVER ( PARTITION BY event_type ) AS avg_occur FROM Events ) sub ) SELECT sub2.business_id FROM ( SELECT a.business_id, COUNT(*) AS num_event_type FROM CTE a WHERE a.business_cat = 'active' GROUP BY a.business_id ) sub2 WHERE sub2.num_event_type > 1 ORDER BY sub2.business_id ASC
WITH CTE AS ( SELECT event_type, avg(occurences) AS avg_count FROM Events GROUP BY event_type ) SELECT e.business_id FROM Events e LEFT JOIN CTE c ON c.event_type = e.event_type WHERE e.occurences > c.avg_count GROUP BY business_id HAVING COUNT(e.event_type) > 1
WITH CTE AS (SELECT business_id, event_type, occurences, AVG(occurences) OVER(PARTITION BY event_type) AS Avg_occurances FROM Events) SELECT DISTINCT business_id FROM CTE WHERE occurences > Avg_occurances GROUP BY business_id HAVING COUNT(*) > 1
WITH CTE AS( SELECT event_type, AVG(occurences) avg_occ FROM Events GROUP BY event_type) SELECT business_id FROM Events e JOIN cte c on c.event_type = e.event_type WHERE e.occurences > c.avg_occ GROUP BY e.business_id HAVING COUNT(business_id) > 1
WITH CTE1 AS ( SELECT business_id, event_type, occurences, AVG(occurences) OVER (PARTITION BY event_type) AS avg_o FROM Events), CTE2 AS ( SELECT business_id, SUM(CASE WHEN occurences>avg_o THEN 1 ELSE 0 END) AS total FROM CTE1 GROUP BY business_id) SELECT business_id FROM CTE2 WHERE total>1
WITH CTE1 AS( SELECT event_type, AVG(occurences) AS average FROM Events GROUP BY 1), CTE2 AS( SELECT business_id, COUNT(E1.event_type) AS ct FROM Events E1 JOIN CTE1 AS C ON E1.event_type = C.event_type AND E1.occurences> average GROUP BY 1 ) SELECT business_id FROM CTE2 WHERE ct>1
WITH EVENT_DETAILS AS( SELECT BUSINESS_ID, EVENT_TYPE, OCCURENCES, AVG(OCCURENCES) OVER(PARTITION BY EVENT_TYPE) AVG_OCCURENCE FROM EVENTS ) SELECT BUSINESS_ID FROM EVENT_DETAILS WHERE OCCURENCES>AVG_OCCURENCE GROUP BY BUSINESS_ID HAVING COUNT(DISTINCT EVENT_TYPE)>1
WITH EventAverages AS (SELECT event_type ,AVG(occurences) AS event_average FROM Events GROUP BY event_type), BusinessRatings AS (SELECT E.business_id ,SUM(IF(E.occurences > EA.event_average,1,0)) AS active_events FROM Events E INNER JOIN EventAverages EA ON EA.event_type = E.event_type GROUP BY E.business_id) SELECT business_id FROM BusinessRatings WHERE active_events >= 2
WITH EventAvgs AS ( SELECT event_type, AVG(occurences) AS 'avgOc' FROM Events GROUP BY event_type ) SELECT business_id FROM ( SELECT business_id, CASE WHEN e.occurences > a.avgOc THEN 1 ELSE 0 END AS 'flag' FROM Events AS e LEFT JOIN EventAvgs AS a ON e.event_type = a.event_type ) AS t1 GROUP BY business_id HAVING SUM(flag) > 1
WITH EventSummary AS ( SELECT event_type, AVG(occurences) AS avg_ocr FROM Events GROUP BY event_type ) SELECT business_id FROM Events INNER JOIN EventSummary ON EventSummary.event_type = Events.event_type WHERE Events.occurences > EventSummary.avg_ocr GROUP BY business_id HAVING COUNT(1) > 1
WITH SUB AS ( SELECT business_id, event_type, occurences, AVG(occurences) OVER (PARTITION BY event_type) AS average FROM Events ) SELECT business_id FROM SUB WHERE occurences>average GROUP BY 1 HAVING COUNT(*)>1
WITH a AS (SELECT event_type, AVG(occurences) AS all_evn_avg FROM Events GROUP by event_type) SELECT DISTINCT b.business_id FROM (SELECT e.business_id, e.event_type, e.occurences AS bus_evn FROM Events e) b JOIN a ON a.event_type = b.event_type AND bus_evn > all_evn_avg GROUP BY b.business_id HAVING COUNT(B.event_type) > 1
WITH a AS( SELECT *, (CASE WHEN occurences > AVG(occurences) OVER (PARTITION BY event_type) then 1 else 0 end) active FROM Events) SELECT business_id FROM a GROUP BY business_id HAVING sum(active)>1
WITH add_event_avg AS ( SELECT business_id, occurences, AVG(occurences) OVER (PARTITION BY event_type) AS event_avg FROM Events ) SELECT business_id FROM add_event_avg GROUP BY business_id HAVING SUM(IF(occurences>event_avg, 1, 0)) > 1
WITH ave as( SELECT event_type,sum(occurences)/count(event_type) as average FROM Events GROUP by event_type) SELECT business_id FROM (SELECT business_id, CASE WHEN occurences > average then 1 ELSE 0 END as active FROM Events LEFT JOIN ave ON Events.event_type = ave.event_type )a GROUP BY business_id HAVING sum(active)>1
WITH average AS ( SELECT event_type, AVG(occurences) as avg_o FROM events GROUP BY event_type) SELECT business_id FROM events as e INNER JOIN average as a ON a.event_type = e.event_type WHERE occurences > a.avg_o GROUP BY business_id HAVING COUNT(*) > 1
WITH average AS( SELECT DISTINCT(event_type), AVG(occurences) as avg_occurence FROM events GROUP BY 1 ), business_active_event AS( SELECT business_id, events.event_type FROM events LEFT JOIN average ON events.event_type = average.event_type WHERE events.occurences > average.avg_occurence ), count_active_event AS( SELECT business_id, COUNT(*) as count FROM business_active_event GROUP BY 1 ) SELECT business_id from count_active_event WHERE count > 1
WITH avg as (SELECT event_type, AVG(occurences) as avg FROM events GROUP BY event_type) SELECT e.business_id FROM events e JOIN avg a ON e.event_type = a.event_type WHERE e.occurences > a.avg GROUP BY e.business_id HAVING COUNT(DISTINCT e.event_type) > 1
WITH avg_event AS ( SELECT event_type, AVG(occurences) AS avg_event_occr FROM Events GROUP BY event_type) SELECT business_id FROM Events e INNER JOIN avg_event ae ON e.event_type=ae.event_type WHERE e.occurences>avg_event_occr GROUP BY business_id HAVING COUNT(DISTINCT e.event_type) > 1
WITH avg_occ_events AS ( SELECT event_type, AVG(occurences) as avg_occ FROM events GROUP BY event_type ) SELECT Distinct e1.business_id FROM events e1 JOIN avg_occ_events e2 ON e1.event_type = e2.event_type AND e1.occurences > e2.avg_occ GROUP BY e1.business_id HAVING COUNT(Distinct e1.event_type) > 1
WITH avg_occs AS ( SELECT event_type, AVG(occurences) AS avg_occurences FROM events GROUP BY 1 ) SELECT DISTINCT business_id FROM ( SELECT business_id, COUNT(*) AS num_over_avg FROM events e LEFT JOIN avg_occs a ON e.event_type = a.event_type WHERE occurences > avg_occurences GROUP BY 1 ) businesses_with_num_above_average WHERE num_over_avg > 1
WITH avg_occur_per_event AS ( SELECT event_type, AVG(occurences) AS avg_occur FROM events GROUP BY event_type ) SELECT business_id FROM avg_occur_per_event AS aope INNER JOIN events AS e ON aope.event_type = e.event_type WHERE 1=1 AND e.occurences > aope.avg_occur GROUP BY business_id HAVING COUNT(*) > 1
WITH avg_occurrences_by_event_type AS ( SELECT event_type, AVG(occurences) AS avg_occurences FROM Events GROUP BY event_type ), avg_business_occurences AS ( SELECT business_id, event_type, AVG(occurences) AS avg_occurences FROM Events GROUP BY business_id, event_type ), evaluation AS (SELECT b.business_id, COUNT(CASE WHEN b.avg_occurences > o.avg_occurences THEN 1 ELSE NULL END) AS num_greater FROM avg_occurrences_by_event_type o INNER JOIN avg_business_occurences b ON o.event_type = b.event_type GROUP BY b.business_id ) SELECT business_id FROM evaluation WHERE num_greater > 1
WITH avg_type AS ( SELECT event_type, AVG(occurences) AS avg_occurence FROM Events GROUP BY event_type ), biz_count AS ( SELECT business_id FROM Events AS E JOIN avg_type AS A ON E.event_type = A.event_type WHERE E.occurences > A.avg_occurence ) SELECT DISTINCT(business_id) FROM biz_count GROUP BY business_id HAVING COUNT(*) > 1
WITH b as ( SELECT business_id, event_type, AVG(occurences) OVER(PARTITION BY event_type) event_avg, AVG(occurences) OVER(PARTITION BY business_id, event_type) b_avg FROM Events ) SELECT business_id FROM b WHERE b_avg > event_avg GROUP BY business_id HAVING COUNT(event_type) > 1
WITH better_than_avg AS ( SELECT business_id, event_type FROM ( SELECT business_id, event_type, occurences, AVG(occurences) OVER (PARTITION BY event_type) AS avg_occ FROM Events) t WHERE occurences > avg_occ) SELECT business_id FROM better_than_avg GROUP BY business_id HAVING COUNT(DISTINCT event_type) > 1
WITH cte AS ( SELECT business_id, event_type, occurences, AVG(occurences) AS avg_occ FROM Events GROUP BY event_type ) SELECT e.business_id FROM Events e JOIN cte ON cte.event_type=e.event_type WHERE e.occurences>cte.avg_occ GROUP BY e.business_id HAVING COUNT(e.event_type)>1
WITH cte AS (SELECT business_id, event_type, AVG(occurences) AS avg_occur FROM Events GROUP BY event_type) SELECT DISTINCT e.business_id AS business_id FROM Events e LEFT JOIN cte t ON e.event_type = t.event_type WHERE e.occurences > t.avg_occur GROUP BY e.business_id HAVING COUNT(e.event_type) >1
WITH cte AS (SELECT business_id, event_type, SUM(occurences) AS total_occurences FROM Events AS e GROUP BY business_id, event_type), cte2 AS (SELECT event_type, AVG(occurences) AS avg_occurences FROM Events GROUP BY event_type) SELECT DISTINCT cte.business_id FROM cte JOIN cte2 USING(event_type) WHERE cte.total_occurences > cte2.avg_occurences GROUP BY business_id HAVING COUNT(DISTINCT cte.event_type) > 1
WITH cte AS (SELECT business_id, event_type, occurences, AVG(occurences) as average FROM Events GROUP BY event_type) SELECT e.business_id FROM Events e JOIN cte c USING (event_type) WHERE e.occurences > c.average GROUP BY e.business_id HAVING count(e.business_id)>1
WITH cte AS (SELECT event_type, AVG(occurences) AS avg_occurences FROM Events GROUP BY event_type) SELECT E.business_id FROM Events AS E RIGHT JOIN cte AS C ON E.event_type = C.event_type AND E.occurences > C.avg_occurences GROUP BY E.business_id HAVING COUNT(DISTINCT E.event_type) > 1
WITH cte AS (SELECT event_type, AVG(occurences) AS avg_occurences FROM Events GROUP BY event_type), cte2 AS (SELECT E.business_id FROM Events AS E RIGHT JOIN cte AS C ON E.event_type = C.event_type GROUP BY E.business_id, E.event_type HAVING MIN(E.occurences) > MIN(C.avg_occurences)) SELECT DISTINCT business_id FROM (SELECT business_id, COUNT(*) OVER (PARTITION BY business_id) AS cnt FROM cte2) AS t WHERE t.cnt > 1
WITH cte AS( SELECT business_id, event_type, SUM(occurences)OVER(PARTITION BY business_id,event_type) AS cnt_occurence, AVG(occurences)OVER(PARTITION BY event_type) AS avg_event FROM events GROUP BY business_id,event_type) SELECT DISTINCT business_id FROM cte WHERE cnt_occurence > avg_event GROUP BY business_id HAVING COUNT(event_type) >1
WITH cte AS( SELECT event_type, AVG(occurences) AS avg_occu FROM Events GROUP BY event_type ) SELECT DISTINCT business_id FROM( SELECT business_id, COUNT(DISTINCT a.event_type) AS active_event FROM Events a JOIN cte b ON a.event_type = b.event_type WHERE occurences > avg_occu GROUP BY business_id ) temp WHERE active_event > 1
WITH cte AS( SELECT event_type, AVG(occurences) avg_occur FROM Events GROUP BY 1 ) SELECT e.business_id FROM Events e INNER JOIN cte c ON e.event_type = c.event_type AND e.occurences > c.avg_occur GROUP BY e.business_id HAVING COUNT(*) > 1
WITH r2 AS( SELECT *, CASE WHEN occurences > AVG(occurences) OVER (PARTITION BY event_type) THEN 1 ELSE 0 END AS chosen FROM Events) SELECT business_id FROM r2 GROUP BY business_id HAVING SUM(chosen) >1
WITH t AS ( SELECT *, CASE WHEN occurences > AVG(occurences) OVER (PARTITION BY event_type) THEN 1 ELSE 0 END AS more FROM Events ) SELECT business_id FROM t GROUP BY 1 HAVING SUM(more)>1
WITH t AS ( SELECT business_id, CASE WHEN occurences > AVG(occurences) OVER (PARTITION BY event_type) THEN 1 ELSE 0 END AS is_active FROM Events ) SELECT business_id FROM t GROUP BY business_id HAVING SUM(is_active) > 1
WITH t AS ( SELECT event_type, AVG(occurences) avg_oc FROM events GROUP BY event_type ) SELECT business_id FROM events e JOIN t ON e.event_type=t.event_type GROUP BY business_id HAVING SUM(IF(occurences>avg_oc,1,0))>1
WITH t AS (SELECT business_id, event_type, occurences, AVG(occurences) OVER (PARTITION BY event_type) a, CASE WHEN occurences > (AVG(occurences) OVER (PARTITION BY event_type)) THEN 1 ELSE 0 END AS active FROM events), t2 AS (SELECT business_id, SUM(active) s FROM t GROUP BY 1) SELECT business_id FROM t2 WHERE s > 1
WITH t as ( SELECT event_type, AVG(occurences) as average FROM Events GROUP BY event_type ) SELECT business_id FROM Events e JOIN t ON e.event_type=t.event_type WHERE e.occurences > t.average GROUP BY business_id HAVING count(*) > 1
WITH t as ( SELECT event_type, AVG(occurences) as average FROM Events GROUP BY event_type ) SELECT business_id FROM Events e JOIN t ON e.event_type=t.event_type WHERE e.occurences > t.average GROUP BY business_id HAVING count(distinct e.event_type) > 1
WITH t1 AS ( SELECT event_type, AVG(occurences) AS avg_oc FROM Events GROUP BY event_type ) SELECT business_id FROM events AS t2 INNER JOIN t1 ON t2.event_type = t1.event_type WHERE t2.occurences > t1.avg_oc GROUP BY business_id HAVING COUNT(t2.event_type) > 1 ORDER BY business_id
WITH t1 AS ( SELECT event_type, AVG(occurences) AS occurences FROM Events GROUP BY event_type ) SELECT business_id FROM events AS t2 INNER JOIN t1 ON t2.event_type = t1.event_type WHERE t2.occurences > t1.occurences GROUP BY business_id HAVING COUNT(t2.event_type) > 1 ORDER BY business_id
WITH t1 AS ( SELECT event_type, AVG(occurences) as average FROM Events GROUP BY event_type) SELECT business_id FROM ( SELECT e.business_id, e.event_type, e.occurences FROM Events e JOIN t1 ON e.event_type = t1.event_type WHERE e.occurences > t1.average) t GROUP BY business_id HAVING COUNT(DISTINCT event_type) > 1
WITH t1 AS ( SELECT event_type, AVG(occurences) event_avg FROM Events GROUP BY 1 ), t2 AS ( SELECT business_id, event_type, AVG(occurences) bus_avg FROM Events GROUP BY business_id, event_type ) SELECT business_id FROM t2 LEFT JOIN t1 ON t2.event_type = t1.event_type GROUP BY 1 HAVING SUM(CASE WHEN bus_avg > event_avg THEN 1 ELSE 0 END) > 1
WITH t1 as (SELECT event_type, AVG(occurences) as avg_occurences FROM events GROUP BY event_type ) SELECT e.business_id FROM events e JOIN t1 ON e.event_type = t1.event_type WHERE e.occurences > t1.avg_occurences GROUP BY e.business_id HAVING COUNT(*) > 1
WITH table1 AS( SELECT business_id, event_type, occurences, AVG(occurences)OVER(PARTITION BY event_type) AS avg_event_occurence FROM Events ) SELECT business_id FROM (SELECT *, CASE WHEN occurences > avg_event_occurence THEN 1 ELSE 0 END AS flag FROM table1) a GROUP BY business_id HAVING SUM(flag) > 1
WITH table1 AS( SELECT business_id, event_type, occurences, AVG(occurences)OVER(PARTITION BY event_type) AS avg_event_occurence FROM Events ), table2 AS( SELECT *, CASE WHEN occurences > avg_event_occurence THEN 1 ELSE 0 END AS flag FROM table1 ) SELECT business_id FROM table2 GROUP BY business_id HAVING SUM(flag) > 1
WITH tbl AS( SELECT *, CASE WHEN occurences > AVG(occurences) OVER (PARTITION BY event_type) THEN 1 ELSE 0 END AS chosen FROM Events) SELECT business_id FROM tbl GROUP BY business_id HAVING SUM(chosen) >1
WITH temp AS ( SELECT business_id, event_type, occurences, IF(occurences > AVG(occurences) OVER(PARTITION BY event_type), 'yes', 'no') AS cnt FROM Events ) SELECT business_id FROM temp WHERE cnt = 'yes' GROUP BY business_id HAVING COUNT(*) > 1
WITH temp AS ( SELECT event_type, AVG(occurences) AS mean_occurences FROM events GROUP BY event_type) SELECT business_id FROM events JOIN temp USING(event_type) GROUP BY business_id HAVING SUM(IF(occurences>mean_occurences, 1, 0)) > 1
WITH temp as ( select event_type, avg(occurences) as avg_occurence from events as e1 Group by event_type ) select business_id from temp join events as e2 on temp.event_type = e2.event_type where e2.occurences > temp.avg_occurence Group by business_id Having count(distinct(e2.event_type))>1
With AvgEvent as ( select event_type, sum(occurences) as total_occ, count(business_id) as num_bus_count, sum(occurences) / count(business_id) as avg_event from Events group by event_type ), Compare as ( select e.business_id, e.event_type from Events as e JOIN AvgEvent a ON e.event_type = a.event_type where e.occurences > a.avg_event ) select business_id from ( select business_id, count(*) as countAbove from Compare group by business_id having count(*) > 1 ) as a
With B1 as (select business_id, count(event_type) as event_count from Events group by business_id having event_count>1), B2 as (Select event_type, avg(occurences) as avg_occ from Events group by event_type ) select t2.business_id from (select t.business_id, count(t.event_type) as ec from (select B1.business_id, E.event_type, E.occurences, B2.avg_occ, (Case when (E.occurences - B2.avg_occ )> 0 then 1 else -1 end) as Active_flag from B1 left join Events E on B1.business_id = E.business_id left join B2 on B2.event_type = E.event_type having active_flag > 0 ) t group by t.business_id having ec>1 ) t2
With CTE AS( Select business_id,event_type,occurences, avg(occurences) over (partition by event_type) As Avg_occurences from Events ) Select business_id from CTE where occurences > Avg_occurences group by business_id having count(distinct event_type)>1
With CTE AS(SELECT business_id, event_type, occurences, AVG(occurences) OVER(PARTITION BY event_type) AS avg_occur FROM Events) SELECT business_id FROM CTE WHERE occurences > avg_occur GROUP BY business_id HAVING COUNT(business_id) > 1
With avgoccur as ( Select*, avg(occurences) Over (Partition by event_type) avgo From Events ) Select business_id From avgoccur Where occurences > avgo Group by business_id Having Count(distinct event_type) >1
With temp AS (SELECT event_type, AVG(occurences) AS avg_occurences FROM Events GROUP BY event_type) SELECT business_id FROM (SELECT business_id, SUM(e.occurences > t.avg_occurences) AS a FROM Events e LEFT JOIN temp t ON e.event_type = t.event_type GROUP BY business_id) AS b WHERE b.a >1
select Business_id from (select *, avg(occurences) over (partition by event_type) as avgo from events) A where avgo<occurences group by 1 Having count(event_type) > 1
select E.business_id from (Select event_type, avg(occurences) as avg_occ from Events group by event_type ) as t1 left join Events E on t1.event_type = E.event_type and E.occurences > t1.avg_occ group by E.business_id having count(E.event_type) > 1
select Events.business_id from Events left join (select event_type, avg(occurences) as average from Events group by Events.event_type) T2 on Events.event_type=T2.event_type where Events.occurences>T2.average group by Events.business_id having count(distinct Events.event_type)>1
select T3.business_id from ( select T2.business_id, case when T2.occurences > T2.avg_occurence then 'True' else 'False' end as 'Active_Status' from ( select e.business_id, e.event_type, e.occurences, T1.avg_occurence from Events e left join ( select event_type, avg(occurences) as 'avg_occurence' from Events group by event_type ) as T1 on e.event_type = T1.event_type ) as T2 ) as T3 where T3.Active_Status = 'True' group by T3.business_id having count(T3.Active_Status) > 1
select a.business_id from ( select business_id ,event_type , (occurences - avg(occurences) over (partition by event_type)) as avg_occurence from Events )a where a.avg_occurence > 0 group by 1 having count(*)>1
select a.business_id from Events a join (select event_type,avg(occurences) as avg_occurence from Events group by event_type) b on a.event_type=b.event_type where a.occurences>b.avg_occurence group by a.business_id having count(distinct a.event_type)>1
select a.business_id from Events a left join (select event_type, Avg(occurences) as avg_o from Events group by event_type)b on a.event_type = b.event_type group by 1 having sum(case when a.occurences > b.avg_o then 1 else 0 end) > 1
select a.business_id from Events a left join (select event_type, Avg(occurences) as avg_o from Events group by event_type)b on a.event_type = b.event_type where a.occurences > avg_o group by 1 having count(*)>1
select a.business_id from Events a left join (select event_type,avg(occurences) as mean from Events group by event_type) c on a.event_type=c.event_type where a.occurences>c.mean group by a.business_id having count(c.event_type)>=2
select a.business_id from events a left join( select avg(occurences) avg_occ , event_type from events group by event_type ) b on a.event_type = b.event_type where a.occurences > b.avg_occ group by business_id having count(business_id) > 1
select a.business_id from events as a left join ( select *, sum(occurences) / count(occurences) as average from events group by event_type ) as b on a.event_type=b.event_type where a.occurences>b.average group by a.business_id having count(a.occurences) > 1
select b.business_id from (select event_type, sum(occurences)/count(business_id) as avg_occ from events group by event_type ) a join events b on b.event_type = a.event_type where b.occurences - a.avg_occ > 0 group by b.business_id having count(distinct b.event_type) > 1
select business_id from ( select * , avg(occurences) over(partition by event_type ) as e_avg from events) a where occurences>e_avg group by business_id having count(event_type)>1
select business_id from ( select * from Events left join (select event_type, avg(occurences) as average_occ from Events group by event_type) as Average using (event_type) ) as New where occurences > average_occ group by business_id having count(event_type) > 1
select business_id from ( select *, avg(occurences) over (partition by event_type) as average from Events ) temp where occurences > average group by business_id having count(*)>1
select business_id from ( select *, avg(occurences) over(partition by event_type) as 'avg_occur' from events) as A group by business_id having sum(case when occurences > avg_occur then 1 else 0 end) > 1
select business_id from ( select *, avg(occurences) over(partition by event_type) as average from Events ) as a where occurences > average group by business_id having count(event_type) >= 2
select business_id from ( select *,avg(occurences) over (partition by event_type) as avgoccurences from events ) a where occurences> avgoccurences group by business_id having count(business_id)>1
select business_id from ( select a.business_id, a.event_type, a.occurences, b.event_avg from Events a left join ( select event_type, avg(occurences) as event_avg from Events group by event_type) b on a.event_type =b.event_type) as temp where occurences>event_avg group by business_id having count(event_type)>1
select business_id from ( select a.business_id, a.event_type, sum(case when a.av>avg_oc then 1 end) as s from ( select a.business_id, a.event_type, avg(occurences) as av from Events a group by 1,2 )a left join ( select event_type, avg(occurences) as avg_oc from Events group by 1 )b on a.event_type=b.event_type group by a.business_id,a.event_type ) a where s>=1 group by 1 having(count(*)>1)
select business_id from ( select business_id , case when occurences > num_avg.avg_occ then 1 else 0 end as flag from events e join ( select event_type, avg(occurences) as avg_occ from events group by 1 ) as num_avg on num_avg.event_type=e.event_type ) tmp group by business_id having sum(flag) > 1
select business_id from ( select business_id, Events.event_type, occurences, avg_ocr from Events left join (select event_type, avg(occurences) as avg_ocr from Events group by event_type) b on Events.event_type = b.event_type having occurences > avg_ocr ) c group by business_id having count(*) > 1
select business_id from ( select business_id, avg(occurences) over (partition by event_type) as avg_occ, occurences from Events ) as e where occurences>avg_occ group by business_id having count(business_id)>1
select business_id from ( select business_id, count(distinct event_type) as counted from (select e.business_id, e.event_type from Events e left join (select event_type, avg(occurences) as avg_occ from Events group by event_type) a on e.event_type = a.event_type where e.occurences > a.avg_occ) temp group by business_id having counted > 1 ) a
select business_id from ( select business_id, count(event_type) cnt from ( select business_id, event_type, occurences, avg(occurences) over(partition by event_type) average from Events ) T where occurences > average group by 1 ) T where cnt > 1
select business_id from ( select business_id, event_type, occurences, avg(occurences) over (partition by event_type) as avg_event_avg from Events ) t where occurences > avg_event_avg group by business_id having count(1) > 1
select business_id from ( select business_id, event_type, occurences, avg(occurences) over (partition by event_type) as avg_occurances from events) asd where occurences > asd.avg_occurances group by business_id having count(event_type) > 1
select business_id from ( select business_id, event_type, occurences, avg(occurences) over(partition by event_type) as avg_occurences from Events ) t where occurences > avg_occurences group by 1 having count(event_type) > 1
select business_id from ( select business_id, event_type, occurences, case when occurences > (avg(occurences) over(partition by event_type) ) then True else False end is_active from Events ) b where is_active = True group by business_id,is_active having count(*) > 1
select business_id from ( select business_id, event_type, sum(occurences) occ from events group by business_id, event_type ) t1 left join ( select event_type, avg(occurences) avg_occ from events group by event_type ) t2 on t1.event_type = t2.event_type where t1.occ > t2.avg_occ group by business_id having count(t1.event_type) > 1
select business_id from ( select business_id,event_type,occurences, count(event_type) over(partition by business_id) as cnt,Avg(occurences) over(partition by event_type) as Avgocc from Events ) t1 where occurences > Avgocc group by 1 having count(business_id)>1
select business_id from ( select business_id,event_type,occurences,Avg(occurences) over(partition by event_type) as Avgocc from Events ) t1 where occurences > Avgocc group by 1 having count(business_id)>1
select business_id from ( select business_id,event_type,occurences,Avg(occurences) over(partition by event_type) as Avgocc from Events ) t1 where occurences > Avgocc group by 1 having count(event_type)>1
select business_id from ( select event_type, avg(occurences) as avgO from Events group by event_type )as tmp join Events on tmp.event_type = Events.event_type where Events.occurences > tmp.avgO group by Events.business_id having count(Events.event_type) > 1
select business_id from ( select t1.business_id, count(*) as count from events t1 join ( select event_type, avg(occurences) as avg_occurences from events group by event_type ) t2 on t2.event_type = t1.event_type where t1.occurences > t2.avg_occurences group by t1.business_id ) t where count > 1
select business_id from (select * , avg(occurences) over (partition by event_type) as avg_occ from Events)t where occurences > avg_occ group by business_id having count(*) > 1
select business_id from (select *, avg(occurences) over (partition by event_type) as av from Events) A where occurences > av group by business_id having count(*) >=2
select business_id from (select *, avg(occurences) over (partition by event_type) as average from Events) temp where occurences > average group by business_id having count(event_type) > 1
select business_id from (select *, avg(occurences) over (partition by event_type) as average, count(*) over (partition by business_id) as revenues from events)s1 where s1.revenues > 1 and s1.occurences > s1.average group by business_id having count(*) > 1
select business_id from (select *, avg(occurences) over (partition by event_type) as avg_occ from Events)t where occurences > avg_occ group by business_id having count(*) > 1
select business_id from (select *, avg(occurences) over (partition by event_type) as occ_mean from Events) temp where occurences>occ_mean group by business_id having count(event_type)>1
select business_id from (select *, avg(occurences) over (partition by event_type) average from Events) a where a.occurences > a.average group by a.business_id having count(a.business_id)>1
select business_id from (select *, avg(occurences) over(partition by event_type) as avge from events) as t where occurences > avge group by business_id having count(business_id) >1
select business_id from (select *, avg(occurences) over(partition by event_type) avg_occur from events) temp where occurences > avg_occur group by business_id having count(event_type)>1
select business_id from (select *,avg(occurences) over(partition by event_type) as avg_occ from events) t where occurences>avg_occ group by business_id having count(*)>1
select business_id from (select a.business_id , a.event_type from events as a inner join (select event_type , avg(occurences) as avg_occur from events group by 1) as b on a.event_type = b.event_type and a.occurences > b.avg_occur) as temp group by 1 having count(distinct event_type) > 1
select business_id from (select a.business_id from events a join (select event_type, avg(occurences) as avg_all from events group by 1)b on a.event_type = b.event_type where a.occurences > b.avg_all)c group by business_id having count(1) > 1
select business_id from (select a.business_id, a.event_type from Events a left join ( select event_type, avg(occurences) as avg_occur from Events group by event_type ) cte on a.event_type = cte.event_type where a.occurences > cte.avg_occur ) cte2 group by business_id having count(event_type) > 1
select business_id from (select business_id, a.event_type, sum(case when occurences > num then 1 else 0 end ) as tot from events a join (select event_type, avg(occurences) as num from events group by event_type) b on a.event_type = b.event_type group by business_id) c where tot > 1
select business_id from (select business_id, case when occurences > average then 1 else 0 end as more_than_avg from (select business_id, event_type, occurences, avg(occurences) over (partition by event_type) as average from Events) temp1) temp2 group by business_id having sum(more_than_avg) > 1
select business_id from (select business_id, case when valid > 0 then 1 else 0 end active from (select business_id, event_type, occurences - avg(occurences) over (partition by event_type) valid from events) c) v group by business_id having sum(active) >1
select business_id from (select business_id, count(*) as counts from (select business_id, events.event_type, occurences, average from events join (select event_type, avg(occurences) as average from events group by event_type) as averages on events.event_type = averages.event_type where occurences > average) as hasan group by business_id having counts > 1) as hosein
select business_id from (select business_id, count(distinct event_type) as c from (select *, avg(occurences) over (partition by event_type) as a from events )t where occurences> a group by business_id )t2 where c>1
select business_id from (select business_id, count(distinct event_type) as count_event_type from (select business_id, a.event_type from (select event_type, avg(occurences) as avg_occurences from Events group by 1) a, Events e where a.event_type=e.event_type and e.occurences>a.avg_occurences ) bb group by 1 having count(distinct event_type)>1) cc
select business_id from (select business_id, e.event_type, occurences, avg, case when occurences > avg then 1 else 0 end as c from Events e left join (select event_type, avg(occurences) as avg from Events e1 group by e1.event_type) as t1 on e.event_type = t1.event_type) as t2 group by business_id having sum(c) > 1
select business_id from (select business_id, event_type from (select business_id, event_type, avg(occurences) over(partition by event_type) as event_avg, occurences from Events) t where occurences > event_avg) tt group by business_id having count(distinct event_type)>1
select business_id from (select business_id, event_type from (select business_id, event_type, occurences, avg(occurences) over(partition by event_type) average from Events) a where occurences > average ) a group by business_id having count(event_type) >=2
select business_id from (select business_id, event_type, avg(occurences) over (partition by event_type) as avg_event_occur, occurences from Events) sub where occurences > avg_event_occur group by 1 having count(distinct event_type) > 1
select business_id from (select business_id, event_type, occurences, avg(occurences) over(partition by event_type) a from events)cte where occurences > a group by 1 having count(*) > 1
select business_id from (select business_id, event_type, occurences, avg(occurences) over(partition by event_type) as average from events) x where occurences > average group by 1 having count(*) > 1
select business_id from (select business_id, event_type, occurences, avg(occurences) over(partition by event_type) as avg_o from events ) t where occurences > avg_o group by business_id having count(business_id) > 1
select business_id from (select business_id, event_type, sum(if(occurences>avg_occurences, 1, 0)) as greater from (select business_id, event_type, occurences, avg(occurences) over (partition by event_type) as avg_occurences from events) t1 group by business_id, event_type) t2 group by business_id having sum(greater)>1 order by business_id
select business_id from (select business_id, occurences, avg(occurences) over(partition by event_type) 'avg_occ' from events) a where a.occurences > avg_occ group by business_id having count(business_id) > 1
select business_id from (select event_type, avg(occurences) as ave_occurences from Events group by event_type) e1 JOIn Events e2 ON e1.event_type = e2.event_type and e2.occurences > e1.ave_occurences group by business_id having count(distinct e1.event_type) > 1
select business_id from (select event_type, avg(occurences) as ave_occurences from Events group by event_type) e1 JOIn Events e2 ON e1.event_type = e2.event_type and e2.occurences > e1.ave_occurences group by business_id having count(distinct e2.event_type) > 1
select business_id from (select event_type, avg(occurences) as ave_occurences from events as e1 group by event_type ) as temp1 inner join events as e2 on temp1.event_type = e2.event_type where e2.occurences > temp1.ave_occurences group by business_id having count(distinct temp1.event_type) > 1
select business_id from (select event_type, avg(occurences) as ave_occurences from events as e1 group by event_type ) as temp1 join events as e2 on temp1.event_type = e2.event_type where e2.occurences > temp1.ave_occurences group by business_id having count(distinct temp1.event_type) > 1
select business_id from (select event_type, avg(occurences) as avg_events from events group by event_type) temp1 join events temp2 on temp1.event_type = temp2.event_type where temp2.occurences > temp1.avg_events group by business_id having count(distinct temp2.event_type) > 1
select business_id from (with temp1 as (select event_type, avg(occurences) as avg_occ from Events group by event_type) select a.business_id, a.occurences, b.avg_occ from Events a left join temp1 b on a.event_type=b.event_type) c group by business_id having sum(case when occurences > avg_occ then 1 else 0 end) > 1
select business_id from (with temp1 as (select event_type, avg(occurences) as avg_occ from Events group by event_type) select a.business_id, a.occurences, b.avg_occ from Events a left join temp1 b on a.event_type=b.event_type) c where occurences > avg_occ group by business_id having count(business_id)>1
select business_id from Events a inner join (select event_type, avg(occurences) as avg_occurences from Events group by event_type) b on a.event_type = b.event_type where a.occurences > b.avg_occurences group by business_id having count(distinct a.event_type)>1
select business_id from Events a join (select event_type, avg(occurences) as event_Avg from Events group by event_type) b on a.event_type=b.event_type where a.occurences>event_Avg group by a.business_id having count(distinct a.event_type)>1
select business_id from Events a join (select event_type, avg(occurences) as occurences from Events group by 1) b on a.event_type=b.event_type where a.occurences>b.occurences group by 1 having count(*)>1
select business_id from Events e inner join (select distinct event_type, avg(occurences) over(partition by event_type) as avg_no from Events) tab on e.event_type = tab.event_type and e.occurences > tab.avg_no group by e.business_id having count(*) > 1
select business_id from Events e inner join (select distinct event_type, avg(occurences) over(partition by event_type) as avg_no from Events) tab on e.event_type = tab.event_type where e.occurences > tab.avg_no group by e.business_id having count(*) > 1
select business_id from Events e join ( select event_type ,avg(occurences) occu from Events group by event_type ) a on e.event_type = a.event_type and e.occurences > a.occu group by business_id having count(e.event_type) >=2
select business_id from Events e left join ( select event_type, avg(occurences) as avg_occurences from Events group by event_type ) avg_e on e.event_type = avg_e.event_type where e.occurences > avg_e.avg_occurences group by business_id having count(*) > 1
select business_id from Events e left join (select event_type, avg(occurences) as avg_occr from Events group by event_type) a on e.event_type = a.event_type group by business_id having count(case when occurences > avg_occr then 1 else null end) > 1
select business_id from Events e left join (select event_type, sum(occurences)/count(business_id) as avg_occur from Events group by event_type) cte on e.event_type = cte.event_type where e.occurences > cte.avg_occur group by business_id having count(distinct e.event_type) > 1
select business_id from Events e1 left join ( select event_type, avg(occurences) avg from Events group by event_type) e2 on e1.event_type = e2.event_type where e1.occurences > e2.avg group by business_id HAVING count(e1.event_type) > 1
select business_id from Events e1 left join ( select event_type, sum(occurences)/count(event_type) avg from Events group by event_type) e2 on e1.event_type = e2.event_type where e1.occurences > e2.avg group by business_id HAVING count(*) > 1
select business_id from Events e1 left join (select event_type, avg(occurences) avg_occ from Events group by event_type) as e2 on e1.event_type = e2.event_type where e1.occurences > e2.avg_occ group by business_id having count(distinct e1.event_type) > 1
select business_id from Events e1 left join (select event_type,avg(occurences) as avg from Events group by event_type) t2 on e1.event_type=t2.event_type where e1.occurences> t2.avg group by e1.business_id having count(*)>1
select business_id from Events ev inner join ( select event_type, avg(occurences) as avg_value from Events group by 1 ) av on av.event_type=ev.event_type group by business_id having sum(case when ev.occurences >av.avg_value then 1 else 0 end) >1
select business_id from Events ev inner join ( select event_type, round(avg(occurences),2) as avg_value from Events group by 1 ) av on av.event_type=ev.event_type group by business_id having sum(case when ev.occurences >av.avg_value then 1 else 0 end) >1
select business_id from Events left join (select event_type, avg(occurences) as avg_occ from Events group by event_type) a using(event_type) where occurences > avg_occ group by business_id having count(event_type) > 1
select business_id from events a inner join (select event_type, avg(occurences) as avg_cnt from events group by 1) b on a.event_type=b.event_type where a.occurences>b.avg_cnt group by 1 having count(a.event_type)>1
select business_id from events a left join( select avg(occurences) avg_occ , event_type from events group by event_type ) b on a.event_type = b.event_type where a.occurences > b.avg_occ group by business_id having count(business_id) > 1
select business_id from events as a left join ( select event_type, avg(occurences) as av from events group by event_type ) as b on a.event_type = b.event_type where a.occurences > b.av group by business_id having count(*)>1
select business_id from events e inner join ( select event_type,avg(occurences) as aveg from events group by event_type )a on a.event_type=e.event_type where e.occurences>a.aveg group by business_id having count(*)>1
select business_id from events e join (select event_type, avg(occurences) avgocc from events group by 1)t on e.event_type = t.event_type and occurences > avgocc group by 1 having count(*) > 1
select business_id from( select *, avg(occurences) over(partition by event_type, business_id) as ave_id, avg(occurences) over(partition by event_type) as ave_event from Events) as a where ave_id > ave_event group by business_id having count(*)>=2
select business_id from( select *, avg(occurences)over(partition by event_type) as avg_occ from events) as t1 where occurences > avg_occ group by business_id having count(event_type)>1
select business_id from( select business_id, case when occurences>avg(occurences) over (partition by event_type) then 1 else 0 END as cnt from Events )z group by 1 having sum(cnt)>1
select business_id from( select business_id, event_type, occurences, avg(occurences) over (partition by event_type) as avg_occurences from Events) as TMP group by business_id having sum(case when occurences > avg_occurences then 1 else 0 end) > 1
select business_id from( select business_id, event_type, occurences, avg(occurences)over(partition by event_type) avg_occ from Events ) temp where occurences>avg_occ group by business_id having count(event_type)>1
select business_id from( select business_id,event_type, occurences, sum(occurences)over(partition by event_type)/count(business_id)over(partition by event_type) as avgOccurences from Events )tmp group by business_id having sum(case when occurences>avgOccurences then 1 else 0 end) > 1 order by 1
select business_id from(select b.business_id, b.event_type, sum(b.occurences), a.avgnum from(select event_type, avg(occurences) as avgnum from events group by 1) a right join events b on a.event_type = b.event_type group by 1, 2 having sum(b.occurences) > a.avgnum) c group by business_id having count(*) >1
select c.business_id from ( select a.business_id, count(*) as row_count from events as a inner join ( select event_type, avg(occurences) as avg_occurences from Events group by event_type ) as b on (a.event_type = b.event_type) where a.occurences > b.avg_occurences group by a.business_id) as c where c.row_count > 1
select c.business_id from (select b.business_id, count(distinct b.event_type) as ct from (select a.* from (select *, sum(occurences) over (partition by event_type)/count( business_id) over (partition by event_type) as avg_occ from events)a where a.occurences>a.avg_occ) b group by 1 having ct>1)c
select c.business_id from (select business_id, a.event_type, b.occurences as occurences, a.occurences as occurences_average from Events b left join (select event_type, avg(occurences) as occurences from Events group by event_type) as a on b.event_type = a.event_type where b.occurences > a.occurences) as c group by c.business_id having count(c.business_id) > 1
select c.business_id from (select business_id, event_type, occurences, avg(occurences) over (partition by event_type) as average from events) c where c.occurences > c.average group by c.business_id having count(business_id) > 1
select distinct a.business_id from Events a left join (select business_id,event_type, avg(occurences) as av from Events group by event_type) b on a.event_type = b.event_type where a.occurences > b.av group by 1 having count(*)>1
select distinct business_id from ( select business_id,event_type,occurences,avg(occurences)over(partition by event_type) as o from events)e where e.o<e.occurences group by 1 having count(1)>1
select distinct business_id from Events tab1 inner join ( select event_type, avg(occurences) avg_occ from Events group by 1 ) tab2 on tab1.event_type = tab2.event_type and tab1.occurences > tab2.avg_occ group by 1 having count(*) > 1
select distinct business_id from events a join (select event_type, avg(occurences) as average from events group by 1) b on a.event_type = b.event_type where occurences > average group by 1 having count(*) > 1
select distinct business_id from events as a join (select event_type, avg(occurences) as avgoccurences from events group by event_type) as b on a.event_type = b.event_type where a.occurences > b.avgoccurences group by business_id having count(distinct a.event_type) > 1
select distinct c.business_id from( select a.*, b.avg_occ from events a left join (select event_type, avg(occurences) as avg_occ from events group by event_type) b on a.event_type=b.event_type ) c where c.occurences>c.avg_occ group by c.business_id having count(distinct event_type) > 1
select distinct e.business_id as business_id from (select event_type, avg(occurences) as avg_occ from Events group by event_type)a join Events e on a.event_type = e.event_type and a.avg_occ < e.occurences group by e.business_id having count(distinct e.event_type)>1
select distinct e.business_id as business_id from Events e join (select event_type, avg(occurences) avg_occurences from Events group by 1) avg on e.event_type = avg.event_type where e.occurences > avg.avg_occurences group by 1 having count(e.event_type)>1
select distinct e.business_id from Events e left join (select event_type, avg(occurences) as avg_occ from Events group by event_type) x on e.event_type = x.event_type where e.occurences > x.avg_occ group by 1 having count(distinct e.event_type) > 1
select distinct e2.business_id from( select event_type, avg(occurences) as avg_event from Events group by event_type ) as e1 join Events e2 on e1.event_type = e2.event_type group by e2.business_id having sum(case when e2.occurences > e1.avg_event then 1 else 0 end) > 1
select distinct e4.business_id from( select e3.business_id, sum(greater_than_avg) over(partition by e3.business_id) as running_eligible from( select e2.business_id, case when e2.occurences > e1.avg_event then 1 else 0 end as greater_than_avg from( select event_type, avg(occurences) as avg_event from Events group by event_type ) as e1 join Events e2 on e1.event_type = e2.event_type ) e3 ) e4 where e4.running_eligible > 1
select distinct(business_id) from (select *, (case when occurences > avg then 1 else 0 end) as flag from (select event_type, avg(occurences ) as 'avg' from Events E group by event_type) a right join Events E using (event_type)) b group by business_id having(sum(flag) > 1)
select e.business_id from (select event_type, avg(occurences) as occurances from Events group by event_type) t left join Events e on t.event_type = e.event_type and e.occurences > t.occurances group by e.business_id having count(*) > 1
select e.business_id from (select event_type,avg(occurences) as avg_occu from Events group by 1) t join Events e on t.event_type=e.event_type where e.occurences>t.avg_occu group by 1 having count(distinct t.event_type)>1
select e.business_id from Events e join (select event_type, avg(occurences) avgg from Events group by 1) temp on e.event_type = temp.event_type where occurences > avgg group by 1 having count(*)>1
select e.business_id from events e join ( select event_type, avg(occurences) avgo from events group by event_type) a on e.event_type = a.event_type where e.occurences > avgo group by e.business_id having count(*) > 1
select e.business_id from events e join (select event_type, AVG(occurences) as avo from events group by event_type) a on e.event_type = a.event_type where e.occurences > a.avo group by e.business_id having count(distinct e.event_type) >= 2
select e.business_id from events e join (select event_type, avg(occurences) avg_occ from events e group by event_type) temp on e.event_type = temp.event_type and e.occurences > temp.avg_occ group by e.business_id having count(*) >1
select e.business_id from events e left join (select event_type, avg(occurences) as avg_occ from events group by event_type) t on e.event_type = t.event_type where e.occurences > t.avg_occ group by e.business_id having count(e.business_id) > 1
select e1.business_id from (select business_id, event_type, avg(occurences) as e_avg from Events group by business_id,event_type) as e1 inner join (select event_type, avg(occurences) as e_avg from Events group by event_type) as e2 on e1.event_type=e2.event_type where e1.e_avg >e2.e_avg group by business_id having count(e1.event_type)>1
select e1.business_id from events e1 join ( select event_type, avg(occurences) as avgOc from events group by event_type) e2 on e1.event_type = e2.event_type where e1.occurences > e2.avgOc group by e1.business_id having count(*) > 1
select e2.business_id from Events e2 join (select e1.event_type, avg(e1.occurences) as avg from Events e1 group by e1.event_type) temp on e2.event_type = temp.event_type where e2.occurences > temp.avg group by e2.business_id having count(e2.business_id) >= 2
select t.business_id from (select e.business_id, sum(case when e.occurences > occur.avg_occur then 1 else 0 end) as above_avg from Events e join (select event_type, avg(occurences) as avg_occur from Events group by 1) occur on e.event_type = occur.event_type group by 1) t where above_avg >= 2
select t1.business_id from ( select business_id, event_type, occurences as avgo from Events) as t1 inner join (select event_type, avg(occurences) as avgo from Events group by event_type) as t2 on t1.event_type = t2.event_type where t1.avgo>t2.avgo group by business_id having count(*)>1
select t1.business_id from Events t1 join (select event_type, avg(occurences) as mean from Events group by event_type) t2 on t1.event_type = t2.event_type where t1.occurences > t2.mean group by t1.business_id having count(t1.business_id)> 1
select t1.business_id from events t1 join ( select event_type, avg(occurences) as avg_occurences from events group by event_type ) t2 on t2.event_type = t1.event_type where t1.occurences > t2.avg_occurences group by t1.business_id having count(*) > 1
select t2.business_id from (select E.business_id, count(E.event_type) as event_count from (Select event_type, avg(occurences) as avg_occ from Events group by event_type ) as t1 left join Events E on t1.event_type = E.event_type and E.occurences > t1.avg_occ group by E.business_id ) t2 where t2.event_count >1
select t2.business_id from (select e2.business_id, count(e2.event_type) as ev_c from (select event_type, avg(occurences) as ave_occurences from events as e1 group by event_type ) as temp1 join events as e2 on temp1.event_type = e2.event_type where e2.occurences > temp1.ave_occurences group by e2.business_id ) t2 where t2.ev_c >1
select t2.business_id from(select * from Events e left join (select event_type,avg(occurences) aver from Events group by event_type) t using (event_type) where e.occurences>t.aver) t2 group by 1 having count(t2.event_type)>1
select tot.business_id from (select E.business_id, case when E.occurences > sub.averageocurr then 1 else 0 end etypebool from Events E left join (select event_type, avg(occurences) averageocurr from Events group by event_type)sub on E.event_type = sub.event_type)tot group by tot.business_id having sum(tot.etypebool) >1
select tt.business_id from(select * from Events e left join (select event_type,avg(occurences) aver from Events group by event_type) t using (event_type) where e.occurences>t.aver) tt group by 1 having count(tt.business_id)>1
with A as ( select event_type, avg(occurences) as avg_o from Events group by event_type ), EA as ( select E.business_id from Events as E left join A on E.event_type=A.event_type where E.occurences>A.avg_o ) select business_id from EA group by business_id having count(*)>1
with Averages as ( SELECT event_type, AVG(occurences) as average_occ FROM Events GROUP BY event_type ) SELECT business_id FROM Events e JOIN Averages a ON a.event_type = e.event_type AND average_occ < e.occurences GROUP BY e.business_id HAVING COUNT(e.occurences) > 1
with CTE AS( SELECT business_id, event_type, occurences, AVG(occurences) OVER (PARTITION BY event_type) AS avg_occurences FROM Events ) SELECT business_id FROM CTE WHERE occurences > avg_occurences GROUP BY business_id HAVING COUNT(business_id) > 1
with CTE as ( select *, AVG(occurences) OVER(PARTITION BY event_type) as avg_occr from Events ) select business_id from CTE where occurences > avg_occr group by business_id having count(business_id) > 1
with CTE as (Select round(avg(occurences),2) as overall_average,event_type from events group by event_type) Select business_Id from events e inner join cte on cte.event_type = e.event_type and occurences > overall_average group by business_id having count(distinct e.event_type) > 1
with a as ( select distinct event_type, avg(occurences) over(partition by event_type) as ag from Events ) select business_id from (SELECT business_id, count(*) as n from events left join a using(event_type) where occurences > ag group by business_id) t where n > 1
with a as ( select event_type, avg(occurences) as aoc from events group by event_type ) select business_id from events e left join a on a.event_type=e.event_type where e.occurences >aoc group by business_id having count(distinct e.event_type)>1
with a as (select business_id, event_type, if(occurences>avg(occurences) over(partition by event_type),1,0) as 'flag' from events) SELECT business_id FROM a GROUP BY business_id HAVING SUM(flag) >1
with a as (select event_type, avg(occurences) as aveg from events group by event_type) select e.business_id from Events e, a where e.event_type = a.event_type group by business_id having sum(case when e.occurences > a.aveg then 1 else 0 end) >= 2
with a as( select event_type, avg(occurences) as avg_o from Events group by event_type ) ,b as (select e.business_id from Events e join a on e.event_type = a.event_type where e.occurences > a.avg_o) select business_id from b group by business_id having count(1)>1;
with a_o as ( select event_type, avg(occurences) occurences from events group by event_type ) select business_id from events e join a_o on e.event_type = a_o.event_type where e.occurences > a_o.occurences group by business_id having count(distinct e.event_type) > 1
with ae (event_type,avg1) as ( select event_type, avg(occurences) from Events group by event_type ) select business_id from (select e.business_id,e.event_type,e.occurences,b.avg1 from Events e join ae b on e.event_type = b.event_type where e.occurences>b.avg1) t group by business_id having count(business_id)>1
with agged as ( select business_id , if(occurences > avg(occurences) over (partition by event_type), 1, 0) bool_flag from events ) select business_id from agged group by business_id having sum(bool_flag) > 1
with ao as (select event_type, avg(occurences) as ao from events group by event_type) select e.business_id from events e left join ao using (event_type) group by e.business_id having count(case when e.occurences > ao.ao then e.event_type end)>1
with av_c as ( select event_type, avg(occurences) as occurences from events group by event_type) select business_id from events ev left join av_c as av ON av.event_type = ev.event_type where ev.occurences > av.occurences group by business_id having count(*) > 1
with average as(select event_type, avg(occurences) as occurences from Events group by event_type) select e.business_id from Events as e left join average as a on e.event_type=a.event_type and e.occurences > a.occurences where a.occurences is not null group by e.business_id having count(*)>1
with average_occurance as ( Select avg(occurences) over (partition by event_type order by event_type) as active_business, avg(occurences) over (partition by business_id, event_type order by event_type) as avg_business, business_id, event_type from Events ) Select business_id from average_occurance where avg_business > active_business group by business_id having count(*) > 1
with average_ratings as (select event_type , avg(occurences) as average from events group by 1), good_businesses as (select e1.*, e2.average from events e1 left join average_ratings e2 on e1.event_type = e2.event_type where e1.occurences > e2.average) select business_id from good_businesses group by business_id having count(*) > 1
with averageevent as( select distinct event_type, avg(occurences) over (partition by event_type) as average from events ) select e.business_id from events e, averageevent a where e.event_type = a.event_type and e.occurences > a.average group by business_id having count(distinct e.event_type) > 1
with averages as (SELECT event_type, AVG(occurences) as avg_occurences FROM Events GROUP BY event_type), above_average_business_event_types AS (SELECT E.* FROM Events E INNER JOIN averages a on a.event_type = E.event_type WHERE E.occurences > a.avg_occurences), active_event_type AS ( SELECT business_id, COUNT(event_type) AS cnt_event_type FROM above_average_business_event_types GROUP BY 1) SELECT business_id FROM active_event_type WHERE cnt_event_type>1
with averages as(select business_id,event_type, occurences,avg(occurences) over(partition by event_type) as EventAverage from Events ) select distinct business_id from averages group by business_id having sum(case when occurences > EventAverage then 1 else 0 end)>1
with avg_cte as ( select event_type, avg(occurences) as avg_oc from events group by event_type) select business_id from events e join avg_cte a on e.event_type = a.event_type and e.occurences > a.avg_oc group by business_id having count(*) > 1
with avg_e_t as (select event_type, AVG(occurences) as avg_o from Events group by event_type) select business_id from Events e join avg_e_t using(event_type) where occurences > avg_o group by business_id having count(e.event_type) >1
with avg_event_type as ( select event_type, avg(occurences) occurences from events group by 1 ) select business_id from events e inner join avg_event_type av on e.event_type = av.event_type where e.occurences > av.occurences group by 1 having count(1) > 1
with avg_events as ( select event_type, avg(occurences) as avg_val from Events group by 1 ) select business_id from Events e join avg_events ae on e.event_type=ae.event_type group by 1 having count(distinct case when ae.avg_val<e.occurences then e.event_type end)>1
with avg_events as ( select event_type, avg(occurences) total_avg from `Events` group by event_type), business_events as ( select business_id, event_type, avg(occurences) curr_avg from `Events` group by business_id, event_type), final_table as ( select business_events.*, avg_events.total_avg from business_events join avg_events using (event_type)) select final_table.business_id from final_table where curr_avg > total_avg group by business_id having count(*) > 1
with avg_events as ( select event_type,avg(occurences) as oavg from events group by event_type) select business_id from (select E.business_id, E.event_type from events E JOIN avg_events AE on E.event_type = AE.event_type where E.occurences > AE.oavg) FT group by FT.business_id having count(FT.event_type) > 1
with avg_events(event_type, avg1) as (select event_type, avg(occurences) from events group by event_type) select e.business_id as business_id from events e join avg_events a on e.event_type = a.event_type where e.occurences > a.avg1 group by e.business_id having count(e.event_type) > 1
with avg_occ as (select event_type, avg(occurences) as ao from events group by event_type) select e.business_id from events e inner join avg_occ a on e.event_type = a.event_type group by e.business_id having sum(e.occurences > a.ao) > 1
with avg_occ as( select event_type, avg(occurences) as avg_occ from events group by 1) select a.business_id from events as a left join avg_occ as b on a.event_type=b.event_type where a.occurences>b.avg_occ group by 1 having count(a.event_type)>=2
with avg_occur as ( select event_type, avg(occurences) as avg_o from Events group by event_type) select a.business_id from Events a left join avg_occur b on a.event_type = b.event_type where a.occurences > b.avg_o group by a.business_id having count(a.business_id)>=2
with avg_occur_event_type as ( select event_type, round(sum(occurences)/count(distinct business_id),2) as avg from Events group by 1 ) select business_id from Events e join avg_occur_event_type a on(e.event_type=a.event_type) where e.occurences>a.avg group by business_id having count(distinct e.event_type)>1
with avg_occurences as (select event_type, sum(occurences)/count(business_id) as avg_occ from Events group by event_type) select business_id from (select business_id, count(distinct Events.event_type) as num_event_types from Events, avg_occurences where Events.event_type = avg_occurences.event_type and Events.occurences > avg_occurences.avg_occ group by business_id) temp where num_event_types > 1
with avg_rating as ( select event_type, avg(occurences) as k1 from events group by event_type ), test as ( select e.business_id, e.event_type, avg(e.occurences) as k from events as e join avg_rating as a on e.event_type = a.event_type group by business_id, event_type ) select business_id from test as e join avg_rating as a on e.event_type = a.event_type and e.k > a.k1 group by business_id having count(business_id) > 1
with avg_value as ( select event_type, round(avg(occurences),2) as avg_value from Events group by 1 ) select business_id from Events ev inner join avg_value av on av.event_type=ev.event_type group by business_id having sum(case when ev.occurences >av.avg_value then 1 else 0 end) >1
with avgs as( select event_type, avg(occurences) a_occurences from Events group by 1) select e.business_id from Events e join avgs a on e.event_type = a.event_type and e.occurences > a.a_occurences group by e.business_id having count(*)>1
with bus_avg as ( select event_type, avg(occurences) as avg_occ from Events group by 1 ) select e.business_id from Events e join bus_avg b on e.event_type = b.event_type and e.occurences > b.avg_occ group by 1 having count(e.event_type) >= 2
with cte as ( SELECT *, (CASE WHEN occurences > AVG(occurences)OVER(PARTITION BY event_type) THEN 1 ELSE 0 END) as 'chosen' FROM Events) SELECT business_id FROM cte GROUP BY business_id HAVING sum(chosen)>1
with cte as ( SELECT *, (CASE WHEN occurences>AVG(occurences)OVER(PARTITION BY event_type) THEN 1 ELSE 0 END) as 'chosen' FROM Events) SELECT business_id FROM cte GROUP BY business_id HAVING sum(chosen)>1
with cte as ( SELECT *, AVG(occurences)OVER(PARTITION BY event_type) as 'occ_avg' FROM Events) SELECT business_id FROM cte WHERE occurences > occ_avg GROUP BY business_id HAVING count(event_type) >1
with cte as ( select *, avg(occurences) over(partition by event_type) as event_avg_occ, sum(occurences) over(partition by business_id, event_type) as buss_occ from Events ) select business_id from cte where buss_occ > event_avg_occ group by business_id having count(business_id) > 1
with cte as ( select *,avg(occurences) as avg_occ from Events group by event_type ) select e.business_id from Events e join cte on e.event_type=cte.event_type where e.occurences>avg_occ group by e.business_id having count(e.event_type)>1
with cte as ( select business_id , count(distinct event_type) as events from Events group by 1 having events > 1 ), cte2 as ( select event_type , avg(occurences) as avg_occ from Events group by 1 ), cte3 as ( select cte.business_id , event_type , avg(occurences) as occ_per_bi from cte inner join Events as e using (business_id) group by 1,2) select business_id from cte3 join cte2 using (event_type) where occ_per_bi > avg_occ group by 1 having count(cte2.event_type) > 1
with cte as ( select business_id ,event_type ,occurences ,case when occurences > (avg(occurences) over(partition by event_type)) then 1 else 0 end as avg_occ from events ) select business_id from cte where avg_occ = 1 group by business_id having count(event_type) > 1
with cte as ( select business_id, avg(occurences) over (partition by event_type) as avg_occ, occurences from Events) select business_id from cte where occurences-avg_occ> 0 group by business_id having count(business_id)>1
with cte as ( select business_id, event_type, occurences, avg(occurences) over (partition by event_type) as avge from Events ), cte2 as ( select cte.business_id, cte.event_type, count(case when cte.occurences > cte.avge then 1 else null end) as summ from cte group by cte.business_id, cte.event_type ) select a.business_id from ( select cte2.business_id, sum(cte2.summ) as greater from cte2 group by cte2.business_id) as a where a.greater >1
with cte as ( select business_id, event_type, occurences, avg(occurences) over(partition by event_type ) as d from events ) select business_id from ( select business_id, sum(case when occurences> d then 1 else 0 end) as g from cte group by business_id)f where g>1
with cte as ( select business_id, event_type,occurences,avg(occurences) as avg_occ from Events group by event_type) select e.business_id from Events e join cte c using (event_type) where e.occurences > c.avg_occ group by e.business_id having count(distinct e.event_type)>1
with cte as ( select business_id,event_type, avg(occurences) as rnk from events group by event_type ) select e.business_id from events e join cte c on e.event_type =c.event_type where e.occurences>c.rnk group by e.business_id having count(*)>1
with cte as ( select distinct event_type, avg(occurences) as avg_occurences from Events group by event_type ) select distinct business_id from Events join cte on Events.event_type = cte.event_type group by business_id having sum(case when occurences > avg_occurences then 1 else 0 end) > 1
with cte as ( select e.business_id, e.event_type, e.occurences, avg(e.occurences) over (partition by e.event_type) as 'occurenceavg', case when e.occurences > avg(e.occurences) over (partition by e.event_type) then 1 else 0 end as 'occurenceyesno', count(e.event_type) over (partition by e.business_id) as 'eventtypecount' from Events e ) select business_id from cte where eventtypecount > 1 group by business_id having sum(occurenceyesno) > 1
with cte as ( select event_type, avg(occurences) as average from Events group by 1 ) select business_id from Events join cte using(event_type) group by 1 having sum(case when occurences > average then 1 else 0 end) > 1
with cte as ( select event_type, avg(occurences) mean from events group by event_type ) select business_id from events e join cte on e.event_type = cte.event_type group by business_id having sum(case when occurences > mean then 1 else 0 end) > 1
with cte as ( select event_type, sum(occurences)/ count(occurences) as average from events group by event_type ) select business_id from events e left join cte c on e.event_type = c.event_type group by business_id having sum(case when occurences > average then 1 else 0 end) > 1
with cte as ( select event_type, sum(occurences)/count(*) as avgg from Events group by event_type ) select business_id from ( select business_id, count(*) as n from Events as e left join cte on cte.event_type=e.event_type where occurences > (avgg) group by business_id) as a where a.n>1
with cte as ( select event_type,avg(occurences) as average from events group by event_type ), demo as ( select e.business_id,e.event_type,e.occurences,cte.average from events as e join cte on e.event_type=cte.event_type where e.occurences>cte.average ) select business_id from demo group by business_id having count(distinct event_type)>1
with cte as ( select event_type,avg(occurences) as avg_occurences from Events group by 1) select business_id from events t1 join cte on t1.event_type=cte.event_type where occurences > avg_occurences group by 1 having count(t1.event_type )>1 order by 1
with cte as (SELECT event_type, avg(occurences) as avg_of_each_type FROM Events GROUP BY event_type) SELECT business_id FROM Events e JOIN cte ON e.event_type = cte.event_type Where e.occurences > cte.avg_of_each_type group by business_id Having sum(e.occurences > cte.avg_of_each_type) > 1
with cte as (Select event_type, avg(occurences) as 'avg' from events group by event_type ), cte1 as (Select a.business_id from events a left join cte b on a.event_type =b.event_type where a.occurences>b.avg group by business_id having count(*)>1 ) Select * from cte1
with cte as (select business_id, event_type, occurences, AVG(occurences) over (partition by event_type) as avg_occ from events ) select business_id from cte where occurences > avg_occ group by business_id having count(*) > 1
with cte as (select business_id, occurences,avg(occurences)over(partition by event_type) as event_avg from events) SELECT business_id FROM cte WHERE cte.occurences > event_avg group by 1 having count(1)>1
with cte as (select business_id, totevent from (select business_id, event_type, occurences, row_number() over(partition by business_id) as totevent from events)a group by business_id having max(totevent)>1 ), tmp as ( select event_type, avg(occurences) as occ from events group by event_type ) select distinct e.business_id from events e join tmp t on e.event_type = t.event_type and e.occurences > t.occ and e.business_id in (select business_id from cte) group by e.business_id having count(*)>1
with cte as (select business_id, totevent from (select business_id, event_type, occurences, row_number() over(partition by business_id) as totevent from events)a group by business_id having max(totevent)>1 ), tmp as ( select event_type, avg(occurences) as occ from events group by event_type ) select distinct e.business_id from events e join tmp t on e.event_type = t.event_type and e.occurences > t.occ join cte on e.business_id = cte.business_id group by e.business_id having count(*)>1
with cte as (select event_type, avg(occurences) as average from Events group by event_type) select business_id from Events E join CTE c on E.event_type = c. event_type where E.occurences>C.average group by business_id having count((business_id))>1
with cte as (select event_type, avg(occurences) as average_oc from Events group by event_type ) select business_id from events join cte on cte.event_type=events.event_type where occurences>average_oc group by business_id having count(distinct cte.event_type)>1
with cte as (select event_type, avg(occurences) as avg_ from Events group by event_type) select e.business_id from Events e left join cte c using (event_type) where e.occurences > c.avg_ group by e.business_id having count(e.occurences > c.avg_) > 1
with cte as (select event_type, avg(occurences) as avg_occurences from Events group by event_type) select Events.business_id from Events join cte on Events.event_type = cte.event_type where Events.occurences > cte.avg_occurences group by Events.business_id having count(Events.event_type) > 1
with cte as (select event_type, avg(occurences) as occur from Events group by event_type ) select business_id from (select e.business_id,e.event_type, e.occurences, cte.occur from Events e inner join cte on e.event_type = cte.event_type and e.occurences > cte.occur ) b group by business_id having count(event_type) >1
with cte as (select event_type, avg(occurences) avg_o from events group by event_type) select business_id from events e left join cte c on e.event_type = c.event_type where occurences > avg_o group by business_id having count(e.event_type) > 1
with cte as (select event_type,avg(occurences) as average from events group by event_type ), cte1 as (select a.*,b.average from Events a join cte b on a.event_type=b.event_type) select business_id from cte1 where occurences> average group by business_id having count(distinct event_type)>1
with cte as (select event_type,avg(occurences) as mean from events group by event_type), cte_1 as (select if(sum(case when occurences>mean then 1 else 0 end)>1,business_id,null) as id from events e join cte using(event_type) group by business_id) select id as business_id from cte_1 where id is not null
with cte as (select event_type,business_id, occurences, avg(occurences) as average from events group by event_type ) select e.business_id from events e join cte c on e.event_type=c.event_type where e.occurences > c.average group by e.business_id having count(e.event_type)>1
with cte as (select event_type,round(avg(occurences),2) as global_avg from events group by 1 ) select business_id from events join cte on events.event_type = cte.event_type where events.occurences > cte.global_avg group by 1 having count(distinct events.event_type) > 1
with cte as (select t1.*, t2.cnt as totalCnt FROM ( select business_id, event_type, sum(occurences) as cnt from Events group by business_id, event_type ) t1 left join (select event_type, avg(occurences) as cnt from Events group by event_type) t2 on t1.event_type=t2.event_type ) select business_id from cte group by business_id having sum(case when cnt>totalCnt then 1 else 0 end) >1
with cte as( SELECT event_type, AVG(occurences) as avg_occur_type FROM Events GROUP BY 1) SELECT business_id FROM Events e JOIN cte ON e.event_type = cte.event_type WHERE occurences > avg_occur_type group by business_id Having count(occurences > avg_occur_type) > 1
with cte as( select *, avg(occurences) over(partition by event_type) as type_avg from events ) select business_id from cte group by business_id having sum(case when occurences > type_avg then 1 else 0 end) > 1
with cte as( select *, avg(occurences) over(partition by event_type) as type_avg from events ) select business_id from cte where occurences > type_avg group by business_id having count(*) > 1
with cte as( select business_id, event_type from( select business_id, event_type, occurences, avg(occurences) over (partition by event_type) as avg_occurences from events) a where occurences > avg_occurences) select business_id from cte group by business_id having count(distinct event_type) > 1
with cte as( select business_id, event_type, occurences, avg(occurences) over(partition by event_type) as average from Events) select business_id from (select distinct business_id, event_type from cte where average < occurences) a group by business_id having count(business_id) >1
with cte as( select business_id, event_type, occurences, avg(occurences) over(partition by event_type) as avg_occ from Events ) select business_id from cte group by business_id having sum(case when occurences > avg_occ then 1 else 0 end) > 1
with cte as( select event_type, avg(occurences) as average from Events group by event_type ) select business_id from Events join cte on Events.event_type = cte.event_type and Events.occurences > cte.average group by business_id having count(*)>=2
with cte as( select event_type, avg(occurences) as average from events group by 1) select distinct business_id from events e join cte on cte.event_type = e.event_type where occurences > average group by 1 having count(e.event_type) > 1
with cte as( select event_type, avg(occurences) as avg_ from Events group by event_type) select e.business_id from Events e left join cte c using (event_type) where e.occurences > c.avg_ group by business_id having count(event_type) > 1
with cte as( select event_type,avg(occurences) as average from events group by 1) select business_id from events e inner join cte c on e.event_type=c.event_type where e.occurences > c.average group by 1 having count(*) >1
with cte as(select business_id, sum(case when occurences > average_type then 1 else 0 end) over (partition by business_id) as res from (select *, avg(occurences) over (partition by event_type) as 'average_type' from events) a) select distinct business_id from cte where res >1
with cte1 as ( select event_type, avg(occurences) as avg_occ from Events group by event_type ), cte2 as ( select e.*, case when e.occurences > avg_occ then 1 else 0 end as flagger from Events e join cte1 on e.event_type = cte1.event_type ) select business_id from cte2 group by business_id having sum(flagger) > 1
with cte1 as ( select event_type, avg(occurences) as avg_occ from events group by 1), cte2 as ( select e.business_id, e.event_type, (case when e.occurences>c.avg_occ then 'yes' else 'no' end) as type from events e join cte1 c on e.event_type=c.event_type) select business_id from (select business_id, count(event_type) as num from cte2 where type='yes' group by 1) t where num>1
with cte1 as ( select event_type, avg(occurences) as occ_avg from events group by 1 ), cte2 as ( select a.*, b.occ_avg from Events a left join cte1 b on a.event_type = b.event_type where a.occurences > b.occ_avg ) select business_id from cte2 group by 1 having count(distinct event_type) > 1
with cte1 as (select *, avg(occurences) over (partition by event_type) as 'avg_event' from events) select business_id from cte1 where occurences > avg_event group by business_id having count(event_type) > 1
with cte1 as (select event_type, avg(occurences) as average_occurences from events group by event_type), cte2 as (select events.business_id, events.event_type from events join cte1 where events.event_type = cte1.event_type and events.occurences > cte1.average_occurences) select business_id from cte2 group by business_id having count(event_type) > 1
with cte1 as (select event_type, avg(occurences) as evnt from events group by 1) select business_id from events a left join cte1 b on a.event_type = b.event_type where occurences > evnt group by 1 having count(*) > 1
with cte2 as (select *, avg(occurences) over(partition by event_type) as av from events) select business_id from cte2 where av < occurences group by 1 having count(*)>1
with dp1 as (Select event_type, avg(occurences) as avg1 from events group by event_type) Select distinct business_id as business_id from events left join dp1 on events.event_type=dp1.event_type where occurences>avg1 group by business_id having sum(case when occurences > avg1 then 1 else 0 end) > 1
with e1 as ( select event_type, avg(occurences) as avg_occur from events group by event_type ), e2 as ( select e.*, avg_occur from events e left join e1 using(event_type) ), e3 as ( select *, case when occurences > avg_occur then 1 else 0 end as active from e2 ) select business_id from e3 group by business_id having sum(active) > 1
with etc as (select* from (select *,avg(occurences) over(partition by event_type) as average from Events ) a where a.average<a.occurences) select business_id from etc group by business_id having count(*)>1
with event_avg as ( Select event_type, avg(occurences) as avg_occu from Events group by event_type ), business as ( Select e.business_id, e.event_type from Events e inner join event_avg ea on e.event_type = ea.event_type where e.occurences > ea.avg_occu ) Select business_id from business group by business_id having count(*) > 1
with event_avg as ( select event_type, avg(occurences) as o_avg from events group by event_type ) select distinct business_id from events e left join event_avg a on e.event_type = a.event_type where e.occurences > a.o_avg group by business_id having count(e.event_type) >1
with event_avg_cte as ( select event_type,avg(occurences) as event_avg from events group by 1 ), cte2 as (select e.business_id,e.event_type,e.occurences,c.event_avg from events e join event_avg_cte c using (event_type)) select business_id from cte2 group by 1 having sum(case when occurences > event_avg then 1 else 0 end) > 1
with event_count as (select avg(occurences) as avg_occ, event_type from events group by event_type) select e.business_id from events e left join event_count ec on e.event_type = ec.event_type group by e.business_id having sum((e.occurences > ec.avg_occ)) > 1
with event_info as ( select *, avg(occurences) over (partition by event_type)as avg_occurences, case when occurences > avg(occurences) over (partition by event_type) then 1 else 0 end as better_than_avg from Events) select business_id from event_info group by business_id having sum(better_than_avg) > 1
with evt_avg as ( select event_type, avg(occurences) as avg_ocs from events group by event_type ) , bus_ocs as ( select business_id, event_type, sum(occurences) as total_ocs from events group by business_id, event_type ) , get_gt as ( select bo.business_id, bo.event_type, bo.total_ocs, case when total_ocs > ea.avg_ocs then 1 else 0 end as is_gt_avg from bus_ocs as bo inner join evt_avg as ea on bo.event_type = ea.event_type ) select business_id from get_gt where is_gt_avg > 0 group by business_id having count(distinct event_type) > 1
with final as ( with cte as ( Select a.* from ( Select * , avg(occurences) over(partition by event_type) as 'average_occurence' from Events ) a where occurences > average_occurence ) Select business_id, count(*) as 'occurences' from cte group by business_id ) Select business_id from final where occurences > 1
with freq as (select event_type, avg(occurences) median from Events group by event_type) select business_id from ( select business_id, count(*) total from ( select business_id,freq.event_type from Events left join freq on Events.event_type= freq.event_type where occurences > median ) T group by business_id having total >1 ) T1
with getAvg as ( select distinct event_type, round(avg(occurences) over (partition by event_type),1) as avgOcc from Events ), joinCte as ( select e.business_id, count(e.business_id) as activeBusiness from Events e inner join getAvg g on e.event_type = g.event_type and e.occurences > g.avgOcc group by e.business_id having count(e.business_id) >1 ) select business_id from joinCte
with main as ( select event_type, avg(occurences) as num from events group by 1 ), main2 as ( select business_id from events join main on events.event_type = main.event_type where events.occurences > main.num ) select business_id from main2 group by 1 having count(*)>1
with occ_event as (select event_type,sum(occurences)/count(occurences)as avg_occur from events group by event_type ) select distinct business_id from events e join occ_event oc on e.event_type = oc.event_type where occurences > avg_occur group by business_id having count(*) > 1
with sql1 as (select event_type ,avg(occurences) as avg_occur from Events group by event_type ), sql2 as (select a.business_id,count(distinct a.event_type) as num from Events a join sql1 b on trim(a.event_type) = trim(b.event_type) where occurences > avg_occur group by a.business_id) select distinct business_id from sql2 where num > 1
with t as (select business_id, event_type, case when avg(occurences) over(partition by event_type) <occurences then 1 else 0 end as flag from events) select t.business_id from t where t.flag =1 group by t.business_id having count(t.event_type)>1
with t as (select event_type, avg(occurences) as a from events group by 1) select business_id from (select business_id, count(*) as c from events e join t using (event_type) where e.occurences > a group by 1) t1 where c > 1
with t1 as (SELECT event_type, avg(occurences) as avg_occ FROM Events e group by event_type), t2 as (SELECT business_ID, EVENT_TYPE, SUM(occurences) as total_occ FROM events e GROUP BY 1,2) SELECT t2.business_id FROM t2 inner join t1 ON t1.event_type = t2.event_type and t2.total_occ > t1.avg_occ GROUP BY t2.business_id having count(t2.event_type)>1
with t1 as (select business_id, event_type, occurences , avg(occurences) over (partition by event_type) as avg_occ from events) select business_id from t1 where occurences > avg_occ group by business_id having count(1) > 1
with t1 as (select event_type, avg(occurences) as average from events group by 1) select distinct business_id from t1 join events b on t1.event_type = b.event_type where average < occurences group by 1 having count(*) > 1
with t1 as (select event_type, avg(occurences) as avg_occurences from Events group by event_type) select business_id from Events left join t1 on Events.event_type = t1.event_type group by business_id having sum(case when Events.occurences > t1.avg_occurences then 1 else 0 end) > 1
with t1 as (select event_type, occurences, avg(occurences) as a from events group by event_type), t2 as (select e.business_id, e.event_type, e.occurences, a, sum(case when e.occurences > a then 1 else 0 end) as s from events e left join t1 on t1.event_type = e.event_type group by e.business_id) select business_id from t2 where s>1
with t2 as (Select business_id, event_type, avg(occurences) as sums from Events group by event_type) Select a.business_id from (Select e.business_id, count(*) as c from Events e left join t2 on e.event_type = t2.event_type where sums < occurences group by business_id) a where a.c > 1
with tb1 as ( select*, avg(occurences) over (partition by event_type) as avg_type from Events ) select business_id from tb1 where tb1.occurences > tb1.avg_type group by business_id having count(event_type)>1
with tb_avg as (select event_type, avg(occurences) as avg_occ from Events group by event_type) select Events.business_id from Events left join tb_avg on Events.event_type = tb_avg.event_type group by business_id having sum(occurences > avg_occ) >1
with tb_avg as (select event_type, sum(occurences)/count(business_id) as avg_occ from Events group by event_type) select Events.business_id from Events left join tb_avg on Events.event_type = tb_avg.event_type group by business_id having sum(occurences > avg_occ) >1
with tbl as( select business_id, case when occurences > (AVG(occurences) over(partition by event_type)) then 1 else 0 end as occur from Events ) select business_id from tbl group by business_id having sum(occur)>1
with temp as ( select business_id, event_type, occurences, avg(occurences) over(partition by event_type) as avg_occ from Events group by 1,2,3 order by 1,2,3 ) select business_id from temp group by 1 having count(event_type) > 1 and sum(case when occurences > avg_occ then 1 else 0 end) > 1
with temp as ( select event_type, avg(occurences) as avg_occur from Events group by event_type ), temp1 as ( select business_id, event_type, avg(occurences) as avg_occur from Events group by business_id, event_type ) select business_id from temp1 join temp on temp1.event_type = temp.event_type where temp1.avg_occur > temp.avg_occur group by business_id having count(temp1.event_type) > 1
with temp as ( select event_type, avg(occurences) as avg_occur from events group by event_type ) select business_id from ( select business_id , e.event_type , avg(occurences) as avg_per_id , avg_occur from events e inner join temp t on e.event_type = t.event_type group by business_id , event_type having avg_per_id > avg_occur ) f group by business_id having count(business_id) > 1
with temp as ( select event_type, avg(occurences) as event_avg from Events group by event_type ) select business_id from Events as e join temp as t on e.event_type = t.event_type group by business_id having sum(case when e.occurences > t.event_avg then 1 else 0 end) > 1
with temp as (SELECT E.business_id, E.event_type, E.occurences, A.average from Events E LEFT JOIN (select EE.event_type , avg(EE.occurences) as average from Events EE group by 1) as A ON E.event_type = A.event_type) select business_id from temp where occurences > average group by 1 having count(event_type) >1
with temp as (select *, avg(occurences) over (partition by event_type) as avg_occurences from Events) select business_id from temp group by business_id having sum(case when occurences > avg_occurences then 1 else 0 end) >1
with temp as (select event_type, avg(occurences) avg_occ from events e group by event_type) select e.business_id from events e, temp where e.event_type = temp.event_type and e.occurences > temp.avg_occ group by e.business_id having count(*) >1
with temp as (select event_type, avg(occurences) avgg from Events group by 1) select business_id from Events e, temp t where e.event_type = t.event_type and occurences > avgg group by 1 having count(*) >1
with temp as( select count(distinct event_type) as cnt, business_id from( select a.*, b.avg_oc from events as a inner join (select avg(occurences) as avg_oc, event_type from events group by event_type) as b on a.event_type = b.event_type where a.occurences > b.avg_oc) c group by business_id order by business_id) select business_id from temp where cnt > 1
with temp as( select event_type, sum(occurences) / count(event_type) as avg_ from Events group by event_type) select business_id from Events e join temp on e.event_type = temp.event_type where e.occurences > temp.avg_ group by business_id having count(e.occurences > temp.avg_) > 1
with temp as(select *, avg(occurences) over(partition by event_type) as average from events) select distinct(business_id) from temp where occurences > average group by business_id having count(event_type) > 1
with temp as(select *,sum(occurences)/count(distinct business_id) as s from events group by event_type) select e.business_id from Events e left join temp on e.event_type = temp.event_type where e.occurences > temp.s group by e.business_id having count(e.occurences > temp.s) > 1
with temp1 AS( select event_type ,avg(occurences ) AS average from Events group by event_type) select business_id from (select event_type ,avg(occurences ) AS average from Events group by event_type) AS temp1 JOIN Events e2 on e2.event_type =temp1.event_type AND e2.occurences > temp1.average group by e2.business_id having count(distinct temp1.event_type )>1
with temp1 as ( select event_type, avg(occurences) as avg1 from events group by event_type), temp2 as ( select distinct a.business_id, a.event_type from events as a left join temp1 as b on a.event_type = b.event_type where a.occurences > b.avg1 ) select distinct business_id from temp2 group by business_id having count(business_id) >1
with temp1 as( SELECT event_type, AVG(occurences) as ave FROM Events GROUP BY event_type ) SELECT e.business_id FROM Events as e JOIN temp1 as t ON e.event_type = t.event_type GROUP BY e.business_id HAVING SUM(IF(e.occurences > t.ave, 1,0)) > 1
with tmp as ( select *, avg(occurences) over(partition by event_type) as avg_occ from events ) select business_id from tmp where occurences > avg_occ group by business_id having count(*) > 1
with tmp as (select event_type, avg(occurences) as avg_num from events group by 1 ) select business_id from events a inner join tmp b on a.event_type=b.event_type where occurences>avg_num group by 1 having count(*)>1
with tmp as( select *, avg(occurences) over(partition by event_type) as a from events ) select business_id from tmp where occurences > a group by business_id having count(*) > 1
with type_o as ( select event_type, sum(occurences)/count(event_type) as avg_occ from Events group by 1 ) select business_id from Events left join type_o on Events.event_type = type_o.event_type where occurences > avg_occ group by 1 having count(Events.event_type) > 1
with typeavg as( select event_type, avg(occurences) as average from events group by event_type ) select e.business_id from Events e join typeavg t on e.event_type = t.event_type where occurences > average group by e.business_id having count(e.business_Id) > 1
with x as ( select *, avg(occurences) over (partition by event_type) as av from events ) select business_id from x where occurences > av group by 1 having count(*) > 1
with x as (Select event_type,avg(occurences) as a from Events group by event_type) Select business_id from Events join x on Events.event_type=x.event_type where Events.occurences>x.a group by business_id having count(*)>1
with x as (select business_id, event_type, occurences, avg(occurences) over(partition by event_type) as avg1 from Events ) select business_id from x where occurences> avg1 group by business_id having count(*)>1
