SELECT D.user_id, MAX(D.w) biggest_window FROM (SELECT A.user_id, DATEDIFF(B.visit_date, A.visit_date) w FROM (SELECT user_id, visit_date, ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY visit_date) indx FROM UserVisits) A, (SELECT user_id, visit_date, ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY visit_date) indx FROM UserVisits) B WHERE A.user_id = B.user_id AND A.indx = B.indx - 1 UNION ALL SELECT C.user_id, DATEDIFF('2021-1-1',C.visit_date) w FROM (SELECT user_id, visit_date, ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY visit_date DESC) indx FROM UserVisits) C WHERE C.indx = 1) D GROUP BY D.user_id ORDER BY D.user_id
SELECT l.user_id, MAX(DATEDIFF(COALESCE(r.visit_Date, '2021-01-01'), l.visit_Date)) AS biggest_window FROM ( SELECT u1.user_id, u1.visit_date, COUNT(DISTINCT u2.visit_date) AS rnk FROM uservisits u1 LEFT JOIN uservisits u2 ON u1.user_id = u2.user_id AND u1.visit_date > u2.visit_date GROUP BY u1.user_id, u1.visit_Date ) l LEFT JOIN ( SELECT u1.user_id, u1.visit_date, COUNT(DISTINCT u2.visit_date) AS rnk FROM uservisits u1 LEFT JOIN uservisits u2 ON u1.user_id = u2.user_id AND u1.visit_date > u2.visit_date GROUP BY u1.user_id, u1.visit_Date ) r ON l.user_id = r.user_id AND l.rnk + 1 = r.rnk GROUP BY user_id ORDER BY user_id
SELECT sub.user_id, MAX(sub.diff) AS biggest_window FROM (SELECT user_id, DATEDIFF(LEAD(visit_date, 1, '2021-01-01') OVER (PARTITION BY user_id ORDER BY visit_date), visit_date) AS diff FROM UserVisits) sub GROUP BY sub.user_id ORDER BY sub.user_id
SELECT u.user_id, MAX(u.date_diff) as biggest_window FROM ( SELECT user_id, visit_date, lead(visit_date,1) over(partition by user_id order by visit_date) ,coalesce( datediff(lead(visit_date,1) over(partition by user_id order by visit_date), visit_date) ,datediff('2021-01-01', visit_date)) as date_diff FROM UserVisits) as u GROUP BY u.user_id
SELECT user_id , MAX(DATEDIFF(lagged,visit_date)) as biggest_window FROM ( select user_id, visit_date, coalesce(lead(visit_date) over(partition by user_id order by visit_date),'2021-01-01') as lagged from UserVisits ) A group by user_id
SELECT user_id , MAX(biggest_window) biggest_window FROM (SELECT user_id , datediff(lead(visit_date,1,'2021-1-1') OVER (PARTITION BY user_id ORDER BY visit_date),visit_date ) biggest_window FROM UserVisits) as a GROUP BY user_id
SELECT user_id ,MAX(DATEDIFF(next_visit_date,visit_date)) AS biggest_window FROM (SELECT * ,LEAD(visit_date,1,'2021-1-1') OVER (PARTITION BY user_id ORDER BY visit_date) AS next_visit_date FROM UserVisits) a GROUP BY 1
SELECT user_id ,MAX(DATEDIFF(next_visit_date,visit_date)) AS biggest_window FROM (SELECT * ,LEAD(visit_date,1,'2021-1-1') OVER (PARTITION BY user_id ORDER BY visit_date) AS next_visit_date FROM UserVisits) a GROUP BY 1 ORDER BY 1
SELECT user_id, CASE WHEN MAX(DIF) IS NULL THEN DATEDIFF("2021-1-1", MAX(visit_date)) WHEN MAX(DIF) < DATEDIFF("2021-1-1", MAX(visit_date)) THEN DATEDIFF("2021-1-1", MAX(visit_date)) ELSE MAX(DIF) END AS biggest_window FROM( SELECT user_id, DATEDIFF(visit_date, LAG(visit_date, 1) OVER(PARTITION BY user_id ORDER BY visit_date ASC)) DIF, visit_date FROM UserVisits) T GROUP BY user_id ORDER BY user_id
SELECT user_id, GREATEST(MAX(win), DATEDIFF('2021-1-1', MAX(visit_date))) AS biggest_window FROM( SELECT user_id, visit_date, DATEDIFF(visit_date, LAG(visit_date, 1, visit_date) OVER (PARTITION BY user_id ORDER BY visit_date)) AS win FROM UserVisits ) tmp GROUP BY user_id ORDER BY user_id
SELECT user_id, MAX(DATEDIFF(date2,date1)) AS biggest_window FROM ( SELECT a.user_id, a.visit_date as date1, MIN(IFNULL(b.visit_date,'2021-1-1')) as date2 FROM UserVisits a LEFT JOIN UserVisits b ON a.user_id=b.user_id AND a.visit_date<b.visit_date GROUP BY 1,2 ) sub GROUP BY 1 ORDER BY 1
SELECT user_id, MAX(DATEDIFF(day_after, visit_date)) AS biggest_window FROM (SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date) AS day_after FROM UserVisits) a GROUP BY user_id
SELECT user_id, MAX(DATEDIFF(next_date, visit_date)) AS biggest_window FROM ( SELECT v1.user_id, v1.visit_date, COALESCE(MIN(v2.visit_date), '2021-1-1') AS next_date FROM UserVisits v1 LEFT OUTER JOIN UserVisits v2 ON v2.user_id = v1.user_id AND v2.visit_date > v1.visit_date GROUP BY v1.user_id, v1.visit_date ) t GROUP BY user_id
SELECT user_id, MAX(DATEDIFF(next_date,visit_date)) AS biggest_window FROM ( SELECT user_id, visit_date, IFNULL(LEAD(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date),'2021-1-1') AS next_date FROM UserVisits ) SUB GROUP BY 1
SELECT user_id, MAX(DATEDIFF(next_date,visit_date)) AS biggest_window FROM (SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS next_date FROM UserVisits) T GROUP BY user_id
SELECT user_id, MAX(DATEDIFF(next_date,visit_date)) as biggest_window FROM (SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS next_date FROM UserVisits u) t1 GROUP BY user_id
SELECT user_id, MAX(DATEDIFF(next_visit_date,visit_date)) AS biggest_window FROM ( SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date) AS next_visit_date FROM UserVisits ) AS temp GROUP BY 1
SELECT user_id, MAX(DATEDIFF(nxtvisit, visit_date)) as biggest_window FROM( SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date) AS nxtvisit FROM UserVisits )a GROUP BY user_id ORDER BY user_id
SELECT user_id, MAX(DATEDIFF(second_visit, first_visit)) AS biggest_window FROM (SELECT t1.user_id, t1.visit_date AS first_visit, MIN(t2.visit_date) AS second_visit FROM UserVisits t1 JOIN (SELECT DISTINCT(user_id), '2021-1-1' AS visit_date FROM UserVisits UNION ALL SELECT * FROM UserVisits) AS t2 ON t1.visit_date < t2.visit_date AND t1.user_id = t2.user_id GROUP BY t1.user_id, t1.visit_date) as t GROUP BY user_id ORDER BY user_id
SELECT user_id, MAX(current_window) AS biggest_window FROM (SELECT *, DATEDIFF(LEAD(visit_date, 1, '2021-1-1') OVER (PARTITION BY user_ID ORDER BY visit_date), visit_date) as current_window FROM UserVisits) AS temp GROUP BY user_id
SELECT user_id, MAX(date_diff) AS biggest_window FROM (SELECT user_id, DATEDIFF(LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date), visit_date) AS date_diff FROM UserVisits) t GROUP BY user_id ORDER BY user_id
SELECT user_id, MAX(datediff(next_visit, visit_date)) AS biggest_window FROM (SELECT user_id, visit_date, IFNULL(LEAD(visit_date, 1) OVER(PARTITION BY user_id ORDER BY visit_date), '2021-1-1') AS next_visit FROM UserVisits) AS t GROUP BY user_id
SELECT user_id, MAX(diff) AS biggest_window FROM ( SELECT user_id, DATEDIFF( LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date), visit_date ) AS diff FROM uservisits ) AS t GROUP BY user_id ORDER BY user_id
SELECT user_id, MAX(diff) AS biggest_window FROM ( SELECT user_id, DATEDIFF(IFNULL(LEAD(visit_date) OVER (PARTITION BY USER_ID ORDER BY visit_date), "2021-01-01"), VISIT_DATE) AS diff FROM UserVisits ) xx GROUP BY user_id
SELECT user_id, MAX(diff) AS biggest_window FROM ( SELECT user_id, DATEDIFF(IFNULL(LEAD(visit_date,1) OVER (PARTITION BY user_id ORDER BY visit_date),'2021-1-1'),visit_date) AS diff FROM UserVisits )t GROUP BY 1 ORDER BY 1
SELECT user_id, MAX(diff) AS biggest_window FROM ( SELECT user_id, DATEDIFF(LEAD(visit_date, 1, '2021-01-01') OVER (PARTITION BY user_id ORDER BY visit_date), visit_date) AS diff FROM userVisits ) a GROUP BY user_id ORDER BY user_id
SELECT user_id, MAX(diff) AS biggest_window FROM (SELECT user_id, DATEDIFF(LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date), visit_date) AS diff FROM UserVisits) AS temp GROUP BY 1
SELECT user_id, MAX(diff) AS biggest_window FROM (SELECT user_id, DATEDIFF(LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date), visit_date) AS diff FROM UserVisits) T GROUP BY user_id
SELECT user_id, MAX(diff) AS biggest_window FROM (SELECT user_id, DATEDIFF(LEAD(visit_date,1,'2021-01-01') OVER (PARTITION BY user_id ORDER BY visit_date),visit_date) AS diff FROM UserVisits) t GROUP BY user_id ORDER BY user_id
SELECT user_id, MAX(diff) AS biggest_window FROM (SELECT user_id, DATEDIFF(LEAD(visit_date,1,'2021-01-01') OVER(PARTITION BY user_id ORDER BY visit_date), visit_date) AS diff FROM userVisits ) Temp GROUP BY 1 ORDER BY 1
SELECT user_id, MAX(diff) AS biggest_window FROM (SELECT user_id, DATEDIFF(LEAD(visit_date,1,'2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date), visit_date) AS diff FROM userVisits ) Temp GROUP BY 1 ORDER BY 1
SELECT user_id, MAX(diff) AS biggest_window FROM( SELECT user_id, datediff(LEAD(visit_date, 1 ,'2021-01-01') OVER (PARTITION BY user_id ORDER BY visit_date) , visit_date) AS diff FROM userVisits) a GROUP BY 1
SELECT user_id, MAX(diff_days) AS biggest_window FROM( SELECT *, COALESCE(DATEDIFF(LEAD(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date), visit_date), DATEDIFF('2021-01-01', visit_date)) AS diff_days FROM UserVisits ORDER BY user_id, visit_date) uv GROUP BY user_id
SELECT user_id, MAX(visit_window) AS biggest_window FROM (SELECT user_id, DATEDIFF(LEAD(visit_date, 1, '2021-1-1')OVER(PARTITION BY user_id ORDER BY visit_date), visit_date) AS visit_window FROM UserVisits ) t GROUP BY 1 ORDER BY 1
SELECT user_id, MAX(wd) AS biggest_window FROM (SELECT u1.user_id, MIN(DATEDIFF(IFNULL(u2.visit_date, '2021-1-1'), u1.visit_date)) AS wd FROM UserVisits AS u1 LEFT JOIN UserVisits AS u2 ON u1.user_id = u2.user_id AND u1.visit_date < u2.visit_date GROUP BY 1, u1.visit_date) AS u GROUP BY 1 ORDER BY 1
SELECT user_id, MAX(window_length) as biggest_window FROM ( SELECT user_id, DATEDIFF(next_visit, visit_date) as window_length FROM ( SELECT IFNULL(LEAD(visit_date,1) OVER(PARTITION BY USER_ID ORDER BY visit_date ASC),DATE_FORMAT("2021-1-1", "%Y-%m-%d")) as next_visit, visit_date, user_id FROM UserVisits ) z ) zz GROUP BY 1
SELECT user_id, MAX(windows) as biggest_window FROM (SELECT user_id, DATEDIFF(IFNULL((LEAD(visit_date, 1) OVER(Partition by user_id Order by visit_date)), '2021-01-01'), visit_date) as windows FROM UserVisits ) as a GROUP BY user_id ORDER BY user_id
SELECT user_id, MAX(windows) as biggest_window FROM (SELECT user_id, DATEDIFF(IFNULL((LEAD(visit_date, 1) OVER(Partition by user_id Order by visit_date)), '2021-01-01'), visit_date) as windows FROM UserVisits) as a GROUP BY user_id ORDER BY user_id
SELECT user_id, Max(diff) as biggest_window FROM ( SELECT user_id, DATEDIFF(LEAD(visit_Date,1,'2021-1-1') OVER (PARTITION BY user_id ORDER BY visit_Date), visit_date)as diff FROM UserVisits ) a GROUP BY user_id ORDER BY user_id
SELECT user_id, max(diff)as biggest_window FROM ( SELECT user_id, DATEDIFF(LEAD(visit_date,1,"2021-01-01")over(partition by user_id order by visit_date),visit_date)as diff FROM UserVisits )t GROUP BY user_id ORDER BY user_id
SELECT x.user_id,max(abs(datediff(x.date_2,x.date_1))) as biggest_window FROM ( SELECT u2.user_id, u2.visit_date as date_1,MAX(u1.visit_date) as date_2 FROM uservisits u1 JOIN uservisits u2 ON u1.visit_date<u2.visit_date and u1.user_id=u2.user_id grouP By u2.visit_date, u2.user_id UNION SELECT user_id, MAX(visit_date) as date_1, "2021-1-1" as date_2 FROM uservisits GROUP BY user_id ) x group by 1 order by 1,2
Select user_id, max(widow) as 'biggest_window' from (Select user_id, datediff(coalesce(lead(visit_date,1) over (partition by user_id order by visit_date), '2021-1-1'),visit_date ) as 'widow' from UserVisits) x group by user_id
Select user_id,MAX(fc) as "biggest_window" FROM ( Select user_id, datediff(ifNULL(Lead(visit_date) OVER(partition BY user_id ORDER BY visit_date),'2021-1-1'),visit_date) as fc FROM UserVisits )s GROUP BY user_id ORDER BY user_id ASC
WITH A AS (SELECT * FROM UserVisits ORDER BY user_id, visit_date), B AS (SELECT *, LEAD(visit_date) OVER(PARTITION BY user_id ORDER BY visit_date) as next_visit FROM A), C AS (SELECT *, CASE WHEN next_visit IS NULL THEN DATEDIFF ('2021-01-01', visit_date) ELSE DATEDIFF(next_visit, visit_date) END AS windows FROM B) SELECT user_id, MAX(windows) as biggest_window FROM C GROUP BY user_id
WITH CET AS (SELECT *, RANK() OVER(PARTITION BY user_id ORDER BY visit_date) AS RK FROM UserVisits) SELECT C1.user_id, MAX(DATEDIFF(IFNULL(C2.visit_date,'2021-1-1'), C1.visit_date)) AS biggest_window FROM CET C1 LEFT JOIN CET C2 ON C1.user_id = C2.user_id AND C1.RK = C2.RK - 1 GROUP BY 1 ORDER BY 1
WITH CET AS (SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-1-1') OVER (PARTITION BY user_id ORDER BY visit_date) AS BENCH_DATE FROM UserVisits) SELECT user_id, MAX(DATEDIFF(BENCH_DATE, visit_date)) AS biggest_window FROM CET GROUP BY user_id ORDER BY user_id
WITH CTE AS ( Select user_id, DATEDIFF(LEAD(visit_date, 1, '2021-01-01') OVER (partition by user_id order by visit_date ASC), visit_date) as window_date from UserVisits ) Select user_id, max(window_date) as biggest_window from CTE group by user_id
WITH CTE AS (SELECT *, LAG(visit_date, 1) OVER(PARTITION BY user_id ORDER BY visit_date) AS prev_date, COUNT(user_id) OVER(PARTITION BY user_id) as cnt FROM (SELECT * FROM UserVisits UNION ALL SELECT DISTINCT user_id, '2021-01-01' AS visit_date FROM UserVisits) a) SELECT user_id, MAX(DATEDIFF(visit_date, prev_date)) AS biggest_window FROM CTE GROUP BY 1 ORDER BY 1
WITH CTE AS( SELECT *, DATEDIFF(IFNULL(LAG(visit_date) OVER(PARTITION BY user_id ORDER BY visit_date DESC), '2021-1-1'), visit_date) AS diff FROM UserVisits ) SELECT user_id, MAX(diff) AS biggest_window FROM CTE GROUP BY user_id ORDER BY user_id
WITH CTE1 AS ( SELECT DISTINCT user_id, '2021-01-01' AS visit_date FROM UserVisits UNION ALL SELECT DISTINCT user_id, visit_date FROM UserVisits), CTE2 AS ( SELECT user_id, visit_date, ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY visit_date) AS rks FROM CTE1), CTE3 AS ( SELECT a.user_id, DATEDIFF(b.visit_date, a.visit_date) AS ct FROM CTE2 AS a, CTE2 AS b WHERE a.user_id = b.user_id AND a.rks+1 = b.rks) SELECT user_id, MAX(ct) AS biggest_window FROM CTE3 GROUP BY user_id ORDER BY user_id
WITH DaysSinceJan1 AS ( SELECT user_id, DATEDIFF('2021-01-01', MAX(visit_date)) AS biggest_window FROM UserVisits GROUP BY user_id ), UserVisitsWithRowNumber AS ( SELECT user_id, visit_date, ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY visit_date) AS row_num FROM UserVisits ), UserVisitsWindow AS ( SELECT U1.user_id, DATEDIFF(U1.visit_date, U2.visit_date) AS biggest_window FROM UserVisitsWithRowNumber U1 INNER JOIN UserVisitsWithRowNumber U2 ON U1.user_id = U2.user_id AND U1.row_num = U2.row_num +1 ), UnionTable AS ( SELECT user_id, biggest_window FROM DaysSinceJan1 UNION ALL SELECT user_id, biggest_window FROM UserVisitsWindow ) SELECT user_id, MAX(biggest_window) AS biggest_window FROM UnionTable GROUP BY user_id
WITH NextUserVisit AS (SELECT user_id ,visit_date AS currentVisit ,LEAD(visit_date,1,'2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS nextVisit FROM UserVisits), VisitDuration AS (SELECT user_id ,DATEDIFF(nextVisit,currentVisit) AS wd FROM NextUserVisit) SELECT user_id ,MAX(wd) AS biggest_window FROM VisitDuration GROUP BY user_id ORDER BY 1 ASC
WITH NextVisit AS (SELECT user_id ,visit_date ,LEAD(visit_date,1,'2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS next_visit FROM UserVisits), Gaps AS (SELECT user_id ,DATEDIFF(next_visit,visit_date) AS currnet_gap FROM NextVisit) SELECT user_id ,MAX(currnet_gap) AS biggest_window FROM Gaps GROUP BY user_id
WITH NextVisitDate AS (SELECT user_id ,visit_date ,LEAD(visit_date,1,'2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS next_visit_date FROM UserVisits), VisitWindow AS (SELECT user_id ,DATEDIFF(next_visit_date,visit_date) AS DaysBetweenVisits FROM NextVisitDate) SELECT user_id ,MAX(DaysBetweenVisits) AS biggest_window FROM VisitWindow GROUP BY user_id ORDER BY 1 ASC
WITH R AS ( SELECT USER_ID, VISIT_DATE, RANK() OVER(PARTITION BY USER_ID ORDER BY VISIT_DATE DESC) AS R FROM USERVISITS ), WIND AS ( SELECT USER_ID, VISIT_DATE, R, LAG(VISIT_DATE, 1) OVER(PARTITION BY USER_ID ORDER BY VISIT_DATE DESC) AS PRE, CASE WHEN R=1 THEN DATEDIFF( '2021-1-1',VISIT_DATE) ELSE DATEDIFF( LAG(VISIT_DATE, 1) OVER(PARTITION BY USER_ID ORDER BY VISIT_DATE DESC), VISIT_DATE) END AS WIN FROM R ) SELECT USER_ID, MAX(WIN) AS BIGGEST_WINDOW FROM WIND GROUP BY USER_ID
WITH T0 AS (SELECT * FROM UserVisits UNION SELECT DISTINCT user_id, '2021-1-1' AS visit_date FROM UserVisits), T1 AS (SELECT *, LEAD(visit_date, 1) OVER (PARTITION BY user_id ORDER BY visit_date) AS visit_date_lead FROM T0), T2 AS (SELECT user_id, COALESCE(ABS(DATEDIFF(visit_date_lead, visit_date)), 0) AS diff FROM T1) SELECT user_id, MAX(diff) AS biggest_window FROM T2 GROUP BY user_id ORDER BY user_id
WITH U AS ( SELECT *, RANK() OVER(PARTITION BY V.user_id ORDER BY V.visit_date) AS rk FROM (SELECT * FROM UserVisits UNION SELECT DISTINCT user_id, '2021-1-1' FROM UserVisits) V ), D AS ( SELECT U1.user_id, DATEDIFF(U1.visit_date, U2.visit_date) AS df FROM U AS U1 INNER JOIN U AS U2 ON U1.user_id = U2.user_id AND U1.rk = U2.rk + 1 ) SELECT D.user_id, MAX(D.df) AS biggest_window FROM D GROUP BY D.user_id ORDER BY D.user_id ASC
WITH U AS ( SELECT ROW_NUMBER() OVER(PARTITION BY user_id ORDER BY visit_date) 'r', user_id, visit_date FROM UserVisits ) SELECT U1.user_id, MAX(ABS(DATEDIFF(U1.visit_date, IFNULL(U2.visit_date, '2021-1-1')))) 'biggest_window' FROM U U1 LEFT JOIN U U2 ON U1.user_id = U2.user_id AND U1.r+1 = U2.r GROUP BY 1
WITH UserVisitsOrder AS (SELECT user_id ,visit_date ,RANK() OVER (PARTITION BY user_id ORDER BY visit_date ASC) AS visit_order FROM UserVisits), UserWindow AS (SELECT initialvisit.user_id ,DATEDIFF(IFNULL(nextvisit.visit_date,'2021-1-1'), initialvisit.visit_date) AS wd FROM UserVisitsOrder initialvisit LEFT JOIN UserVisitsOrder nextvisit ON initialvisit.user_id = nextvisit.user_id AND nextvisit.visit_order = initialvisit.visit_order + 1) SELECT user_id ,MAX(wd) AS biggest_window FROM UserWindow GROUP BY user_id
WITH VISIT_INFO AS( SELECT USER_ID, DATEDIFF(IFNULL(LEAD(VISIT_DATE) OVER(PARTITION BY USER_ID ORDER BY VISIT_DATE),'2021-1-1'), VISIT_DATE )AS VISIT_WINDOW FROM USERVISITS ) SELECT USER_ID, MAX(VISIT_WINDOW) AS BIGGEST_WINDOW FROM VISIT_INFO GROUP BY USER_ID ORDER BY USER_ID
WITH VisitWindow AS (SELECT user_id ,DATEDIFF(LEAD(visit_date,1,'2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC),visit_date) AS nextWindow FROM UserVisits) SELECT user_id ,MAX(nextWindow) AS biggest_window FROM VisitWindow GROUP BY user_id ORDER BY 1 ASC
WITH a AS ( SELECT *, DATEDIFF(IFNULL(LAG(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date DESC),'2021-1-1'),visit_date) AS biggest_window FROM UserVisits ) SELECT user_id, MAX(biggest_window) AS biggest_window FROM a GROUP BY user_id ORDER BY user_id
WITH base_table AS ( SELECT user_id, visit_date, IFNULL(LEAD(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date), "2021-01-01") AS next_visit_date FROM UserVisits GROUP BY 1,2 ) SELECT user_id, MAX(DATEDIFF(next_visit_date, visit_date)) AS biggest_window FROM base_table GROUP BY 1 ORDER BY 1
WITH cte AS ( SELECT *, IFNULL(LEAD(visit_date) OVER(PARTITION BY user_id ORDER BY visit_date), CAST("2021-01-01" AS DATE) ) AS leadd FROM UserVisits ORDER BY 1, 2 ) SELECT user_id, MAX(day_diff) AS biggest_window FROM (SELECT *, datediff(leadd , visit_date) AS day_diff FROM cte) sub11 GROUP BY user_id
WITH cte AS ( SELECT *, LEAD(visit_date, 1, '2021-1-1') OVER (PARTITION BY user_id ORDER BY visit_date) AS next_date FROM UserVisits) SELECT user_id, MAX(DATEDIFF(next_date, visit_date)) AS biggest_window FROM cte GROUP BY user_id
WITH cte AS ( SELECT u1.user_id, u1.visit_date, COUNT(DISTINCT u2.visit_date) AS rnk FROM uservisits u1 LEFT JOIN uservisits u2 ON u1.user_id = u2.user_id AND u1.visit_date > u2.visit_date GROUP BY u1.user_id, u1.visit_date ) SELECT c1.user_id, MAX(DATEDIFF(COALESCE(c2.visit_date, '2021-01-01'), c1.visit_Date)) AS biggest_window FROM cte c1 LEFT JOIN cte c2 ON c1.user_id = c2.user_id AND c1.rnk + 1 = c2.rnk GROUP BY c1.user_id
WITH cte AS ( SELECT user_id, visit_date, IFNULL( LAG(visit_date, 1) OVER(PARTITION BY user_id ORDER BY visit_date DESC), '2021-01-01' ) AS lag_date FROM UserVisits ) SELECT user_id, MAX(DATEDIFF(lag_date, visit_date)) AS biggest_window FROM cte GROUP BY user_id
WITH cte AS (SELECT *, LEAD(visit_date) OVER(PARTITION BY USER_ID order by visit_date) AS next_date FROM uservisits) SELECT user_id, max(ASD) AS biggest_window FROM (SELECT *, CASE WHEN next_date IS NOT NULL THEN DATEDIFF(next_date,visit_date) ELSE DATEDIFF('2021-1-1',visit_date) END AS ASD FROM cte) a GROUP BY user_id
WITH cte AS (SELECT user_id, visit_date FROM UserVisits UNION ALL SELECT DISTINCT user_id, "2021-01-01" FROM UserVisits) , cte2 AS (SELECT user_id, visit_date, DENSE_RANK() OVER(ORDER BY user_id, visit_date) AS rnk FROM cte) SELECT c1.user_id, MAX(DATEDIFF(c2.visit_date, c1.visit_date)) AS biggest_window FROM cte2 c1 JOIN cte2 c2 ON c1.rnk = c2.rnk - 1 GROUP BY c1.user_id
WITH cte AS (SELECT user_id, visit_date FROM UserVisits UNION ALL SELECT DISTINCT user_id, "2021-01-01" FROM UserVisits) , cte2 AS (SELECT user_id, visit_date, DENSE_RANK() OVER(PARTITION BY user_id ORDER BY visit_date) AS rnk FROM cte) SELECT c1.user_id, MAX(DATEDIFF(c2.visit_date, c1.visit_date)) AS biggest_window FROM cte2 c1 JOIN cte2 c2 ON c1.user_id = c2.user_id AND c1.rnk = c2.rnk - 1 GROUP BY c1.user_id
WITH cte AS( SELECT user_id, visit_date, COALESCE(LEAD(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date ASC),'2021-1-1') AS next_date FROM UserVisits ) SELECT user_id, MAX(DATEDIFF(next_date,visit_date)) AS biggest_window FROM cte GROUP BY user_id
WITH cte AS( SELECT user_id, visit_date, COALESCE(LEAD(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date ASC),'2021-1-1') AS next_date FROM UserVisits ) SELECT user_id, MAX(DATEDIFF(next_date,visit_date)) as biggest_window FROM cte GROUP BY user_id
WITH cte as ( SELECT user_id, visit_date FROM uservisits ORDER BY 1,2 ), cte1 as ( SELECT user_id,visit_date, LEAD(visit_date,1) OVER (PARTITION BY user_id ORDER BY visit_date) as next_date FROM cte ), cte2 as ( SELECT user_id, CASE WHEN next_date is not null THEN ABS(DATEDIFF(next_date,visit_date)) ELSE DATEDIFF('2021-01-01',visit_date) END as date_diff FROM cte1 ) SELECT user_id, max(date_diff) as biggest_window FROM cte2 GROUP BY user_id
WITH cte as ( SELECT user_id,datediff (ifnull(lead(visit_date) over (partition by user_id order by visit_date), '2021-01-01'),visit_date) as diff FROM uservisits ) SELECT user_id, max(diff) as biggest_window FROM cte GROUP BY 1
WITH cte1 AS (SELECT user_id, visit_date, IFNULL(LEAD(visit_date, 1) OVER (PARTITION BY user_id ORDER BY visit_date), '2021-01-01') AS next_date FROM UserVisits) SELECT user_id, MAX(DATEDIFF(next_date, visit_date)) AS biggest_window FROM cte1 GROUP BY user_id ORDER BY user_id
WITH cte1 as ( SELECT * FROM ( SELECT user_id, '2021-1-1' AS visit_date FROM UserVisits union SELECT user_id, visit_date FROM UserVisits ) t ) SELECT user_id, MAX(diff) as biggest_window FROM ( SELECT user_id, DATEDIFF(following_date, visit_date) AS diff FROM ( SELECT user_id, visit_date, LEAD(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date ASC) AS following_date FROM cte1 ) v ) s GROUP BY user_id
WITH cte1 as ( SELECT user_id,visit_date, LEAD(visit_date,1) OVER (PARTITION BY user_id ORDER BY visit_date) as next_date FROM uservisits ), cte2 as ( SELECT user_id, CASE WHEN next_date is not null THEN ABS(DATEDIFF(next_date,visit_date)) ELSE DATEDIFF('2021-01-01',visit_date) END as date_diff FROM cte1 ) SELECT user_id, max(date_diff) as biggest_window FROM cte2 GROUP BY user_id
WITH fulltable as ( SELECT DISTINCT user_id, '2021-1-1' as visit_date FROM UserVisits UNION ALL SELECT * FROM UserVisits ORDER BY user_id, visit_date ) SELECT user_id, MAX(next_visit_date) as biggest_window FROM ( SELECT user_id, visit_date, DATEDIFF(LEAD(visit_date) OVER(PARTITION BY user_id ORDER BY visit_date),visit_date) as next_visit_date FROM fulltable ORDER BY 1, 2) sub GROUP BY 1 ORDER BY 1
WITH getVisits AS ( SELECT user_id, visit_date, COALESCE( LEAD(visit_date,1) OVER( PARTITION BY user_id ORDER BY visit_date ) ,'2021-1-1') AS lead_date FROM UserVisits ) SELECT user_id, MAX(DATEDIFF(lead_date, visit_date)) AS biggest_window FROM getVisits GROUP BY 1
WITH getVisits AS ( SELECT user_id, visit_date, LEAD(visit_date,1,'2021-1-1') OVER( PARTITION BY user_id ORDER BY visit_date ) AS lead_date FROM UserVisits ) SELECT user_id, MAX(DATEDIFF(lead_date, visit_date)) AS biggest_window FROM getVisits GROUP BY 1
WITH main AS ( SELECT user_id, IFNULL((DATEDIFF(LEAD(visit_date) OVER(PARTITION BY user_id ORDER BY visit_date), visit_date)), DATEDIFF('2021-1-1',visit_date)) AS win FROM UserVisits ) SELECT user_id, MAX(win) AS biggest_window FROM main GROUP BY user_id ORDER BY user_id
WITH r AS( SELECT *, LEAD(visit_date,1,"2021-1-1")OVER(PARTITION BY user_id ORDER BY visit_date) AS nextvisit FROM UserVisits ORDER BY visit_date ) SELECT user_id, MAX(DATEDIFF(nextvisit, visit_date))AS biggest_window FROM r GROUP BY user_id ORDER BY user_id
WITH t AS ( SELECT *, LEAD(visit_date, 1, '2021-1-1') OVER (PARTITION BY user_id ORDER BY visit_date) AS lead_date FROM UserVisits) SELECT user_id, MAX(DATEDIFF(lead_date, visit_date)) AS biggest_window FROM t GROUP BY user_id
WITH t AS ( SELECT *, LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS last_date FROM UserVisits ) SELECT user_id, MAX(DATEDIFF(last_date, visit_date)) AS biggest_window FROM t GROUP BY 1 ORDER BY user_id
WITH t AS ( SELECT user_id, DATE('2021-1-1') AS visit_date FROM (SELECT distinct user_id FROM UserVisits) t UNION ALL SELECT * FROM UserVisits ) SELECT user_id, MAX(win) as biggest_window FROM ( SELECT *, DATEDIFF(visit_date, LAG(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date asc)) as win FROM t ) t1 GROUP BY user_id
WITH t AS ( SELECT user_id, DATE('2021-1-1') AS visit_date FROM (SELECT distinct user_id FROM UserVisits) t UNION ALL SELECT * FROM UserVisits ) SELECT user_id, MAX(win) as biggest_window FROM ( SELECT *, DATEDIFF(visit_date, LEAD(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date desc)) as win FROM t ) t1 GROUP BY user_id
WITH t AS ( SELECT user_id, visit_date, RANK() OVER(PARTITION BY user_id ORDER BY visit_date) AS tr FROM UserVisits ) SELECT a.user_id, MAX(DATEDIFF(IFNULL(b.visit_date, '2021-01-01'), a.visit_date)) AS biggest_window FROM t a LEFT JOIN t b ON a.user_id = b.user_id AND a.tr + 1 = b.tr GROUP BY user_id ORDER BY user_id
WITH t AS (SELECT *, RANK() OVER(PARTITION BY user_id ORDER BY visit_date) rnk FROM UserVisits ) SELECT t1.user_id, MAX(DATEDIFF(IFNULL(t2.visit_date, '2021-1-1'), t1.visit_date)) biggest_window FROM t t1 LEFT JOIN t t2 ON t1.user_id = t2.user_id AND t1.rnk = t2.rnk - 1 GROUP BY 1 ORDER BY 1
WITH t AS (SELECT user_id, visit_date, RANK() OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS rk FROM UserVisits) SELECT a.user_id, MAX(DATEDIFF(IFNULL(b.visit_date, '2021-01-01'), a.visit_date)) AS biggest_window FROM t a LEFT JOIN t b ON a.user_id = b.user_id AND a.rk = b.rk -1 GROUP BY 1 ORDER BY 1
WITH t2 AS ( SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS next_day FROM UserVisits ) SELECT user_id, MAX(DATEDIFF(next_day, visit_date)) biggest_window FROM t2 GROUP BY user_id
WITH table1 AS( SELECT user_id, visit_date, LEAD(visit_date,1,'2021-1-1')OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS next_date FROM UserVisits ) SELECT user_id, MAX(DATEDIFF(next_date, visit_date)) AS biggest_window FROM table1 GROUP BY user_id ORDER BY user_id
WITH tb1 AS (SELECT *, LEAD(visit_date) OVER(PARTITION BY user_id ORDER BY visit_date) next_date FROM UserVisits), tb2 AS (SELECT user_id, visit_date, IF(next_date is NULL, "2021-01-01", next_date) next_date FROM tb1), tb3 AS (SELECT *, ABS(DATEDIFF( visit_date, next_date)) diff FROM tb2) SELECT user_id, MAX(diff) biggest_window FROM tb3 GROUP BY user_id
WITH tbl AS ( SELECT user_id, visit_date FROM UserVisits ORDER BY visit_date ) SELECT user_id, max(days) AS biggest_window FROM ( SELECT user_id, visit_date, LEAD(visit_date) OVER(PARTITION BY user_id ORDER BY visit_date) AS next_visit, datediff(IFNULL(LEAD(visit_date) OVER(PARTITION BY user_id ORDER BY visit_date), '2021-1-1'), visit_date) as days FROM tbl ) BASE GROUP BY user_id ORDER BY user_id
WITH temp AS ( SELECT user_id, visit_date, IFNULL(LAG(visit_date, 1) OVER(PARTITION BY user_id ORDER BY visit_date DESC), '2021-01-01') AS lag_date FROM UserVisits ) SELECT user_id, MAX( DATEDIFF(lag_date, visit_date) ) AS biggest_window FROM temp GROUP BY user_id
WITH temp AS (SELECT *, RANK() OVER(PARTITION BY user_id ORDER BY visit_date) rnk FROM UserVisits ) SELECT t1.user_id, MAX(DATEDIFF(IFNULL(t2.visit_date, "2021-1-1"), t1.visit_date)) AS biggest_window FROM temp t1 LEFT JOIN temp t2 ON t1.user_id = t2.user_id AND t1.rnk = t2.rnk-1 GROUP BY 1 ORDER BY 1
WITH temp as ( SELECT user_id, DATEDIFF(LEAD(visit_date, 1, '2021-01-01') OVER(PARTITION BY user_id ORDER BY visit_date ASC), visit_date) AS diff FROM userVisits ) SELECT user_id, MAX(diff) as biggest_window FROM temp GROUP BY user_id ORDER BY user_id
WITH tmp1 AS (SELECT user_id, visit_date, IFNULL(LEAD(visit_date) OVER(partition by user_id ORDER BY visit_date), '2021-1-1') AS next_visit FROM UserVisits), tmp2 AS (SELECT user_id, ABS(DATEDIFF(visit_date, next_visit)) AS window_size FROM tmp1) SELECT user_id, MAX(window_size) AS biggest_window FROM tmp2 GROUP BY user_id
WITH user_visit_ranking AS ( SELECT user_id , visit_date , rank() over(partition by user_id order by visit_date asc) AS ranking FROM UserVisits ) SELECT u0.user_id , max(DATEDIFF(COALESCE(u1.visit_date,'2021-01-01'),u0.visit_date)) as biggest_window FROM user_visit_ranking u0 LEFT JOIN user_visit_ranking u1 on u1.user_id = u0.user_id and u1.ranking = u0.ranking +1 GROUP BY u0.user_id
WITH visit_order AS ( SELECT user_id, visit_date, ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY visit_date) AS row_num FROM UserVisits ) SELECT V1.user_id, MAX(DATEDIFF(IFNULL(V2.visit_date, '2021-01-01'), V1.visit_date)) AS biggest_window FROM visit_order AS V1 LEFT JOIN visit_order AS V2 ON V1.row_num = V2.row_num - 1 AND V1.user_id = V2.user_id GROUP BY V1.user_id
WITH visits as ( SELECT user_id, visit_date, next_visit, DATEDIFF(next_visit,visit_date) as diff FROM ( SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-01-01') OVER( PARTITION BY user_id ORDER BY visit_date) next_visit FROM UserVisits) AS T ) SELECT user_id, MAX(diff) AS biggest_window FROM visits GROUP BY user_id
WITH windows AS (SELECT user_id, visit_date, COALESCE(LEAD(visit_date) OVER (PARTITION BY user_id ORDER BY visit_date), '2021-01-01') as next_visit FROM uservisits) SELECT user_id, MAX(DATEDIFF(next_visit, visit_date)) as biggest_window FROM windows GROUP BY user_id
With CTE as ( select user_id, visit_date, coalesce(Lead(visit_date, 1) over(partition by user_id order by visit_Date), '2021-1-1') as next_date from uservisits ) select user_id, max(datediff(next_date, visit_date)) biggest_window from CTE group by user_id order by user_id
With cte as ( Select user_id, visit_date, rank() over (partition by user_id Order by visit_date) rnk From UserVisits) Select distinct a.user_id, Max(datediff(ifnull(b.visit_date,'2021-1-1'), a.visit_date)) biggest_window From cte a Left join cte b on a.user_id = b.user_id And a.rnk = b.rnk -1 Group by a.user_id
With cte_a as ( select user_id ,visit_date ,lead(visit_date,1,'2021-1-1') over (partition by user_id order by visit_date) as lead_date from uservisits order by user_id,visit_date) select user_id, max(datediff(lead_date,visit_date)) as biggest_window from cte_a group by user_id
select A.user_id as user_id, max(datediff(ifnull(B.visit_date, "2021-1-1"), A.visit_date)) as biggest_window from UserVisits as A left join UserVisits as B on A.user_id = B.user_id and A.visit_date < B.visit_date where (select count(*) from UserVisits where visit_date > A.visit_date and visit_date < B.visit_date and user_id = A.user_id) = 0 group by A.user_id
select a.user_id, max(a.nxt_visit) as biggest_window from (select user_id, abs(datediff(visit_date,ifnull(lead(visit_date,1) over (partition by user_id order by user_id, visit_date),'2021-1-1'))) as nxt_visit from uservisits)a group by 1
select a.user_id, max(a.w) as biggest_window from( select user_id, DATEDIFF(IFNULL(LEAD(visit_date, 1) OVER (PARTITION BY user_id ORDER BY visit_date), '2021-1-1'), visit_date) w from UserVisits) a group by a.user_id
select a.user_id, max(datediff(b.visit_date,a.visit_date)) biggest_window from (select user_id,visit_date,rank() over (partition by user_id order by visit_date) as ind from (select distinct user_id, '2021-01-01' as visit_date from UserVisits union (select * from UserVisits)) aa) a left join (select user_id,visit_date,rank() over (partition by user_id order by visit_date) as ind from (select distinct user_id, '2021-01-01' as visit_date from UserVisits union (select * from UserVisits)) bb )b on a.user_id=b.user_id and a.ind+1=b.ind group by a.user_id
select a.user_id,max(a.bigest) as biggest_window from (select user_id, DATEDIFF(LEAD(visit_date, 1, '2021-01-01') OVER (PARTITION BY user_id ORDER BY visit_date), visit_date) AS bigest from uservisits ) a group by a.user_id
select b.user_id, max(req1) as biggest_window from ( select user_id, visit_date, (case when datediff(lead(visit_Date) over (partition by user_id order by visit_date asc),visit_Date ) is null then datediff('2021-1-1',visit_date) else datediff(lead(visit_Date) over (partition by user_id order by visit_date asc),visit_Date ) end) as req1 from uservisits )b group by 1
select t.user_id, max(datediff(t.Next_visit_date,t.visit_date)) as biggest_window from (select user_id, visit_date, lead(visit_date,1,"2021-01-01") over (partition by user_id order by visit_date)as Next_visit_date from UserVisits) t group by user_id
select t.user_id, max(datediff(t.next_visit,t.visit_date)) as biggest_window from (select visit_date, lead(visit_date,1,'2021-1-1') over(partition by user_id order by visit_date asc) as next_visit, user_id from UserVisits) t group by t.user_id
select t.user_id, max(datediff(t.next_visit_date, t.visit_date)) as biggest_window from ( select user_id, visit_date, lead(visit_date,1,"2021-01-01") over (partition by user_id order by visit_date) as next_visit_date from uservisits) as t group by t.user_id order by t.user_id
select t.user_id, max(datediff(t.next_visit_date, t.visit_date)) as biggest_window from (select user_id, visit_date, lead(visit_date,1,"2021-01-01") over (partition by user_id order by visit_date) as next_visit_date from uservisits) as t group by t.user_id order by t.user_id
select t.user_id, max(datediff(t.next_visit_date,t.visit_date)) biggest_window from (select user_id, visit_date, lead(visit_date,1,'2021-1-1') over (partition by user_id order by visit_date ASC) next_visit_date from UserVisits) t group by 1 order by 1
select t2.a user_id, max(t2.wind) biggest_window from (select t1.user_id a, datediff(t1.next_date,t1.visit_date) wind from (SELECT user_id,visit_date, coalesce(lead(visit_date,1) over(partition by user_id order by visit_date),'2021-1-1') as next_date from uservisits)t1)t2 group by 1
select user_id , MAX(ABS(CASE WHEN next_visit IS NOT NULL THEN DATEDIFF(visit_date, next_visit) ELSE 0 END)) as biggest_window from ( select user_id, visit_date , LEAD(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date) as next_visit from UserVisits uv ) a GROUP BY user_id ORDER BY user_id
select user_id , max(datediff(nxt_visit_date, visit_date)) as biggest_window from (select user_id , visit_date , ifnull(lead(visit_date) over(partition by user_id order by visit_date), date'2021-01-01') as nxt_visit_date from uservisits ) temp group by 1 order by 1
select user_id , max(diff) as biggest_window from ( select user_id , datediff(lead(visit_date,1,'2021-1-1')over (partition by user_id order by visit_date),visit_date)as diff from UserVisits)t group by user_id
select user_id , max(diff) as biggest_window from ( select user_id, datediff(lead(visit_date,1,'2021-01-01') OVER(PARTITION BY user_id ORDER BY visit_date), visit_date) as diff from UserVisits ) a group by user_id order by user_id
select user_id ,max(diff) as biggest_window from( select user_id ,if(lead(visit_date) over (partition by user_id order by visit_date ) is null, datediff('2021-01-01',visit_date), datediff(lead(visit_date) over (partition by user_id order by visit_date ),visit_date)) as diff from UserVisits ) A group by user_id
select user_id, abs(max(datediff(next_date, visit_date))) as biggest_window from ( select user_id, visit_date, ifnull(lead(visit_date, 1) over (partition by user_id order by visit_date asc), '2021-1-1') as next_date from UserVisits) tb1 group by 1
select user_id, if(datediff('2021-1-1',max(visit_date))<ifnull(max(diff),0),ifnull(max(diff),0),datediff('2021-1-1',max(visit_date))) 'biggest_window' from (select *, datediff(visit_date, lead(visit_date) over(partition by user_id order by visit_date desc)) 'diff' from uservisits order by user_id, visit_date desc) ff group by user_id
select user_id, max( case when gap is null then datediff('2021-1-1', visit_date) else gap end) biggest_window from ( select user_id, visit_date, datediff(lead(visit_date) over(partition by user_id order by visit_date), visit_date) as gap from UserVisits ) a group by user_id order by user_id
select user_id, max( datediff(next_visit , visit_date)) as biggest_window from (select user_id, visit_date, ifnull(lead(visit_date,1)over(partition by user_id order by visit_date asc), '2021-1-1') as next_visit from UserVisits) a group by user_id
select user_id, max((TIMESTAMPDIFF(day,visit_date,ifnull(lead_date,'2021-01-01')))) as biggest_window from( select user_id, visit_date, lead(visit_date) over(partition by user_id order by visit_date asc) as lead_date from UserVisits ) lead_date_info group by user_id
select user_id, max(DATEDIFF(coalesce(nextVisit,'2021-1-1'), visit_date)) as biggest_window from ( select user_id, visit_date, lead(visit_date) over(partition by user_id order by visit_date) nextVisit from uservisits order by user_id ) A group by user_id
select user_id, max(DATEDIFF(ifnull(lead_date,DATE('2021-01-01')),visit_date)) as biggest_window from( select user_id, visit_date, lead(visit_date) over(partition by user_id order by visit_date asc) as lead_date from UserVisits ) lead_date_info group by user_id
select user_id, max(DATEDIFF(next_date,visit_date)) as biggest_window from (select user_id,visit_date, lead(visit_date) over (partition by user_id order by visit_date) as next_date from (select * from UserVisits union select distinct user_id, DATE_FORMAT('2021-01-01','%Y-%m-%d') from UserVisits) as temp) as temp2 group by user_id
select user_id, max(abs(DATEDIFF(l,visit_date))) as biggest_window from( select user_id, visit_date,lag(visit_date,1,'2021-1-1') over (partition by user_id order by visit_date desc) as l from (select * from uservisits order by user_id, visit_date desc) as w ) as t group by user_id
select user_id, max(biggest_window) as biggest_window from ( select user_id, abs(datediff(visit_date,lag(visit_date,1,'2021-1-1') over(partition by user_id order by visit_date desc))) as biggest_window from uservisits) a group by 1
select user_id, max(biggest_window) as biggest_window from (select user_id, datediff(IFNULL(lead(visit_date) over (partition by user_id order by visit_date), '2021-01-01'), visit_date) as biggest_window from userVisits) a group by 1 order by 1
select user_id, max(date_diff) as biggest_window from (select user_id, datediff(lead(visit_date) over(partition by user_id order by visit_date), visit_date) as date_diff from (select distinct user_id, '2021-1-1' as visit_date from UserVisits union select * from UserVisits order by user_id, visit_date) u )t group by user_id
select user_id, max(date_diff) as biggest_window from (select user_id, datediff(lead(visit_date, 1, '2021-1-1') over(partition by user_id order by visit_date),visit_date) as date_diff from UserVisits) s group by 1 order by 1
select user_id, max(datediff(lead_date,visit_date)) as biggest_window from ( select *, lead(visit_date, 1, '2021-1-1') over(partition by user_id order by visit_date) as lead_date from UserVisits ) sub group by 1
select user_id, max(datediff(lead_date,visit_date)) as biggest_window from( select user_id, visit_date, case when lead1 is null then '2021-01-01' else lead1 end as lead_date from( select user_id, visit_date, lead(visit_date) over(partition by user_id order by visit_date ) as lead1 from uservisits) as sub) as sub1 group by user_id
select user_id, max(datediff(lead_visit_date, visit_date)) as biggest_window from (select *, lead(visit_date, 1, '2021-1-1') over(partition by user_id order by visit_date) as lead_visit_date from uservisits) as tmpt group by 1
select user_id, max(datediff(lead_visit_date,visit_date)) as biggest_window from ( select user_id, visit_date, lead(visit_date, 1, '2021-1-1') over(partition by user_id order by visit_date) as lead_visit_date from UserVisits ) as tmpt group by 1
select user_id, max(datediff(lead_visit_date,visit_date)) as biggest_window from (select *, lead(visit_date, 1, '2021-1-1') over(partition by user_id order by visit_date) as lead_visit_date from UserVisits) as tmpt group by 1
select user_id, max(datediff(lead_visit_date,visit_date)) as biggest_window from (select user_id, visit_date, ifnull(lead(visit_date) over(partition by user_id order by visit_date),'2021-01-01') as lead_visit_date from UserVisits) tbl group by 1
select user_id, max(datediff(next_date, visit_date)) as biggest_window from (select *, ifnull(lead(visit_date) over(partition by user_id order by visit_date), cast('2021-01-01' as date)) as next_date from UserVisits)a group by user_id
select user_id, max(datediff(next_date, visit_date)) as biggest_window from( select user_id, visit_date, ifnull(lead(visit_date,1) over(partition by user_id order by visit_date),"2021-1-1") as next_date from uservisits ) sub group by 1 order by 1
select user_id, max(datediff(next_date,visit_date)) as biggest_window from ( SELECT user_id, visit_date, LEAD(visit_date, 1, '2021-1-1') OVER(PARTITION BY user_id ORDER BY visit_date ASC) AS next_date FROM UserVisits u)a group by user_id
select user_id, max(datediff(next_date,visit_date)) as biggest_window from ( select user_id, visit_date, ifnull(lead(visit_date) over (partition by user_id order by visit_date),"2021-1-1") as next_date from uservisits) tmp group by 1
select user_id, max(datediff(next_date,visit_date)) as biggest_window from ( select user_id, visit_date, lead(visit_date, 1, '2021-01-01') over (partition by user_id order by visit_date asc) as next_date from uservisits ) asd group by user_id
select user_id, max(datediff(next_date,visit_date)) as biggest_window from ( select user_id,visit_date,ifnull(lead(visit_date) over(partition by user_id order by visit_date),'2021-1-1') as next_date from UserVisits ) t group by user_id order by user_id
select user_id, max(datediff(next_one,visit_date)) as biggest_window from (select a.user_id, a.visit_date, min(ifnull(b.visit_date,'2021-1-1')) as next_one from UserVisits a left join UserVisits b on a.user_id=b.user_id and a.visit_date<b.visit_date group by a.user_id, a.visit_date) a group by user_id
select user_id, max(datediff(next_visit,visit_date)) as biggest_window from ( select user_id, visit_date, ifnull(lead(visit_date) over (partition by user_id order by visit_date),'2021-01-01') as next_visit from Uservisits ) x group by 1 order by 1
select user_id, max(datediff(next_visit,visit_date)) as biggest_window from (select user_id, lead(visit_date, 1, '2021-01-01') over(partition by user_id order by visit_date) as next_visit , visit_date from uservisits) t1 Group by user_id order by user_id
select user_id, max(datediff(next_visit_date, visit_date)) as biggest_window from ( select user_id, visit_date, lead(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date) as next_visit_date from uservisits )uv group by user_id
select user_id, max(datediff(next_visit_date,visit_date)) as biggest_window from ( select user_id, visit_date, ifnull(lead(visit_date,1) over(partition by user_id order by visit_date),'2021-1-1') as next_visit_date from uservisits ) as a group by 1 order by 1
select user_id, max(datediff(next_visit_date,visit_date)) as biggest_window from (select user_id, visit_date, lead(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date) as next_visit_date from uservisits) a group by 1
select user_id, max(datediff(visit_date, prev_date)) biggest_window from ( select user_id, visit_date, lag(visit_date, 1) over (partition by user_id order by visit_date) prev_date from (select distinct user_id, '2021-01-01' as visit_date from uservisits union all select * from uservisits order by user_id, visit_date ) t ) z group by 1
select user_id, max(datediff(visit_date2, visit_date)) as biggest_window from (select user_id, visit_date, ifnull(lead(visit_date, 1) over(partition by user_id order by visit_date),'2021-1-1') as visit_date2 from UserVisits) as t group by user_id
select user_id, max(datediff) as biggest_window from ( select user_id, case when nextdate is null then datediff('2021-01-01',visit_date) else datediff(nextdate,visit_date) end as datediff from ( select user_id, visit_date, lead(visit_date,1) over (partition by user_id order by visit_date) as nextdate from uservisits) a) b group by user_id
select user_id, max(day_diff) as biggest_window from (select user_id, datediff(coalesce(lead(visit_date) over(partition by user_id order by visit_date),'2021-1-1'),visit_date) as day_diff from UserVisits)a group by user_id
select user_id, max(days) biggest_window from( select user_id, visit_date, previous_date, datediff(case when previous_date is null then date_format('2021-1-1','%Y-%m-%d') else previous_date end, visit_date) days from ( select user_id, visit_date, lead(visit_date) over(partition by user_id order by visit_date asc) previous_date from UserVisits )tmp )tmp2 group by user_id
select user_id, max(days) biggest_window from( select user_id, visit_date, previous_date, datediff(previous_date, visit_date) days from ( select user_id, visit_date, coalesce(lead(visit_date) over(partition by user_id order by visit_date asc), '2021-1-1') previous_date from UserVisits )tmp )tmp2 group by user_id
select user_id, max(diff) as biggest_window from ( select user_id, datediff(coalesce(lead(visit_date) over (partition by user_id order by visit_date), '2021-01-01'), visit_date) as diff from userVisits ) t group by user_id order by user_id
select user_id, max(diff) as biggest_window from ( select user_id, datediff(lead(visit_date, 1, '2021-01-01') over (partition by user_id order by visit_date) , visit_date) as diff from UserVisits ) a group by user_id order by user_id
select user_id, max(diff) as biggest_window from ( select user_id, datediff(lead(visit_date, 1, '2021-01-01') over(partition by user_id order by visit_date), visit_date) as diff from uservisits ) tmp group by 1
select user_id, max(diff) as biggest_window from ( select user_id, datediff(lead(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date) , visit_date) as diff from UserVisits ) temp group by 1 order by 1
select user_id, max(diff) as biggest_window from ( select user_id, visit_date, datediff( COALESCE( lead(visit_date) over(partition by user_id order by visit_date), '2021-01-01' ), visit_date ) as diff from UserVisits ) f group by 1 order by 1
select user_id, max(diff) as biggest_window from ( select user_id, visit_date, datediff( coalesce(lead(visit_date) over(partition by user_id order by visit_date),'2021-01-01'), visit_date ) as diff from UserVisits ) f group by 1 order by 1
select user_id, max(diff) as biggest_window from (SELECT user_id, DATEDIFF(LEAD(visit_date, 1, '2021-01-01') OVER (PARTITION BY user_id ORDER BY visit_date), visit_date) AS diff FROM userVisits) t group by user_id order by user_id
select user_id, max(diff) as biggest_window from (select user_id, abs(datediff(visit_date, ifnull(lead(visit_date) over (partition by user_id order by visit_date asc),'2021-01-01'))) as diff from uservisits) a group by user_id
select user_id, max(diff) as biggest_window from (select user_id, datediff(coalesce(lead(visit_date)over (partition by user_id order by visit_date), "2021-01-01"),visit_date) as diff from UserVisits) as temp group by user_id order by user_id
select user_id, max(diff) as biggest_window from (select user_id, datediff(ifnull(lead(visit_Date) over (partition by user_id order by visit_date),'2021-1-1'),visit_date) as diff from UserVisits) as a group by 1
select user_id, max(diff) as biggest_window from (select user_id, datediff(lead(visit_date, 1, "2021-1-1") over(partition by user_id order by visit_date), visit_date) as diff from uservisits) a group by user_id order by user_id
select user_id, max(diff) as biggest_window from (select user_id, datediff(lead(visit_date, 1, '2021-1-1') over (partition by user_id order by visit_date), visit_date) as diff from UserVisits) as t group by user_id order by user_id
select user_id, max(diff) as biggest_window from (select user_id, datediff(lead(visit_date, 1, '2021-1-1') over (partition by user_id order by visit_date), visit_date) as diff from uservisits) t group by 1 order by 1
select user_id, max(diff) as biggest_window from (select user_id, datediff(lead(visit_date,1,'2021-1-1') over(partition by user_id order by visit_date), visit_date) as diff from uservisits) tmp group by 1 order by 1
select user_id, max(diff) as biggest_window from( select user_id, datediff(lead(visit_date,1,'2021-01-01')over(partition by user_id order by visit_date),visit_date) as diff from UserVisits) as a group by user_id
select user_id, max(diff) as biggest_window from( select user_id, datediff(lead(visit_date,1,'2021-1-1')over(partition by user_id order by visit_date), visit_date) diff from uservisits ) a group by user_id order by user_id
select user_id, max(diff) as biggest_window from( select user_id, visit_date, datediff(previous_visit,visit_date) as diff from( select user_id, visit_date, rn, case when rn = 1 then '2021-01-01' else prev_visit end as previous_visit from( select user_id,visit_date, row_number() over (partition by user_id order by visit_date desc) as rn, lag(visit_date) over (partition by user_id order by visit_date desc) as prev_visit from UserVisits)A)B)C group by user_id
select user_id, max(diff) biggest_window from (select user_id, datediff( lead(visit_date,1,'2021-01-01') over(partition by user_id order by visit_date), visit_date) diff from UserVisits) temp group by 1 order by 1
select user_id, max(diff) biggest_window from (select user_id, datediff(lead(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date), visit_date) diff from UserVisits) t group by user_id order by user_id
select user_id, max(diff) biggest_window from( select user_id, datediff(ifnull(lead(visit_date) over(partition by user_id order by visit_date),'2021-01-01'),visit_date) diff from uservisits ) t group by 1
select user_id, max(difference) as biggest_window from ( select user_id, datediff(ifnull((lead(visit_date, 1) over(partition by user_id order by visit_date)),'2021-1-1'),visit_date) as difference from uservisits) as a group by 1 order by 1
select user_id, max(if(user_id = lead_user, datediff(lead_date, visit_date), datediff('2021-1-1', visit_date))) as biggest_window from ( select user_id, visit_date, lead(visit_date) over (partition by user_id order by visit_date) as lead_date, lead(user_id) over (partition by user_id order by visit_date) lead_user from UserVisits order by user_id) t group by user_id
select user_id, max(timestampdiff(day, visit_date, if(post_date is null, '2021-01-01',post_date))) as 'biggest_window' from ( select user_id, visit_date, lead(visit_date) over(partition by user_id order by visit_date) as 'post_date' from userVisits) as A group by user_id
select user_id, max(visit_window) as biggest_window from ( select user_id, datediff(lead(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date asc), visit_date) as visit_window from UserVisits ) a group by 1
select user_id, max(win) as biggest_window from (select user_id, datediff((lead(visit_date, 1, '2021-1-1') over(partition by user_id order by visit_date)), visit_date) as win from UserVisits)a group by user_id order by user_id
select user_id, max(wind) as biggest_window from ( select user_id, datediff(next_visit_date, visit_date) as wind from ( select user_id, visit_date, (case when next_visit_date is null then '2021-01-01' else next_visit_date end) as next_visit_date from ( select user_id, visit_date, lead(visit_date,1) over (partition by user_id order by visit_date) as next_visit_date from uservisits )uv ) w ) bigw group by user_id
select user_id, max(window1) as biggest_window from (select user_id, abs(datediff(visit_date, ifnull(lead(visit_date)over(partition by user_id order by visit_date),'2021-1-1'))) as window1 from UserVisits) a group by user_id
select user_id, max(window1) biggest_window from ( select user_id, abs(datediff( visit_date, ifnull( lead(visit_date) over(partition by user_id order by visit_date), '2021-1-1'))) window1 from UserVisits ) t group by user_id order by 1
select user_id, max(window1) biggest_window from ( select user_id, abs(datediff(visit_date, ifnull( lead(visit_date) over(partition by user_id order by visit_date), '2021-1-1'))) window1 from UserVisits ) t group by user_id order by 1
select user_id, max(window2) biggest_window from (select user_id, abs(datediff( visit_date, ifnull( lead(visit_date) over(partition by user_id order by visit_date),'2021-1-1'))) window2 from uservisits ) t group by user_id order by user_id
select user_id, max(windows) as biggest_window from ( select user_id , datediff(lead(visit_date, 1, '2021-01-01') over (partition by user_id order by visit_date), visit_date) as windows from userVisits)t group by user_id order by user_id
select user_id, max(windows) as biggest_window from (select user_id , datediff(ifnull((lead(visit_date,1) over (partition by user_id order by visit_date)),'2021-01-01'),visit_date) as windows from uservisits) as a group by 1 order by 1
select user_id, max(windows) as biggest_window from (select user_id, datediff(ifnull((lead(visit_date,1) over(partition by user_id order by visit_date)),'2021-01-01'),visit_date) as windows from uservisits ) as t group by user_id order by user_id
select user_id,max(Days) as biggest_window from ( select user_id, datediff(lead(visit_date,1,'2021-1-1') over (partition by user_id order by visit_date),visit_date) as days from uservisits ) tmp group by user_id
select user_id,max(datediff(lead_date,visit_date)) as biggest_window from (select *,lead(visit_date,1,"2021-1-1") over(partition by user_id order by visit_date) as lead_date from UserVisits)a group by 1
select user_id,max(max_diff) as biggest_window from ( select u.user_id, datediff(lead(u.visit_date,1,'2021-1-1') over (partition by u.user_id order by visit_date), visit_date) as max_diff from UserVisits u ) temp group by 1
select user_id,max(wd) biggest_window from ( select *,datediff(ifnull(lead(visit_date) over(partition by user_id order by visit_date),'2021-01-01'),visit_date) wd from UserVisits order by 1,2 ) t group by 1
select w.user_id, max(w.diffs) as biggest_window from ( select user_id, visit_date, datediff(COALESCE(lead(visit_date) OVER(partition by user_id ORDER BY visit_date),'2021-1-1'),visit_date) as diffs from UserVisits ) w group by 1
with A as (select user_id, datediff(lead(visit_date, 1, '2021-1-1') over(partition by user_id order by visit_date), visit_date) as new from UserVisits) select user_id, max(new) as biggest_window from A group by user_id order by user_id
with a as ( select user_id, visit_date, rank() over(partition by user_id order by visit_date) as r_rank from uservisits) select user_id, max(w) as biggest_window from ( select a1.user_id, datediff(a2.visit_date, a1.visit_date) as w from a a1 join a a2 on a1.user_id = a2.user_id and a2.r_rank = a1.r_rank + 1 union all select user_id, datediff('2021-01-01', max(visit_date)) as w from uservisits group by 1) t group by 1 order by 1
with base as ( select distinct user_id, '2021-1-1' as visit_date from UserVisits union all select distinct user_id, visit_date from UserVisits ), base1 as (select user_id, visit_date, lead(visit_date,1) over (partition by user_id order by visit_date asc) as next_visit_date from base ) select distinct user_id, max(datediff(next_visit_date, visit_date)) as biggest_window from base1 group by 1 order by 1
with cet as (select user_id, visit_date, lead(visit_date,1,'2021-01-01') over(partition by user_id order by visit_date) lead_date, datediff(lead(visit_date,1,'2021-01-01') over(partition by user_id order by visit_date),visit_date) as diff from uservisits) select user_id, max(diff) as biggest_window from cet group by user_id
with cnt as ( SELECT U1.user_id, MIN((CASE WHEN U2.visit_date IS NULL THEN DATEDIFF('2021-1-1',U1.visit_date) ELSE DATEDIFF(U2.visit_date , U1.visit_date) END)) AS diff FROM UserVisits U1 LEFT JOIN UserVisits U2 ON U1.user_id = U2.user_id AND U1.visit_date < U2.visit_date GROUP BY U1.user_id, U1.visit_date ) SELECT user_id, MAX(diff) AS biggest_window FROM cnt GROUP BY user_id
with ct as ( select user_id, visit_date,nxt_dt,abs(datediff(visit_date,nxt_dt)) as diff from ( select user_id,visit_date,ifnull(lead(visit_date) over (partition by user_id order by visit_date), '2021-01-01') as nxt_dt from UserVisits ) as tmp ) select user_id,max(diff) as biggest_window from ct group by user_id
with cte as ( SELECT u1.user_id, u1.visit_date, COUNT(DISTINCT u2.visit_date) AS rnk FROM uservisits u1 LEFT JOIN uservisits u2 ON u1.user_id = u2.user_id AND u1.visit_date > u2.visit_date GROUP BY u1.user_id, u1.visit_Date ) SELECT l.user_id, MAX(DATEDIFF(COALESCE(r.visit_Date, '2021-01-01'), l.visit_Date)) AS biggest_window FROM cte l LEFT JOIN cte r ON l.user_id = r.user_id AND l.rnk + 1 = r.rnk GROUP BY user_id ORDER BY user_id
with cte as ( Select *, datediff(lead(visit_date,1, '2021-1-1') over(partition by user_id order by visit_date), visit_date) as diff from UserVisits order by user_id ) select user_id, max(diff) as biggest_window from cte group by user_id order by user_id
with cte as ( select *, lead(visit_date,1) over(partition by user_id order by visit_date) as nextvisit from uservisits ) select user_id, w as biggest_window from (select user_id, datediff(ifnull(nextvisit,'2021-1-1'),visit_date) as w, rank() over(partition by user_id order by datediff(ifnull(nextvisit,'2021-1-1'),visit_date) desc) as rnk from cte) a where rnk = 1 group by 1
with cte as ( select c.user_id, c.visit_date, ROW_NUMBER() OVER (PARTITION BY USER_ID ORDER BY VISIT_DATE) AS RK from ( select b.user_id, a.visit_date from (select '2021-01-01' as visit_date) as a join (select distinct user_id from uservisits) as b union select * from uservisits ) c ) select c1.user_id, max(datediff(c1.visit_date, c2.visit_date)) as biggest_window from cte as c1 join cte as c2 on c1.user_id = c2.user_id and c1.rk = c2.rk +1 group by c1.user_id
with cte as ( select distinct(user_id) as user_id, '2021-01-01' as visit_date from UserVisits union all select user_id, visit_date from UserVisits ) select user_id, max(datediff(visit_date, prior_visit_date) ) as biggest_window from ( select user_id, visit_date, lag( visit_date, 1) over(partition by user_id order by visit_date) as prior_visit_date from cte )t where prior_visit_date is not null group by 1 order by 1
with cte as ( select user_id , visit_date , rank() over(partition by user_id order by visit_date) as rnk from uservisits ) select c1.user_id , max(datediff(ifnull(c2.visit_date, '2021-1-1'), c1.visit_date)) as biggest_window from cte c1 left join cte c2 on c1.user_id = c2.user_id and c1.rnk = c2.rnk - 1 group by 1
with cte as ( select user_id, datediff(coalesce(lead(visit_date) over (partition by user_id order by visit_date), date '2021-01-01'), visit_date) as biggest_window from UserVisits ) select user_id, max(biggest_window) as biggest_window from cte group by user_id
with cte as ( select user_id, visit_date, LEAD(visit_date) over (partition by user_id order by visit_date) as lead_date from UserVisits ) select user_id, max(datediff(coalesce(lead_date,'2021-1-1'), visit_date)) as biggest_window from cte group by user_id
with cte as ( select user_id, visit_date, datediff(coalesce(lead(visit_date) over (partition by user_id order by visit_date),'2021-01-01'),visit_date) as df from userVisits) select user_id, max(df) as biggest_window from cte group by 1 order by 1
with cte as ( select user_id, visit_date, ifnull(lead(visit_date, 1) over(partition by user_id order by visit_date), '2021-1-1') as next_date from UserVisits ) select user_id, max(datediff(next_date, visit_date)) as biggest_window from cte group by user_id
with cte as ( select user_id, visit_date, ifnull(lead(visit_date,1) over (partition by user_id order by visit_date),'2021-1-1') as next_date from uservisits ) select user_id , max(datediff(next_date,visit_date)) as biggest_window from cte group by user_id
with cte as ( select user_id, visit_date, lead(visit_date,1,'2021-01-01') over(partition by user_id order by visit_date) as nextvisit from uservisits ) select user_id, max(timestampdiff(day,visit_date,nextvisit)) as biggest_window from cte group by 1
with cte as ( select user_id,DATE('2021-1-1') as visit_date from (select distinct user_id from UserVisits) t UNION ALL select * from userVisits ) select user_id, MAX(win) as biggest_window from ( select user_id, DATEDIFF(visit_date,LAG(visit_date,1) OVER (PARTITION BY user_id ORDER BY visit_date asc)) as win from cte ) t group by user_id
with cte as ( select user_id,datediff(lead(visit_date,1,'2021-1-1')over (partition by user_id order by visit_date),visit_date) as diff from uservisits ) select user_id, max(diff) biggest_window from cte group by 1 order by 1
with cte as ( select user_id,visit_date, lead(visit_date,1,'2021-1-1') over (partition by user_id order by visit_date asc) as next_date from uservisits ), demo as ( select user_id,datediff(next_date,visit_date) as diff from cte ) select user_id,max(diff) as biggest_window from demo group by user_id
with cte as ( select user_id,visit_date, rank() over (partition by user_id order by visit_date desc) order_rank, lead(visit_date) over (partition by user_id order by visit_date asc) order_lead from UserVisits ) select user_id,max(difference) as biggest_window from ( select user_id, case when order_rank=1 then abs(DATEDIFF(visit_date, '2021-1-1')) when order_rank!=1 then abs(DATEDIFF(visit_date, order_lead)) end as difference from cte )f group by user_id
with cte as (SELECT user_id, datediff(Ifnull(Lead(visit_date,1) OVER(partition BY user_id ORDER BY visit_date),'2021-1-1'), visit_date) AS windoyw FROM uservisits) select user_id, max(windoyw) as 'biggest_window' from cte group by user_id
with cte as (select *, case when lead(visit_date) over (partition by user_id order by visit_date) is null then '2021-1-1' else lead(visit_date) over (partition by user_id order by visit_date) end as lead_visit from UserVisits) select user_id, max(DATEDIFF(lead_visit, visit_date)) as biggest_window from cte group by 1
with cte as (select *, lead(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date) as next_visit from Uservisits) select user_id, max(datediff(next_visit,visit_date)) as biggest_window from cte group by 1 order by 1
with cte as (select distinct user_id, str_to_date('2021-01-01', '%Y-%m-%d') as visit_date from uservisits ) select user_id, max(date_window) as biggest_window from (select user_id, datediff(visit_date, lag(visit_date) over (partition by user_id order by visit_date rows between unbounded preceding and unbounded following)) as date_window from (select * from uservisits union all select * from cte) a ) b group by user_id
with cte as (select user_id, datediff(ifnull(lead(visit_date, 1) over (partition by user_id order by visit_date), '2021-1-1'), visit_date) as visit_window from UserVisits) select distinct user_id, visit_window as biggest_window from (select *, rank() over (partition by user_id order by visit_window desc) as rnk from cte) t where rnk = 1 order by 1
with cte as (select user_id, datediff(lead(visit_date, 1, '2021-01-01')over(partition by user_id order by visit_date), visit_date) as w from uservisits) select user_id, max(w) as biggest_window from cte group by user_id order by user_id
with cte as (select user_id, visit_date, coalesce(lead(visit_date,1) over(partition by user_id order by visit_date) ,'2021-1-1') as next_date from uservisits) select user_id, max(datediff(next_date, visit_date))as biggest_window from cte group by user_id
with cte as (select user_id, visit_date, rank() over(partition by user_id order by visit_date asc) as rk from uservisits) select a.user_id, MAX(DATEDIFF(IFNULL(b.visit_date,'2021-01-01'),a.visit_date)) as biggest_window from cte a left join cte b on a.user_id = b.user_id and a.rk=b.rk-1 group by a.user_id order by a.user_id
with cte as (select user_id, visit_date,lead(visit_date,1,'2021-1-1') over (partition by user_id order by visit_date) as lg from uservisits) select user_id, max(datediff(lg,visit_date)) as biggest_window from cte group by user_id
with cte as (select user_id, visit_date,lead(visit_date,1,'2021-1-1')over(partition by user_id order by visit_date) visit2 from UserVisits) select user_id,max(datediff(visit2,visit_date)) as biggest_window from cte group by 1
with cte as (select user_id,visit_date, LEAD(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date) AS 'next_visit_date' FROM UserVisits) select user_id, max(abs(datediff(visit_date, next_visit_date))) as biggest_window from cte group by user_id
with cte as (select user_id,visit_date, rank() over (partition by user_id order by visit_date) as rnk from UserVisits ) select p1.user_id, max(datediff(IFNULL(p2.visit_date,'2021-1-1'), p1.visit_date)) as biggest_window from cte as p1 left join cte as p2 on p1.user_id=p2.user_id and p1.rnk=p2.rnk-1 group by 1 order by 1
with cte as( Select user_id, abs(datediff(visit_date, IFNULL(Lag(visit_date, 1) OVER (PARTITION BY USER_ID ORDER BY VISIT_DATE desc),'2021-1-1'))) days from uservisits) select user_id, max(days) biggest_window from cte group by user_id
with cte as( select *, lead(visit_date) over(partition by user_id order by visit_date) as nxt_date from uservisits v), cte2 as( select user_id, ifnull(datediff(nxt_date, visit_date), datediff('2021-01-01',visit_date)) as windows from cte) select user_id, max(windows) as biggest_window from cte2 group by 1
with cte as( select user_id , visit_date , lead(visit_date,1) over (partition by user_id order by visit_date) as next_visit_date , date('2021-1-1') as today from uservisits order by 1,2) select user_id , max( case when next_visit_date is null then datediff(today, visit_date) else datediff(next_visit_date, visit_date) end) as biggest_window from cte group by user_id order by user_id
with cte as( select user_id, datediff(ifnull(lag(visit_date) over (partition by user_id order by visit_date desc),'2021-1-1'),visit_date ) as previousday from UserVisits ) select cte.user_id, max(previousday) as biggest_window from cte group by cte.user_id order by cte.user_id
with cte as( select user_id, visit_date as start_date, lead(visit_date) over (partition by user_id order by visit_date) as end_date from uservisits order by user_id, visit_date) select user_id, max(datediff(end_date, start_date)) as biggest_window from( select user_id, start_date, case when end_date is null then '2021-1-1' else end_date end as end_date from cte) as temp group by user_id
with cte as( select user_id, visit_date, ifnull(lead(visit_date) over (partition by user_id order by visit_date), '2021-01-01') as lead1 from uservisits ) select user_id, max(datediff(lead1, visit_date)) as biggest_window from cte group by 1
with cte as( select user_id, visit_date, ifnull(lead(visit_date, 1) over (partition by user_id order by visit_date),"2021-01-01" )as lead_date from uservisits) select user_id, max(DATEDIFF(lead_date, visit_date)) as biggest_window from cte group by user_id order by user_id
with cte as( select user_id, visit_date, ifnull(lead(visit_date,1) over (partition by user_id order by visit_date), '2021-1-1') as next_date from uservisits) select user_id, max(datediff(next_date,visit_date)) as biggest_window from cte group by user_id order by user_id
with cte as( select user_id, visit_date, lead(visit_date,1,'2021-01-01') over (partition by user_id order by visit_date) as next_day from uservisits ) select user_id, MAX(windows) as biggest_window from ( select user_id, Datediff(next_day,visit_date) as windows from cte ) a group by 1 order by user_id
with cte as(select distinct user_id,'2021-01-01' as visit_date from userVisits union all select user_id,visit_date from uservisits order by user_id,visit_date) select distinct user_id,max(diff) over(partition by user_id) as biggest_window from(select user_id,datediff(l1,visit_date) as diff from(select user_id,visit_date,lead(visit_date,1) over(partition by user_id order by visit_date) as l1 from cte )c)v
with cte1 as ( select user_id , visit_date as fv , row_number() over(partition by user_id order by visit_date) as fr from uservisits ) , cte2 as ( select user_id , visit_date as nv , row_number() over(partition by user_id order by visit_date) as nr from uservisits ) select FINAL.user_id , max(FINAL.biggest_window) as biggest_window from ( SELECT sf.user_id , sf.fr , sf.fv , datediff(sf.nv,sf.fv) as biggest_window from ( select cte1.user_id , cte1.fr , cte1.fv , IFNULL(cte2.nv, '2021-1-1') as nv from cte1 left join cte2 on cte1.user_id = cte2.user_id and cte1.fr + 1 = cte2.nr ) SF ) FINAL group by 1 order by 1
with cts as (SELECT user_id,visit_date, LEAD(visit_date,1,'2021-01-01') OVER(PARTITION BY user_id order by visit_date) as 'next_visit_date' FROM UserVisits) select user_id, max(abs(datediff(visit_date, next_visit_date))) as biggest_window from cts group by user_id
with current_date_cte as ( select user_id, visit_date from UserVisits union select distinct user_id, date('2021-01-01') from UserVisits ),date_diff as ( select user_id, datediff(LEAD(visit_date,1,0) OVER(partition by user_id order by visit_date), visit_date) as diff from current_date_cte ) select user_id, max(diff) as biggest_window from date_diff group by 1
with d as ( select user_id, visit_date, lead(visit_date,1,"2021-01-01") over (partition by user_id order by visit_date) next from uservisits ), d2 as ( select user_id, datediff(next,visit_date) as w from d ) select user_id, max(w) as biggest_window from d2 group by user_id
with data as ( select user_id, visit_date, case when user_id=@id then @row_number:=@row_number+1 when user_id<>@id then @row_number:=1 end as rownumber, @id:=user_id from uservisits u, (select @row_number:=0, @id:=0) as r1 order by user_id asc, visit_date asc ) select d1.user_id, greatest(ifnull(max(datediff(d1.visit_date, d2.visit_date)),0), datediff('2021-01-01', max(d1.visit_date))) as biggest_window from data d1 left join data d2 on d1.user_id=d2.user_id and d1.rownumber-d2.rownumber=1 group by d1.user_id order by d1.user_id
with daytable as ( select user_id, DATEDIFF( coalesce( LEAD(visit_date) over (partition by user_id order by visit_date), str_to_date('2021-1-1','%Y-%m-%d')), visit_date) as days from UserVisits ) select user_id, max(days) as biggest_window from daytable group by user_id
with new as(select *, coalesce(lead(visit_date,1) over(partition by user_id order by visit_date),'2021-1-1') as newdate from UserVisits) select user_id, max(datediff(newdate,visit_date)) as biggest_window from new group by 1
with step1 as ( select *, ifnull(lead(visit_date,1) over(partition by user_id order by visit_Date), '2021-01-01') as lead_date from uservisits ) select user_id, max(datediff(lead_date, visit_date)) as biggest_window from step1 group by user_id
with t as ( Select user_id, visit_date, LEAD(visit_date,1, '2021-01-01') over (partition by user_id order by visit_date) as lead_date from UserVisits ), t2 as ( Select user_id, DATEDIFF(lead_date, visit_date) as date_window from t ) Select user_id, max(date_window) as biggest_window from t2 group by user_id order by user_id
with t as ( select *, cast(dense_rank() over (partition by user_id order by visit_date desc) as signed) as dr from UserVisits ) select t1.user_id ,max(abs(case when (t1.dr = 1 and t2.dr = 1) then datediff('2021-01-01', t2.visit_date) else datediff(t1.visit_date, t2.visit_date) end)) as biggest_window from t t1, t t2 where t1.user_id = t2.user_id and (t1.dr - t2.dr = 1 or (t1.dr = 1 and t2.dr = 1)) group by user_id order by user_id
with t as ( select *, datediff(ifnull(lag(visit_date) over (partition by user_id order by visit_date desc), '2021-1-1') , visit_date) as diff from UserVisits) Select user_id, max(diff) as biggest_window from t group by user_id order by user_id
with t as ( select user_id, visit_date, rank() over (partition by user_id order by visit_date ASC) as rk from UserVisits) select a.user_id, max(DATEdiff(ifnull(b.visit_date,'2021-01-01'),a.visit_date)) as biggest_window from t a left join t b on a.user_id = b.user_id and a.rk = b.rk-1 group by 1 order by 1
with t as ( select user_id, visit_date, rank() over (partition by user_id order by visit_date) as rnk from uservisits ) select a.user_id, max(datediff(ifnull(b.visit_date,'2021-1-1'), a.visit_date)) biggest_window from t a left join t b on a.user_id=b.user_id and a.rnk=b.rnk-1 group by 1 order by 1
with t as ( select user_id, visit_date, rank() over(partition by user_id order by visit_date desc ) as rnk from UserVisits ) select a.user_id, max(datediff(ifnull(b.visit_date, '2021-1-1'), a.visit_date)) as biggest_window from t a left join t b on a.user_id = b.user_id and b.rnk = a.rnk - 1 group by a.user_id order by user_id
with t as (select *, rank() over(partition by user_id order by visit_date) rnk from UserVisits) select a.user_id, max(datediff(ifnull(b.visit_date,'2021-1-1'), a.visit_date)) biggest_window from t a left join t b on a.user_id=b.user_id and a.rnk=b.rnk-1 group by 1 order by 1
with t as (select distinct user_id, '2021-1-1' as visit_date from UserVisits union all select user_id, visit_date from UserVisits), tmp as (select user_id, visit_date, rank() over(partition by user_id order by visit_date) as rk from t) select t1.user_id, max(datediff(t2.visit_date,t1.visit_date)) as biggest_window from tmp t1 join tmp t2 on t1.user_id=t2.user_id and t1.rk=t2.rk-1 group by 1
with t as (select distinct(user_id),"2021-01-01"as visit_date from UserVisits union all select * from UserVisits), t2 as (select user_id,visit_date,lead(visit_date,1,0)over (partition by user_id order by visit_date) as next_date from t ) select user_id,max(datediff(next_date,visit_date)) as biggest_window from t2 group by user_id order by user_id
with t1 as (select user_id, visit_date, rank() over (partition by user_id order by visit_date) as rnk from uservisits), t2 as (select a.user_id, a.visit_date, ifnull(b.visit_date, '2021-1-1') as next_date from t1 a left join t1 b on a.user_id = b.user_id and a.rnk = b.rnk - 1) select t2.user_id, max(datediff(next_date, visit_date)) as biggest_window from t2 group by 1 order by 1
with t1 as( select user_id, datediff(lead(visit_date, 1, '2021-1-1') over(partition by user_id order by visit_date), visit_date) as diff from uservisits ) select user_id, max(diff) as biggest_window from t1 group by user_id order by user_id
with t1 as( select user_id,visit_date,lead(visit_date)over(partition by user_id order by visit_date) as nextv from UserVisits) select distinct user_id,max(inter)over(partition by user_id) as biggest_window from( select user_id, case when nextv is not null then datediff(nextv,visit_date) else datediff('2021-1-1',visit_date) end as inter from t1) t2 order by user_id
with t_date as ( select user_id, visit_date, datediff(lead(visit_date,1,'2021-1-1') over(partition by user_id order by visit_date),visit_date) dif from UserVisits order by 1,2 desc) select user_id, max(dif) as biggest_window from t_date group by 1 order by 1
with temp (user_id,visit_date,ldate) as ( select user_id,visit_date, lead(visit_date,1,'2021-1-1') over(partition by user_id order by visit_date) as ldate from UserVisits ) select user_id, max(datediff(ldate,visit_date)) as biggest_window from temp group by user_id
with temp as ( select user_id, visit_date, row_number() over(partition by user_id order by visit_date asc) as rn from UserVisits ) select t1.user_id, max(datediff(ifnull(t2.visit_date, '2021-1-1'), t1.visit_date)) as biggest_window from temp t1 left join temp t2 on t1.user_id = t2.user_id and t1.rn + 1 = t2.rn group by t1.user_id order by t1.user_id
with temp as (select user_id, visit_date, ifnull(lead(visit_date) over(partition by user_id order by visit_date),"2021-01-01") as next_date from uservisits ) select user_id, max(DATEDIFF(next_date,visit_date)) as biggest_window from temp group by user_id
with temp as (select user_id, visit_date, lead(visit_date, 1) over (partition by user_id order by visit_date) as next_visit from UserVisits) , temp2 as (select user_id, datediff(ifnull(next_visit,'2021-1-1') , visit_date) as window_day from temp) select user_id, max(window_day) as biggest_window from temp2 group by 1
with temp as( select user_id, visit_date, dense_rank() over(partition by user_id order by visit_date) as rnk from UserVisits ) select user_id, max(window_days) as biggest_window from( select t1.user_id, datediff(ifnull(t2.visit_date,'2021-01-01'), t1.visit_date) as window_days from temp t1 left join temp t2 on t1.user_id = t2.user_id and t1.rnk = t2.rnk-1 )TBL group by 1 order by user_id
with temp0 as ( select *, row_number() over (partition by user_id order by visit_date) as rnk from UserVisits ) select a.user_id, max(datediff(coalesce(b.visit_date,'2021-01-01'), a.visit_date)) as biggest_window from temp0 a left join temp0 b on a.user_id = b.user_id and a.rnk+1 = b.rnk group by 1 order by 1
with temp1 as ( select user_id, visit_date, row_number() over (partition by user_id order by visit_date ASC) user_visit_rk from UserVisits ), temp2 as ( select a.user_id, a.visit_date, coalesce(b.visit_date, date('2021-01-01')) as next_visit_date from temp1 a left join temp1 b on a.user_id = b.user_id and a.user_visit_rk+1 = b.user_visit_rk ) select user_id, max(datediff(next_visit_date, visit_date)) as biggest_window from temp2 group by user_id
with tilltoday as ( select user_id, datediff('2021-1-1',max(visit_date )) as next_visit_window from UserVisits group by user_id), t as(select u1.user_id, u1.visit_date, min(datediff(u2.visit_date,u1.visit_date)) as next_visit_window from UserVisits u1 join UserVisits u2 on u1.user_id = u2.user_id and u1.visit_date < u2.visit_date group by u1.user_id, u1.visit_date) select user_id, max(next_visit_window) as biggest_window from( select user_id, next_visit_window from t union select user_id, next_visit_window from tilltoday) a group by user_id order by user_id
with tmp as (select *, lead(visit_date,1,str_to_date('2021-1-1','%Y-%m-%d')) over(partition by user_id order by visit_date) as lead_date from UserVisits ) select user_id, max(datediff(lead_date,visit_date)) as biggest_window from tmp group by 1 order by 1
with tmp as (select *, rank() over (partition by user_id order by visit_date) as date_rank from uservisits) select t1.user_id, max(datediff(coalesce(t2.visit_date,'2021-1-1'), t1.visit_date)) as biggest_window from tmp t1 left join tmp t2 on t1.user_id = t2.user_id and (t2.date_rank = t1.date_rank + 1) group by t1.user_id order by t1.user_id
with tmp as (select user_id, visit_date from uservisits order by visit_date), tmp1 as (select user_id, visit_date, row_number() over (partition by user_id order by visit_date) as id from tmp), tmp2 as (select a.user_id, max(datediff(a.visit_date, b.visit_date)) as biggest_window from tmp1 a join tmp1 b on a.user_id = b.user_id and a.id = b.id + 1 group by a.user_id), tmp3 as (select user_id, datediff('2021-01-01', max(visit_date)) as biggest_window from uservisits group by user_id) select a.user_id, if(b.biggest_window is null or b.biggest_window < a.biggest_window, a.biggest_window, b.biggest_window) as biggest_window from tmp3 a left join tmp2 b on a.user_id = b.user_id order by user_id
with tmp as (select user_id,visit_date,dense_rank() over(partition by user_id order by visit_date) as rnk from uservisits ) select t1.user_id, max(abs(datediff(t1.visit_date,coalesce(t2.visit_date,'2021-1-1')))) biggest_window from tmp t1 left join tmp t2 on t1.user_id = t2.user_id and t2.rnk = t1.rnk+1 group by 1
with tmp as( select *, lead(visit_date, 1, '2021-01-01') over(partition by user_id order by visit_date) as ld from uservisits ) select user_id, max(datediff(ld, visit_date)) as biggest_window from tmp group by 1
with tmp as( select distinct user_id, "2021-01-01" as visit_date from uservisits union all select user_id, visit_date from uservisits ), tmp2 as ( select user_id, visit_date, lead(visit_date,1) over(partition by user_id order by visit_date) as nextvisit from tmp ), tmp3 as (select user_id, DATEDIFF(nextvisit, visit_date) as windowdate from tmp2) select distinct user_id, max(windowdate) as biggest_window from tmp3 group by user_id order by user_id
with tmp1 as ( select user_id, visit_date, rank() over(partition by user_id order by visit_date ) as ranks from UserVisits ) , prep as (select t1.user_id, coalesce(datediff( t2.visit_date, t1.visit_date), datediff(date('2021-01-01'),t1.visit_date)) as days from tmp1 t1 left join tmp1 t2 on t1.user_id = t2.user_id and t2.ranks = t1.ranks+1 ), prep2 as (select user_id, days, rank() over(partition by user_id order by days desc) as ranks2 from prep) select user_id, days as biggest_window from prep2 where ranks2 = 1 group by 1,2
with visits as (SELECT user_id, visit_date, LEAD(visit_date,1,'2021-1-1') OVER(partition by user_id ORDER BY visit_date) as lead_visits FROM UserVisits ) SELECT user_id, max(abs(datediff(visit_date,lead_visits))) as biggest_window FROM visits GROUP BY user_id ORDER BY user_id
with window3 as( select user_id, datediff(date('2021-1-1'), max(visit_date)) as window3, max(visit_date) as mx from uservisits group by user_id) ,temp as( select user_id, visit_date, rank() over(partition by user_id order by visit_date) as rnk from uservisits ) , window2 as( select t1.user_id, datediff(t2.visit_date,t1.visit_date) as window2 from temp t1 join temp t2 on t1.user_id = t2.user_id and t1.rnk= t2.rnk-1 ) , window1 as( select user_id, window3 from window3 union all select user_id, window2 from window2 ) select user_id, max(window3) as biggest_window from window1 group by user_id order by user_id
with x as (select user_id, visit_date, lead(visit_date,1, '2021-01-01') over (partition by user_id order by visit_date asc) as r from UserVisits) select user_id, max(datediff(r,visit_date)) as biggest_window from x group by user_id
