SELECT DISTINCT L.page_id AS recommended_page FROM Friendship F, Likes L WHERE ((F.user1_id = 1 AND L.user_id = F.user2_id) OR (F.user2_id = 1 AND L.user_id = F.user1_id)) AND L.page_id NOT IN ( SELECT L2.page_id FROM Likes L2 WHERE L2.user_id = 1 )
SELECT DISTINCT L.page_id as recommended_page FROM Friendship F JOIN Likes L ON F.user2_id = L.user_id AND F.user1_id = 1 HAVING recommended_page NOT IN ( SELECT DISTINCT page_id FROM LIKES WHERE user_id = 1 ) UNION SELECT DISTINCT L2.page_id as recommended_page FROM Friendship F JOIN Likes L2 ON F.user1_id = L2.user_id AND F.user2_id = 1 AND L2.user_id != 1 HAVING recommended_page NOT IN ( SELECT DISTINCT page_id FROM LIKES WHERE user_id = 1 )
SELECT DISTINCT b.page_id as recommended_page FROM (SELECT user2_id as uid FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id as uid FROM Friendship WHERE user2_id = 1) a, Likes b WHERE a.uid = b.user_id AND b.page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT l.page_id AS recommended_page FROM ( SELECT user1_id AS user_id FROM Friendship WHERE user2_id = 1 UNION SELECT user2_id AS user_id FROM Friendship WHERE user1_id = 1) f INNER JOIN Likes l ON f.user_id = l.user_id WHERE l.page_id NOT in (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT l.page_id AS recommended_page FROM (SELECT (CASE WHEN f.user1_id=1 THEN f.user2_id WHEN f.user2_id=1 THEN f.user1_id ELSE null end ) as user_id FROM friendship f) AS a JOIN likes l ON a.user_id=l.user_id AND l.page_id NOT IN (SELECT l1.page_id FROM likes l1 WHERE l1.user_id=1)
SELECT DISTINCT l.page_id AS recommended_page FROM (SELECT DISTINCT f.user1_id FROM friendship f WHERE f.user2_id=1 UNION SELECT DISTINCT f1.user2_id FROM friendship f1 WHERE f1.user1_id=1) AS a JOIN likes l ON a.user1_id=l.user_id AND l.page_id NOT IN (SELECT l1.page_id FROM likes l1 WHERE l1.user_id=1)
SELECT DISTINCT l.page_id AS recommended_page FROM (SELECT user2_id AS friend FROM friendship WHERE user1_id = 1 UNION SELECT user1_id AS friend FROM friendship WHERE user2_id = 1 ) AS f JOIN likes AS l ON f.friend = l.user_id WHERE l.page_id NOT IN (SELECT DISTINCT page_id FROM likes WHERE user_id = 1) ORDER BY 1
SELECT DISTINCT l.page_id AS recommended_page FROM Likes l JOIN (SELECT (CASE WHEN f.user1_id = 1 THEN f.user2_id WHEN f.user2_id = 1 THEN f.user1_id ELSE NULL END) AS one_friend_id FROM Friendship f) t ON t.one_friend_id = l.user_id WHERE one_friend_id IS NOT NULL AND l.page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1) ORDER BY page_id
SELECT DISTINCT l.page_id AS recommended_page FROM Likes l WHERE l.user_id IN (SELECT CASE WHEN user1_id=1 THEN user2_id WHEN user2_id=1 THEN user1_id ELSE NULL END user_id FROM Friendship) AND l.page_id NOT IN(SELECT page_id FROM Likes WHERE user_id=1)
SELECT DISTINCT l.page_id AS recommended_page FROM( SELECT LEAST(user1_id, user2_id) AS min_user_id, GREATEST(user1_id, user2_id) AS max_user_id FROM Friendship ) tmp JOIN Likes l ON tmp.max_user_id = l.user_id WHERE min_user_id = 1 AND l.page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1) ORDER BY 1
SELECT DISTINCT l.page_id as recommended_page FROM Likes as l WHERE user_id IN ( SELECT user1_id FROM Friendship WHERE user2_id = 1 UNION SELECT user2_id FROM Friendship WHERE user1_id = 1 ) AND l.page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT l.page_id recommended_page FROM (SELECT (CASE WHEN user1_id < user2_id THEN user1_id ELSE user2_id END) user1_id, (CASE WHEN user1_id > user2_id THEN user1_id ELSE user2_id END) user2_id FROM Friendship ) temp JOIN Likes l ON temp.user2_id = l.user_id AND temp.user1_id = 1 WHERE l.user_id != 1 AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id AS recommended_page FROM (SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END AS user_id FROM Friendship) F JOIN Likes L ON F.user_id = L.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id AS recommended_page FROM (SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END AS user_id FROM Friendship) a JOIN Likes ON a.user_id = Likes.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id AS recommended_page FROM (SELECT CASE WHEN user1_id=1 then user2_id WHEN user2_id=1 then user1_id END AS user_id FROM Friendship) AS a JOIN Likes USING(user_id) WHERE page_id NOT IN ( SELECT DISTINCT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT page_id AS recommended_page FROM (SELECT user1_id AS user_id, user2_id AS friend_id FROM Friendship WHERE user1_id = 1 UNION SELECT user2_id AS user_id, user1_id AS friend_id FROM Friendship WHERE user2_id = 1) a JOIN Likes l ON a.friend_id = l.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id AS recommended_page FROM Likes As L JOIN ( SELECT user2_id AS uid FROM Friendship WHERE user1_id=1 UNION SELECT user1_id AS uid FrOM Friendship WHERE user2_id=1) AS new ON L.user_id=new.uid WHERE page_id not in (SELECT DISTINCT page_id FrOM Likes WHERE user_id=1)
SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN ( SELECT ( CASE WHEN user1_id = 1 AND user2_id != 1 THEN user2_id ELSE user1_id END ) AS user_id FROM Friendship WHERE (user1_id = 1 AND user2_id != 1) OR (user2_id = 1 AND user1_id != 1) ) AND page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN ( SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id ELSE NULL END AS user_id FROM Friendship ) HAVING recommended_page NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN ( SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END as friend_id FROM Friendship WHERE user1_id = 1 or user2_id = 1 ) AND page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN ( SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END as id FROM Friendship WHERE user1_id = 1 or user2_id = 1 ) AND page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN ( SELECT user2_id AS friend_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id AS friend_id FROM Friendship WHERE user2_id = 1) AND page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN ( SELECT user2_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id FROM Friendship WHERE user2_id = 1) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN (SELECT user1_id FROM Friendship WHERE user2_id=1 UNION SELECT user2_id FROM Friendship WHERE user1_id=1) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id=1)
SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN (SELECT user2_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id FROM Friendship WHERE user2_id = 1) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id =1)
SELECT DISTINCT page_id AS recommended_page FROM friendship f INNER JOIN likes l ON l.user_id IN (f.user1_id, f.user2_id) AND (f.user1_id = 1 or f.user2_id = 1) WHERE page_id NOT IN (SELECT page_id FROM likes WHERE user_id = 1)
SELECT DISTINCT page_id AS recommended_page FROM likes l JOIN (SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END AS user_id FROM friendship) AS a ON l.user_id = a.user_id WHERE page_id NOT IN(SELECT page_id FROM likes WHERE user_id=1)
SELECT DISTINCT page_id AS recommended_page FROM likes l WHERE user_id IN (SELECT user_id_1_friends FROM (SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END AS user_id_1_friends FROM friendship) a WHERE user_id_1_friends IS NOT NULL) AND page_id NOT IN (SELECT page_id FROM likes WHERE user_id = 1)
SELECT DISTINCT page_id as recommended_page FROM ( SELECT user2_id as id FROM Friendship WHERE user1_id=1 union all SELECT user1_id as id FROM Friendship WHERE user2_id=1 ) as A JOIN Likes as B on A.id = B.user_id where B.page_id not in (SELECT page_id FROM Likes where user_id=1)
SELECT DISTINCT page_id as recommended_page FROM (SELECT b.user_id, b.page_id FROM friendship a LEFT OUTER JOIN likes b ON (a.user2_id=b.user_id OR a.user1_id=b.user_id) AND (a.user1_id=1 OR a.user2_id=1) WHERE b.page_id NOT IN (SELECT DISTINCT page_id FROM likes WHERE user_id=1)) t
SELECT DISTINCT page_id as recommended_page FROM (SELECT user1_id, user2_id FROM Friendship UNION SELECT user2_id as user1_id, user1_id as user2_id FROM Friendship) as f JOIN Likes l ON f.user2_id = l.user_id WHERE f.user1_id = 1 AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id as recommended_page FROM Likes WHERE NOT page_id in (SELECT page_id from Likes where user_id = 1) and user_id in (SELECT (CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id ELSE 0 END) as user FROM Friendship Having user != 0)
SELECT DISTINCT page_id as recommended_page FROM Likes WHERE user_id IN ( SELECT user1_id FROM Friendship WHERE user2_id = 1 UNION SELECT user2_id FROM Friendship WHERE user1_id = 1 ) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id as recommended_page FROM Likes WHERE user_id IN ( SELECT user2_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id FROM Friendship WHERE user2_id = 1 ) AND page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT page_id as recommended_page FROM Likes WHERE user_id IN (SELECT DISTINCT user1_id FROM Friendship WHERE user2_id = 1 UNION SELECT DISTINCT user2_id FROM Friendship WHERE user1_id = 1 ) AND page_id NOT IN (SELECT DISTINCT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id recommended_page FROM Likes WHERE user_id IN ( SELECT user2_id id FROM Friendship WHERE user1_id = 1 UNION ALL SELECT user1_id id FROM Friendship WHERE user2_id = 1 ) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT DISTINCT page_id recommended_page FROM likes WHERE user_id IN ( SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END as user_id FROM friendship WHERE user1_id = 1 or user2_id = 1) AND page_id NOT IN (SELECT page_id from likes where user_id = 1)
SELECT DISTINCT tb1.page_id AS recommended_page FROM ( SELECT user1_id AS id,page_id FROM friendship INNER JOIN Likes ON user2_id=user_id WHERE user1_id=1 UNION SELECT user2_id AS id, page_id FROM friendship INNER JOIN Likes ON user1_id=user_id where user2_id=1 ) tb1 WHERE tb1.page_id NOT IN (SELECT page_id FROM Likes WHERE user_id =1)
SELECT DISTINCT user2_id FROM Friendship WHERE user1_id = 1 ), user1 AS ( SELECT DISTINCT user1_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN ( SELECT user2_id FROM user2 UNION SELECT user1_id FROM user1 ) AND page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT(l.page_id) AS recommended_page FROM (SELECT CASE WHEN user1_id=1 THEN user2_id WHEN user2_id=1 THEN user1_id END AS user_id FROM Friendship) t JOIN Likes l USING(user_id) WHERE l.page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
SELECT DISTINCT(page_id) AS recommended_page FROM (SELECT CASE when user1_id=1 then user2_id when user2_id=1 then user1_id end as user_id from Friendship) a join Likes on a.user_id=Likes.user_id where page_id not in (select page_id from Likes where user_id=1)
SELECT distinct page_id as recommended_page FROM (SELECT user_id, page_id FROM Likes WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id=1)) as a WHERE user_id IN ( SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END as user_id FROM Friendship WHERE (Friendship.user1_id=1 OR Friendship.user2_id=1) )
SELECT distinct page_id as recommended_page FROM Likes WHERE user_id in ( SELECT CASE WHEN user1_id = 1 then user2_id WHEN user2_id =1 then user1_id END AS friends_id FROM Friendship WHERE user1_id =1 or user2_id =1) and page_id not in (SELECT page_id FROM Likes WHERE user_id = 1)
SELECT distinct page_id as recommended_page FROM Likes WHERE user_id in (SELECT distinct CASE WHEN user1_id = 1 then user2_id else user1_id END as friend FROM Friendship WHERE user1_id = 1 or user2_id = 1) AND page_id not in (SELECT page_id FROM Likes where user_id = 1)
SELECT page_id AS recommended_page FROM ( SELECT DISTINCT l.page_id FROM Likes l INNER JOIN ( SELECT user2_id AS friend_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id AS friend_id FROM Friendship WHERE user2_id = 1 ) t ON t.friend_id = l.user_id ) m WHERE page_id NOT IN ( SELECT DISTINCT page_id FROM Likes WHERE user_id = 1)
SELECT page_id AS recommended_page FROM (SELECT user2_id AS user_id FROM Friendship WHERE user1_id=1 UNION SELECT user1_id AS user_id FROM Friendship WHERE user2_id=1) a INNER JOIN Likes b ON a.user_id=b.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id=1) GROUP BY page_id
SELECT page_id AS recommended_page FROM Likes WHERE user_id IN (SELECT user2_id FROM Friendship WHERE user1_id = 1 UNION ALL SELECT user1_id FROM Friendship WHERE user2_id = 1) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1) GROUP BY page_id
SELECT page_id AS recommended_page FROM likes WHERE user_id IN (SELECT user2_id FROM friendship WHERE user1_id = 1 UNION SELECT user1_id FROM friendship WHERE user2_id = 1) AND page_id NOT IN (SELECT page_id FROM likes WHERE user_id = 1) GROUP BY 1
SELECT page_id recommended_page FROM (SELECT f.user1_id user_id, l.page_id FROM likes l JOIN friendship f ON f.user1_id = l.user_id WHERE f.user2_id = 1 UNION ALL SELECT f.user2_id user_id, l.page_id FROM likes l JOIN friendship f ON f.user2_id = l.user_id WHERE f.user1_id = 1 ORDER BY user_id) a WHERE page_id NOT IN (SELECT page_id FROM likes WHERE user_id = 1) GROUP BY page_id
Select Distinct page_id as recommended_page From Likes Where user_id in (Select Case WHEN user1_id=1 THEN user2_id WHEN user2_id=1 THEN user1_id ELSE '' END From Friendship Where user1_id=1 or user2_id=1) And page_id not in (Select page_id From Likes Where user_id=1)
Select distinct l.page_id as recommended_page from (Select case when user1_id=1 then user2_id when user2_id=1 then user1_id end as id from Friendship ) a join likes l on a.id = l.user_id where (1, l.page_id) not in (Select * from Likes)
Select distinct l.page_id as recommended_page from Likes l inner join (Select user1_id as user1, user2_id as friend from Friendship where user1_id = 1 union select user2_id as user1, user1_id as friend from Friendship where user2_id = 1) temp on l.user_id = temp.friend where l.page_id not in (Select distinct page_id from Likes where user_id = 1)
Select liked_by_friend.page_id as recommended_page FROM ( select distinct page_id from Friendship as friends inner join Likes as likes on friends.user2_id = likes.user_id where friends.user1_id = 1 Union select distinct page_id from Friendship as friends inner join Likes as likes on friends.user1_id = likes.user_id where friends.user2_id = 1 ) as liked_by_friend left join ( select distinct page_id from Likes where user_id = 1 ) as liked_by_usr on liked_by_usr.page_id = liked_by_friend.page_id where liked_by_usr.page_id IS NULL
Select page_id as recommended_page from Friendship f inner join Likes l on f.user2_id= l.user_id where user1_id=1 and page_id not in (select page_id from Likes where user_id =1) union Select page_id as recommended_page from Friendship f inner join Likes l on f.user1_id= l.user_id where user2_id=1 and page_id not in (select page_id from Likes where user_id =1)
WITH ALL_FRIENDS_TABLE AS( SELECT user2_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT(page_id) AS recommended_page FROM Likes WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1) AND user_id IN (SELECT * FROM ALL_FRIENDS_TABLE)
WITH ALL_FRIENDS_TABLE AS( SELECT user2_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT(page_id) AS recommended_page FROM Likes WHERE user_id IN (SELECT * FROM ALL_FRIENDS_TABLE) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
WITH A_FRIEND AS (SELECT user2_id friend FROM Friendship WHERE user1_id = 1 UNION ALL SELECT user1_id friend FROM Friendship WHERE user2_id = 1) SELECT DISTINCT page_id recommended_page FROM Likes WHERE user_id IN (SELECT * FROM A_FRIEND) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
WITH AllFriends AS (SELECT user2_id AS user_id FROM Friendship WHERE user1_id = 1 UNION ALL SELECT user1_id AS user_id FROM Friendship WHERE user2_id = 1), FriendsLikes AS (SELECT page_id FROM Likes L INNER JOIN AllFriends AF ON AF.user_id = L.user_id) SELECT DISTINCT page_id AS recommended_page FROM FriendsLikes WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
WITH CET as (SELECT user2_id as id from Friendship where user1_id=1 UNION SELECT user1_id as id from Friendship where user2_id=1 ) SELECT distinct page_id as recommended_page from Likes l join CET on l.user_id=CET.id where page_id not in (select page_id from Likes where user_id=1) order by page_id
WITH CTE AS (SELECT user1_id as user_id FROM Friendship WHERE user2_id=1 UNION SELECT user2_id as user_id FROM Friendship WHERE user1_id=1) SELECT DISTINCT page_id as recommended_page FROM Likes l JOIN CTE ON cte.user_id=l.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id=1)
WITH CTE AS( SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END as user_id FROM Friendship ) SELECT DISTINCT(page_id) AS recommended_page FROM CTE C JOIN Likes l ON c.user_id = l.user_id AND c.user_id IS NOT NULL WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id =1)
WITH CTE1 AS (SELECT user1_id, user2_id FROM friendship WHERE user1_id=1 UNION SELECT user2_id, user1_id FROM friendship WHERE user2_id=1), CTE2 AS (SELECT user2_id FROM CTE1) SELECT DISTINCT page_id as recommended_page FROM likes, CTE2 WHERE user_id in (user2_id) AND page_id not in (SELECT page_id FROM likes WHERE user_id=1)
WITH FRIENDS AS( SELECT USER1_ID AS ID FROM FRIENDSHIP WHERE USER2_ID=1 UNION DISTINCT SELECT USER2_ID FROM FRIENDSHIP WHERE USER1_ID=1 ) SELECT DISTINCT L.PAGE_ID AS RECOMMENDED_PAGE FROM LIKES L INNER JOIN FRIENDS F ON L.USER_ID=F.ID AND PAGE_ID NOT IN (SELECT PAGE_ID FROM LIKES WHERE USER_ID=1)
WITH Friends AS(SELECT * FROM Friendship UNION ALL SELECT user2_id user1_id, user1_id user2_id FROM Friendship) SELECT DISTINCT l.page_id recommended_page FROM Likes l JOIN Friends f ON l.user_id=f.user2_id WHERE f.user1_id=1 AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id=1)
WITH Friends as ( SELECT DISTINCT user2_id as user_id FROM Friendship WHERE user1_id = 1 UNION SELECT DISTINCT user1_id as user_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT page_id as recommended_page FROM LIKES WHERE user_id in (SELECT DISTINCT user_id FROM FRIENDS) AND page_id NOT IN ( SELECT distinct page_id FROM LIKES WHERE user_id = 1) ORDER BY page_id
WITH ONES_FRIENDS AS( SELECT user2_id AS ones_friends FROM Friendship WHERE user1_id = 1 UNION ALL SELECT user1_id AS ones_friends FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT page_id AS recommended_page FROM ONES_FRIENDS o INNER JOIN Likes l ON o.ones_friends = l.user_id WHERE page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
WITH Table1 AS (SELECT CASE WHEN user2_id > user1_id THEN user1_id ELSE user2_id END AS user1_id, CASE WHEN user2_id < user1_id THEN user1_id ELSE user2_id END AS user2_id FROM Friendship ORDER BY 1) ,Table2 AS (SELECT user_id, page_id FROM Likes WHERE user_id IN (SELECT user2_id FROM Table1 WHERE user1_id = 1)), Table3 AS (SELECT user_id, page_id FROM Likes WHERE user_id = 1) SELECT DISTINCT page_id AS recommended_page FROM Table2 WHERE page_id NOT IN (SELECT page_id FROM Table3)
WITH combined AS ( SELECT user1_id, user2_id FROM Friendship UNION ALL SELECT user2_id, user1_id FROM Friendship), friends AS ( SELECT user2_id FROM combined WHERE user1_id = 1) SELECT DISTINCT(page_id) AS recommended_page FROM Likes WHERE user_id IN (SELECT user2_id FROM friends) AND page_id NOT IN (SELECT page_id FROM LIKES WHERE user_id = 1)
WITH cte AS ( SELECT user2_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT page_id recommended_page FROM cte c JOIN Likes l ON c.user2_id = l.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
WITH cte AS( SELECT DISTINCT user1_id AS user_id FROM friendship WHERE user2_id = 1 UNION ALL SELECT DISTINCT user2_id AS user_id FROM friendship WHERE user1_id = 1) SELECT DISTINCT page_id AS recommended_page FROM likes WHERE user_id IN (SELECT user_id FROM cte) AND page_id NOT IN (SELECT page_id FROM likes WHERE user_id = 1)
WITH cte AS( SELECT user1_id, user2_id FROM Friendship WHERE user1_id = 1 OR user2_id = 1 ), cte1 AS( SELECT user1_id FROM cte UNION SELECT user2_id FROM cte ) SELECT DISTINCT page_id AS recommended_page FROM Likes i INNER JOIN cte1 ON cte1.user1_id = i.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
WITH cte as(SELECT user1_id as id, user2_id as user FROM Friendship WHERE user1_id = 1 UNION ALL SELECT user2_id as id , user1_id as user FROM Friendship WHERE user2_id = 1) , cte2 AS( SELECT distinct page_id as recommended_page FROM likes WHERE user_id IN (SELECT user from cte)) SELECT recommended_page FROM cte2 WHERE recommended_page NOT IN (SELECT page_id from likes where user_id = 1)
WITH cte1 AS ( (SELECT user2_id AS friends FROM Friendship WHERE user1_id = 1) UNION (SELECT user1_id AS friends FROM Friendship WHERE user2_id = 1) ), cte2 AS ( SELECT page_id FROM Likes WHERE user_id = 1 ) SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN (SELECT friends FROM cte1) AND page_id NOT IN (SELECT page_id FROM cte2)
WITH cte_likes AS (SELECT user_id, page_id FROM likes WHERE 1=1 AND page_id NOT IN (SELECT DISTINCT page_id FROM likes WHERE 1=1 AND user_id=1)) SELECT DISTINCT page_id recommended_page FROM friendship f, cte_likes cl WHERE 1=1 AND (f.user2_id=cl.user_id OR f.user1_id=cl.user_id ) AND (f.user1_id=1 OR f.user2_id=1)
WITH filtered_users AS ( SELECT user1_id AS user_id, user2_id AS friend_id FROM Friendship WHERE user1_id = 1 UNION SELECT user2_id AS user_id, user1_id AS friend_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT page_id AS recommended_page FROM filtered_users f JOIN Likes l ON f.friend_id = l.user_id WHERE page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
WITH friend_likes AS ( SELECT l.user_id, l.page_id FROM likes l WHERE l.user_id != 1 AND l.page_id NOT IN (select page_id from likes where user_id = 1) ) SELECT DISTINCT fl.page_id as recommended_page FROM friendship f INNER JOIN friend_likes fl ON fl.user_id = f.user2_id WHERE f.user1_id = 1 UNION SELECT fl.page_id as recommended_page FROM friendship f INNER JOIN friend_likes fl ON fl.user_id = f.user1_id WHERE f.user2_id = 1 ORDER BY 1
WITH friends AS ( SELECT CASE WHEN user1_id = 1 THEN user2_id ELSE user1_id END as user_id FROM friendship WHERE user1_id = 1 OR user2_id = 1), user_liked AS ( SELECT page_id FROM likes WHERE user_id = 1) SELECT l.page_id as recommended_page FROM likes as l INNER JOIN friends as f ON l.user_id = f.user_id LEFT JOIN user_liked as u ON u.page_id = l.page_id WHERE u.page_id IS NULL GROUP BY l.page_id
WITH friends AS ( SELECT user2_id as id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id as id FROM Friendship WHERE user2_id =1) SELECT distinct page_id AS recommended_page FROM friends JOIN Likes ON friends.id = Likes.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id =1)
WITH friends AS( SELECT user2_id as id from Friendship where user1_id = 1 union SELECT user1_id as id from Friendship where user2_id = 1) SELECT DISTINCT page_id as recommended_page from Likes join friends ON friends.id= Likes.user_id WHERE page_id not in (select page_id from Likes where user_id =1)
WITH friends_table AS ( SELECT user2_id AS friends FROM friendship WHERE user1_id = 1 UNION SELECT user1_id AS friends FROM friendship WHERE user2_id = 1) SELECT DISTINCT page_id AS recommended_page FROM friends_table JOIN likes ON friends_table.friends = likes.user_id WHERE page_id NOT IN (SELECT page_id FROM likes WHERE user_id = 1)
WITH frnd as( SELECT user2_id as users FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id as users FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT page_id as recommended_page FROM Likes WHERE user_id IN (SELECT users FROM frnd) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
WITH t AS ( SELECT user2_id AS user_id FROM Friendship WHERE user1_id = 1 UNION DISTINCT SELECT user1_id AS user_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1) AND user_id IN (SELECT user_id FROM t)
WITH t1 AS ( (SELECT user1_id freind1, user2_id freind2 FROM Friendship WHERE user1_id < user2_id) UNION (SELECT user2_id freind1, user1_id freind2 FROM Friendship WHERE user2_id < user1_id) ) SELECT DISTINCT page_id recommended_page FROM Likes WHERE user_id IN ( SELECT freind2 FROM t1 WHERE freind1 = 1 ) AND page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id = 1 )
WITH t1 AS ( SELECT * FROM Likes WHERE user_id IN (SELECT DISTINCT user1_id FROM Friendship f1 WHERE user2_id = 1 UNION ALL SELECT DISTINCT user2_id FROM Friendship f2 WHERE user1_id = 1) AND page_id NOT IN (SELECT DISTINCT page_id FROM Likes l1 WHERE user_id = 1) ) SELECT DISTINCT page_id AS recommended_page FROM t1
WITH t1 AS (SELECT DISTINCT user_id,page_id FROM Likes WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)) SELECT DISTINCT page_id AS recommended_page FROM t1 WHERE user_id IN (SELECT user2_id FROM Friendship WHERE user1_id = 1) OR user_id IN (SELECT user1_id FROM Friendship WHERE user2_id = 1)
WITH temp AS ( SELECT DISTINCT user_id,page_id FROM Likes WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1) ) SELECT DISTINCT page_id AS recommended_page FROM temp WHERE user_id IN (SELECT user2_id FROM Friendship WHERE user1_id = 1) OR user_id IN (SELECT user1_id FROM Friendship WHERE user2_id = 1 )
WITH temp as ( SELECT DISTINCT(a.friend) AS "friend" FROM (SELECT user1_id AS "friend" FROM Friendship WHERE user2_id = 1 UNION SELECT user2_id AS "friend" FROM Friendship WHERE user1_id = 1 ) AS a where friend != 1 ) SELECT DISTINCT(page_id) AS "recommended_page" FROM Likes JOIN temp on temp.friend = Likes.user_id where page_id NOT IN (SELECT DISTINCT(page_id) AS "recommended_page " FROM Likes where user_id = 1)
WITH temp as ( SELECT DISTINCT(a.user2_id) as "friend_id" FROM ( (SELECT user1_id, user2_id FROM Friendship) UNION (SELECT user2_id as user1_id, user1_id as user2_id FROM Friendship) ) as a where a.user1_id = 1 ) SELECT DISTINCT page_id AS recommended_page from Likes JOIN temp on temp.friend_id = Likes.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes where user_id = 1)
WITH user1_friend AS ( SELECT user1_id AS user_id FROM Friendship WHERE user2_id = 1 UNION ALL SELECT user2_id AS user_id FROM Friendship WHERE user1_id = 1 ) SELECT page_id AS recommended_page FROM Likes INNER JOIN user1_friend USING (user_id) WHERE page_id NOT IN ( SELECT page_id FROM Likes WHERE user_id =1) GROUP BY 1
WITH user1_friend AS ( SELECT user2_id as user_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id as user_id FROM Friendship WHERE user2_id = 1) SELECT DISTINCT page_id as recommended_page FROM user1_friend u JOIN Likes l ON l.user_id = u.user_id WHERE page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
WITH user1_friends AS (SELECT CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END AS friends FROM Friendship) SELECT l.page_id AS recommended_page FROM user1_friends AS f JOIN Likes AS l ON f.friends = l.user_id WHERE l.page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1 ) GROUP BY recommended_page
WITH user1friends AS( SELECT (CASE WHEN user1_id=1 THEN user2_id WHEN user2_id=1 THEN user1_id END ) AS friends_id FROM Friendship) SELECT DISTINCT page_id AS recommended_page FROM Likes WHERE user_id IN (SELECT friends_id FROM user1friends) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id='1')
WITH user_1_friends AS( SELECT user2_id AS friend_id FROM Friendship WHERE user1_id = 1 UNION ALL SELECT user1_id AS friend_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT(l.page_id) AS recommended_page FROM user_1_friends u JOIN Likes l ON u.friend_id = l.user_id WHERE l.page_id NOT IN( SELECT page_id FROM LIKES WHERE user_id = 1 ) GROUP BY l.page_id
With cte AS (SELECT user2_id AS user_id FROM Friendship WHERE user1_id = 1 UNION ALL SELECT user1_id AS user_id FROM Friendship WHERE user2_id = 1) SELECT DISTINCT page_id AS recommended_page FROM likes WHERE user_id IN (SELECT user_id FROM cte) AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id = 1)
With friend As ((Select user2_id From Friendship Where user1_id = 1) Union (Select user1_id From Friendship Where user2_id = 1)) Select Distinct page_id as recommended_page From Likes Where user_id in (Select * From friend) And page_id not in (Select page_id From Likes Where user_id = 1)
select C.pg as recommended_page from ((select l.page_id as pg from likes l join (select user2_id as frnd from friendship where user1_id=1)A on l.user_id=A.frnd) union (select l.page_id as pg from likes l join (select user1_id as frnd from friendship where user2_id=1)B on l.user_id=B.frnd)) C where C.pg not in (select page_id from likes where user_id=1)
select DISTINCT page_id AS recommended_page from Likes where user_id in ( select user2_id from Friendship where user1_id =1 union select user1_id from Friendship where user2_id =1) and page_id not in (select page_id from likes where user_id=1)
select a.recommended_page from (select distinct b.page_id recommended_page from ((select user2_id from Friendship where user1_id=1) union (select user1_id from Friendship where user2_id=1)) a left join Likes b on a.user2_id=b.user_id where b.page_id not in (select page_id from Likes where user_id=1) order by recommended_page) a where a.recommended_page is not null
select distinct L.page_id as recommended_page from Friendship F join Likes L on F.user2_id = L.user_id where F.user1_id =1 and L.page_id not in (select page_id from Likes where user_id =1) union select distinct L.page_id as recommended_page from Friendship F join Likes L on F.user1_id = L.user_id where F.user2_id =1 and L.page_id not in (select page_id from Likes where user_id =1)
select distinct a.page_id as recommended_page from ( select user_id, page_id from likes where user_id in ( select distinct user2_id from friendship where user1_id=1 union select distinct user1_id from friendship where user2_id=1) and page_id not in (select distinct page_id from likes where user_id=1) ) as a
select distinct a.page_id as recommended_page from Likes a inner join ( select case when user1_id=1 then user2_id when user2_id=1 then user1_id end as user1_friends from Friendship ) t on a.user_id=t.user1_friends where a.page_id not in ( select page_id from Likes where user_id=1)
select distinct a.page_id as recommended_page from likes a inner join ((select user2_id as user_id from Friendship where user1_id=1) union all (select user1_id as user_id from Friendship where user2_id=1)) b on a.user_id=b.user_id where a.page_id not in (select page_id from likes where user_id=1)
select distinct c.page_id as recommended_page from (select distinct uid from (select distinct user1_id as uid from Friendship where user2_id = 1 and user1_id!=1 union all select distinct user2_id as uid from Friendship where user1_id = 1 and user2_id!=1)as a )as d inner join ( select distinct * from Likes )as c on d.uid = c.user_id where c.page_id not in(select distinct page_id from Likes where user_id =1 and page_id is not null)
select distinct l.page_id as 'recommended_page' from ( select distinct user1_id as id from Friendship where user2_id = 1 union select distinct user2_id as id from Friendship where user1_id = 1) A join likes l on l.user_id = A.id where l.page_id not in ( select page_id from likes where user_id = 1)
select distinct l.page_id as recommended_page from ( select user2_id as user_id from Friendship where user1_id=1 union select user1_id as user_id from Friendship where user2_id=1) f join Likes l on f.user_id=l.user_id where page_id not in (select distinct page_id from Likes where user_id=1)
select distinct l.page_id as recommended_page from Friendship f join Likes l on f.user2_id =l.user_id or f.user1_id =l.user_id where (f.user1_id = 1 or f.user2_id = 1) and l.page_id not in (select distinct page_id from Likes where user_id = 1)
select distinct l.page_id as recommended_page from Likes l left join Friendship f1 on f1.user2_id = l.user_id left join Friendship f2 on f2.user1_id = l.user_id where (f1.user1_id = 1 or f2.user2_id = 1) and l.page_id not in (select page_id from Likes where user_id = 1)
select distinct l.page_id as recommended_page from likes l join friendship f on l.user_id = f.user2_id or l.user_id = f.user1_id where (f.user1_id = 1 or f.user2_id = 1) and page_id not in (select page_id from likes where user_id = 1)
select distinct l.page_id as recommended_page from likes l where l.user_id in ( select user2_id as user_id from friendship where user1_id = 1 union select user1_id as user_id from friendship where user2_id = 1 ) and l.page_id not in (select page_id from likes where user_id = 1)
select distinct l.page_id as recommended_page from likes l where user_id in (select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id else '' end from friendship) and page_id not in (select page_id from likes where user_id = 1)
select distinct l.page_id as recommended_page from(select if(user1_id="1", user2_id, user1_id) as user_id from Friendship where user1_id="1" or user2_id="1") a join Likes l on a.user_id = l.user_id where l.page_id not in (select distinct page_id from Likes where user_id=1)
select distinct likes as recommended_page from ( select f.user1_id,f.user2_id,l.page_id as likes from friendship as f inner join likes as l on f.user2_id = l.user_id where f.user1_id = '1' or f.user2_id = '1' union select f.user1_id,f.user2_id,l.page_id as likes from friendship as f inner join likes as l on f.user1_id = l.user_id where f.user1_id = '1' or f.user2_id = '1' )a where likes not in (select page_id from likes where user_id = '1')
select distinct likes.page_id as recommended_page from (select user1_id, user2_id from friendship union select user2_id as user1_id, user1_id as user2_id from friendship) t join likes on user2_id = user_id where user1_id = 1 and likes.page_id not in (select page_id from likes where user_id =1)
select distinct likes.page_id as recommended_page from Likes likes join ( select user1_id user_id from Friendship where user2_id = 1 union select user2_id user_id from Friendship where user1_id = 1 ) users on likes.user_id = users.user_id and likes.page_id not in( select page_id from Likes where user_id = 1 )
select distinct p.page_id as recommended_page from (select t.user_id, l.page_id from (select user2_id as user_id from friendship where user1_id=1 union select user1_id as user_id from friendship where user2_id=1) t join likes l on t.user_id=l.user_id) p where p.page_id not in (select page_id from likes where user_id=1)
select distinct page_id "recommended_page" from likes where user_id in ( select distinct f1.user2_id "user_id" from friendship f1 where f1.user1_id = 1 union select distinct f2.user1_id "user_id" from friendship f2 where f2.user2_id = 1 ) and page_id not in ( select distinct page_id from likes where user_id = 1)
select distinct page_id as 'recommended_page' from Likes where user_id in (select user1_id from Friendship where user2_id=1 union select user2_id from Friendship where user1_id=1 ) and page_id not in (select page_id from Likes where user_id=1 )
select distinct page_id as 'recommended_page' from likes where user_id in ( select user2_id from friendship where user1_id = 1 union select user1_id from friendship where user2_id = 1) and page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from ( select a.user_id,l.page_id from ( select user2_id as user_id from friendship where user1_id = 1 union select user1_id as user_id from friendship where user2_id = 1 ) a inner join likes l on l.user_id = a.user_id and l.page_id not in (select page_id from likes where user_id = 1) ) b
select distinct page_id as recommended_page from ( select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user1 from friendship ) tb join likes l on l.user_id = tb.user1 where page_id NOT IN (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from ( select distinct (case when user1_id=1 then user2_id when user2_id=1 then user1_id end) as user_id from Friendship) sub join likes l on (sub.user_id=l.user_id) where page_id not in (select page_id from likes where user_id=1)
select distinct page_id as recommended_page from ( select distinct page_id from friendship f join likes l on l.user_id = f.user1_id where f.user2_id = 1 union select distinct page_id from friendship f join likes l on l.user_id = f.user2_id where f.user1_id = 1 )x where page_id not in ( select distinct page_id from likes where user_id = 1)
select distinct page_id as recommended_page from ( select user1_id id from Friendship where user2_id = 1 union select user2_id id from Friendship where user1_id = 1 ) a join Likes l on a.id = l.user_id where page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from ( select user1_id, user2_id, user_id as match_id, page_id from ( select user1_id, user2_id from Friendship UNION select user2_id, user1_id from Friendship ) f cross join Likes l on f.user2_id = l.user_id where user1_id = 1 ) p where page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from (select * from Friendship) a join Likes on ( a.user1_id=Likes.user_id and user2_id=1 or a.user2_id=Likes.user_id and user1_id=1 ) where page_id not in (select page_id from Likes where user_id=1)
select distinct page_id as recommended_page from (select case when user1_id=1 then user2_id when user2_id=1 then user1_id end as user_id from Friendship) a join Likes on a.user_id=Likes.user_id where page_id not in (select page_id from Likes where user_id=1)
select distinct page_id as recommended_page from (select distinct case when user1_id=1 then user2_id when user2_id=1 then user1_id end as user_id from Friendship) a join Likes on a.user_id=Likes.user_id where page_id not in (select page_id from Likes where user_id=1)
select distinct page_id as recommended_page from (select l.page_id from likes l join friendship a on l.user_id = a.user1_id where a.user2_id = 1 union select l.page_id from likes l join friendship a on l.user_id = a.user2_id where a.user1_id = 1) as a where page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from (select page_id from likes l inner join friendship f1 on f1.user1_id = l.user_id and f1.user2_id = 1 union select page_id from likes l inner join friendship f2 on f2.user2_id = l.user_id and f2.user1_id = 1) tmp where page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from (select user2_id as id from friendship where user1_id=1 union select user1_id as id from friendship where user2_id=1) a inner join likes b on a.id=b.user_id where page_id not in (select page_id from likes where user_id=1)
select distinct page_id as recommended_page from Friendship f join Likes l on ((f.user1_id = l.user_id and f.user2_id = 1) or (f.user2_id = l.user_id and f.user1_id = 1)) where page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Friendship f join Likes l on f.user2_id=l.user_id or f.user1_id=l.user_id where (user1_id = 1 or user2_id=1) and page_id not in (select page_id from Likes where user_id=1)
select distinct page_id as recommended_page from Likes L JOIN (select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user_id from Friendship) F ON L.user_id = F.user_id and page_id not in (select distinct page_id from Likes where user_id =1)
select distinct page_id as recommended_page from Likes as l join Friendship as f on (l.user_id = f.user1_id and f.user2_id = 1) or (l.user_id = f.user2_id and f.user1_id = 1) where page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Likes l join (select user1_id friends from Friendship where user2_id = 1 union all select user2_id friends from Friendship where user1_id = 1) f on l.user_id = f.friends where page_id not in (select distinct page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Likes left join (select user2_id from Friendship where user1_id = 1 union select user1_id from Friendship where user2_id =1) as tmp on Likes.user_id = tmp.user2_id where Likes.user_id = tmp.user2_id and page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Likes where (user_id in (select user2_id from Friendship where user1_id = 1) or user_id in (select user1_id from Friendship where user2_id = 1)) and page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Likes where page_id not in ( select page_id from Likes where user_id=1) and user_id in (select distinct user2_id as user1_friends from (select user1_id , user2_id from Friendship union all select user2_id as user1_id, user1_id as user2_id from Friendship ) a where user1_id =1 )
select distinct page_id as recommended_page from Likes where page_id not in (select distinct page_id from Likes where user_id =1) and user_id in (select user2_id from Friendship where user1_id=1 union select user1_id from Friendship where user2_id=1)
select distinct page_id as recommended_page from Likes where page_id not in (select page_id from Likes where user_id = '1') and ( user_id in (select user2_id from Friendship where user1_id = '1') or user_id in (select user1_id from Friendship where user2_id = '1') )
select distinct page_id as recommended_page from Likes where user_id in ( select case when user1_id = 1 then user2_id else user1_id end as user_id from Friendship f where user1_id = 1 or user2_id = 1 ) and page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Likes where user_id in ( select distinct user2_id from Friendship where user1_id=1 union all select distinct user1_id from Friendship where user2_id=1 ) and page_id not in (select page_id from Likes where user_id=1 )
select distinct page_id as recommended_page from Likes where user_id in ( select user1_id from Friendship where user2_id=1 union all select user2_id from Friendship where user1_id=1 ) and page_id not in( select page_id from Likes where user_id =1 )
select distinct page_id as recommended_page from Likes where user_id in ( select user2_id from Friendship where user1_id = 1 union select user1_id from Friendship where user2_id = 1 ) and page_id not in( select page_id from Likes where user_id = 1 )
select distinct page_id as recommended_page from Likes where user_id in (select (case when user1_id=1 then user2_id when user2_id=1 then user1_id else 0 end) as friend from Friendship) and page_id not in (select page_id from Likes where user_id=1)
select distinct page_id as recommended_page from Likes where user_id in (select distinct user1_id from Friendship where user2_id = 1 union select distinct user2_id from Friendship where user1_id = 1) and page_id not in (select distinct page_id from Likes where user_id =1)
select distinct page_id as recommended_page from Likes where user_id in (select user2_id as friend from Friendship where user1_id = 1 union all select user1_id from Friendship where user2_id = 1) and page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Likes where user_id in (select user2_id as friend from Friendship where user1_id=1 union select user1_id as friend from Friendship where user2_id=1) and page_id not in (select page_id from Likes where user_id=1 )
select distinct page_id as recommended_page from Likes where user_id in (select user2_id as user1_friend from Friendship where user1_id = 1 union select user1_id from Friendship where user2_id = 1) and page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Likes where user_id in (select user2_id from Friendship where user1_id = 1 union all select user1_id from Friendship where user2_id = 1) and page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from Likes where user_id in (select user2_id from Friendship where user1_id = 1 union select user1_id from Friendship where user2_id = 1) and page_id not in (select page_id from Likes where user_id =1)
select distinct page_id as recommended_page from Likes where user_id in (select user2_id from Friendship where user1_id = 1 union select user1_id from Friendship where user2_id = 1) and page_id not in (select page_id from Likes where user_id=1 )
select distinct page_id as recommended_page from Likes where user_id in (select user2_id from Friendship where user1_id=1 union select user1_id from Friendship where user2_id=1) and page_id not in (select page_id from Likes where user_id=1)
select distinct page_id as recommended_page from Likes where user_id in(select user2_id from Friendship where user1_id = 1 union select user1_id from Friendship where user2_id=1) and page_id not in(select page_id from Likes where user_id =1)
select distinct page_id as recommended_page from likes a join ( select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user_id from friendship where user1_id = 1 or user2_id = 1 ) b on a.user_id = b.user_id and a.page_id not in (select distinct page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes as a where (user_id in (select user2_id from friendship where user1_id=1) or user_id in (select user1_id from friendship where user2_id=1)) and page_id not in (select page_id from likes where user_id =1)
select distinct page_id as recommended_page from likes join (select user2_id as id from friendship where user1_id = 1 union select user1_id as id from friendship where user2_id = 1) as temp on temp.id=likes.user_id where page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes l join ( select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user_id from friendship) f using(user_id) where page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes l join friendship f on (l.user_id = f.user2_id and f.user1_id = 1) or (l.user_id = f.user1_id and f.user2_id = 1) where page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes where page_id not in (select page_id from likes where user_id = 1) and user_id in (select user2_id from friendship where user1_id = 1 union select user1_id from friendship where user2_id = 1)
select distinct page_id as recommended_page from likes where page_id not in (select page_id from likes where user_id=1) and user_id in ( select user2_id as uid from Friendship where user1_id=1 union select user1_id as uid from Friendship where user2_id=1 ) order by 1 asc
select distinct page_id as recommended_page from likes where page_id not in(select distinct page_id from likes where user_id=1) and page_id in (select distinct page_id from likes where user_id in (select user2_id from friendship where user1_id=1) or user_id in (select user1_id from friendship where user2_id=1))
select distinct page_id as recommended_page from likes where user_id IN (select user1_id from Friendship where user2_id = 1 union select user2_id from Friendship where user1_id = 1) and page_id not in(select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes where user_id in ( (select user1_id from friendship where user2_id = 1) union (select user2_id from friendship where user1_id = 1) ) and page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes where user_id in ( select (case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end )as user_id from friendship) and page_id not in ( select page_id from likes where user_id =1)
select distinct page_id as recommended_page from likes where user_id in ( select user_id from ( select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user_id from friendship) a ) and page_id not in (select page_id from likes where user_id = 1 )
select distinct page_id as recommended_page from likes where user_id in (select case when user1_id = 1 then user2_id else user1_id end as frd from (select * from friendship where user1_id = 1 or user2_id = 1) as a) and page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes where user_id in (select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user_id from friendship where user1_id = 1 or user2_id = 1) and page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes where user_id in (select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as userid from friendship) and page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes where user_id in (select distinct case when user1_id =1 then user2_id when user2_id =1 then user1_id end from friendship) and page_id not in (select distinct page_id from likes where user_id =1)
select distinct page_id as recommended_page from likes where user_id in (select distinct case when user1_id=1 then user2_id when user2_id=1 then user1_id end as friends from Friendship where user1_id=1 or user2_id=1) and page_id not in (select distinct page_id from Likes where user_id=1)
select distinct page_id as recommended_page from likes where user_id in (select distinct user2_id as id from friendship where user1_id = 1) and page_id not in (select page_id from likes where user_id = 1) union select distinct page_id as recommended_page from likes where user_id in (select distinct user1_id as id from friendship where user2_id = 1) and page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from likes where user_id in (select user2_id as friend from friendship where user1_id = 1 union select user1_id as friend from friendship where user2_id =1 ) and page_id not in (select distinct page_id as recommended_page from likes where user_id =1)
select distinct page_id as recommended_page from likes where user_id in( select case when user2_id = 1 then user1_id when user1_id =1 then user2_id End as friend from Friendship where user2_id =1 or user1_id =1) and page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id as recommended_page from likes where user_id in(select user2_id from friendship where user1_id = 1 union all select user1_id from friendship where user2_id = 1) and page_id not in (select page_id from likes where user_id = 1)
select distinct page_id as recommended_page from( select page_id from Likes where user_id in (select user2_id as friend from Friendship where user1_id = 1 union select user1_id as friend from Friendship where user2_id = 1)) t where page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id recommended_page from ( select * from friendship where user1_id = 1 union select user2_id, user1_id from friendship where user2_id = 1 ) friends join likes on friends.user2_id = likes.user_id where page_id not in (select page_id from likes where user_id=1)
select distinct page_id recommended_page from Likes where page_id not in (select distinct page_id from Likes where user_id =1) and user_id in (select if(user1_id>user2_id,user1_id,user2_id)user2_id from Friendship where user1_id = 1 or user2_id = 1)
select distinct page_id recommended_page from Likes where user_id in (select user2_id from Friendship where user1_id = 1 union select user1_id from Friendship where user2_id = 1) and page_id not in (select page_id from Likes where user_id = 1)
select distinct page_id recommended_page from likes where user_id in (select user2_id from friendship where user1_id = 1 union select user1_id from friendship where user2_id = 1) and page_id not in (select page_id from likes where user_id = 1)
select distinct(l.page_id) as recommended_page from ( select case when user1_id = 1 then user2_id else user1_id end as user1 from friendship where user1_id = 1 or user2_id = 1) f inner join likes l on f.user1 = l.user_id where l.page_id not in (select page_id from likes where user_id = 1)
select distinct(page_id) as recommended_page from friendship f join likes l on f.user1_id=l.user_id OR f.user2_id=l.user_id where page_id not in (select page_id from likes where user_id=1) and (user1_id=1 or user2_id=1)
select distinct(page_id) as recommended_page from friendship f join likes l on f.user1_id=l.user_id or f.user2_id=l.user_id where page_id not in (select page_id from likes where user_id=1) and (user1_id=1 or user2_id=1)
select distinct(page_id) as recommended_page from likes where user_id in ( select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as users from friendship where user1_id = 1 or user2_id = 1) and page_id not in ( select page_id from likes where user_id = 1)
select distinct(page_id) as recommended_page from( select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user1_friends from Friendship ) t1 join Likes l on t1.user1_friends = l.user_id where page_id not in (select page_id from Likes where user_id = 1)
select l.page_id as recommended_page from Likes as l join ( select case when user1_id = 1 then user2_id when user2_id=1 then user1_id end as friendid from Friendship ) as f on f.friendid = l.user_id group by 1 having l.page_id not in ( select page_id from Likes where user_id =1 )
select page_id as recommended_page from (select distinct page_id from Likes where user_id in (select user2_id as freinds from Friendship where user1_id = 1 union select user1_id as friends from Friendship where user2_id = 1) )k where page_id not in (select page_id from Likes where user_id = 1)
select page_id as recommended_page from( select distinct page_id from Likes join Friendship on Likes.user_id = Friendship.user2_id where user1_id = 1 and page_id not in (select page_id from Likes where user_id = 1 ) union all select distinct page_id from Likes join Friendship on Likes.user_id = Friendship.user1_id where user2_id = 1 and page_id not in (select page_id from Likes where user_id = 1 ) )t1 order by page_id
select recommended_page from ( select recommended_page from (select page_id as recommended_page from likes where user_id in (select user2_id from friendship where user1_id =1) and user_id<>1)a union all (select page_id as recommended_page from likes where user_id in (select user1_id from friendship where user2_id =1) and user_id<>1) )x where recommended_page not in (select page_id from likes where user_id =1) group by recommended_page
select recommended_page from (select distinct page_id as recommended_page from likes where user_id in( select user2_id from friendship f1 where user1_id=1 union select user1_id from friendship f2 where user2_id=1))t where recommended_page not in (select page_id from likes where user_id=1)
with Friendship_1 as ( select user2_id,user1_id from Friendship where user2_id = 1 ) select recommended_page from ( select distinct l.page_id as recommended_page from Friendship f join Likes l on f.user2_id=l.user_id where f.user1_id = 1 and l.page_id not in(select page_id from Likes where user_id =1) )a union ( select distinct l.page_id as recommended_page from Friendship_1 f join Likes l on f.user1_id=l.user_id and l.page_id not in(select page_id from Likes where user_id =1) )
with a as ( select user_id, page_id from likes where page_id not in(select page_id from likes where user_id = 1) ) select distinct a.page_id as recommended_page from( select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as fre_user from( select * from friendship where user1_id = 1 or user2_id = 1 ) b )c , a where a.user_id = c.fre_user
with a as (SELECT user1_id,user2_id FROM Friendship UNION SELECT user2_id as user1_id, user1_id as user2_id FROM Friendship), b as (SELECT distinct user2_id FROM a WHERE user1_id = 1) SELECT distinct l.page_id as recommended_page FROM b JOIN Likes as l ON b.user2_id=l.user_id WHERE l.page_id not in (select page_id from Likes where user_id=1)
with all_friendship as (select user1_id, user2_id from friendship union select user2_id, user1_id from friendship) select distinct a.page_id as recommended_page from likes a join all_friendship b on b.user2_id = a.user_id where b.user1_id =1 and page_id not in (select page_id from Likes where user_id=1)
with base as ( select user1_id as id, user2_id as id1 from Friendship union all select user2_id as id, user1_id as id1 from Friendship ) select distinct page_id as recommended_page from base, Likes where base.id1 = Likes.user_id and id = 1 and id1<> 1 and page_id not in (select page_id from Likes where user_id = 1)
with cte as ( select case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as fr from friendship ) select distinct page_id as recommended_page from `likes` where user_id in (select fr from cte where fr is not null) and page_id not in (select page_id from `likes` where user_id = 1)
with cte as ( select distinct (case when a.user1_id <= a.user2_id then a.user1_id else a.user2_id end) as user1, (case when a.user1_id > a.user2_id then a.user1_id else a.user2_id end) as user2 from Friendship a ) select distinct l.page_id as recommended_page from (select * from cte where user1 = 1 and user1 != user2) as c inner join Likes l on c.user2 = l.user_id where l.page_id not in (select page_id from Likes where user_id = 1)
with cte as ( select distinct user2_id as friend from ( select user1_id, user2_id from Friendship union all select user2_id as user1_id, user1_id as user2_id from Friendship )t where user1_id = 1 ) select distinct page_id as recommended_page from Likes where user_id in ( select friend from cte ) and page_id not in ( select page_id from Likes where user_id = 1 )
with cte as ( select l.page_id as recommended_page from likes l join friendship f on l.user_id = f.user2_id where f.user1_id = 1 union select l.page_id as recommended_page from likes l join friendship f on l.user_id = f.user1_id where f.user2_id = 1 ) select recommended_page from cte where recommended_page not in (select page_id from likes where user_id = 1)
with cte as ( select l.page_id from likes l join friendship f on l.user_id = f.user1_id where f.user2_id = 1 union select l.page_id from likes l join friendship f on l.user_id = f.user2_id where f.user1_id = 1 ) select page_id as recommended_page from cte where page_id not in (select page_id from likes where user_id = 1)
with cte as ( select user1_friend from (select distinct case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user1_friend from friendship ) a where user1_friend is not null ) select distinct page_id as recommended_page from likes where user_id in (select * from cte) and page_id not in (select page_id from likes where user_id = 1)
with cte as ( select user1_id as friend from friendship where user2_id=1 union select user2_id from friendship where user1_id=1) select distinct page_id as recommended_page from likes l join cte c on l.user_id=c.friend where page_id not in (select page_id from likes where user_id=1)
with cte as ( select user2_id as friend_id from Friendship where user1_id=1 union select user1_id as friend_id from Friendship where user2_id=1 ) select distinct page_id as recommended_page from Likes where user_id in (select friend_id from cte) and page_id not in (select page_id from Likes where user_id=1)
with cte as ( select user2_id as id from friendship where user1_id=1 union select user1_id as id from friendship where user2_id=1 ) select distinct l.page_id as recommended_page from likes l join cte on cte.id = l.user_id where l.page_id not in (select page_id from likes where user_id=1)
with cte as ( select user_id from ( select user1_id as user_id from Friendship where user2_id=1 union select user2_id as user_id from Friendship where user1_id=1) sub ) select distinct page_id as recommended_page from Likes where user_id in (select user_id from cte) and page_id not in (select page_id from likes where user_id=1)
with cte as (Select distinct page_id as recommended_page from Likes where user_id in ((Select user2_id from Friendship where user1_id=1) union (Select user1_id as user2_id from Friendship where user2_id=1))) Select * from cte where recommended_page not in (Select distinct page_id from Likes where user_id=1)
with cte as (select f.user1_id as users,l.page_id from Friendship f join Likes l on f.user1_id = l.user_id where user2_id =1 union select f.user2_id as users,l.page_id from Friendship f join Likes l on f.user2_id = l.user_id where user1_id =1) select DISTINCT page_id as recommended_page from cte where page_id not in (select page_id from Likes where user_id = 1)
with cte as (select user1_id as a, user2_id as b from friendship union all select user2_id as a, user1_id as b from friendship) select distinct page_id as recommended_page from likes where user_id in (select b as user_id from cte where a=1) and page_id not in (select page_id from likes where user_id=1)
with cte as (select user1_id from Friendship where user2_id=1 and user1_id!=1 union all select user2_id from Friendship where user1_id=1 ) select distinct page_id as recommended_page from Likes l join cte c on l.user_id=c.user1_id where page_id not in (select page_id from Likes where user_id=1)
with cte as (select user2_id as user_id from Friendship where user1_id = 1 union select user1_id as user_id from Friendship where user2_id = 1) select distinct page_id as recommended_page from Likes where user_id in (select user_id from cte) and page_id not in (select page_id from Likes where user_id=1)
with cte as (select user2_id as user_id from friendship where user1_id = 1 union all select user1_id as user_id from friendship where user2_id = 1) select distinct page_id as recommended_page from likes a join cte b on a.user_id = b.user_id where page_id not in (select page_id from likes where user_id = 1)
with cte as (select user2_id from Friendship where user1_id = 1 union select user1_id from Friendship where user2_id = 1) select distinct page_id as recommended_page from Likes where user_id in (select * from cte) and page_id not in (select page_id from Likes where user_id = 1)
with cte as (select user2_id from friendship where user1_id = 1 union all select user1_id from friendship where user2_id = 1) select distinct page_id as recommended_page from cte join likes l on cte.user2_id = l.user_id where page_id not in (select page_id from likes where user_id = 1)
with cte as (select user2_id user_id from Friendship where user1_id = 1 union select user1_id user_id from Friendship where user2_id = 1) select distinct page_id as recommended_page from (select page_id from Likes where user_id in (select user_id from cte)) sub where page_id not in (select page_id from Likes where user_id = 1)
with cte as( select user2_id as friends from Friendship where user1_id = 1 union select user1_id as friends from Friendship where user2_id = 1 ) select distinct page_id as recommended_page from Likes where user_id in (select friends from cte) and page_id not in (select page_id from Likes where user_id = 1)
with cte as( select user2_id as user_id from Friendship where user1_id = 1 UNION select user1_id as user_id from Friendship where user2_id = 1) select distinct page_id as recommended_page from likes l join cte c on l.user_id = c.user_id where page_id not in (select page_id from likes where user_id = 1)
with cte as( select user2_id id from Friendship where user1_id = 1 union all select user1_id id from Friendship where user2_id = 1 ) select distinct page_id as recommended_page from Likes l inner join cte on cte.id = l.user_id where page_id not in (select page_id from Likes where user_id = 1)
with cte1 as ( select user1_id , user2_id from friendship where user1_id = 1 or user2_id = 1 ), cte2 as ( select page_id from cte1 left join likes on user1_id = user_id where user_id != 1 union all select page_id from cte1 left join likes on user2_id = user_id where user_id != 1) select distinct page_id as recommended_page from cte2 where page_id not in (select distinct page_id from likes where user_id = 1)
with cte1 as ( select user1_id, user2_id from Friendship union all select user2_id, user1_id from Friendship ) select distinct likes.page_id as recommended_page from likes inner join cte1 on cte1.user2_id = likes.user_id where cte1.user1_id = 1 and cte1.user2_id !=1 and likes.page_id not in ( select page_id from likes where user_id =1 )
with cte1 as (select fr.user2_id as friend from Friendship fr where fr.user1_id = 1 union all select fr.user1_id as friend from Friendship fr where fr.user2_id = 1) select distinct lk.page_id as recommended_page from cte1 ct1 join likes lk on ct1.friend = lk.user_id where lk.page_id not in (select lk1.page_id from likes lk1 where lk1.user_id = 1) order by 1 asc
with cte_friends as ( select CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END as user_id FROM friendship where user1_id = 1 or user2_id=1 ), already_liked as ( select distinct page_id from likes where user_id = 1 ), pages_rec as ( select distinct likes.page_id as recommended_page from likes inner join cte_friends cf on likes.user_id=cf.user_id left join already_liked al on likes.page_id=al.page_id where al.page_id is null ) select * from pages_rec
with cte_friends as ( select CASE WHEN user1_id = 1 THEN user2_id WHEN user2_id = 1 THEN user1_id END as user_id FROM friendship where user1_id = 1 or user2_id=1 ), already_liked as ( select distinct page_id from likes where user_id = 1 ), pages_rec as ( select distinct page_id as recommended_page from likes inner join cte_friends cf on likes.user_id=cf.user_id where page_id not in (select page_id from already_liked) ) select * from pages_rec
with cte_friends as ( select distinct case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end as user_id from Friendship where user1_id = 1 or user2_id = 1 ), cte_final as ( select distinct page_id as recommended_page from Likes where user_id in ( select user_id from cte_friends ) and page_id not in ( select page_id from Likes where user_id = 1 ) ) select * from cte_final
with f AS( SELECT if(user1_id<user2_id, user1_id, user2_id) AS id, if(user1_id>user2_id, user1_id, user2_id) AS friend_id FROM Friendship) SELECT distinct page_id AS recommended_page FROM f JOIN Likes l ON f.friend_id=l.user_id WHERE f.id=1 AND page_id NOT IN (SELECT page_id FROM Likes WHERE user_id=1)
with f as ( select u1, u2 from (select user1_id u1, user2_id u2 from Friendship union select user2_id u1, user1_id u2 from Friendship) a where u1=1 ) select distinct b.page_id recommended_page from f a join Likes b on a.u2 = b.user_id where b.page_id not in ( select distinct page_id from likes where user_id=1)
with f as ( select user1_id u1, user2_id u2 from Friendship union select user2_id u1, user1_id u2 from Friendship ) select distinct b.page_id recommended_page from f a join Likes b on a.u1 = 1 and a.u2 = b.user_id where b.page_id not in (select distinct page_id from likes where user_id=1)
with f as ( select user2_id id from friendship where user1_id=1 union select user1_id id from friendship where user2_id=1 ) select distinct page_id recommended_page from likes join f on user_id=f.id where page_id not in (select page_id from likes where user_id=1)
with f1 as (select user2_id as id from Friendship where user1_id=1), f2 as (select user1_id as id from Friendship where user2_id=1) select distinct page_id as 'recommended_page' from Likes where user_id IN ((select id from f1) UNION (select id from f2)) AND page_id NOT IN (select page_id from Likes where user_id=1)
with friend as ( select user1_id as id, user2_id as friend from friendship union select user2_id as id, user1_id as friend from friendship) select * from ( select distinct l.page_id as recommended_page from friend f left join likes l on f.friend = l.user_id left join likes l2 on f.id = l2.user_id and l.page_id = l2.page_id where l2.user_id is null and f.id = 1) a where recommended_page is not null
with friend as ( select user1_id as id, user2_id as friend from friendship union select user2_id as id, user1_id as friend from friendship) select distinct l.page_id as recommended_page from friend f left join likes l on f.friend = l.user_id left join likes l2 on f.id = l2.user_id and l.page_id = l2.page_id where l2.user_id is null and f.id = 1 and l.page_id is not null
with friend as( select user2_id as id from friendship where user1_id = 1 union select user1_id as id from friendship where user2_id = 1 ) select distinct page_id as recommended_page from likes where user_id in (select id from friend) and page_id not in (select page_id from likes where user_id =1 )
with friend_1 as ( select user1_id from Friendship where user2_id=1 union select user2_id from Friendship where user1_id=1) select distinct page_id as recommended_page from Likes a join friend_1 b on a.user_id =b.user1_id where page_id not in (select page_id from Likes where user_id=1)
with friend_list as ( SELECT user1_id as friends FROM Friendship WHERE user2_id = 1 UNION SELECT user2_id as friends FROM Friendship WHERE user1_id = 1 ), user1_page_list as ( SELECT page_id AS pages FROM Likes WHERE user_id = 1 ), friends_page_list as ( SELECT page_id as pages FROM Likes WHERE user_id IN (SELECT friends FROM friend_list) ) SELECT DISTINCT page_id as recommended_page FROM Likes WHERE page_id IN (SELECT pages FROM friends_page_list) AND page_id NOT IN (SELECT pages FROM user1_page_list)
with friendlist as ( select user2_id from Friendship where user1_id = 1 union all select user1_id from Friendship where user2_id = 1), alreadyliked as ( select page_id from Likes where user_id = 1 ) select distinct(page_id) as recommended_page from Likes where user_id in (select * from friendlist) and page_id not in (select * from alreadyliked)
with friends as ( SELECT distinct user2_id as user_id FROM Friendship WHERE user1_id = 1 UNION SELECT distinct user1_id as user_id FROM Friendship WHERE user2_id = 1 ) SELECT DISTINCT page_id as recommended_page FROM Likes WHERE user_id IN (SELECT * FROM friends) AND page_id NOT IN (SELECT distinct page_id FROM Likes WHERE user_id = 1)
with friends as ( SELECT user2_id FROM Friendship WHERE user1_id = 1 UNION SELECT user1_id FROM Friendship WHERE user2_id = 1 ), already_liked as ( SELECT page_id FROM Likes WHERE user_id =1 ) SELECT DISTINCT page_id As 'recommended_page' FROM Likes WHERE user_id IN (SELECT * FROM friends) AND page_id NOT IN (SELECT * FROM already_liked)
with friends as ( Select user1_id,user2_id from Friendship Union Select user2_id,user1_id from Friendship ) Select distinct page_id as recommended_page from friends F inner join Likes L on F.user2_id=L.user_id where not exists ( Select 2 from Likes L2 where F.user1_id =L2.user_id and L.page_id =L2.page_id) and user1_id=1
with friends as ( select user1_id as user1, user2_id as user2 FROM friendship where user1_id<user2_id union select user2_id as user1, user1_id as user2 FROM friendship where user1_id>user2_id ) select distinct l.page_id as recommended_page from friends f join likes l on f.user2 = l.user_id where f.user1 = 1 and page_id not in (select page_id from likes where user_id = 1)
with friends as ( select user1_id as user_id from friendship where user2_id = 1 union select user2_id as user_id from friendship where user1_id = 1 ) select distinct l.page_id as recommended_page from likes l inner join friends f on l.user_id = f.user_id where l.page_id not in (select distinct page_id from likes where user_id = 1)
with friends as ( select user1_id from Friendship where user2_id=1 union select user2_id from Friendship where user1_id=1 ) select distinct page_id as recommended_page from Likes join friends on Likes.user_id =friends.user1_id where page_id not in (select page_id from Likes where user_id=1)
with friends as ( select user1_id, user2_id from friendship where user1_id = 1 union select user2_id, user1_id from friendship where user2_id = 1 ) select distinct b.page_id as recommended_page from friends a join likes b on a.user2_id = b.user_id where b.page_id not in ( select page_id from likes where user_id = 1 )
with friends as ( select user2_id as user_id from friendship where user1_id = 1 union select user1_id as user_id from friendship where user2_id = 1 ) select distinct page_id as recommended_page from friends join likes using (user_id) where page_id not in (select page_id from likes where user_id = 1)
with friends as (select (case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end) as friend from friendship), user_likes as (select page_id from likes where user_id = 1) select distinct page_id as recommended_page from likes where user_id in (select * from friends) and page_id not in (select * from user_likes)
with friends as (select user1_id as uid from friendship where user2_id = 1 union select user2_id as uid from friendship where user1_id = 1) select distinct page_id as recommended_page from likes where user_id in (select distinct uid from friends) and page_id not in (select page_id from likes where user_id = 1)
with friends as (select user1_id as user_id from friendship where user2_id = 1 union select user2_id as user_id from friendship where user1_id = 1) select distinct A.page_id as recommended_page from likes A where A.user_id in (select user_id from friends) AND A.page_id not in (select page_id from likes where user_id = 1)
with friends as( select user1_id user_id, user2_id friend_id from Friendship where user1_id = 1 union select user2_id user_id, user1_id friend_id from Friendship where user2_id = 1) select distinct l.page_id recommended_page from friends f left join Likes l on f.friend_id = l.user_id where l.page_id not in (select page_id from Likes where user_id = 1) and l.page_id is not null
with friends as( select user2_id as friend from friendship where user1_id = 1 union select user1_Id as friend from friendship where user2_id = 1 ), notlike as ( select page_id from likes where user_Id = 1 ) select distinct page_id as recommended_page from likes where user_id in (select friend from friends) and page_id not in (select page_Id from notlike)
with friends as( select user2_id u from friendship where user1_id=1 union select user1_id u from friendship where user2_id=1 ), pages as( select user_id,page_id from likes where page_id not in (select page_id from likes where user_id=1)) select distinct page_id recommended_page from pages p join friends f on p.user_id=f.u
with friends1 as ( select user2_id user_id from Friendship where user1_id=1 union all select user1_id user_id from Friendship where user2_id=1 group by user_id), friend_like as (select l.page_id from friends1 f join likes l on f.user_id=l.user_id group by page_id) select page_id recommended_page from friend_like where page_id not in (select page_id from Likes where user_id =1)
with friends_of_1 as ( select user2_id as user_1_friend from Friendship where user1_id=1 UNION select user1_id as user_1_friend from Friendship where user2_id=1 ) select distinct page_id as recommended_page from Likes where user_id in (select user_1_friend from friends_of_1 ) AND page_id not in (select page_id from likes where user_id=1) order by 1
with friendtable as( select user1_id as id, user2_id as friend from Friendship union select user2_id as id, user1_id as friend from friendship ) select distinct l.page_id as recommended_page from likes as l join friendtable as f on f.friend=l.user_id where f.id=1 and l.page_id not in( select page_id from likes where user_id=1 )
with frs as(select user1_id as me, user2_id as friends from Friendship union all select user2_id as me, user1_id as friends from Friendship) select distinct l.page_id as recommended_page from frs f join likes l on f.friends=l.user_id where f.me =1 and l.page_id not in (Select distinct page_id from likes where user_id=1)
with initital as ( Select user2_id as user_id from Friendship where user1_id = 1 union Select user1_id as user_id from Friendship where user2_id = 1 ) select distinct page_id as recommended_page from likes where user_id in (select user_id from initital) and page_id not in (select page_id from likes where user_id = 1)
with joined_friends as ( select user1_id as user1_id, user2_id as user2_id from friendship f union all select user2_id as user1_id, user1_id as user2_id from friendship f ) , friend_likes as ( select distinct page_id from likes l where user_id in (select distinct user2_id from joined_friends where user1_id = 1) ) , liked_by_1 as ( select distinct page_id from likes l where user_id = 1 ) select distinct page_id as recommended_page from friend_likes f where f.page_id not in (select distinct page_id from liked_by_1)
with me_f as ( select user1_id id, user2_id friend from friendship where user1_id=1 union select user2_id id, user1_id friend from friendship where user2_id=1) select distinct page_id recommended_page from me_f m join Likes l on m.friend = l.user_id where page_id not in ( select page_id from Likes where user_id=1)
with myf as (select user1_id as id from Friendship where user2_id = 1 union select user2_id as id from Friendship where user1_id = 1 ) select distinct page_id as recommended_page from myf join likes on myf.id = likes.user_id where page_id not in (select page_id from likes where user_id=1)
with new as ( select case when user1_id < user2_id then user1_id when user1_id > user2_id then user2_id end as user1, case when user1_id < user2_id then user2_id when user1_id > user2_id then user1_id end as user2 from friendship ) select distinct l.page_id as recommended_page from new n join likes l on n.user2 = l.user_id where l.page_id not in (select page_id from likes where user_id = 1) and n.user1 = 1 order by l.page_id
with one_frnd as ( select distinct user2_id as id from friendship where user1_id = 1 union all select distinct user1_id as id from friendship where user2_id = 1 ) select distinct l.page_id as recommended_page from one_frnd o inner join likes l on o.id = l.user_id and l.page_id not in (select distinct page_id from likes where user_id =1)
with pages_friends as (select distinct l.page_id from (select user1_id, user2_id from Friendship union select user2_id, user1_id from Friendship) a left join Likes l on l.user_id = a.user2_id where user1_id = 1) select page_id as recommended_page from pages_friends where page_id not in (select page_id from Likes where user_id = 1) and page_id is not null order by recommended_page
with t as ( Select user1_id, user2_id from Friendship where user1_id = 1 union Select user2_id, user1_id from Friendship where user2_id = 1) Select distinct page_id as recommended_page from Likes where page_id not in(Select page_id from Likes where user_id = 1) and user_id in (Select user2_id from t)
with t1 as ( select user1_id, user2_id from friendship where user1_id = 1 or user2_id = 1 ), t2 as ( select distinct user_id from likes where (user_id in (select user1_id from t1) or user_id in (select user2_id from t1)) and user_id != 1 ) select distinct page_id as recommended_page from t2 left join likes using(user_id) where page_id not in (select page_id from likes where user_id = 1) order by page_id
with t1 as ( select user2_id as user_id from friendship where user1_id=1 union select user1_id as user_id from friendship where user2_id=1) select distinct page_id as recommended_page from likes where user_id in (select user_id from t1) and page_id not in (select page_id from likes where user_id =1)
with t1 as (select user1_id as u, user2_id as t from friendship union all select user2_id as u, user1_id as t from friendship) select distinct l.page_id as recommended_page from likes l where l.user_id in (select t from t1 where u = 1 ) and l.page_id not in (select page_id from likes where user_id = 1)
with t1 as (select user2_id as id from friendship where user1_id = 1 union all select user1_id as id from friendship where user2_id = 1) select distinct page_id as recommended_page from t1 a join likes b on a.id = user_id where page_id not in (select page_id from likes where user_id = 1)
with table1 as ( select user2_id as users from Friendship where user1_id=1 union select user1_id as users from Friendship where user2_id=1 ) select distinct l.page_id as recommended_page from table1 t join Likes l on t.users=l.user_id where l.page_id not in (select page_id from Likes where user_id=1)
with temp as ( select (case when user1_id = 1 then user2_id when user2_id = 1 then user1_id end) as user_id from friendship ) select distinct page_id as recommended_page from likes k join temp t on k.user_id = t.user_id where page_id not in (select page_id from likes where user_id = 1)
with temp as ( select user1_id, user2_id from Friendship where user1_id = 1 union all select user2_id as user1_id, user1_id as user2_id from Friendship where user2_id = 1 ) select distinct page_id as recommended_page from temp t join Likes l on t.user2_id = l.user_id where page_id not in (select page_id from Likes where user_id = 1)
with temp as ( select user2_id as id from friendship where user1_id =1 union select user1_id as id from friendship where user2_id=1 ) select distinct page_id as recommended_page from likes where user_id in (select id from temp) and page_id not in (select page_id from likes where user_id =1)
with temp0 as ( select distinct user1_id as friend from Friendship where user2_id = 1 union select distinct user2_id as friend from Friendship where user1_id = 1 ) select distinct a.page_id as recommended_page from Likes a join temp0 b on b.friend = a.user_id where a.page_id not in (select page_id from Likes where user_id = 1)
with tmp as (select user2_id as fid from friendship where user1_id = 1 union select user1_id as fid from friendship where user2_id = 1) select distinct page_id as recommended_page from likes a join tmp b on a.user_id = b.fid where page_id not in (select distinct a.page_id from likes a where a.user_id = 1)
with u1_l as ( SELECT * FROM Likes where user_id = 1 ), u1_f as ( SELECT user1_id, user2_id FROM Friendship UNION SELECT user2_id as user1_id, user1_id as user2_id FROM Friendship ) select distinct l.page_id as recommended_page FROM Likes l join u1_f on u1_f.user1_id = l.user_id where (user1_id = 1 or user2_id = 1) and l.page_id not in (SELECT page_id from u1_l)
with user1_friend as ( select distinct user1_id as self_id, user2_id as friend_id from Friendship where user1_id = 1 union all select distinct user2_id as self_id, user1_id as friend_id from Friendship where user2_id = 1 ) ,tmp1 as (select t1.self_id, t2.page_id as self_like from user1_friend t1 left join Likes t2 on t1.self_id = t2.user_id group by 1,2), tmp2 as (select t1.self_id, t3.page_id as friend_like from user1_friend t1 left join Likes t3 on t1.friend_id = t3.user_id group by 1,2), tmp3 as (select tmp1.self_id, ifnull(tmp1.self_like,0) as self_like, ifnull(tmp2.friend_like,0) as friend_like from tmp1 left join tmp2 on tmp1.self_id = tmp2.self_id) select distinct (friend_like) as recommended_page from tmp3 where friend_like not in (select distinct self_like from tmp3) and friend_like <> 0 order by 1 desc
with user1_friends as (select user2_id as friends from Friendship where user1_id = 1 Union select user1_id as friends from Friendship where user2_id = 1), user1_likes as (Select distinct page_id From Likes where user_id = 1) Select distinct page_id as recommended_page from Likes where user_id in (select * from user1_friends) and page_id not in (select* from user1_likes)
with user_1_friends as ( select user2_id friend_id from Friendship where user1_id=1 union select user1_id friend_id from Friendship where user2_id=1 ) select distinct page_id recommended_page from Likes where user_id in (select friend_id from user_1_friends) and page_id not in (select distinct page_id from Likes where user_id=1)
with user_friend as( select distinct user2_id as user_id from Friendship where user1_id =1 union all select distinct user1_id as user_id from Friendship where user2_id=1 ), liked_pages as ( select page_id from Likes where user_id =1 ) select distinct page_id as recommended_page from Likes where user_id in (select user_id from user_friend) and page_id not in (select page_id from liked_pages)
with user_liked as ( select page_id from likes where user_id = 1 ), friends_liked as ( select distinct(page_id) from likes l join friendship f on f.user2_id = l.user_id where f.user1_id = 1 union select distinct(page_id) from likes l join friendship f on f.user1_id = l.user_id where f.user2_id = 1 ) select page_id as recommended_page from friends_liked where page_id not in ( select page_id from likes where user_id = 1)
with users as ( select user1_id as user1,user2_id as user2 from Friendship f1 union select user2_id as user1,user1_id as user2 from Friendship f2 ) select distinct l.page_id as recommended_page from users u join Likes l on u.user2 = l.user_id where u.user1 = 1 and l.page_id not in (select page_id from Likes l1 where user_id = 1)
with usersfriends as (select user1_id as friends from Friendship where user2_id = 1 union select user2_id as friends from Friendship where user1_id = 1) select distinct page_id as recommended_page from Likes where user_id in (select friends from usersfriends) and page_id not in (select page_id from likes where user_id = 1)
with x as ( select user2_id as user from friendship where user1_id = 1 union select user1_id as user from friendship where user2_id = 1 ) select distinct page_id as recommended_page from likes where user_id in (select user from x) and page_id not in (select page_id from likes where user_id = 1)
