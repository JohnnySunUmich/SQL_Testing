SELECT * FROM Student WHERE student_id NOT IN ( SELECT student_id FROM Exam t1 JOIN ( SELECT exam_id, MAX(score) score FROM Exam GROUP BY exam_id ) t2 ON t1.exam_id = t2.exam_id WHERE t1.score = t2.score UNION SELECT student_id FROM Exam t1 JOIN ( SELECT exam_id, MIN(score) score FROM Exam GROUP BY exam_id ) t2 ON t1.exam_id = t2.exam_id WHERE t1.score = t2.score ) AND student_id IN ( SELECT DISTINCT(student_id) FROM Exam )
SELECT * FROM Student WHERE student_id NOT IN (SELECT student_id FROM (SELECT Exam.student_id, student_name, score, MIN(score) OVER (partition by exam_id) as min_score, MAX(score) OVER (partition by exam_id) as max_score FROM Exam LEFT JOIN Student ON Exam.student_id = Student.student_id) T WHERE T.score = T.min_score OR T.score = T.max_score) AND student_id IN (SELECT distinct student_id FROM EXAM)
SELECT * FROM Student s WHERE EXISTS ( SELECT 1 FROM EXAM e WHERE s.student_id = e.student_id ) AND NOT EXISTS ( SELECT 1 FROM ( SELECT exam_id, STUDENT_ID FROM ( SELECT exam_id, STUDENT_ID, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score) low_rank, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) high_rank FROM EXAM ) t2 WHERE low_rank=1 OR high_rank=1 ) t3 WHERE s.student_id = t3.student_id )
SELECT * FROM student WHERE student_id NOT IN (SELECT student_min FROM (SELECT group_table.exam_id,min_score,max_score,e2.student_id as student_min FROM (SELECT exam_id,max(score) as max_score,min(score) as min_score FROM Exam GROUP BY exam_id) as group_table JOIN exam as e2 ON group_table.exam_id = e2.exam_id WHERE group_table.min_score = e2.score) as group2 JOIN exam as e3 ON group2.exam_id = e3.exam_id WHERE group2.max_score = e3.score) AND student_id NOT IN (SELECT e3.student_id as student_max FROM (SELECT group_table.exam_id,min_score,max_score,e2.student_id as student_min FROM (SELECT exam_id,max(score) as max_score,min(score) as min_score FROM Exam GROUP BY exam_id) as group_table JOIN exam as e2 ON group_table.exam_id = e2.exam_id WHERE group_table.min_score = e2.score) as group2 JOIN exam as e3 ON group2.exam_id = e3.exam_id WHERE group2.max_score = e3.score) AND student_id IN (SELECT student_id FROM exam)
SELECT B.student_id,B.student_name FROM (Select A.exam_id,A.student_id,A.student_name,(CASE WHEN A.score IN(min_score,max_score) THEN 1 else 0 END)AS cnt FROM (SELECT exam_id, e.student_id, student_name, score, MAX(score)OVER(PARTITION BY exam_id) as max_score, MIN(score)OVER(PARTITION BY exam_id) as min_score FROM Exam e INNER JOIN Student s ON e.student_id = s.student_id)A)B group by student_id having SUM(B.cnt) =0 order by student_id
SELECT DISTINCT A.student_id, student_name FROM Exam A LEFT JOIN Student B ON A.student_id = B.student_id WHERE A.student_id NOT IN (SELECT student_id FROM Exam WHERE (exam_id, score) IN (SELECT exam_id, MAX(score) FROM Exam GROUP BY exam_id) OR (exam_id, score) IN (SELECT exam_id, MIN(score) FROM Exam GROUP BY exam_id)) ORDER BY 1
SELECT DISTINCT Exam.student_id, Student.student_name FROM Exam JOIN Student ON Student.student_id = Exam.student_id WHERE Exam.student_id NOT IN (SELECT student_id FROM Exam JOIN (SELECT exam_id, MAX(score) AS ma_sc, MIN(score) AS mi_sc FROM Exam GROUP BY exam_id) sub ON Exam.exam_id = sub.exam_id WHERE score = sub.ma_sc OR score = sub.mi_sc) ORDER BY Exam.student_id
SELECT DISTINCT Exam.student_id, student_name FROM Exam LEFT JOIN Student ON Exam.student_id = Student.student_id WHERE Exam.student_id NOT IN ( SELECT student_id FROM ( SELECT student_id, RANK() OVER (PARTITION BY exam_id ORDER BY score) AS ASC_RANK, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) AS DESC_RANK FROM Exam) score_ranks WHERE ASC_RANK = 1 OR DESC_RANK = 1) ORDER BY Exam.student_id
SELECT DISTINCT Student.student_id, Student.student_name FROM Student RIGHT JOIN exam ON Student.student_id = exam.student_id WHERE Student.Student_id NOT IN (SELECT e.student_id AS student_id FROM Exam e JOIN ( SELECT exam_id, MAX(score) AS maxScore, MIN(score) AS minScore FROM Exam GROUP BY exam_id) temp ON e.exam_id = temp.exam_id WHERE e.score = temp.maxScore OR e.score = temp.minScore) ORDER BY Student.student_id ASC
SELECT DISTINCT Student.student_id, student_name FROM Exam LEFT JOIN Student ON Student.student_id = Exam.student_id WHERE student_name NOT IN ( SELECT student_name FROM Exam LEFT JOIN ( SELECT exam_id, MAX(score) AS top_score, MIN(score) AS low_score FROM Exam GROUP BY exam_id ) AS exam_records ON Exam.exam_id = exam_records.exam_id LEFT JOIN Student ON Student.student_id = Exam.student_id WHERE score = top_score OR score = low_score ) ORDER BY Student.student_id ASC
SELECT DISTINCT a.student_id, a.student_name FROM (SELECT e.student_id, s.student_name, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) as high_student_exam_rank, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score ASC) as low_student_exam_rank FROM Exam e INNER JOIN student s ON e.student_id = s.student_id ) as a GROUP BY a.student_name HAVING MIN(high_student_exam_rank) > 1 AND MIN(low_student_exam_rank) > 1 ORDER BY student_id ASC
SELECT DISTINCT e.student_id ,s.student_name FROM Exam e INNER JOIN Student s ON e.student_id = s.student_id LEFT JOIN ( SELECT DISTINCT student_id FROM Exam e INNER JOIN ( SELECT exam_id ,MAX(score) AS max_score ,MIN(score) AS min_score FROM Exam GROUP BY exam_id ) t ON e.exam_id = t.exam_id AND (e.score = t.max_score OR e.score = t.min_score) ) m ON e.student_id = m.student_id WHERE m.student_id IS NULL ORDER BY e.student_id
SELECT DISTINCT e.student_id, s.student_name FROM Exam as e JOIN student as s ON e.student_id=s.student_id WHERE e.student_id NOT IN( SELECT student_id FROM( SELECT student_id, DENSE_RANK()OVER(PARTITION BY exam_id ORDER BY score DESC) as examrank FROM exam )a WHERE examrank=1 UNION ALL SELECT student_id FROM( SELECT student_id, DENSE_RANK()OVER(PARTITION BY exam_id ORDER BY score ASC) as examrank FROM exam )a WHERE examrank=1 ) ORDER BY e.student_id
SELECT DISTINCT e.student_id, s.student_name FROM Exam e INNER JOIN Student s ON e.student_id = s.student_id WHERE e.student_id NOT IN ( SELECT DISTINCT student_id FROM ( SELECT exam_id, student_id, RANK() OVER (PARTITION BY exam_id ORDER BY score ASC) AS score_asc_rank FROM Exam ) sar WHERE score_asc_rank = 1 ) AND e.student_id NOT IN ( SELECT DISTINCT student_id FROM ( SELECT exam_id, student_id, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) AS score_desc_rank FROM Exam ) sdr WHERE score_desc_rank = 1 ) ORDER BY e.student_id ASC
SELECT DISTINCT e.student_id, s.student_name FROM Exam e JOIN Student s ON s.student_id = e.student_id WHERE s.student_id NOT IN (SELECT DISTINCT student_id FROM( SELECT exam_id, student_id, score, MAX(score) OVER(partition by exam_id) as maxi, MIN(score) OVER(partition by exam_id) as mini FROM Exam) maxandmin WHERE score = maxi OR score = mini) ORDER BY e.student_id
SELECT DISTINCT s.* FROM Student s INNER JOIN Exam e USING(student_id) WHERE e.student_id NOT IN ( SELECT student_id FROM (SELECT * , MAX(score) OVER(PARTITION BY exam_id) AS max_score , MIN(score) OVER(PARTITION BY exam_id) AS min_score FROM Exam) temp WHERE score = max_score OR score = min_score) ORDER BY student_id
SELECT DISTINCT student.student_id, student_name FROM ( SELECT student_id, exam_ct, COUNT(*) OVER(PARTITION BY student_id) AS quiet_ct FROM ( SELECT exam_id, student_id, score, MAX(score) OVER(PARTITION BY exam_id) AS max_score, MIN(score) OVER(PARTITION BY exam_id) AS min_score, COUNT(exam_id) OVER(PARTITION BY student_id) AS exam_ct FROM exam ) AS max_min_scores WHERE score < max_score AND score > min_score ) AS quiet JOIN student ON student.student_id = quiet.student_id WHERE exam_ct = quiet_ct
SELECT DISTINCT(S.student_id), S.student_name FROM Student AS S JOIN Exam AS E ON S.student_id = E.student_id WHERE S.student_id NOT IN (SELECT E1.student_id FROM Exam AS E1 WHERE E1.score = (SELECT MAX(E11.score) FROM Exam AS E11 WHERE E11.exam_id = E1.exam_id)) AND S.student_id NOT IN (SELECT E2.student_id FROM Exam AS E2 WHERE E2.score = (SELECT MIN(E21.score) FROM Exam AS E21 WHERE E21.exam_id = E2.exam_id)) ORDER BY S.student_id
SELECT STUDENT_ID, STUDENT_NAME FROM STUDENT WHERE STUDENT_ID NOT IN( SELECT STUDENT_ID FROM( SELECT STUDENT_ID ,RANK() OVER (PARTITION BY EXAM_ID ORDER BY SCORE) AS SCORE_RANK_1 ,RANK() OVER (PARTITION BY EXAM_ID ORDER BY SCORE DESC) AS SCORE_RANK_2 FROM EXAM )A WHERE SCORE_RANK_1 = 1 OR SCORE_RANK_2 = 1) AND STUDENT_ID IN (SELECT STUDENT_ID FROM EXAM)
SELECT a.student_id, a.student_name FROM Student a JOIN ( SELECT exam_id, student_id, score, first_value(score) OVER(PARTITION BY exam_id order by score desc) as max_score, first_value(score) OVER(PARTITION BY exam_id order by score asc) as min_score FROM Exam) b on a.student_id = b.student_id group BY 1,2 having sum(CASE WHEN b.score = max_score then 1 else 0 end)=0 and sum(CASE WHEN b.score = min_score then 1 else 0 end)=0
SELECT a.student_id, b.student_name FROM exam a join student b on a.student_id = b.student_id left join (SELECT exam_id, min(score) as min_score, max(score) as max_score from exam group by exam_id ) c on a.score>c.min_score and a.score<c.max_score and a.exam_id = c.exam_id group by a.student_id, b.student_name having count(distinct a.exam_id) = count(distinct c.exam_id) order by a.student_id
SELECT distinct s.student_id, s.student_name FROM Student s INNER JOIN Exam e ON s.Student_Id = e.student_Id WHERE s.student_id NOT IN (SELECT distinct student_id FROM (SELECT s.student_id, s.student_name, e.exam_Id, e.score , DENSE_RANK() OVER(Partition by e.exam_id Order by e.score desc) AS High_R, DENSE_RANK() OVER(Partition by e.exam_id Order by e.score) AS Low_R FROM Student s INNER JOIN Exam e ON s.Student_Id = e.student_Id)AS RES WHERE High_R = 1 OR Low_R = 1) Order by s.student_id
SELECT s.student_id ,s.student_name FROM (SELECT exam_id,student_id,score, FIRST_VALUE(score) OVER(PARTITION BY exam_id order by score ASC ) as min_score, FIRST_VALUE(score) OVER(PARTITION BY exam_id order by score DESC ) as max_score FROM Exam )t INNER JOIN Student s ON s.student_id=t.student_id GROUP BY 1 HAVING SUM(CASE WHEN t.score=min_score THEN 1 ELSE 0 END)=0 AND SUM(CASE WHEN t.score=max_score THEN 1 ELSE 0 END)=0 ORDER BY 1
SELECT s.student_id, s.student_name FROM Student s JOIN ( SELECT DISTINCT student_id FROM Exam WHERE student_id NOT IN ( SELECT DISTINCT a.student_id FROM ( SELECT exam_id, student_id, score, MIN(score) OVER(PARTITION BY exam_id) AS min_score, MAX(score) OVER(PARTITION BY exam_id) AS max_score FROM Exam ) a WHERE a.score = a.min_score OR a.score = a.max_score) ) b ON s.student_id = b.student_id
SELECT s.student_id, s.student_name FROM Student s JOIN ( SELECT DISTINCT student_id FROM Exam WHERE student_id NOT IN ( SELECT DISTINCT a.student_id FROM ( SELECT exam_id, student_id, score, MIN(score) OVER(PARTITION BY exam_id) AS min_score, MAX(score) OVER(PARTITION BY exam_id) AS max_score FROM Exam ) a WHERE a.score = a.min_score OR a.score = a.max_score) ) b ON s.student_id = b.student_id ORDER BY s.student_id
SELECT s.student_id, s.student_name FROM student AS s WHERE s.student_id NOT IN ( SELECT student_id FROM Exam e0 JOIN (select exam_id , min(score) as min_score, max(score) as max_score from exam group by exam_id ) AS exam_highlow_scores ON e0.exam_id = exam_highlow_scores.exam_id AND (score = min_score OR score = max_score) ) AND student_id IN ( SELECT student_id FROM Exam )
SELECT s.student_id, s.student_name FROM student s JOIN( SELECT DISTINCT student_id FROM Exam WHERE student_id NOT IN (SELECT DISTINCT a.student_id FROM (SELECT exam_id, student_id, score, MIN(score) OVER(PARTITION BY exam_id) AS min_rank, MAX(score) OVER(PARTITION BY exam_id) AS max_rank FROM Exam) a WHERE a.score = min_rank OR a.score = max_rank)) b ON s.student_id = b.student_id ORDER BY s.student_id
SELECT s.student_id,s.student_name FROM Student s JOIN ( SELECT A.student_id FROM ( SELECT student_id FROM Exam WHERE (exam_id,score) NOT IN ( SELECT exam_id, MIN(score) AS mscore FROM Exam GROUP BY 1 UNION ALL SELECT exam_id, MAX(score) AS mscore FROM Exam GROUP BY 1 ) GROUP BY 1 ) A LEFT JOIN ( SELECT student_id FROM Exam WHERE (exam_id,score) IN ( SELECT exam_id, MIN(score) AS mscore FROM Exam GROUP BY 1 UNION ALL SELECT exam_id, MAX(score) AS mscore FROM Exam GROUP BY 1 ) GROUP BY 1 ) B ON A.student_id = B.student_id WHERE B.student_id IS NULL GROUP BY 1 ) final ON s.student_id = final.student_id
SELECT student_id, student_name FROM Student WHERE student_id IN (SELECT DISTINCT student_id FROM Exam) AND student_id NOT IN ( SELECT student_id FROM Exam e1 WHERE score = (SELECT max(score) FROM Exam e2 WHERE e1.exam_id = e2.exam_id) OR score = (SELECT min(score) FROM Exam e2 WHERE e1.exam_id = e2.exam_id) )
SELECT student_id, student_name FROM Student WHERE student_id IN (SELECT DISTINCT student_id FROM Exam) AND student_id NOT IN (SELECT student_id FROM Exam as e1 WHERE score = (SELECT MAX(score) FROM Exam as e2 WHERE e1.exam_id = e2.exam_id) OR score = (SELECT MIN(score) FROM Exam as e2 WHERE e1.exam_id = e2.exam_id))
SELECT student_id, student_name FROM Student WHERE student_id IN (SELECT DISTINCT student_id FROM Exam) AND student_id NOT IN (SELECT student_id FROM Exam as e1 WHERE score = (SELECT MAX(score) FROM Exam as e2 WHERE e1.exam_id = e2.exam_id) OR score = (SELECT MIN(score) FROM Exam e2 WHERE e1.exam_id = e2.exam_id))
SELECT student_id, student_name FROM Student WHERE student_id IN (SELECT student_id FROM Exam) AND student_id NOT IN (SELECT student_id FROM Exam WHERE (exam_id, score) IN (SELECT exam_id, MAX(score) FROM Exam GROUP BY exam_id UNION ALL SELECT exam_id, MIN(score) FROM Exam GROUP BY exam_id))
SELECT student_id, student_name FROM Student WHERE student_id NOT IN ( SELECT DISTINCT student_id FROM Exam WHERE (exam_id, score) IN ( SELECT exam_id, MIN(score) FROM Exam GROUP BY exam_id ) OR (exam_id, score) IN ( SELECT exam_id, MAX(score) FROM Exam GROUP BY exam_id ) UNION SELECT student_id FROM Exam RIGHT JOIN Student USING(student_id) GROUP BY student_id HAVING SUM(score) IS NULL ) ORDER BY student_id
Select Student.student_id, Student.student_name from Student left join ( Select Distinct Exam.student_id as student_id from Exam join ( Select exam_id, max(score) as max_score, min(score) as min_score from Exam group by exam_id ) g_t on Exam.exam_id = g_t.exam_id and (Exam.score = g_t.max_score or Exam.score = g_t.min_score) ) e2 on Student.student_id = e2.student_id where e2.student_id is null and Student.student_id in (Select Distinct(student_id) from Exam)
Select e.student_id, s.student_name from Exam e inner join student s ON e.student_id = s.student_id inner join (Select max(score) as high, min(score) as low, exam_id from Exam group by exam_id) r on e.exam_id = r.exam_id group by e.student_id, s.student_name having sum(e.score = r.high) = 0 and sum(e.score = r.low)= 0 order by e.student_id
WITH A AS (SELECT student_id, RANK() OVER (PARTITION BY exam_id ORDER BY score) as lowest, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) as highest FROM Exam) SELECT * FROM Student WHERE student_id NOT IN (SELECT student_id FROM A WHERE lowest = 1 OR highest = 1) AND student_id IN (SELECT DISTINCT student_id FROM Exam)
WITH B AS (SELECT DISTINCT student_id FROM Exam INNER JOIN (SELECT MAX(score) as max_score, MIN(score) as min_score, exam_id FROM Exam GROUP BY exam_id) A ON Exam.exam_id = A.exam_id AND (Exam.score = max_score OR Exam.score = min_score) ) Select * FROM Student WHERE student_id NOT IN (SELECT student_id FROM B) AND student_id IN (SELECT DISTINCT student_id FROM Exam) ORDER BY student_id
WITH BestAndWorstStudents AS ( SELECT DISTINCT student_id FROM Exam E, (SELECT exam_id, MAX(score) max, MIN(score) min FROM Exam GROUP BY exam_id) M WHERE E.exam_id=M.exam_id AND (M.max=E.score OR M.min=E.score) ) SELECT student_id "STUDENT_ID", student_name "STUDENT_NAME" FROM Student S WHERE student_id in (SELECT distinct student_id FROM Exam) AND student_id NOT IN (SELECT * from BestAndWorstStudents)
WITH BestAndWorstStudents AS ( select distinct student_id from Exam as e,(select max(score) as score, exam_id from Exam group by exam_id) as k, (select min(score) as score, exam_id from Exam group by exam_id) as k2 where (e.exam_id=k.exam_id and e.score=k.score) or (e.exam_id=k2.exam_id and e.score=k2.score) ) SELECT student_id "STUDENT_ID", student_name "STUDENT_NAME" FROM Student S WHERE EXISTS(SELECT student_id FROM Exam WHERE S.student_id=student_id) AND student_id NOT IN (SELECT * from BestAndWorstStudents)
WITH BestAndWorstStudents AS ( select distinct student_id from Exam as e,(select max(score) as score, exam_id from Exam group by exam_id) as k, (select min(score) as score, exam_id from Exam group by exam_id) as k2 where (e.exam_id=k.exam_id and e.score=k.score) or (e.exam_id=k2.exam_id and e.score=k2.score) ) SELECT student_id "STUDENT_ID", student_name "STUDENT_NAME" FROM Student S WHERE student_id in (SELECT distinct student_id FROM Exam) AND student_id NOT IN (SELECT * from BestAndWorstStudents)
WITH CTE AS ( SELECT E.student_id, E.exam_id, S.student_name, score, RANK() OVER(PARTITION BY exam_id ORDER BY score) AS R1, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) AS R2 FROM Exam E LEFT JOIN Student S ON E.student_id = S.student_id) SELECT DISTINCT student_id, student_name FROM CTE WHERE student_id NOT IN (SELECT student_id FROM CTE WHERE R1 = 1 OR R2 = 1) ORDER BY student_id
WITH CTE AS ( SELECT EXAM_ID, E.STUDENT_ID, STUDENT_NAME, RANK() OVER (PARTITION BY EXAM_ID ORDER BY SCORE DESC) RN, RANK() OVER (PARTITION BY EXAM_ID ORDER BY SCORE ASC) RNR FROM EXAM E LEFT JOIN STUDENT S ON E.STUDENT_ID=S.STUDENT_ID), CTE1 AS ( SELECT STUDENT_ID, STUDENT_NAME, (CASE WHEN RN!=1 AND RNR!=1 THEN 1 ELSE 0 END) AS QUIET FROM CTE ) SELECT STUDENT_ID, MIN(STUDENT_NAME) AS STUDENT_NAME FROM CTE1 GROUP BY STUDENT_ID HAVING AVG(QUIET) = 1 ORDER BY 1
WITH CTE AS ( SELECT EXAM_ID, MAX(SCORE) MAX_SCORE, MIN(SCORE) MIN_SCORE FROM EXAM GROUP BY EXAM_ID ), CTE_2 AS ( SELECT E.EXAM_ID, E.STUDENT_ID, CASE WHEN E.SCORE > CTE.MIN_SCORE AND E.SCORE < CTE.MAX_SCORE THEN 'YES' ELSE 'NO' END AS INDICATOR FROM EXAM E INNER JOIN CTE ON E.EXAM_ID=CTE.EXAM_ID ) SELECT DISTINCT CTE_2.STUDENT_ID, S.STUDENT_NAME FROM CTE_2 INNER JOIN STUDENT S ON CTE_2.STUDENT_ID = S.STUDENT_ID WHERE CTE_2.STUDENT_ID NOT IN (SELECT STUDENT_ID FROM CTE_2 WHERE INDICATOR='NO') ORDER BY 1
WITH CTE AS ( SELECT distinct student_id FROM Exam WHERE (exam_id, score) in ( SELECT exam_id, MAX(score) as score FROM Exam GROUP BY exam_id UNION SELECT exam_id, MIN(score) as score FROM Exam GROUP BY exam_id ) ) SELECT distinct Exam.student_id, student_name FROM Exam JOIN Student ON Exam.student_id = Student.student_id WHERE Exam.student_id not in (SELECT student_id FROM CTE) ORDER BY Exam.student_id
WITH CTE AS ( SELECT e.student_id, s.student_name , e.exam_id , dense_rank() OVER (partition by EXAM_id order by score) as Minimum , dense_rank() OVER (partition by EXAM_id order by score DESC) as Maximum FROM exam e JOIN student s on s.student_id = e.student_id) SELECT distinct student_id,student_name FROM CTE WHERE student_id NOT IN (SELECT Student_id FROM CTE WHERE minimum =1 or maximum =1) Order By student_id
WITH CTE AS ( SELECT student_id, DENSE_RANK() OVER(PARTITION BY exam_id ORDER BY score ASC) AS RK1, DENSE_RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) AS RK2 FROM Exam ) SELECT DISTINCT Student.student_id,student_name FROM CTE INNER JOIN Student ON CTE.student_id = Student.student_id WHERE Student.student_id NOT IN (SELECT student_id FROM CTE WHERE RK1 = 1 OR RK2 = 1) ORDER BY 1 ASC
WITH CTE AS ( select e.exam_id, e.student_id, e.score, max(e.score) over (partition by e.exam_id) as 'maxscore', min(e.score) over (partition by e.exam_id) as 'minscore' from Exam e ) select s.student_id, s.student_name from Student s left join ( select cte.student_id from CTE where cte.score = cte.minscore OR cte.score = cte.maxscore group by cte.student_id order by cte.student_id ) t on s.student_id = t.student_id left join ( select student_id, count(*) as 'countstudent' from Exam group by student_id ) c on s.student_id = c.student_id where t.student_id IS NULL and c.countstudent >= 1
WITH CTE AS (SELECT student_id, exam_id, score, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) as "high_score", RANK() OVER(PARTITION BY exam_id ORDER BY score ASC) as "low_score" FROM Exam) SELECT DISTINCT s.student_id, s.student_name FROM Student s INNER JOIN Exam b ON s.student_id = b.student_id WHERE s.student_id NOT IN (SELECT student_id FROM CTE WHERE high_score=1 OR low_score=1) ORDER BY s.student_id
WITH ExamHighLow AS ( SELECT exam_id, max(score) AS high, min(score) AS low FROM Exam GROUP BY exam_id ) SELECT s.student_id, s.student_name FROM ( SELECT t.student_id AS QuietStudents FROM( SELECT e1.student_id, NOT (e1.score<e2.high AND e1.score>e2.low) AS middle FROM Exam e1 JOIN ExamHighLow e2 ON e1.exam_id=e2.exam_id ) t GROUP BY t.student_id HAVING SUM(middle)=0 ) q JOIN Student s ON q.QuietStudents=s.student_id ORDER BY s.student_id ASC
WITH Exam_scores AS ( SELECT exam_id, MAX(score) AS max_score, MIN(score) AS min_score FROM Exam GROUP BY exam_id) SELECT s.student_id, s.student_name FROM Student s JOIN Exam e ON s.student_id = e.student_id JOIN Exam_scores es ON e.exam_id = es.exam_id GROUP BY s.student_id, s.student_name HAVING SUM(IF(e.score= es.max_score OR e.score=es.min_score,1,0)) = 0 ORDER BY s.student_id
WITH H AS ( SELECT student_id FROM Exam WHERE (exam_id, score) IN (SELECT exam_id, MAX(score) FROM Exam GROUP BY exam_id) ), L AS ( SELECT student_id FROM Exam WHERE (exam_id, score) IN (SELECT exam_id, MIN(score) FROM Exam GROUP BY exam_id) ), HL AS ( SELECT * FROM H UNION SELECT * FROM L ) SELECT student_id, student_name FROM Student WHERE student_id NOT IN (SELECT * FROM HL) and student_id IN (SELECT DISTINCT student_id FROM Exam) ORDER BY student_id
WITH HighRankers AS (SELECT student_id ,RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) AS High FROM Exam), LowRankers AS (SELECT student_id ,RANK() OVER(PARTITION BY exam_id ORDER BY score ASC) AS Low FROM Exam), NonQuiteStuderns AS (SELECT student_id FROM HighRankers WHERE High = 1 UNION SELECT student_id FROM LowRankers WHERE Low = 1) SELECT student_id ,student_name FROM Student WHERE student_id NOT IN(SELECT student_id FROM NonQuiteStuderns) AND student_id IN (SELECT DISTINCT student_id FROM Exam) ORDER BY 1
WITH M AS (SELECT *, MIN(SCORE) OVER(PARTITION BY EXAM_ID) AS LOWEST, MAX(SCORE) OVER(PARTITION BY EXAM_ID) AS HIGHEST FROM EXAM) SELECT DISTINCT S.STUDENT_ID, S.STUDENT_NAME FROM STUDENT S JOIN EXAM E ON S.STUDENT_ID = E.STUDENT_ID WHERE S.STUDENT_ID NOT IN (SELECT M.STUDENT_ID FROM M WHERE M.SCORE = LOWEST OR M.SCORE = HIGHEST) ORDER BY S.STUDENT_ID
WITH RECURSIVE my_cte AS (select exam_id, student.student_id, student_name, score, dense_rank() over(partition by exam_id order by score) as rnk_asc, dense_rank() over(partition by exam_id order by score desc) as rnk_desc from exam right join student on student.student_id = exam.student_id) select distinct student_id, student_name from my_cte where student_id not in ( select student_id from my_cte where rnk_asc =1 or rnk_desc=1 ) order by student_id
WITH RECURSIVE my_cte AS (select exam_id, student.student_id, student_name, score, dense_rank() over(partition by exam_id order by score) as rnk_asc, dense_rank() over(partition by exam_id order by score desc) as rnk_desc from exam right join student on student.student_id = exam.student_id) select distinct student_id, student_name from my_cte where student_id not in ( select student_id from my_cte where rnk_asc =1 or rnk_desc=1) order by student_id
WITH S0 AS (SELECT exam_id, MAX(score) AS high_score, MIN(score) AS low_score FROM Exam GROUP BY exam_id), S1 AS (SELECT Exam.exam_id, student_id, score, high_score, low_score FROM S0 INNER JOIN Exam ON S0.exam_id = Exam.exam_id), S2 AS (SELECT DISTINCT(student_id) AS student_id FROM S1 WHERE score = high_score OR score = low_score UNION SELECT student_id FROM Student WHERE student_id NOT IN (SELECT DISTINCT(student_id) FROM Exam)) SELECT Student.student_id, student_name FROM Student WHERE Student.student_id NOT IN (SELECT student_id FROM S2)
WITH ScoreExtremes AS ( SELECT exam_id, MAX(score) AS max_score, MIN(score) AS min_score FROM Exam GROUP BY exam_id ), ExtremeScorers AS ( SELECT DISTINCT student_id FROM Exam JOIN ScoreExtremes ON Exam.exam_id = ScoreExtremes.exam_id AND ( Exam.score = ScoreExtremes.max_score OR Exam.score = ScoreExtremes.min_score ) ) SELECT Student.student_id, Student.student_name FROM Student WHERE student_id IN ( SELECT DISTINCT student_id FROM Exam) AND student_id NOT IN ( SELECT DISTINCT student_id FROM ExtremeScorers )
WITH Score_max_min AS ( SELECT exam_id, MAX(score) AS max_score, MIN(score) AS min_score FROM Exam GROUP BY 1), min_max_student AS ( SELECT DISTINCT e.student_id FROM Exam e JOIN Score_max_min smm ON smm.exam_id = e.exam_id WHERE e.score = smm.max_score OR e.score = smm.min_score), no_student AS ( SELECT s.student_id FROM Student s LEFT JOIN Exam e ON s.student_id = e.student_id WHERE e.student_id IS NULL) SELECT * FROM Student WHERE student_id NOT IN (SELECT student_id FROM min_max_student) AND student_id NOT IN (SELECT student_id FROM no_student)
WITH TEMP AS (SELECT S.STUDENT_ID STUDENT_ID, S.STUDENT_NAME STUDENT_NAME, CASE WHEN E.SCORE > MIN(E.SCORE) OVER (PARTITION BY E.EXAM_ID) AND E.SCORE < MAX(E.SCORE) OVER (PARTITION BY E.EXAM_ID) THEN 0 ELSE 1 END AS SCORE FROM STUDENT S, EXAM E WHERE S.STUDENT_ID = E.STUDENT_ID) SELECT STUDENT_ID, STUDENT_NAME FROM TEMP GROUP BY STUDENT_ID, STUDENT_NAME HAVING SUM(SCORE)=0 ORDER BY 1
WITH a AS ( SELECT student_id, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score) as rk1, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) as rk2 FROM Exam), b AS ( SELECT student_id, COUNT(*) as attend, SUM(CASE WHEN rk1 = 1 OR rk2 = 1 THEN 0 ELSE 1 END) as quiet_score FROM a GROUP BY student_id ), c AS ( SELECT Student.student_id, Student.student_name, b.quiet_score, b.attend FROM Student JOIN b ON b.student_id = Student.student_id) SELECT student_id, student_name FROM c WHERE quiet_score = attend ORDER BY student_id
WITH attend_exam AS ( SELECT DISTINCT s.student_id ,s.student_name FROM Student s JOIN Exam e ON s.student_id = e.student_id ), not_quite_student AS ( SELECT DISTINCT student_id FROM ( SELECT exam_id ,student_id ,score ,DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score ASC) AS asc_rank ,DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score DESC ) AS desc_rank FROM EXAM ) AS rank_score WHERE asc_rank = 1 OR desc_rank = 1 ) SELECT a.student_id , a.student_name FROM attend_exam a LEFT JOIN not_quite_student aqs ON a.student_id = aqs.student_id WHERE aqs.student_id IS NULL ORDER BY 1
WITH cte AS ( SELECT e.*, student_name, RANK() OVER(PARTITION BY exam_id ORDER BY score) AS RN_ASC, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) AS RN_DESC FROM exam e LEFT JOIN student s ON e.student_id = s.student_id) SELECT DISTINCT student_id, student_name FROM cte WHERE student_id NOT IN (select student_id FROM cte where rn_asc = 1 OR rn_desc = 1) ORDER BY student_id
WITH cte AS ( SELECT e.student_id, RANK() OVER(PARTITION BY e.exam_id ORDER BY e.score DESC) AS high, RANK() OVER(PARTITION BY e.exam_id ORDER BY e.score) AS low FROM Exam AS e ) SELECT DISTINCT (s.student_id), s.student_name FROM Exam AS e JOIN Student AS s ON e.student_id = s.student_id WHERE e.student_id NOT IN (SELECT cte.student_id FROM cte WHERE high = 1 OR low =1) ORDER BY e.student_id
WITH cte AS ( SELECT exam_id, MAX(score) AS max_score, MIN(score) AS min_score FROM Exam GROUP BY exam_id ), cte1 AS ( SELECT DISTINCT student_id FROM Exam e JOIN cte WHERE e.exam_id = cte.exam_id AND (score = min_score OR score = max_score) ) SELECT DISTINCT e.student_id, student_name FROM Exam e JOIN Student s ON e.student_id = s.student_id WHERE e.student_id NOT IN (SELECT student_id FROM cte1) ORDER BY e.student_id
WITH cte AS ( SELECT exam_id, student_id, RANK() OVER(partition by exam_id order by score DESC) AS "high_score", RANK() OVER(partition by exam_id order by score) AS "low_score" FROM Exam ) SELECT DISTINCT e.student_id, s.student_name FROM Exam e LEFT JOIN Student s ON s.student_id = e.student_id WHERE e.student_id NOT IN (SELECT student_id FROM cte WHERE high_score = 1 OR low_score = 1) order by 1 asc
WITH cte AS (SELECT *, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC ) AS rk1, RANK() OVER (PARTITION BY exam_id ORDER BY score ) AS rk2 FROM Exam ) SELECT DISTINCT e.student_id, s.student_name FROM Exam e LEFT JOIN Student s ON s.student_id = e.student_id WHERE e.student_id NOT IN (SELECT student_id FROM cte WHERE rk1 = 1 OR rk2 = 1) ORDER BY e.student_id
WITH cte AS (SELECT exam_id, student_id, RANK() OVER(PARTITION BY exam_id ORDER BY score) rk_from_top, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) rk_from_bottom FROM exam) SELECT DISTINCT c.student_id, s.student_name FROM cte c LEFT JOIN Student s ON s.student_id = c.student_id WHERE c.student_id NOT IN (SELECT DISTINCT student_id FROM cte WHERE rk_from_top = 1 OR rk_from_bottom = 1) ORDER BY 1
WITH cte AS( SELECT exam_id , exam.student_id, student_name , score , RANK() OVER(PARTITION BY exam_id ORDER BY score) rk1 , RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) rk2 FROM exam LEFT JOIN student ON exam.student_id = student.student_id ) SELECT DISTINCT student_id, student_name FROM cte WHERE student_id NOT IN (SELECT student_id FROM cte WHERE rk1 = 1 or rk2 = 1) ORDER BY student_id
WITH cte AS( SELECT exam_id, e.student_id, student_name,score, RANK() OVER(PARTITION BY exam_id ORDER BY score) rk1, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) rk2 FROM Exam e LEFT JOIN Student s ON e.student_id = s.student_id ) SELECT DISTINCT student_id, student_name FROM cte WHERE student_id NOT IN(SELECT student_id FROM cte WHERE rk1 = 1 or rk2 = 1 ) ORDER BY student_id
WITH cte AS( SELECT exam_id, exam.student_id, student_name, score, RANK() OVER(PARTITION BY exam_id ORDER BY score) low, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) high FROM exam JOIN student ON exam.student_id = student.student_id ) SELECT DISTINCT student_id, student_name FROM cte WHERE student_id NOT IN (SELECT student_id FROM cte WHERE low = 1 or high = 1) ORDER BY student_id
WITH cte AS( SELECT exam_id, exam.student_id, student_name, score, RANK() OVER(PARTITION BY exam_id ORDER BY score) rank_asc, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) rank_desc FROM exam LEFT JOIN student ON exam.student_id = student.student_id ) SELECT DISTINCT student_id, student_name FROM cte WHERE student_id NOT IN ( SELECT student_id FROM cte WHERE rank_asc = 1 or rank_desc = 1 ) ORDER BY student_id
WITH cte AS( SELECT exam_id, exam.student_id, student_name, score, RANK() OVER(PARTITION BY exam_id ORDER BY score) rk1, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) rk2 FROM exam LEFT JOIN student ON exam.student_id = student.student_id ) SELECT DISTINCT student_id, student_name FROM cte WHERE student_id NOT IN (SELECT student_id FROM cte WHERE rk1 = 1 or rk2 = 1) ORDER BY student_id
WITH cte AS( SELECT exam_id, student_id, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) as score_desc, RANK() OVER(PARTITION BY exam_id ORDER BY score ASC) as score_asc FROM exam ) SELECT student.student_id, student.student_name FROM student LEFT JOIN exam ON student.student_id = exam.student_id WHERE exam.student_id NOT IN( SELECT student_id FROM cte WHERE score_desc = 1 OR score_asc = 1 ) GROUP BY student.student_id
WITH cte AS( SELECT exam_id, student_id, score, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) as score_desc, RANK() OVER(PARTITION BY exam_id ORDER BY score ASC) as score_asc FROM exam ) SELECT exam.student_id, student.student_name FROM exam LEFT JOIN student ON student.student_id = exam.student_id WHERE exam.student_id NOT IN( SELECT student_id FROM cte WHERE score_desc = 1 OR score_asc = 1 ) GROUP BY exam.student_id ORDER BY exam.student_id
WITH edges AS ( SELECT exam_id, MAX(score) as highest, MIN(score) as lowest FROM exam GROUP BY exam_id), quiet AS ( SELECT student_id FROM exam as e INNER JOIN edges as ed ON ed.exam_id = e.exam_id WHERE (e.score = lowest OR e.score = highest) GROUP BY student_id ) SELECT s.student_id, s.student_name FROM student as s INNER JOIN exam as e ON e.student_id = s.student_id LEFT JOIN quiet as q ON q.student_id = s.student_id WHERE q.student_id IS NULL GROUP BY s.student_id, s.student_name ORDER BY s.student_id
WITH eminmax as ( SELECT exam_id, min(SCORE) as minscore ,max(SCORE) as maxscore FROM exam GROUP BY exam_id), ids as ( SELECT student_id FROM exam JOIN eminmax ON exam.exam_id=eminmax.exam_id WHERE score= maxscore OR score = minscore), final as ( SELECT exam.student_id FROM exam LEFT JOIN ids ON exam.student_id=ids.student_id WHERE ids.student_id IS NULL GROUP BY exam.student_id) SELECT student.student_id,student.student_name FROM final join student ON final.student_id=student.student_id
WITH exam_min_max_scores AS ( SELECT exam_id, MIN(score) AS min_score, MAX(score) AS max_score FROM Exam GROUP BY 1 ), non_quiet_students AS ( SELECT student_id, SUM(IF(score = min_score OR score = max_score, 1, 0)) AS not_quiet FROM Exam JOIN exam_min_max_scores scores ON scores.exam_id = Exam.exam_id GROUP BY 1 ) SELECT Student.* FROM non_quiet_students JOIN Student ON non_quiet_students.student_id = Student.student_id WHERE not_quiet = 0 ORDER BY Student.student_id
WITH exam_scores_denormalized AS ( SELECT exam_id, Student.student_id, student_name, score, MAX(score) OVER (PARTITION BY exam_id) as max_score, MIN(score) OVER (PARTITION BY exam_id) as min_score FROM Exam JOIN Student ON Exam.student_id = Student.student_id ), is_exam_result_loud AS ( SELECT exam_id, student_id, student_name, max_score = score OR min_score = score as is_loud FROM exam_scores_denormalized ) SELECT student_id, student_name FROM is_exam_result_loud GROUP BY student_id, student_name HAVING MAX(is_loud) = 0 ORDER by student_id
WITH extreme_scores AS ( SELECT exam_id, MAX(score) as max_score, MIN(score) as min_score FROM Exam GROUP BY exam_id), best_worst AS ( SELECT DISTINCT student_id FROM Exam e JOIN extreme_scores m ON e.exam_id = m.exam_id WHERE e.score = m.min_score OR e.score = m.max_score) SELECT DISTINCT e.student_id, s.student_name FROM Exam e JOIN Student s ON e.student_id = s.student_id WHERE e.student_id NOT IN (SELECT * FROM best_worst) ORDER BY e.student_id
WITH getRange AS ( SELECT exam_id, MIN(score) AS min_score, MAX(score) AS max_score FROM Exam GROUP BY 1 ), silentStudents AS ( SELECT student_id, COUNT(*) AS total_count FROM Exam e INNER JOIN getRange g ON e.exam_id = g.exam_id AND (e.score > g.min_score AND e.score < g.max_score) GROUP BY 1 ), studentCount AS ( SELECT student_id, COUNT(*) AS exam_count FROM Exam GROUP BY 1 ) SELECT DISTINCT Student.student_id, Student.student_name FROM silentStudents INNER JOIN studentCount ON silentStudents.student_id = studentCount.student_id AND total_count = exam_count INNER JOIN Student ON Student.student_id = silentStudents.student_id ORDER BY 1
WITH high_low as ( SELECT exam_id, student_id, score, min(score) OVER (PARTITION BY exam_id) as low, max(score) OVER (PARTITION BY exam_id) as high, COUNT(exam_id) OVER (PARTITION BY student_id) as n_exam FROM exam ), quiet as ( SELECT e.student_id, s.student_name, CASE WHEN e.score < e.high AND e.score > e.low THEN 1 ELSE 0 END as q, n_exam FROM high_low e JOIN student s ON e.student_id = s.student_id ) SELECT student_id, student_name FROM quiet GROUP BY student_id, student_name Having sum(q) = avg(n_exam)
WITH high_scorers AS ( select student_id from Exam e inner join (select exam_id, max(score) as high_score from Exam group by exam_id) ehs on e.exam_id = ehs.exam_id and e.score = ehs.high_score ), low_scorers AS ( select student_id from Exam e inner join (select exam_id, min(score) as high_score from Exam group by exam_id) ehs on e.exam_id = ehs.exam_id and e.score = ehs.high_score ) select s.student_id, s.student_name from Student s inner join Exam e on s.student_id = e.student_id where s.student_id not in (select * from high_scorers) and s.student_id not in (select * from low_scorers) group by s.student_id order by s.student_id
WITH high_students AS ( SELECT DISTINCT student_id FROM (SELECT *, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) as r FROM Exam) a WHERE r = 1 ), low_students AS ( SELECT DISTINCT student_id FROM (SELECT *, RANK() OVER(PARTITION BY exam_id ORDER BY score ASC) as r FROM Exam) a WHERE r = 1 ) SELECT s.student_id, s.student_name FROM Student s WHERE s.student_id IN (SELECT DISTINCT student_id FROM Exam) AND student_id NOT IN (SELECT * FROM high_students) AND student_id NOT IN (SELECT * FROM low_students)
WITH highest_lowest AS ( SELECT exam_id, MAX(score) mx_score, MIN(score) mn_score FROM Exam e GROUP BY exam_id ), quiet_students AS ( SELECT student_id, SUM(score = hl.mn_score or score = hl.mx_score) OVER (PARTITION BY student_id) sm FROM Exam e JOIN highest_lowest hl ON e.exam_id = hl.exam_id ), mx AS ( SELECT DISTINCT s.student_id, s.student_name FROM quiet_students q JOIN Student s ON s.student_id = q.student_id WHERE sm = 0 ORDER BY 1 ) SELECT * FROM mx
WITH main AS ( SELECT Student.*, RANK() OVER(PARTITION BY exam_id ORDER BY score) AS low, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) AS high FROM Student INNER JOIN Exam USING(student_id) ) SELECT student_id, student_name FROM main GROUP BY student_id HAVING MIN(low)<>1 AND MIN(high)<>1 ORDER BY student_id
WITH max_s AS ( SELECT exam_id, MAX(score) mx FROM Exam GROUP BY exam_id ) , min_s AS ( SELECT exam_id, MIN(score) mn FROM Exam GROUP BY exam_id ) , not_quiet AS ( SELECT DISTINCT e.student_id FROM Exam e LEFT JOIN max_s ON max_s.exam_id=e.exam_id AND max_s.mx=e.score LEFT JOIN min_s ON min_s.exam_id=e.exam_id AND min_s.mn=e.score WHERE max_s.mx IS NOT NULL OR min_s.mn IS NOT NULL ) SELECT DISTINCT e.student_id, student_name FROM Exam e LEFT JOIN not_quiet nq ON nq.student_id=e.student_id JOIN Student s ON s.student_id=e.student_id WHERE nq.student_id IS NULL ORDER BY e.student_id
WITH min_cte AS ( SELECT score, student_id, min(score) Over(Partition by exam_id) AS mini, max(score) Over(Partition by exam_id) AS maxi FROM exam ), min_max_cte AS ( (SELECT student_id, score FROM min_cte WHERE score = mini OR score = maxi) ) SELECT DISTINCT e.student_id, s.student_name FROM exam e JOIN student s ON s.student_id = e.student_id AND e.student_id NOT IN (SELECT student_id FROM min_max_cte) ORDER BY e.student_id
WITH min_max AS ( SELECT exam_id, MIN(score) as min_score, MAX(score) as max_score FROM exam GROUP BY 1 ), quiet_exams AS ( SELECT e.student_id, e.exam_id, CASE WHEN e.score > mm.min_score AND e.score < mm.max_score THEN 1 ELSE 0 END as quiet_exam FROM exam e INNER JOIN min_max mm ON mm.exam_id = e.exam_id) SELECT s.student_id, s.student_name FROM quiet_exams qe INNER JOIN student s ON s.student_id = qe.student_id GROUP BY 1 HAVING MIN(qe.quiet_exam) = 1 ORDER BY 1
WITH non_quite_students AS (SELECT DISTINCT exam.student_id AS student_id FROM exam INNER JOIN ( SELECT exam_id , min(score) as min_score , max(score) as max_score FROM exam GROUP BY exam_id) AS mm ON exam.exam_id = mm.exam_id AND (exam.score = max_score OR exam.score = min_score)) SELECT DISTINCT exam.student_id , student.student_name from exam LEFT JOIN student ON exam.student_id = student.student_id WHERE exam.student_id NOT IN (select student_id from non_quite_students) order by exam.student_id
WITH not_quiet AS (SELECT exam_id, student_id, rank() OVER (PARTITION BY exam_id ORDER BY SCORE DESC) as high_score, rank() OVER (PARTITION BY exam_id ORDER BY SCORE) as low_score FROM Exam ) SELECT distinct s.student_id, s.student_name FROM Student s INNER JOIN Exam e USING(student_id) WHERE s.student_id not in (select distinct student_id FROM not_quiet WHERE high_score=1 or low_score=1) ORDER BY s.student_id
WITH quiet_students AS ( SELECT student_id FROM ( SELECT exam_id, student_id, RANK() OVER (PARTITION BY exam_id ORDER BY score ASC) AS ra, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) AS rd FROM exam ) AS e1 WHERE student_id NOT IN ( SELECT student_id FROM ( SELECT exam_id, student_id, RANK() OVER (PARTITION BY exam_id ORDER BY score ASC) AS ra, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) AS rd FROM exam ) AS e2 WHERE ra =1 OR rd = 1 ) ) SELECT DISTINCT qs.student_id, student_name FROM quiet_students AS qs LEFT JOIN student ON qs.student_id = student.student_id ORDER BY student_id
WITH quite_scored AS ( SELECT exam_id, student_id,score,RANK() OVER(PARTITION BY exam_id ORDER BY score) quite_score FROM Exam), max_quite_scored AS ( SELECT exam_id, MAX(quite_score) AS max_qs FROM quite_scored GROUP BY exam_id), joined AS ( SELECT DISTINCT student_id FROM quite_scored qs LEFT JOIN max_quite_scored mqs ON qs.exam_id = mqs.exam_id WHERE quite_score =max_qs OR quite_score = 1) SELECT DISTINCT S.student_id,student_name FROM Exam E LEFT JOIN Student S ON E.student_id = S.student_id WHERE S.student_id NOT IN (SELECT student_id FROM joined) ORDER BY S.student_id
WITH ranking AS ( SELECT exam_id, student_id, RANK() OVER (PARTITION BY exam_id ORDER BY score) AS r1, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) AS r2 FROM Exam ) SELECT student_id, student_name FROM Student WHERE student_id NOT IN (SELECT student_id FROM ranking WHERE r1 = 1 OR r2 = 1) AND student_id IN (SELECT student_id FROM Exam)
WITH ranks AS ( SELECT exam_id, student_id, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) AS max_score, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score ASC) AS min_score FROM Exam ), ids AS ( SELECT DISTINCT student_id FROM ranks WHERE max_score = 1 OR min_score = 1 ) SELECT student_id, student_name FROM Student WHERE student_id NOT IN (SELECT * FROM ids) AND student_id IN (SELECT DISTINCT student_id FROM Exam )
WITH ranktable AS( SELECT exam_id, score, student.student_id, student.student_name, RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) AS last_, RANK() OVER (PARTITION BY exam_id ORDER BY score) AS first_ FROM exam LEFT JOIN student ON exam.student_id = student.student_id) SELECT DISTINCT student_id, student_name FROM ranktable WHERE student_id NOT IN (SELECT student_id FROM Ranktable WHERE last_ = 1 OR first_ = 1) ORDER BY student_id
WITH ref AS (SELECT e.student_id, student_name, e.exam_id, score, CASE WHEN score= (SELECT max(score) FROM Exam ex GROUP BY exam_id HAVING ex.exam_id=e.exam_id) OR score=(SELECT min(score) FROM Exam ex GROUP BY exam_id HAVING ex.exam_id=e.exam_id) THEN 1 ELSE 0 END AS not_quiet FROM Exam e LEFT JOIN Student USING (student_id) ORDER BY student_id ) SELECT student_id, student_name FROM ref GROUP BY student_id, student_name HAVING sum(not_quiet)=0 ORDER BY student_id
WITH score AS( SELECT exam_id, MAX(score) max_score, MIN(score) min_score FROM Exam GROUP BY exam_id ) SELECT DISTINCT(e2.student_id), st.student_name FROM Exam e2 JOIN Student st ON e2.student_id = st.student_id WHERE e2.student_id NOT IN ( SELECT DISTINCT(e1.student_id) FROM Exam e1 JOIN score s ON e1.exam_id = s.exam_id WHERE e1.score = s.max_score OR e1.score = s.min_score ) ORDER BY e2.student_id
WITH score_record AS ( SELECT exam_id, max(score) as highest_score, min(score) as lowest_score FROM Exam GROUP BY exam_id ), not_quiet AS (SELECT distinct s.student_id FROM Student s INNER JOIN Exam e USING(student_id) INNER JOIN score_record sr ON e.exam_id=sr.exam_id and e.score in (sr.highest_score,sr.lowest_score) WHERE sr.exam_id is not null ) SELECT distinct s.student_id, s.student_name FROM Student s INNER JOIN Exam e USING(student_id) WHERE s.student_id not in (select * from not_quiet) ORDER BY s.student_id
WITH student_ranking as ( SELECT s.student_id, student_name, rank() OVER (PARTITION BY exam_id ORDER BY SCORE) low, rank() OVER (PARTITION BY exam_id ORDER BY SCORE DESC) high FROM Exam e INNER JOIN Student s ON s.student_id = e.student_id ) SELECT student_id STUDENT_ID, student_name STUDENT_NAME FROM student_ranking GROUP BY 1,2 HAVING min(low) > 1 and min(high) > 1 ORDER BY 1
WITH t AS ( SELECT exam_id, student_id, RANK()OVER(PARTITION BY exam_id ORDER BY score) AS asc_score, RANK()OVER(PARTITION BY exam_id ORDER BY score DESC) AS desc_score FROM Exam ) SELECT DISTINCT t.student_id, student_name FROM t INNER JOIN Student s ON t.student_id=s.student_id WHERE t.student_id NOT IN (SELECT student_id FROM t WHERE asc_score =1 OR desc_score=1)
WITH t AS ( SELECT student_id, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score) r1, DENSE_RANK() OVER (PARTITION BY exam_id ORDER BY score DESC) r2 FROM exam), e AS ( SELECT student_id FROM t WHERE r1 = 1 OR r2 = 1) SELECT DISTINCT t.student_id, s.student_name FROM t JOIN student s ON t.student_id = s.student_id AND t.student_id NOT IN (SELECT * FROM e)
WITH t AS ( SELECT student_id, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) rk, RANK() OVER(PARTITION BY exam_id ORDER BY score ASC) rk1 FROM Exam) SELECT DISTINCT t.student_id,student_name FROM t JOIN Student ON t.student_id = Student.student_id WHERE t.student_id NOT IN (SELECT DISTINCT student_id FROM t WHERE rk=1 OR rk1=1)
WITH t1 AS ( SELECT student_id FROM ( SELECT student_id, score, MAX(score) OVER(PARTITION BY exam_id ORDER BY score DESC) max_score FROM Exam ) tmp WHERE score = max_score UNION SELECT student_id FROM ( SELECT student_id, score, MIN(score) OVER(PARTITION BY exam_id ORDER BY score) min_score FROM Exam ) tmp WHERE score = min_score ) SELECT DISTINCT e.student_id, s.student_name FROM Exam e JOIN Student s ON e.student_id = s.student_id WHERE e.student_id NOT IN (SELECT * FROM t1) ORDER BY e.student_id
WITH table1 AS( SELECT e.exam_id, e.student_id, student_name, score, DENSE_RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) AS rnk_desc, DENSE_RANK() OVER(PARTITION BY exam_id ORDER BY score ASC) AS rnk_asc FROM Exam e INNER JOIN Student s USING(student_id) ) SELECT DISTINCT student_id, student_name FROM table1 WHERE student_id NOT IN (SELECT student_id FROM table1 WHERE rnk_desc=1 OR rnk_asc=1) ORDER BY student_id ASC
WITH tallied AS ( WITH minmax AS ( SELECT exam_id, MIN(score) AS least, MAX(score) AS most FROM Exam GROUP BY exam_id ) SELECT e.student_id, s.student_name, SUM(CASE WHEN e.score = m.least THEN 1 ELSE 0 END) AS lows, SUM(CASE WHEN e.score = m.most THEN 1 ELSE 0 END) AS highs, SUM(CASE WHEN e.score != m.least AND e.score != m.most THEN 1 ELSE 0 END) AS neither FROM Exam e INNER JOIN Student s ON e.student_id = s.student_id INNER JOIN minmax m ON e.exam_id = m.exam_id GROUP BY student_id ) SELECT student_id, student_name FROM tallied WHERE lows = 0 AND highs = 0 AND neither > 0 ORDER BY student_id
WITH tempTable AS (SELECT *, DENSE_RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) AS HighestScore, DENSE_RANK() OVER(PARTITION BY exam_id ORDER BY score ) AS LowestScore FROM Exam ) SELECT DISTINCT tempTable.student_id, Student.student_name FROM tempTable LEFT JOIN Student ON tempTable.student_id = Student.student_id WHERE tempTable.student_id NOT IN (SELECT tempTable.student_id FROM tempTable WHERE HighestScore = 1 OR LowestScore = 1) ORDER BY tempTable.student_id
With CTE as ( select student_id, rank() over(partition by exam_id order by score Desc) as 'high', rank() over(partition by exam_id order by score ASC) as 'low' from Exam ) Select Distinct s.student_id, s.student_name from exam e left join Student s on e.student_id = s.student_id where e.student_id not in (select student_id from cte where high = 1 or low =1) order by s.student_id
With Exam_max as ( select exam_id, student_id, rank() over (partition by exam_id order by score desc ) as maxRanks from exam group by exam_id, student_id ), Exam_min as ( select exam_id, student_id, rank() over (partition by exam_id order by score) as minRanks from exam group by exam_id, student_id ), Student_Max_Min as ( select distinct(student_id) as student_id from Exam_max where maxRanks = 1 UNION select distinct(student_id) as student_id from Exam_min where minRanks = 1 ) select distinct e.student_id, s.student_name from Exam as e join student as s on e.student_id = s.student_id where e.student_id not in (select student_id from Student_Max_Min) order by e.student_id
With T1 As (Select exam_id, Max(score) as max_score, Min(score) as min_score From Exam Group By exam_id) Select * From Student Where student_id Not In (Select Distinct Exam.student_id From Exam Join T1 On Exam.exam_id = T1.exam_id Where Exam.score = T1.max_score Or Exam.score = T1.min_score) And student_id In (Select Distinct Exam.student_id From Exam)
With loud as ( Select exam_id, max(score) as high, min(score) as low From Exam Group by exam_id), quiet as ( Select a.* From Exam a Join loud b on a.exam_id = b.exam_id Where a.score <> b.high and a.score <> b.low), loud_list as ( Select a.student_id From Exam a Join loud b on a.exam_id = b.exam_id Where a.score = b.high or a.score = b.low) Select distinct a.student_id, b.student_name From quiet a Join Student b on a.student_id = b.student_id Where a.student_id not in (Select student_id from loud_list) Order by a.student_id
With rank_tab as ( SELECT DISTINCT student_id, exam_id, dense_rank() over (partition by exam_id order by score) "low_rank", dense_rank() over (partition by exam_id order by score desc) "high_rank" FROM exam ) SELECT DISTINCT s.student_id,s.student_name FROM rank_tab JOIN student s ON rank_tab.student_id = s.student_id where s.student_id not in ( select distinct student_id from rank_tab where low_rank = 1 or high_rank = 1) order by s.student_id
With rank_table as ( Select exam_id, student_id, Rank() OVER(PARTITION BY exam_id Order by score) as rank1, Rank() OVER(PARTITION BY exam_id Order by score Desc) as rank2 From Exam) Select distinct S.student_id , S.student_name From Student S Inner Join Exam E On S.student_id=E.student_id where S.student_id not in (Select student_id From rank_table where rank1=1 OR rank2=1) Order by S.student_id
With result as( select exam_id, exam.student_id, student_name, score, RANK() OVER(PARTITION BY exam_id ORDER BY score) rnk1, RANK() OVER(PARTITION BY exam_id ORDER BY score DESC) rnk2 from exam LEFT JOIN student on exam.student_id = student.student_id) select distinct student_id,student_name from result where student_id not in(select student_id from result where rnk1 = 1 or rnk2 = 1) ORDER BY student_id
With t1 AS ( SELECT exam_id, MAX(score) AS max_score, MIN(score) AS min_score FROM Exam Group BY exam_id ), not_quiet AS ( SELECT DISTINCT e.student_id AS student_id FROM Exam e INNER JOIN t1 ON e.exam_id = t1.exam_id WHERE e.score = max_score OR e.score = min_score ) SELECT DISTINCT student_id, student_name FROM Student WHERE student_id IN ( SELECT e.student_id FROM Exam e LEFT JOIN not_quiet nq ON e.student_id = nq.student_id WHERE nq.student_id IS NULL )
select * from Student where student_id in (select distinct student_id from Exam where student_id not in (select distinct e.student_id as non_quiet from Exam e left join (select exam_id, min(score) as low_score, max(score) as high_score from Exam group by exam_id)low_high on e.exam_id = low_high.exam_id where score = low_score or score = high_score))
select * from Student where student_id in (select distinct student_id from Exam) and student_id not in (select student_id from (select *, rank() over (partition by exam_id order by score desc) as high_rnk, rank() over (partition by exam_id order by score) as low_rnk from Exam ) t where high_rnk = 1 or low_rnk = 1)
select * from student where (student_id, 0) in (select student_id, sum(quietdegree) from (select e.student_id, case when score = max(score) over(partition by exam_id) then 1 else 0 end + case when score = min(score) over(partition by exam_id) then 1 else 0 end quietdegree from exam e) r group by student_id)
select * from student where (student_id,0) in (select student_id, sum(quiet_level) check_all from (select exam_id, student_id, score, case when score = max(score)over (partition by exam_id) then 1 else 0 end + case when score = min(score)over (partition by exam_id) then 1 else 0 end quiet_level from exam) c group by student_id having sum(quiet_level) = 0)
select * from student where student_id not in (select distinct e1.student_id from exam e1 where e1.score in (select max(score) from exam e2 where e1.exam_id = e2.exam_id )) and student_id not in (select distinct e1.student_id from exam e1 where e1.score in (select min(score) from exam e2 where e1.exam_id = e2.exam_id )) and student_id in (select distinct student_id from exam)
select DISTINCT(s.student_id) as student_id, s.student_name as student_name from student s INNER JOIN exam on s.student_id=exam.student_id INNER JOIN ( select MAX(score) as max_score, MIN(score) as min_score, exam_id as eid from exam group by exam_id ) my_tab on exam_id=eid where score < max_score and score > min_score Group by s.student_id Having count(s.student_id)= (select count(*) from exam e1 where e1.student_id = s.student_id) order by student_id
select a.student_id, b.student_name from Exam a inner join Student b using (student_id) left join (select exam_id, max(score) as max_score, min(score) as min_score from Exam group by exam_id) c on a.score > c.min_score and a.score < c.max_score and a.exam_id = c.exam_id group by a.student_id, b.student_name having count(distinct a.exam_id) = count(distinct c.exam_id) order by a.student_id
select b.student_id, student_name from student, (select student_id, sum(case when score < maxscore and score > minscore then 0 else 1 end) as quiet from Exam e join ( select exam_id, max(score) as maxscore, min(score) as minscore from Exam group by exam_id ) a on e.exam_id = a.exam_id group by student_id having quiet = 0) b where student.student_id = b.student_id
select distinct Exam.student_id, Student.student_name from Exam left join Student on Exam.student_id = Student.student_id where Exam.student_id not in ( select student_id from Exam left join ( select exam_id, max(score) as maximum, min(score) as minimum from Exam group by exam_id ) as t on Exam.exam_id = t.exam_id where Exam.score = t.maximum or Exam.score = t.minimum ) order by Exam.student_id
select distinct Exam.student_id, student_name from Exam left join Student on Exam.student_id = Student.student_id where Exam.student_id not in (select student_id from Exam as e left join ( select exam_id, min(score) as min_s, max(score) as max_s from Exam group by 1 ) as t on e.exam_id = t.exam_id where e.score = min_s or e.score = max_s) order by 1
select distinct Student.* from Student inner join Exam on Student.student_id = Exam.student_id where student.student_id not in (select e1.student_id from Exam as e1 inner join (select exam_id, min(score) as min_score, max(score) as max_score from Exam group by exam_id) as e2 on e1.exam_id = e2.exam_id where e1.score = e2.min_score or e1.score = e2.max_score) order by student_id
select distinct a.student_id, b.student_name from exam a inner join student b on a.student_id = b.student_id where a.student_id not in (select student_id from exam where (exam_id, score) in (select exam_id, max(score) filter from exam group by 1) union select student_id from exam where (exam_id, score) in (select exam_id, min(score) filter from exam group by 1)) order by 1
select distinct a.student_id,b.student_name from exam a inner join Student b on a.student_id = b.student_id where a.student_id not in ( select distinct student_id from exam a left join ( select exam_id, max(score) maxscore, min(score) minscore from Exam group by exam_id ) b on a.exam_id =b.exam_id where ( a.score = maxscore or a.score = minscore) ) order by 1
select distinct b.student_id, d.student_name from exam b left join student d on b.student_id=d.student_id where b.student_id not in (select a.student_id from (select student_id,score, max(score) over (partition by exam_id) as mx_scr from exam) a where a.score=a.mx_scr) and b.student_id not in (select c.student_id from (select student_id,score, min(score) over (partition by exam_id) as mx_scr from exam) c where c.score=c.mx_scr) order by 1
select distinct e.student_id, s.student_name from exam as e join student as s using (student_id) where student_id not in( select student_id from exam where (exam_id, score) in ( select exam_id, min(score) from exam group by exam_id union all select exam_id, max(score) from exam group by exam_id ) ) order by e.student_id
select distinct e.student_id, s.student_name from exam e inner join student s on e.student_id=s.student_id where e.student_id not in (select a.student_id from Exam a inner join (select exam_id,max(score) as max_score from Exam group by exam_id) b on a.exam_id=b.exam_id and a.score=b.max_score union select a.student_id from Exam a inner join (select exam_id,min(score) as min_score from Exam group by exam_id) b on a.exam_id=b.exam_id and a.score=b.min_score) order by 1
select distinct e.student_id, s.student_name from exam e inner join student s on e.student_id=s.student_id where e.student_id not in (select distinct a.student_id from Exam a inner join (select exam_id,max(score) as max_score from Exam group by exam_id) b on a.exam_id=b.exam_id and a.score=b.max_score union select distinct a.student_id from Exam a inner join (select exam_id,min(score) as min_score from Exam group by exam_id) b on a.exam_id=b.exam_id and a.score=b.min_score) order by 1
select distinct e.student_id, s.student_name from exam e left join student s on e.student_id = s.student_id where e.student_id not in ( select distinct student_id from (select *, max(score) over(partition by exam_id) as maxx, min(score) over(partition by exam_id) as minn from exam) a where score = maxx or score = minn) order by e.student_id
select distinct e.student_id, student_name from Exam e left join Student s on e.student_id = s.student_id where e.student_id not in ( select distinct student_id from exam where (exam_id, score) in( select exam_id, max(score) as score from exam group by 1 union (select exam_id, min(score) as score from exam group by 1) ) ) order by 1
select distinct e.student_id, student_name from exam e, student s where e.student_id not in ( select distinct a.student_id from ( select exam.student_id, score, max(score) over (partition by exam_id) as maxs, min(score) over (partition by exam_id) as mins from exam ) as a where a.score = maxs or a.score = mins ) and e.student_id = s.student_id order by e.student_id ASC
select distinct e.student_id,student_name from exam e left join student s using(student_id) where e.student_id not in ( select distinct e.student_id from exam e left join student s using(student_id) where (exam_id,score) in ( select exam_id,max(score) from exam group by exam_id ) or (exam_id,score) in ( select exam_id,min(score) from exam group by exam_id ) ) order by e.student_id
select distinct s.student_id , student_name from Student s join Exam e on s.student_id = e.student_id and s.student_id not in ( select distinct student_id from ( select student_id , rank() over (partition by exam_id order by score desc ) as rank_num from Exam group by exam_id , student_id union all select student_id , rank() over (partition by exam_id order by score ) as rank_num from Exam group by exam_id , student_id ) a where rank_num = 1 ) order by s.student_id
select distinct s.student_id, s.student_name from Student s join Exam e on s.student_id = e.student_id where s.student_id not in ( select s1.student_id from Exam s1 join ( select exam_id, max(score) max_score, min(score) min_score from Exam group by exam_id ) b on s1.exam_id = b.exam_id where s1.score = b.max_score or s1.score = b.min_score) order by s.student_id
select distinct s.student_id, s.student_name from student s join exam e on s.student_id = e.student_id where s.student_id not in (Select student_id FROM Exam where (exam_id,score) in (SELECT exam_id, max(score) as highest FROM Exam Group by exam_id) or (exam_id,score) in (SELECT exam_id, min(score) as lowest FROM Exam Group by exam_id) ) order by student_id
select distinct s.student_id, s.student_name from student s, exam e, (select exam_id, max(score) highest, min(score) lowest from exam group by exam_id) t where s.student_id = e.student_id and e.exam_id = t.exam_id group by s.student_id, s.student_name having sum(case when e.score = t.highest then 1 else 0 end) = 0 and sum(case when e.score = t.lowest then 1 else 0 end) = 0 order by s.student_id
select distinct s.student_id,s.student_name from (select distinct student_id from Exam where student_id not in (select distinct student_id from (select student_id,score,min(score) over(partition by exam_id) as min_score,max(score) over(partition by exam_id) as max_score from Exam) temp1 where temp1.score=min_score or temp1.score=max_score ) ) temp2 join student s on temp2.student_id=s.student_id
select distinct s.student_id,s.student_name from (select distinct student_id from Exam where student_id not in (select distinct student_id from (select student_id,score,min(score) over(partition by exam_id) as min_score,max(score) over(partition by exam_id) as max_score from Exam) temp1 where temp1.score=temp1.min_score or temp1.score=temp1.max_score ) ) temp2 join student s on temp2.student_id=s.student_id
select distinct student_id, student_name from ( select e.student_id, student_name, dense_rank() over (partition by exam_id order by score) as r1, dense_rank() over (partition by exam_id order by score desc) as r2 from exam e left join student s on e.student_id = s.student_id ) a where student_id not in ( select student_id from ( select e.student_id, student_name, dense_rank() over (partition by exam_id order by score) as r1, dense_rank() over (partition by exam_id order by score desc) as r2 from exam e left join student s on e.student_id = s.student_id ) b where r1 = 1 or r2 = 1 ) order by student_id
select distinct student_id, student_name from Student where student_id not in (select student_id from Exam as e join (select exam_id, max(score) as highest, min(score) as lowest from Exam group by exam_id) as t on e.exam_id = t.exam_id where e.score = t.highest or e.score = t.lowest) and student_id in (select student_id from Exam)
select distinct t1.student_id, t1.student_name from student as t1, (select distinct a.student_id, min(case when a.s_max !=b.ex_max and a.s_min != b.ex_min then 1 else 0 end) as q from (select student_id, max(score) as s_max, min(score) as s_min, exam_id from exam group by student_id ,exam_id having count(distinct exam_id) >= 1) as a left join (select exam_id, max(score) as ex_max, min(score) as ex_min from exam group by exam_id) as b on a.exam_id = b.exam_id group by a.student_id having q =1 ) as t2 where t1.student_id = t2.student_id
select e.student_id, s.student_name from Exam e inner join student s ON e.student_id = s.student_id inner join ( select max(score) as high, min(score) as low, exam_id from Exam group by exam_id ) r on e.exam_id = r.exam_id group by e.student_id, s.student_name having sum(e.score = r.high) = 0 and sum(e.score = r.low)= 0 order by e.student_id
select e.student_id, s.student_name from exam e join student s using(student_id) join ( select exam_id, min(score) min_score, max(score) max_score from exam group by exam_id ) tmp on e.exam_id = tmp.exam_id group by e.student_id having sum(case when e.score = tmp.max_score then 1 else 0 end) = 0 and sum(case when e.score = tmp.min_score then 1 else 0 end) = 0 order by 1
select s.* from student s where student_id not in ( select distinct b.student_id from exam b, ( select exam_id, max(score) as max_score, min(score) as min_score from exam a group by a.exam_id ) c where c.exam_id = b.exam_id and (b.score = min_score or b.score = max_score) ) and student_id in ( select distinct student_id from exam)
select s.student_id, s.student_name from ( select student_id, (score = max(score) over(partition by exam_id)) + (score = min(score) over(partition by exam_id)) as quiet from Exam ) e join Student s on e.student_id = s.student_id group by s.student_id, s.student_name having sum(quiet) = 0
select s.student_id, s.student_name from Student as s inner join Exam ex on s.student_id = ex.student_id inner join ( select e.exam_id, min(e.score) as minScore, max(e.score) as maxScore from Exam as e group by e.exam_id ) examScores on examScores.exam_id = ex.exam_id group by s.student_id having BIT_AND(case when ex.score < examScores.maxScore and ex.score > examScores.minScore then 1 else 0 end) = 1 order by s.student_id asc
select s.student_id, s.student_name from Student s inner join ( select Distinct student_id from exam where student_id not in ( select distinct student_id from ( select exam_id, student_id, score, min(score) over (partition by exam_id) as min, max(score) over (partition by exam_id) as max from exam ) score where score.score = score.min or score.score = score.max ) ) id on s.student_id = id.student_id order by s.student_id
select s.student_id, s.student_name from Student s join ( select student_id, rank() over(partition by exam_id order by score desc) desc_rk, rank() over(partition by exam_id order by score asc) asc_rk from Exam ) t on t.student_id = s.student_id group by s.student_id, s.student_name having min(t.desc_rk) <> 1 and min(asc_rk) <> 1 order by s.student_id
select s.student_id, s.student_name from Student s, (select e.student_id, count(distinct e.exam_id) as "quiet_exams", y.exams from Exam e, (select exam_id, max(score) as "max_score", min(score) as "min_score" from Exam group by exam_id) x, (select student_id, count(distinct exam_id) as "exams" from Exam group by student_id) y where e.exam_id = x.exam_id and e.score < x.max_score and e.score > x.min_score and e.student_id = y.student_id group by e.student_id) z where s.student_id = z.student_id and z.quiet_exams = z.exams
select s.student_id, s.student_name from student as s join (select a.student_id, count(a.exam_id) as total_exam, sum(case when a.score > min_score and a.score < max_score then 1 else 0 end) as quite_exam from exam as a join (select exam_id, min(score) as min_score, max(score) as max_score from exam group by exam_id) as b on a.exam_id = b.exam_id group by a.student_id) as c on s.student_id = c.student_id where c.total_exam = c.quite_exam order by s.student_id
select st.student_id, st.student_name from exam et join student st on et.student_id = st.student_id join (select exam_id, max(score) as max_s, min(score) as min_s from Exam group by exam_id) as et2 on et.exam_id = et2.exam_id group by et.student_id having sum(et.score = et2.max_s or et.score = et2.min_s) = 0 order by st.student_id
select student.student_id, student_name from student left join exam on student.student_id=exam.student_id where student.student_id not in (select student_id from exam where (exam_id, score) in (select exam_id, min(score) from exam group by exam_id) union select student_id from exam where (exam_id, score) in (select exam_id, max(score) from exam group by exam_id)) group by student.student_id having count(exam_id)>=1
select student_id "STUDENT_ID", student_name "STUDENT_NAME" from Student S where exists(select student_id from Exam where S.student_id=student_id) and student_id not in (select distinct student_id from Exam as e,(select max(score) as score, exam_id from Exam group by exam_id) as k, (select min(score) as score, exam_id from Exam group by exam_id) as k2 where (e.exam_id=k.exam_id and e.score=k.score) or (e.exam_id=k2.exam_id and e.score=k2.score))
select student_id ,student_name from Student where student_id not in ( select distinct student_id from Exam exam join( select exam_id ,max(score) as max_score ,min(score) as min_score from Exam group by exam_id ) A on exam.exam_id = A.exam_id where exam.score in (A.max_score,A.min_score) ) and student_id in ( select distinct student_id from Exam )
select student_id, student_name from ( select c.*,s.student_name from ( select student_id, min(is_student_quite_in_exam) as is_student_quite, max(no_of_exams_attended) as no_of_exams_attended from ( select distinct student_id, case when score > exam_min_score and score < exam_max_score then 1 else 0 end as is_student_quite_in_exam, no_of_exams_attended from ( SELECT *, count(exam_id) over(partition by student_id) as no_of_exams_attended, max(score) over(partition by exam_id) as exam_max_score, min(score) over(partition by exam_id) as exam_min_score from Exam ) a ) b group by student_id ) c join Student s on c.student_id = s.student_id ) d where is_student_quite = 1 and no_of_exams_attended >= 1 order by student_id
select student_id, student_name from ( select distinct student_id from Exam where student_id not in ( select distinct student_id from Exam e left join ( select exam_id, max(score) maxs, min(score) mins from Exam group by exam_id ) t using(exam_id) where score = maxs or score = mins ) ) t left join Student using(student_id) order by student_id
select student_id, student_name from ( select distinct student_id from Exam where student_id not in ( select distinct student_id from Exam left join ( select exam_id, max(score) maxs, min(score) mins from Exam group by exam_id ) t using (exam_id) where score = maxs or score = mins ) ) t left join Student using (student_id) order by student_id
select student_id, student_name from (select st.student_id as student_id, st.student_name as student_name, tb3.student_id as exst, e3.student_id as exst2 from Student as st left join (select distinct e2.student_id as student_id from (select exam_id, max(score) as max_score, min(score) as min_score from Exam group by exam_id) as tb left join exam as e2 on (e2.score = tb.max_score and tb.exam_id = e2.exam_id) or (e2.score = tb.min_score and tb.exam_id = e2.exam_id)) as tb3 on tb3.student_id = st.student_id left join (select distinct student_id from Exam) as e3 on st.student_id = e3.student_id) as t4 where t4.exst is NULL and t4.exst2 is not NULL
select student_id, student_name from Student where student_id in (select student_id from Exam) and student_id not in (select e.student_id from Exam e join (select exam_id, max(score) high, min(score) low from Exam group by exam_id ) l on e.exam_id=l.exam_id and (e.score=l.high or e.score=l.low))
select student_id, student_name from Student where student_id not in ( select distinct e1.student_id from Exam e1 where (exam_id, score) in (select exam_id, max(score) from Exam group by exam_id)) and student_id not in ( select distinct e1.student_id from Exam e1 where (exam_id, score) in (select exam_id, min(score) from Exam group by exam_id)) and student_id in (select distinct student_id from Exam)
select student_id, student_name from Student where student_id not in (select student_id from (select student_id, dense_rank() over (partition by exam_id order by score asc) as ascRank, dense_rank() over (partition by exam_id order by score desc) as descRank from exam) as temp where ascRank = 1 or descRank = 1 ) and student_id in (select distinct student_id from Exam)
select student_id, student_name from exam inner join (select exam_id, max(score) max_score, min(score) min_score from exam group by exam_id) as exam_min_max using (exam_id) inner join student using (student_id) group by student_id having sum(if(score < max_score and score > min_score, 0, 1)) = 0 order by student_id
select student_id, student_name from student where student_id in (select distinct student_id from Exam) and student_id not in (SELECT student_id FROM Exam e1 WHERE score = (SELECT max(score) FROM Exam e2 WHERE e1.exam_id = e2.exam_id) OR score = (SELECT min(score) FROM Exam e2 WHERE e1.exam_id = e2.exam_id))
select student_id, student_name from student where student_id in (select distinct student_id from exam) and student_id not in (select student_id from (select student_id, rank()over(partition by exam_id order by score desc) as max_rank, rank()over(partition by exam_id order by score) as min_rank from exam) cte where max_rank =1 or min_rank =1 )
select student_id, student_name from student where student_id not in ( select distinct student_id from exam e where(exam_id, score) in ( select exam_id, max(score) from exam group by exam_id union select exam_id, min(score) from exam group by exam_id ) ) and student_id not in (select student_id from student natural left join exam where score is null)
select student_id, student_name from student where student_id not in (select student_id from exam e1, ( select exam_id, max(score) as score from exam group by exam_id union select exam_id, min(score) as score from exam group by exam_id ) e2 where e1.exam_id=e2.exam_id and e1.score=e2.score) and student_id in (select distinct student_id from exam)
select student_id, student_name from student x join (select student_id as id, sum(case when score = maxscore or score = minscore then 1 else 0 end) as test from (select exam_id, student_id, score, row_number() over (partition by exam_id order by score desc) as rk, count(student_id) over (partition by exam_id) as cnt, max(score) over (partition by exam_id) as maxscore, min(score) over (partition by exam_id) as minscore from exam) a group by student_id) b on x.student_id = b.id where b.test = 0
select student_id,student_name from Student where student_id not in (select a.student_id from (select exam_id,student_id, rank() over(partition by exam_id order by score) as rankone, rank() over(partition by exam_id order by score desc) as rankn from Exam) as a where a.rankone=1 or a.rankn=1) and student_id in (select distinct student_id from Exam)
select student_id,student_name from student where student_id in (select distinct student_id from exam where student_id not in (select student_id from exam where (exam_id,score) in (select exam_id,max(score) from exam group by exam_id union select exam_id,min(score) from exam group by exam_id)))
select t1.student_id, t1.student_name from (select e.exam_id, e.student_id, s.student_name, e.score, dense_rank() over(partition by e.exam_id order by e.score DESC) h_rnk, dense_rank() over(partition by e.exam_id order by e.score ASC) l_rnk from exam e left join student s on e.student_id = s.student_id) t1 group by t1.student_id, t1.student_name having min(h_rnk) <> 1 and min(l_rnk) <> 1 order by t1.student_id
select t1.student_id, t1.student_name from student as t1, (select distinct a.student_id, min(case when a.s_max !=b.ex_max and a.s_min != b.ex_min then 1 else 0 end) as q from (select student_id, max(score) as s_max, min(score) as s_min, exam_id from exam group by student_id ,exam_id having count(distinct exam_id) >= 1) as a left join (select exam_id, max(score) as ex_max, min(score) as ex_min from exam group by exam_id) as b on a.exam_id = b.exam_id group by a.student_id having q =1 ) as t2 where t1.student_id = t2.student_id
select t2.student_id, s.student_name from (select student_id from (select *, max(score) over (partition by exam_id) as max_score, min(score) over (partition by exam_id) as min_score from Exam) as t1 group by student_id having sum(if(score = max_score or score = min_score, 1, 0)) = 0) as t2 left join student as s on t2.student_id=s.student_id order by t2.student_id
with MinMax as(select exam_id, student_id, dense_rank() over(partition by exam_id order by score asc) as LowRank, dense_rank() over(partition by exam_id order by score desc) as HighRank from Exam ) select student_id , student_name from Student where student_id not in (select distinct student_id from MinMax where (LowRank=1 or HighRank=1)) and student_id in (select distinct student_id from Exam) order by student_id asc
with MinMaxExam as ( select e1.exam_id, e1. student_id, e1.score from Exam e1 where ( select count(*) from Exam e2 where e2.exam_id = e1.exam_id and e2.score > e1.score ) = 0 or ( select count(*) from Exam e2 where e2.exam_id = e1.exam_id and e2.score < e1.score ) = 0 ) select distinct Exam.student_id, student_name from Exam join Student on Exam.student_id = Student.student_id where Exam.student_id not in ( select student_id from MinMaxExam ) order by Exam.student_id
with T as (select *, dense_rank () over (partition by exam_id order by score DESC) as high, dense_rank () over (partition by exam_id order by score ) as low from Exam ) select I.student_id, S.student_name from (select distinct student_id from Exam where student_id not in (select student_id from T where high = 1 or low = 1) ) I left join Student S on I.student_id = S.student_id order by I.student_id
with a as ( select b.student_id, a.student_name, exam_id, score, max(score) over(partition by exam_id ) as b, min(score) over(partition by exam_id ) as c from Student as a inner join exam as b on a.student_id = b.student_id) select distinct student_id, student_name from a where student_id not in (select student_id from a where b = score or c = score) group by student_id, student_name order by student_id
with a as ( select exam_id, student_id, dense_rank() over (partition by exam_id order by score desc) as max_score, dense_rank() over (partition by exam_id order by score asc) as min_score from Exam ) select b.student_id, c.student_name from ( select distinct student_id from Exam where student_id not in ( select student_id from a where max_score = 1 or min_score = 1 ) ) b inner join Student c on b.student_id = c.student_id
with a as( select distinct s.student_id, s.student_name from Student s join Exam e on s.student_id = e.student_id), b as( select *, rank() over(partition by exam_id order by score) as r from Exam union select *, rank() over(partition by exam_id order by score desc) as r from Exam) select student_id, student_name from a where student_id not in( select student_id from b where r = 1) order by student_id
with base as ( select e.student_id,e.score,e.exam_id,s.student_name, rank() over(partition by exam_id order by score desc) `rnk_desc`, rank() over(partition by exam_id order by score asc) `rnk_asc` from Exam e inner join Student s on e.student_id=s.student_id order by s.student_id asc ) select distinct a.student_id, a.student_name from base a where a.student_id not in ( select a.student_id from base a where a.rnk_desc=1 or a.rnk_asc=1)
with base as ( select exam_Id, student_id, score, rank() over (partition by exam_Id order by score) as ascending_rank, rank() over (partition by exam_Id order by score desc) as descending_rank from exam ) select distinct student.* from base left join student on base.student_id = student.student_id where ascending_rank <> 1 and descending_rank <> 1 and base.student_id not in (select distinct student_id from base where ascending_rank = 1 or descending_rank = 1) order by student.student_id
with base as ( select s.student_id, s.student_name, exam_id, score from student s left join exam e on s.student_id = e.student_id where exam_id is not null ), exam_range as ( select exam_id, min(score) as lowest, max(score) as highest from exam group by 1 ), base1 as( select student_id, student_name, max(lowest_ind) as max_lowest, max(highest_ind) as max_highest from ( select b.student_id, b.student_name, b.exam_id, case when score = lowest then 1 else 0 end as lowest_ind, case when score = highest then 1 else 0 end as highest_ind from base b left join exam_range e1 on b.exam_id = e1.exam_id )t group by 1,2 ) select student_id, student_name from base1 where max_lowest = 0 and max_highest = 0 order by 1
with ct as (select exam_id, max(score) as max_score, min(score) as min_score from exam group by exam_id) select distinct student_id,student_name from student where student_id not in( select student_id from exam left join ct on exam.exam_id = ct.exam_id where score = max_score or score=min_score)and student_id in (select student_id from exam group by student_id having count(exam_id)>=1)
with cte AS ( Select s.student_id, s.student_name, RANK() over(partition by e.exam_id ORDER BY score) rk1, RANK() OVER(partition by e.exam_id ORDER by score DESC) rk2 FROM Student s, Exam e WHERE s.student_id=e.student_id ) Select DISTINCT student_id, student_name FROM cte Where student_id NOT IN (SELECT student_id FROM cte WHERE rk1 = 1 or rk2 = 1) ORDER BY student_id
with cte as ( select distinct student_id from (select student_id, exam_id, score, dense_rank()over(partition by exam_id order by score asc) as rnk1, dense_rank()over(partition by exam_id order by score desc) as rnk2 from Exam ) h where rnk1 =1 or rnk2 =1 ) select distinct s.student_id, s.student_name from Student s where s.student_id not in (select student_id from cte ) and s.student_id in ( select student_id from Exam group by student_id having count(exam_id) >= 1)
with cte as ( select distinct student_id from (select student_id, rank() over(partition by exam_id order by score asc) as rk_asc, rank() over(partition by exam_id order by score desc) as rk_desc from Exam )s where rk_asc = 1 or rk_desc = 1 ) select distinct s.student_id, s.student_name from Student s join Exam e on s.student_id = e.student_id where s.student_id not in (select student_id from cte) order by 1
with cte as ( select e.exam_id, e.student_id, e.score from exam e join (select exam_id, student_id, max(score) highest from exam group by exam_id) high on high.exam_id=e.exam_id join (select exam_id, student_id, min(score) lowest from exam group by exam_id) low on low.exam_id=e.exam_id where e.score=high.highest or e.score=low.lowest ) select s.student_id, s.student_name from student s where s.student_id not in (select student_id from cte) and s.student_id in (select student_id from exam)
with cte as ( select e.exam_id, e.student_id, e.score, mins, maxs from exam e join (select exam_id, min(score) as mins from exam group by exam_id) mini on e.exam_id = mini.exam_id join (select exam_id, max(score) as maxs from exam group by exam_id) maxi on e.exam_id = maxi.exam_id ) select s.student_id, s.student_name from student s join (select student_id, count(exam_id) as ecount from exam group by student_id) a on s.student_id = a.student_id left join (select student_id, sum(case when score = mins then 0 when score = maxs then 0 else 1 end)as icount from cte group by student_id) b on s.student_id = b.student_id where ecount = icount order by s.student_id
with cte as ( select e.exam_id, e.student_id, e.score, mins, maxs from exam e join (select exam_id, min(score) as mins from exam group by exam_id) mini on e.exam_id = mini.exam_id join (select exam_id, max(score) as maxs from exam group by exam_id) maxi on e.exam_id = maxi.exam_id ) select s.student_id, s.student_name from student s join (select student_id, count(exam_id) as ecount, sum(case when score = mins then 0 when score = maxs then 0 else 1 end)as icount from cte group by student_id) b on s.student_id = b.student_id where ecount = icount order by s.student_id
with cte as ( select e.student_id student_id, s.student_name student_name, rank() over (partition by exam_id order by score desc) top, rank() over (partition by exam_id order by score) bottom from Exam e join Student s on e.student_id = s.student_id ) select distinct student_id, student_name from cte where student_id not in (select student_id from cte where top = 1 or bottom = 1) order by 1
with cte as ( select exam.student_id, student.student_name as student_name, rank() over(partition by exam_id order by score desc) as rank1, rank() over(partition by exam_id order by score) as rank2 from exam inner JOIN student ON exam.student_id = student.student_id ) select distinct c.student_id as student_id, student_name from cte c where c.student_id NOT IN (SELECT student_id FROM cte WHERE rank1 = 1 OR rank2 = 1) order by c.student_id
with cte as ( select exam_id ,student_id ,score ,rank() over(partition by exam_id order by score) rnk ,rank() over(partition by exam_id order by score desc) rnk2 from exam ) select distinct b.student_id ,b.student_name from exam a join student b on a.student_id = b.student_id where a.student_id not in (select student_id from cte where rnk = 1 or rnk2 = 1) order by 1
with cte as ( select exam_id, Exam.student_id, student_name, rank() over (partition by exam_id order by score) as rk_min, rank() over (partition by exam_id order by score desc) as rk_max from Exam left join Student on Exam.student_id = Student.student_id) select distinct student_id, student_name from cte where student_id not in (select student_id from cte where rk_min = 1 or rk_max = 1) order by student_id
with cte as ( select exam_id, e.student_id, student_name, rank() over(partition by exam_id order by score) low_score, rank() over(partition by exam_id order by score desc) high_score from exam e left join student s on e.student_id = s.student_id ) select distinct student_id, student_name from cte where student_id not in (select student_id from cte where low_score = 1 or high_score = 1) order by student_id
with cte as ( select exam_id, exam.student_id, student_name, dense_rank() over(partition by exam_id order by score asc) as rk1, dense_rank() over(partition by exam_id order by score desc) as rk2 from exam left join student using(student_id) ) select distinct student_id,student_name from cte where student_id not in (select student_id from cte where rk1=1 or rk2=1) order by student_id asc
with cte as ( select exam_id, student_id, rank() over(partition by exam_id order by score DESC) AS TOP_RANK, rank() over(partition by exam_id order by score ASC) AS BTM_RANK from exam ) select distinct a.student_id, b.student_name from cte a left join student b on a.student_id =b.student_id WHERE a.student_id not in (select student_id from cte where top_rank=1 or btm_rank=1) order by a.student_id
with cte as ( select exam_id, student_id, score, dense_rank() over (partition by exam_id order by score) "low_rank", dense_rank() over (partition by exam_id order by score desc) "high_rank" from exam ) select distinct s.* from student s join exam e on s.student_id = e.student_id where s.student_id not in ( select distinct student_id from cte where low_rank = 1 or high_rank = 1) order by s.student_id
with cte as ( select exam_id, student_id, score, dense_rank() over (partition by exam_id order by score) "low_rank", dense_rank() over (partition by exam_id order by score desc) "high_rank" from exam group by 1, 2, 3 ) select distinct s.* from student s join exam e on s.student_id = e.student_id where s.student_id not in ( select distinct student_id from cte where low_rank = 1 or high_rank = 1) order by s.student_id
with cte as ( select exam_id, student_id, score, rank() over(partition by exam_id order by score) as rnk1, rank() over(partition by exam_id order by score desc) as rnk2 from exam ) select student_id, student_name from student where student_id not in ( select student_id from cte where rnk1 = 1 or rnk2 = 1) and student_id in ( select student_id from exam )
with cte as ( select exam_id,min(score) as mins,max(score) as maxs from Exam group by exam_id ),cte1 as ( select cte.exam_id,student_id,score,mins,maxs from exam join cte on cte.exam_id = exam.exam_id ),cte2 as ( select student_id from cte1 where score != mins and score !=maxs ),cte3 as ( select t1.student_id,cn,cn1 from (select student_id,count(*) as cn from cte2 group by student_id)t1 join (select student_id,count(*) as cn1 from Exam group by student_id)t2 on t1.student_id = t2.student_id ) select cte3.student_id,student_name from cte3 join Student on cte3.student_id = student.student_id where cn = cn1
with cte as (SELECT exam_id, e.student_id, student_name, rank() Over(partition by exam_id Order by score) rnk_asc, rank() Over(partition by exam_id Order by score desc) rnk_desc FROM Exam e Left JOIN Student s ON e.student_id = s.student_id) SELECT distinct student_id, student_name FROM cte WHERE student_id not in ( SELECT distinct student_id from cte where rnk_asc = 1 or rnk_desc = 1) Order by student_id
with cte as (select *, max(score) over(partition by exam_id) as maxs, min(score) over(partition by exam_id) as mins from exam ) select distinct c.student_id, s.student_name from cte c left join student s on c.student_id = s.student_id where score < maxs and score > mins and c.student_id not in (select student_id from cte where score = mins or score = maxs) order by c.student_id
with cte as (select Exam.student_id, student_name, exam_id, score, RANK() over(partition by exam_id order by score) rk1, RANK() over(partition by exam_id order by score desc) rk2 from Exam left join Student on Exam.student_id = Student.student_id) select distinct student_id, student_name from cte where student_id not in (select student_id from cte where rk1 = 1 or rk2 = 1) order by student_id
with cte as (select distinct student_id from(select *, max(score) over(partition by exam_id) highest,min(score) over(partition by exam_id) lowest from Exam)a where score != highest and score!=lowest and student_id not in (select distinct student_id from(select *, max(score) over(partition by exam_id) highest,min(score) over(partition by exam_id) lowest from Exam)a where score = highest or score =lowest )) select student_id , student_name from cte join Student using(student_id)
with cte as (select e.student_id,s.student_name, dense_rank() over (partition by e.exam_id order by e.score) rnk, dense_rank() over (partition by e.exam_id order by e.score desc) rnk1 from exam e join student s on e.student_id = s.student_id) select distinct student_id, student_name from cte where student_id not in (select student_id from cte where rnk = 1 or rnk1 = 1) order by Student_id
with cte as (select exam_id, e.student_id, student_name, dense_rank() over (partition by exam_id order by score) as lower, dense_rank() over (partition by exam_id order by score desc) as higher from Exam e left join student s on e.student_id = s.student_id) select distinct student_id, student_name from cte where student_id not in(select student_id from cte where lower = 1 or higher = 1) order by student_id
with cte as (select exam_id, student_id, score, dense_rank() over (partition by exam_id order by score desc) as high_mark, dense_rank() over(partition by exam_id order by score asc) as low_mark from exam) select distinct s.student_id, student_name from student s join cte on s.student_id = cte.student_id where s.student_id not in (select student_id from cte where high_mark=1) and s.student_id not in (select student_id from cte where low_mark=1) order by student_id
with cte as (select exam_id, student_id, score, dense_rank() over(partition by exam_id order by score desc) as high_score, dense_rank() over(partition by exam_id order by score) as low_score from exam) select distinct student_id, student_name from exam left join student using(student_id) where student_id NOT IN (select distinct student_id from cte where high_score = 1 or low_score = 1) order by student_id
with cte as (select s.student_id, s.student_name, sum(case when e1.score = min_score or e1.score = max_score then 1 else 0 end) loud from Exam e1 join Student s on e1.student_id = s.student_id join (select exam_id, max(score) max_score, min(score) min_score from Exam group by 1) e2 on e1.exam_id = e2.exam_id group by 1, 2 ) select student_id, student_name from cte where loud = 0 order by 1
with cte as (select student_id, rank() over(partition by exam_id order by score asc) as rnt_max, rank() over(partition by exam_id order by score desc) as rnt_min from exam) select distinct e.student_id, student_name from student s join exam e on s.student_id = e.student_id where e.student_id not in (select student_id from cte where rnt_max=1 or rnt_min=1) order by 1
with cte as( SELECT *, RANK()OVER(PARTITION BY exam_id ORDER BY score ASC) as low, RANK()OVER(PARTITION BY exam_id ORDER BY score DESC) as high FROM Exam JOIN Student USING(student_id)) SELECT student_id, student_name FROM cte GROUP BY 1,2 HAVING min(low)>1 and min(high)>1 ORDER BY 1
with cte as( select Exam.student_id as student_id, student_name, exam_id, dense_rank() over(partition by exam_id order by score) as lowest_score, dense_rank() over(partition by exam_id order by score desc) as highest_score from Exam left join Student using(student_id)) select distinct student_id, student_name from cte where student_id not in (select student_id from cte where lowest_score =1 or highest_score =1) order by student_id
with cte as( select max(score) as best, min(score) as worst, exam_id from Exam group by exam_id) ,cte1 as (select student_id from exam e inner join cte on e.exam_id=cte.exam_id and (cte.best=e.score or cte.worst=e.score) ) select distinct e.student_id,s.student_name from exam e join student s on e.student_id=s.student_id where e.student_id not in (select student_id from cte1 ) order by student_id
with cte1 as ( select student_id from exam where (exam_id, score) in (select exam_id, min(score) as score from exam group by 1 union select exam_id, max(score) as score from exam group by 1) ), cte2 as (select student_id from exam group by 1 having count(exam_id)>=1) select student_id, student_name from student where student_id not in (select student_id from cte1) and student_id in (select student_id from cte2)
with cte1 as (select exam_id, min(score) as min1, max(score) max1 from exam group by exam_id) ,cte2 as ( select distinct student_id from exam e inner join cte1 c on e.exam_id=c.exam_id where score=max1 or score=min1) ,cte3 as (select e.exam_id,student_id,score from exam e inner join cte1 c on e.exam_id=c.exam_id where score<max1 and score>min1) select distinct c.student_id, student_name from cte3 c join student s on c.student_id = s.student_id where c.student_id not in ( select student_id from cte2) order by c.student_id
with cte1 as (select exam_id, min(score) as min1, max(score) max1 from exam group by exam_id) ,cte2 as ( select distinct student_id from exam e inner join cte1 c on e.exam_id=c.exam_id where score=max1 or score=min1) ,cte3 as (select e.exam_id,student_id,score from exam e inner join cte1 c on e.exam_id=c.exam_id where score<max1 and score>min1) select distinct c.student_id, student_name from cte3 c left join student s on c.student_id = s.student_id where c.student_id not in ( select student_id from cte2) order by c.student_id
with cte1 as (select student_id from exam where (exam_id, score) in (select exam_id, max(score) as 'max' from exam group by exam_id) or (exam_id, score) in (select exam_id, min(score) as 'min' from exam group by exam_id)) select distinct s.* from exam join student s using (student_id) where student_id not in (select student_id from cte1) order by s.student_id
with cte1 as( select exam_id, student_id, score, min(score) over(partition by exam_id) as min_exam_score, max(score) over(partition by exam_id) as max_exam_score from exam), cte2 as ( select student_id, sum(case when score in (min_exam_score, max_exam_score) then 1 else 0 end) as nums from cte1 group by student_id ) select s.student_id, student_name from cte2 join student s on cte2.student_id = s.student_id and nums = 0
with cte1 as( select exam_id, student_id, score, min(score) over(partition by exam_id) as min_exam_score, max(score) over(partition by exam_id) as max_exam_score from exam), cte2 as( select student_id from cte1 where score = min_exam_score or score=max_exam_score) select student_id, student_name from student where student_id not in (select distinct student_id from cte2) and student_id in (select distinct student_id from exam)
with data as ( select exam_id,min(score) as min_score, max(score ) as max_score from Exam group by exam_id ), stud_info AS ( select distinct student_id from Exam e inner join data d on e.exam_id = d.exam_id where (e.score = d.min_score or e.score = d.max_score) ) select s.student_id,s.student_name from Student s left outer join stud_info si on s.student_id = si.student_id left outer join (select student_id,count(1) snct from Exam group by student_id) d on s.student_id = d.student_id where si.student_id is null and d.snct > 0
with e1 as ( select exam_id,max(score) as hs, min(score) as ms from Exam group by exam_id ), e2 as ( select student_id, count(exam_id) as exam_cnt from Exam group by student_id ), e3 as ( select student_id, count(*) as score_cnt from e1 inner join Exam on e1.exam_id = Exam.exam_id where score < hs and score > ms group by student_id ) select e3.student_id as student_id, student_name from e3 inner join e2 on e2.student_id = e3.student_id and e2.exam_cnt = e3.score_cnt left join Student on e3.student_id = Student.student_id order by e3.student_id
with exam_lowest_highest as (select exam_id, min(score) as lowest, max(score) as highest from exam group by exam_id) , low_score_students as (select student_id from exam where (exam_id, score) in (select exam_id, lowest from exam_lowest_highest)) , high_score_students as (select student_id from exam where (exam_id, score) in (select exam_id, highest from exam_lowest_highest)) , inactive_students as (select student_id from student where student_id not in (select student_id from exam)) select student_id, student_name from student where student_id not in (select * from low_score_students) and student_id not in (select * from high_score_students) and student_id not in (select * from inactive_students)
with exam_min_max as ( select exam_id, max(score) max_score, min(score) min_score from Exam group by exam_id ), student_with_min_max AS ( select distinct student_id from Exam A JOIN exam_min_max B ON A.exam_id = B.exam_id AND (A.score = B.max_score or A.score = B.min_score) ) SELECT distinct A.student_id, B.student_name FROm Exam A JOIN Student B ON A.student_id = B.student_id WHERE A.student_id not in (select student_id from student_with_min_max) ORDER BY A.student_id
with exam_score as ( select exam_id, min(score) as min_score, max(score) as max_score from exam group by exam_id), stud as ( select student_id from exam join exam_score on exam.exam_id = exam_score.exam_id and exam.score = exam_score.max_score union select student_id from exam join exam_score on exam.exam_id = exam_score.exam_id and exam.score = exam_score.min_score ) select student_id, student_name from student as s where student_id in (select distinct student_id from exam) and student_id not in (select distinct student_id from stud) order by student_id
with exam_student as ( select a.exam_id, b.student_name, a.student_id, a.score from Exam a left join Student b on a.student_id = b.student_id), max_min as ( select exam_id, student_id, student_name, score, max(score) over(partition by exam_id) as max_in_exam, min(score) over(partition by exam_id) as min_in_exam from exam_student), non_quite as ( select distinct student_id, student_name from max_min where (score = min_in_exam) or (score = max_in_exam)), quite as ( select distinct student_id, student_name from max_min where student_id not in (select student_id from non_quite) order by student_id) select * from quite
with exam_table as( select exam.student_id, student_name, rank() over(partition by exam_id order by score asc) low_high, rank() over(partition by exam_id order by score desc) high_low from exam join student on exam.student_id = student.student_id ) select distinct student_id, student_name from exam_table where student_id not in( select student_id from exam_table where low_high = 1 or high_low = 1 ) order by student_id
with examwise_high_low as (select exam_id, max(score) as highest, min(score) as lowest from exam group by exam_id) select distinct s.student_id, s.student_name from Student as s join Exam as e on s.student_id = e.student_id where s.student_id NOT in (select distinct ex.student_id from exam as ex join examwise_high_low hl on ex.exam_id = hl.exam_id where (ex.score = hl.highest or ex.score = hl.lowest) ) order by 1
with extreme as ( select exam_id, student_id, score, `rank` from ( select exam_id, student_id, score, rank() over(partition by exam_id order by score desc) as `rank` from exam union select exam_id, student_id, score, rank() over(partition by exam_id order by score asc) as `rank` from exam ) tmp where tmp.rank=1 ) select distinct s.student_id, s.student_name from exam e join student s on s.student_id=e.student_id where e.student_id not in ( select student_id from extreme ) order by 1
with extreme_scores as ( select e.exam_id, min(e.score) as min_score, max(e.score) as max_score from Exam e group by e.exam_id ), extreme_students as ( select e.exam_id, e.student_id, e.score from Exam e join extreme_scores es on e.exam_id = es.exam_id where e.score = es.min_score or e.score = es.max_score ) select distinct e.student_id as STUDENT_ID, s.student_name as STUDENT_NAME from Exam e join Student s on e.student_id = s.student_id where e.student_id not in (select es.student_id from extreme_students es) order by student_id
with extreme_scores as ( select exam_id, max(score) as max_score, min(score) as min_score from Exam group by exam_id) , medium_students_ as ( select e.exam_id, e.student_id, case when e.score < max_score and e.score > min_score then 0 else 1 end as flag from Exam e join extreme_scores s on e.exam_id = s.exam_id ) , medium_students as ( select student_id from medium_students_ group by student_id having sum(flag) = 0 ) select st.student_id, st.student_name from Student st join medium_students m on st.student_id = m.student_id
with first_last as ( select exam_id, student_id, score , rank() over(partition by exam_id order by score desc) as high_rank , rank() over(partition by exam_id order by score asc) as low_rank from exam ) select distinct e.student_id, s.student_name from exam e join student s on s.student_id=e.student_id where e.student_id not in ( select student_id from first_last where high_rank=1 or low_rank=1 ) order by 1
with high_low as (select exam_id, max(score) as highest, min(score) as lowest from exam group by exam_id) select distinct e.student_id, s.student_name from exam e join student s on e.student_id = s.student_id where e.student_id not in (select distinct e.student_id from exam e, high_low hl where e.exam_id = hl.exam_id and (e.score = hl.highest or e.score = hl.lowest)) order by 1
with high_rank_cte as ( Select * from ( Select *, Rank() over (partition by exam_id order by score desc) as Ranks from exam ) a where ranks=1 ), low_rank_cte as ( Select * from ( Select *, Rank() over (partition by exam_id order by score) as Ranks from exam ) a where ranks=1 ) Select distinct e.student_id,student_name from exam e inner join student s on e.student_id=s.student_id where e.student_id not in(Select student_id from high_rank_cte union Select student_id from low_rank_cte) order by 1
with high_score_student (student_id,high_score) as ( Select student_id, dense_rank() over(partition by exam_id order by score desc) as high_score from Exam ), low_score_student (student_id,low_score) as ( Select student_id, dense_rank() over(partition by exam_id order by score) as low_score from Exam ) select distinct a.student_id,student_name from Student a left join Exam b on a.student_id=b.student_id where a.student_id not in (select distinct student_id from high_score_student where high_score=1) and a.student_id not in (select distinct student_id from low_score_student where low_score=1) and b.exam_id is not null order by a.student_id
with highest as( select exam_id, max(score) as high from exam group by exam_id ), lowest as( select exam_id, min(score) as low from exam group by exam_id ) select distinct s.student_id, s.student_name from student s join exam e using(student_id) where student_id not in (select e.student_id from exam e join highest h using(exam_id) where e.score = h.high) and student_id not in (select e.student_id from exam e join lowest l using(exam_id) where e.score = l.low) group by student_id, exam_id
with highscores as ( select exam_id, min(score) as min_score, max(score) as max_score from Exam group by exam_id), studentsWithHighLowScores as ( select distinct student_id from Exam e inner join highscores h on e.exam_id=h.exam_id and (e.score = h.min_score or e.score = h.max_score)) select distinct s.student_id as STUDENT_ID, s.student_name AS STUDENT_NAME from student s inner join exam e on s.student_id = e.student_id left outer join studentsWithHighLowScores hl on s.student_id=hl.student_id where hl.student_id is null order by student_id
with hl_student as ( select exam_id,student_id,score, rank() over(partition by exam_id order by score desc) as high_rank, rank() over(partition by exam_id order by score asc) as low_rank from exam ) select distinct exam.student_id,student_name from student join exam on student.student_id = exam.student_id where student.student_id not in( select distinct student_id from hl_student where high_rank =1 or low_rank =1 ) order by 1
with lo_hi as ( select *, min(score) over (partition by exam_id) as low, max(score) over (partition by exam_id) as high from Exam e ), louds as ( select lh.student_id from lo_hi as lh where score = low or score = high ) select distinct student_id, student_name from Exam e left join Student s using(student_id) where student_id not in (select student_id from louds) order by 1
with loud as (select exam_id, max(score) as max_score, min(score) as min_score from exam group by 1), n_exam as (select student_id, count(distinct exam_id) as n_exam from exam group by 1), quite as (select s.student_id, s.student_name, e.exam_id from student s left join exam e on s.student_id = e.student_id left join loud l on e.exam_id = l.exam_id where e.score != max_score and e.score != min_score), n_quite as (select student_id, student_name, count(distinct exam_id) as n_quite from quite group by 1,2) select nq.student_id, nq.student_name from n_quite nq left join n_exam ne on nq.student_id = ne.student_id where nq.n_quite = ne.n_exam
with m as ( Select distinct exam_id, student_id, score, min(score) OVER (PARTITION BY exam_id) as min_score, max(score) OVER (PARTITION BY exam_id) as max_score from Exam) select distinct e.student_id, student_name from Exam e left join Student s on e.student_id = s.student_id where e.student_id not in (select student_id from m where m.score = min_score or m.score = max_score ) order by e.student_id ASC
with m as ( select exam_id, max(score) as max_score, min(score) as min_score from Exam group by 1 ) select distinct e.student_id as "STUDENT_ID", student_name AS "STUDENT_NAME" from Exam e join Student s on e.student_id = s.student_id where e.student_id not in ( select distinct student_id from m join Exam e on e.exam_id = m.exam_id and (e.score = m.max_score or e.score = m.min_score) ) order by 1
with m as ( select exam_id, max(score) as max_score, min(score) as min_score from Exam group by exam_id ) select f2.student_id, Student.student_name from ( select f.student_id, sum(case when f.score=f.max_score or f.score=f.min_score then 1 else 0 end) as mscore from ( select e.student_id, e.score, m.max_score, m.min_score from Exam as e inner join m on e.exam_id = m.exam_id ) as f group by f.student_id ) as f2 left join Student on f2.student_id = Student.student_id where f2.mscore = 0 order by f2.student_id
with main as ( select student_id , rank() over (partition by exam_id order by score asc) rank_asc , rank() over (partition by exam_id order by score desc) rank_desc from exam ) select * from student where student_id in (select student_id from main group by student_id having min(rank_asc) > 1 and min(rank_desc) > 1) order by student_id
with max_min as (select exam_id, max(score) as max_sco, min(score) as min_sco from Exam group by exam_id), non_quiet as (select distinct student_id from Exam left join max_min on Exam.exam_id = max_min.exam_id where score = max_sco or score = min_sco) select * from Student where (student_id not in (select * from non_quiet)) and (student_id in (select distinct student_id from Exam))
with max_min_score as (select exam_id,max(score) as max_score, min(score) as min_score from exam group by exam_id) select a.student_id,a.student_name from student a join exam b on (a.student_id = b.student_id) join max_min_score c on (b.exam_id = c.exam_id) group by a.student_id,a.student_name having sum(case when b.score = c.max_score or b.score = c.min_score then 1 else 0 end) = 0 order by a.student_id
with max_min_score as( select distinct exam_id, max(score) over (partition by exam_id) as max_score, min(score) over (partition by exam_id) as min_score from Exam ) select qq.student_id as student_id, student_name from ( select e.exam_id as exam_id, student_id, count(student_id) as c, score from Exam e left join max_min_score m on e.exam_id = m.exam_id where score > m.min_score and score < m.max_score and student_id not in ( select distinct student_id from ( select student_id, score from Exam e left join max_min_score m on e.exam_id = m.exam_id where score = m.min_score or score = m.max_score ) as max_min_score_id ) group by student_id having c >= 1 ) as qq left join Student s on qq.student_id = s.student_id order by qq.student_id
with max_score as (select s1.student_id from (select e1.exam_id, e1.student_id, e1.score, dense_rank() over(partition by e1.exam_id order by e1.score desc) as max_rank from Exam e1 ) s1 where max_rank = 1 ), min_score as (select s2.student_id from (select e2.exam_id, e2.student_id, e2.score, dense_rank() over(partition by e2.exam_id order by e2.score) as min_rank from Exam e2 ) s2 where min_rank = 1 ), n_score as (select distinct max_score.student_id from max_score union all select distinct min_score.student_id from min_score ) select distinct st.student_id, student_name from Student st join Exam e on st.student_id = e.student_id where st.student_id not in (select n_score.student_id from n_score) order by st.student_id
with maxmin as (select exam_id, max(score) as high, min(score) as low from Exam group by 1), quite as (select e.student_id, count(e.exam_id) as num from Exam e join maxmin m on e.exam_id = m.exam_id where e.score <> m.high and e.score <> m.low group by 1), total as (select student_id, count(exam_id) as num from Exam group by 1) select student_id, student_name from Student where student_id in (select q.student_id from quite q join total t on q.student_id = t.student_id where q.num = t.num)
with maxmin as( select exam_id, student_id, score, max(score) over(partition by exam_id) as max_score, min(score) over(partition by exam_id) as min_score from exam ) select student_id, student_name from student where student_id not in( select distinct student_id from maxmin where score = max_score or score = min_score ) and student_id in( select distinct student_id from exam )
with maxminscore as( select distinct exam_id, max(score) over (partition by exam_id) as score from exam union all select distinct exam_id, min(score) over (partition by exam_id) as score from exam ) select distinct s1.student_id, s1.student_name from student s1 inner join exam using (student_id) where student_id not in ( select distinct student_id from ( select e.exam_id, e.student_id, e.score from exam e join maxminscore m on m.exam_id = e.exam_id and m.score = e.score ) as a) order by 1
with min_max_exam as ( select exam_id, min(score) as min_score, max(score) as max_score FROM Exam group by exam_id ), student_min_max_marks as ( SELECT E.student_id FROM Exam E INNER JOIN min_max_exam MME ON E.exam_id = MME.exam_id AND (E.score = MME.min_score OR E.score = MME.max_score) ) SELECT distinct S.student_id, S.student_name FROM Exam E INNER JOIN Student S ON E.student_id = S.student_id WHERE E.student_id not in (select student_id from student_min_max_marks) order by S.student_id
with mx as ( select exam_id, max(score) as score from Exam group by exam_id ), mn as ( select exam_id, min(score) as score from Exam group by exam_id ) select e.student_id, s.student_name from Exam e join Student s on e.student_id = s.student_id left join mx on e.exam_id = mx.exam_id and e.score = mx.score left join mn on e.exam_id = mn.exam_id and e.score = mn.score group by e.student_id, s.student_name having count(mx.score) + count(mn.score) = 0 order by e.student_id
with not_q as (select student_id from(select student_id, rank() over(partition by exam_id order by score asc) as asc_rnk, rank() over(partition by exam_id order by score desc) as desc_rnk from Exam) x where asc_rnk = 1 or desc_rnk = 1), one_test as ( select student_id from Exam group by 1 having count(distinct exam_id) >= 1) select * from student where student_id not in (select * from not_q) and student_id in (select student_id from one_test) order by 1
with q1 as ( select exam_id, max(score) maxscore from exam group by exam_id ), q2 as ( select exam_id, min(score) minscore from exam group by exam_id ), q3 as ( select e.student_id from exam e, q1 where e.exam_id = q1.exam_id and e.score = q1.maxscore ), q4 as ( select e.student_id from exam e, q2 where e.exam_id = q2.exam_id and e.score = q2.minscore ), q5 as ( select * from q3 union all select * from q4 ), q6 as ( select e.student_id from exam e, q1, q2 where e.exam_id = q1.exam_id and e.score < q1.maxscore and e.exam_id = q2.exam_id and e.score > q2.minscore group by e.student_id ) select q6.student_id, s.student_name from student s, q6 where q6.student_id not in (select * from q5) and q6.student_id = s.student_id
with rank_score as ( select student_id,exam_id, rank() over(partition by exam_id order by score desc) as high_score, rank() over (partition by exam_id order by score) as rank_low from exam ) select s.student_id, s.student_name from student s join rank_score r on s.student_id = r.student_id where s.student_id not in (select student_id from rank_score where high_score = 1 or rank_low =1 ) group by s.student_id
with ranked as ( select * , dense_rank() over (partition by exam_id order by score DESC) as top_rank , dense_rank() over (partition by exam_id order by score ASC) as bottom_rank from exam ) , quiet_only as ( select exam_id , student_id from ranked where top_rank <> 1 and bottom_rank <> 1 ) , grouped as ( select student_id , count(distinct exam_id) as total_exams from ranked group by student_id ) , quiet_group as ( select student_id , count(distinct exam_id) as quiet_exams from quiet_only group by student_id ) select grouped.student_id , student_name from grouped left join student on grouped.student_id = student.student_id left join quiet_group on grouped.student_id = quiet_group.student_id where total_exams = quiet_exams order by student_id ASC
with sample as (select exam_id, a.student_id, score, student_name, max(score) over(partition by exam_id) as maxi, min(score) over(partition by exam_id) as mini from student a join exam b on a.student_id = b.student_id) select distinct student_id, student_name from sample where student_id not in(select student_id from sample where score = mini union select student_id from sample where score = maxi) order by student_id
with score as ( select exam_id, max(score) as h, min(score) as l from exam group by exam_id ), result as ( select e.student_id, max(case when e.score = s.h or e.score = s.l then 1 else 0 end) as flag from exam e join score s on e.exam_id = s.exam_id group by e.student_id ) select r.student_id, s.student_name from result r join student s on r.student_id =s.student_id where r.flag = 0 order by r.student_id
with score_rank as ( select exam_id, student_id, score, max(score) over(partition by exam_id rows between unbounded preceding and unbounded following) as max_score, min(score) over(partition by exam_id rows between unbounded preceding and unbounded following) as min_score from Exam ) select distinct r.student_id, s.student_name from score_rank r join Student s on r.student_id = s.student_id where r.student_id not in (select student_id from score_rank where score = max_score or score = min_score) order by r.student_id
with score_table as (select e1.exam_id, min(score) as mins, max(score) as maxs from Exam e1 GROUP BY exam_id), quiet_table as (select distinct s.student_id from Student s, Exam e, score_table where s.student_id = e.student_id AND e.exam_id = score_table.exam_id AND (e.score = score_table.mins OR e.score = score_table.maxs)) select distinct s.student_id, s.student_name From Student s, quiet_table q, Exam e where s.student_id not in (select q1.student_id from quiet_table q1) AND s.student_id in (select student_id from Exam )
with score_table as (select e1.exam_id, min(score) as mins, max(score) as maxs from Exam e1 GROUP BY exam_id), quite_table as (select distinct s.student_id from Student s, Exam e, score_table where s.student_id = e.student_id AND e.exam_id = score_table.exam_id AND (e.score = score_table.mins OR e.score = score_table.maxs)) select distinct s.student_id, s.student_name From Student s, quite_table q, Exam e where s.student_id not in (select q.student_id from (select * from quite_table) q) AND s.student_id in (select student_id from Exam )
with scores as ( Select exam_id,min(score) as mini, max(score) as maxi from Exam group by exam_id ) Select student_id,student_name from student where student_id in(Select student_id from exam where student_id not in (Select student_id from exam where score in(Select mini from scores where exam_id = exam.exam_id) or score in(Select maxi from scores where exam_id = exam.exam_id)))
with scores as (select exam_id, min(score) as min_score, max(score) as max_score from exam group by exam_id) select s.student_id,s.student_name from student s join exam e on s.student_id = e.student_id join scores c on c.exam_id=e.exam_id group by s.student_id,s.student_name having sum(case when e.score=c.max_score or e.score=c.min_score then 1 else 0 end)=0 order by s.student_id
with scores_ranks_by_exam as ( select s.student_id, s.student_name, rank() over (partition by exam_id order by score desc) as max_score, rank() over (partition by exam_id order by score asc) as min_score from student s join exam e on s.student_id = e.student_id ), loud_students as ( select student_id from scores_ranks_by_exam where max_score = 1 or min_score = 1 ) select distinct s.student_id, s.student_name from student s join exam e on s.student_id = e.student_id where s.student_id not in (select student_id from loud_students) order by s.student_id
with sr as (select exam_id, student_id, rank() over(partition by exam_id order by score asc) as low, rank()over (partition by exam_id order by score desc) as high from exam) select distinct e.student_id, student_name from student as s right join exam as e on e.student_id=s.student_id where e.student_id not in (select sr.student_id from sr where sr.low=1 or sr.high=1) order by s.student_id
with student_with_min_max_score as ( select student_id, score, min(score) over (partition by exam_id) min_score, max(score) over (partition by exam_id) max_score from exam ), not_quite_students as ( select distinct student_id from student_with_min_max_score where score = min_score or score = max_score ) select student_id, student_name from student where not exists ( select 1 from not_quite_students where student.student_id = not_quite_students.student_id ) and exists ( select 1 from exam where student.student_id = exam.student_id )
with students_ranking as( select s.student_id, s.student_name, rank() over(partition by exam_id order by score) as low, rank() over(partition by exam_id order by score desc) as high from Exam e inner join Student s using (student_id) ) select student_id, student_name from students_ranking group by 1, 2 having min(low) > 1 and min(high) > 1 order by 1
with students_with_min_max as ( select e1.student_id from exam e1 inner join ( select exam_id, min(score) as min_score, max(score) as max_score from exam group by exam_id ) e2 on e2.exam_id = e1.exam_id where e1.score = e2.min_score or e1.score = e2.max_score ), students_who_took_exam as ( select distinct student_id from exam ) select * from student s where s.student_id not in ( select * from students_with_min_max ) and s.student_id in ( select * from students_who_took_exam )
with sub as ( select s.student_id, s.student_name, dense_rank() over(partition by exam_id order by score desc) as hr, dense_rank() over(partition by exam_id order by score) as lr from student s inner join exam e using (student_id)) select student_id,student_name from sub group by student_id,student_name having least(min(hr),min(lr))>1 order by student_id
with sub as ( select s.student_id, s.student_name, dense_rank() over(partition by exam_id order by score desc) as hr, dense_rank() over(partition by exam_id order by score) as lr from student s inner join exam e using (student_id)) select student_id,student_name from sub group by student_id,student_name having min(least(hr,lr))>1 order by student_id
with t as ( SELECT exam_id, max(score) as max_score, min(score) as min_score FROM exam GROUP BY exam_id ) SELECT distinct student_id, student_name FROM Student WHERE student_id NOT IN ( SELECT student_id FROM exam LEFT JOIN t ON exam.exam_id = t.exam_id WHERE score = max_score OR score = min_score) AND student_id IN ( SELECT student_id FROM exam GROUP BY student_id HAVING COUNT(exam_id) >= 1)
with t as ( select *, max(score) over(partition by exam_id) as max_score, min(score) over(partition by exam_id) as min_score from exam ), t1 as ( select *, (case when score = min_score or score = max_score then 1 else 0 end) as flag from t ) select s.student_id,s.student_name from student s join t1 e on s.student_id = e.student_id group by 1,2 having sum(flag) = 0
with t as(select s.student_id, s.student_name, rank() over(partition by e.exam_id order by e.score desc) as ma, rank() over(partition by e.exam_id order by e.score asc) as mi from student s join exam e on s.student_id = e.student_id) select distinct s.student_id, s.student_name from student s join t on s.student_id=t.student_id where t.student_id not in ( select t.student_id from t where t.ma=1 or t.mi=1)
with t1 as ( select *, (case when score = max(score) over(partition by exam_id) or score = min(score) over(partition by exam_id) then 1 else 0 end) as flag from exam ) select s.student_id,s.student_name from student s join t1 e on s.student_id = e.student_id group by 1,2 having sum(flag) = 0
with t1 as (select exam_id, max(score) as max_score, min(score) as min_score from exam group by 1), t2 as (select student_id from exam where (exam_id, score) in (select exam_id, max_score from t1) or (exam_id, score) in (select exam_id, min_score from t1)) select student_id, student_name from student where student_id in (select distinct student_id from exam where student_id not in (select * from t2)) order by 1
with t1 as (select student_id from exam where (exam_id, score) in (select exam_id, max(score) from exam group by 1) or (exam_id, score) in (select exam_id, min(score) from exam group by 1)) select distinct a.student_id, student_name from exam a join student b on a.student_id = b.student_id where a.student_id not in (select * from t1) order by 1
with tem as( select exam_id, min(score) as min_score, max(score) as max_score from exam group by exam_id), tem1 as ( select student_id, count(exam_id) as total_exam_cnt, sum(case when score not in (min_score, max_score) then 1 else 0 end) as quiet_ind from (select a.*, b.min_score, b.max_score from exam a left join tem b on a.exam_id = b.exam_id) a group by student_id ) select student_id, student_name from student where student_id in ( select student_id from tem1 where quiet_ind = total_exam_cnt)
with temp as ( select Exam.*, student.student_name, max(score) over(partition by exam_id) as Max_score, min(score) over(partition by exam_id) as Min_score from exam left join student on exam.student_id = student.student_id ) select distinct(student_id), student_name from temp where student_id not in (select student_id from temp where score = max_score or score =min_score) order by student_id asc
with temp as ( select e.student_id, b.student_name, score, first_value(score) over(partition by exam_id order by score desc) as highest_score, first_value(score) over(partition by exam_id order by score) as lowest_score, sum(1) over(partition by student_id) tests_count from exam e join student b using (student_id) ) select distinct student_id, student_name from temp t left join (select distinct student_id from temp where score = highest_score) h using (student_id) left join (select distinct student_id from temp where score = lowest_score) l using (student_id) where h.student_id is null and l.student_id is null and t.tests_count >= 1
with temp as ( select student_id from exam where (exam_id, score) in (select exam_id, max(score) score from exam group by exam_id union select exam_id, min(score) score from exam group by exam_id)) select s.student_id STUDENT_ID, s.student_name STUDENT_NAME from student s where s.student_id not in ( select student_id from temp) and exists ( select 1 from exam e where s.student_id = e.student_id )
with temp as ( select student_id, exam_id, rank()over(partition by exam_id order by score desc) rnum_hi, rank()over(partition by exam_id order by score ) rnum_low from exam ) , hi_lo_stu as ( select distinct student_id from temp where rnum_hi=1 or rnum_low=1 ) select distinct e.student_id STUDENT_ID, s.student_name STUDENT_NAME from exam e INNER join student s on s.student_id=e.student_id where not exists ( select * from hi_lo_stu where hi_lo_stu.student_id=e.student_id ) order by 1
with temp as (select exam_id, exam.student_id, student_name, score , rank() over (partition by exam_id order by score) as rk1 , rank() over (partition by exam_id order by score desc) as rk2 from exam left join student on exam.student_id = student.student_id ) select distinct student_id, student_name from temp where student_id not in (select student_id from temp where rk1 = 1 or rk2 = 1) order by 1
with temp as (select student_id, rank() over(partition by exam_id order by score) as ranka, rank()over(partition by exam_id order by score DESC) as rankb from Exam) select Student.student_id, Student.student_name from Student where Student.student_id not in (select temp.student_id from temp where ranka=1 or rankb=1) and Student.student_id in (select Student.student_id from Student join Exam on Student.student_id=Exam.student_id)
with temp as( Select exam_id,max(score) as maxscore,min(score) as minscore from Exam group by exam_id ), non_quiet as ( Select e.exam_id,e.student_id as quietStudent from Exam e join temp t on e.exam_id=t.exam_id where e.score = t.maxscore or e.score=t.minscore ), quiet_student as ( Select student_id,student_name from Student where student_id not in (Select distinct(quietStudent) from non_quiet) ) Select distinct(e.student_id),q.student_name from Exam e join quiet_student q on e.student_id=q.student_id order by e.student_id
with tmp as ( select student_name, e.*, rank() over(partition by exam_id order by score desc) as exam_rank, rank() over(partition by exam_id order by score) as exam_rank_reverse from Student s right join Exam e on s.student_id = e.student_id ) select * from Student where student_id not in (select student_id from tmp where exam_rank = 1 or exam_rank_reverse = 1 union select student_id from Student where student_id not in (select student_id from Exam))
with tmp as (select *, case when score=highest or score=lowest then 'AO' else 'quiet' end as label from( select *, max(score) over (partition by exam_id) as highest, min(score) over (partition by exam_id) as lowest from exam order by 1,2) t ) select b.* from tmp a inner join student b on a.student_id=b.student_id group by 1,2 having sum(case when label='quiet' then 1 else 0 end)/count(*) = 1 order by 1
with tmp as (select a.*, b.student_name, rank() over(partition by exam_id order by score) as rnk_asc, rank() over(partition by exam_id order by score desc) as rnk_desc from exam a inner join student b using (student_id) ) select distinct student_id, student_name from tmp where student_id not in (select distinct student_id from tmp where rnk_asc =1 or rnk_desc =1) order by 1
with tmp as (select e.exam_id, e.student_id, s.student_name, e.score, RANK() OVER(partition by exam_id order by score desc) as highScore, RANK() OVER(partition by exam_id order by score) as lowScore from Exam as e left join Student as s using (student_id)) select distinct student_id, student_name from tmp where student_id not in (select student_id from tmp where highScore = 1 or lowScore = 1) order by student_id
with top_scores as ( SELECT exam_id , max(score) as max_score , min(score) as min_score FROM Exam GROUP BY exam_id ) SELECT s.student_id , s.student_name FROM ( SELECT e.exam_id , student_id , CASE when score = max_score or score = min_score then 0 else 1 end as quiet FROM Exam e JOIN top_scores t on e.exam_id = t.exam_id )t JOIN Student s on s.student_id = t.student_id GROUP BY s.student_id, s.student_name HAVING SUM(quiet) = COUNT(0) ORDER BY s.student_id
with x as (select e.student_id, e.exam_id, e.score , s.student_name , dense_rank() over(partition by e.exam_id order by e.score desc) as rnk_desc, dense_rank() over(partition by e.exam_id order by e.score asc) as rnk_asc from Exam as e left join Student as s on e.student_id = s.student_id ) select distinct student_id, student_name from x where student_id not in (select student_id from x where rnk_desc =1 or rnk_asc =1 ) order by student_id
with x as (select e.student_id, e.exam_id, e.score , s.student_name , dense_rank() over(partition by e.exam_id order by e.score desc) as rnk_desc, dense_rank() over(partition by e.exam_id order by e.score asc) as rnk_asc from Exam as e left join Student as s on e.student_id = s.student_id group by student_id, exam_id, score ) select distinct student_id, student_name from x where student_id not in (select student_id from x where rnk_desc =1 or rnk_asc =1 ) order by student_id
with x as (select e.student_id, e.exam_id, e.score , s.student_name , min(e.score) over(partition by e.exam_id ) as rnk_desc, max(e.score) over(partition by e.exam_id) as rnk_asc from Exam as e left join Student as s on e.student_id = s.student_id group by student_id, exam_id, score ) select distinct student_id, student_name from x where student_id not in (select student_id from x where score =rnk_desc or score = rnk_asc ) order by student_id
with x as (select e.student_id, e.exam_id, e.score , s.student_name , min(e.score) over(partition by e.exam_id ) as rnk_min, max(e.score) over(partition by e.exam_id) as rnk_max from Exam as e left join Student as s on e.student_id = s.student_id ) select distinct student_id, student_name from x where student_id not in (select student_id from x where score =rnk_min or score = rnk_max ) order by student_id
