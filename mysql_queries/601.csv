SELECT * FROM Stadium WHERE id IN ( (SELECT t1.id FROM stadium t1 JOIN stadium t2 ON t1.id = t2.id-1 JOIN stadium t3 ON t2.id = t3.id-1 WHERE t1.people >= 100 AND t2.people >= 100 AND t3.people >= 100) UNION (SELECT t2.id FROM stadium t1 JOIN stadium t2 ON t1.id = t2.id-1 JOIN stadium t3 ON t2.id = t3.id-1 WHERE t1.people >= 100 AND t2.people >= 100 AND t3.people >= 100) UNION (SELECT t3.id FROM stadium t1 JOIN stadium t2 ON t1.id = t2.id-1 JOIN stadium t3 ON t2.id = t3.id-1 WHERE t1.people >= 100 AND t2.people >= 100 AND t3.people >= 100) )
SELECT * from stadium s where s.people >= 100 and ((exists (select 1 from stadium s1 where (s.id+1 = s1.id) and s1.people >= 100) and exists (select 1 from stadium s2 where (s.id+2 = s2.id ) and s2.people >= 100)) or (exists (select 1 from stadium s3 where (s.id-1 = s3.id) and s3.people >= 100) and exists (select 1 from stadium s4 where (s.id-2 = s4.id ) and s4.people >= 100)) or (exists (select 1 from stadium s5 where (s.id-1 = s5.id) and s5.people >= 100) and exists (select 1 from stadium s6 where (s.id+1 = s6.id) and s6.people >= 100)))
SELECT DISTINCT S1.* FROM Stadium S1, Stadium S2, Stadium S3 WHERE S1.people >= 100 AND S2.people >= 100 AND S3.people >= 100 AND ( (S1.id + 1 = S2.id AND S2.id + 1 = S3.id) OR (S2.id + 1 = S1.id AND S1.id + 1 = S3.id) OR (S2.id + 1 = S3.id AND S3.id + 1 = S1.id) ) ORDER BY visit_date ASC
SELECT DISTINCT S1.* FROM Stadium s1, stadium s2, stadium s3 WHERE s1.people >=100 and s2.people >=100 and s3.people >=100 AND( (s1.id=s2.id-1 and s2.id=s3.id-1 ) or (s2.id=s3.id-1 and s3.id=s1.id-1 ) or (s3.id = s1.id-1 and s1.id=s2.id-1 ) ) ORDER BY S1.ID
SELECT DISTINCT S1.* FROM stadium S1 JOIN stadium S2 JOIN stadium S3 ON ((S1.id = S2.id + 1 AND S1.id = S3.id +2) OR (S2.id = S1.id + 1 AND S2.id = S3.id +2) OR (S3.id = S2.id + 1 AND S3.id = S1.id +2)) WHERE S1.people >= 100 AND S2.people >= 100 AND S3.people >= 100 ORDER BY S1.id
SELECT DISTINCT S1.* FROM stadium S1 JOIN stadium S2 JOIN stadium S3 ON ((S1.id = S2.id - 1 AND S1.id = S3.id -2) OR (S1.id = S2.id + 1 AND S1.id = S3.id +2) OR (S1.id = S2.id - 1 AND S1.id = S3.id +1)) WHERE S1.people >= 100 AND S2.people >= 100 AND S3.people >= 100 ORDER BY S1.id
SELECT DISTINCT S1.* FROM stadium S1 JOIN stadium S2 JOIN stadium S3 ON ((S1.id = S2.id - 1 AND S1.id = S3.id -2) OR (S1.id = S2.id + 1 AND S1.id = S3.id -1) OR (S1.id = S2.id + 2 AND S1.id = S3.id +1)) WHERE S1.people >= 100 AND S2.people >= 100 AND S3.people >= 100 ORDER BY S1.id
SELECT DISTINCT S1.* FROM stadium S1 JOIN stadium S2 JOIN stadium S3 ON ((S1.id = S2.id - 1 AND S1.id = S3.id -2) OR (S3.id = S1.id - 1 AND S3.id = S2.id -2) OR (S3.id = S2.id - 1 AND S3.id = S1.id -2)) WHERE S1.people >= 100 AND S2.people >= 100 AND S3.people >= 100 ORDER BY S1.id
SELECT DISTINCT S1.* FROM stadium S1,stadium S2,stadium S3 WHERE ((S1.id = S2.id - 1 AND S1.id = S3.id -2) OR (S3.id = S1.id - 1 AND S3.id = S2.id -2) OR (S3.id = S2.id - 1 AND S3.id = S1.id -2)) AND S1.people >= 100 AND S2.people >= 100 AND S3.people >= 100 ORDER BY S1.id
SELECT DISTINCT a.id, a.visit_date as visit_date, a.people as people FROM Stadium as a JOIN Stadium as b JOIN Stadium as c ON a.people >= 100 and b.people >= 100 and c.people >= 100 AND ((a.id - b.id = 1 AND a.id - c.id = 2) OR (a.id - b.id = -1 AND a.id - c.id = -2) OR (a.id - b.id = -1 AND a.id - c.id = 1)) ORDER BY a.visit_date
SELECT DISTINCT a.id, a.visit_date, a.people FROM Stadium AS a, Stadium AS b, Stadium AS c WHERE a.people>=100 AND b.people>=100 AND c.people>=100 AND ( (a.id-b.id = 1 AND a.id-c.id = 2) OR (a.id-b.id = 1 AND a.id-c.id = -1) OR (a.id-b.id = -1 AND a.id-c.id = -2) ) ORDER BY visit_date
SELECT DISTINCT a.id, a.visit_date, a.people FROM Stadium a, Stadium b, Stadium c WHERE a.people >= 100 and b.people >= 100 and c.people >= 100 and (( a.id = b.id-1 and b.id = c.id-1) or (a.id = b.id+1 and a.id = c.id-1) or (c.id = b.id+1 and a.id = c.id+1)) ORDER BY a.visit_date
SELECT DISTINCT s.* FROM( SELECT *, LEAD(people, 1) OVER (ORDER BY visit_date) AS next_people1, LEAD(people, 2) OVER (ORDER BY visit_date) AS next_people2 FROM Stadium) c JOIN Stadium s ON s.id BETWEEN c.id AND c.id+2 WHERE c.people>=100 AND c.next_people1>=100 AND c.next_people2>=100 ORDER BY s.visit_date
SELECT DISTINCT s0.* FROM Stadium AS s0, Stadium AS s1, Stadium AS s2 WHERE s0.people >= 100 AND s1.people >= 100 AND s2.people >= 100 AND ( (s0.id + 1 = s1.id AND s0.id + 2 = s2.id) OR (s0.id - 1 = s1.id AND s0.id + 1 = s2.id) OR (s0.id - 1 = s1.id AND s0.id - 2 = s2.id) ) ORDER BY visit_date
SELECT DISTINCT s1.* FROM STADIUM s1 JOIN STADIUM s2 JOIN STADIUM s3 ON( s1.id=s2.id-1 AND s1.id=s3.id-2) OR ( s1.id=s2.id+1 AND s1.id=s3.id-1) OR ( s1.id=s2.id+1 AND s1.id=s3.id+2) WHERE s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100 ORDER BY visit_date
SELECT DISTINCT s1.* FROM Stadium AS s1, Stadium AS s2, Stadium AS s3 WHERE s1.people >=100 AND s2.people >=100 AND s3.people >=100 AND ((s1.id+1 = s2.id AND s1.id+2 = s3.id) OR (s1.id-1 = s2.id AND s1.id+1 = s3.id) OR (s1.id-2 = s2.id AND s1.id-1 = s3.id)) ORDER BY s1.visit_date
SELECT DISTINCT s1.* FROM Stadium s1 JOIN Stadium s2 JOIN Stadium s3 ON (s1.id + 1 = s2.id AND s1.id + 2 = s3.id) OR (s1.id - 1 = s2.id AND s1.id + 1 = s3.id) OR (s1.id - 2 = s2.id AND s1.id - 1 = s3.id) WHERE s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100 ORDER BY visit_date
SELECT DISTINCT s1.* FROM Stadium s1, Stadium s2, Stadium s3 WHERE ((s1.id = s2.id - 1 AND s1.id = s3.id - 2 ) OR (s3.id = s1.id - 1 AND s3.id = s2.id - 2 ) OR (s2.id = s3.id - 1 AND s2.id = s1.id - 2 )) AND s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100 ORDER BY s1.id
SELECT DISTINCT s1.* FROM Stadium s1, Stadium s2, Stadium s3 WHERE (s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100) AND ( ( s2.id = s1.id + 1 AND s3.id = s1.id + 2 ) OR ( s2.id = s1.id - 1 AND s3.id = s1.id + 1 ) OR ( s2.id = s1.id - 1 AND s3.id = s1.id - 2 ) ) ORDER BY s1.visit_date ASC
SELECT DISTINCT s1.* FROM stadium AS s1, stadium AS s2, stadium as s3 WHERE ((s1.id + 1 = s2.id AND s1.id + 2 = s3.id) OR (s1.id - 1 = s2.id AND s1.id + 1 = s3.id) OR (s1.id - 2 = s2.id AND s1.id - 1 = s3.id) ) AND s1.people>=100 AND s2.people>=100 AND s3.people>=100 ORDER BY s1.id
SELECT DISTINCT s1.id ,s1.visit_date ,s1.people FROM Stadium s1, Stadium s2, Stadium s3 WHERE ( (s1.id = s2.id - 1 AND s2.id = s3.id - 1) OR (s2.id = s1.id - 1 AND s1.id = s3.id - 1) OR (s2.id = s3.id - 1 AND s3.id = s1.id - 1) ) AND s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100 ORDER BY s1.visit_date
SELECT DISTINCT s1.id, s1.visit_date, s1.people FROM Stadium AS s1 JOIN Stadium AS s2 JOIN Stadium AS s3 ON ((s1.id = s2.id-1 AND s1.id = s3.id+1) OR (s1.id = s2.id+1 AND s1.id = s3.id+2) OR(s1.id = s2.id-1 AND s1.id = s3.id-2)) WHERE s1.people >= 100 AND s2.people >=100 AND s3.people >= 100 ORDER BY s1.id
SELECT DISTINCT t1.* FROM Stadium t1, Stadium t2, Stadium t3 WHERE t1.people >= 100 and t2.people >= 100 and t3.people >= 100 AND ( (t1.id = t2.id-1 and t2.id = t3.id - 1) OR (t1.id = t2.id+1 and t2.id = t3.id + 1) OR (t1.id = t2.id+1 and t1.id = t3.id-1) ) ORDER BY id asc
SELECT DISTINCT t1.* FROM Stadium t1, Stadium t2, Stadium t3 WHERE t1.people >=100 AND t2.people >=100 AND t3.people >=100 AND ((t1.id = t2.id-1 and t2.id = t3.id-1 and t1.id=t3.id-2) OR (t2.id=t1.id-1 and t1.id=t3.id-1 and t2.id=t3.id-2) or (t3.id = t2.id-1 and t2.id = t1.id-1 and t3.id = t1.id -2)) Order by t1.id
SELECT DISTINCT t1.* FROM stadium t1, stadium t2, stadium t3 WHERE t1.people >= 100 AND t2.people>=100 AND t3.people>=100 AND ( (t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id =1) or (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id =1) or (t3.id - t2.id = 1 and t2.id - t1.id =1 and t3.id - t1.id = 2) ) ORDER BY t1.id
SELECT ID , visit_date , people FROM ( SELECT ID , visit_date , people , LEAD(people, 1) OVER (ORDER BY id) nxt , LEAD(people, 2) OVER (ORDER BY id) nxt2 , LAG(people, 1) OVER (ORDER BY id) pre , LAG(people, 2) OVER (ORDER BY id) pre2 FROM Stadium ) cte WHERE (cte.people >= 100 AND cte.nxt >= 100 AND cte.nxt2 >= 100) OR (cte.people >= 100 AND cte.nxt >= 100 AND cte.pre >= 100) OR (cte.people >= 100 AND cte.pre >= 100 AND cte.pre2 >= 100)
SELECT ID, VISIT_DATE, PEOPLE FROM (SELECT ID , VISIT_DATE , PEOPLE , LAG(PEOPLE) OVER (ORDER BY ID) AS PREV1 , LAG(PEOPLE,2) OVER (ORDER BY ID) AS PREV2 , LEAD(PEOPLE) OVER (ORDER BY ID) AS NEXT1 , LEAD(PEOPLE,2) OVER (ORDER BY ID) AS NEXT2 FROM STADIUM) AS SUB WHERE PEOPLE >=100 AND (PREV1 >= 100 AND PREV2 >= 100) OR PEOPLE >=100 AND (PREV1 >= 100 AND NEXT1 >= 100) OR PEOPLE >= 100 AND (NEXT1 >= 100 AND NEXT2 >= 100)
SELECT a.* FROM stadium a LEFT JOIN stadium b ON a.id=(b.id-2) LEFT JOIN stadium c ON a.id=(c.id-1) LEFT JOIN stadium d ON (a.id)=(d.id+1) LEFT JOIN stadium e ON (a.id)=(e.id+2) WHERE (a.people>=100 AND b.people>=100 AND c.people>=100) OR (a.people>=100 AND c.people>=100 AND d.people>=100) OR (a.people>=100 AND d.people>=100 AND e.people>=100)
SELECT distinct s1.* FROM Stadium s1, Stadium s2, Stadium s3 WHERE s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and ( (s1.id - s2.id = 1 and s1.id - s3.id = 2 and s2.id - s3.id = 1) or (s2.id - s1.id = 1 and s2.id - s3.id = 2 and s1.id - s3.id = 1) or (s3.id - s2.id = 1 and s2.id - s1.id = 1 and s3.id - s1.id = 2) ) order by s1.id
SELECT distinct s1.* FROM stadium AS s1, stadium AS s2, stadium as s3 WHERE ((s1.id + 1 = s2.id AND s1.id + 2 = s3.id) OR (s1.id - 1 = s2.id AND s1.id + 1 = s3.id) OR (s1.id - 2 = s2.id AND s1.id - 1 = s3.id) ) AND s1.people>=100 AND s2.people>=100 AND s3.people>=100 order by s1.id
SELECT distinct s1.id, s1.visit_date, s1.people FROM stadium as s1, stadium as s2, stadium as s3 WHERE ((s1.id - s2.id = 1 and s1.id - s3.id = 2) or (s1.id-s2.id = -1 and s1.id - s3.id = 1) or (s1.id-s2.id = -2 and s1.id - s3.id = -1)) and (s1.people >=100 and s2.people>=100 and s3.people>=100) order by s1.id
SELECT distinct t1.* FROM stadium t1, stadium t2, stadium t3 WHERE t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id = 1) or (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id = 1) or (t3.id - t2.id = 1 and t2.id - t1.id = 1 and t3.id - t1.id = 2) ) order by t1.id
SELECT id ,visit_date ,people FROM( SELECT id ,visit_date ,people ,LEAD(people, 1) OVER (ORDER BY id) nxt ,LEAD(people, 2) OVER (ORDER BY id) nxt2 ,LAG(people, 1) OVER (ORDER BY id) pre ,LAG(people, 2) OVER (ORDER BY id) pre2 FROM Stadium) tmp WHERE (tmp.people >= 100 AND tmp.nxt >= 100 AND nxt2 >= 100) OR (tmp.people >= 100 AND tmp.pre >= 100 AND tmp.nxt >= 100) OR (tmp.people >= 100 AND tmp.pre >= 100 AND tmp.pre2 >= 100)
SELECT id, visit_date, people FROM ( SELECT *, LEAD(people) OVER(ORDER BY visit_date) as next1, LEAD(people,2) OVER(ORDER BY visit_date) as next2, LAG(people) OVER(ORDER BY visit_date) as pre1, LAG(people,2) OVER(ORDER BY visit_date) as pre2 FROM Stadium ) temp WHERE (people >= 100 AND next1 >= 100 AND next2 >= 100) OR (people >= 100 AND pre1 >= 100 AND pre2 >= 100) OR (people >= 100 AND pre1 >= 100 AND next1 >= 100) ORDER BY id
SELECT id, visit_date, people FROM ( SELECT id, visit_date, people, count(*) OVER (PARTITION BY DIFF) as ct from (SELECT id, visit_date, people, (id-row_number() over (order by visit_date)) as diff from stadium where people>=100) x) y where ct>=3
SELECT id, visit_date, people FROM ( SELECT id, visit_date, people, count(*) OVER (PARTITION BY DIFF) as ct from (SELECT id, visit_date, people, (id-row_number() over (order by visit_date, Id)) as diff from stadium where people>=100) x) y where ct>=3
SELECT id, visit_date, people FROM (SELECT a.id, a.visit_date, a.people FROM Stadium a, Stadium b, Stadium c WHERE a.people >= 100 AND b.people >= 100 AND c.people >= 100 AND ((a.id = b.id - 1 AND a.id = c.id - 2) OR (a.id = b.id + 1 AND a.id = c.id - 1) OR (a.id = b.id + 2 AND a.id = c.id + 1))) d GROUP BY id, visit_date, people ORDER BY id
SELECT id, visit_date, people FROM (SELECT id, visit_date, people, lead(people) OVER (ORDER BY id ASC) as next1, lead(people,2) OVER (ORDER BY id ASC ) as next2, lag(people) OVER (ORDER BY id ASC) as prev1, lag(people,2) OVER (ORDER BY id ASC ) as prev2 FROM stadium ) AS cons_sal WHERE (people>=100 and next1>=100 and next2>=100) or (people>=100 and prev1>=100 and prev2>=100) or ((people >=100 and next1 >= 100 and prev1 >= 100))
SELECT id, visit_date, people FROM stadium WHERE 3 <= ( SELECT COUNT(s.people) FROM stadium AS s WHERE s.people >= 100 AND s.id >= stadium.id AND s.id <= stadium.id+2 ) OR 3 <= ( SELECT COUNT(s.people) FROM stadium AS s WHERE s.people >= 100 AND s.id >= stadium.id-1 AND s.id <= stadium.id+1 ) OR 3 <= ( SELECT COUNT(s.people) FROM stadium AS s WHERE s.people >= 100 AND s.id >= stadium.id-2 AND s.id <= stadium.id )
SELECT id,visit_date,people FROM ( SELECT id,visit_date,people, LEAD(people,1) OVER (ORDER BY id ) as nex, LEAD(people,2) OVER (ORDER BY id ) as nex2, LAG(people,1) OVER (ORDER BY id ) as pre, LAG(people,2) OVER (ORDER BY id ) as pre2 FROM Stadium ) as temp WHERE (temp.people >= 100 AND temp.nex>=100 AND temp.nex2>=100) OR (temp.people >= 100 AND temp.pre>=100 AND temp.pre2>=100) OR (temp.people >= 100 AND temp.pre>=100 AND temp.nex>=100)
SELECT s1.* FROM Stadium AS s1, Stadium AS s2, Stadium AS s3 WHERE ((s1.id + 1 = s2.id AND s1.id + 2 = s3.id) OR (s1.id - 1 = s2.id AND s1.id + 1 = s3.id) OR (s1.id - 2 = s2.id AND s1.id - 1 = s3.id)) AND s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100 GROUP BY s1.id ORDER BY visit_date
SELECT s1.* FROM Stadium s1 ,Stadium s2 ,Stadium s3 WHERE s1.people>=100 AND s2.people>=100 AND s3.people>=100 AND( (s1.id-s2.id=1 AND s1.id-s3.id=2 AND s2.id-s3.id=1) OR (s2.id-s1.id=1 AND s2.id-s3.id=2 AND s1.id-s3.id=1) OR (s3.id-s2.id=1 AND s3.id-s1.id=2 AND s2.id-s1.id=1) ) GROUP BY s1.id ORDER BY s1.id
SELECT s1.* FROM stadium AS s1, stadium AS s2, stadium as s3 WHERE ((s1.id + 1 = s2.id AND s1.id + 2 = s3.id) OR (s1.id - 1 = s2.id AND s1.id + 1 = s3.id) OR (s1.id - 2 = s2.id AND s1.id - 1 = s3.id) ) AND s1.people>=100 AND s2.people>=100 AND s3.people>=100 GROUP BY s1.id ORDER BY s1.id
SELECT s1.* FROM stadium AS s1, stadium AS s2, stadium as s3 WHERE ((s1.id + 1 = s2.id AND s1.id + 2 = s3.id) OR (s1.id - 1 = s2.id AND s1.id + 1 = s3.id) OR (s1.id - 2 = s2.id AND s1.id - 1 = s3.id) ) AND s1.people>=100 AND s2.people>=100 AND s3.people>=100 GROUP BY s1.id order by s1.id
SELECT s1.* FROM stadium AS s1, stadium AS s2, stadium as s3 WHERE ((s1.id + 1 = s2.id AND s1.id + 2 = s3.id) OR (s1.id - 1 = s2.id AND s1.id + 1 = s3.id) OR (s1.id - 2 = s2.id AND s1.id - 1 = s3.id) ) AND s1.people>=100 AND s2.people>=100 AND s3.people>=100 GROUP BY s1.id order by s1.visit_date
SELECT s1.id, s1.visit_date, s1.people FROM Stadium AS s1 WHERE s1.people >= 100 AND ((100 <= (SELECT people FROM Stadium WHERE id = s1.id+1) AND 100 <= (SELECT people FROM Stadium WHERE id = s1.id+2)) OR (100 <= (SELECT people FROM Stadium WHERE id = s1.id-1) AND 100 <= (SELECT people FROM Stadium WHERE id = s1.id-2)) OR (100 <= (SELECT people FROM Stadium WHERE id = s1.id-1) AND 100 <= (SELECT people FROM Stadium WHERE id = s1.id+1)))
SELECT s3.id, s3.visit_date, s3.people FROM stadium s3 LEFT JOIN stadium s1 ON s1.id = s3.id - 2 LEFT JOIN stadium s2 ON s2.id = s3.id - 1 LEFT JOIN stadium s4 ON s4.id = s3.id + 1 LEFT JOIN stadium s5 ON s5.id = s3.id + 2 WHERE LEAST(s1.people, s2.people, s3.people) >= 100 OR LEAST(s2.people, s3.people, s4.people) >= 100 OR LEAST(s3.people, s4.people, s5.people) >= 100 ORDER BY s3.id
SELECT t1.id, t1.visit_date, t1.people FROM stadium t1 LEFT JOIN stadium t2 ON t2.id = t1.id+1 LEFT JOIN stadium t3 ON t3.id = t1.id+2 WHERE t1.people > 99 AND t2.people > 99 AND t3.people > 99 UNION SELECT t1.id, t1.visit_date, t1.people FROM stadium t1 LEFT JOIN stadium t2 ON t2.id = t1.id-1 LEFT JOIN stadium t3 ON t3.id = t1.id+1 WHERE t1.people > 99 AND t2.people > 99 AND t3.people > 99 UNION SELECT t1.id, t1.visit_date, t1.people FROM stadium t1 LEFT JOIN stadium t2 ON t2.id = t1.id-1 LEFT JOIN stadium t3 ON t3.id = t1.id-2 WHERE t1.people > 99 AND t2.people > 99 AND t3.people > 99 ORDER BY id
SELECT t3.id, t3.visit_date, t3.people FROM (SELECT rdiff, count(*) as cnt FROM (SELECT *, id - ROW_NUMBER() OVER (ORDER BY visit_date) as rdiff FROM Stadium WHERE people >= 100 ORDER BY visit_date ) t GROUP BY rdiff HAVING cnt >= 3) t2, (SELECT *, id - ROW_NUMBER() OVER (ORDER BY visit_date) as rdiff FROM Stadium WHERE people >= 100 ORDER BY visit_date) t3 WHERE t3.rdiff = t2.rdiff
Select T4.id,visit_date, people from Stadium T4 Join( Select T1.id from Stadium T1 join Stadium T2 ON T1.id=T2.id+1 join Stadium T3 ON T1.id=T3.id+2 where T1.people >=100 and T2.people>=100 and T3.people>=100 union Select T2.id from Stadium T1 join Stadium T2 ON T1.id=T2.id+1 join Stadium T3 ON T1.id=T3.id+2 where T1.people >=100 and T2.people>=100 and T3.people>=100 union Select T3.id from Stadium T1 join Stadium T2 ON T1.id=T2.id+1 join Stadium T3 ON T1.id=T3.id+2 where T1.people >=100 and T2.people>=100 and T3.people>=100 )T5 ON T4.id=T5.id order by visit_date
Select al.id, al.visit_date, al.people From ( select count(1) over() as 'total', a.* from ( Select t.id, t.visit_date, t.people from ( Select *, lead(people, 1, '') over (order by id) as 'lead1', lead(people, 2, '') over (order by id) as 'lead2', lag(people, 1, '') over (order by id) as 'lag1', lag(people, 2, '') over (order by id) as 'lag2' from Stadium order by id asc )t where (t.lead1 >=100 and t.lead2 >=100 and t.people >=100) or (t.lag1 >=100 and t.lag2 >=100 and t.people >=100) or (t.lag1 >=100 and t.lead1 >=100 and t.people >=100) order by t.visit_date asc ) a ) al where al.total >=3 order by al.visit_date asc
Select distinct s1.* from Stadium s1, Stadium s2, Stadium s3 where s1.people >=100 and s2.people >= 100 and s3.people >= 100 and ( (s1.Id+1 = s2.Id and s2.Id+1 = s3.Id and s1.Id+2 = s3.Id) or ( s1.Id = s2.Id+1 and s1.Id+1 = s3.Id and s2.Id+2 = s3.Id) or (s1.Id = s2.Id+1 and s2.id = s3.id+1 and s3.id+2 = s1.id) ) order by s1.visit_date asc
Select id, visit_date, people from ( select s1.* from Stadium s1, Stadium s2, Stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and s1.id+1 = s2.id and s2.id+1 = s3.id UNION select s2.* from Stadium s1, Stadium s2, Stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and s1.id+1 = s2.id and s2.id+1 = s3.id UNION select s3.* from Stadium s1, Stadium s2, Stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and s1.id+1 = s2.id and s2.id+1 = s3.id ) as t order by visit_date
Select id,visit_date, people from Stadium where id in( Select T1.id from Stadium T1 join Stadium T2 ON T1.id=T2.id+1 join Stadium T3 ON T1.id=T3.id+2 where T1.people >=100 and T2.people>=100 and T3.people>=100 union Select T2.id from Stadium T1 join Stadium T2 ON T1.id=T2.id+1 join Stadium T3 ON T1.id=T3.id+2 where T1.people >=100 and T2.people>=100 and T3.people>=100 union Select T3.id from Stadium T1 join Stadium T2 ON T1.id=T2.id+1 join Stadium T3 ON T1.id=T3.id+2 where T1.people >=100 and T2.people>=100 and T3.people>=100 ) order by visit_date
WITH CTE AS ( SELECT *, id - ROW_NUMBER() OVER(ORDER BY id) AS diff FROM Stadium WHERE people >= 100 ) SELECT id, visit_date, people FROM CTE WHERE diff IN ( SELECT diff FROM CTE GROUP BY 1 HAVING COUNT(*) >= 3 ) ORDER BY 2
WITH CTE AS ( SELECT id - ROW_NUMBER() OVER (ORDER BY id) DIFF ,id ,visit_date ,people FROM Stadium WHERE people >= 100 ) SELECT id ,visit_date ,people FROM CTE WHERE DIFF IN (SELECT DIFF FROM CTE GROUP BY DIFF HAVING COUNT(*) >= 3)
WITH CTE AS ( SELECT id, visit_date, people, LAG(people,1) OVER(ORDER BY visit_date ASC) as lag_people_1, LAG(people,2) OVER(ORDER BY visit_date ASC) as lag_people_2, LAG(id, 1) OVER(ORDER BY visit_date ASC) as lag_id_1, LAG(id, 2) OVER(ORDER BY visit_date ASC) as lag_id_2 FROM Stadium ) SELECT * FROM Stadium WHERE id IN ( SELECT id FROM CTE WHERE people >= 100 AND lag_people_1 >= 100 AND lag_people_2 >= 100 UNION SELECT lag_id_1 FROM CTE WHERE people >= 100 AND lag_people_1 >= 100 AND lag_people_2 >= 100 UNION SELECT lag_id_2 FROM CTE WHERE people >= 100 AND lag_people_1 >= 100 AND lag_people_2 >= 100) ORDER BY 2
WITH CTE AS ( SELECT id, visit_date, people,id - ROW_NUMBER() OVER(ORDER BY s.id) AS diff FROM Stadium s WHERE s.people >= 100 ) SELECT id, visit_date, people FROM CTE WHERE diff IN (SELECT diff FROM CTE GROUP BY diff HAVING COUNT(diff) >= 3)
WITH CTE AS ( Select A.id as AID, A.visit_date as AVD, A.people as AP, B.id as BID, B.visit_date as BVD, B.people as BP, C.id as CID, C.visit_date as CVD, C.people as CP From Stadium A JOIN Stadium B ON A.id + 1 = B.id JOIN Stadium C ON B.id + 1 = C.id Where A.people >= 100 and B.people >= 100 and C.people >= 100 ) Select AID as id, AVD as visit_date ,AP as people from CTE UNION Select BID as id, BVD as visit_date ,BP as people from CTE Union Select CID as id,CVD as visit_date ,CP as people from CTE Order by visit_date
WITH CTE AS (SELECT id, visit_date, people, rnk, (id - rnk) as island FROM ( SELECT id, visit_date, people, rank()over(order by id) as rnk FROM Stadium WHERE people >=100)a) SELECT id, visit_date ,people FROM CTE WHERE island IN (SELECT island FROM CTE GROUP BY island HAVING COUNT(*) >=3)
WITH CTE AS (Select *,Case when people > 99 then 1 else NULL End AS Attended From Stadium ) Select id,visit_date,people From( SELECT * , Sum(Attended) Over(Order By id rows BETWEEN CURRENT ROW AND 2 FOLLOWING ) AS Cons_f , Sum(Attended) Over(Order By id rows 2 PRECEDING ) AS Cons_p , Sum(Attended) Over(Order By id rows BETWEEN 1 PRECEDING AND 1 FOLLOWING ) AS Cons_m From CTE ) AS ABC Where Cons_f = 3 OR Cons_p =3 OR Cons_m =3 Order by visit_date
WITH DailyTraffic AS (SELECT id ,visit_date ,LAG(people,2,-1) OVER(ORDER BY visit_date ASC) AS 2Before ,LAG(people,1,-1) OVER(ORDER BY visit_date ASC) AS 1Before ,people AS Today ,LEAD(people,1,-1) OVER(ORDER BY visit_date ASC) AS 1After ,LEAD(people,2,-1) OVER(ORDER BY visit_date ASC) AS 2After FROM Stadium) SELECT id ,visit_date ,Today AS people FROM DailyTraffic WHERE (2Before >= 100 AND 1Before >= 100 AND Today >= 100) OR (1Before >= 100 AND Today >= 100 AND 1After >= 100) OR (Today >= 100 AND 1After >= 100 AND 2After >= 100)
WITH GroupedStadium AS ( SELECT id - row_number() over (order by id) as "stadium_group", id, visit_date, people FROM Stadium WHERE people >= 100 ), GroupedStadiumWithCount AS ( SELECT stadium_group, id, visit_date, people, count(id) over (partition by stadium_group) as "records" FROM GroupedStadium ) SELECT id, visit_date, people FROM GroupedStadiumWithCount WHERE records >= 3
WITH OrderedStadium AS ( SELECT id, visit_date, people, RANK() OVER (ORDER BY id ASC) / -1 AS 'rank' FROM Stadium ) SELECT DISTINCT A.id, A.visit_date, A.people FROM OrderedStadium AS A, OrderedStadium AS B, OrderedStadium AS C WHERE A.people >= 100 AND B.people >= 100 AND C.people >= 100 AND (A.rank - B.rank = 1 AND B.rank - C.rank = 1 OR B.rank - A.rank = 1 AND A.rank - C.rank = 1 OR C.rank - B.rank = 1 AND B.rank - A.rank = 1) ORDER BY A.id ASC
WITH StadiumFilter AS ( SELECT id, id - ROW_NUMBER() OVER (ORDER BY id) AS PartitionNums FROM Stadium WHERE people >= 100 ), StadiumIds AS ( SELECT id FROM StadiumFilter WHERE PartitionNums IN ( SELECT PartitionNums FROM StadiumFilter GROUP BY PartitionNums HAVING COUNT(*) >= 3 ) ) SELECT id, visit_date, people FROM Stadium WHERE id IN (SELECT id FROM StadiumIds)
WITH StadiumFilter AS ( SELECT id, id - ROW_NUMBER() OVER (ORDER BY id) AS PartitionNums FROM Stadium WHERE people >= 100 ), StadiumIds AS ( SELECT id FROM StadiumFilter WHERE PartitionNums IN ( SELECT PartitionNums FROM StadiumFilter GROUP BY PartitionNums HAVING COUNT(*) >= 3 ) ) SELECT t1.id, t1.visit_date, t1.people FROM Stadium t1 INNER JOIN StadiumIds t2 ON t1.id = t2.id
WITH T AS ( SELECT ID, VISIT_DATE, PEOPLE, ID - ROW_NUMBER() OVER(ORDER BY ID) R FROM STADIUM WHERE PEOPLE >= 100 ) SELECT ID, VISIT_DATE, PEOPLE FROM T WHERE R IN (SELECT R FROM T GROUP BY R HAVING COUNT(R) >= 3)
WITH T AS ( SELECT ID, VISIT_DATE, PEOPLE, ID - ROW_NUMBER() OVER(ORDER BY ID) R FROM STADIUM WHERE PEOPLE >= 100 ) select id,visit_date,people from T where r in (select r from T group by r having count(r)>=3)
WITH T AS ( SELECT ID, VISIT_DATE, PEOPLE, ID - ROW_NUMBER() OVER(ORDER BY ID) R FROM Stadium WHERE PEOPLE >= 100 ) SELECT ID, VISIT_DATE, PEOPLE FROM T WHERE R IN (SELECT R FROM T GROUP BY R HAVING COUNT(R) >= 3)
WITH TB AS (SELECT * FROM Stadium WHERE people>=100) SELECT * FROM TB WHERE id+1 IN (SELECT id FROM TB) AND id+2 IN (SELECT id FROM TB) OR id+1 IN (SELECT id FROM TB) AND id-1 IN (SELECT id FROM TB) OR id-1 IN (SELECT id FROM TB) AND id-2 IN (SELECT id FROM TB)
WITH TEMP AS (SELECT ID, VISIT_DATE, PEOPLE, ID-ROW_NUMBER() OVER (ORDER BY ID) AS GRP FROM STADIUM WHERE PEOPLE>=100), TEMP2 AS (SELECT ID, VISIT_DATE, PEOPLE, COUNT(ID) OVER (PARTITION BY GRP) AS CNT FROM TEMP) SELECT ID, VISIT_DATE, PEOPLE FROM TEMP2 WHERE CNT >= 3 ORDER BY 2
WITH T_100 AS( SELECT id FROM Stadium WHERE people >= 100 ) SELECT * FROM Stadium WHERE id IN ( SELECT id FROM T_100 WHERE (id+1 in (SELECT id FROM T_100) AND id+2 in (SELECT id FROM T_100)) OR (id-1 in (SELECT id FROM T_100) AND id+1 in (SELECT id FROM T_100)) OR (id-1 in (SELECT id FROM T_100) AND id-2 in (SELECT id FROM T_100)) )
WITH a AS ( SELECT id, visit_date, people, LAG(id,2) OVER(ORDER BY visit_date) AS before_yesterday, LAG(id,1) OVER(ORDER BY visit_date) AS yesterday, LEAD(id,1) OVER(ORDER BY visit_date) AS tmr, LEAD(id,2) OVER(ORDER BY visit_date) AS day_after_tmr FROM Stadium WHERE people >= 100 ORDER BY id ) SELECT a.id, a.visit_date, a.people FROM a WHERE (a.id+1=a.tmr AND a.id+2=a.day_after_tmr) OR (a.id-1=a.yesterday AND a.id+1=a.tmr) OR (a.id-2=a.before_yesterday AND a.id-1=a.yesterday)
WITH a AS (SELECT *, id - row_number()over(order by id) as r FROM stadium WHERE people >= 100) SELECT id, visit_date, people FROM a WHERE r IN (SELECT r FROM (SELECT r, count(*) as rnum FROM a GROUP BY r) b WHERE rnum >= 3)
WITH check_consecutive AS (SELECT ROW_NUMBER() OVER(ORDER BY id) AS rownumber, id, visit_date, people FROM Stadium WHERE people >= 100) SELECT id, visit_date, people FROM check_consecutive WHERE id-rownumber IN (SELECT (id - rownumber) FROM check_consecutive GROUP BY (id - rownumber) HAVING COUNT(*) >= 3)
WITH consecutiveDayAnalysis AS (SELECT id ,visit_date ,LAG(people,2,-1) OVER(ORDER BY id ASC) 2DaysBeforeCrowd ,LAG(people,1,-1) OVER(ORDER BY id ASC) 1DayBeforeCrowd ,people AS TodayCrowd ,LEAD(people,1,-1) OVER(ORDER BY id ASC) 1DayAfterCrowd ,LEAD(people,2,-1) OVER(ORDER BY id ASC) 2DaysAfterCrowd FROM Stadium) SELECT id ,visit_date ,TodayCrowd AS people FROM consecutiveDayAnalysis WHERE (2DaysBeforeCrowd >= 100 AND 1DayBeforeCrowd >= 100 AND TodayCrowd >= 100) OR (1DayBeforeCrowd >= 100 AND TodayCrowd >= 100 AND 1DayAfterCrowd >= 100) OR (TodayCrowd >= 100 AND 1DayAfterCrowd >= 100 AND 2DaysAfterCrowd >= 100)
WITH cte AS ( SELECT id, visit_date, people, LAG(people,1) OVER(ORDER BY id) lag1, LAG(people,2) OVER(ORDER BY id) lag2 FROM Stadium) SELECT DISTINCT s.id, s.visit_date, s.people FROM Stadium s JOIN cte c ON s.id BETWEEN c.id - 2 AND c.id WHERE c.lag1 >= 100 and c.lag2 >= 100 and c.people >= 100
WITH cte AS ( SELECT id, visit_date, people, ROW_NUMBER() OVER (ORDER BY id) AS idx FROM Stadium WHERE people >= 100) SELECT id, visit_date, people FROM cte WHERE (id - idx) IN (SELECT (id - idx) FROM cte GROUP BY (id - idx) HAVING COUNT(id - idx) >= 3)
WITH cte AS ( SELECT id, visit_date, people, id - ROW_NUMBER() OVER(ORDER BY id) AS row_num FROM Stadium WHERE people >= 100) SELECT id, visit_date, people FROM cte WHERE row_num IN ( SELECT row_num FROM cte GROUP BY row_num HAVING COUNT(row_num) >= 3)
WITH cte AS (SELECT *, (id - ROW_NUMBER() OVER(ORDER BY visit_date)) AS grp FROM (SELECT * FROM Stadium WHERE people >= 100) a) SELECT id, visit_date, people FROM cte WHERE grp IN (SELECT grp FROM cte GROUP BY grp HAVING COUNT(id) >= 3) ORDER BY visit_date
WITH cte AS (SELECT ROW_NUMBER() OVER(ORDER BY id) AS rownumber, id, visit_date, people FROM Stadium WHERE people >= 100 ) select id, visit_date, people from cte where (id - rownumber) in (select (id-rownumber) from cte group by (id-rownumber) having count(*) >= 3)
WITH idz AS( SELECT s1.id AS id1, s2.id AS id2, s3.id AS id3 FROM Stadium s1 LEFT JOIN Stadium s2 ON s1.id = s2.id + 1 LEFT JOIN Stadium s3 ON s2.id = s3.id + 1 WHERE s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100) SELECT DISTINCT s1.id, s1.visit_date, s1.people FROM idz LEFT JOIN Stadium s1 ON idz.id1 = s1.id OR idz.id2 = s1.id OR idz.id3 = s1.id ORDER BY s1.visit_date
WITH internals AS ( SELECT x.id AS x_id, y.id AS y_id, z.id AS z_id FROM (select * FROM Stadium WHERE people >= 100) x JOIN (select * FROM Stadium WHERE people >= 100) y ON x.id = y.id + 1 JOIN (select * FROM Stadium WHERE people >= 100) z ON x.id = z.id - 1 ) SELECT id, visit_date, people FROM (SELECT x_id id, visit_date, people FROM internals i JOIN Stadium ON i.x_id = Stadium.id UNION ALL SELECT y_id id, visit_date, people FROM internals i JOIN Stadium ON i.y_id = Stadium.id UNION ALL SELECT z_id id, visit_date, people FROM internals i JOIN Stadium ON i.z_id = Stadium.id) alias GROUP BY id, visit_date, people ORDER BY visit_date
WITH large_stads AS ( SELECT *, CASE WHEN COALESCE(LAG(id) OVER(ORDER BY id), 0) != id - 1 THEN 1 ELSE 0 END AS new_group FROM Stadium WHERE people >= 100 ), stad_groups AS ( SELECT *, SUM(new_group) OVER(ORDER BY id) AS group_id FROM large_stads ), consec_groups AS ( SELECT group_id FROM stad_groups GROUP BY 1 HAVING COUNT(1) >= 3 ) SELECT id, visit_date, people FROM stad_groups WHERE group_id IN (SELECT group_id FROM consec_groups) ORDER BY 1
WITH machin AS ( SELECT *, LAG(people, 1) OVER (ORDER BY id) AS peoplem1, LAG(people, 2) OVER (ORDER BY id) AS peoplem2, LEAD(people, 1) OVER (ORDER BY id) AS peoplep1, LEAD(people, 2) OVER (ORDER BY id) AS peoplep2 FROM Stadium ) SELECT id, visit_date, people FROM machin WHERE people >=100 AND ( (peoplem1 >= 100 AND (peoplem2 >= 100 OR peoplep1 >= 100)) OR (peoplep1 >=100 AND peoplep2 >= 100) )
WITH partitioned AS ( SELECT id, visit_date, people, id - ROW_NUMBER() OVER(ORDER BY id) AS grp FROM stadium WHERE people >= 100 ), counted AS ( SELECT *, COUNT(*) OVER(PARTITION BY grp) as cnt FROM partitioned ) SELECT id, visit_date, people FROM counted WHERE cnt >= 3
WITH people AS( SELECT id ,visit_date ,people ,id - ROW_NUMBER() OVER(ORDER BY id) AS 'rank_id_diff' FROM stadium WHERE people >= 100 ) SELECT id ,visit_date ,people FROM people WHERE rank_id_diff IN( SELECT rank_id_diff FROM people GROUP BY rank_id_diff HAVING COUNT(rank_id_diff) >= 3 )
WITH rec_100 as ( SELECT * , id - row_number() over(order by ID) as cons_id FROM stadium where people >= 100) SELECT a.id, a.visit_date, a.people FROM rec_100 a WHERE cons_id in (SELECT cons_id from rec_100 group by cons_id having count(cons_id) >=3)
WITH result_stg AS ( select id, visit_date, people from ( select *, lead(id, 1) over (order by id asc) as lead_one, lead(id, 2) over (order by id asc) as lead_two, lag(id, 1) over (order by id asc) as lag_one, lag(id, 2) over (order by id asc) as lag_two from ( select * from Stadium ) a where people >= 100 ) b where ( (lead_one = id + 1 OR lag_one = id - 1) AND (lead_two = id + 2 OR lag_two = id - 2) ) OR (lag_one = id - 1 AND lead_one = id + 1) ) select * from result_stg where (select count(1) from result_stg) > 2
WITH result_stg AS ( select id, visit_date, people from ( select *, lead(id, 1) over (order by id asc) as lead_one, lead(id, 2) over (order by id asc) as lead_two, lag(id, 1) over (order by id asc) as lag_one, lag(id, 2) over (order by id asc) as lag_two from ( select * from Stadium where people >= 100 ) a ) b where ( (lead_one = id + 1 OR lag_one = id - 1) AND (lead_two = id + 2 OR lag_two = id - 2) ) OR (lag_one = id - 1 AND lead_one = id + 1) ) select * from result_stg where (select count(1) from result_stg) > 2
WITH result_stg AS ( select id, visit_date, people from ( select *, lead(id, 1) over (order by id asc) as lead_one, lead(id, 2) over (order by id asc) as lead_two, lag(id, 1) over (order by id asc) as lag_one, lag(id, 2) over (order by id asc) as lag_two from Stadium where people >= 100 ) b where ( (lead_one = id + 1 OR lag_one = id - 1) AND (lead_two = id + 2 OR lag_two = id - 2) ) OR (lag_one = id - 1 AND lead_one = id + 1) ) select * from result_stg where (select count(1) from result_stg) > 2
WITH rkGroup as ( select id, visit_date, people, id - row_number() over(order by id) rk from stadium where people>=100 ) SELECT id, visit_date, people FROM rkGroup WHERE rk in (SELECT rk from rkGroup group by rk having count(id)>= 3)
WITH s AS (SELECT s1.id AS id1, s1.visit_date AS date1, s1.people as ppl1, s2.id AS id2, s2.visit_date AS date2, s2.people AS ppl2, s3.id AS id3, s3.visit_date AS date3, s3.people As ppl3 FROM Stadium s1 LEFT JOIN Stadium s2 ON s1.id = s2.id - 1 LEFT JOIN Stadium s3 ON s2.id = s3.id - 1 WHERE s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100) SELECT id1 AS id, date1 AS visit_date, ppl1 AS people FROM s UNION SELECT id2 AS id, date2 AS visit_date, ppl2 AS people FROM s UNION SELECT id3 AS id, date3 AS visit_date, ppl3 AS people FROM s ORDER BY visit_date
WITH s1 as ( SELECT ROW_NUMBER() OVER (ORDER BY s.id) as rowIndex, s.* FROM Stadium as s WHERE s.people >= 100 GROUP BY s.id, s.visit_date, s.people ), s2 as ( SELECT COUNT(s.id) OVER (PARTITION BY s.id-s.rowIndex) as groupSize, s.* FROM s1 as s ) SELECT s3.id, s3.visit_date, s3.people FROM s2 as s3 GROUP BY s3.groupSize, s3.id, s3.visit_date, s3.people HAVING s3.groupSize >= 3 ORDER BY s3.visit_date
WITH statium_lag_lead as ( select id, visit_date, people, LEAD(people, 1) OVER (ORDER BY id) nxt1, LEAD(people, 2) OVER (ORDER BY id) nxt2, LAG(people, 1) OVER (ORDER BY id) pre1, LAG(people, 2) OVER (ORDER BY id) pre2 from stadium ) select id, visit_date, people from statium_lag_lead where people >= 100 and ((nxt1 >= 100 and nxt2 >= 100) or (pre1 >= 100 and pre2 >= 100) or (pre1 >= 100 and nxt1 >= 100))
WITH t1 AS ( SELECT *, id-row_number() OVER (ORDER BY id) AS tk FROM Stadium WHERE people >= 100 ) SELECT id, visit_date, people FROM t1 WHERE tk IN ( SELECT tk FROM t1 GROUP BY tk HAVING COUNT(tk) >=3 )
WITH temp_table AS ( SELECT DISTINCT s1.* FROM Stadium s1 JOIN Stadium s2 JOIN Stadium s3 ON (s1.id + 1 = s2.id AND s1.id + 2 = s3.id) OR (s1.id - 1 = s2.id AND s1.id + 1 = s3.id) OR (s1.id - 2 = s2.id AND s1.id - 1 = s3.id) WHERE s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100) SELECT * FROM temp_table ORDER BY visit_date
WITH temp_table AS ( SELECT s1.id AS id1, s1.visit_date AS vd1, s1.people AS p1, s2.id AS id2, s2.visit_date AS vd2, s2.people AS p2, s3.id AS id3, s3.visit_date AS vd3, s3.people AS p3 FROM Stadium s1 JOIN Stadium s2 JOIN Stadium s3 ON s1.id + 1 = s2.id AND s2.id + 1 = s3.id WHERE s1.people >= 100 AND s2.people >= 100 AND s3.people >= 100) SELECT * FROM ( SELECT id1 AS id, vd1 AS visit_date, p1 AS people FROM temp_table UNION SELECT id2 AS id, vd2 AS visit_date, p2 AS people FROM temp_table UNION SELECT id3 AS id, vd3 AS visit_date, p3 AS people FROM temp_table) AS final_output ORDER BY visit_date
WITH tmp AS (SELECT * , id-2 AS 'minus_two' , id+2 AS 'plus_two' , id-1 AS 'minus_one' , id+1 AS 'plus_one' FROM Stadium WHERE people >=100) SELECT id , visit_date , people FROM tmp WHERE (minus_two IN (SELECT id FROM tmp) AND minus_one IN (SELECT id FROM tmp)) OR (plus_two IN (SELECT id FROM tmp) AND plus_one IN (SELECT id FROM tmp)) OR (minus_one IN (SELECT id FROM tmp) AND plus_one IN (SELECT id FROM tmp))
WITH tmp AS (SELECT * , id-2 AS 'minus_two' , id+2 AS 'plus_two' , id-1 AS 'minus_one' , id+1 AS 'plus_one' FROM Stadium WHERE people >=100) SELECT id , visit_date , people FROM tmp WHERE (minus_two IN (SELECT id FROM tmp) AND minus_one IN (SELECT id FROM tmp)) OR (plus_two IN (SELECT id FROM tmp) AND plus_one IN (SELECT id FROM tmp)) OR (minus_one IN (SELECT id FROM tmp) AND plus_one IN (SELECT id FROM tmp)) ORDER BY id
With clean as ( Select id, visit_date, people, rank() over(order by visit_date) r From stadium Where people >= 100), r as ( select id - r r From clean Group by 1 Having count(*) > 2) Select c.id, c.visit_date, c.people From clean c Inner join r On r.r = c.id - c.r
select * from (select * from stadium where people > 99) s where (s.id+1 in (select id from stadium where people > 99) and s.id+2 in (select id from stadium where people > 99)) or (s.id-1 in (select id from stadium where people > 99) and s.id-2 in (select id from stadium where people > 99)) or (s.id-1 in (select id from stadium where people > 99) and s.id+1 in (select id from stadium where people > 99))
select * from Stadium where id in (select id + 1 from Stadium where people >= 100 and (id + 1 in (select id from Stadium where people >= 100) and id - 1 in (select id from Stadium where people >= 100))) or id in (select id -1 from Stadium where people >= 100 and (id + 1 in (select id from Stadium where people >= 100) and id - 1 in (select id from Stadium where people >= 100))) or id in (select id from Stadium where people >= 100 and (id + 1 in (select id from Stadium where people >= 100) and id - 1 in (select id from Stadium where people >= 100)))
select * from Stadium where id in (select id from (with temptable(id, group_id) as (select id, id - (dense_rank() over (partition by (people>=100) order by id)) from Stadium where people >= 100 order by id) select id, count(*) over (partition by group_id) as group_ct from temptable) as temptable2 where temptable2.group_ct >= 3) order by id
select * from Stadium where id in(select distinct a1.id from Stadium a1, Stadium a2, Stadium a3 where ((a1.id+1=a2.id and a1.id+2=a3.id) or (a1.id=a2.id+1 and a1.id=a3.id+2) or (a1.id=a2.id+1 and a1.id=a3.id-1)) and a1.people>=100 and a2.people>=100 and a3.people>=100) order by visit_date asc
select * from stadium s where exists ( select s1.id , s2.id , s3.id from Stadium s1 join Stadium s2 on s1.id+1 = s2.id join Stadium s3 on s1.id+2 = s3.id where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and ( s.id = s1.id or s.id = s2.id or s.id = s3.id ) ) order by s.Id
select * from stadium s where exists ( select s1.id, s2.id, s3.id from Stadium s1 join Stadium s2 on s1.id+1 = s2.id and s2.people >= 100 join Stadium s3 on s1.id+2 = s3.id and s3.people >= 100 where s1.people >= 100 and ( s.id = s1.id or s.id = s2.id or s.id = s3.id ) ) order by s.Id
select * from stadium where id in ( select distinct(stadium.id) from stadium, ( select * from (select *, case when people >= 100 then @count:=@count +1 else @count:=0 end as gr from stadium, (select @count:=0) as temp ) abc where abc.gr >=3 ) pqr where stadium.id=pqr.id or stadium.id=pqr.id -1 or stadium.id=pqr.id -2 )
select * from stadium where id in (select distinct id from stadium, (select id1, id2, id3 from (select n1.id as id1, n2.id as id2, n3.id as id3, n1.people as people1,n2.people as people2,n3.people as people3 from (select * from stadium where people>=100)as n1 left join (select * from stadium where people>=100)as n2 on n1.id=n2.id-1 left join (select * from stadium where people>=100)as n3 on n2.id=n3.id-1) as n4 where people1+people2+people3 is not null) as n5 where (id = n5.id1) or (id = n5.id2) or (id = n5.id3))
select DISTINCT s1.* from Stadium s1, Stadium s2, Stadium s3 WHERE (s1.people >= 100) AND (s2.people >= 100) AND (s3.people >= 100) AND ((s1.id - s2.id = 1 AND s1.id - s3.id = 2 AND s2.id - s3.id = 1) OR (s2.id - s1.id = 1 AND s2.id - s3.id = 2 AND s1.id - s3.id = 1) OR (s3.id - s2.id = 1 AND s3.id - s1.id = 2 AND s2.id - s1.id = 1)) ORDER BY s1.id
select DISTINCT(X.id) as id, X.visit_date as visit_date, X.people as people from Stadium as X, (select B.id as id from Stadium as A, Stadium as B, Stadium as C where A.people >= 100 and B.people >= 100 and C.people >= 100 and A.id = (B.id - 1) and C.id = (B.id + 1)) as Y where (X. id = Y.id or X.id + 1 = Y.id or X.id - 1 = Y.id) order by X.id
select Distinct s1.* from stadium s1, stadium s2, stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and ((s2.id - s1.id = 1 and s3.id - s2.id = 1) or (s1.id - s2.id = 1 and s2.id - s3.id = 1) or (s1.id - s2.id = 1 and s3.id - s1.id = 1)) order by s1.id
select a.id, a.visit_date, a.people from Stadium a, Stadium b, Stadium c where a.id=b.id-1 and b.id=c.id-1 and a.people>=100 and b.people>=100 and c.people>=100 union select b.id, b.visit_date, b.people from Stadium a, Stadium b, Stadium c where a.id=b.id-1 and b.id=c.id-1 and a.people>=100 and b.people>=100 and c.people>=100 union select c.id, c.visit_date, c.people from Stadium a, Stadium b, Stadium c where a.id=b.id-1 and b.id=c.id-1 and a.people>=100 and b.people>=100 and c.people>=100 order by 1 asc
select distinct * from ( select * from ( select * from Stadium s where people >= 100 AND ( exists(select null from Stadium where people >= 100 and id + 1 = s.id) AND exists(select null from Stadium where people >= 100 and id - 1 = s.id) ) ) strict union all select * from Stadium s where people >= 100 and exists ( select null from ( select * from Stadium s where people >= 100 AND ( exists(select null from Stadium where people >= 100 and id + 1 = s.id) AND exists(select null from Stadium where people >= 100 and id - 1 = s.id) ) ) strict where strict.id - 1 = s.id ) union all select * from Stadium s where people >= 100 and exists ( select null from ( select * from Stadium s where people >= 100 AND ( exists(select null from Stadium where people >= 100 and id + 1 = s.id) AND exists(select null from Stadium where people >= 100 and id - 1 = s.id) ) ) strict where strict.id + 1 = s.id ) ) x order by x.id
select distinct ID, visit_date, people from Stadium where people>=100 AND ( (ID+1 in (select ID from Stadium where people >= 100) AND ID-1 in (select ID from Stadium where people >= 100)) OR (ID-1 in (select ID from Stadium where people >= 100) AND ID-2 in (select ID from Stadium where people >= 100)) OR (ID+1 in (select ID from Stadium where people >= 100) AND ID+2 in (select ID from Stadium where people >= 100)) ) order by 2
select distinct a.* from (select * from Stadium where people >= 100) a, (select * from Stadium where people >= 100) b, (select * from Stadium where people >= 100) c where (a.id - 1 = b.id and b.id - 1 = c.id and a.id - 2 = c.id) or (b.id - 1 = a.id and a.id - 1 = c.id and b.id - 2 = c.id) or (c.id - 1 = b.id and b.id - 1 = a.id and c.id - 2 = a.id) order by a.id
select distinct a.* from stadium a,stadium b,stadium c where a.people >=100 and b.people>=100 and c.people>=100 and ((a.id = b.id - 1 AND a.id = c.id -2) OR (c.id = a.id - 1 AND c.id = b.id -2) OR (c.id = b.id - 1 AND c.id = a.id -2)) order by a.id
select distinct a.id, a.visit_date, a.people from Stadium a, Stadium b, Stadium c where a.people >= 100 and b.people >= 100 and c.people >= 100 and ( (a.id - b.id = 1 and a.id - c.id = 2 and b.id - c.id = 1) or (b.id - a.id = 1 and a.id - c.id = 1 and b.id-c.id = 2) or (c.id - a.id =2 and b.id - a.id = 1 ) ) order by visit_date asc
select distinct a.id, a.visit_date, a.people from stadium a, stadium b, stadium c where a.people>=100 and b.people>=100 and c.people>=100 and ((a.id+1=b.id and b.id+1=c.id ) or (a.id-1=b.id and a.id+1=c.id) or (a.id-1=b.id and a.id-2=c.id)) order by visit_date asc
select distinct a.id,a.visit_date,a.people from Stadium a, Stadium b, Stadium c where a.people >= 100 and b.people >= 100 and c.people>= 100 and( ( a.id+1 = b.id and a.id+2 = c.id and b.id+1 = c.id) or (a.id+1 = b.id and a.id-1 = c.id and b.id-2 = c.id) or(a.id-1 = b.id and a.id-2 = c.id and b.id-1 = c.id )) order by a.id
select distinct a.id,a.visit_date,a.people from stadium a,stadium b, stadium c where a.people>=100 and b.people>=100 and c.people>=100 and ( (a.id=b.id-1 and a.id=c.id-2) or (a.id=b.id+1 and a.id=c.id-1) or (a.id=b.id+2 and a.id=c.id+1) ) order by a.id
select distinct c.id, c.visit_date, c.people from ( select id, visit_date, people from ( select id, visit_date, people, lead(people,1) over(order by id) as ppl_cnt1, lead(people,2) over(order by id) as ppl_cnt2 from stadium) a where people >= 100 and ppl_cnt1 >= 100 and ppl_cnt2 >= 100 ) b inner join stadium c on b.id = c.id or b.id+1 = c.id or c.id = b.id+2
select distinct s.* from stadium s join stadium s2 join stadium s3 on (s.id+1 = s2.id and s.id+2 = s3.id) or (s.id-1 = s2.id and s.id+1 = s3.id) or (s.id-2 = s2.id and s.id-1 = s3.id) where s.people >=100 and s2.people>=100 and s3.people>=100 order by s.id
select distinct s.id, s.visit_date, s.people from ( select id, visit_date, people ,LAG(people, 1) over (order by id) LAG1 ,LAG(people, 2) over (order by id) LAG2 from stadium ) x join stadium s on s.id between x.id - 2 and x.id where x.lag1 >= 100 and x.lag2 >= 100 and x.people >= 100 order by 2
select distinct s.id, s.visit_date, s.people from Stadium s right join (select a.id, a.visit_date, a.people from(select s1.id, s1.visit_date, s1.people, lag(s1.id,1) over(order by id asc)as prev, lead(s1.id) over (order by id asc) as nxt, lag(s1.people,1) over(order by id asc)as prev_ppl, lead(s1.people) over (order by id asc) as nxt_ppl from Stadium s1 )a where a.id - a.prev = 1 and a.nxt - a.id = 1 and a.people >= 100 and a.prev_ppl >= 100 and a.nxt_ppl >= 100)b ON s.id = b.id+1 or s.id = b.id-1 or b.id = s.id order by s.id asc
select distinct s1.* from Stadium s1 join Stadium s2 join Stadium s3 on (s1.id = s2.id-1 AND s1.id = s3.id-2) OR (s1.id = s2.id+1 AND s1.id = s3.id-1) OR (s1.id = s2.id+1 AND s1.id = s3.id+2) where s1.people >=100 and s2.people >=100 and s3.people>=100 order by s1.visit_date
select distinct s1.* from Stadium s1, Stadium s2, Stadium s3 where ((s1.id = s2.id - 1 and s1.id = s3.id - 2) or (s1.id = s2.id + 1 and s1.id = s3.id - 1) or (s1.id = s2.id + 2 and s1.id = s3.id + 1)) and s1.people >= 100 and s2.people >= 100 and s3.people >= 100 order by s1.visit_date
select distinct s1.* from Stadium s1, Stadium s2, Stadium s3 where s1.people >=100 and s2.people>=100 and s3.people>=100 and ( (s1.id = s2.id - 1 and s2.id = s3.id - 1) or (s2.id = s1.id - 1 and s2.id = s3.id - 2) or (s3.id = s2.id - 1 and s3.id = s1.id - 2) ) order by s1.id
select distinct s1.* from stadium as s1, stadium as s2, stadium as s3 where ((s1.id + 1 = s2.id and s1.id + 2 = s3.id) or (s1.id - 1 = s2.id and s1.id + 1 = s3.id) or (s1.id - 2 = s2.id and s1.id - 1 = s3.id)) and s1.people >= 100 and s2.people >= 100 and s3.people >= 100 order by s1.id
select distinct s1.* from stadium s1, stadium s2, stadium s3 where ((s1.id = s2.id -1 and s2.id = s3.id -1) or (s2.id = s1.id -1 and s1.id = s3.id -1) or (s3.id = s2.id -1 and s2.id = s1.id -1)) and s1.people >= 100 and s2.people >= 100 and s3.people >= 100 order by 1
select distinct s1.* from stadium s1, stadium s2, stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and ( (s1.id - s2.id = 1 and s1.id - s3.id = 2 and s2.id - s3.id =1) or (s2.id - s1.id = 1 and s2.id - s3.id = 2 and s1.id - s3.id =1) or (s3.id - s2.id = 1 and s2.id - s1.id =1 and s3.id - s1.id = 2) ) ORDER BY s1.id
select distinct s1.* from stadium s1, stadium s2, stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and ((s2.id - s1.id = 1 and s3.id - s2.id = 1 and s3.id - s1.id = 2) or (s1.id - s2.id = 1 and s3.id - s1.id = 1 and s3.id - s2.id = 2) or (s2.id - s3.id = 1 and s1.id - s2.id = 1 and s1.id - s3.id = 2)) order by s1.visit_date
select distinct s1.* from stadium s1, stadium s2, stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and ((s2.id - s1.id = 1 and s3.id - s2.id = 1) or (s1.id - s2.id = 1 and s2.id - s3.id = 1) or (s1.id - s2.id = 1 and s3.id - s1.id = 1)) order by s1.id
select distinct s1.* from stadium s1, stadium s2, stadium s3 where s1.people >=100 and s2.people >=100 and s3.people >=100 and ( (s1.id-s2.id = 1 and s1.id-s3.id = 2 and s2.id-s3.id = 1) or (s2.id-s1.id = 1 and s2.id-s3.id = 2 and s1.id-s3.id = 1) or (s3.id-s2.id = 1 and s2.id-s1.id = 1 and s3.id-s1.id = 2) ) order by s1.id
select distinct s1.* from stadium s1,stadium s2,stadium s3 where s1.people>=100 and s2.people>=100 and s3.people>=100 and( (s1.id-s2.id=1 and s1.id-s3.id=2 and s2.id-s3.id=1) or (s2.id-s1.id=1 and s2.id-s3.id=2 and s1.id-s3.id=1) or (s3.id-s2.id=1 and s3.id-s1.id=2 and s2.id-s1.id=1) ) order by s1.id
select distinct s1.id, s1.visit_date, s1.people from Stadium s1, Stadium s2, Stadium s3 where (s1.people >= 100 and s2.people >= 100 and s3.people >= 100) and ( (s1.id= s2.id -1 and s2.id = s3.id -1) or (s2.id = s1.id -1 and s1.id= s3.id -1) or (s3.id= s2.id -1 and s2.id = s1.id -1) ) order by s1.visit_date
select distinct s1.id, s1.visit_date, s1.people from stadium s1, stadium s2, stadium s3 where (s1.id = s2.id+1 and s2.id = s3.id+1 and s1.people>=100 and s2.people>=100 and s3.people>=100) or (s3.id = s1.id-1 and s1.id = s2.id-1 and s1.people>=100 and s2.people>=100 and s3.people>=100) or (s1.id = s2.id-1 and s2.id = s3.id-1 and s1.people>=100 and s2.people>=100 and s3.people>=100) order by s1.visit_date
select distinct s1.id,s1.visit_date,s1.people from stadium s1, stadium s2, stadium s3 where ( (s1.id+1=s2.id and s2.id+1=s3.id) or (s1.id-1=s2.id and s1.id+1=s3.id) or (s1.id-1=s2.id and s1.id-2=s3.id) ) and (s1.people>=100 and s2.people>=100 and s3.people>=100) order by s1.visit_date
select distinct s1.id,s1.visit_date,s1.people from stadium s1,stadium s2,stadium s3 where (((s1.id+1=s2.id) and (s1.id+2=s3.id)) or ((s1.id-1=s2.id) and (s1.id+1=s3.id)) or ((s1.id-2=s2.id) and (s1.id-1=s3.id))) and (s1.people>=100 and s2.people>=100 and s3.people>=100) order by s1.id
select distinct stadium.id,stadium.visit_date, stadium.people from stadium , ( select min(id) as min_id, max(id) as max_id from (select *,row_number() over (order by id) as r_num, id - row_number() over (order by id) as diff from Stadium where people >= 100) as temp group by diff having count(1) >= 3 ) as temp2 where stadium.id >=min_id and stadium.id <= max_id order by visit_date
select distinct t1.* from Stadium t1 inner join Stadium t2 inner join Stadium t3 on ( (t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id =1) OR (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id =1) OR (t3.id - t2.id = 1 and t2.id - t1.id =1 and t3.id - t1.id = 2) ) WHERE t1.people >= 100 and t2.people >= 100 and t3.people >= 100 order by t1.id
select distinct t1.* from Stadium t1, Stadium t2, Stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( t1.id = t2.id-1 and t1.id = t3.id -2 or t1.id = t2.id-1 and t1.id = t3.id +1 or t1.id = t2.id+1 and t1.id = t3.id+2) order by t1.id
select distinct t1.* from stadium t1 , stadium t2, stadium t3 where t1.people >=100 and t2.people >=100 and t3.people >=100 and ( (t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id =1) or (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id =1) or (t3.id - t2.id = 1 and t2.id - t1.id =1 and t3.id - t1.id = 2) ) order by t1.id
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id + 1 = t2.id and t1.id + 2 = t3.id and t2.id + 1 = t3.id) or (t1.id - 1 = t2.id and t1.id + 1 = t3.id and t2.id + 2 = t3.id) or (t1.id - 2 = t3.id and t1.id - 1 = t2.id and t2.id - 1 = t3.id) ) order by t1.id asc
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id + 1 = t2.id and t2.id + 1 = t3.id) or (t2.id + 1 = t3.id and t3.id + 1 = t1.id) or (t3.id + 1 = t1.id and t1.id + 1 = t2.id) ) order by t1.id
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id = 1) or (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id = 1) or (t3.id - t2.id = 1 and t2.id - t1.id = 1 and t3.id - t1.id = 2) ) order by t1.id
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id =1) or (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id =1) or (t3.id - t2.id = 1 and t2.id - t1.id = 1 and t3.id - t1.id = 2) or (t2.id - t1.id = 2 and t2.id - t3.id = 1 and t3.id - t1.id = 1) or (t1.id - t2.id = 2 and t1.id - t3.id = 1 and t3.id = t1.id = 1) ) order by t1.id
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id =1) or (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id =1) or (t3.id - t2.id = 1 and t2.id - t1.id =1 and t3.id - t1.id = 2) ) order by t1.id
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id =1) or (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id =1) or (t3.id - t2.id = 1 and t3.id - t1.id = 2 and t2.id - t1.id =1) ) order by t1.id
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id - t2.id = 1 and t1.id - t3.id = 2) or (t2.id - t1.id = 1 and t2.id - t3.id = 2) or (t3.id - t2.id = 1 and t2.id - t1.id =1 ) ) order by t1.id
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ( (t1.id - t2.id = 1 and t2.id - t3.id =1) or (t2.id - t1.id = 1 and t1.id - t3.id =1) or (t3.id - t2.id = 1 and t2.id - t1.id =1) ) order by t1.id
select distinct t1.* from stadium t1, stadium t2, stadium t3 where t1.people >= 100 and t2.people >= 100 and t3.people >= 100 and ((t1.id - t2.id = 1 and t1.id - t3.id = 2 and t2.id - t3.id =1) or (t2.id - t1.id = 1 and t2.id - t3.id = 2 and t1.id - t3.id =1) or (t3.id - t2.id = 1 and t2.id - t1.id =1 and t3.id - t1.id = 2)) order by t1.id
select distinct x.id,visit_date, people from stadium x , ( select a.id a_id, b.id b_id, c.id c_id from stadium a ,stadium b, stadium c where (a.id +1 = b.id and (b.people >=100 and a.people>=100)) and ( a.id +2 = c.id and (c.people >=100 and a.people >=100)) ) x2 where x.id = x2.a_id or x.id = x2.b_id or x.id = x2.c_id
select distinct(s1.id), s1.visit_date, s1.people from stadium s1, stadium s2, stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and( (s1.id - s2.id = 1 and s1.id - s3.id = 2 and s2.id - s3.id = 1) or (s2.id - s1.id = 1 and s2.id - s3.id = 2 and s1.id - s3.id = 1) or (s3.id - s2.id = 1 and s2.id - s1.id = 1 and s3.id - s1.id = 2) ) order by s1.id
select id ,visit_date,people from ( select id ,visit_date,people,lead(id,1) over (order by id ) id1, lead( id,2) over(order by id ) id2 ,lag(id,1) over (order by id ) idb1, lag( id,2) over(order by id ) idb2 from ( select id ,visit_date , people from Stadium where people>=100 ) St_flt ) std_rst where 'y' = case when (id1 = id+1 and id2= id+2) then 'y' when ( idb1= id-1 and id1 = id+1 ) then 'y' when ( idb2=id-2 and idb1=id-1 ) then 'y' else 'n' end
select id, visit_date, p as people from ( select id, visit_date, people as p, lead(people, 1) over (order by id) p1, lead(people, 2) over (order by id) p2, lag(people, 1) over (order by id) b1, lag(people, 2) over (order by id) b2 from stadium) s where (s.p >= 100 and s.p1 >= 100 and s.p2 >= 100) or (s.p1 >= 100 and s.p >= 100 and s.b1 >= 100) or (s.p >= 100 and s.b1 >= 100 and s.b2 >= 100)
select id, visit_date, people from ( select *, lag(people) over(order by id) before1, lag(people,2) over(order by id) before2, lead(people) over(order by id) after1, lead(people,2) over(order by id) after2 from Stadium ) as s where (people >= 100 and before1 >= 100 and before2 >= 100) or (people >= 100 and after1 >= 100 and after2 >= 100) or (people >= 100 and before1 >= 100 and after1 >= 100)
select id, visit_date, people from ( select *, lag(people,2) over(order by id) as TwoPrevDay, lag(people) over(order by id) as PrevDay, lead(people) over(order by id) as NextDay, lead(people,2) over(order by id) as TwoNextDay, lag(id,2) over(order by id) as TwoPrevId, lag(id) over(order by id) as PrevId, lead(id) over(order by id) as NextId, lead(id,2) over(order by id) as TwoNextId from Stadium ) as X where people >= 100 and ( ((TwoPrevDay >= 100 and PrevDay >= 100) and (TwoPrevId = id-2 and PrevId = id-1)) or ((PrevDay >= 100 and NextDay >= 100) and (PrevId = id-1 and NextId = id+1)) or ((NextDay >= 100 and TwoNextDay >= 100) and (NextId = id+1 and TwoNextId = id+2)) ) order by id asc
select id, visit_date, people from ( select id, lag(id) over (order by id) as p, lag(id, 2) over (order by id) as p2, lead(id) over (order by id) as n, lead(id, 2) over (order by id) as n2, visit_date, people from (select id, visit_date, people from stadium where people >= 100) as q1) as q2 where (id - p = 1 and id - p2 = 2) or (n - id = 1 and n2 - id = 2) or (n - id + p = id)
select id, visit_date, people from ( select id, visit_date, lag(people, 2, 0) over(order by visit_date) lag2, lag(people, 1, 0) over(order by visit_date) lag1, people, lead(people, 1, 0) over(order by visit_date) lead1, lead(people, 2, 0) over(order by visit_date) lead2 from stadium ) tb where people >= 100 and ((lag1 >= 100 and (lag2 >= 100 or lead1 >= 100)) or (lead1 >= 100 and lead2 >= 100))
select id, visit_date, people from ( select id, visit_date, people, Lead(people, 1, null) over () as lead1, lead(people, 2, null) over () as lead2, lag(people, 1, null) over () as lag1, lag(people, 2, null) over () as lag2 from Stadium ) as T1 where ((T1.people >= 100) and (T1.lead1>=100) and (T1.lead2>=100)) or ((T1.people >= 100) and (T1.lag1>=100) and (T1.lag2>=100)) or ((T1.people >= 100) and (T1.lead1>=100) and (T1.lag1>= 100))
select id, visit_date, people from ( select id, visit_date, people, case when lag(id,2) over(order by id) = id-2 then 1 else 0 end + case when lag(id,1) over(order by id) = id -1 then 1 else 0 end + case when lead(id,1) over(order by id) = id +1 then 1 else 0 end + case when lead(id,2) over(order by id) = id +2 then 1 else 0 end as flag from (select * from Stadium where people >=100) as s ) as sf where sf.flag>1 order by sf.id
select id, visit_date, people from ( select id, visit_date, people, count(id) over(partition by mygroup) as num_sequence from ( select id, visit_date, people, id-ROW_NUMBER() OVER() as mygroup from stadium where people >=100 ) a )b where num_sequence>=3
select id, visit_date, people from ( select id, visit_date, people, lag(t1.id,1) over (order by t1.id) as prev_1_id, lag(t1.id,2) over (order by t1.id) as prev_2_id, lag(t1.id,1) over (order by t1.id desc) as after_1_id, lag(t1.id,2) over (order by t1.id desc ) as after_2_id from Stadium as t1 where people >= 100 ) as t1 where (after_1_id - id = 1 and after_2_id - after_1_id = 1) or (after_1_id - id = 1 and id - prev_1_id = 1) or (id - prev_1_id = 1 and prev_1_id - prev_2_id = 1) order by visit_date
select id, visit_date, people from (select *, lag(people,1) over(order by id) last_row, lag(people,2) over(order by id) last_2_row, lead(people,1) over(order by id) next_row, lead(people,2) over(order by id) next_2_row from Stadium) n where (people>=100 and next_row>=100 and next_2_row>=100) or (people>=100 and last_row>=100 and last_2_row>=100) or (people>=100 and last_row>=100 and next_row>=100)
select id, visit_date, people from (select t.id, t.visit_date, t.people, lag(id) over (order by id) as lag1, lag(id,2) over (order by id) as lag2, lead(id) over (order by id) as lead1, lead(id,2) over (order by id) as lead2 from stadium t where people>=100) t where ((lag1+1 = id and id = lag2+2) or (id=lead1-1 and id=lead2-2) or (id = lead1-1 and id=lag1+1))
select id, visit_date, people from stadium where people>=100 and ((id+1 in (select id from stadium where people>=100) and id+2 in (select id from stadium where people>=100)) OR (id+1 in (select id from stadium where people>=100) and id-1 in (select id from stadium where people>=100)) OR (id-1 in (select id from stadium where people>=100) and id-2 in (select id from stadium where people>=100)))
select id, visit_date, people from stadium where people>=100 and ((id+1 in (select id from stadium where people>=100) and id+2 in (select id from stadium where people>=100)) OR (id+1 in (select id from stadium where people>=100) and id-1 in (select id from stadium where people>=100)) OR (id-1 in (select id from stadium where people>=100) and id-2 in (select id from stadium where people>=100))) order by id
select id,visit_Date,people from ( select * , nth_value(people,2)over(rows between current row and 3 following) as s, nth_value(people,3)over(rows between current row and 3 following) as t, nth_value(people,1)over(rows between 2 preceding and current row ) as p1, nth_value(people,2)over(rows between 2 preceding and current row ) as p2 from stadium ) a where (a.people>=100 and a.s>=100 and a.t>=100 ) or (a.people>=100 and a.p1>=100 and a.p2 >= 100) or (a.people>=100 and a.p2>=100 and a.s>=100 and a.id not in(1,2))
select id,visit_date,people from ( Select ID, Visit_Date, People, count(*) over( order by id range between current row and 2 following ) Following_cnt, count(*) over( order by id range between 2 preceding and current row ) Preceding_cnt, count(*) over( order by id range between 1 preceding and 1 following ) Current_Count From ( Select ID,Visit_Date,People from Stadium where People >= 100 ) z )ZZ where Following_cnt =3 or Preceding_cnt =3 or Current_Count = 3
select id,visit_date,people from ( select s.id, s.visit_date, s.people, case when lag(id,2) over (order by s.id) = id -2 and lag(id,1) over (order by s.id) = id -1 then 1 when lead(id,1) over (order by s.id) = id +1 and lag(id,1) over (order by s.id) = id -1 then 1 when lead(id,1) over (order by s.id) = id +1 and lead(id,2) over (order by s.id) = id +2 then 1 else 0 end as chk from stadium s where people>=100) t where chk = 1
select s.id,s.visit_date,s.people from stadium s join (select min(visit_date) as st_date,max(visit_date) as ed_date from (select id,visit_date,(id-num) as diff from (select id,visit_date,people,row_number()over ( order by id) as num from stadium where people >=100) a ) b group by b.diff having (max(id) - min(id)) >= 2) x where s.visit_date between x.st_date and x.ed_date order by visit_date
select s0.id, s0.visit_date, s0.people from stadium s0 left join stadium s_1 on s0.id - 1 = s_1.id left join stadium s_2 on s0.id - 2 = s_2.id left join stadium s1 on s0.id + 1 = s1.id left join stadium s2 on s0.id + 2 = s2.id where s0.people >= 100 and ( (s_1.people>=100 and s_2.people>=100) or (s_1.people>=100 and s1.people>=100) or (s1.people>=100 and s2.people>=100) ) order by 1
select s0.id, s0.visit_date, s0.people from stadium s0 left join stadium s_1 on s0.id - 1 =s_1.id left join stadium s_2 on s0.id - 2 =s_2.id left join stadium s1 on s0.id + 1 =s1.id left join stadium s2 on s0.id + 2 =s2.id where s0.people >= 100 and ( (s_1.people>=100 and s_2.people>=100) or (s_1.people>=100 and s1.people>=100) or (s1.people>=100 and s2.people>=100) ) order by 1
select s1.* from Stadium s1, Stadium s2, Stadium s3 where ((s1.id+1 = s2.id and s1.id+2 = s3.id) or(s1.id-1 = s2.id and s1.id+1 = s3.id) or(s1.id-2 = s2.id and s1.id-1 = s3.id)) and s1.people >= 100 and s2.people >= 100 and s3.people >= 100 group by s1.id order by s1.visit_date
select s1.* from stadium s1, stadium s2, stadium s3 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100 and ((s1.id+1=s2.id and s1.id+2=s3.id) or (s1.id-1=s2.id and s1.id+1=s3.id) or (s1.id-2=s2.id and s1.id-1=s3.id )) group by s1.id order by s1.visit_date
select s1.* from stadium s1, stadium s2, stadium s3 where s1.people>=100 and s2.people>=100 and s3.people>=100 and( (s1.id+1=s2.id and s1.id+2=s3.id) or (s1.id-1=s2.id and s1.id+1=s3.id) or (s1.id-2=s2.id and s1.id-1=s3.id)) group by s1.id order by s1.id
select s1.id, s1.visit_date, s1.people from Stadium s1 left outer join Stadium s2 on (s1.id = s2.id - 1) left outer join Stadium s3 on (s1.id = s3.id - 2) left outer join Stadium s4 on (s1.id = s4.id + 1) left outer join Stadium s5 on (s1.id = s5.id + 2) where (s1.people >= 100 and s2.people >= 100 and s3.people >= 100 or s1.people >= 100 and s4.people >= 100 and s5.people >= 100 or s1.people >= 100 and s2.people >= 100 and s4.people >= 100) order by s1.visit_date asc
select s1.id, s1.visit_date, s1.people from Stadium s1, Stadium s2, Stadium s3 where ((s1.id + 1 =s2.id and s1.id + 2 = s3.id) or (s1.id- 1 = s2.id and s1.id+1 = s3.id) or (s1.id -2 = s2.id and s1.id -1 = s3.id)) and s1.people >= 100 and s2.people >= 100 and s3.people >= 100 group by s1.id order by visit_date
select s1.id,s1.visit_date, s1.people from Stadium s1, Stadium s2,Stadium s3 where s1.people >=100 and s2.people >=100 and s3.people >=100 and s1.id-s2.id=1 and s1.id-s3.id=2 union select s1.id,s1.visit_date, s1.people from Stadium s1, Stadium s2,Stadium s3 where s1.people >=100 and s2.people >=100 and s3.people >=100 and s2.id-s1.id=1 and s1.id-s3.id=1 union select s1.id,s1.visit_date, s1.people from Stadium s1, Stadium s2,Stadium s3 where s1.people >=100 and s2.people >=100 and s3.people >=100 and s2.id-s1.id=2 and s3.id-s1.id=1 order by id
select stadium.id,stadium.visit_date, stadium.people from stadium , ( select min(id) as min_id, max(id) as max_id from (select *,row_number() over (order by id) as r_num, id - row_number() over (order by id) as diff from Stadium where people >= 100) as temp group by diff having count(1) >= 3 ) as temp2 where stadium.id >=min_id and stadium.id <= max_id
with Cte1 as (select * from Stadium where people >= 100), Cte2 as (select C1.id as A, C2.id as B, C3.id as C from Cte1 as C1 join Cte1 as C2 on C1.id = C2.id - 1 join Cte1 as C3 on C2.id = C3.id - 1), Cte3 as (select A as 'id' from Cte2 union select B as 'id' from Cte2 union select C as 'id' from Cte2) select * from Stadium right join Cte3 using (id) order by visit_date asc
with center as (select visit_date from (select visit_date, case when people>=100 and bef>=100 and aft>=100 then 1 else 0 end as check_ from (select *,lag(people,1) over () as bef, lead(people,1) over () as aft from stadium)t1)t2 where check_ = 1) select distinct id, visit_date, people from (select *,lag(visit_date,1) over () as bef, lead(visit_date,1) over () as aft from stadium)t1 where visit_date in (select * from center) or bef in (select * from center) or aft in (select * from center) order by id
with cte as ( select *, (id -row_number()over(order by visit_date)) as rn from Stadium where people>=100 ) select id, visit_date,people from cte where rn in ( select rn from cte group by rn having count(1) >=3 )
with cte as ( select *, id - row_number() over(order by id asc) as gap from Stadium where people >= 100) select id, visit_date, people from cte where gap in (select gap from cte group by gap having count(*)>=3)
with cte as ( select *, id - row_number() over(order by id asc) as gap from Stadium where people >= 100) select id, visit_date, people from cte where gap in (select gap from cte group by gap having count(id) >=3) order by visit_date
with cte as ( select *, lag(people,1)over(order by id) as lag_p_1, lead(people,1)over(order by id) as lead_p_1 from Stadium ) select distinct s1.id, s1.visit_date, s1.people from cte join Stadium s1 on s1.id between cte.id -1 and cte.id +1 where cte.people >=100 and cte.lag_p_1 >=100 and cte.lead_p_1 >= 100 order by visit_date asc
with cte as ( select *,id-row_number()over(order by visit_date) as diff from stadium where people>=100 ) select id,visit_date,people from ( select id,visit_date,people,count(diff)over(partition by diff) as d from cte )c where c.d>2
with cte as ( select id ,visit_date,people,id-row_number() OVER(order by id) as rnk from Stadium where people >=100 ) select id,visit_date,people from cte where rnk in (select rnk from cte group by rnk having count(*) >=3)
with cte as ( select id, visit_date, people, id - row_number() over(order by id) rk from stadium where people>=100 ) select id, visit_date, people from cte where rk in ( select rk from cte group by rk having count(rk) >= 3 )
with cte as ( select id, visit_date,people, (id - (ROW_NUMBER() OVER (ORDER BY id))) as delta from Stadium where people >= 100 ) select id, visit_date,people from cte where delta in (select delta from cte group by delta having count(delta) >= 3)
with cte as ( select id,visit_date,people from stadium where people >=100), cte2 as ( select id,visit_date, lead(id,1) over(order by id asc)as l1, lead(id,2) over(order by id asc) as l2, people from cte), cte3 as ( select id,visit_date, lead(id,1) over(order by id desc)as l3, lead(id,2) over(order by id desc) as l4, people from cte) select cte2.id,cte2.visit_date,cte2.people from cte2 join cte3 on cte2.id=cte3.id where (l1 =cte2.id+1 and l2=cte2.id+2) or (l3=cte3.id-1 and l4=cte3.id-2) or (l1=cte2.id+1 and l3=cte3.id-1)
with cte as ( select lag (id) over(order by id) as prior_1 ,id ,lead (id) over(order by id) as next_1 ,visit_date from Stadium where people >= 100) ,cte_2 as ( select distinct id from cte where prior_1 +1 = next_1 -1 union select distinct prior_1 from cte where prior_1 +1 = next_1 -1 union select distinct next_1 from cte where prior_1 +1 = next_1 -1 ) select * from stadium where id in (select distinct id from cte_2 ) order by 1
with cte as (select * from stadium where people >= 100) select * from cte where (id + 1 in (select id from cte) and id + 2 in (select id from cte)) or (id - 1 in (select id from cte) and id + 1 in (select id from cte)) or (id - 2 in (select id from cte) and id - 1 in (select id from cte))
with cte as (select *, id - row_number() over (order by visit_date) as diff_row from Stadium where people >= 100), cte1 as (select id, visit_date, people, count(diff_row) over (partition by diff_row order by id rows between unbounded preceding and unbounded following) as ct from cte) select id, visit_date, people from cte1 where ct > 2
with cte as (select dif from (select id, visit_date, people, row_number()over(order by id asc) as rnk, (id - row_number()over(order by id asc)) as dif from Stadium where people >= 100) a group by dif having count(*) >= 3 ) select id, visit_date, people from (select id, visit_date, people, row_number()over(order by id asc) as rnk, (id - row_number()over(order by id asc)) as dif from Stadium where people >= 100) a where dif in (select dif from cte)
with cte as (select s1.id as s1_id, s2.id as s2_id, s3.id as s3_id from stadium as s1 join stadium as s2 join stadium as s3 on s1.id = s2.id - 1 and s1.id = s3.id - 2 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100) select id, visit_date, people from stadium where id in (select s1_id from cte) or id in (select s2_id from cte) or id in (select s3_id from cte)
with cte as (select s1.id as s1_id, s2.id as s2_id, s3.id as s3_id from stadium as s1 left join stadium as s2 on s1.id = s2.id - 1 left join stadium as s3 on s1.id = s3.id - 2 where s1.people >= 100 and s2.people >= 100 and s3.people >= 100) select id, visit_date, people from stadium where id in (select s1_id from cte) or id in (select s2_id from cte) or id in (select s3_id from cte)
with cte as(select *, id - (row_number() over (order by id)) as diff from Stadium where people >= 100) select id, visit_date, people from cte where diff in (select diff from cte group by diff having count(diff) >=3) order by id
with cte as(select id, visit_date, people, (id-row_number() over(order by id)) as diffrow from stadium where people >= 100), valuecount as (select *, count(*) over(partition by diffrow) as countdiff from cte) select id, visit_date, people from valuecount where countdiff >= 3
with cte as(select id, visit_date, people, (id-row_number() over(order by id)) as diffrow from stadium where people >= 100), valuecount as (select *, count(*) over(partition by diffrow) as countdiff from cte) select id, visit_date, people from valuecount where countdiff >= 3 order by id
with cte1 as ( select * from Stadium where people >= 100 ), cte2 as ( select id, lead(id, 1) over(order by id) as next_id, lead(id, 2) over(order by id) as next_id_2 from cte1 ), cte3 as ( select id, next_id, next_id_2 from cte2 where (next_id = id + 1) and (next_id_2 = id + 2) ), cte4 as ( select id from cte3 union select next_id as id from cte3 union select next_id_2 as id from cte3 ) select * from stadium where id in (select id from cte4) order by visit_date
with cte1 as ( select id, visit_date, people, id - row_number() over(order by id) rk from stadium where people>=100) select id, visit_date, people from cte1 where rk in (select rk from cte1 group by rk having count(1)>=3) order by id
with cte1 as ( select id, visit_date, people, row_number() over(order by id) rk_org, id - row_number() over(order by id) rk from stadium where people>=100) select id, visit_date, people from cte1 where rk in (select rk from cte1 group by rk having count(1)>=3) order by id
with cte1 as (select * from stadium where people >= 100) select * from cte1 where (id+1 in (select id from cte1 ) and id+2 in (select id from cte1 ) ) or (id-1 in (select id from cte1 ) and id-2 in (select id from cte1 ) ) or (id+1 in (select id from cte1 ) and id-1 in (select id from cte1 ) )
with cte1 as (select * from stadium where people >= 100) select * from cte1 where (id+1 in (select id from cte1) and id+2 in (select id from cte1) ) or (id-1 in (select id from cte1) and id-2 in (select id from cte1) ) or (id+1 in (select id from cte1) and id-1 in (select id from cte1) )
with cte_100_people as ( select s.*, s.id - DENSE_RANK() over (order by id) as rank_id_diff from Stadium s where people >= 100 ) select p.id, p.visit_date, p.people from cte_100_people p where 3 <= (select count(*) from cte_100_people p2 where p2.rank_id_diff = p.rank_id_diff)
with cte_100_people as ( select s.*, s.id - RANK() over (order by id) as rank_id_diff from Stadium s where people >= 100 ) select p.id, p.visit_date, p.people from cte_100_people p where 3 <= (select count(*) from cte_100_people p2 where p2.rank_id_diff = p.rank_id_diff)
with ctetest as ( select id,visit_date,people, lead(id,1) over (order by id) as id1, lead(id,2) over (order by id) as id2, lag(id,1) over (order by id) as id3, lag(id,2) over (order by id) as id4 from stadium where people >= 100 order by id ) select id,visit_date,people from ctetest where (id1=id+1 and id2=id+2) or (id3=id-1 and id4=id -2) or (id1=id+1 and id3=id -1) order by id
with filtered as (SELECT * ,LAG(people,2) OVER(ORDER BY ID) prev_2 ,LAG(people) OVER(ORDER BY ID) prev_1 ,LEAD(people) OVER(ORDER BY ID) next_1 ,LEAD(people,2) OVER(ORDER BY ID) next_2 FROM stadium ) SELECT id ,visit_date ,people FROM filtered WHERE (people>=100 AND prev_1 >= 100 and prev_2>=100) OR ( people>= 100 AND prev_1 >= 100 and next_1 >=100) OR (people >= 100 AND next_1 >= 100 and next_2 >= 100)
with greater as ( select * from Stadium where people >= 100), joined as ( select greater.id, greater.visit_date, greater.people, g2.id as next_id from greater left join greater as g2 on greater.id = g2.id-1), labeled as ( select id, visit_date, people, @label as label, if(next_id is null, @label:=@label+1,@label) as temp from joined, (select @label:=0) as labels ), counted as ( select id, visit_date, people, count(*) over (partition by label) as counts from labeled) select id, visit_date, people from counted where counts >=3 order by visit_date
with more as (select id,visit_date,people from stadium where people >= 100 order by id ) select distinct id,visit_date,people from more where (id+1 in (select id from more) and id+2 in (select id from more)) or (id-1 in (select id from more) and id+1 in (select id from more)) or (id-1 in (select id from more) and id-2 in (select id from more))
with p as (select s.*, s.id - RANK() over (order by id) as rank_id_diff from Stadium s where people >= 100 ) select id,visit_date,people from p where (select count(*) from p p1 where p1.rank_id_diff = p.rank_id_diff)>=3
with s as (select id, visit_date, people from stadium where people >= 100) select distinct s1.id, s1.visit_date, s1.people from s s1, s s2, s s3 where ((s1.id + 1 = s2.id and s2.id + 1 = s3.id) or (s2.id + 1 = s1.id and s1.id + 1 = s3.id) or (s2.id + 1 = s3.id and s3.id + 1 = s1.id)) order by s1.id
with sql1 as ( select id,visit_date,people, lead(people) over(order by visit_date asc) as day1_people, lag(people) over(order by visit_date asc) as day_1_people, case when lead(people) over(order by visit_date asc) >= 100 then 1 else 0 end as day1_value, case when lag(people) over(order by visit_date asc)>= 100 then 1 else 0 end as day_1_value from Stadium), sql2 as (select a.*, lead(day1_people) over(order by visit_date asc) as day2_people, lag(day_1_people) over(order by visit_date asc) as day_2_people, case when lead(day1_people) over(order by visit_date asc) >= 100 then 1 else 0 end as day2_value, case when lag(day_1_people) over(order by visit_date asc) >= 100 then 1 else 0 end as day_2_value from sql1 a) select m.* from (select id,visit_date,people from sql2 where people >= 100 and day1_value > 0 and day_1_value >0 union select id,visit_date,people from sql2 where people >= 100 and day1_value > 0 and day2_value >0 union select id,visit_date,people from sql2 where people >= 100 and day_1_value > 0 and day_2_value > 0) m order by id asc
with stadium_info as ( select id, visit_date, people from stadium where people >=100 ) select distinct a.* from stadium_info a inner join stadium_info b on b.id-1 = a.id or b.id+2 = a.id inner join stadium_info c on c.id-2 = a.id or c.id+1 = a.id order by a.visit_date
with t as ( select t1.id , t1.visit_date , t1.people , id - row_number() OVER(ORDER BY id) as grp from stadium t1 where people >= 100 ) select t.id, t.visit_date ,t.people from t where grp in ( select grp from t group by grp having count(*) >=3 )
with t as ( select t1.id , t1.visit_date , t1.people , id-row_number() OVER(ORDER BY id) as grp from stadium t1 where people >= 100 ) select t.id, t.visit_date ,t.people from t where grp in ( select grp from t group by grp having count(*) >=3 )
with t as ( with t as ( select * from Stadium where people >= 100 ) select t1.id from t t1 join t t2 on t2.id > t1.id and t2.id <= t1.id + 2 group by t1.id having count(*) = 2 ) select s.* from stadium s join t on s.id >= t.id and s.id <= t.id + 2 group by s.id, s.visit_date, s.people order by visit_date
with t as (select *, lag(people) over(order by id ) l1, lag(people,2) over(order by id) l2, lead(people) over(order by id ) f1, lead(people,2) over(order by id) f2 from Stadium) select distinct id, visit_date, people from t where (people>=100 and l1>=100 and l2>=100) or (people>=100 and l1>=100 and f1>=100) or (people>=100 and f1>=100 and f2>=100)
with t as( select s1.* from Stadium s1, Stadium s2, Stadium s3 where s1.id = s2.id-1 and s2.id = s3.id-1 and s1.people >= 100 and s2.people >= 100 and s3.people >= 100 ) select distinct s.* from Stadium s, t where s.id = t.id or s.id = t.id+1 or s.id = t.id+2
with t1 as ( select (s.id - rank() over(order by s.id)) diff, s.id, s.visit_date, s.people from Stadium s where people >= 100 ), t2 as ( select count(*) over(partition by t1.diff) ct, t1.id, t1.visit_date, t1.people from t1 ) select t2.id, t2.visit_date, t2.people from t2 where t2.ct >= 3
with t1 as (select s.id, s.visit_date, s.people, id - row_number() over (order by s.visit_date) as rs from Stadium s where s.people >= 100 ) select t.id, t.visit_date, t.people from t1 t left outer join (select rs, count(rs) as cnt from t1 group by rs) s on s.rs = t.rs where s.cnt >2
with temp as ( select a.id as first, b.id as second, c.id as third from stadium a left join stadium b on a.id + 1 = b.id left join stadium c on a.id + 2 = c.id where a.people >= 100 and b.people >= 100 and c.people >= 100 ) select id, visit_date, people from stadium where id in ( select temp.first as id from temp union select temp.second as id from temp union select temp.third as id from temp )
with temp as ( select id, visit_date, lag(people, 2) over(order by visit_date) as pre_2_ppl, lag(people) over(order by visit_date) as pre_ppl, people, lead(people) over(order by visit_date) as next_ppl, lead(people, 2) over(order by visit_date) as next_2_ppl from Stadium ) select distinct id, visit_date, people from temp where (pre_ppl >= 100 and people >= 100 and next_ppl >= 100) or (people >= 100 and next_ppl >= 100 and next_2_ppl >= 100) or (pre_2_ppl >= 100 and pre_ppl >= 100 and people >= 100) order by visit_date
with temp as ( select id, visit_date, people, case when @a<100 and people>=100 then @c:=1 when @a>=100 and id=@b+1 and people>=100 then @c:=@c+1 when @a<100 or id!=@b+1 or people<100 then @c:=0 else @c:=0 end as counter, @a:=people, @b:=id from Stadium, (select @a:=0,@b:=0,@c:=0) x order by visit_date asc ), temp_2 as ( select id, visit_date, people, counter, case when counter=0 then @d:=0 when @d=1 or counter>=3 then @d:=1 else @d:=0 end as flag from temp, (select @d:=0) y order by visit_date desc ) select id, visit_date, people from temp_2 where flag=1 order by visit_date asc
with temp as (select id, visit_date, people, id - row_number() over(order by id) as consecutive from stadium where people >= 100) select id, visit_date, people from temp where consecutive in (select consecutive from temp group by consecutive having count(id) > 2) order by visit_date
with tmp as ( select * from Stadium where people >= 100) select distinct t1.* from tmp t1, tmp t2, tmp t3 where (t2.id-t1.id=1 and t3.id-t2.id=1) or (t2.id-t1.id=1 and t1.id-t3.id=1) or (t1.id-t2.id=1 and t2.id-t3.id=1) order by visit_date
with tmp as ( select *, id - row_number() over (order by id) as diff from stadium where people>=100 order by id) select id, visit_date,people from ( select *, count(*) over (partition by diff) as cnt from tmp) t where cnt>=3 order by 2
with tmp as ( select s1.id as idlist1, s2.id as idlist2, s3.id as idlist3 from stadium s1, stadium s2, stadium s3 where s1.id=s2.id+1 and s1.id=s3.id-1 and s1.people>=100 and s2.people>=100 and s3.people>=100 ) select distinct id, visit_date, people from stadium where id in ( (select idlist1 from tmp) union (select idlist2 from tmp) union (select idlist3 from tmp) ) order by visit_date
with traffic as( select * , id - row_number()over(order by id) as categ from stadium where people>=100 ) select id, visit_date,people from traffic where categ in (select categ from traffic group by categ having count(*)>=3)
with x as ( select s1.id as s1_id, s2.id as s2_id, s3.id as s3_id from stadium s1 inner join stadium s2 on s1.id + 1 = s2.id and s1.people >= 100 and s2.people >= 100 inner join stadium s3 on s2.id + 1 = s3.id and s2.people >= 100 and s3.people >= 100), y as ( select s1_id as id from x union select s2_id as id from x union select s3_id as id from x) select * from stadium where id in (select id from y) order by visit_date
