SELECT DISTINCT p.name, COALESCE(SUM(rest),0) AS rest, COALESCE(SUM(paid),0) AS paid, COALESCE(SUM(canceled),0) AS canceled, COALESCE(SUM(refunded),0) AS refunded FROM product AS p LEFT JOIN invoice AS i ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY p.name
SELECT DISTINCT p.name, SUM(rest) AS rest, SUM(paid) AS paid, SUM(canceled) AS canceled, SUM(refunded) AS refunded FROM Product AS p JOIN Invoice AS i USING(product_id) GROUP BY p.product_id ORDER BY p.name
SELECT P.name ,IFNULL(SUM(I.rest),0) AS rest ,IFNULL(SUM(I.paid),0) AS paid ,IFNULL(SUM(I.canceled),0) AS canceled ,IFNULL(SUM(I.refunded),0) AS refunded FROM Product P LEFT JOIN Invoice I ON I.product_id = P.product_id GROUP BY P.name,P.product_id ORDER BY 1 ASC
SELECT P.name ,SUM(rest) AS rest ,SUM(paid) AS paid ,SUM(canceled) AS canceled ,SUM(refunded) AS refunded FROM Invoice I INNER JOIN Product P ON P.product_id = I.product_id GROUP BY P.name ORDER BY 1 ASC
SELECT P.name, COALESCE(I.rest,0) rest, COALESCE(I.paid,0) paid, COALESCE(I.canceled,0) canceled, COALESCE(I.refunded,0) refunded FROM Product P LEFT JOIN (SELECT product_id, SUM(rest) rest, SUM(paid) paid, SUM(canceled) canceled, SUM(refunded) refunded FROM Invoice GROUP BY product_id) I ON P.product_id = I.product_id ORDER BY P.name
SELECT P.name, COALESCE(SUM(I.rest), 0) AS "rest", COALESCE(SUM(I.paid), 0) AS "paid", COALESCE(SUM(I.canceled), 0) AS "canceled", COALESCE(SUM(I.refunded), 0) AS "refunded" FROM Product P LEFT JOIN Invoice I ON P.product_id = I.product_id GROUP BY P.product_id ORDER BY P.name
SELECT P.name, IFNULL( SUM(I.rest), 0 ) AS rest, IFNULL( SUM(I.paid), 0 ) AS paid, IFNULL( SUM(I.canceled), 0 ) AS canceled, IFNULL( SUM(I.refunded), 0 ) AS refunded FROM Product AS P LEFT JOIN Invoice AS I ON P.product_id = I.product_id GROUP BY P.name ORDER BY P.name ASC
SELECT P.name, IFNULL(SUM(I.rest), 0) AS "rest", IFNULL(SUM(I.paid), 0) AS "paid", IFNULL(SUM(I.canceled), 0) AS "canceled", IFNULL(SUM(I.refunded), 0) AS "refunded" FROM Product P LEFT JOIN Invoice I ON P.product_id = I.product_id GROUP BY P.product_id ORDER BY P.name
SELECT P.name, IFNULL(SUM(I.rest),0) AS rest, IFNULL(SUM(I.paid),0) AS paid, IFNULL(SUM(I.canceled),0) AS canceled, IFNULL(SUM(I.refunded),0) AS refunded FROM Product P LEFT JOIN Invoice I ON P.product_id=I.product_id GROUP BY 1 ORDER BY 1
SELECT P.name, IFNULL(SUM(rest),0) AS rest, IFNULL(SUM(paid),0) AS paid, IFNULL(SUM(canceled),0) AS canceled, IFNULL(SUM(refunded),0) AS refunded FROM Product P LEFT OUTER JOIN Invoice I ON I.product_id = P.product_id GROUP BY P.name ORDER BY P.name
SELECT P.name, IFNULL(SUM(rest),0) as rest, IFNULL(SUM(paid),0)as paid, IFNULL(SUM(canceled),0) as canceled, IFNULL(SUM(refunded),0) as refunded FROM Product P LEFT JOIN Invoice I ON P.product_id = I.product_id GROUP BY P.name ORDER BY P.name
SELECT P.name, coalesce(SUM(I.rest),0) rest, coalesce(SUM(I.paid),0) paid, coalesce(SUM(I.canceled),0) canceled, coalesce(SUM(I.refunded),0) refunded FROM Product AS P LEFT JOIN Invoice AS I ON I.product_id = P.product_id GROUP BY P.product_id order by P.name
SELECT P.name, sum(I.rest) as rest, sum(I.paid) as paid, sum(I.canceled) as canceled , sum(I.refunded) as refunded from Invoice I inner join Product P on I.product_id = P.product_id group by P.name order by P.name
SELECT Product.name AS name, COALESCE(SUM(rest),0) AS rest, COALESCE(SUM(paid),0) AS paid, COALESCE(SUM(canceled),0) AS canceled, COALESCE(SUM(refunded),0) AS refunded FROM Product LEFT OUTER JOIN Invoice ON Invoice.product_id = Product.product_id GROUP BY Product.name ORDER BY Product.name
SELECT Product.name, COALESCE(sum(Invoice.rest),0) as rest , COALESCE(sum(Invoice.paid),0) as paid, COALESCE(sum(Invoice.canceled),0) as canceled, COALESCE(sum(Invoice.refunded),0) as refunded FROM Product LEFT OUTER JOIN Invoice ON Product.product_id = Invoice.product_id GROUP BY Product.name ORDER BY Product.name
SELECT Product.name, IFNULL(SUM(rest),0) AS rest, IFNULL(SUM(paid),0) AS paid, IFNULL(SUM(canceled),0) AS canceled, IFNULL(SUM(refunded),0) AS refunded FROM Product LEFT JOIN Invoice USING (product_id) GROUP BY Product.product_id ORDER BY name
SELECT Product.name, SUM(IFNULL(Invoice.rest, 0)) AS rest, SUM(IFNULL(Invoice.paid, 0)) AS paid, SUM(IFNULL(Invoice.canceled, 0)) AS canceled, SUM(IFNULL(Invoice.refunded, 0)) AS refunded FROM Invoice RIGHT JOIN Product ON Invoice.product_id = Product.product_id GROUP BY Product.name ORDER BY name
SELECT Product.name, SUM(IFNULL(rest,0)) rest, SUM(IFNULL(paid,0)) paid, SUM(IFNULL(canceled,0)) canceled, SUM(IFNULL(refunded,0)) refunded FROM Product LEFT JOIN Invoice ON Product.product_id = Invoice.product_id GROUP BY name ORDER BY name
SELECT Product.name, SUM(rest) AS rest, SUM(paid) AS paid, SUM(canceled) AS canceled, SUM(refunded) AS refunded FROM Invoice JOIN Product ON Invoice.product_id = Product.product_id GROUP BY Invoice.product_id ORDER BY Product.name
SELECT a.name ,IFNULL(SUM(b.rest),0) AS 'rest' ,IFNULL(SUM(b.paid),0) AS 'paid' ,IFNULL(SUM(b.canceled),0) AS 'canceled' ,IFNULL(SUM(b.refunded),0) AS 'refunded' FROM Product a LEFT JOIN Invoice b ON a.product_id = b.product_id GROUP BY a.name ORDER BY a.name
SELECT a.name, IFNULL(SUM(b.rest),0) AS rest, IFNULL(SUM(b.paid),0) AS paid, IFNULL(SUM(b.canceled),0) AS canceled, IFNULL(SUM(b.refunded),0) AS refunded FROM Product a LEFT JOIN Invoice b ON a.product_id=b.product_id GROUP BY 1 ORDER BY 1
SELECT a.name, SUM(IFNULL(b.rest,0)) as rest, SUM(IFNULL(b.paid,0)) as paid, SUM(IFNULL(b.canceled,0)) as canceled, SUM(IFNULL(b.refunded,0)) as refunded FROM Product a LEFT JOIN Invoice b ON a.product_id = b.product_id GROUP BY 1 ORDER BY 1
SELECT name ,coalesce(Sum(rest),0) as rest ,coalesce(SUM(paid),0) as paid ,coalesce(sum(canceled),0) as canceled ,coalesce(sum(refunded),0) as refunded From PRoduct p left join Invoice i on p.product_id = i.product_id GROUP BY name order by name
SELECT name, COALESCE(SUM(rest), 0) AS rest, COALESCE(SUM(paid), 0) AS paid, COALESCE(SUM(canceled), 0) AS canceled, COALESCE(SUM(refunded), 0) AS refunded FROM Product AS p LEFT JOIN Invoice AS i ON p.product_id = i.product_id GROUP BY name ORDER BY name
SELECT name, COALESCE(SUM(rest),0) AS rest, COALESCE(SUM(paid),0) AS paid, COALESCE(SUM(canceled),0) AS canceled, COALESCE(SUM(refunded),0) AS refunded FROM Product AS p LEFT JOIN Invoice AS i ON p.product_id = i.product_id GROUP BY name ORDER BY name
SELECT name, COALESCE(SUM(rest),0) AS rest, COALESCE(SUM(paid),0) AS paid, COALESCE(SUM(canceled),0) AS canceled, COALESCE(SUM(refunded),0) AS refunded FROM Product p LEFT JOIN Invoice i USING(product_id) GROUP BY 1 ORDER BY 1
SELECT name, COALESCE(SUM(rest),0) as rest, COALESCE(SUM(paid),0) as paid, COALESCE(SUM(canceled),0) as canceled, COALESCE(SUM(refunded),0) as refunded FROM Product LEFT JOIN Invoice USING(product_id) GROUP BY product_id ORDER BY name
SELECT name, COALESCE(SUM(rest),0) rest, COALESCE(SUM(paid),0) paid, COALESCE(SUM(canceled),0) canceled, COALESCE(SUM(refunded),0) refunded FROM invoice i RIGHT JOIN product p ON i.product_id = p.product_id GROUP BY name ORDER BY name
SELECT name, IFNULL(SUM(rest) ,0) rest, IFNULL(SUM(paid) ,0) paid, IFNULL(SUM(canceled) ,0) canceled, IFNULL(SUM(refunded) ,0) refunded FROM Invoice I RIGHT JOIN Product P ON I.product_id = P.product_id GROUP BY P.product_id ORDER BY name
SELECT name, IFNULL(SUM(rest), 0) AS rest, IFNULL(SUM(paid), 0) AS paid, IFNULL(SUM(canceled), 0) AS canceled, IFNULL(SUM(refunded), 0) AS refunded FROM Product LEFT JOIN Invoice ON Product.product_id = Invoice.product_id GROUP BY name ORDER BY name
SELECT name, IFNULL(SUM(rest), 0) AS rest, IFNULL(SUM(paid), 0) AS paid, IFNULL(SUM(canceled), 0) AS canceled, IFNULL(SUM(refunded), 0) AS refunded FROM Product LEFT JOIN Invoice USING (product_id) GROUP BY name ORDER BY 1
SELECT name, IFNULL(SUM(rest), 0) AS rest, IFNULL(SUM(paid), 0) AS paid, IFNULL(SUM(canceled), 0) AS canceled, IFNULL(SUM(refunded), 0) AS refunded FROM Product LEFT JOIN Invoice USING (product_id) GROUP BY name ORDER BY name
SELECT name, IFNULL(SUM(rest), 0) AS rest, IFNULL(SUM(paid), 0) AS paid, IFNULL(SUM(canceled), 0) AS canceled, IFNULL(SUM(refunded), 0) AS refunded FROM Product LEFT JOIN Invoice USING(product_id) GROUP BY product_id ORDER BY name
SELECT name, IFNULL(SUM(rest), 0) as rest, IFNULL(SUM(paid), 0) as paid, IFNULL(SUM(canceled), 0) as canceled, IFNULL(SUM(refunded), 0) as refunded FROM Invoice i RIGHT JOIN Product p ON i.product_id = p.product_id GROUP BY name ORDER BY name
SELECT name, IFNULL(SUM(rest), 0) rest, IFNULL(SUM(paid), 0) paid, IFNULL(SUM(canceled), 0) canceled, IFNULL(SUM(refunded), 0) refunded FROM Product LEFT JOIN Invoice USING(product_id) GROUP BY 1 ORDER BY 1
SELECT name, IFNULL(SUM(rest), 0) rest, IFNULL(SUM(paid), 0) paid, IFNULL(SUM(canceled), 0) canceled, IFNULL(SUM(refunded), 0) refunded FROM Product NATURAL LEFT JOIN Invoice GROUP BY name ORDER BY name
SELECT name, IFNULL(SUM(rest),0) AS rest, IFNULL(SUM(paid),0) AS paid, IFNULL(SUM(canceled),0) AS canceled, IFNULL(SUM(refunded),0) AS refunded FROM Invoice RIGHT JOIN Product ON Invoice.product_id = Product.product_id GROUP BY name ORDER BY name
SELECT name, IFNULL(SUM(rest),0) AS rest, IFNULL(SUM(paid),0) AS paid, IFNULL(SUM(canceled),0) AS canceled, IFNULL(SUM(refunded),0) AS refunded FROM Product LEFT JOIN Invoice ON Product.product_id = Invoice.product_id GROUP BY name ORDER BY name
SELECT name, IFNULL(SUM(rest),0) AS rest, IFNULL(SUM(paid),0) AS paid, IFNULL(SUM(canceled),0) AS canceled, IFNULL(SUM(refunded),0) AS refunded FROM Product LEFT JOIN Invoice USING(product_id) GROUP BY 1 ORDER BY 1
SELECT name, IFNULL(SUM(rest),0) AS rest, IFNULL(SUM(paid),0) AS paid, IFNULL(SUM(canceled),0) AS canceled, IFNULL(SUM(refunded),0) AS refunded FROM Product LEFT JOIN Invoice USING(product_id) GROUP BY Product.product_id ORDER BY name
SELECT name, IFNULL(SUM(rest),0) AS rest, IFNULL(SUM(paid),0) AS paid, IFNULL(SUM(canceled),0) AS canceled, IFNULL(SUM(refunded),0) AS refunded FROM product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY 1 ORDER BY 1
SELECT name, IFNULL(SUM(rest),0) AS rest,IFNULL(SUM(paid),0)AS paid, IFNULL(SUM(canceled),0) AS canceled,IFNULL(SUM(refunded),0) AS refunded FROM Product LEFT JOIN Invoice USING(product_id) GROUP BY product_id ORDER BY name
SELECT name, IFNULL(SUM(rest),0) as rest, IFNULL(SUM(paid),0) as paid, IFNULL(SUM(canceled),0) as canceled, IFNULL(SUM(refunded),0) as refunded FROM product LEFT JOIN invoice ON product.product_id = invoice.product_id GROUP BY name ORDER BY name
SELECT name, IFNULL(sum(rest),0) AS rest, IFNULL(sum(paid),0) as paid, IFNULL(sum(canceled),0) as canceled, IFNULL(sum(refunded),0) as refunded FROM Product LEFT JOIN Invoice USING (product_id) GROUP BY product_id ORDER BY name
SELECT name, SUM(COALESCE(rest, 0)) as rest, SUM(COALESCE(paid, 0)) as paid, SUM(COALESCE(canceled,0)) as canceled, SUM(COALESCE(refunded,0)) AS refunded FROM Product as t1 left join Invoice as t2 ON t1.product_id = t2.product_id GROUP BY name ORDER BY name
SELECT name, SUM(COALESCE(rest,0)) AS rest, SUM(COALESCE(paid,0)) AS paid, SUM(COALESCE(canceled,0)) AS canceled, SUM(COALESCE(refunded,0)) AS refunded FROM Invoice RIGHT JOIN Product USING (product_id) GROUP BY name ORDER BY name
SELECT name, SUM(IFNULL(rest, 0)) AS rest, SUM(IFNULL(paid, 0)) AS paid, SUM(IFNULL(canceled, 0)) AS canceled, SUM(IFNULL(refunded, 0)) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY name ORDER BY name
SELECT name, SUM(IFNULL(rest, 0)) AS rest, SUM(IFNULL(paid,0)) AS paid, SUM(IFNULL(canceled,0)) AS canceled, SUM(IFNULL(refunded,0)) AS refunded FROM product LEFT JOIN invoice USING(product_id) GROUP BY name ORDER BY name
SELECT name, SUM(rest) AS rest, SUM(paid) AS paid, SUM(canceled) AS canceled, SUM(refunded) AS refunded FROM Invoice i LEFT JOIN Product p USING (product_id) GROUP BY product_id ORDER BY 1
SELECT name, ifnull(sum(rest),0) AS rest, ifnull(sum(paid),0) AS paid, ifnull(sum(canceled),0) AS canceled, ifnull(sum(refunded),0) AS refunded FROM Product LEFT JOIN Invoice ON Invoice.product_id = Product.product_id GROUP BY name ORDER BY name
SELECT name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled), 0) as canceled, ifnull(sum(refunded), 0) as refunded FROM Invoice i RIGHT JOIN Product p ON i.product_id = p.product_id GROUP BY name ORDER BY name
SELECT name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded FROM Product LEFT JOIN Invoice ON Product.product_id = Invoice.product_id GROUP BY Product.product_id ORDER BY name
SELECT name, sum(coalesce(rest, 0)) as rest, sum(coalesce(paid, 0)) as paid, sum(coalesce(canceled, 0)) as canceled, sum(coalesce(refunded, 0)) as refunded FROM Product AS p LEFT JOIN Invoice AS i ON p.product_id = i.product_id GROUP BY name ORDER BY name
SELECT name,COALESCE(sum(rest),0) as rest,COALESCE(sum(paid),0) as paid,COALESCE(sum(canceled),0) as canceled, COALESCE(sum(refunded),0) as refunded FROM Product LEFT JOIN Invoice ON Product.product_id=Invoice.product_id GROUP BY Product.product_id ORDER BY name
SELECT name,IFNULL(SUM(rest),0) AS rest,IFNULL(SUM(paid),0) As paid,IFNULL(SUM(canceled),0) AS canceled,IFNULL(SUM(refunded),0) AS refunded FROM Invoice RIGHT JOIN Product ON Invoice.product_id=Product.product_id GROUP BY name ORDER BY name
SELECT p.name , IFNULL(SUM(i.rest),0) As rest, IFNULL(SUM(i.paid),0) AS paid,IFNULL(SUM(i.canceled),0) As canceled,IFNULL(SUM(i.refunded),0) As refunded FROM Product AS p Left JOIN Invoice AS i ON p.product_id = i.product_id GROUP BY p.product_id Order By p.name
SELECT p.name , IFNULL(SUM(rest),0) AS rest , IFNULL(SUM(paid),0) AS paid , IFNULL(SUM(canceled),0) AS canceled , IFNULL(SUM(refunded),0) AS refunded FROM Invoice i RIGHT JOIN product p ON i.product_id=p.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name ,IFNULL(SUM(i.rest), 0) AS rest ,IFNULL(SUM(i.paid), 0) AS paid ,IFNULL(SUM(i.canceled), 0) AS canceled ,IFNULL(SUM(i.refunded),0) AS refunded FROM Invoice i RIGHT JOIN Product p ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY 1
SELECT p.name AS name, COALESCE(SUM(i.rest),0) AS rest, COALESCE(SUM(i.paid), 0) AS paid, COALESCE(SUM(i.canceled),0) AS canceled, COALESCE(SUM(i.refunded),0) AS refunded FROM Product AS p LEFT JOIN Invoice As i ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY p.name
SELECT p.name AS name, COALESCE(sum(i.rest),0) AS rest, COALESCE(sum(i.paid),0) AS paid, COALESCE(sum(i.canceled),0) AS canceled, COALESCE(sum(i.refunded),0) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name AS name, COALESCE(sum(i.rest),0) AS rest, COALESCE(sum(i.paid),0) AS paid, COALESCE(sum(i.canceled),0) AS canceled, COALESCE(sum(i.refunded),0) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY p.name
SELECT p.name AS name, IFNULL(SUM(i.rest),0) AS rest, IFNULL(SUM(i.paid),0) AS paid, IFNULL(SUM(i.canceled),0) AS canceled, IFNULL(SUM(i.refunded),0) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY p.name
SELECT p.name AS name, SUM(COALESCE(rest,0)) AS rest, SUM(COALESCE(paid,0)) AS paid, SUM(COALESCE(canceled,0)) AS canceled, SUM(COALESCE(refunded,0)) AS refunded FROM Product p LEFT JOIN Invoice i ON i.product_id = p.product_id GROUP BY name ORDER BY name
SELECT p.name, (CASE WHEN i.rest IS NULL THEN 0 ELSE SUM(i.rest) END) AS rest, (CASE WHEN i.paid IS NULL THEN 0 ELSE SUM(i.paid) END) AS paid, (CASE WHEN i.canceled IS NULL THEN 0 ELSE SUM(i.canceled) END) AS canceled, (CASE WHEN i.refunded IS NULL THEN 0 ELSE SUM(i.refunded) END) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY 1 ORDER BY 1
SELECT p.name, (CASE WHEN i.rest is null then 0 ELSE SUM(i.rest) END)AS rest, (CASE WHEN i.paid is null then 0 ELSE SUM(i.paid) END)AS paid, (CASE WHEN i.canceled is null then 0 ELSE SUM(i.canceled) END) AS canceled, (CASE WHEN i.refunded is null then 0 ELSE SUM(i.refunded) END) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY 1 ORDER BY 1
SELECT p.name, (CASE WHEN i.rest is null then 0 ELSE SUM(i.rest) END)AS rest, (CASE WHEN i.paid is null then 0 ELSE SUM(i.paid) END)AS paid, (CASE WHEN i.canceled is null then 0 ELSE SUM(i.canceled) END) AS canceled, (CASE WHEN i.refunded is null then 0 ELSE SUM(i.refunded) END) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name, (CASE WHEN t.rest IS NULL THEN 0 ELSE t.rest END) AS rest, (CASE WHEN t.paid IS NULL THEN 0 ELSE t.paid END) AS paid, (CASE WHEN t.canceled IS NULL THEN 0 ELSE t.canceled END) AS canceled, (CASE WHEN t.refunded IS NULL THEN 0 ELSE t.refunded END) AS refunded FROM Product p LEFT JOIN ( SELECT product_id, SUM(rest) AS rest, SUM(paid) AS paid, SUM(canceled) AS canceled, SUM(refunded) AS refunded FROM Invoice GROUP BY product_id ) t ON p.product_id = t.product_id ORDER BY p.name
SELECT p.name, CASE WHEN SUM(i.rest) IS NOT NULL THEN SUM(i.rest) ELSE 0 END AS rest, CASE WHEN SUM(i.paid) IS NOT NULL THEN SUM(i.paid) ELSE 0 END AS paid, CASE WHEN SUM(i.canceled) IS NOT NULL THEN SUM(i.canceled) ELSE 0 END AS canceled, CASE WHEN SUM(i.refunded) IS NOT NULL THEN SUM(i.refunded) ELSE 0 END AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name, COALESCE(SUM(i.rest), 0) AS rest, COALESCE(SUM(i.paid), 0) AS paid, COALESCE(SUM(i.canceled), 0) AS canceled, COALESCE(SUM(i.refunded), 0) AS refunded FROM Invoice AS i RIGHT JOIN Product AS p ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY name
SELECT p.name, COALESCE(SUM(i.rest), 0) AS rest, COALESCE(SUM(i.paid), 0) AS paid, COALESCE(SUM(i.canceled), 0) AS canceled, COALESCE(SUM(i.refunded), 0) AS refunded FROM Invoice i LEFT JOIN Product p ON i.product_id = p.product_id GROUP BY p.name UNION SELECT p.name, COALESCE(SUM(i.rest), 0) AS rest, COALESCE(SUM(i.paid), 0) AS paid, COALESCE(SUM(i.canceled), 0) AS canceled, COALESCE(SUM(i.refunded), 0) AS refunded FROM Invoice i RIGHT JOIN Product p ON i.product_id = p.product_id GROUP BY p.name ORDER BY name ASC
SELECT p.name, COALESCE(SUM(i.rest),0) AS rest, COALESCE(SUM(i.paid),0) AS paid, COALESCE(SUM(i.canceled),0) AS canceled, COALESCE(SUM(i.refunded),0) AS refunded FROM Product p LEFT JOIN Invoice i ON i.product_id = p.product_id GROUP BY p.product_id ORDER BY p.name ASC
SELECT p.name, COALESCE(SUM(i.rest),0) as rest, COALESCE(SUM(i.paid),0) as paid, COALESCE(SUM(i.canceled),0) as canceled, COALESCE(SUM(i.refunded),0) as refunded FROM product p LEFT JOIN invoice i ON p.product_id = i.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name, COALESCE(SUM(rest), 0) AS rest, COALESCE(SUM(paid), 0) AS paid, COALESCE(SUM(canceled), 0) AS canceled, COALESCE(SUM(refunded), 0) AS refunded FROM Product p LEFT JOIN Invoice i ON i.product_id = p.product_id GROUP BY p.product_id ORDER BY p.name
SELECT p.name, COALESCE(SUM(rest),0) rest, COALESCE(SUM(paid),0) paid, COALESCE(SUM(canceled),0) canceled, COALESCE(SUM(refunded),0) refunded FROM Product p LEFT JOIN Invoice i ON i.product_id = p.product_id GROUP BY p.product_id ORDER BY name
SELECT p.name, COALESCE(rest, 0) rest, COALESCE(paid, 0) paid, COALESCE(canceled, 0) canceled, COALESCE(refunded, 0) refunded FROM Product p LEFT JOIN ( SELECT product_id, SUM(rest) as rest, SUM(paid) as paid, SUM(canceled) as canceled, SUM(refunded) as refunded FROM Invoice GROUP BY product_id) as i ON p.product_id = i.product_id ORDER BY name
SELECT p.name, Coalesce(SUM(rest),0) AS rest, Coalesce(SUM(paid),0) AS paid, Coalesce(SUM(canceled),0) AS canceled, Coalesce(SUM(refunded),0) AS refunded FROM product p LEFT JOIN invoice i ON p.product_id = i.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name, IFNULL(SUM(i.rest), 0) AS 'rest', IFNULL(SUM(i.paid), 0) AS 'paid', IFNULL(SUM(i.canceled), 0) AS 'canceled', IFNULL(SUM(i.refunded), 0) AS 'refunded' FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY p.name
SELECT p.name, IFNULL(SUM(i.rest), 0) AS rest, IFNULL(SUM(i.paid), 0) AS paid, IFNULL(SUM(i.canceled), 0) AS canceled, IFNULL(SUM(i.refunded), 0) AS refunded FROM Invoice AS i RIGHT JOIN Product AS p ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY name
SELECT p.name, IFNULL(SUM(i.rest), 0) AS rest, IFNULL(SUM(i.paid), 0) AS paid, IFNULL(SUM(i.canceled),0) AS canceled, IFNULL(SUM( i.refunded),0) AS refunded FROM Product AS p LEFT JOIN Invoice AS i ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY p.name
SELECT p.name, IFNULL(SUM(i.rest),0) AS rest, IFNULL(SUM(i.paid),0) AS paid, IFNULL(SUM(i.canceled),0) AS canceled, IFNULL(SUM(i.refunded),0) AS refunded FROM Product AS p LEFT JOIN Invoice AS i ON p.product_id = i.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name, IFNULL(SUM(i.rest),0) AS rest, IFNULL(SUM(i.paid),0) AS paid, IFNULL(SUM(i.canceled),0) AS canceled, IFNULL(SUM(i.refunded),0) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY 1
SELECT p.name, IFNULL(SUM(i.rest),0) AS rest, IFNULL(SUM(i.paid),0) AS paid, IFNULL(SUM(i.canceled),0) AS canceled, IFNULL(SUM(i.refunded),0) AS refunded FROM Product p LEFT JOIN Invoice i USING (product_id) GROUP BY p.name ORDER BY p.name
SELECT p.name, IFNULL(SUM(rest), 0) AS rest, IFNULL(SUM(paid), 0) AS paid, IFNULL(SUM(canceled), 0) AS canceled, IFNULL(SUM(refunded), 0) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name, IFNULL(SUM(rest), 0) as rest, IFNULL(SUM(paid), 0) as paid, IFNULL(SUM(canceled), 0) as canceled, IFNULL(SUM(refunded), 0) as refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY 1 ORDER BY 1
SELECT p.name, IFNULL(SUM(rest), 0) as rest, IFNULL(SUM(paid), 0) as paid, IFNULL(SUM(canceled), 0) as canceled, IFNULL(sum(refunded),0) as refunded FROM Product as p LEFT JOIN Invoice as i ON p.product_id=i.product_id GROUP BY p.name ORDER BY p.name
SELECT p.name, IFNULL(SUM(v.rest),0) as rest, IFNULL(SUM(v.paid),0) as paid, IFNULL(SUM(v.canceled),0) as canceled, IFNULL(SUM(v.refunded),0) as refunded FROM Product p LEFT JOIN Invoice v ON v.product_id = p.product_id GROUP BY p.name ORDER BY p.name ASC
SELECT p.name, SUM( CASE WHEN rest IS NULL THEN 0 ELSE rest END) AS rest, SUM( CASE WHEN paid IS NULL THEN 0 ELSE paid END) AS paid, SUM( CASE WHEN canceled IS NULL THEN 0 ELSE canceled END) AS canceled, SUM( CASE WHEN refunded IS NULL THEN 0 ELSE refunded END) AS refunded FROM Product p LEFT JOIN Invoice i ON p.product_id=i.product_id GROUP BY p.name ORDER by p.name ASC
SELECT p.name, SUM(IFNULL(rest, 0)) AS rest, SUM(IFNULL(paid, 0)) AS paid, SUM(IFNULL(canceled, 0)) AS canceled, SUM(IFNULL(refunded, 0)) AS refunded FROM invoice i RIGHT JOIN product p ON i.product_id = p.product_id GROUP by 1 ORDER BY 1
SELECT p.name, SUM(i.rest) rest, SUM(i.paid) paid, SUM(i.canceled) canceled, SUM(i.refunded) refunded FROM Invoice i JOIN Product p ON i.product_id = p.product_id GROUP BY i.product_id ORDER BY p.name
SELECT p.name, SUM(rest) AS rest, SUM(paid) AS paid, SUM(canceled) AS canceled, SUM(refunded) AS refunded FROM invoice i LEFT JOIN product p ON i.product_id = p.product_id GROUP BY 1 ORDER BY 1
SELECT p.name, coalesce(SUM(i.rest), 0) rest, coalesce(SUM(i.paid), 0) paid, coalesce(SUM(i.canceled), 0) canceled, coalesce(SUM(i.refunded), 0) refunded FROM Product p left join Invoice i ON i.product_id = p.product_id GROUP BY 1 ORDER BY 1
SELECT p.name, coalesce(sum(i.rest),0) as rest, coalesce(sum(i.paid),0) as paid, coalesce(sum(i.canceled),0) as canceled, coalesce(sum(i.refunded),0) as refunded FROM invoice i RIGHT OUTER JOIN product p ON i.product_id = p.product_id GROUP BY p.name order by p.name asc
SELECT p.name, ifnull(SUM(i.rest),0) rest, ifnull(SUM(i.paid),0) paid, ifnull(SUM(i.canceled),0) canceled, ifnull(SUM(i.refunded),0) refunded FROM Product p LEFT JOIN Invoice i ON p.product_id = i.product_id GROUP BY p.product_id ORDER BY p.name
SELECT pro.name, ifnull(SUM(inv.rest), 0) rest, ifnull(SUM(inv.paid), 0) paid, ifnull(SUM(inv.canceled), 0) canceled, ifnull(SUM(inv.refunded), 0) refunded FROM Invoice inv RIGHT JOIN Product pro ON pro.product_id = inv.product_id GROUP BY pro.name ORDER BY pro.name
Select P.name, Sum(I.rest) as rest, Sum(I.paid) as paid, sum(I.canceled) as canceled, sum(I.refunded) as refunded from product P join invoice I ON P.product_id = I.product_id group by I.product_id order by P.name
Select a.name as name, sum(ifnull(b.rest,0)) as rest, sum(ifnull(b.paid,0)) as paid, sum(ifnull(b.canceled,0)) as canceled, sum(ifnull(b.refunded,0)) as refunded From Product as a Left Join Invoice as b On a.product_id = b.product_id Group By a.name Order By name
Select a.name, coalesce(sum(b.rest),0) as rest, coalesce(sum(b.paid),0) as paid, coalesce(sum(b.canceled),0) as canceled, coalesce(sum(b.refunded),0) as refunded from Product a left join Invoice b on a.product_id=b.product_id group by 1 order by 1
Select name, COALESCE(sum(rest),0) as rest, COALESCE(sum(paid),0) as paid, COALESCE(sum(canceled),0) as canceled, COALESCE(sum(refunded),0) as refunded from Product as p left join Invoice as i using (product_id) group by name order by name
Select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded From Invoice i Right join Product p On i.product_id = p.product_id Group by p.product_id Order by 1
Select name, sum(ifnull(rest,0))rest, sum(ifnull(paid,0)) paid, sum(ifnull(canceled,0))canceled, sum(ifnull(refunded,0)) refunded From Product Left Join Invoice On Product.product_id = Invoice.product_id Group by name Order by name
Select name,IFNULL(rest,0) rest,IFNULL(paid,0) paid,IFNULL(canceled,0) canceled,IFNULL(refunded,0) refunded FROM Product LEFT JOIN ( Select product_id, sum(rest) rest, sum(paid) paid, sum(canceled) canceled, sum(refunded) refunded FROM invoice Group by product_id )as p USING(product_id) ORDER BY name
WITH c1 AS (SELECT product_id, SUM(rest) AS rest, SUM(paid) AS paid , SUM(canceled) AS canceled, SUM(refunded) AS refunded FROM Invoice GROUP BY product_id) SELECT p.name, COALESCE(rest, 0) AS rest, COALESCE(paid, 0) AS paid , COALESCE(canceled, 0) AS canceled, COALESCE(refunded, 0) AS refunded FROM Product p LEFT JOIN c1 ON c1.product_id = p.product_id ORDER BY 1
WITH cte AS( SELECT product_id, SUM(rest) AS rest, SUM(paid) AS paid, SUM(canceled) AS canceled, SUM(refunded) AS refunded FROM Invoice GROUP BY product_id ) SELECT name, IFNULL(rest, 0) rest, IFNULL(paid, 0) paid, IFNULL(canceled, 0) canceled, IFNULL(refunded, 0) refunded FROM cte RIGHT JOIN Product p ON p.product_id = cte.product_id ORDER BY name
WITH t AS ( SELECT product_id, SUM(rest) AS rest, SUM(paid) AS paid, SUM(canceled) AS canceled, SUM(refunded) AS refunded FROM Invoice GROUP BY product_id ) SELECT name, COALESCE(rest, 0) AS rest, COALESCE(paid, 0) AS paid, COALESCE(canceled, 0) AS canceled, COALESCE(refunded, 0) AS refunded FROM Product p LEFT JOIN t ON t.product_id = p.product_id ORDER BY name
select * from (select a.name, coalesce(rest,0) as rest,coalesce(paid,0) as paid,coalesce(canceled,0) as canceled, coalesce(refunded,0) as refunded from (select distinct name from Product) a left join (select name,sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled,sum(refunded)as refunded from (select a.product_id,a.rest,a.paid,a.canceled,a.refunded,b.name from Invoice a left join Product b on b.product_id=a.product_id) c group by name order by name) b on a.name=b.name ) m order by name
select B.name, coalesce(sum(rest), 0) as rest, coalesce(sum(paid), 0) as paid, coalesce(sum(canceled), 0) as canceled, coalesce(sum(refunded), 0) as refunded from Invoice A right join Product B on A.product_id = B.product_id group by B.product_id order by B.name
select P.name , COALESCE(Sum(I.rest),0) as rest , COALESCE(sum(I.paid),0) as paid, COALESCE(sum(I.canceled),0) as canceled,COALESCE(sum(I.refunded),0) as refunded from Product P LEFT join Invoice I on P.product_id = I.product_id group by P.NAME order by P.name
select P.name, COALESCE(sum(I.rest), 0) rest, COALESCE(sum(I.paid), 0) paid, COALESCE(sum(I.canceled), 0) canceled, COALESCE(sum(I.refunded), 0) refunded from Product as P left join Invoice as I on P.product_id = I.product_id group by P.name order by P.name
select P.name, ifnull(sum(I.rest),0) as rest,ifnull(sum(I.paid),0) as paid ,ifnull(sum(I.canceled),0) as canceled, ifnull(sum(I.refunded),0) as refunded from Product P left join Invoice I on P.product_id = I.product_id group by P.product_id order by P.name
select P.name, ifnull(sum(I.rest),0) rest, ifnull(sum(I.paid),0) paid, ifnull(sum(I.canceled),0) canceled , ifnull(sum(I.refunded),0) refunded from Product P left join Invoice I on P.product_id = I.product_id group by name order by name
select Product.Name as name, COALESCE(sum(rest),0) as rest , COALESCE(sum(paid),0) as paid , COALESCE(sum(canceled),0)as canceled, COALESCE(sum(refunded),0)as refunded from Product left join Invoice on Product.product_id = Invoice.product_id group by Product.Name order by Product.Name
select Product.name as name, sum(coalesce(Invoice.rest,0)) as rest, sum(coalesce(Invoice.paid,0)) as paid, sum(coalesce(Invoice.canceled,0)) as canceled, sum(coalesce(Invoice.refunded,0)) as refunded from Product left join Invoice on Product.product_id = Invoice.product_id group by Product.product_id order by Product.name
select Product.name, COALESCE(sum(i.rest),0) AS rest, COALESCE(sum(i.paid),0) AS paid, COALESCE(sum(i.canceled),0) AS canceled, COALESCE(sum(i.refunded),0) AS refunded from Product left join Invoice i on Product.product_id = i.product_id group by Product.name order by Product.name
select Product.name, ifnull(sum(i1.rest),0) as rest, ifnull(sum(i1.paid),0) as paid, ifnull(sum(i1.canceled),0) as canceled, ifnull(sum(i1.refunded),0) as refunded from Invoice i1 right join Product on i1.product_id = Product.product_id group by Product.product_id order by Product.name
select Product.name,ifnull(table1.rest,0) as rest,ifnull(table1.paid,0) as paid,ifnull(table1.canceled,0) as canceled, ifnull(table1.refunded,0) as refunded from Product left join (select product_id, sum(rest) as rest,sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Invoice group by product_id ) as table1 on Product.product_id = table1.product_id order by Product.name
select a.name as name, coalesce(sum(rest), 0) as rest, coalesce(sum(paid), 0) as paid, coalesce(sum(canceled), 0) as canceled, coalesce(sum(refunded), 0) as refunded from product a left outer join invoice b on a.product_id = b.product_id group by a.name order by 1
select a.name, IF(sum(b.rest) is null, 0, sum(b.rest)) as rest, IF(sum(b.paid) is null, 0, sum(b.paid)) as paid, IF(sum(b.canceled) is null, 0, sum(b.canceled)) as canceled, IF(sum(b.refunded) is null, 0, sum(b.refunded)) as refunded from product as a left join invoice as b on a.product_id=b.product_id group by a.product_id order by a.name
select a.name, coalesce(b.rest,0) as rest, coalesce(b.paid,0) as paid, coalesce(b.canceled, 0) as canceled, coalesce(b.refunded,0) as refunded from product as a left join ( select product_id, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from invoice group by product_id ) as b on a.product_id=b.product_id order by a.name
select a.name, coalesce(sum(b.rest)) as rest, coalesce(sum(b.paid)) as paid, coalesce(sum(b.canceled)) as canceled, coalesce(sum(b.refunded)) as refunded from product a join Invoice b on a.product_id = b.product_id group by 1 order by 1
select a.name, coalesce(sum(b.rest),0) as rest , coalesce(sum(b.paid),0) as paid , coalesce(sum(b.canceled),0) as canceled , coalesce(sum(b.refunded),0) as refunded from product a left join invoice b on a.product_id=b.product_id group by a.product_id order by a.name
select a.name, coalesce(sum(b.rest),0) as rest, coalesce(sum(b.paid),0) as paid, coalesce(sum(b.canceled),0) as canceled, coalesce(sum(b.refunded),0) as refunded from product a left join invoice b on a.product_id = b.product_id group by a.name order by a.name
select a.name, ifnull(sum(b.rest),0) as rest, ifnull(sum(b.paid),0) as paid, ifnull(sum(b.canceled),0) as canceled, ifnull(sum(b.refunded),0) as refunded from product as a left join invoice as b on a.product_id = b.product_id group by a.name order by a.name
select a.name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled) ,0)as canceled, ifnull(sum(refunded),0) as refunded from product as a left join invoice as b on a.product_id = b.product_id group by 1 order by 1
select a.name, sum(b.rest) rest, sum(b.paid) paid, sum(b.canceled) canceled, sum(b.refunded) refunded from Product a join Invoice b using(product_id) group by a.name order by a.name
select a.name, sum(ifnull(b.rest,0)) as rest, sum(ifnull(b.paid,0)) as paid, sum(ifnull(b.canceled,0)) as canceled, sum(ifnull(b.refunded,0)) as refunded from Product a left join Invoice b using (product_id) group by a.name order by a.name
select a.name,sum(b.rest) as rest,sum(b.paid) as paid,sum(b.canceled) as canceled,sum(b.refunded) as refunded from product a inner join invoice b on a.product_id = b.product_id group by b.product_id order by a.name
select b.name as name, coalesce(sum(a.rest),0) as rest, coalesce(sum(a.paid),0) as paid, coalesce(sum(a.canceled),0) as canceled, coalesce(sum(a.refunded),0) as refunded from invoice a right join product b on a.product_id = b.product_id group by 1 order by 1
select b.name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled), 0) as canceled, ifnull(sum(refunded), 0) as refunded from invoice a right join product b on a.product_id = b.product_id group by name order by name
select b.name,sum(rest) rest ,sum(paid) paid,sum(canceled) canceled,sum(refunded) refunded from Invoice a left join product b on a.product_id = b.product_id group by a.product_id order by b.name
select distinct p.name, coalesce(sum(i.rest) over(partition by i.product_id),0) as rest, coalesce(sum(i.paid) over(partition by i.product_id),0) as paid, coalesce(sum(i.canceled) over(partition by i.product_id),0) as canceled , coalesce(sum(i.refunded) over(partition by i.product_id),0) as refunded from product p left join invoice i on p.product_id = i.product_id order by p.name asc
select name , sum(coalesce(rest,0)) as rest, sum(coalesce(paid,0)) as paid, sum(coalesce(canceled,0)) as canceled, sum(coalesce(refunded,0)) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by name order by name
select name, (case when sum(rest) is null then 0 else sum(rest) end) as rest, (case when sum(paid) is null then 0 else sum(paid) end) as paid, (case when sum(canceled) is null then 0 else sum(canceled) end) as canceled, (case when sum(refunded) is null then 0 else sum(refunded) end) as refunded from invoice i right join product p on p.product_id = i.product_id group by name order by name
select name, COALESCE(sum(rest),0) as rest,COALESCE(sum(paid),0) as paid ,COALESCE(sum(canceled),0) as canceled,COALESCE(sum(refunded ),0) as refunded from( select a.name , b.rest, b.paid,b.canceled, b.refunded from Product a left join Invoice b on a.product_id=b.product_id ) c group by name order by name
select name, IFNULL(SUM(rest), 0) rest, IFNULL(SUM(paid), 0) paid, IFNULL(SUM(canceled), 0) canceled, IFNULL(SUM(refunded), 0) refunded from product p left join Invoice i on i.product_id= p.product_id group by p.product_id, name order by name
select name, case when sum(rest) is NULL then 0 else sum(rest) end as rest, case when sum(paid) is NULL then 0 else sum(paid) end as paid, case when sum(canceled) is NULL then 0 else sum(canceled) end as canceled, case when sum(refunded) is NULL then 0 else sum(refunded) end as refunded from Product as p left join Invoice as i on p.product_id = i.product_id group by p.name order by name
select name, coalesce (sum(rest),0) as rest, coalesce (sum(paid),0) as paid, coalesce (sum(canceled),0) as canceled , coalesce (sum(refunded),0) as refunded from product left join invoice using (product_id) group by name order by name
select name, coalesce(sum(rest), 0) 'rest', coalesce(sum(paid), 0) 'paid', coalesce(sum(canceled), 0) 'canceled', coalesce(sum(refunded), 0) 'refunded' from product p left join invoice i on p.product_id = i.product_id group by name order by 1 asc
select name, coalesce(sum(rest), 0) as rest, coalesce(sum(paid), 0) as paid, coalesce(sum(canceled), 0) as canceled, coalesce(sum(refunded), 0) as refunded from Product p left join Invoice I on I.product_id = p.product_id group by 1 order by 1
select name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from Product left join Invoice on Product.product_id = Invoice.product_id group by 1 order by 1
select name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by 1 order by 1
select name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from invoice i right join product p on i.product_id=p.product_id group by name order by 1
select name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from invoice right join product on invoice.product_id = product.product_id group by 1 order by 1
select name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by 1 order by name
select name, coalesce(sum(rest),0) rest, coalesce(sum(paid),0) paid, coalesce(sum(canceled),0) canceled, coalesce(sum(refunded),0) refunded from Product left join Invoice using (product_id) group by name order by name
select name, coalesce(sum(rest),0) rest, coalesce(sum(paid),0) paid, coalesce(sum(canceled),0) canceled, coalesce(sum(refunded),0) refunded from product p left join invoice i on i.product_id = p.product_id group by name order by name
select name, ifnull(SUM(rest),0) as rest, ifnull(SUM(paid),0) as paid, ifnull(SUM(canceled),0) as canceled, ifnull(SUM(refunded),0) as refunded from Invoice i right join Product p on i.product_id = p.product_id group by name order by name
select name, ifnull(sum(rest), 0) rest, ifnull(sum(paid), 0) paid, ifnull(sum(canceled), 0) canceled, ifnull(sum(refunded), 0) refunded from Product p left join Invoice i on i.product_id = p.product_id group by 1 order by 1
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum( canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by 1 order by 1
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled), 0) as canceled, ifnull(sum(refunded), 0) as refunded from Invoice i right join Product p on i.product_id = p.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled), 0) as canceled, ifnull(sum(refunded), 0) as refunded from invoice a right join product b on a.product_id = b.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded ),0) as refunded from product p left join invoice i on p.product_id=i.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded) ,0) as refunded from product as p left join invoice as i on p.product_id = i.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Invoice a right join Product b on a.product_id = b.product_id group by 1 order by 1
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product a left join Invoice b on a.product_id=b.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product a left join Invoice b using (product_id) group by a.product_id order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product as p left join Invoice as i using (product_id) group by p.product_id order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product left join Invoice using (product_id) group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product p LEFT JOIN Invoice I USING (product_id) group by 1 order by 1
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.name order by p.name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.product_id order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product p left join Invoice i on p.product_id=i.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from invoice right join product on invoice.product_id = product.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product a left join invoice b on a.product_id = b.product_id group by 1 order by 1
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product a left join invoice b on a.product_id=b.product_id group by 1 order by 1
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product a left join invoice b on a.product_id=b.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product left join invoice on invoice.product_id = product.product_id group by 1 order by 1
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product left join invoice using(product_id) group by product_id order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by 1 order by 1
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by name order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product p left join invoice i on p.product_id=i.product_id group by p.product_id order by name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product p left join invoice i on p.product_id=i.product_id group by p.product_id order by p.name
select name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0)as canceled, ifnull(sum(refunded),0) as refunded from product as p left join invoice as i on p.product_id = i.product_id group by p.product_id order by name
select name, ifnull(sum(rest),0) as rest,ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled,ifnull(sum(refunded),0) as refunded from product left join invoice on product.product_id=invoice.product_id group by product.product_id order by 1
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from Product p left join Invoice i using(product_id) group by 1 order by 1
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from (select name, rest, paid, canceled, refunded from Product p left join Invoice i on p.product_id = i.product_id) temp group by name order by name
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from Product left join Invoice using(product_id) group by 1 order by 1
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from invoice i right join product p on i.product_id = p.product_id group by 1 order by 1
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from product left join invoice using (product_id) group by 1 order by 1
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from product p left join invoice i on i.product_id = p.product_id group by name order by name
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from product p left join invoice i on i.product_id = p.product_id group by p.name order by p.name
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from product p left join invoice i on p.product_id = i.product_id group by p.product_id order by name
select name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from product p left join invoice i on p.product_id=i.product_id group by name order by 1
select name, ifnull(sum(rest),0)as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product left join invoice on product.product_id = invoice.product_id group by name order by name
select name, ifnull(sum(rest),0.0) as rest, ifnull(sum(paid),0.0) as paid, ifnull(sum(canceled),0.0) as canceled, ifnull(sum(refunded),0.0) as refunded from Product left join Invoice using (product_id) group by name order by name
select name, sum(IFNULL(rest,0)) as rest, sum(IFNULL(paid,0)) as paid, sum(IFNULL(canceled,0)) as canceled, sum(IFNULL(refunded,0)) as refunded from Invoice right join Product on Invoice.product_id = Product.product_id group by name order by name
select name, sum(case when rest is not NULL then rest else 0 end) as rest, sum(case when paid is not NULL then paid else 0 end) as paid, sum(case when canceled is not NULL then canceled else 0 end) as canceled, sum(case when refunded is not NULL then refunded else 0 end) as refunded from product left join invoice using (product_id) group by name order by name
select name, sum(coalesce(i.rest,0)) rest, sum(coalesce(i.paid,0)) paid, sum(coalesce(i.canceled,0)) canceled, sum(coalesce(i.refunded,0)) refunded from product p left join invoice i on p.product_id = i.product_id group by p.name order by p.name
select name, sum(coalesce(rest, 0)) as rest, sum(coalesce(paid, 0)) as paid, sum(coalesce(canceled, 0)) as canceled, sum(coalesce(refunded, 0)) as refunded from product as p left join invoice as i on p.product_id = i.product_id group by 1 order by 1
select name, sum(coalesce(rest, 0)) as rest, sum(coalesce(paid, 0)) as paid, sum(coalesce(canceled, 0)) as canceled, sum(coalesce(refunded, 0)) as refunded from product p left join invoice i on p.product_id = i.product_id group by p.product_id order by p.name
select name, sum(ifnull(rest,0)) as rest, sum(ifnull(paid,0) ) as paid , sum(ifnull(canceled,0) ) as canceled , sum(ifnull(refunded,0) ) as refunded from product left join invoice using(product_id) group by name order by name
select name, sum(ifnull(rest,0)) as rest, sum(ifnull(paid,0)) as paid, sum(ifnull(canceled,0)) as canceled, sum(ifnull(refunded,0)) as refunded from product left join invoice using(product_id) group by 1 order by 1
select name, sum(rest) as rest, sum( paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Product p join Invoice i on p.product_id = i.product_id group by p.product_id, name order by name
select name, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Invoice as i join Product as p on i.product_id = p.product_id group by name order by name
select name, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Invoice join Product using(product_id) group by Product.product_id order by name
select name, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Product join Invoice using (product_id) group by 1 order by 1
select name, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Product join Invoice using(product_id) group by 1 order by 1
select name, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Product p join Invoice i on p.product_id=i.product_id group by name order by name
select name, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from invoice a left join product b on a.product_id = b.product_id group by a.product_id order by name
select name, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) refunded from product as a join invoice as b on a.product_id = b.product_id group by name order by name
select name, sum(rest) rest, sum(paid) paid, sum(canceled)canceled, sum(refunded) refunded from product join invoice using(product_id) group by product_id order by name
select name,coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) canceled,coalesce(sum(refunded),0) as refunded from invoice right join product on invoice.product_id=product.product_id group by name order by name
select name,coalesce(sum(rest),0) as rest,coalesce(sum(paid),0) as paid,coalesce(sum(canceled),0) as canceled,coalesce(sum(refunded),0) as refunded from Invoice i right join Product p on i.product_id=p.product_id group by name order by name
select name,coalesce(sum(rest),0) as rest,coalesce(sum(paid),0) as paid,coalesce(sum(canceled),0) as canceled,coalesce(sum(refunded),0) as refunded from product p left join invoice i on i.product_id=p.product_id group by name order by name
select name,ifnull(sum(rest),0) as rest,ifnull(sum(paid),0) as paid,ifnull(sum(canceled),0) as canceled,ifnull(sum(refunded),0) as refunded from Invoice right join Product on Product.product_id = Invoice.product_id group by name order by name
select name,sum(ifnull(rest,0)) rest,sum(ifnull(paid,0)) paid,sum(ifnull(canceled,0)) canceled ,sum(ifnull(refunded,0)) refunded from Product p left join Invoice i on p.product_id=i.product_id group by p.product_id order by name
select name,sum(rest) rest,sum(paid) paid,sum(canceled) canceled, sum(refunded) refunded from invoice left join product on invoice.product_id=product.product_id group by invoice.product_id order by name
select name,sum(rest) rest,sum(paid)paid,sum(canceled) canceled,sum(refunded)refunded from product p join invoice i on p.product_id=i.product_id group by name order by name
select p.name , ifnull(sum(rest),0 )rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0)canceled , ifnull(sum(refunded),0 )refunded from product p left join invoice i on p.product_id = i.product_id group by p.product_id order by 1
select p.name , ifnull(t.rest, 0) as rest , ifnull(t.paid, 0) as paid , ifnull(t.canceled, 0) as canceled , ifnull(t.refunded, 0) as refunded from product p left join ( select product_id ,sum(rest) as rest , sum(paid) as paid , sum(canceled) as canceled , sum(refunded) as refunded from invoice group by product_id ) t on p.product_id = t.product_id order by name
select p.name , sum(coalesce(rest,0)) as rest , sum(coalesce(paid,0)) as paid , sum(coalesce(canceled,0)) as canceled , sum(coalesce(refunded,0)) as refunded FROM Product p LEFT JOIN Invoice i on p.product_id = i.product_id GROUP BY p.name ORDER BY p.name
select p.name as name , case when sum(rest) is null then 0 else sum(rest) end as rest , case when sum(paid) is null then 0 else sum(paid) end as paid , case when sum(canceled) is null then 0 else sum(canceled) end as canceled , case when sum(refunded) is null then 0 else sum(refunded) end as refunded from Invoice as i right join Product as p on p.product_id = i.product_id group by name order by name
select p.name as name , sum(case when rest is null then 0 else rest end) rest , sum(case when paid is null then 0 else paid end) paid , sum(case when canceled is null then 0 else canceled end) canceled , sum(case when refunded is null then 0 else refunded end) refunded from Product p left join Invoice i on p.product_id = i.product_id group by 1 order by 1
select p.name as name, coalesce(o.rest,0) rest, coalesce(o.paid,0) paid, coalesce(o.canceled,0) canceled, coalesce(o.refunded,0) refunded from ((select name,product_id from product) P left join (select product_id, sum(rest) rest, sum(paid) paid, sum(canceled) canceled, sum(refunded) refunded from invoice group by product_id) o on o.product_id=p.product_id) order by p.name
select p.name as name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled), 0) as canceled, ifnull(sum(i.refunded), 0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.product_id order by p.name
select p.name as name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by p.name order by p.name
select p.name name, sum(coalesce(i.rest,0)) rest, sum(coalesce(i.paid,0)) paid, sum(coalesce(i.canceled,0)) canceled, sum(coalesce(i.refunded,0)) refunded from product p left join invoice i on p.product_id = i.product_id group by p.name order by 1
select p.name name, sum(coalesce(i.rest,0)) rest, sum(coalesce(i.paid,0)) paid, sum(coalesce(i.canceled,0)) canceled, sum(coalesce(i.refunded,0)) refunded from product p left join invoice i on p.product_id = i.product_id group by p.name order by p.name
select p.name, (case when sum(i.rest) is not null then sum(i.rest ) else 0 end) as rest, (case when sum(i.paid) is not null then sum(i.paid) else 0 end) as paid, (case when sum(i.canceled) is not null then sum(i.canceled) else 0 end) as canceled, (case when sum(i.refunded) is not null then sum(i.refunded) else 0 end) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.product_id order by p.name
select p.name, COALESCE(SUM(i.rest),0) as rest, COALESCE(SUM(i.paid),0) as paid, COALESCE(SUM(i.canceled),0) as canceled, COALESCE(SUM(i.refunded),0) as refunded from invoice i right join product p on i.product_id = p.product_id group by p.product_id order by p.name
select p.name, COALESCE(SUM(i.rest),0) as rest,COALESCE(SUM(i.paid),0) as paid, COALESCE(SUM(i.canceled),0) as canceled,COALESCE(SUM(i.refunded),0) as refunded from Invoice i RIGHT JOIN Product p ON i.product_id = p.product_id group by p.name order by p.name
select p.name, COALESCE(sum(i.rest),0) AS rest, COALESCE(sum(i.paid),0) AS paid, COALESCE(sum(i.canceled),0) AS canceled, COALESCE(sum(i.refunded),0) AS refunded from product p left join invoice i on p.product_id = i.product_id group by p.name order by p.name
select p.name, COALESCE(sum(rest),0) as rest, COALESCE(sum(paid),0) as paid, COALESCE(sum(canceled),0) as canceled, COALESCE(sum(refunded),0) as refunded from Product p LEFT JOIN Invoice i on p.product_id = i.product_id group by p.name order by p.name
select p.name, IFNULL(SUM(i.rest), 0) as rest, IFNULL(SUM(i.paid), 0) as paid, IFNULL(SUM(i.canceled), 0) as canceled, IFNULL(SUM(i.refunded), 0) as refunded from product p LEFT JOIN Invoice I ON p.product_id = i.product_id group by p.product_id order by p.name
select p.name, SUM(i.rest) as rest, SUM(i.paid) as paid, SUM(i.canceled) as canceled, SUM(i.refunded) as refunded from product p INNER JOIN invoice i ON p.product_id = i.product_id group by p.name order by p.name asc
select p.name, a.rest, a.paid, a.canceled, a.refunded from (select product_id, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Invoice group by product_id) as a join Product p on a.product_id = p.product_id order by p.name
select p.name, case when sum(i.rest) is not null then sum(i.rest) else 0 end rest, case when sum(i.paid) is not null then sum(i.paid) else 0 end paid, case when sum(i.canceled) is not null then sum(i.canceled) else 0 end canceled, case when sum(i.refunded) is not null then sum(i.refunded) else 0 end refunded from product p left join invoice i on i.product_id = p.product_id group by p.product_id order by p.name
select p.name, coalesce (sum(i.rest),0) as rest, coalesce (sum(i.paid),0) as paid, coalesce (sum(i.canceled),0) as canceled, coalesce (sum(refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by p.name order by name
select p.name, coalesce(i.rest,0) as rest, coalesce(i.paid,0) as paid, coalesce(i.canceled,0) as canceled, coalesce(i.refunded,0) as refunded from (select product_id, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from Invoice group by product_id) i right join Product p on i.product_id = p.product_id order by p.name
select p.name, coalesce(sum(i.rest),0) as rest, coalesce(sum(i.paid), 0) as paid, coalesce(sum(i.canceled), 0) as canceled, coalesce(sum(i.refunded), 0) as refunded from product p left join invoice i on p.product_id = i.product_id group by p.product_id order by p.name
select p.name, coalesce(sum(i.rest),0) as rest, coalesce(sum(i.paid),0) as paid, coalesce(sum(i.canceled),0) as canceled, coalesce(sum(i.refunded),0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.name order by p.name
select p.name, coalesce(sum(i.rest),0) rest, coalesce(sum(i.paid),0) paid, coalesce(sum(i.canceled),0) canceled, coalesce(sum(i.refunded),0) refunded from product p left join invoice i on p.product_id=i.product_id group by p.name order by p.name
select p.name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from Invoice i right join Product p on p.product_id=i.product_id group by 1 order by 1
select p.name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from Product p left join Invoice i using (product_id) group by p.name order by p.name
select p.name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by 1 order by 1
select p.name, coalesce(sum(rest),0) as rest, coalesce(sum(paid),0) as paid, coalesce(sum(canceled),0) as canceled, coalesce(sum(refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by p.product_id order by p.name
select p.name, coalesce(sum(rest),0) rest, coalesce(sum(paid),0) paid, coalesce(sum(canceled),0) canceled, coalesce(sum(refunded),0) refunded from product p left join invoice i on i.product_id = p.product_id group by p.product_id order by p.name
select p.name, ifnull(i.rest, 0) as rest, ifnull(i.paid, 0) as paid, ifnull(i.canceled, 0) as canceled, ifnull(i.refunded, 0) as refunded from Product p left join ( select product_id, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from Invoice group by product_id) i on p.product_id = i.product_id order by p.name
select p.name, ifnull(rest,0) as rest, ifnull(paid,0) as paid, ifnull(canceled,0) as canceled, ifnull(refunded,0) as refunded from product p left join (select product_id, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from invoice group by product_id) as temp on p.product_id = temp.product_id order by p.name
select p.name, ifnull(sum(i.rest), 0) as rest, ifnull(sum(i.paid), 0) as paid, ifnull(sum(i.canceled), 0) as canceled, ifnull(sum(i.refunded), 0) as refunded from Product as p left join Invoice as i on p.product_id = i.product_id group by p.product_id order by p.name
select p.name, ifnull(sum(i.rest), 0) as rest, ifnull(sum(i.paid), 0) as paid, ifnull(sum(i.canceled), 0) as canceled, ifnull(sum(i.refunded), 0) as refunded from Product p left join Invoice i on (p.product_id = i.product_id) group by p.product_id order by p.name
select p.name, ifnull(sum(i.rest), 0) as rest, ifnull(sum(i.paid), 0) as paid, ifnull(sum(i.canceled), 0) as canceled, ifnull(sum(i.refunded), 0) as refunded from invoice i right join product p on i.product_id = p.product_id group by p.product_id order by p.name
select p.name, ifnull(sum(i.rest), 0) as rest, ifnull(sum(i.paid), 0) as paid, ifnull(sum(i.canceled), 0) as canceled, ifnull(sum(i.refunded), 0) as refunded from product as p left join invoice as i on p.product_id = i.product_id group by p.product_id order by p.name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid), 0) as paid, ifnull(sum(i.canceled), 0) as canceled, ifnull(sum(i.refunded), 0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.name order by p.name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid), 0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from Invoice i right join Product p on p.product_id = i.product_id group by p.name order by p.name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from Invoice i right join Product p on i.product_id = p.product_id group by 1 order by 1
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from invoice i right join product p on i.product_id = p.product_id group by p.product_id order by p.name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from invoice i right join product p on p.product_id = i.product_id group by p.name order by p.name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from product p left join Invoice i on p.product_id=I.product_id group by p.product_id order by p.name asc
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from product p left join invoice i on i.product_id = p.product_id group by p.name order by p.name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by p.name order by p.name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from product p left join invoice i on p.product_id=i.product_id group by name order by name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from product p left join invoice i on p.product_id=i.product_id group by p.name order by p.name
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from product p left join invoice i using (product_id) group by 1 order by 1
select p.name, ifnull(sum(i.rest),0) as rest, ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Product as p left join Invoice as i on i.product_id = p.product_id group by p.name order by p.name
select p.name, ifnull(sum(i.rest),0) rest, ifnull(sum(i.paid),0) paid, ifnull(sum(i.canceled),0) canceled, ifnull(sum(i.refunded),0) refunded from invoice i right join product p on p.product_id = i.product_id group by p.name order by p.name
select p.name, ifnull(sum(i.rest),0) rest, ifnull(sum(i.paid),0) paid, ifnull(sum(i.canceled),0)canceled, ifnull(sum(i.refunded),0)refunded from Product p left join Invoice i on p.product_id=i.product_id group by p.name order by name
select p.name, ifnull(sum(inv.rest),0) rest, ifnull(sum(inv.paid),0) paid, ifnull(sum(inv.canceled),0) canceled, ifnull(sum(inv.refunded),0) refunded from Product p left join Invoice inv on p.product_id=inv.product_id group by p.product_id order by p.name
select p.name, ifnull(sum(rest) ,0)as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product as p left join invoice as v on p.product_id = v.product_id group by 1 order by 1
select p.name, ifnull(sum(rest), 0) as rest, ifnull(sum(paid), 0) as paid, ifnull(sum(canceled), 0) as canceled, ifnull(sum(refunded), 0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.name order by 1
select p.name, ifnull(sum(rest), 0) as rest, ifnull(sum(paid), 0) as paid, ifnull(sum(canceled), 0) as canceled, ifnull(sum(refunded), 0) as refunded from Product p left join invoice i on i.product_id = p.product_id group by 1 order by 1
select p.name, ifnull(sum(rest),0) as 'rest', ifnull(sum(paid),0) as 'paid', ifnull(sum(canceled),0) as 'canceled', ifnull(sum(refunded),0) as 'refunded' from product p left join invoice i on p.product_id = i.product_id group by p.name order by name
select p.name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from Invoice as i right join Product as p on i.product_id = p.product_id group by 1 order by 1
select p.name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product p left join invoice i on p.product_id = i.product_id group by 1 order by 1
select p.name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0) as refunded from product p left join invoice i on p.product_id=i.product_id group by p.product_id order by p.name
select p.name, ifnull(sum(rest),0) as rest, ifnull(sum(paid),0) as paid, ifnull(sum(canceled),0) as canceled, ifnull(sum(refunded),0)as refunded from product p left join invoice i on p.product_id = i.product_id group by 1 order by 1
select p.name, ifnull(sum(rest),0) rest, ifnull(sum(paid),0) paid, ifnull(sum(canceled),0) canceled, ifnull(sum(refunded),0) refunded from Product p left join Invoice i on p.product_id=i.product_id group by p.product_id order by p.name
select p.name, sum(coalesce(i.rest,0)) as rest, sum(coalesce(i.paid,0) )as paid, sum(coalesce(i.canceled,0)) as canceled, sum(coalesce(i.refunded,0) )as refunded from Product p left join Invoice i on i.product_id = p.product_id group by p.name order by p.name
select p.name, sum(i.rest) as rest, sum(i.paid) as paid, sum(i.canceled) as canceled, sum(i.refunded) as refunded from Product p inner join Invoice i on p.product_id=i.product_id group by p.name order by p.name
select p.name, sum(i.rest) as rest, sum(i.paid) as paid, sum(i.canceled) as canceled, sum(i.refunded) as refunded from invoice i left join product p using (product_id) group by 1 order by 1
select p.name, sum(i.rest) as rest, sum(i.paid) as paid, sum(i.canceled) as canceled, sum(i.refunded) as refunded from product p right join invoice i on p.product_id = i.product_id group by p.product_id order by name
select p.name, sum(i.rest) rest, sum(i.paid) paid, sum(i.canceled) canceled, sum(i.refunded) refunded from product p join invoice i on i.product_id = p.product_id group by p.product_id order by p.name
select p.name, sum(i.rest)rest, sum(i.paid)paid, sum(i.canceled)canceled, sum(i.refunded)refunded from product p join invoice i on p.product_id = i.product_id group by 1 order by 1 asc
select p.name, sum(ifnull(i.rest,0)) as rest, sum(ifnull(i.paid,0)) as paid, sum(ifnull(i.canceled,0)) as canceled, sum(ifnull(i.refunded,0)) as refunded from Product as p left join Invoice as i on p.product_id = i.product_id group by p.product_id order by p.name
select p.name, sum(ifnull(i.rest,0)) rest, sum(ifnull(i.paid,0)) paid, sum(ifnull(i.canceled,0)) canceled, sum(ifnull(i.refunded,0)) refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.name order by p.name
select p.name, sum(ifnull(rest, 0)) as rest, sum(ifnull(paid, 0)) as paid, sum(ifnull(canceled, 0)) as canceled, sum(ifnull(refunded, 0)) as refunded from product p left join invoice i using(product_id) group by 1 order by 1
select p.name,coalesce(sum(i.rest),0) as rest, coalesce(sum(i.paid),0) as paid, coalesce(sum(i.canceled),0) as canceled, coalesce(sum(i.refunded),0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by 1 order by 1
select p.name,ifnull(sum(i.rest),0) as rest,ifnull(sum(i.paid),0) as paid, ifnull(sum(i.canceled),0) as canceled, ifnull(sum(i.refunded),0) as refunded from Product p left join Invoice i on p.product_id = i.product_id group by p.product_id order by p.name
select p.name,sum(coalesce(rest,0)) as 'rest',sum(coalesce(paid,0)) as 'paid',sum(coalesce(canceled,0)) 'canceled',sum(coalesce(refunded,0)) 'refunded' from product p left join invoice i on i.product_id = p.product_id group by p.name order by 1
select p.name,sum(i.rest) as rest, sum(i.paid) as paid, sum(i.canceled) as canceled, sum(i.refunded) as refunded from product p join invoice I on i.product_id = p.product_id group by p.name order by p.name
select prod.name as name ,ifnull(sum(invoice.rest),0) as rest ,ifnull(sum(invoice.paid),0) as paid ,ifnull(sum(invoice.canceled),0) as canceled ,ifnull(sum(refunded),0) as refunded from Product prod left join Invoice invoice on prod.product_id = invoice.product_id group by name order by name
select product.name, ifnull(sum(invoice.rest),0) as rest, ifnull(sum(invoice.paid),0) as paid, ifnull(sum(invoice.canceled),0) as canceled, ifnull(sum(invoice.refunded),0) as refunded from invoice right join product on invoice.product_id = product.product_id group by name order by product.name
select product.name, ifnull(sum(invoice.rest),0) as rest, ifnull(sum(invoice.paid),0) as paid, ifnull(sum(invoice.canceled),0) as canceled, ifnull(sum(invoice.refunded),0) as refunded from product left outer join invoice on product.product_id = invoice.product_id group by name order by 1
select product.name, sum(invoice.rest) as rest, sum(invoice.paid) as paid, sum(invoice.canceled) as canceled, sum(invoice.refunded) as refunded from invoice join product on invoice.product_id = product.product_id group by product.name order by product.name asc
select product.name, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from invoice left join product on invoice.product_id = product.product_id group by product.product_id order by product.name
select s.name, sum(case When i.rest>=0 then i.rest else 0 end) as rest, sum(case When i.paid>=0 then i.paid else 0 end) as paid, sum(case when i.canceled>=0 then i.canceled else 0 end) as canceled, sum(case when i.refunded>=0 then i.refunded else 0 end) as refunded from product s left join invoice i on s.product_id=i.product_id group by s.name order by s.name
select t1.name as name, COALESCE(sum(t2.rest),0) as rest, COALESCE(sum(t2.paid),0) as paid, COALESCE(sum(t2.canceled),0) as canceled, COALESCE(sum(t2.refunded),0) as refunded from product as t1 left join invoice as t2 on t1.product_id = t2.product_id group by t1.product_id order by t1.name
select x.name as name, ifnull(y.rt,0) as rest, ifnull(y.p,0) as paid, ifnull(y.c,0) as canceled, ifnull(y.rf,0) as refunded from Product as x left join (select product_id, sum(rest) as rt, sum(paid) as p, sum(canceled) as c, sum(refunded) as rf from Invoice group by product_id) as y on x.product_id = y.product_id order by x.name
with cte as ( select product_id, sum(case when rest!=0 then rest else 0 end) as rest, sum(case when paid!=0 then paid else 0 end) as paid, sum(case when canceled!=0 then canceled else 0 end) as canceled, sum(case when refunded !=0 then refunded else 0 end) as refunded from invoice group by 1 ) select p.name,ifnull(c.rest,0) as rest,ifnull(c.paid,0) as paid,ifnull(c.canceled,0) as canceled,ifnull(c.refunded,0) as refunded from product p left join cte c on c.product_id=p.product_id order by 1 asc
with cte as ( select product_id, sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from invoice group by product_id ) select product.name, cte.rest, cte.paid, cte.canceled, cte.refunded from cte left join product on cte.product_id = product.product_id order by name
with cte as ( select product_id,sum(rest) as rest, sum(paid) as paid, sum(canceled) as canceled, sum(refunded) as refunded from invoice group by product_id ) select name, coalesce(rest,0) as rest, coalesce(paid,0) as paid, coalesce(canceled,0) as canceled, coalesce(refunded,0) as refunded from cte right join product as p on cte.product_id=p.product_id order by name
with cte_final as ( select name, sum(coalesce(rest, 0)) as rest, sum(coalesce(paid, 0)) as paid, sum(coalesce(canceled, 0)) as canceled, sum(coalesce(refunded, 0)) as refunded from Product as p left join Invoice as i on p.product_id = i.product_id group by 1 order by 1 ) select * from cte_final
with dt as ( select product_id , sum(rest) as rest , sum(paid) as paid , sum(canceled) as canceled , sum(refunded) as refunded from invoice i group by 1 order by 1 ) select p.name as name , coalesce(rest,0) as rest , coalesce(paid,0) as paid , coalesce(canceled,0) as canceled , coalesce(refunded,0) as refunded from product p left join dt on dt.product_id=p.product_id order by 1
with temp as ( select distinct product_id, sum(rest) over (partition by product_id) as rest, sum(paid) over (partition by product_id) as paid, sum(canceled) over (partition by product_id) as canceled, sum(refunded) over (partition by product_id) as refunded from invoice) select name, rest, paid, canceled, refunded from temp t join product p on t.product_id=p.product_id order by 1
