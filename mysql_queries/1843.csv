SELECT DISTINCT account_id FROM ( SELECT a.account_id, mth, LAG(mth) OVER (PARTITION BY a.account_id ORDER BY t.mth) AS lg, LEAD(mth) OVER (PARTITION BY a.account_id ORDER BY t.mth) AS ld FROM accounts a INNER JOIN ( SELECT account_id, DATE_FORMAT(day, '%Y-%m-01') AS mth, SUM(amount) AS amount FROM transactions WHERE type = 'Creditor' GROUP BY account_id, DATE_FORMAT(day, '%Y-%m-01') ) t ON t.account_id = a.account_id AND t.amount > a.max_income ) a WHERE TIMESTAMPDIFF(MONTH, lg, mth) = 1 OR TIMESTAMPDIFF(MONTH, mth, ld) = 1
SELECT DISTINCT account_id FROM ( SELECT account_id, m, LAG(m,1) OVER(PARTITION BY account_id ORDER BY m) AS previous_m FROM( SELECT cte1.account_id, m, income, max_income FROM (SELECT account_id, MONTH(day) AS m, SUM(amount) AS income FROM Transactions WHERE type = 'Creditor' GROUP BY 1,2 ) cte1 LEFT JOIN Accounts a ON cte1.account_id = a.account_id WHERE income > max_income ORDER BY m )cte2 ORDER BY 1 )cte3 WHERE previous_m - m = -1 ORDER BY 1
SELECT DISTINCT account_id FROM ( SELECT account_id, month, total_income, LEAD(month, 1) OVER (PARTITION BY account_id ORDER BY month) AS next_month, LEAD(total_income, 1) OVER (PARTITION BY account_id ORDER BY month) AS total_income_next_month, max_income FROM ( SELECT a.account_id, DATE(DATE_SUB(day, INTERVAL DAYOFMONTH(day)-1 DAY)) AS month, a.max_income, SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS total_income FROM Transactions t JOIN Accounts a ON t.account_id = a.account_id GROUP BY 1,2,3 ) t1 ) t2 WHERE total_income > max_income AND total_income_next_month > max_income AND DATE_FORMAT(month + INTERVAL 1 MONTH,'%Y-%m-01') = next_month ORDER BY 1
SELECT DISTINCT c.account_id FROM ( SELECT a.account_id , a.month , a.sum_amount AS 'amount1' , b.sum_amount AS 'amount2' FROM ( SELECT account_id , MONTH(day) AS 'month' , SUM(amount) AS 'sum_amount' FROM Transactions WHERE type = 'Creditor' GROUP BY account_id , MONTH(day) ORDER BY account_id , MONTH(day) ) a LEFT JOIN ( SELECT account_id , MONTH(day) AS 'month' , SUM(amount) AS 'sum_amount' FROM Transactions WHERE type = 'Creditor' GROUP BY account_id , MONTH(day) ORDER BY account_id , MONTH(day) ) b ON a.account_id=b.account_id AND a.month=b.month-1 WHERE b.sum_amount IS NOT NULL ) c LEFT JOIN Accounts d ON c.account_id=d.account_id WHERE d.max_income < c.amount1 AND d.max_income < c.amount2
SELECT DISTINCT c.account_id FROM ( SELECT b.account_id, LEAD(b.month) OVER (PARTITION BY b.account_id ORDER BY b.month) next_month, b.month FROM ( SELECT t.account_id, SUM(t.amount) income, EXTRACT(YEAR_MONTH FROM t.day) month, CASE WHEN a.max_income < SUM(t.amount) THEN 'IS Suspicious' ELSE 'NOT Suspicious' END status FROM Transactions t JOIN Accounts a ON t.type = 'Creditor' AND a.account_id = t.account_id GROUP BY t.account_id, EXTRACT(YEAR_MONTH FROM t.day) ) b WHERE b.status = 'IS Suspicious' ) c WHERE PERIOD_DIFF(c.next_month, c.month) = 1
SELECT DISTINCT t1.account_id FROM ( SELECT account_id, CAST(CONCAT(LEFT(day,7),'-01') AS date) AS dt, SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS total_income FROM Transactions GROUP BY account_id, CAST(CONCAT(LEFT(day,7),'-01') AS date) ) t1 LEFT JOIN ( SELECT account_id, CAST(CONCAT(LEFT(day,7),'-01') AS date) AS dt, SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS total_income FROM Transactions GROUP BY account_id, CAST(CONCAT(LEFT(day,7),'-01') AS date) ) t2 ON DATE_ADD(t1.dt, interval 1 month) = t2.dt AND t1.account_id = t2.account_id LEFT JOIN Accounts a ON t1.account_id = a.account_id GROUP BY LEFT(t1.dt, 7), t1.account_id HAVING COALESCE(SUM(t1.total_income),0) > MIN(max_income) AND COALESCE(SUM(t2.total_income),0) > MIN(max_income)
SELECT DISTINCT temp2.account_id FROM (SELECT Temp1.account_id, total_income, max_income, month, rank() OVER(ORDER BY month) AS rk FROM (SELECT SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS total_income, Transactions.account_id, month(day) AS month FROM Transactions GROUP BY account_id, month) temp1 JOIN Accounts ON temp1.account_id = Accounts.account_id WHERE max_income < total_income) temp2,(SELECT Temp1.account_id, total_income, max_income, month, rank() OVER(ORDER BY month) AS rk FROM (SELECT SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS total_income, Transactions.account_id, month(day) AS month FROM Transactions GROUP BY account_id, month) temp1 JOIN Accounts ON temp1.account_id = Accounts.account_id WHERE max_income < total_income) temp3 WHERE temp2.account_id = temp3.account_id and temp2.month - temp3.month = (1 AND 2)
SELECT distinct account_id FROM (SELECT a.account_id, tot_income.month, LEAD(tot_income.month,1) OVER(PARTITION BY a.account_id ORDER BY tot_income.month ASC) AS next_month FROM (SELECT account_id,month(day) as month,sum(amount) as total_income FROM transactions t WHERE type = "Creditor" GROUP BY account_id, month(day)) tot_income INNER JOIN accounts a ON tot_income.account_id = a.account_id AND tot_income.total_income > a.max_income) check_consecutive where ABS(next_month-month) = 1
SELECT distinct account_id FROM (SELECT a.account_id,tot_income.month,LEAD(tot_income.month,1) OVER(PARTITION BY a.account_id ORDER BY tot_income.month ASC) AS next_month FROM (SELECT account_id,month(day) as month,sum(amount) as total_income FROM transactions t WHERE type = "Creditor" GROUP BY account_id, month(day)) tot_income INNER JOIN accounts a ON tot_income.account_id = a.account_id AND tot_income.total_income > a.max_income) check_consecutive where ABS(next_month-month) = 1
SELECT t1.account_id FROM ( SELECT t.account_id, DATE_FORMAT(day,'%Y%m') AS date, SUM(amount) AS 'income', Accounts.max_income FROM Transactions t LEFT JOIN Accounts ON Accounts.account_id=t.account_id WHERE t.type='Creditor' GROUP BY t.account_id, DATE_FORMAT(day,'%Y%m') HAVING SUM(amount)>Accounts.max_income ) t1, ( SELECT t.account_id, DATE_FORMAT(day,'%Y%m') AS date, SUM(amount) AS 'income', Accounts.max_income FROM Transactions t LEFT JOIN Accounts ON Accounts.account_id=t.account_id WHERE t.type='Creditor' GROUP BY t.account_id, DATE_FORMAT(day,'%Y%m') HAVING SUM(amount)>Accounts.max_income ) t2 WHERE t1.account_id=t2.account_id AND PERIOD_DIFF(t1.date, t2.date)=1 GROUP BY t1.account_id ORDER BY t1.account_id
Select distinct account_id from (select row_number() over (partition by account_id, sus order by month_year) , month_year, mon, yr, account_id, total, max_income, sus, mon - row_number() over (partition by account_id, sus order by month_year) gid from (Select date_format(t.day,'%Y-%m') month_year, month(t.day) mon, year(t.day) yr, t.account_id, sum(t.amount) total, a.max_income, case when sum(t.amount) > a.max_income then 1 else 0 end sus from Transactions t,Accounts a where t.type = 'Creditor' and t.account_id = a.account_id group by 1,4 ) a Where sus = 1 ) b Group by account_id, gid having count(*) > 1
Select distinct t2.account_id from ( Select t1.account_id, t1.total_amount, t1.tran_Month, lag(t1.tran_Month) over(partition by account_id order by t1.Tran_Month) as lag_tran_Month from ( SELECT ACCOUNT_ID, SUM(AMOUNT) as total_amount, Extract(Month from day) AS tran_Month FROM TRANSACTIONS WHERE TYPE ='Creditor' group by account_id,Tran_Month )t1 inner join accounts a on t1.account_id = a.account_id where a.max_income < t1.total_amount )t2 where t2.tran_Month-t2.lag_tran_Month = 1
WITH A AS ( SELECT account_id , YEAR(day) AS dt_year , MONTH(day) AS dt_month , SUM(amount) AS amt FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, YEAR(day), MONTH(day) ) , B AS ( SELECT A.account_id , A.dt_year , A.dt_month , A.amt > T.max_income AS red_flag FROM A JOIN Accounts T ON A.account_id = T.account_id ) , C AS ( SELECT account_id , dt_year , dt_month , red_flag , LAG(dt_month) OVER(PARTITION BY account_id ORDER BY dt_year, dt_month) AS prev_dt_month , LAG(red_flag) OVER(PARTITION BY account_id ORDER BY dt_year, dt_month) AS prev_red_flag FROM B ) SELECT DISTINCT C.account_id FROM C WHERE C.red_flag = 1 AND C.prev_red_flag IS NOT NULL AND C.prev_red_flag = 1 AND C.prev_dt_month IS NOT NULL AND C.dt_month - C.prev_dt_month = 1
WITH A AS (SELECT account_id, 12*EXTRACT(YEAR FROM day)+EXTRACT(MONTH FROM day) AS date_col, SUM(amount) AS total_income FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, date_col), B AS (SELECT A.account_id, A.date_col FROM A INNER JOIN Accounts ON A.account_id = Accounts.account_id AND A.total_income > Accounts.max_income) SELECT DISTINCT B1.account_id FROM B AS B1 INNER JOIN B AS B2 ON B1.account_id = B2.account_id AND B1.date_col - B2.date_col = 1 ORDER BY B1.account_id
WITH A AS (SELECT account_id, EXTRACT(YEAR FROM day) AS year_col, EXTRACT(MONTH FROM day) AS mon_col, SUM(amount) AS total_income FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, year_col, mon_col), B AS (SELECT A.account_id, A.year_col, A.mon_col, A.total_income FROM A INNER JOIN Accounts ON A.account_id = Accounts.account_id AND A.total_income > Accounts.max_income) SELECT DISTINCT B1.account_id FROM B AS B1 LEFT JOIN B AS B2 ON B1.account_id = B2.account_id WHERE 12*(B1.year_col - B2.year_col)+B1.mon_col-B2.mon_col = 1 ORDER BY B1.account_id
WITH A AS(SELECT account_id, LEFT(day, 7) AS month, SUM(amount) AS income FROM Transactions WHERE type = 'Creditor' GROUP BY 1,2), B AS(SELECT a.account_id, month,income, max_income FROM A a JOIN Accounts b USING (account_id) WHERE max_income<income) SELECT DISTINCT a.account_id FROM B a JOIN B b ON a.account_id = b.account_id AND LEFT(a.month,4) = LEFT(b.month,4) AND SUBSTRING(a.month,6,2) = SUBSTRING(b.month,6,2)-1 ORDER BY 1
WITH A AS(SELECT account_id, MONTH(day) AS month, SUM(amount) AS income FROM Transactions WHERE type = 'Creditor' GROUP BY 1,2), B AS(SELECT a.account_id, month,income, max_income FROM A a JOIN Accounts b USING (account_id) WHERE max_income<income) SELECT DISTINCT a.account_id FROM B a JOIN B b ON a.account_id = b.account_id AND a.month = b.month-1 ORDER BY 1
WITH A AS(SELECT account_id, date_format(day, '%Y%m') AS month, SUM(amount) AS income FROM Transactions WHERE type = 'Creditor' GROUP BY 1,2), B AS(SELECT a.account_id, month,income, max_income FROM A a JOIN Accounts b USING (account_id) WHERE max_income<income) SELECT DISTINCT a.account_id FROM B a JOIN B b ON a.account_id = b.account_id AND ABS(PERIOD_DIFF(b.month, a.month))=1 ORDER BY 1
WITH A AS(SELECT account_id, date_format(day, '%Y%m') AS month, SUM(amount) AS income FROM Transactions WHERE type = 'Creditor' GROUP BY 1,2), B AS(SELECT a.account_id, month,income, max_income FROM A a JOIN Accounts b USING (account_id) WHERE max_income<income) SELECT DISTINCT a.account_id FROM B a JOIN B b ON a.account_id = b.account_id AND PERIOD_DIFF(b.month, a.month)=1 ORDER BY 1
WITH CET AS (SELECT T.account_id, MONTH(day) AS DAY, max_income FROM Transactions T JOIN Accounts A ON T.account_id = A.account_id WHERE type = 'Creditor' GROUP BY account_id, MONTH(day) HAVING SUM(amount) > A.max_income) SELECT DISTINCT account_id FROM CET WHERE (account_id, DAY-1) IN (SELECT account_id, DAY FROM CET) OR (account_id, DAY+1) IN (SELECT account_id, DAY FROM CET)
WITH CET AS (SELECT T.account_id, MONTH(day) AS mos, max_income FROM Transactions T JOIN Accounts A ON T.account_id = A.account_id WHERE type = 'Creditor' GROUP BY account_id, MONTH(day) HAVING SUM(amount) > A.max_income) SELECT DISTINCT account_id FROM CET WHERE (account_id, mos-1) IN (SELECT account_id, mos FROM CET) OR (account_id, mos+1) IN (SELECT account_id, mos FROM CET)
WITH CTE AS ( SELECT DATE_FORMAT(day,'%Y%m') AS date, Accounts.account_id, SUM(amount) AS income, max_income FROM Transactions JOIN Accounts ON Accounts.account_id=Transactions.account_id WHERE type='Creditor' GROUP BY 1,2 HAVING SUM(amount) > max_income ) SELECT DISTINCT a.account_id FROM CTE a, CTE b WHERE a.account_id=b.account_id AND PERIOD_DIFF(a.date, b.date)=1
WITH CTE AS ( SELECT MONTH(day) as month, d1.account_id, SUM(amount) as total_amount, max_income, CASE WHEN SUM(amount) > max_income THEN 1 ELSE 0 END as flag FROM Transactions as d1 JOIN Accounts as d2 ON d1.account_id = d2.account_id WHERE type = 'Creditor' GROUP BY MONTH(day), d1.account_id ) select distinct c1.account_id from cte c1, cte c2 where c1.account_id = c2.account_id and c2.month-c1.month =1 and c1.flag = 1 and c2.flag = 1
WITH CTE AS ( SELECT T.account_id, year(day) * 12 + month(day) month, (CASE WHEN SUM(amount) > A.max_income THEN 1 ELSE 0 END) exceed FROM transactions T JOIN accounts A ON T.account_id = A.account_id WHERE type = 'Creditor' GROUP BY year(day) * 12 + month(day), T.account_id ) SELECT DISTINCT C1.account_id FROM CTE C1, CTE C2 WHERE C1.account_id = C2.account_id AND C2.month - C1.month = 1 AND C1.exceed = 1 AND C2.exceed = 1
WITH CTE AS ( SELECT T.account_id, year(day) * 12 + month(day) month, CASE WHEN SUM(amount) > A.max_income THEN 1 ELSE 0 END exceed FROM transactions T JOIN accounts A ON T.account_id = A.account_id WHERE type = 'Creditor' GROUP BY year(day) * 12 + month(day), T.account_id ) SELECT DISTINCT C1.account_id FROM CTE C1, CTE C2 WHERE C1.account_id = C2.account_id AND C2.month - C1.month = 1 AND C1.exceed = 1 AND C2.exceed = 1
WITH CTE AS ( SELECT Transactions.account_id, Date_Format(day,'%m/%Y') AS Date, SUM(amount) AS INCOME FROM Transactions INNER JOIN Accounts A ON Transactions.account_id = A.account_id WHERE type = 'Creditor' GROUP BY Transactions.account_id,Date_Format(day,'%m/%Y'), max_income HAVING SUM(amount) > max_income ) SELECT DISTINCT C1.account_id FROM CTE C1 INNER JOIN CTE C2 ON C1.account_id = C2.account_id AND PERIOD_DIFF(C1.date,C2.date) = 1 ORDER BY 1 ASC
WITH CTE AS ( SELECT Transactions.account_id, Date_Format(day,'%m/%Y') AS Date, SUM(amount) AS INCOME FROM Transactions INNER JOIN Accounts A ON Transactions.account_id = A.account_id WHERE type = 'Creditor' GROUP BY Transactions.account_id,Date_Format(day,'%m/%Y'),max_income HAVING SUM(amount) > A.max_income ) SELECT DISTINCT C1.account_id FROM CTE C1 INNER JOIN CTE C2 ON C1.account_id = C2.account_id AND PERIOD_DIFF(C2.date,C1.date) = 1 ORDER BY 1 ASC
WITH CTE AS ( SELECT account_id, SUM(amount) as total_income, MONTH(day) as mon FROM transactions WHERE type='Creditor' GROUP BY account_id, mon ), CTE1 AS ( SELECT accounts.account_id, mon FROM CTE JOIN accounts USING(account_id) WHERE total_income>max_income ) SELECT DISTINCT cte1.account_id as account_id FROM CTE1 JOIN CTE1 CTE2 USING(account_id) WHERE abs(cte1.mon-cte2.mon)=1
WITH CTE AS ( SELECT account_id, year(day) as yr, month(day) as mnth, sum(amount) as total FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, year(day), month(day) ), CTE2 AS ( SELECT A.account_id, A.total as total_A, B.total as total_B FROM CTE A INNER JOIN CTE B ON A.account_id = B.account_id AND A.yr = B.yr AND A.mnth = B.mnth - 1 INNER JOIN Accounts C ON A.account_id = C.account_id WHERE A.total > C.max_income and B.total > C.max_income ) SELECT DISTINCT account_id FROM CTE2
WITH CTE AS ( SELECT t.account_id, MONTH(day) AS month, a.max_income FROM Transactions t INNER JOIN Accounts a ON t.account_id = a.account_id WHERE type = 'Creditor' GROUP BY t.account_id, MONTH(day) HAVING SUM(t.amount) > a.max_income ) SELECT DISTINCT c.account_id FROM CTE c WHERE (c.account_id, c.month - 1) IN (SELECT account_id, month FROM CTE) OR (c.account_id, c.month + 1) IN (SELECT account_id, month FROM CTE)
WITH CTE AS ( SELECT t.account_id, year(day)*12 + month(day) as m, SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS total_income, max_income FROM Transactions t JOIN Accounts a ON t.account_id = a.account_id GROUP BY t.account_id, year(day), month(day) ) SELECT distinct c1.account_id FROM CTE c1 JOIN CTE c2 ON c1.account_id = c2.account_id AND c1.m +1 = c2.m WHERE c1.total_income > c1.max_income AND c2.total_income > c2.max_income
WITH CTE AS (SELECT DISTINCT T.account_id, MONTH(day) MONTH,max_income, SUM(amount) OVER(PARTITION BY account_id, MONTH(day)) monthly_income FROM Transactions T JOIN Accounts A ON T.account_id = A.account_id WHERE type = 'Creditor'), CTE2 AS (SELECT * FROM CTE WHERE monthly_income > max_income) SELECT DISTINCT T2.account_id FROM CTE2 T1, CTE2 T2 WHERE T1.account_id = T2.account_id AND T1.MONTH = T2.MONTH - 1
WITH CTE AS( SELECT t.account_id, year(day)*12 + month(day) as month, (CASE WHEN SUM(amount)> a.max_income THEN 1 ELSE 0 END) as exceed FROM Accounts a INNER JOIN Transactions t USING(account_id) WHERE type = 'Creditor' GROUP BY account_id, month ) SELECT distinct c1.account_id FROM cte c1, cte c2 WHERE c1.account_id = c2.account_id AND c2.month - c1.month = 1 AND c1.exceed = 1 AND c2.exceed = 1
WITH CTE AS(SELECT account_id, MONTH(day) AS month,SUM(amount) AS total_income FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, month ORDER BY 1,2) SELECT DISTINCT a.account_id FROM Accounts a JOIN CTE c1 ON a.account_id = c1.account_id AND a.max_income < c1.total_income JOIN CTE c2 ON a.account_id = c2.account_id AND c1.month = c2.month - 1 AND a.max_income < c2.total_income ORDER BY 1
WITH CTE1 AS ( SELECT ACCOUNT_ID, Month(DAY) AS TRANSACTION_MONTH, SUM(AMOUNT) AS TOTAL_INCOME FROM TRANSACTIONS WHERE TYPE = 'Creditor' GROUP BY 1,2 ORDER BY 1,2 ) select c.account_id from cte1 c join accounts a on (c.account_id = a.account_id) join cte1 c1 on (c.account_id = c1.account_id and c1.TRANSACTION_MONTH = c.TRANSACTION_MONTH + 1) where c.total_income > a.max_income and c1.total_income > a.max_income group by 1
WITH CTE1 AS ( SELECT account_id, SUM(amount) AS total, SUBSTR(day, 1, 7) AS month FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, SUBSTR(day, 1, 7)), CTE2 AS ( SELECT CTE1.account_id, CONCAT(month, '-01') AS month, total, max_income FROM CTE1 JOIN Accounts ON CTE1.account_id = Accounts.account_id HAVING total>max_income) SELECT DISTINCT a.account_id FROM CTE2 AS A, CTE2 AS B WHERE a.account_id = b.account_id AND a.month = DATE_ADD(b.month, INTERVAL 1 MONTH) ORDER BY account_id
WITH CTETable AS ( SELECT t.account_id , YEAR(t.day) * 12 + MONTH(t.day) AS month , CASE WHEN SUM(t.amount) > a.max_income THEN 1 ELSE 0 END AS isExceeded FROM Transactions t LEFT JOIN Accounts a ON a.account_id = t.account_id WHERE t.type = 'Creditor' GROUP BY t.account_id , month ) SELECT DISTINCT(c1.account_id) FROM CTETable c1 , CTETable c2 WHERE c1.account_id = c2.account_id AND c2.month - c1.month = 1 AND c1.isExceeded = 1 AND c2.isExceeded = 1
WITH MonthlyAccountCredited AS ( SELECT account_id, CONVERT(DATE_ADD(day, INTERVAL 1-DAY(day) DAY), DATE) AS Month, SUM(amount) AS TotalCredit FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, Month ), MonthlyAccountSuspicious AS ( SELECT M.account_id, M.Month FROM MonthlyAccountCredited M INNER JOIN Accounts A ON M.account_id = A.account_id WHERE TotalCredit > max_income ), SuspiciousAccounts AS ( SELECT DISTINCT M1.account_id FROM MonthlyAccountSuspicious M1 INNER JOIN MonthlyAccountSuspicious M2 ON M1.account_id = M2.account_id AND DATE_ADD(M1.Month, INTERVAL 1 MONTH) = M2.Month ORDER BY M1.account_id ) SELECT * FROM SuspiciousAccounts
WITH MonthlyStatements AS ( SELECT account_id, MONTH(day) AS 'month', SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS 'balance' FROM Transactions GROUP BY account_id, MONTH(day) ) SELECT DISTINCT m1.account_id FROM MonthlyStatements AS m1 LEFT JOIN MonthlyStatements AS m2 ON m1.month + 1 = m2.month AND m1.account_id = m2.account_id LEFT JOIN Accounts AS a ON a.account_id = m1.account_id WHERE m1.balance > a.max_income and m2.balance > a.max_income
WITH S0 AS (SELECT transaction_id, account_id, type, amount, DATE_FORMAT(day, '%Y-%m-01') AS day FROM Transactions), S1 AS (SELECT account_id, day, SUM(amount) AS amount FROM S0 WHERE type = 'Creditor' GROUP BY account_id, day), S2 AS (SELECT S1.account_id, day, amount, max_income, amount > max_income AS exceed FROM S1 INNER JOIN Accounts ON S1.account_id = Accounts.account_id), S3 AS (SELECT S1.account_id, day, amount, max_income, amount > max_income AS exceed FROM S1 INNER JOIN Accounts ON S1.account_id = Accounts.account_id) SELECT DISTINCT(S2.account_id) FROM S2 CROSS JOIN S3 WHERE S2.account_id = S3.account_id AND DATE_ADD(S2.day, INTERVAL 1 MONTH) = S3.day AND S2.exceed AND S3.exceed
WITH T1 AS ( SELECT account_id, DATE_FORMAT(day,"%Y-%m") AS dt, SUM(amount) AS amt, MAX(transaction_id) AS tid FROM Transactions WHERE type = "Creditor" GROUP BY 1,2 ) SELECT DISTINCT account_id FROM ( SELECT T1.account_id, T1.dt, T1.tid, LAG(T1.dt,1) OVER(PARTITION BY T1.account_id ORDER BY T1.dt) AS dt2 FROM Accounts A INNER JOIN T1 ON A.account_id = T1.account_id WHERE T1.amt > A.max_income )T2 WHERE RIGHT(T2.dt,2) - RIGHT(T2.dt2,2) = 1 AND LEFT(T2.dt2,4) = LEFT(T2.dt,4) ORDER BY T2.tid
WITH T1 AS( SELECT account_id, month(day) month, SUM(CASE WHEN type='Creditor' THEN amount ELSE 0 END) total_income FROM Transactions GROUP BY account_id, MONTH(day)), T2 AS( SELECT T1.account_id, month, total_income, max_income FROM T1 LEFT JOIN Accounts ON Accounts.account_id = T1.account_id WHERE total_income >max_income ) SELECT DISTINCT account_id FROM ( SELECT account_id, month, LEAD(month) OVER(PARTITION BY account_id ORDER BY month DESC) month2 FROM T2) T3 WHERE month-month2 = 1
WITH Temp AS (SELECT T.account_id ,YEAR(day)*12 + MONTH(day) AS month ,(CASE WHEN SUM(amount) > a.max_income THEN 1 ELSE 0 END) AS exceed FROM Transactions t INNER JOIN Accounts A ON T.account_id = A.account_id WHERE type = 'Creditor' GROUP BY YEAR(day)*12 + MONTH(day), T.account_id) SELECT DISTINCT c1.account_id FROM Temp c1 INNER JOIN Temp c2 ON c1.account_id = c2.account_id AND c2.month - c1.month = 1 AND c1.exceed = 1 AND c2.exceed = 1
WITH a AS (SELECT account_id, transaction_id, SUM(IF(type = 'creditor', amount, 0)) AS total_income, max_income, MONTH(day) AS month FROM Transactions JOIN Accounts USING (account_id) GROUP BY account_id, month HAVING total_income > max_income ORDER BY account_id, month) SELECT a1.account_id FROM a a1, a a2 WHERE a1.account_id = a2.account_id AND PERIOD_DIFF(a1.month, a2.month) = 1 GROUP BY a1.account_id ORDER BY a1.transaction_id
WITH accounts_and_transactions AS( SELECT a.account_id AS account_id, a.max_income AS max_income, t.amount AS amount, DATE_FORMAT(t.day, "%Y-%m") AS month FROM Accounts a INNER JOIN Transactions t ON a.account_id = t.account_id WHERE type = 'Creditor' ) SELECT DISTINCT(temp3.account_id) AS account_id FROM( SELECT temp2.account_id, CAST(temp2.month AS UNSIGNED) - rownumber AS grouping_variable FROM( SELECT temp.account_id AS account_id, SUBSTR(temp.month, 6, 7) AS month, ROW_NUMBER() OVER (PARTITION BY account_id ORDER BY month ASC) AS rownumber FROM( SELECT account_id, month, max_income, SUM(amount) AS total_deposits FROM accounts_and_transactions GROUP BY 1, 2, 3 HAVING SUM(amount) > max_income )temp )temp2 )temp3 GROUP BY temp3.account_id, temp3.grouping_variable HAVING COUNT(*) >= 2
WITH agg AS ( SELECT t.account_id, DATE_FORMAT(day, "%Y%m") AS month, CASE WHEN SUM(t.amount) > MAX(max_income) THEN 'yes' ELSE 'no' END AS sus FROM transactions AS t JOIN accounts AS a ON t.account_id = a.account_id AND t.type = 'Creditor' GROUP BY 1, 2 ) SELECT DISTINCT l.account_id FROM agg AS l JOIN agg AS r ON l.account_id = r.account_id AND l.sus = 'yes' AND r.sus = 'yes' AND PERIOD_DIFF(l.month, r.month) = 1
WITH credits AS ( SELECT account_id, DATE_FORMAT(day, '%Y-%m') AS month, SUM(amount) AS amount FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, DATE_FORMAT(day, '%Y-%m') ), next_month_credits AS ( SELECT account_id, month AS current_month, amount AS current_amount, LEAD(month) OVER (PARTITION BY account_id ORDER BY month) AS next_month, LEAD(amount) OVER (PARTITION BY account_id ORDER BY month) AS next_amount FROM credits ) SELECT DISTINCT(account_id) FROM next_month_credits LEFT JOIN Accounts USING (account_id) WHERE current_amount > max_income AND next_amount > max_income AND TIMESTAMPDIFF(MONTH, CONCAT(current_month, '-01'), CONCAT(next_month, '-01')) = 1
WITH credits AS ( SELECT account_id, DATE_FORMAT(day, '%Y-%m') AS month, SUM(amount) AS amount, transaction_id FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, DATE_FORMAT(day, '%Y-%m') ), next_month_credits AS ( SELECT account_id, month AS current_month, amount AS current_amount, LEAD(month) OVER (PARTITION BY account_id ORDER BY month) AS next_month, LEAD(amount) OVER (PARTITION BY account_id ORDER BY month) AS next_amount FROM credits ) SELECT DISTINCT(account_id) FROM next_month_credits LEFT JOIN Accounts USING (account_id) WHERE current_amount > max_income AND next_amount > max_income AND TIMESTAMPDIFF(MONTH, CONCAT(current_month, '-01'), CONCAT(next_month, '-01')) = 1
WITH cte AS ( SELECT account_id, MONTH(day) as month, SUM(amount) as total FROM Transactions WHERE LOWER(TRIM(type)) = 'creditor' GROUP BY 1, 2 ), cte2 AS ( SELECT cte.account_id, month, LAG(month, 1) OVER(PARTITION BY cte.account_id ORDER BY month) AS prev_month FROM cte JOIN Accounts a ON cte.account_id = a.account_id WHERE total > max_income ) SELECT DISTINCT account_id FROM cte2 WHERE month-prev_month = 1
WITH cte AS ( SELECT month(day) mon, account_id, sum(amount) tot_income FROM Transactions WHERE type = 'Creditor' GROUP BY month(day), account_id ), cte2 as ( SELECT a.account_id, mon, tot_income, max_income, mon-row_number() over(partition by a.account_id order by mon) grp FROM cte c LEFT JOIN Accounts a ON c.account_id = a.account_id WHERE tot_income>max_income ) SELECT DISTINCT account_id FROM cte2 GROUP BY grp, account_id HAVING count(*)>1
WITH cte AS ( SELECT t.account_id, DATE_FORMAT(t.day, '%Y-%m') AS month, SUM( CASE WHEN t.type = 'Creditor' THEN t.amount ELSE 0 END ) AS income, a.max_income, t.transaction_id, MONTH(t.day) AS m FROM Transactions t JOIN Accounts a ON t.account_id = a.account_id GROUP BY t.account_id, month HAVING income > a.max_income ) SELECT DISTINCT a.account_id FROM cte a JOIN cte b ON a.account_id = b.account_id AND a.m = b.m+1 ORDER BY a.transaction_id
WITH cte AS ( SELECT t.account_id, YEAR(day)*12+MONTH(day) AS month, (CASE WHEN SUM(amount) > a.max_income THEN 1 ELSE 0 END) AS exceed FROM Transactions t JOIN Accounts a ON t.account_id = a.account_id WHERE type = 'Creditor' GROUP BY YEAR(day)*12+MONTH(day), t.account_id ) SELECT DISTINCT c1.account_id FROM cte c1, cte c2 WHERE c1.account_id = c2.account_id AND c1.month - c2.month = 1 AND c1.exceed = 1 AND c2.exceed = 1
WITH cte AS ( SELECT t.account_id, date_format(day, '%Y%m') AS month, (CASE WHEN SUM(amount) > a.max_income THEN 1 ELSE 0 END) AS exceed FROM Transactions t JOIN Accounts a ON t.account_id = a.account_id WHERE type = 'Creditor' GROUP BY date_format(day, '%Y%m'), t.account_id ) SELECT DISTINCT c1.account_id FROM cte c1, cte c2 WHERE c1.account_id = c2.account_id AND c2.month - c1.month = 1 AND c1.exceed = 1 AND c2.exceed = 1
WITH cte AS ( SELECT t.account_id, month FROM (SELECT account_id, SUM(amount) AS total_income, MONTH(day) AS month FROM Transactions WHERE type='Creditor' GROUP BY account_id, month) AS t, Accounts AS a WHERE t.account_id=a.account_id AND total_income>max_income) SELECT c1.account_id FROM cte AS c1, cte AS c2 WHERE c1.account_id=c2.account_id AND c1.month-c2.month=1 GROUP BY c1.account_id ORDER BY c1.account_id
WITH cte AS ( SELECT t1.account_id ,t1.transaction_year ,t1.transaction_month ,CASE WHEN t1.total_income > t2.max_income THEN 'Yes' ELSE 'No' END AS is_suspicious FROM ( SELECT account_id ,YEAR(day) AS transaction_year ,MONTH(day) AS transaction_month ,SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS total_income FROM Transactions GROUP BY account_id, YEAR(day), MONTH(day) ) t1 INNER JOIN Accounts t2 ON t1.account_id = t2.account_id ) SELECT DISTINCT c1.account_id FROM cte c1, cte c2 WHERE c1.account_id = c2.account_id AND ( (c1.transaction_year = c2.transaction_year AND c1.transaction_month = c2.transaction_month - 1) OR (c1.transaction_year = c2.transaction_year - 1 AND c1.transaction_month = 12 AND c2.transaction_month = 1) ) AND c1.is_suspicious = 'Yes' AND c2.is_suspicious = 'Yes'
WITH cte AS ( SELECT t1.account_id ,transaction_month ,CASE WHEN t1.total_income > t2.max_income THEN 'Yes' ELSE 'No' END AS is_suspicious FROM ( SELECT account_id ,YEAR(day)*12+MONTH(day) AS transaction_month ,SUM(CASE WHEN type = 'Creditor' THEN amount ELSE 0 END) AS total_income FROM Transactions GROUP BY account_id, YEAR(day)*12+MONTH(day) ) t1 INNER JOIN Accounts t2 ON t1.account_id = t2.account_id ) SELECT DISTINCT c1.account_id FROM cte c1, cte c2 WHERE c1.account_id = c2.account_id AND c1.transaction_month = c2.transaction_month - 1 AND c1.is_suspicious = 'Yes' AND c2.is_suspicious = 'Yes'
WITH cte AS (SELECT a.account_id as account_id,sub1.month as month,CASE WHEN sub1.total_income > a.max_income then 'y' ELSE 'n' END AS exceed FROM (SELECT account_id,MONTH(day) AS month,SUM(amount) as total_income FROM Transactions WHERE type='Creditor' GROUP BY 1,2 ORDER BY 1,2) sub1 LEFT JOIN Accounts a ON a.account_id= sub1.account_id ), exceed_table AS (SELECT account_id,month,exceed,(month-rank() over (partition by account_id order by month)) as rank_diff FROM cte WHERE exceed='y') SELECT DISTINCT(account_id) FROM exceed_table GROUP BY account_id,rank_diff HAVING COUNT(*)>1
WITH cte AS (SELECT a.account_id, year(day) AS year, month(day) AS month, SUM(t.amount) AS income, a.max_income FROM Accounts AS a JOIN Transactions AS t ON a.account_id = t.account_id WHERE t.type = 'Creditor' GROUP BY a.account_id, year, month) SELECT DISTINCT account_id FROM (SELECT c1.*, c2.income AS next_income FROM cte AS c1 JOIN cte AS c2 ON c1.account_id = c2.account_id AND c1.year = c2.year AND c2.month - c1.month = 1) AS t WHERE t.income > t.max_income AND t.next_income > t.max_income ORDER BY account_id
WITH cte AS (SELECT account_id, MONTH(day) AS month, SUM(amount) AS total_income FROM Transactions WHERE type = 'Creditor' GROUP BY 1, 2 ORDER BY 1, 2), sus_account AS (SELECT a.account_id, month FROM cte a LEFT JOIN Accounts b ON a.account_id = b.account_id WHERE total_income > max_income) SELECT DISTINCT account_id FROM sus_account WHERE (account_id, month + 1) IN (SELECT account_id, month FROM sus_account) OR (account_id, month - 1) IN (SELECT account_id, month FROM sus_account)
WITH cte AS (SELECT account_id, SUM(amount) AS total, month FROM (SELECT account_id, amount, EXTRACT(MONTH FROM day) AS month FROM Transactions WHERE type = 'Creditor') a GROUP BY account_id, month ), cte1 AS (SELECT c.account_id, c.total, c.month FROM cte c JOIN Accounts a ON c.account_id = a.account_id WHERE c.total > a.max_income) SELECT cc1.account_id FROM cte1 cc1 JOIN cte1 cc2 ON cc1.account_id = cc2.account_id AND cc2.month - cc1.month = 1 GROUP BY cc1.account_id HAVING COUNT(cc1.month) >= 1
WITH cte AS (SELECT t.account_id, YEAR(day)*12+MONTH(day) AS month, (CASE WHEN SUM(amount) > a.max_income THEN 1 ELSE 0 END) exceed FROM transactions t JOIN accounts a ON t.account_id = a.account_id WHERE type = 'Creditor' GROUP BY YEAR(day)*12+MONTH(day), t.account_id ) SELECT DISTINCT c1.account_id FROM cte c1, cte c2 WHERE c1.account_id = c2.account_id AND c2.month - c1.month = 1 AND c1.exceed = 1 AND c2.exceed = 1
WITH cte as (SELECT t.account_id, MONTH(day) AS month, (CASE WHEN SUM(amount)>a.max_income THEN 1 ELSE 0 END) AS exceed FROM Transactions t JOIN Accounts a ON t.account_id=a.account_id WHERE type='Creditor' GROUP BY 1,2) SELECT DISTINCT c1.account_id FROM cte c1, cte c2 WHERE c1.account_id=c2.account_id AND c2.month=c1.month+1 and c1.exceed = 1 and c2.exceed = 1
WITH cte_acct_month AS ( SELECT m.account_id, m.month FROM ( SELECT account_id, MONTH(day) AS month, SUM(amount) AS monthly_income FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, MONTH(day) ) m INNER JOIN Accounts a ON m.account_id = a.account_id WHERE m.monthly_income > a.max_income ) SELECT DISTINCT account_id FROM ( SELECT account_id, month, LEAD(month, 1) OVER (PARTITION BY account_id ORDER BY month ASC) AS next_month FROM cte_acct_month ) l WHERE next_month - month = 1
WITH exceeds AS ( SELECT a.account_id, YEAR(t.day) * 12 + MONTH(t.day) AS m FROM Accounts a INNER JOIN Transactions t ON a.account_id=t.account_id AND t.type='Creditor' GROUP BY a.account_id, a.max_income, YEAR(t.day) * 12 + MONTH(t.day) HAVING SUM(t.amount) > a.max_income) SELECT DISTINCT e1.account_id FROM exceeds e1 INNER JOIN exceeds e2 ON e1.account_id=e2.account_id AND e1.m = e2.m + 1
WITH groups_ AS (SELECT t.account_id, t.month, t.income, a.max_income, IF(t.income > a.max_income, 'Y', 'N') is_max FROM (SELECT account_id, Substring(day, 1, 7) month, SUM(IF(TYPE = 'Creditor', amount, 0)) AS income FROM transactions t GROUP BY 1, 2) t inner join accounts a ON( t.account_id = a.account_id )) SELECT DISTINCT account_id FROM (SELECT *, Cast(Substring(month, 6, 2) AS UNSIGNED) - Row_number() over( PARTITION BY account_id ORDER BY Substring(month, 6, 2)) AS grp FROM groups_ WHERE is_max = 'Y') a GROUP BY account_id, grp HAVING Count(1) > 1 ORDER BY 1
WITH m AS (SELECT account_id, date_format(day, '%Y%m') AS month, SUM(CASE WHEN type = 'Creditor' THEN amount END) AS amt_m FROM Transactions GROUP BY account_id, date_format(day, '%Y%m') ), s AS (SELECT m.account_id, m.month FROM m JOIN Accounts a ON m.account_id = a.account_id WHERE amt_m > max_income) SELECT DISTINCT s1.account_id FROM s s1 JOIN s s2 ON s1.account_id = s2.account_id AND period_diff(s1.month, s2.month) = 1
WITH main AS ( SELECT account_id, YEAR(day) AS year, MONTH(day) AS month, (SUM(amount) > MAX(max_income)) AS suspicious FROM Accounts INNER JOIN Transactions USING(account_id) WHERE type = 'Creditor' GROUP BY account_id, year, month ) SELECT DISTINCT M1.account_id AS account_id FROM main M1 INNER JOIN main M2 ON M1.account_id = M2.account_id AND M1.suspicious = 1 AND M2. suspicious = 1 AND (M1.year = M2.year AND M1.month = M2.month - 1) OR (M1.month = 12 AND M2.month = 1 AND M1.year = M2.year - 1) ORDER BY account_id
WITH main_tab as ( SELECT t2.account_id, month, tot_amount FROM ( SELECT account_id, month, SUM(amount) tot_amount FROM( SELECT *, DATE_FORMAT(day, "%Y-%m") month FROM Transactions )t1 WHERE type='Creditor' GROUP BY 1,2 )t2 JOIN Accounts USING(account_id) WHERE tot_amount>max_income ), main_tab2 as ( SELECT t2.account_id, DATE_FORMAT(DATE_ADD(CAST(CONCAT(month,'-01') AS DATE),INTERVAL 1 MONTH),"%Y-%m") month, tot_amount FROM ( SELECT account_id, month, SUM(amount) tot_amount FROM( SELECT *, DATE_FORMAT(day, "%Y-%m") month FROM Transactions )t1 WHERE type='Creditor' GROUP BY 1,2 )t2 JOIN Accounts USING(account_id) WHERE tot_amount>max_income ) SELECT DISTINCT(account_id) FROM main_tab JOIN main_tab2 USING(account_id,month)
WITH monthly_income AS (SELECT account_id,date_format(day,"%Y%m") as month, SUM(amount) as income FROM transactions WHERE type="Creditor" GROUP BY account_id, month) SELECT DISTINCT a.account_id FROM accounts a INNER JOIN (SELECT m1.account_id, m1.income as income_1, m2.income as income_2 FROM monthly_income m1 INNER JOIN monthly_income m2 ON m1.account_id=m2.account_id AND period_diff(m1.month, m2.month)=1) t ON a.account_id =t.account_id AND a.max_income<t.income_1 AND a.max_income<t.income_2
WITH raw_data AS ( SELECT date(date_format(day, '%Y-%m-01')) as month, t.account_id, SUM(t.amount) as amount_credited FROM transactions t WHERE type = 'Creditor' GROUP BY 1, 2), raw_data_2 AS ( SELECT rd.month as m, rd.account_id, rd.amount_credited FROM raw_data rd INNER JOIN accounts a on rd.account_id = a.account_id WHERE rd.amount_credited > a.max_income), raw_data_3 AS ( SELECT account_id, m, lag(m, 1) OVER (PARTITION BY account_id ORDER BY m) prev_month FROM raw_data_2) SELECT DISTINCT account_id FROM raw_data_3 where prev_month IS NOT NULL AND DATE_ADD(prev_month, INTERVAL 1 MONTH) = m
WITH sum_month AS ( SELECT a.account_id, DATE_FORMAT(day,'%Y%m') AS date, SUM(amount) AS income, max_income FROM Accounts a RIGHT JOIN Transactions t ON a.account_id=t.account_id WHERE t.type='Creditor' GROUP BY a.account_id, DATE_FORMAT(day,'%Y%m') HAVING income > max_income ) SELECT DISTINCT(s1.account_id) FROM sum_month s1 JOIN sum_month s2 ON s1.account_id=s2.account_id WHERE PERIOD_DIFF(s1.date, s2.date) = 1 ORDER BY s1.account_id
WITH summary AS ( SELECT t.account_id, SUM(t.amount) total_income, YEAR(day) Y, MONTH(day) M, a.max_income FROM Transactions t, Accounts a WHERE a.account_id = t.account_id AND type = 'Creditor' GROUP BY t.account_id, YEAR(day), MONTH(day) HAVING SUM(t.amount) > a.max_income ORDER BY t.transaction_id ) SELECT DISTINCT s1.account_id FROM summary s1 JOIN summary s2 ON s1.account_id = s2.account_id WHERE (s1.M + 1 = s2.M AND s1.Y = s2.Y) OR (s1.M = 12 AND s2.M = 1 AND s1.Y + 1 = s2.Y)
WITH suspicious AS ( SELECT t.account_id, DATE_FORMAT(t.day, '%Y%m') AS day, a.max_income FROM Transactions t JOIN Accounts a ON t.account_id = a.account_id WHERE t.type = 'Creditor' GROUP BY 1, 2 HAVING SUM(t.amount) > a.max_income ORDER BY 1, 2 ) SELECT DISTINCT t1.account_id FROM suspicious t1 JOIN suspicious t2 ON t1.account_id = t2.account_id AND t1.day != t2.day WHERE PERIOD_DIFF(t1.day, t2.day) = 1 ORDER BY 1
WITH suspicious_month AS ( SELECT t.account_id, LEFT(t.day, 7) month, MONTH(CONCAT(LEFT(t.day, 7), '-01')) - ROW_NUMBER() OVER (PARTITION BY t.account_id ORDER BY LEFT(t.day, 7)) number FROM transactions t INNER JOIN accounts a ON t.account_id = a.account_id WHERE t.type = 'Creditor' GROUP BY t.account_id, LEFT(t.day, 7), a.max_income HAVING SUM(t.amount) > a.max_income ORDER BY t.account_id, month ) SELECT DISTINCT account_id FROM suspicious_month GROUP BY account_id, number HAVING COUNT(*) > 1
WITH t AS ( SELECT account_id, CONCAT(LEFT(day, 7), '-01') AS month, SUM(amount) AS sum_amt FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, month ) SELECT DISTINCT account_id FROM ( SELECT t.account_id, t.month AS curr_m, t.sum_amt AS curr_amt, t1.month AS next_m, t1.sum_amt AS next_amt FROM t LEFT JOIN t t1 ON t.account_id = t1.account_id AND DATE_ADD(t.month, INTERVAL 1 MONTH) = t1.month ) t WHERE curr_amt > (SELECT max_income FROM Accounts WHERE account_id = t.account_id) AND next_amt > (SELECT max_income FROM Accounts WHERE account_id = t.account_id)
WITH t AS ( SELECT account_id, DATE_FORMAT(day,'%Y%m') AS date, IF(SUM(amount) > max_income, 'Y', 'N') AS suspicious FROM transactions JOIN accounts USING (account_id) WHERE type = 'Creditor' GROUP BY account_id, date ) SELECT DISTINCT t1.account_id FROM t t1, t t2 WHERE t1.account_id = t2.account_id AND PERIOD_DIFF(t1.date, t2.date)=1 AND t1.suspicious = 'Y' and t2.suspicious = 'Y'
WITH t AS ( SELECT account_id, MONTH(day) AS month, IF(SUM(amount) > max_income, 'Y', 'N') AS suspicious FROM transactions JOIN accounts USING (account_id) WHERE type = 'Creditor' GROUP BY 1, 2 ) SELECT DISTINCT t1.account_id FROM t t1, t t2 WHERE t1.account_id = t2.account_id AND t2.month - t1.month = 1 AND t1.suspicious = 'Y' and t2.suspicious = 'Y'
WITH t AS ( SELECT account_id, MONTH(day) mon, SUM(amount) total FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, MONTH(day)), t1 AS ( SELECT t.account_id, mon, total, a.max_income, LAG(total) OVER(PARTITION BY account_id ORDER BY mon) row_above, LAG(mon) OVER(PARTITION BY account_id ORDER BY mon) mon_above FROM t JOIN Accounts a ON t.account_id = a.account_id) SELECT DISTINCT account_id FROM t1 WHERE total > max_income AND row_above > max_income AND mon - mon_above = 1
WITH t AS ( SELECT account_id, makedate(year(day), month(day)) AS date, min(transaction_id) transaction_id, sum(amount) > accounts.max_income AS suspicious, max_income FROM transactions JOIN accounts USING (account_id) WHERE type = 'Creditor' GROUP BY 1, 2 ORDER BY 1, 2), s AS ( SELECT account_id, transaction_id, date, datediff(date, lag(date,1,0) over w) diff FROM t WHERE t.suspicious window w AS (partition BY account_id ORDER BY date) ), r AS ( SELECT account_id, transaction_id, count(coalesce(diff, 1)=1 OR NULL) over (partition BY account_id ORDER BY date) consecutive_months FROM s) SELECT account_id FROM r group by account_id having max(consecutive_months) >= 2 order by transaction_id
WITH t AS (SELECT account_id, MONTH(day) AS month, SUM(amount) AS income FROM Transactions WHERE type = 'Creditor' GROUP BY 1, 2) SELECT DISTINCT t1.account_id FROM t t1 JOIN t t2 ON t1.account_id = t2.account_id AND PERIOD_DIFF(t2.month,t1.month) = 1 LEFT JOIN Accounts a ON t1.account_id = a.account_id WHERE t1.income > a.max_income AND t2.income > a.max_income
WITH t AS (SELECT account_id, SUM(amount) AS income, DATE_FORMAT(day,'%Y%m') AS date_month FROM Transactions WHERE type = 'Creditor' GROUP BY 1, 3) SELECT DISTINCT t1.account_id FROM t t1 JOIN t t2 ON t1.account_id = t2.account_id AND PERIOD_DIFF(t2.date_month,t1.date_month) = 1 LEFT JOIN Accounts a ON t1.account_id = a.account_id WHERE t1.income > a.max_income AND t2.income > a.max_income
WITH t AS (SELECT account_id, SUM(amount) AS income, DATE_FORMAT(day,'%Y%m') AS date_month FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, date_month) SELECT DISTINCT t1.account_id FROM t t1 JOIN t t2 ON t1.account_id = t2.account_id AND PERIOD_DIFF(t2.date_month,t1.date_month) = 1 LEFT JOIN Accounts a ON t1.account_id = a.account_id WHERE t1.income > a.max_income AND t2.income > a.max_income
WITH t AS (SELECT account_id, SUM(amount) AS income, DATE_FORMAT(day,'%Y%m') AS date_month FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, date_month) SELECT DISTINCT t1.account_id FROM t t1 JOIN t t2 ON t1.account_id = t2.account_id AND PERIOD_DIFF(t2.date_month,t1.date_month) = 1 Left JOIN Accounts a ON t1.account_id = a.account_id WHERE t1.income > a.max_income AND t2.income > a.max_income
WITH t AS (SELECT account_id, SUM(amount) AS income, DATE_FORMAT(day,'%Y%m') AS date_month FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, date_month) SELECT DISTINCT t1.account_id FROM t t1 JOIN t t2 ON t1.account_id = t2.account_id AND PERIOD_DIFF(t2.date_month,t1.date_month) = 1 inner JOIN Accounts a ON t1.account_id = a.account_id WHERE t1.income > a.max_income AND t2.income > a.max_income
WITH t as (select account_id, month(day) as month, year(day) as year, sum(case when type = 'Creditor' then amount else 0 end) as income from Transactions group by account_id, month(day), year(day)) select distinct a.account_id from Accounts a join t b on (a.account_id = b.account_id) and (b.income > a.max_income) join t c on (a.account_id = c.account_id) and (c.income > a.max_income) and (((b.year = c.year) and (b.month + 1 = c.month)) or ((b.year + 1 = c.year) and (b.month = 12) and (c.month = 1))) order by account_id
WITH t1 AS ( SELECT account_id ,MONTH(day) AS month ,SUM(amount) AS total FROM Transactions WHERE type = 'Creditor' GROUP BY account_id ,MONTH(day) ), t2 AS ( SELECT t1.account_id ,total, month ,LAG(month, 1) OVER(PARTITION BY account_id ORDER BY month) AS num FROM t1 JOIN Accounts a ON t1.account_id=a.account_id WHERE total>max_income ) SELECT DISTINCT t2.account_id FROM t2 WHERE month-num = 1
WITH t1 AS ( SELECT account_id, MONTH(day) AS month, SUM(amount) AS total FROM Transactions WHERE type = 'Creditor' GROUP BY 1, 2), t2 AS ( SELECT account_id, month, total, max_income, LEAD(total) OVER (PARTITION BY account_id ORDER BY month) AS lead_total, LEAD(month) OVER (PARTITION BY account_id ORDER BY month) AS lead_month FROM t1 JOIN Accounts USING (account_id)) SELECT DISTINCT account_id FROM t2 WHERE lead_month - month = 1 AND lead_total > max_income AND total > max_income
WITH t1 AS ( SELECT account_id, m, amount_sum, LEAD(m, 1) OVER(PARTITION BY account_id ORDER BY m ASC) next_m FROM ( SELECT t.account_id, MONTH(day) m, SUM(amount) amount_sum, max_income FROM Transactions t LEFT JOIN Accounts a ON a.account_id = t.account_id WHERE type = 'Creditor' GROUP BY 1, 2 ) tmp WHERE max_income < amount_sum ) SELECT DISTINCT account_id FROM t1 WHERE next_m - m = 1
WITH t1 AS (SELECT t.account_id, sum(if(type = "creditor", amount, 0)) amount, date_format(day, "%Y%m") day, max_income FROM Transactions t LEFT JOIN Accounts a ON t.account_id = a.account_id GROUP BY account_id, date_format(day, "%Y-%m")), t2 AS (SELECT account_id, day FROM t1 WHERE amount > max_income) SELECT DISTINCT t.account_id FROM t2 t LEFT JOIN t2 tt ON t.account_id = tt.account_id and period_diff(tt.day, t.day) between 0 and 1 GROUP BY t.account_id, t.day HAVING count(tt.account_id) >= 2
WITH t1 AS( SELECT account_id, DATE_FORMAT(day,'%m') AS month, sum(amount) AS total_amount FROM Transactions WHERE type = 'Creditor' GROUP BY month, account_id ORDER BY month ASC), t2 AS ( SELECT t1.account_id, total_amount, month, LAG(month, 1)OVER(PARTITION BY account_id ORDER BY month) AS num FROM t1 INNER JOIN Accounts a ON t1.account_id=a.account_id WHERE total_amount > max_income) SELECT DISTINCT t2.account_id FROM t2 WHERE month - num = 1
WITH t1 AS( SELECT account_id, SUM(amount) AS total, MONTH(day) AS month FROM Transactions WHERE type='Creditor' GROUP BY 1, 3 ), t2 AS ( SELECT t1.account_id, total, month, LAG(month, 1) OVER(PARTITION BY account_id ORDER BY month) AS num FROM t1 INNER JOIN Accounts a ON t1.account_id=a.account_id WHERE total>max_income ) SELECT DISTINCT t2.account_id FROM t2 WHERE month-num=1
WITH t1 AS( SELECT account_id, SUM(amount) AS total, MONTH(day) AS month FROM Transactions WHERE type='Creditor' GROUP BY 1, 3 ), t2 AS ( SELECT t1.account_id, total, month, LAG(month, 1) OVER(PARTITION BY account_id ORDER BY month) AS num FROM t1 INNER JOIN Accounts a ON t1.account_id=a.account_id WHERE total>max_income) SELECT DISTINCT t2.account_id FROM t2 WHERE month-num=1
WITH t1 AS( SELECT account_id, SUM(amount) AS total, MONTH(day) AS month FROM Transactions WHERE type='Creditor' GROUP BY 1, 3), t2 AS ( SELECT t1.account_id, total, month, LAG(month, 1)OVER(PARTITION BY account_id ORDER BY month) AS num FROM t1 INNER JOIN Accounts a ON t1.account_id=a.account_id WHERE total>max_income) SELECT DISTINCT t2.account_id FROM t2 WHERE month-num=1
WITH ta AS (SELECT t.account_id, t.yr, t.mo FROM (SELECT account_id, YEAR(day) AS yr, MONTH(day) AS mo, SUM(amount) AS amount FROM Transactions WHERE type = 'Creditor' GROUP BY 1, 2, 3) AS t, Accounts AS a WHERE t.account_id = a.account_id AND t.amount > a.max_income ORDER BY 1, 2, 3) SELECT DISTINCT ta1.account_id FROM ta AS ta1 LEFT JOIN ta AS ta2 ON ta1.account_id = ta2.account_id AND ta1.yr * 12 + ta1.mo + 1 = ta2.yr * 12 + ta2.mo WHERE ta2.account_id IS NOT NULL
WITH table1 AS( SELECT account_id, SUM(amount) AS total_amount, MONTH(day) AS month FROM Transactions WHERE type='Creditor' GROUP BY account_id, month ), table2 AS( SELECT account_id, total_amount, max_income, month, IFNULL(LEAD(month)OVER(PARTITION BY account_id ORDER BY month),0) AS lead_month FROM table1 INNER JOIN Accounts USING(account_id) WHERE total_amount > max_income ) SELECT DISTINCT account_id FROM table2 WHERE lead_month-month=1
WITH tb1 AS ( SELECT t.account_id, a.max_income, CONCAT(LEFT(t.day, 7), "-01") AS month, t.type, t.amount FROM Transactions t INNER JOIN Accounts a ON t.account_id = a.account_id ), tb2 AS ( SELECT account_id, month, SUM(amount) AS total_income, MAX(max_income) AS max_income FROM tb1 WHERE type = 'Creditor' GROUP BY account_id, month ), tb3 AS ( SELECT a.account_id, a.month, a.total_income, b.total_income AS total_income_lag, a.max_income FROM tb2 a LEFT JOIN tb2 b ON DATE_SUB(a.month, INTERVAL 1 MONTH) = b.month AND a.account_id = b.account_id ) SELECT DISTINCT account_id FROM tb3 WHERE total_income > max_income AND total_income_lag > max_income ORDER BY account_id ASC
WITH tbl AS( SELECT account_id, months, max_income, sum(amount) as monthly_amount FROM ( SELECT a.account_id as account_id, amount, month(day) AS months, max_income FROM Transactions a LEFT JOIN Accounts b ON a.account_id = b.account_id WHERE a.type = 'Creditor' ) base GROUP BY account_id, max_income, months ORDER BY account_id, max_income, months ) SELECT distinct a.account_id FROM tbl a JOIN tbl b ON a.account_id = b.account_id AND abs(a.months - b.months) = 1 WHERE a.monthly_amount > a.max_income and b.monthly_amount > a.max_income
WITH tbl AS( SELECT t.account_id , EXTRACT(YEAR_MONTH FROM day) AS month FROM transactions t JOIN accounts a ON t.account_id=a.account_id WHERE t.type='Creditor' GROUP BY 1,2 HAVING SUM(t.amount)>AVG(a.max_income)) SELECT DISTINCT t1.account_id FROM tbl t1 JOIN tbl t2 ON t1.month-t2.month=1 AND t1.account_id=t2.account_id
WITH temp AS ( SELECT account_id, DATE_FORMAT(day, "%Y-%m-01") AS month, SUM(amount) AS total FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, month ), temp2 AS ( SELECT t.account_id, t.month FROM temp AS t JOIN Accounts AS a ON t.account_id = a.account_id AND t.total > a.max_income ), temp3 AS ( SELECT account_id, month, DATE_SUB( month, INTERVAL ROW_NUMBER() OVER(PARTITION BY account_id ORDER BY month) MONTH ) AS grp FROM temp2 ) SELECT DISTINCT account_id FROM temp3 GROUP BY account_id, grp HAVING COUNT(*) >= 2
WITH temp AS ( SELECT t.account_id, DATE_FORMAT(day,'%Y%m') AS date, SUM(amount) AS 'income', Accounts.max_income FROM Transactions t LEFT JOIN Accounts ON Accounts.account_id=t.account_id WHERE t.type='Creditor' GROUP BY t.account_id, DATE_FORMAT(day,'%Y%m') HAVING SUM(amount)>Accounts.max_income ) SELECT DISTINCT t1.account_id FROM temp t1, temp t2 WHERE t1.account_id=t2.account_id AND PERIOD_DIFF(t1.date, t2.date)=1 ORDER BY t1.account_id
WITH temp AS ( SELECT t.account_id, DATE_FORMAT(day,'%Y%m') AS date, SUM(amount) AS 'income', Accounts.max_income FROM Transactions t LEFT JOIN Accounts ON Accounts.account_id=t.account_id WHERE t.type='Creditor' GROUP BY t.account_id, DATE_FORMAT(day,'%Y%m') HAVING SUM(amount)>Accounts.max_income ) SELECT t1.account_id FROM temp t1, temp t2 WHERE t1.account_id=t2.account_id AND PERIOD_DIFF(t1.date, t2.date)=1 GROUP BY t1.account_id
WITH temp AS ( SELECT t.account_id, DATE_FORMAT(day,'%Y%m') AS date, SUM(amount) AS 'income', Accounts.max_income FROM Transactions t LEFT JOIN Accounts ON Accounts.account_id=t.account_id WHERE t.type='Creditor' GROUP BY t.account_id, DATE_FORMAT(day,'%Y%m') HAVING SUM(amount)>Accounts.max_income ) SELECT t1.account_id FROM temp t1, temp t2 WHERE t1.account_id=t2.account_id AND PERIOD_DIFF(t1.date, t2.date)=1 GROUP BY t1.account_id ORDER BY t1.account_id
WITH temp AS ( SELECT t.account_id, EXTRACT(YEAR_MONTH FROM day) AS date, SUM(t.amount) AS income FROM Transactions t JOIN Accounts a ON a.account_id=t.account_id WHERE t.type='Creditor' GROUP BY t.account_id, EXTRACT(YEAR_MONTH FROM day) , a.max_income HAVING SUM(amount)>a.max_income ) SELECT t1.account_id FROM temp t1 join temp t2 on t1.account_id=t2.account_id AND (t1.date - t2.date) =1 GROUP BY t1.account_id ORDER BY t1.account_id
WITH temp AS (SELECT t.account_id, EXTRACT(YEAR_MONTH FROM day) AS date, SUM(t.amount) AS income,a.max_income FROM Transactions t JOIN Accounts a ON a.account_id=t.account_id WHERE t.type='Creditor' GROUP BY t.account_id, EXTRACT(YEAR_MONTH FROM day) HAVING SUM(amount)>a.max_income ) SELECT t1.account_id FROM temp t1 join temp t2 on t1.account_id=t2.account_id AND (t1.date - t2.date) =1 GROUP BY t1.account_id ORDER BY t1.account_id
WITH temp AS( SELECT t.account_id, CONCAT(LEFT(day, 7), "-01") AS first_date, a.max_income, SUM(amount) AS total_amount FROM Transactions t LEFT JOIN Accounts a ON t.account_id = a.account_id WHERE type = "Creditor" GROUP BY t.account_id, LEFT(day, 7) ) SELECT DISTINCT t1.account_id FROM temp t1 JOIN temp t2 ON t1.account_id = t2.account_id AND TIMESTAMPDIFF(MONTH, t1.first_date, t2.first_date) = 1 WHERE t1.total_amount > t1.max_income AND t2.total_amount > t2.max_income
WITH tmp AS ( SELECT account_id, SUM(amount) AS sum_income, mn, yr, mn_next, yr_next FROM (SELECT transaction_id, account_id, amount, EXTRACT(MONTH FROM day) AS mn, EXTRACT(YEAR FROM day) AS yr, EXTRACT(MONTH FROM DATE_ADD(day, INTERVAL 1 MONTH)) AS mn_next, EXTRACT(YEAR FROM DATE_ADD(day, INTERVAL 1 MONTH)) AS yr_next FROM Transactions WHERE type = 'Creditor') p1 GROUP BY account_id, mn, yr, mn_next, yr_next ) SELECT DISTINCT t1.account_id FROM tmp t1 JOIN tmp t2 ON t1.mn = t2.mn_next AND t1.yr = t2.yr_next AND t1.account_id = t2.account_id JOIN Accounts a ON t1.account_id = a.account_id WHERE t1.sum_income > a.max_income AND t2.sum_income > a.max_income ORDER BY t1.account_id
WITH total_income AS ( SELECT t.account_id, DATE_FORMAT(t.day, '%Y%m') AS day, SUM(t.amount) AS income, a.max_income FROM Transactions t JOIN Accounts a ON t.account_id = a.account_id WHERE t.type = 'Creditor' GROUP BY t.account_id, DATE_FORMAT(t.day, '%Y%m') HAVING SUM(t.amount) > a.max_income ORDER BY 1, 2 ), suspicious AS ( SELECT t1.account_id, PERIOD_DIFF(t1.day, t2.day) AS diff FROM total_income t1 JOIN total_income t2 ON t1.account_id = t2.account_id AND t1.day != t2.day ) SELECT DISTINCT account_id FROM suspicious WHERE diff = 1 OR diff = -1 ORDER BY 1
WITH total_income as ( SELECT account_id, SUM(amount) as t_income, MONTH(day) as t_date FROM Transactions WHERE type = 'Creditor' GROUP BY account_id, LEFT(day,7) ORDER BY account_id, LEFT(day,7) ) SELECT DISTINCT t.account_id FROM( SELECT ti.account_id, ti.t_date, ti.t_date - row_number()OVER(PARTITION BY ti.account_id ORDER BY ti.t_date) as rnk FROM total_income ti LEFT JOIN Accounts a ON ti.account_id = a.account_id WHERE ti.t_income > max_income ) as t GROUP BY t.account_id, t.rnk HAVING COUNT(t.account_id) >= 2
WITH transaction_cte AS (SELECT t.account_id, DATE_FORMAT(DAY, '%Y%m') AS month, SUM(amount) AS total_income, Accounts.max_income FROM Transactions t LEFT JOIN Accounts ON Accounts.account_id = t.account_id WHERE t.type = 'Creditor' GROUP BY 1, 2 HAVING total_income > Accounts.max_income) , consecutive_cte AS (SELECT account_id, LEAD(month, 1) OVER(PARTITION BY account_id ORDER BY month) - month AS month_diff FROM transaction_cte) SELECT DISTINCT account_id FROM consecutive_cte WHERE month_diff = 1
WITH transaction_cte AS (SELECT t.account_id, DATE_FORMAT(DAY, '%Y%m') AS month, SUM(amount) AS total_income, a.max_income FROM Transactions t LEFT JOIN Accounts a ON a.account_id = t.account_id WHERE t.type = 'Creditor' GROUP BY 1, 2 HAVING total_income > a.max_income) , consecutive_cte AS (SELECT account_id, LEAD(month, 1) OVER(PARTITION BY account_id ORDER BY month) - month AS month_diff FROM transaction_cte) SELECT DISTINCT account_id FROM consecutive_cte WHERE month_diff = 1
WITH tt0 AS ( SELECT t.account_id, year(t.day) AS year, month(t.day) AS month, SUM(case when t.type = "Creditor" then t.amount end) AS total_income, a.max_income FROM Transactions AS t LEFT JOIN Accounts AS a ON t.account_id = a.account_id GROUP BY account_id, year, month ), tt AS ( SELECT account_id, year, month, total_income, max_income FROM tt0 WHERE total_income > max_income ) SELECT distinct(t1.account_id) FROM tt as t1 INNER JOIN tt as t2 ON t1.account_id = t2.account_id and ((t1.year = t2.year and t1.month + 1 = t2.month) or (t1.year + 1 = t2.year and t1.month = 12 and t2.month = 1)) ORDER BY t1.account_id
With temp As (Select a.account_id, date_format(a.day, "%Y-%m") as month From Transactions as a Join Accounts as b On a.account_id = b.account_id Group By a.account_id, date_format(a.day, "%Y-%m") Having sum(CASE WHEN a.type = "Creditor" Then a.amount Else 0 End) > max(b.max_income)) Select Distinct a.account_id From temp a, temp b Where a.account_id = b.account_id And (b.month = date_format(adddate(Date(concat(a.month,'-01')), interval 31 day), "%Y-%m") Or b.month = date_format(subdate(Date(concat(a.month,'-01')), interval 1 day), "%Y-%m"))
With temp As (Select a.account_id, date_format(a.day, "%Y-%m") as month From Transactions as a Join Accounts as b On a.account_id = b.account_id Group By a.account_id, date_format(a.day, "%Y-%m") Having sum(CASE WHEN a.type = "Creditor" Then a.amount Else 0 End) > max(b.max_income)) Select Distinct a.account_id From temp a, temp b Where a.account_id = b.account_id And b.month = date_format(subdate(Date(concat(a.month,'-01')), interval 1 day), "%Y-%m")
With temp As (Select a.account_id, date_format(a.day, "%Y-%m") as month From Transactions as a Join Accounts as b On a.account_id = b.account_id Group By a.account_id, date_format(a.day, "%Y-%m") Having sum(CASE WHEN a.type = "Creditor" Then a.amount Else 0 End) > max(b.max_income)) Select Distinct account_id From temp Where (account_id, date_format(subdate(Date(concat(month,'-01')), interval 1 day), "%Y-%m")) in (Select account_id, month From temp)
With tot_income AS (SELECT account_id, EXTRACT(month FROM day) AS Mon_yr, SUM(amount) AS total_Income FROM Transactions WHERE type = 'Creditor' GROUP BY 1,2 ORDER BY transaction_id), Sus_Bank_account AS (SELECT A.account_id, t.Mon_yr, LAG(Mon_yr,1) OVER (PARTITION BY t.account_id ORDER BY t.Mon_yr) AS Prev_mon FROM Accounts A JOIN tot_income t ON A.account_id = t.account_id WHERE t.total_Income > A.max_income) SELECT DISTINCT S.account_id FROM Sus_Bank_account S WHERE S.Mon_yr - S.Prev_mon = 1
select c.account_id from ( select a.account_id, a.yymm as current_month, a.total_income, lead(a.yymm) over (partition by a.account_id order by a.yymm asc) as nex_month, lead(a.total_income) over (partition by a.account_id order by yymm asc) as nex_month_income, b.max_income from ( select account_id, month(day) as yymm, sum(amount) as total_income from transactions where type = 'Creditor' group by 1, 2) a left join accounts b on a.account_id = b.account_id) c where c.total_income > c.max_income and c.nex_month_income > c.max_income and c.nex_month - c.current_month = 1 group by 1
select c.account_id from ( select a.account_id,a.yymm as current_month , a.total_income, lead(a.yymm) over (partition by a.account_id order by a.yymm asc) as nex_month, lead(a.total_income) over (partition by a.account_id order by yymm asc) as nex_month_income, b.max_income from ( Select account_id, month(day) as yymm, sum(amount) as total_income from Transactions where type = 'Creditor' group by 1,2)a left join accounts b on a.account_id = b.account_id WHERE a.total_income > b.max_income )c WHERE c.nex_month - c.current_month = 1 group by 1
select c.account_id from ( select a.account_id,a.yymm as current_month , a.total_income,lead(a.yymm) over (partition by a.account_id order by a.yymm asc) as nex_month, lead(a.total_income) over (partition by a.account_id order by yymm asc) as nex_month_income, b.max_income from ( Select account_id, month(day) as yymm, sum(amount) as total_income from Transactions where type = 'Creditor' group by 1,2)a left join accounts b on a.account_id = b.account_id )c where c.total_income > c.max_income and c.nex_month_income > c.max_income and c.nex_month - c.current_month = 1 group by 1
select c.account_id from (select a.account_id, a.mm as current_month, a.total_income, lead(a.mm) over(partition by a.account_id order by a.mm asc) as next_month, lead(a.total_income) over ( partition by a.account_id order by a.mm asc) as next_month_income, max_income from (select account_id, sum(amount) as total_income, month(day) as mm from transactions where type ='Creditor' group by account_id, mm) a left join accounts b on a.account_id = b.account_id) c where c.total_income > c.max_income and c.next_month_income > c.max_income and c.next_month- c.current_month =1 group by 1
select d.account_id from ( select c1.account_id, count(*) as ct from ( select distinct a.* from (select account_id, year(day) as year, month(day) as month, sum(amount) as total_amount from Transactions where type = 'Creditor' group by account_id, year(day), month(day)) a join Accounts b on a.account_id = b.account_id and a.total_amount > b.max_income )c1 join (select distinct a.* from (select account_id, year(day) as year, month(day) as month, sum(amount) as total_amount from Transactions where type = 'Creditor' group by account_id, year(day), month(day)) a join Accounts b on a.account_id = b.account_id and a.total_amount > b.max_income ) c2 on (c1.account_id = c2.account_id and (c1.year = c2.year and c1.month = c2.month + 1)) or (c1.account_id = c2.account_id and (c1.year+1 = c2.year and c1.month = 12 and c2.month = 1)) group by c1.account_id)d where d.ct >= 1
select distinct a.account_id as account_id from Accounts as a inner join ( select account_id, sum(amount) as amount, date_format(day, '%Y%m') as month, date_format(date_add(day,interval 1 month), '%Y%m') as next_month from Transactions where type='Creditor' group by account_id,date_format(day, '%Y%m') ) as t1 on (a.account_id=t1.account_id) inner join ( select account_id, sum(amount) as amount, date_format(day, '%Y%m') as month from Transactions where type='Creditor' group by account_id,date_format(day, '%Y%m') ) as t2 on (a.account_id=t2.account_id and t1.next_month=t2.month) where t1.amount>a.max_income and t2.amount>a.max_income order by 1
select distinct a.account_id from ( select distinct a.month, a.account_id from ( select distinct month(day) as month, account_id, sum(amount) as total_income from transactions where type = 'Creditor' group by month, account_id ) a join ( select distinct a.account_id, a.max_income from accounts a ) b on a.total_income > b.max_income and a.account_id = b.account_id ) a join ( select distinct a.month, a.account_id from ( select distinct month(day) as month, account_id, sum(amount) as total_income from transactions where type = 'Creditor' group by month, account_id ) a join ( select distinct a.account_id, a.max_income from accounts a ) b on a.total_income > b.max_income and a.account_id = b.account_id ) b on a.account_id = b.account_id and a.month + 1 = b.month
select distinct a.account_id from ( select left(day,4)*100+right(left(day,7),2) as month, account_id, sum(case when type = 'Creditor' then amount else 0 end) as total_income from transactions group by month, account_id ) a, ( select left(day,4)*100+right(left(day,7),2) as month, account_id, sum(case when type = 'Creditor' then amount else 0 end) as total_income from transactions group by month, account_id ) b, accounts c where b.month - a.month = 1 and b.total_income > c.max_income and a.account_id = c.account_id and a.account_id = b.account_id and a.total_income > c.max_income group by a.account_id, a.month having count(b.account_id) = 1
select distinct account_id from ( SELECT T1.account_id, (mon-ROW_NUMBER() OVER (PARTITION BY T1.account_id ORDER BY mon ASC)) AS cntr FROM Accounts T1, (SELECT account_id, MONTH(day) AS mon, SUM(amount) AS total_income FROM Transactions WHERE type = 'Creditor' GROUP BY 1,2) T2 WHERE T1.account_id = T2.account_id AND max_income < total_income ) T group by account_id,cntr having count(*)>=2
select distinct account_id from ( select A.account_id, year_num, month_num, lead(month_num) over(partition by account_id order by year_num,month_num) as 'post_month', amount_value, ac.max_income from ( select account_id, month(day) as 'month_num', year(day) as 'year_num', sum(case when type = 'creditor' then amount else 0 end) as 'amount_value' from Transactions group by account_id,month_num,year_num order by account_id,year_num,month_num) as A left join accounts ac on a.account_id = ac.account_id where amount_value > ac.max_income ) as B where post_month - month_num in (1,-11) order by account_id
select distinct account_id from ( select account_id , mon - row_number() over(partition by account_id) as grp from ( select a.account_id , month(t.day) as mon , sum(if(t.type='Creditor', t.amount, 0)) as mon_ttl_income from transactions t join accounts a on a.account_id=t.account_id group by 1, 2 having mon_ttl_income > max(a.max_income) order by 1, 2 ) tmp ) tmp2 group by account_id, grp having count(*) >= 2
select distinct account_id from ( select account_id, month, lead(month,1) over(partition by account_id order by month) as next_month from ( select a.account_id, Month from (select account_id, month(day) as Month, sum(amount) as income from Transactions where type = 'Creditor' group by 1,2) a left join Accounts b on a.account_id = b.account_id where income > max_income) aa ) aaa where abs(month - next_month) = 1
select distinct account_id from ( select f.account_id, month, lag(month) over(partition by account_id order by month) as prev from ( select account_id, date_format(day, '%Y-%m-01') as month, sum(if(type='Creditor', amount, 0)) as amount from transactions group by 1,2 ) f join accounts a on a.account_id = f.account_id where amount > max_income ) f where date_add(month, interval -1 month) = prev
select distinct account_id from ( select tmp.account_id , mon - row_number() over(partition by account_id order by mon) as grp from ( select t.account_id , month(t.day) as mon , sum(if(t.type='Creditor', t.amount, 0)) as mon_ttl_income from transactions t group by 1, 2 ) tmp join accounts a on a.account_id=tmp.account_id where tmp.mon_ttl_income > a.max_income ) tmp2 group by account_id, grp having count(*) >= 2
select distinct account_id from (select a.account_id, total_income, mth, lead(total_income, 1) over (partition by account_id order by mth asc) as lead_, lead(mth, 1) over (partition by account_id order by mth asc) as mth_, max_income from Accounts a left join (select account_id, month(day) mth, sum(amount) as total_income from Transactions where lower(type)='creditor' group by account_id, month(day) ) c on c.account_id=a.account_id ) as l where (total_income > max_income and lead_ > max_income) and mth_ -mth=1 order by 1
select distinct account_id from (select account_id, total_income, second_month, lead(month, 1) over (partition by account_id) as next_month from (select t.account_id, a.max_income, date_format(t.day, '%Y-%m') as month, date_format(date_add(t.day, interval 1 month), '%Y-%m') as second_month, sum(case when t.type = 'Creditor' then t.amount else 0 end) as total_income from Transactions t join Accounts a on a.account_id = t.account_id group by 1, 2, 3, 4 order by 1,3) sub where total_income > max_income) sub where second_month = next_month
select distinct account_id from (select d.account_id,d.month_year from (select * from (select b.account_id,b.month_year,b.deposit,a.max_income from (select account_id,month_year,sum(case when type='Creditor' then amount else 0 end) as deposit from (select *, cast(concat(left(day,7),'-01') as date) as month_year from Transactions)a group by account_id,month_year)b left join Accounts a on a.account_id=b.account_id)c where deposit>max_income)d,(select * from (select b.account_id,b.month_year,b.deposit,a.max_income from (select account_id,month_year,sum(case when type='Creditor' then amount else 0 end) as deposit from (select *, cast(concat(left(day,7),'-01') as date) as month_year from Transactions)a group by account_id,month_year)b left join Accounts a on a.account_id=b.account_id)c where deposit>max_income)d1 where d.account_id=d1.account_id and date_add(d1.month_year, interval 1 month)=d.month_year ) c where month_year is not null
select distinct account_id from (select t.account_id, month(day) as month, sum(amount) as amt, max_income, lag(month(day)) over(partition by t.account_id order by month(day)) as lg from transactions t left join accounts a on t.account_id=a.account_id where t.type = "Creditor" group by t.account_id,month(day) having sum(amount)>max_income) tmp where abs(month-lg)=1
select distinct account_id from( select group1, account_id, count(month_last_day) from( select account_id, last_day(date_add(month_last_day, INTERVAL -rnk MONTH)) as group1, month_last_day from ( select month_last_day, TBL.account_id, dense_rank() over (partition by TBL.account_id order by month_last_day) as rnk from ( select last_day(day) as month_last_day, account_id, sum(amount) as total_income from Transactions where type = 'Creditor' group by 1,2 ) TBL inner join Accounts A on TBL.account_id = A.account_id and TBL.total_income > A.max_income ) TBL2 )TBL3 group by 1,2 having count(month_last_day) >=2 ) TBL4
select distinct acct_id account_id from ( select case when (month + 1) = lead(month) over(partition by account_id order by account_id, month) and frd1 = 'Yes' and month and frd1 = lead(frd1) over(partition by account_id order by account_id, month) then account_id end acct_id from ( select t.account_id, month(day) month, if(coalesce(sum(case when type = 'Creditor' then amount end),0) > max_income ,'Yes','No') frd1 from transactions t join accounts a on t.account_id = a.account_id group by 1,2 order by 1,2 ) a ) b where acct_id is not null
select distinct acct_id account_id from ( select frd1,account_id,month, lead(frd1) over(partition by account_id order by account_id, month), lead(account_id) over(partition by account_id order by account_id, month), case when (month + 1) = lead(month) over(partition by account_id order by account_id, month) and frd1 = 'Yes' and month and frd1 = lead(frd1) over(partition by account_id order by account_id, month) then account_id end acct_id from ( select t.account_id, month(day) month, coalesce(sum(case when type = 'Creditor' then amount end),0) rs, if(coalesce(sum(case when type = 'Creditor' then amount end),0) > max_income ,'Yes','No') frd1 from transactions t join accounts a on t.account_id = a.account_id group by 1,2 order by 1,2 ) a ) b where acct_id is not null
select distinct c.account_id from (select a.account_id, a.month, lag(month) over(partition by account_id order by month) as lg from (select account_id, month(day) as month, sum(amount) as tot from Transactions where type = 'Creditor' group by 1, 2) as a inner join Accounts as b on a.account_id = b.account_id where a.tot > b.max_income) as c where abs(c.month-c.lg) = 1
select distinct t.account_id from ( (select account_id, extract(year_month from day) as m_y1, sum(amount) as m1_amount from Transactions where type = 'Creditor' group by 1, 2) t join (select account_id, extract(year_month from day) as m_y2, sum(amount) as m2_amount from Transactions where type = 'Creditor' group by 1, 2) t1 on t1.account_id = t.account_id and t1.m_y2 - t.m_y1 = 1 join Accounts a on a.account_id = t.account_id and t.m1_amount > a.max_income and t1.m2_amount > a.max_income)
select distinct tb.account_id as account_id from (select distinct account_id, extract(YEAR_MONTH from day) as year_m, sum(amount) as income from transactions where type='Creditor' group by 1,2) tb left outer join (select distinct account_id, extract(YEAR_MONTH from day) as year_m, sum(amount) as income from transactions where type='Creditor' group by 1,2) tb1 on tb1.year_m-1=tb.year_m and tb1.account_id=tb.account_id left outer join (select distinct account_id, extract(YEAR_MONTH from day) as year_m, sum(amount) as income from transactions where type='Creditor' group by 1,2) tb2 on tb1.year_m+1=tb.year_m and tb1.account_id=tb.account_id inner join accounts a on tb.account_id=a.account_id where tb.income>a.max_income and (tb1.income>a.max_income or tb2.income>a.max_income) order by 1
select distinct v2.account_id from ( select v1.account_id, v1.salaryMonth as suspiciousMonth from ( select Transactions.account_id, MONTH(day) as salaryMonth, sum(amount) as salary from Transactions where type = 'Creditor' group by Transactions.account_id, MONTH(day) ) v1 join Accounts on v1.account_id = Accounts.account_id where v1.salary > Accounts.max_income ) as v2 join ( select v1.account_id, v1.salaryMonth as suspiciousMonth from ( select Transactions.account_id, MONTH(day) as salaryMonth, sum(amount) as salary from Transactions where type = 'Creditor' group by Transactions.account_id, MONTH(day) ) v1 join Accounts on v1.account_id = Accounts.account_id where v1.salary > Accounts.max_income ) as v3 on v2.account_id = v3.account_id and v2.suspiciousMonth + 1 = v3.suspiciousMonth
with CTE AS( select account_id, day, sum(amount) amount from transactions where type = 'Creditor' group by account_id, DATE_FORMAT(day,'%Y-%m') order by account_id ) select distinct tab.account_id from (select t1.account_id, date_format(t1.day, '%Y-%m') t1Date, t1.amount t1amount, date_format(t2.day, '%Y-%m') t2Date, t2.amount t2amount from CTE t1 inner join CTE t2 on (t1.account_id = t2.account_id) and (date_format(t2.day, '%Y-%m') = date_format(date_add(t1.day, interval 1 month), '%Y-%m'))) tab inner join accounts on accounts.account_id = tab.account_id where (tab.t1amount > accounts.max_income) and (tab.t2amount > accounts.max_income)
with CTE AS( select account_id, day, sum(amount) amount from transactions where type = 'Creditor' group by account_id, DATE_FORMAT(day,'%Y-%m') order by account_id ) select distinct tab.account_id from (select t1.account_id, t1.amount t1amount, t2.amount t2amount from CTE t1 inner join CTE t2 on (t1.account_id = t2.account_id) and (date_format(t2.day, '%Y-%m') = date_format(date_add(t1.day, interval 1 month), '%Y-%m'))) tab inner join accounts on accounts.account_id = tab.account_id where (tab.t1amount > accounts.max_income) and (tab.t2amount > accounts.max_income)
with CTE as ( select a.account_id,trans_month from( select sum(T.amount) as max_income,T.account_id, month(T.day) as trans_month from Transactions T where T.type='Creditor' group by T.account_id,trans_month) as C join Accounts a on a.account_id=C.account_id and C.max_income>a.max_income) select distinct C.account_id from CTE C, CTE C1 where C.account_id=C1.account_id and C.trans_month=C1.trans_month+1
with CTE as (select t.account_id, month(day) as day, max_income from Transactions as t join Accounts as a on t.account_id = a.account_id where type = 'Creditor' group by t.account_id, month(day) having sum(t.amount) > a.max_income ) select distinct account_id from CTE WHERE (account_id, DAY-1) IN (SELECT account_id, DAY FROM CTE) OR (account_id, DAY+1) IN (SELECT account_id, DAY FROM CTE)
with M as (select account_id, sum(amount) as income, date_format(day,"%m,%y") as month from Transactions where type = "Creditor" group by account_id,left(day,7)) select distinct A.account_id from M M1 join M M2 on M1.month = M2.month+1 and M1.account_id = M2.account_id join Accounts A on A.account_id = M1.account_id and M1.income>A.max_income and M2.income>A.max_income
with a as (select account_id, EXTRACT(YEAR_MONTH FROM day) as trunc_month, sum(amount) as total from transactions where type='Creditor' group by 1,2 ) , b as ( select a.account_id, max_income-lag(total) over (partition by account_id order by trunc_month) as trigger1, max_income-total as trigger2, trunc_month, lag(trunc_month) over (partition by account_id order by trunc_month) as pior_month from a join accounts a2 on a.account_id=a2.account_id ) select distinct account_id from b where trigger1<0 and trigger2<0 and pior_month+1=trunc_month
with a as (select t.account_id, month(day) as months, max_income from transactions as t join accounts as a on t.account_id = a.account_id where type = 'Creditor' group by t.account_id, month(day) having sum(amount) > a.max_income) select distinct a1.account_id from a as a1 join a as a2 on a1.account_id = a2.account_id where a1.months - a2.months = 1
with accounts_amount as (select t.account_id , sum(amount) month_amounts , date_format(day, '%Y%m') month from transactions t join accounts a on t.account_id = a.account_id where type = 'Creditor' group by t.account_id, date_format(day, '%Y%m'), a.max_income having sum(amount) > a.max_income ) select a1.account_id from accounts_amount a1, accounts_amount a2 where a1.account_id = a2.account_id and PERIOD_DIFF(a1.month, a2.month) = 1 group by a1.account_id
with acctincome as ( select account_id ,left(day,7) as month ,sum(amount) as income from Transactions tran where type = 'Creditor' group by account_id,month order by account_id,month ) select distinct acct.account_id from acctincome income1 join acctincome income2 on income1.account_id = income2.account_id and date_add(concat(income1.month,'-01'),interval 1 month) = concat(income2.month,'-01') join Accounts acct on acct.account_id = income1.account_id where income1.income > acct.max_income and income2.income > acct.max_income
with agg as(select t.account_id, sum(amount)as total, year(day) as y, month(day) as m, case when sum(amount) > a.max_income then 1 else 0 end as ind from transactions t, accounts a where t.account_id = a.account_id and type = 'Creditor' group by 1,3,4 order by 1,3,4) select distinct a1.account_id from agg a1, agg a2 where a1.account_id = a2.account_id and a1.y = a2.y and a2.m-a1.m=1 and a1.ind = 1 and a2.ind = 1
with bankacct as( select account_id ,concat(left(day,7),'-01') month ,sum(amount) as total from Transactions where type = 'Creditor' group by account_id,month order by account_id,month ) select distinct bankacct1.account_id from bankacct bankacct1 join bankacct bankacct2 join Accounts acct on bankacct1.account_id = bankacct2.account_id and date_add(bankacct1.month,interval 1 month) = bankacct2.month and bankacct1.account_id = acct.account_id where bankacct1.total > acct.max_income and bankacct2.total > acct.max_income
with base as ( Select account_id, last_day(cast(day as date)) as month_year, sum(amount) as total_income From transactions Where type = 'Creditor' Group by account_id, last_day(cast(day as date)) ), result as (select a.account_id, b.month_year, case when b.total_income > a.max_income then 1 else 0 end as flags from accounts as a left join base as b on a.account_id = b.account_id order by a.account_id, b.month_year) select distinct a1.account_id from result as a1 join result as a2 on a1.account_id = a2.account_id and a2.month_year = last_day(date_add(a1.month_year, interval 1 month)) where a1.flags + a2.flags = 2
with base as ( select account_id, substr(day,1,7) as mo, sum(case when type = 'Creditor' then amount else 0 end) as income from Transactions group by 1,2 ), ls as ( select b.account_id, b.mo, b.income, a.max_income, concat(b.mo,'-01') as begin_mo, case when income > max_income then 1 else 0 end as sus from base b inner join accounts a on b.account_id = a.account_id), ls2 as ( select account_id, mo, sus, begin_mo, lead(sus) over (partition by account_id order by mo) as sus_next, lead(begin_mo) over (partition by account_id order by mo) as mon_next from ls ) select distinct account_id from ls2 where sus = 1 and sus_next =1 and TIMESTAMPDIFF(month, begin_mo,mon_next) <= 1
with base as ( select month(day) as month, account_id, sum(amount) as monthly_income from transactions where type = 'Creditor' group by 1, 2 ) select distinct b1.account_id from base b1 join base b2 on b1.month = b2.month + 1 and b1.account_id = b2.account_id join accounts a on b1.account_id = a.account_id where b1.monthly_income > a.max_income and b2.monthly_income > a.max_income order by 1
with base as (select a.account_id, a.max_income, LEFT(day,7) as month, case when type = 'Creditor' then amount else 0 end as income from accounts a left join transactions t on a.account_id = t.account_id), suspicious as (select account_id, max_income, month, sum(income) from base group by 1,2,3 having sum(income) > max_income) select distinct s2.account_id from suspicious s1 left join suspicious s2 on s1.account_id = s2.account_id and convert(RIGHT(s1.month,2),unsigned integer)+1 = convert(RIGHT(s2.month,2),unsigned integer) where s2.account_id is not null
with base as (select t.account_id, convert(concat(substr(t.day,1,7),'-01'),date) as month, case when sum(t.amount)>a.max_income then 1 else 0 end as flag from transactions t join accounts a on t.account_id=a.account_id where t.type='Creditor' group by 1, 2 order by 1, 2) select distinct b1.account_id from base b1 left join base b2 on b1.account_id=b2.account_id and date_add(b1.month,interval 1 month) = b2.month where b1.flag = 1 and b2.flag=1 order by b1.account_id
with base as (select t.account_id, convert(concat(substr(t.day,1,7),'-01'),date) as month, case when sum(t.amount)>a.max_income then 1 else 0 end as flag from transactions t join accounts a on t.account_id=a.account_id where t.type='Creditor' group by 1, 2 order by 1, 2) select distinct b1.account_id from base b1 left join base b2 on b1.account_id=b2.account_id and date_add(b1.month,interval 1 month) = b2.month where b2.account_id is not null and b1.flag = 1 and b2.flag=1 order by b1.account_id
with base as (select t.account_id, convert(concat(substr(t.day,1,7),'-01'),date) as month, sum(t.amount) as income from transactions t where t.type='Creditor' group by 1, 2 order by 1, 2), filtered as (select b.* from base b join accounts a on b.account_id=a.account_id where b.income>a.max_income) select distinct b1.account_id from filtered b1 left join filtered b2 on b1.account_id=b2.account_id and date_add(b1.month,interval 1 month) = b2.month where b2.account_id is not null order by b1.account_id
with base as( select account_id, date_format(day, '%Y-%m-01') as month, sum(amount) as total from transactions where type = 'Creditor' group by 1,2), final as ( select b.account_id, b.month, case when b.total > a.max_income then 'Y' else 'N' end as flag from base b inner join accounts a on b.account_id = a.account_id) select f.account_id from final f inner join final fi on f.account_id = fi.account_id and f.month = date_add(fi.month, interval 1 month) and f.flag = 'Y' and fi.flag = 'Y' group by f.account_id
with creditbymonth as (select date_format(day,'%Y-%m') as month, account_id, sum(amount) totalcredit from Transactions where type = 'Creditor' group by date_format(day,'%Y-%m'), account_id) select distinct account_id from ( select account_id, month, lead(month, 1) over (partition by account_id order by month) as next_month from ( select month, a.account_id, totalcredit, max_income from creditbymonth a,Accounts b where a.account_id = b.account_id and totalcredit>max_income)a )b where next_month is not null and PERIOD_DIFF(date_format(STR_TO_DATE(next_month,'%Y-%m'), '%Y%m'),date_format(STR_TO_DATE(month,'%Y-%m'), '%Y%m')) = 1
with cte as ( SELECT Transactions.account_id, type, day, SUM(amount) as totalincome, max_income FROM Transactions JOIN Accounts ON Transactions.account_id = Accounts.account_id WHERE type = "Creditor" GROUP BY account_id, MONTH(day) ) SELECT DISTINCT c1.account_id FROM cte c1 LEFT JOIN cte c2 ON c1.account_id = c2.account_id AND MONTH(c1.day) = MONTH(c2.day) -1 WHERE c1.totalincome> c1.max_income AND c2.totalincome> c2.max_income
with cte as ( SELECT transaction_id,t.account_id, month(t.day) as month, a.max_income FROM Accounts a JOIN Transactions t USING(account_id) GROUP BY t.account_id, month HAVING sum((type='Creditor')*amount)> a.max_income) SELECT distinct c1.account_id FROM cte c1, cte c2 WHERE c1.account_id=c2.account_id AND period_diff(c1.month, c2.month)=1 ORDER BY c1.transaction_id
with cte as ( SELECT transaction_id,t.account_id, month(t.day) as month, a.max_income FROM Accounts a JOIN Transactions t USING(account_id) GROUP BY t.account_id, month HAVING sum(CASE WHEN type='Creditor' THEN amount ELSE 0 END)> a.max_income) SELECT distinct c1.account_id FROM cte c1, cte c2 WHERE c1.account_id=c2.account_id AND period_diff(c1.month, c2.month)=1 ORDER BY c1.transaction_id
with cte as ( Select A.account_id, month(t.day) 'month', sum(t.amount), A.max_income from Transactions t join Accounts A on A.account_id = t.account_id where type like 'Creditor' group by 1,2 having sum(t.amount) > A.max_income ) Select distinct account_id from ( Select account_id, month, lead(month) over (partition by account_id order by month) next from cte ) temp where month+1 = next
with cte as ( Select account_id,sum(amount) as amount,month(day) as months from transactions t where type = 'Creditor' group by account_id,month(day) ), cte2 as ( select c.account_id, months from cte c join accounts a on c.account_id = a.account_id where amount > max_income ) Select distinct c1.account_id from cte2 c join cte2 c1 on c.account_id = c1.account_id where c1.months - c.months = 1
with cte as ( select T.account_id, year(day) as year, month(day) as month, sum(case when type='Creditor' then amount else 0 end) as total_income, avg(max_income) as max_income from Transactions T join Accounts A on T.account_id = A.account_id group by 1,2,3 having sum(case when type='Creditor' then amount else 0 end)>avg(max_income) order by 1,2,3 ) select distinct c1.account_id from cte c1, cte c2 where c1.account_id = c2.account_id and (c1.year = c2.year and c1.month = c2.month-1) or (c1.year = c2.year-1 and c1.month=12 and c2.month =1) order by 1
with cte as ( select a.account_id, a.yymm from ( select account_id, date_format(date_sub(day, interval dayofmonth(day)-1 day), '%Y-%m-%d' ) as yymm, sum(amount) as amount from transactions where type = 'Creditor' group by account_id, date_format(date_sub(day, interval dayofmonth(day)-1 day), '%Y-%m-%d' ) ) as a join accounts as b where a.account_id = b.account_id and a.amount > b.max_income ) select distinct c1.account_id from cte as c1 join cte as c2 on c1.account_id = c2.account_id and date_add(c1.yymm, interval 1 month) = c2.yymm
with cte as ( select a.account_id, month(a.day) month from Transactions a left join Accounts b using(account_id) group by a.account_id, month(a.day) having sum(case when a.type = 'creditor' then a.amount else 0 end) > max(b.max_income) ) select distinct x.account_id from cte x join cte y on x.account_id = y.account_id and x.month = y.month -1 order by x.account_id
with cte as ( select a.account_id, month(day) month, sum(amount) monthly, a.max_income from accounts a join transactions t on a.account_id = t.account_id where type = 'Creditor' group by 1, 2 having monthly > a.max_income order by 1, 2 ) select distinct c1.account_id from cte c1 join cte c2 on c1.account_id = c2.account_id and c1.month = c2.month + 1
with cte as ( select a.account_id, month(t.day) month from Accounts a join Transactions t on a.account_id = t.account_id group by a.account_id, month having sum(case when t.type='Creditor' then t.amount else 0 end)>max(a.max_income)) select distinct a.account_id from cte a join cte b on a.account_id = b.account_id and a.month = b.month-1 order by a.account_id asc
with cte as ( select a.account_id, yy, mm from ( select account_id, date_format(day, '%Y') as yy, date_format(day, '%m') as mm, sum(amount) as amount from transactions where type = 'Creditor' group by account_id, date_format(day, '%Y'), date_format(day, '%m') ) as a join accounts as b on a.account_id = b.account_id where a.amount > b.max_income ) select distinct c1.account_id from cte as c1 join cte as c2 on c1.account_id = c2.account_id and ( ( (c1.yy = c2.yy) and (c1.mm + 1 = c2.mm) ) or ( (c1.yy + 1 = c2.yy) and (c1.mm - 11 = c2.mm) ) )
with cte as ( select account_id, month(day) as mon, sum(amount) as tot from Transactions where type = 'Creditor' group by account_id, month(day) ), cte1 as ( select a.account_id, tot, mon, lag(mon, 1) over (partition by a.account_id order by mon) as prev_mon from cte a inner join Accounts b on a.account_id = b.account_id where tot > max_income ) select distinct account_id from cte1 where mon-prev_mon = 1
with cte as ( select account_id,month(day) as month,sum(amount) as net_amount from transactions where type='Creditor' group by account_id,month ), demo as ( select cte.account_id,cte.month, row_number() over (partition by account_id order by month asc) as rnk from cte join accounts as a on cte.account_id=a.account_id and cte.net_amount>a.max_income order by account_id,month ), sub as ( select account_id,month-rnk as diff from demo ) select distinct account_id from sub group by account_id,diff having count(*)>1
with cte as ( select account_id,month_day,sum(amount) as tot_amt from ( select account_id,day, month(day) as month_day,amount from transactions where type='Creditor' )x group by account_id,month_day ), cte2 as ( select account_id,max_income,tot_amt,month_day, case when tot_amt>max_income then 1 else 0 end as exce_in from ( select t1.account_id,month_day,tot_amt,t2.max_income from cte t1 join accounts t2 on t1.account_id=t2.account_id )x ) select distinct account_id from ( select account_id,exce_in,month_day-rnk as consec from ( select account_id,month_day,rank() over(partition by account_id order by month_day) as rnk, exce_in from cte2 where exce_in=1 )x)y group by account_id,consec having sum(exce_in)>=2
with cte as ( select month(day) mon, account_id, sum(amount) tot_income from Transactions where type = 'Creditor' group by month(day), account_id ), cte2 as ( select a.account_id, mon, tot_income, max_income, mon-row_number() over (partition by a.account_id order by mon) grp from cte c join Accounts a on c.account_id = a.account_id where tot_income>max_income ) select distinct account_id from cte2 group by grp, account_id having count(*)>1
with cte as ( select sub.* from ( SELECT account_id,MONTH(DAY) AS MNTH,SUM(AMOUNT) as AMOUNT FROM TRANSACTIONS WHERE TYPE='Creditor' GROUP BY account_id,MONTH(DAY) )sub join Accounts A on sub.account_id=A.account_id and sub.amount>A.max_income ) select distinct(c1.account_id) from cte c1 join cte c2 on c1.account_id=c2.account_id where (c1.mnth+1 = c2.mnth )
with cte as ( select sub.* from ( SELECT account_id,MONTH(DAY) AS MNTH,SUM(AMOUNT) as AMOUNT FROM TRANSACTIONS WHERE TYPE='Creditor' GROUP BY account_id,MONTH(DAY) )sub join Accounts A on sub.account_id=A.account_id and sub.amount>A.max_income ) select distinct(c1.account_id) from cte c1 join cte c2 on c1.account_id=c2.account_id where (c1.mnth+1 = c2.mnth or c1.mnth-1=c2.mnth)
with cte as ( select t.*,a.max_income from (select account_id, year(day) as year,month(day) as month, sum(amount) as amount from transactions where type='Creditor' group by account_id,month) t join accounts a on a.account_id=t.account_id and t.amount>a.max_income ) select distinct a.account_id from cte a, cte b where a.account_id=b.account_id and a.month-b.month = 1 group by a.account_id,a.month
with cte as ( select t.account_id , extract(year_month from t.day) as tran_year_month , sum(case when t.type='Creditor' then t.amount end) as total_income , case when sum(case when t.type='Creditor' then t.amount end) > a.max_income then 1 else 0 end as suspecious from Transactions t inner join Accounts a on t.account_id=a.account_id group by 1,2 ) select distinct c1.account_id from cte c1 inner join cte c2 on c1.account_id=c2.account_id and c1.tran_year_month=c2.tran_year_month-1 where c1.suspecious=1 and c2.suspecious=1 order by 1
with cte as ( select t.account_id , year(day)*100 + month(day) as yearmon , sum(case when type = 'Creditor' then amount end) as total_income , max(a.max_income) as max_income from transactions t, accounts a where t.account_id = a.account_id group by 1,2 having total_income > max_income order by a.account_id) select distinct t1.account_id from cte t1, cte t2 where t1.account_id = t2.account_id and t1.yearmon = t2.yearmon - 1 order by t1.account_id
with cte as ( select t.account_id, Date_Format(day,'%m/%Y') AS Date, sum(case when type='Creditor' then amount else 0 end) as income from Transactions t join Accounts a ON t.account_id = a.account_id group by 1,2 ) select distinct cte.account_id from cte join cte cte2 on cte.account_id=cte2.account_id and period_diff(cte.date,cte2.date)=1 join accounts a on a.account_id=cte.account_id where a.max_income<cte.income and a.max_income<cte2.income
with cte as ( select t.account_id, MONTH(day) as monthly, SUM(amount) as sum_income, max_income from Transactions t join Accounts a on t.account_id = a.account_id where type = 'Creditor' group by t.account_id,MONTH(day) order by t.account_id, MONTH(day) ) select distinct c1.account_id from cte c1 join cte c2 on c1.account_id = c2.account_id and c2.monthly-c1.monthly = 1 where c1.sum_income>c1.max_income and c2.sum_income>c2.max_income
with cte as ( select t.account_id, case when month(t.day) < 10 then concat(year(t.day),'-0',month(t.day),'-01') else concat(year(t.day),'-',month(t.day),'-01') end as 'month', sum(t.amount) as 'amount', date_sub(concat(year(t.day),'-',month(t.day),'-01'), INTERVAL 1 MONTH) as 'prevmonth' from Transactions t where t.type = 'Creditor' group by 1,2 ), cte2 as ( select c.account_id, c.month, c.amount, c.prevmonth, ifnull(c2.amount,0) as 'prevmonthamnt', case when c.amount > a.max_income and ifnull(c2.amount,0) > a.max_income then 1 else 0 end as 'suspicious' from cte c left join cte c2 on c.account_id = c2.account_id and c.prevmonth = c2.month left join Accounts a on c.account_id = a.account_id ) select account_id from cte2 group by 1 having sum(suspicious) > 0
with cte as ( select t.account_id, date_format(day,'%Y%m') as each_month, sum(amount) as amount_sum, a.max_income from Transactions as t left join accounts as a on t.account_id = a.account_id where t.type='Creditor' group by 1,2 having sum(amount) > a.max_income) select distinct t1.account_id from cte as t1 inner join cte as t2 on t1.account_id = t2.account_id where period_diff(t1.each_month, t2.each_month)=1 group by 1 order by 1
with cte as ( select t.account_id, date_format(day,'%Y%m') as each_month, sum(amount) as amount_sum, a.max_income from Transactions as t left join accounts as a on t.account_id = a.account_id where t.type='Creditor' group by 1,2 having sum(amount) > a.max_income) select t1.account_id from cte as t1 inner join cte as t2 on t1.account_id = t2.account_id where period_diff(t1.each_month, t2.each_month)=1 group by 1 order by 1
with cte as ( select t.account_id, left(t.day,7) as month, case when sum(t.amount) > a.max_income then 1 else 0 end as exceed from transactions t inner join accounts a on t.account_id = a.account_id where t.type = 'Creditor' group by left(t.day,7), t.account_id having exceed =1 order by 1,2 ) select distinct c1.account_id from cte c1 inner join cte c2 on c1.account_id =c2.account_id and substr(c1.month,6,2)+1 = substr(c2.month,6,2)
with cte as ( select t.account_id, sum(amount) as amt, max(max_income) as mx, year(day) as yr, month(day) as mnt from transactions t left join accounts a on t.account_id = a.account_id where type = 'Creditor' group by t.account_id, year(day), month(day) having sum(amount) > max(max_income)), cte2 as ( select account_id, yr, mnt, lead(mnt) over(partition by account_id order by yr, mnt) as nxt_mnt from cte) select distinct account_id from cte2 where nxt_mnt-mnt=1
with cte as ( select t.account_id, sum(amount)as total_income, date_format(day, '%m') as month, a.max_income from transactions t left join accounts a on t.account_id = a.account_id where type = "creditor" group by month, t.account_id having total_income> max_income order by 1,3) SELECT DISTINCT C1.account_id FROM CTE C1 JOIN CTE C2 ON C1.account_id = C2.account_id AND period_diff(C1.month,C2.month) = 1 ORDER BY 1 ASC
with cte as ( select t.account_id, t.mnth, t.credited_amt, a.max_income from (select account_id, date_format(day,"%m") as mnth, sum(amount) as credited_amt from transactions where type = 'Creditor' group by account_id, mnth order by account_id, mnth asc) t left join accounts a on a.account_id = t.account_id ) select distinct x.account_id from( select account_id, (mnth*1) as mnth, credited_amt,max_income, lag(credited_amt) over (partition by account_id) as prev_credit, (lag(mnth) over (partition by account_id) *1) as prev_mnth from cte)x where x.max_income < x.credited_amt and x.max_income < x.prev_credit and (mnth - prev_mnth) =1.0
with cte as ( select t.account_id, t.month from (select account_id, date_format(day, '%Y%m') as month, sum(amount) as total from transactions where type = 'Creditor' group by 1, 2) t join accounts a on t.account_id = a.account_id and t.total > a.max_income ) select distinct c1.account_id from cte c1 join cte c2 on c1.account_id = c2.account_id and c2.month - c1.month = 1
with cte as ( select t.account_id, t.month from (select account_id, date_format(day, '%Y%m') as month, sum(amount) as total from transactions where type = 'Creditor' group by 1, 2) t join accounts a on t.account_id = a.account_id and t.total > a.max_income ) select distinct t1.account_id from cte t1 join cte t2 on t1.account_id = t2.account_id and t1.month = t2.month - 1
with cte as ( select t.account_id, t.month from (select account_id, date_format(day, '%Y%m') as month, sum(amount) as total from transactions where type = 'Creditor' group by 1, 2) t join accounts a on t.account_id = a.account_id and t.total > a.max_income) select distinct c1.account_id from cte c1 join cte c2 on c1.account_id = c2.account_id and c2.month - c1.month = 1
with cte as ( select t.account_id, year(day)*12+month(day) as month, if(sum(amount) > a.max_income, 1, 0) exceed from Transactions t left join Accounts a on a.account_id = t.account_id where type = 'Creditor' group by t.account_id, month having exceed = 1 ) select distinct t1.account_id from cte t1, cte t2 where t1.account_id = t2.account_id and t1.month - t2.month =1
with cte as ( select t.account_id,month(t.day) as month ,sum(t.amount) amount,a.max_income from transactions t left join accounts a using (account_id) where t.type='creditor' group by 1,2 having sum(t.amount) > a.max_income order by 1 ) select t1.account_id from cte t1,cte t2 where t1.account_id = t2.account_id and period_diff(t1.month,t2.month)=1 group by 1 order by 1
with cte as (select * from Accounts join (select account_id, day, sum(amount) as tot from Transactions where type = 'Creditor' group by account_id, left(day, 7)) t using(account_id) having tot > max_income) select distinct a.account_id from cte a, cte b where a.account_id = b.account_id and year(a.day) = year(b.day) and month(a.day) - month(b.day) = 1
with cte as (select T.account_id, year(day)*12+month(day) as Month , (case when sum(amount) > max_income then 1 else 0 end ) as exceed from Transactions T inner join Accounts A on T.account_id = A.account_id where type ='Creditor' group by T.account_id, year(day)*12+month(day) ) select distinct(cte1.account_id )from cte cte1 inner join cte cte2 on cte1.account_id = cte2.account_id where cte1.month - cte2.month = 1 and cte1.exceed = 1 and cte2.exceed = 1
with cte as (select a.account_id, month(a.day) month from Transactions a left join Accounts b using(account_id) group by a.account_id, month(a.day) having sum(case when a.type = 'creditor' then a.amount else 0 end) > max(b.max_income)) select distinct x.account_id from cte x join cte y on x.account_id = y.account_id and x.month = y.month -1 order by x.account_id
with cte as (select account_id, MONTH(day) as Month1, YEAR(day) as Year1, SUM(amount) as total_income from Transactions where type = 'Creditor' group by account_id, Year1, Month1), cte2 as (select cte.account_id, cte.Month1, cte.Year1, cte.total_income , max_income, (case when total_income > max_income then 1 else 0 end) as Flag from cte inner join Accounts a on cte.account_id = a.account_id order by account_id, Year1, Month1 ) select distinct c1.account_id from cte2 c1 inner join cte2 c2 on c1.account_id = c2.account_id and ((c1.Month1 = c2.Month1 - 1 AND c1.Year1 = c2.Year1) OR (c1.Month1 = 12 AND c2.Month1 = 1 AND c1.Year1 = c2.Year1 - 1)) where c1.Flag = 1 and c2.Flag = 1 order by account_id
with cte as (select account_id, MONTH(day) as Month1, YEAR(day) as Year1, SUM(amount) as total_income from Transactions where type = 'Creditor' group by account_id, Year1, Month1), cte2 as (select cte.account_id, cte.Month1, cte.Year1, cte.total_income , max_income, (case when total_income > max_income then 1 else 0 end) as Flag from cte inner join Accounts a on cte.account_id = a.account_id order by account_id, Year1, Month1 ) select distinct c1.account_id from cte2 c1 inner join cte2 c2 on c1.account_id = c2.account_id and (c1.Month1 = c2.Month1 - 1 AND c1.Year1 = c2.Year1) where c1.Flag = 1 and c2.Flag = 1 order by account_id
with cte as (select account_id, amount, month(day) as month from transactions where type = 'Creditor'), cte1 as (select account_id, sum(amount) as tot_amount, month from cte group by account_id, month), cte2 as( select cte1.account_id, month from cte1 join accounts a on cte1.account_id = a.account_id where tot_amount > max_income order by cte1.account_id, month) select distinct account_id from( select account_id, month - row_number() over(partition by account_id order by month) as diff from cte2 )sub1 group by account_id, diff having count(*) >= 2 order by account_id
with cte as (select account_id, day, case when amount>max_income then 1 else 0 end as indics from (select a.account_id, month(day) day, sum( case when type='creditor' then amount else 0 end) as amount, max_income from transactions a inner join accounts b on a.account_id=b.account_id group by 1,2)c) select distinct a.account_id from cte a left join cte b on a.indics=b.indics and a.account_id=b.account_id where a.indics=1 and a.day-b.day=1 order by 1
with cte as (select account_id, day, case when amount>max_income then 1 else 0 end as indics from (select a.account_id, month(day) day, sum( case when type='creditor' then amount else 0 end) as amount, max_income from transactions a inner join accounts b on a.account_id=b.account_id group by 1,2)c) select distinct account_id from (select account_id,day,lead(day,1,0) over (partition by account_id order by day) as nextm,indics,lead(indics,1,0) over (partition by account_id order by day) as indic2 from cte)c where nextm-day=1 and indics=indic2 and indics=1
with cte as (select account_id, month from (select month(day) as month, Transactions.account_id, sum(amount) as totalincome, max_income from Transactions join Accounts on Transactions.account_id = Accounts.account_id where type = 'Creditor' group by month, account_id) tb where totalincome > max_income) select distinct c1.account_id from cte c1 join cte c2 on c1.account_id = c2.account_id and c1.month + 1 = c2.month
with cte as (select account_id, month(day) as mon, sum(amount) as total_income from transactions where type='Creditor' group by account_id,month(day) order by account_id,month(day)), cte1 as ( select a.account_id, (case when a.total_income>max_income and b.total_income>max_income then 'Yes' else 'No' end) as susp_acct from cte a join cte b on a.account_id=b.account_id and a.mon=b.mon+1 join accounts c on a.account_id=c.account_id) select distinct account_id from cte1 where susp_acct='Yes' order by account_id
with cte as (select account_id, month(day) as month, sum(amount) as amt from Transactions where type='Creditor' group by account_id, month(day)) select distinct c1.account_id from cte c1 join cte c2 on c1.account_id=c2.account_id and c1.month=c2.month-1 join Accounts a on c1.account_id=a.account_id where c1.amt>max_income and c2.amt>max_income
with cte as (select account_id, substring(day, 1, 7) as month, Sum(case when type = 'Creditor' then amount end) as totalincome from Transactions group by 1, 2 ) select distinct c1.account_id from cte c1 join Accounts on c1.account_id = Accounts.account_id join cte c2 on c2.account_id = Accounts.account_id where c1.totalincome > max_income and c2.totalincome > max_income and abs(substring(c1.month,5,7) - substring(c2.month, 5,7)) = 1
with cte as (select account_id, sum(amount) amt, month(`day`) as month from transactions where type = 'Creditor' group by 1,3), cte1 as (select accounts.account_id, month, lag(month, 1) over(partition by account_id order by month) as num from cte join accounts using(account_id) where amt>max_income) select distinct account_id from cte1 where month-num=1 order by 1
with cte as (select account_id, sum(amount) as total_income, month(day) as mon From Transactions Where type = 'Creditor' Group by account_id, month(day)), cte1 as (select Accounts.account_id, mon From cte Join Accounts Using(account_id) Where total_income > max_income) select distinct cte1.account_id From cte1 Join cte1 tmp Using(account_id) Where abs(cte1.mon - tmp.mon) = 1
with cte as (select account_id, sum(amount) as total_income, month(day) as mon From Transactions Where type = 'Creditor' Group by account_id, month(day)), cte1 as (select Accounts.account_id, mon From cte Join Accounts Using(account_id) Where total_income > max_income) select distinct cte1.account_id as account_id From cte1 Join cte1 cte2 Using(account_id) Where abs(cte1.mon - cte2.mon) = 1
with cte as (select account_id, sum(amount) mon_amount, month(day) mon from transactions where type = 'Creditor' group by account_id, mon), cte2 as ( select c1.account_id, c1.mon first, c2.mon second, c1.mon_amount firstmon, c2.mon_amount secondmon from cte c1 join cte c2 on c1.account_id = c2.account_id and c1.mon = c2.mon-1 ) select distinct c.account_id from cte2 c join Accounts a on a.account_id = c.account_id where c.firstmon > max_income and c.secondmon > max_income
with cte as (select account_id,month from (select T.account_id, max_income, date_format(day,"%Y-%m") as month, sum(amount) as total_income from Transactions T join Accounts A on T.account_id= A.account_id and type='Creditor' group by account_id,month, max_income) t1 where total_income>max_income) select distinct account_id from (select account_id,month, lag(month) over(partition by account_id order by month) as prev_month from cte ) t2 where prev_month is not null and Date_sub(concat(month,"-01"), interval 1 month)= concat(prev_month,"-01")
with cte as (select account_id,month(day) as mth,sum(amount) as total, max_income from transactions inner join accounts a using(account_id) where type='creditor' group by 1,2 order by 1,2) select distinct c1.account_id from cte c1,cte c2 where c1.account_id = c2.account_id and c1.mth-c2.mth=1 and c1.total>c1.max_income and c2.total>c2.max_income
with cte as (select account_id,month(day)month,sum(amount)tot_month_income from transactions where type = 'Creditor ' group by account_id,month(day) ), pre_cook as (select a.account_id,tot_month_income,a.max_income,c.month from accounts a join cte c on a.account_id=c.account_id group by a.account_id,tot_month_income having c.tot_month_income > a.max_income) select p.account_id from pre_cook p join pre_cook pp on p.account_id=pp.account_id and PERIOD_DIFF(p.month,pp.month)=1 group by p.account_id order by p.account_id
with cte as (select concat(left(day, 7), '-01') as month, transaction_id, t.account_id, sum(case when type='Creditor' then amount else 0 end) as month_sum, max_income from transactions t join accounts a on a.account_id = t.account_id group by left(day,7), t.account_id order by transaction_id) select distinct t1.account_id from cte t1 join cte t2 on timestampdiff(month, t1.month, t2.month) =1 and t1.account_id = t2.account_id where t1.month_sum > t1.max_income and t2.month_sum > t2.max_income
with cte as (select t.account_id, date_format(day,'%m %y') as month, sum(case when type='Creditor' then amount end) as total_income ,max_income from transactions t left join accounts a on a.account_id=t.account_id group by t.account_id,date_format(day,'%m %y') ) select distinct cte1.account_id from cte cte1 join cte cte2 on cte1.account_id=cte2.account_id and cte1.month=cte2.month-1 where cte1.total_income>cte1.max_income and cte2.total_income>cte1.max_income
with cte as (select t.account_id, month(day) AS month, (case when sum(amount) > a.max_income then 1 else 0 end) AS exceed from transactions t Left join accounts a on t.account_id = a.account_id where type = 'Creditor' group by month(day), t.account_id ) select distinct c1.account_id from cte c1, cte c2 where c1.account_id = c2.account_id and c2.month-c1.month =1 and c1.exceed = 1 and c2.exceed = 1
with cte as (select t.account_id, month(t.day) as month, case when sum(t.amount)>a.max_income then 1 else 0 end as if_exceeds from Transactions t join Accounts a on t.account_id=a.account_id where t.type='Creditor' group by 1,2) select distinct c1.account_id from cte c1, cte c2 where c1.account_id=c2.account_id and c1.month-c2.month=1 and c1.if_exceeds=1 and c2.if_exceeds=1
with cte as (select t.account_id, year(day)*12+month(day) month, (case when sum(amount) > a.max_income then 1 else 0 end) exceed from transactions t join accounts a on t.account_id = a.account_id where type = 'Creditor' group by year(day)*12+month(day), t.account_id ) select distinct c1.account_id from cte c1, cte c2 where c1.account_id = c2.account_id and c2.month-c1.month =1 and c1.exceed = 1 and c2.exceed = 1
with cte as (select t.account_id, year(day)*12+month(day) month, (case when sum(amount) > a.max_income then 1 else 0 end) exceed from transactions t,accounts a where t.account_id = a.account_id and type = 'Creditor' group by year(day)*12+month(day), t.account_id ) select distinct c1.account_id from cte c1, cte c2 where c1.account_id = c2.account_id and c2.month-c1.month =1 and c1.exceed = 1 and c2.exceed = 1
with cte as (select t.account_id,date_format(day,'%m %y') as month, sum(case when type='Creditor' then amount end) as total_income ,max_income from transactions t left join accounts a on a.account_id=t.account_id group by t.account_id,date_format(day,'%m %y') ) select distinct cte1.account_id from cte cte1 join cte cte2 on cte1.account_id=cte2.account_id and cte1.month=cte2.month-1 where cte1.total_income>cte1.max_income and cte2.total_income>cte1.max_income
with cte as (select transactions.account_id, year(day) as year, month(day) as month, sum(amount) as total_income, max_income from transactions join accounts on transactions.account_id = accounts.account_id where type = 'Creditor' group by account_id, year(day), month(day) order by account_id, year(day), month(day)) select distinct t1.account_id from cte t1 join cte t2 on t1.account_id = t2.account_id and t1.year = t2.year where t1.month = t2.month + 1 and t1.total_income > t1.max_income and t2.total_income > t1.max_income
with cte as( SELECT a.account_id, year(t.day)*12+month(t.day) as month FROM Accounts as a JOIN Transactions as t using (account_id) WHERE type='Creditor' GROUP BY a.account_id, year(t.day)*12+month(t.day) HAVING SUM(amount)>MAX(max_income) ) SELECT DISTINCT t1.account_id FROM cte as t1 JOIN cte as t2 ON t1.account_id=t2.account_id and t2.month-t1.month=1 ORDER BY t1.account_id
with cte as( select account_id, DATE_FORMAT(day,'%Y%m') as months, sum(amount) as total, max_income from transactions t join accounts a using (account_id) where type = 'Creditor' group by 1, 2 having total > max_income) select distinct a.account_id from cte a, cte b where a.account_id = b.account_id and period_diff(b.months, a.months) = 1 group by 1
with cte as( select account_id, concat(left(day,7),'-01') mth, sum(amount) total_amount from transactions where type = 'Creditor' group by 1, 2 ), sus as ( select cte.* from cte join accounts t on t.account_id = cte.account_id where t.max_income < cte.total_amount), cte_rank as ( select account_id, timestampdiff(month,'2021-01-01',mth) m, row_number() over (partition by account_id order by mth) drk, timestampdiff(month,'2021-01-01',mth)*1.0 - row_number() over (partition by account_id order by mth) grp from sus) select distinct account_id from cte_rank group by 1, grp having count(*) > 1 order by 1
with cte as( select account_id, concat(left(day,7),'-01') mth, sum(amount) total_amount from transactions where type = 'Creditor' group by 1, 2 ), sus as ( select cte.* from cte join accounts t on t.account_id = cte.account_id where t.max_income < cte.total_amount), cte_rank as ( select account_id, timestampdiff(month,'2021-1-01',mth) m, row_number() over (partition by account_id order by mth) drk, timestampdiff(month,'2021-1-01',mth)*1.0 - row_number() over (partition by account_id order by mth) grp from sus) select distinct account_id from cte_rank group by 1, grp having count(*) > 1 order by 1
with cte as( select account_id, concat(left(day,7),'-01') mth, sum(amount) total_amount from transactions where type = 'Creditor' group by 1, 2 ), sus as ( select cte.* from cte join accounts t on t.account_id = cte.account_id where t.max_income < cte.total_amount), cte_rank as ( select account_id, timestampdiff(month,'2021-12-01',mth) m, row_number() over (partition by account_id order by mth) drk, timestampdiff(month,'2021-12-01',mth)*1.0 - row_number() over (partition by account_id order by mth) grp from sus) select distinct account_id from cte_rank group by 1, grp having count(*) > 1 order by 1
with cte as( select account_id, date_format(day,'%Y-%m') mth, sum(amount) month_income from transactions where type = 'Creditor' group by 1, 2 ), temp as ( select distinct cte.account_id, concat( mth,'-01') mth from cte join accounts t on t.account_id = cte.account_id where t.max_income < cte.month_income) select distinct t1.account_id from temp t1 join temp t2 on t1.account_id = t2.account_id where timestampdiff(month, t1.mth, t2.mth) = 1
with cte as( select account_id, date_format(day,'%m %y') as mth_end, sum(amount) as amt from Transactions where type = 'Creditor' group by 1,2 ), cte2 as( select tab1.account_id, tab1.mth_end, case when tab1.amt > tab2.max_income then 1 else 0 end as indicator from cte tab1 left join Accounts tab2 on tab1.account_id = tab2.account_id ) select distinct tab2.account_id from cte2 tab1 inner join cte2 tab2 on tab1.account_id = tab2.account_id and tab2.mth_end = (tab1.mth_end+1) where tab1.indicator = 1 and tab2.indicator = 1
with cte as( select account_id, month(day) month, sum(amount) total from Transactions where type = 'Creditor' group by account_id, month(day) ), c2 as( select cte.account_id, max_income, total, lead(total,1) over (partition by cte.account_id order by month) nxt, month, lead(month,1) over (partition by cte.account_id order by month) nxtmonth from cte left join accounts a on a.account_id = cte.account_id ) select distinct account_id from c2 where total>max_income and nxt>max_income and nxtmonth-month = 1
with cte as( select account_id, month(day) month, sum(amount) total_amount from transactions where type = 'Creditor' group by 1, 2 ), sus as ( select cte.* from cte join accounts t on t.account_id = cte.account_id where t.max_income < cte.total_amount), cte_rank as ( select * , DENSE_RANK() over (partition by account_id order by month asc) drk from sus), cte_grp as ( select account_id, total_amount, month - drk grp from cte_rank) select distinct account_id from cte_grp group by grp, account_id having count(account_id) >=2
with cte as( select account_id, month(day) month, sum(amount) total_amount from transactions where type = 'Creditor' group by 1, 2 ), sus as ( select cte.* from cte join accounts t on t.account_id = cte.account_id where t.max_income < cte.total_amount), cte_rank as ( select account_id, month, row_number() over (partition by account_id order by month) drk, month - row_number() over (partition by account_id order by month) grp from sus) select distinct account_id from cte_rank group by 1, grp having count(*) > 1 order by 1
with cte as( select account_id, month(day) month, sum(amount) total_amount from transactions where type = 'Creditor' group by 1, 2 ), sus as ( select cte.* from cte join accounts t on t.account_id = cte.account_id where t.max_income < cte.total_amount), cte_rank as ( select account_id, total_amount, month, DENSE_RANK() over (partition by account_id order by month) drk, month - DENSE_RANK() over (partition by account_id order by month) grp from sus) select distinct account_id from cte_rank group by grp, account_id having count(account_id) >=2
with cte as( select account_id, sum(amount) as total, concat(left(day,7),'-01') as last_day_of_month,max_income from transactions t join accounts a using(account_id) where type = 'creditor' group by account_id, left(day,7) having sum(amount)> max_income ) select distinct account_id from cte where (account_id,date_add(last_day_of_month, interval 1 month)) in (select account_id,last_day_of_month from cte )
with cte as( select account_id, sum(amount) as total_income, month(day) as month from transactions where type = 'creditor' group by account_id, month order by account_id), cte2 as( select c.account_id, month from cte as c join accounts as a on c.account_id = a.account_id where total_income > max_income) select distinct account_id from( select account_id, (month - dense_rank() over(partition by account_id order by month)) as diff from cte2) as sub group by diff, account_id having count(account_id)> 1
with cte as( select account_id,month(day)as month,sum(amount)as total_income from Transactions where type = 'Creditor' group by account_id,month order by 1,2) select distinct a.account_id from accounts a join cte c1 on a.account_id = c1.account_id and a.max_income < c1.total_income join cte c2 on a.account_id = c2.account_id and c1.month = c2.month-1 and a.max_income < c2.total_income order by 1
with cte as( select date_format(day, '%Y%m') as month, t.account_id, a.max_income, sum(amount) as income from transactions t left join accounts a on t.account_id = a.account_id where type = 'Creditor' group by 1,2 having sum(amount) > a.max_income ) select distinct c1.account_id from cte c1 left join cte c2 on c1.account_id = c2.account_id where period_diff(c1.month, c2.month) = 1
with cte as( select t.account_id, month(day) as month, day, sum(amount) as sme, max_income from Transactions t left join Accounts a on t.account_id = a.account_id where type="Creditor" group by t.account_id, substring(day,1,8) having sum(amount) > a.max_income ) select distinct account_id from cte where (account_id, month-1) in (select account_id, month(day) from cte ) or (account_id, month+1) in (select account_id, month(day) from cte )
with cte as( select t.account_id, sum(amount)income,month(day)d,max_income from transactions t join accounts a using(account_id) where type='creditor' group by 1,3 having income>max_income) select a.account_id from cte a join cte b using(account_id) where a.d=b.d+1 or a.d=b.d-1 group by 1 order by 1
with cte as( select t.account_id,sum(amount)as amount,date_format(day,"%Y%m") as month,max_income from Transactions t left join Accounts using(account_id) where type="Creditor" group by account_id,date_format(day,"%Y%m") HAVING SUM(amount)>Accounts.max_income ) SELECT t1.account_id FROM cte t1, cte t2 WHERE t1.account_id=t2.account_id AND PERIOD_DIFF(t1.month, t2.month)=1 GROUP BY t1.account_id ORDER BY t1.account_id
with cte as(select T.account_id, month(day) AS month, year(day)as year, max_income FROM Transactions T JOIN Accounts A ON T.account_id = A.account_id WHERE type = 'Creditor' GROUP BY account_id, MONTH(day) HAVING SUM(amount) > A.max_income) select distinct t1.account_id from cte t1, cte t2 where t1.account_id=t2.account_id and (t1.month-t2.month=1 and t1.year=t2.year or t1.month=12 and t2.month=1 and t1.year-t2.year=-1 or t1.month=12 and t2.month=1 and t1.year-t2.year=1)
with cte as(select T.account_id, month(day) AS month, year(day)as year, max_income FROM Transactions T JOIN Accounts A ON T.account_id = A.account_id WHERE type = 'Creditor' GROUP BY account_id, MONTH(day) HAVING SUM(amount) > A.max_income) select distinct t1.account_id from cte t1, cte t2 where t1.account_id=t2.account_id and t1.month-t2.month=1 and t1.year=t2.year
with cte as(select account_id, month(day) cur_month, sum(amount) as total_income from Transactions where type = 'Creditor' group by account_id, month(day)), cte2 as(select c.account_id, cur_month, total_income, lead(cur_month) over(partition by account_id order by cur_month) as next_month, max_income from cte c join Accounts a on c.account_id = a.account_id where total_income > max_income) select distinct account_id from cte2 where cur_month + 1 = next_month
with cte1 as ( select a.account_id, (case when sum(amount) > a.max_income then 1 else 0 end) as flag_val, month(day) as created_month from Transactions t join Accounts a on t.account_id = a.account_id where type = "Creditor" group by account_id, month(day) order by account_id ) select distinct c1.account_id from cte1 c1, cte1 c2 where c1.account_id = c2.account_id and c2.created_month-c1.created_month =1 and c1.flag_val = 1 and c2.flag_val = 1
with cte1 as ( select account_id, extract(year_month from day) as y_m, sum(amount) as total_credit, lead(sum(amount)) over(partition by account_id order by extract(year_month from day)) as next_credit, lead(extract(year_month from day)) over(partition by account_id) as next_y_m from transactions where type="Creditor" group by account_id, extract(year_month from day) ) select distinct account_id from cte1 inner join accounts using(account_id) where total_credit>max_income and next_credit>max_income and next_y_m-y_m=1
with cte1 as ( select account_id, extract(year_month from day) month, sum(amount) total from transactions where type='Creditor' group by account_id, extract(year_month from day) ), cte2 as ( select c1.account_id, c1.total, c2.total next_total from cte1 c1 join cte1 c2 on c1.account_id=c2.account_id and period_diff(c2.month, c1.month)=1 ) select distinct account_id from accounts natural join cte2 where total > max_income and next_total > max_income order by 1
with cte1 as ( select distinct z.transaction_id, z.account_id, m, sum(amount) over (partition by account_id, m) as income from ( select transaction_id, account_id, amount, month(day) as m from Transactions where type='Creditor') z order by account_id, m ) select distinct account_id from ( select transaction_id, account_id, m, abs(m-lead(m) over (partition by account_id order by m)) as diff from ( select transaction_id, c.account_id, m, income, max_income from cte1 c join Accounts A on c.account_id=A.account_id where income>max_income) b)v where diff=1 order by transaction_id ASC
with cte1 as ( select t.account_id, sum(amount) as month_amount, (year(day)*12+month(day)) as month, max_income from Transactions t join Accounts a on t.account_id=a.account_id where type='Creditor' group by t.account_id, left(day,7) having sum(amount)>max_income order by t.account_id, left(day,7) ), cte2 as ( select c11.account_id, (case when c11.month is null then 0 else 1 end) as month from cte1 c11 join cte1 c12 on c11.account_id=c12.account_id where c12.month-c11.month=1 ), cte3 as ( select distinct account_id from cte2 where month<>0 ) select * from cte3
with cte1 as (Select t.account_id, SUM(amount) as amount, YEAR(day)*12+MONTH(day) as month From Transactions t where type='Creditor' Group by account_id, YEAR(day)*12+MONTH(day)), cte2 as (Select cte1.account_id, cte1.month From cte1 INNER JOIN Accounts a On cte1.account_id=a.account_id and cte1.amount>a.max_income) Select distinct c1.account_id From cte2 c1 CROSS JOIN cte2 c2 On c1.account_id=c2.account_id and c1.month-c2.month=1
with cte1 as (select account_id, extract(year_month from day) as month, sum(amount) as total_amount, max_income from transactions t left join accounts a using(account_id) where type = 'Creditor' group by 1,2 having (total_amount- max_income) > 0) select distinct t1.account_id from cte1 t1, cte1 t2 where t1.account_id = t2.account_id and period_diff(t1.month, t2.month) = 1 order by 1
with cte1 as (select t.account_id, month(t.day) as month, IF(sum(t.amount)>a.max_income,1,0) as ifst from transactions t left join accounts a on t.account_id = a.account_id where t.type = "Creditor" group by t.account_id, month(t.day) order by t.account_id, month) select distinct(c1.account_id) from cte1 c1 inner join cte1 c2 on c1.account_id = c2.account_id and c1.month=c2.month+1 and c1.ifst = 1 and c2.ifst = 1
with cte1 as( select t.account_id, month(day) 'mth', case when sum(amount) - max_income > 0 then 1 else 0 end 'sign' from transactions t join accounts a on t.account_id = a.account_id where type = 'Creditor' group by t.account_id, mth ) select distinct a.account_id from cte1 a, cte1 b where a.account_id = b.account_id and b.mth = a.mth+1 and a.sign = 1 and b.sign = 1
with cteI as ( select account_id, amount, DATE_FORMAT(day, "%Y-%m") as d, DATE_FORMAT(date_add(day, interval 1 month), "%Y-%m") as dnext from Transactions where type="Creditor" ), cteMI as ( select cteI.account_id, sum(amount)-max_income as overage, d, dnext from cteI, Accounts where cteI.account_id = Accounts.account_id group by account_id, d ), cteMI2 as ( select a.*, ifnull(b.d, "0") as dd from cteMI a left join cteMI b on a.dnext=b.d and a.account_id=b.account_id where a.overage > 0 and b.overage > 0 ) select distinct account_id from cteMI2 order by account_id
with cte_trans as ( select a.account_id, sum(amount) total_amount, month(Day) month from Transactions t join Accounts a on t.account_id = a.account_id where t.type = 'Creditor' group by a.account_id, month(day), a.max_income having sum(amount)>a.max_income), cte_rank as ( select * , DENSE_RANK() over (partition by account_id order by month asc) drk from cte_trans ),cte_grp as ( select account_id, total_amount, month - drk grp from cte_rank) select distinct account_id from cte_grp group by grp, account_id having count(account_id) >=2
with deposits as ( SELECT month(day) as month , t.account_id , max_income , sum(amount) as income FROM Transactions t JOIN Accounts a on a.account_id = t.account_id WHERE type ='Creditor' GROUP BY month(day), t.account_id ) select d1.account_id FROM deposits d1, deposits d2 where d1.account_id = d2.account_id and d2.month = d1.month +1 and d1.income > d1.max_income and d2.income > d2.max_income Group by d1.account_id
with dt as (select a.account_id, amount, max_income, month from ( select account_id, date_format(day, '%Y%m') as month, sum(amount) as amount from Transactions where type = 'Creditor' group by account_id, left(day, 7) ) a left join Accounts on a.account_id = Accounts.account_id where amount>max_income) select distinct d1.account_id from dt d1 join dt d2 on d1.account_id = d2.account_id and d1.month = d2.month-1
with etc as( select account_id, month, case when total_income>max_income then 1 else 0 end as suspicious from (select tr.account_id, month(tr.day) month, sum(tr.amount) total_income, ac.max_income from Transactions tr join Accounts ac on ac.account_id=tr.account_id where tr.type='Creditor' group by tr.account_id, month) as t1 having suspicious=1 order by account_id, month ), t2 as(select *, lag(month,1) over(partition by account_id order by month) as lag_month_1 from etc) select distinct account_id from t2 where month-lag_month_1=1
with exe as (select a.account_id , year(a.day) as yy ,month(a.day) as mm from transactions a where a.type = "Creditor" group by a.account_id , year(a.day) , month(a.day) having sum(a.amount) > (select max_income from accounts where account_id = a.account_id)) select distinct a.account_id from exe a, exe b where a.account_id = b.account_id and ((a.yy = b.yy and b.mm-a.mm = 1) or (a.mm=12 and b.mm=1 and a.yy = b.yy-1)) order by a.account_id
with final as ( with consolidated as ( with cte as ( Select a.max_income,t.transaction_id,t.account_id,t.type,t.amount,left(t.day,10) as day from Accounts a inner join Transactions t on a.account_id = t.account_id where type = "Creditor" ) Select max_income,account_id, sum(amount) as 'total_credited',day from cte group by account_id,left(day,7) order by account_id asc , day asc ) Select account_id,day from consolidated where max_income < total_credited ) Select f1.account_id from final f1 inner join final f2 on f1.account_id = f2.account_id and month(f2.day) - month(f1.day) = 1 group by f1.account_id having count(f1.account_id) >= 1
with groups_ as ( select t.account_id, t.month, t.income, a.max_income, if(t.income > a.max_income, 'Y', 'N') is_max from ( select account_id, SUBSTRING(day, 1,7) month, sum(if(type = 'Creditor', amount,0)) as income from transactions t group by 1, 2 ) t inner join accounts a on(t.account_id = a.account_id ) ) select distinct account_id from ( select *, cast(substring(month, 6,2) as UNSIGNED) - row_number() over(partition by account_id order by substring(month, 6,2)) as grp from groups_ where is_max = 'Y' ) a group by account_id, grp having count(1) > 1 order by 1
with income as ( select a.account_id, (year(day)*12+month(day)) as yearmonth, sum(case when type = 'Creditor' then amount else 0 end) as total_income, max_income from Accounts as a join Transactions as t using (account_id) group by 1,2 order by 1,2 ) select distinct p1.account_id from income as p1 join income as p2 on p1.yearmonth = p2.yearmonth -1 and p1.account_id=p2.account_id where p1.total_income > p1.max_income and p2.total_income > p2.max_income
with income as ( select account_id, amount, month(day) m from Transactions where type = 'Creditor' ), monthly as ( select account_id, sum(amount) ma, m from income group by account_id, m ), overm as ( select monthly.* from monthly left join Accounts on monthly.account_id = Accounts.account_id where ma > max_income ), consec as ( select om1.* from overm om1, overm om2 where om1.account_id = om2.account_id and om1.m = om2.m + 1 ) select distinct account_id from consec
with income as (select account_id, concat(left(day, 7), '-01') as month, sum(case when type = 'Creditor' then amount else 0 end) as total_income, max_income from transactions join accounts using(account_id) group by 1, left(day,7) order by 1, 2) select distinct i1.account_id from income i1 join income i2 on i1.account_id = i2.account_id and timestampdiff(month, i1.month, i2.month) = 1 where i1.total_income > i1.max_income and i2.total_income > i2.max_income
with income as (select t.account_id, month(day) as month, case when sum(t.amount)>a.max_income then 1 else 0 end as exceed from transactions t join accounts a on t.account_id=a.account_id where type='Creditor' group by month(day),t.account_id) select distinct i1.account_id from income i1, income i2 where i1.account_id=i2.account_id and i2.month-i1.month =1 and i1.exceed=1 and i2.exceed=1 order by i1.account_id
with incomes as (select account_id, month(day) as month, sum(if(type='Creditor', amount, 0)) as income from transactions group by account_id, month(day)) select distinct i1.account_id from incomes i1, incomes i2, accounts a where i1.account_id = i2.account_id and a.account_id = i1.account_id and i1.month + 1 = i2.month and i1.income > a.max_income and i2.income > a.max_income order by i1.account_id
with incometable as( SELECT a.account_id, a.max_income, date_format(t.day, "%Y%m") as month, SUM(CASE WHEN type='Creditor' THEN amount ELSE 0 END) AS totalincome FROM Accounts as a LEFT JOIN Transactions as t using (account_id) GROUP BY a.account_id, date_format(t.day, "%Y-%m") ) SELECT DISTINCT t1.account_id FROM incometable as t1 JOIN incometable as t2 using (account_id) WHERE PERIOD_DIFF(t1.month, t2.month)=1 and t1.max_income<t1.totalincome and t2.max_income<t2.totalincome ORDER BY t1.account_id
with incometable as( SELECT a.account_id, a.max_income, year(t.day)*12+month(t.day) as month, SUM(amount) AS totalincome FROM Accounts as a LEFT JOIN Transactions as t using (account_id) WHERE type='Creditor' GROUP BY a.account_id, date_format(t.day, "%Y-%m") ) SELECT DISTINCT t1.account_id FROM incometable as t1 JOIN incometable as t2 ON t1.account_id=t2.account_id and t2.month-t1.month between 0 and 1 WHERE t1.max_income<t1.totalincome and t2.max_income<t2.totalincome GROUP BY t1.account_id, t1.month HAVING count(t2.month)>=2 ORDER BY t1.account_id
with incometable as( select account_id, year(day)*12+month(day)-1 as monthid, sum(amount) as income from Transactions where type = 'Creditor' group by account_id, monthid), badincome as( select Accounts.account_id as account_id, monthid from Accounts join incometable on Accounts.account_id = incometable.account_id where incometable.income > Accounts.max_income) select distinct a.account_id from badincome a join badincome b on a.account_id = b.account_id and a.monthid +1 = b.monthid
with incometable as( select t.account_id, year(day)*12+month(day) as month, sum(case when type='Creditor' then amount end) as income, max_income from accounts as a join transactions as t on a.account_id=t.account_id group by t.account_id, date_format(day, "%Y-%M") order by t.account_id, month ) select distinct i1.account_id from incometable as i1 join incometable as i2 on i1.account_id=i2.account_id and (i2.month-i1.month=1 or i2.month-i1.month=-1) where i1.income>i1.max_income and i2.income>i2.max_income
with incometable as( select t.account_id, year(day)*12+month(day) as month, sum(case when type='Creditor' then amount end) as income, max_income from accounts as a join transactions as t on a.account_id=t.account_id group by t.account_id, date_format(day, "%Y-%M") order by t.account_id, month ) select distinct i1.account_id from incometable as i1 join incometable as i2 on i1.account_id=i2.account_id and i2.month-i1.month between 0 and 1 where i1.income>i1.max_income and i2.income>i2.max_income group by i1.account_id, i1.month having COUNT(i2.month)>=2 order by i1.account_id
with incometable as( select t.account_id, year(day)*12+month(day) as month, sum(case when type='Creditor' then amount end) as income, max_income from accounts as a join transactions as t on a.account_id=t.account_id group by t.account_id, date_format(day, "%Y-%M") order by t.account_id, month ) select distinct i1.account_id from incometable as i1 join incometable as i2 on i1.account_id=i2.account_id and i2.month-i1.month=1 where i1.income>i1.max_income and i2.income>i2.max_income
with incometotal as (select account_id, month(day) as month, sum(amount) as income_total, type from Transactions WHERE type = 'Creditor' group by 1, 2 order by 1,2), compared as (select max_income, i.* from Accounts a left join incometotal i on a.account_id = i.account_id where income_total > max_income) select distinct c1.account_id from compared c1 join compared c2 on c1.account_id = c2.account_id and c1.month = c2.month - 1 order by 1
with monthly as ( select account_id, date_format(day,"%m-%Y") as Month, sum(case when type ='Creditor' then amount else 0 end )as deposits from Transactions group by 1,2) ,flagged_months as ( select a.account_id, Month, case when deposits > max_income then 1 else 0 end flagged from Accounts a join monthly m on a.account_id = m.account_id where deposits != 0) ,cons_flagged as ( select account_id, Month,substring(Month,1,2) as mm, flagged, lead(flagged) over ( partition by account_id order by Month) as next_flagged, lead(Month) over ( partition by account_id order by Month) as next_month from flagged_months) select distinct account_id from cons_flagged where flagged = 1 and next_flagged =1 and abs(Month - next_month ) = 1 order by 1
with monthly_income as ( SELECT b.account_id,DATE_FORMAT(b.day,"%y%m") AS month,a.max_income FROM Accounts as a JOIN Transactions as b ON a.account_id=b.account_id GROUP BY b.account_id,month HAVING SUM((type='Creditor')*amount)>a.max_income ) SELECT DISTINCT a.account_id FROM monthly_income as a JOIN monthly_income as b ON a.account_id=b.account_id AND PERIOD_DIFF(a.month,b.month)=1 ORDER BY account_id
with monthly_income as ( SELECT b.account_id,DATE_FORMAT(b.day,"%y%m") AS month,a.max_income FROM Accounts as a JOIN Transactions as b ON a.account_id=b.account_id where type='Creditor' GROUP BY b.account_id,month HAVING SUM(amount)>a.max_income ) SELECT DISTINCT a.account_id FROM monthly_income as a JOIN monthly_income as b ON a.account_id=b.account_id AND PERIOD_DIFF(a.month,b.month)=1 ORDER BY account_id
with monthly_total as ( select account_id, month(day) as month, sum(amount) as total from Transactions where type='Creditor' group by account_id, month(day) order by account_id, month(day) ), check_flag as ( select a.*, case when a.total>b.max_income then 1 else 0 end check_flag from monthly_total a left join Accounts b on a.account_id=b.account_id ) select distinct (account_id) from (select *, lead (check_flag,1) over (partition by account_id order by month) as next_flag, lead(month,1) over (partition by account_id order by month) as next_month from check_flag)a where check_flag=1 and next_flag=1 and next_month-month=1
with monthly_transactions as ( SELECT account_id, DATE_ADD(date(day), INTERVAL 1- EXTRACT(DAY FROM date(day)) DAY) AS MONTH_BEGINING_DATE, SUM(amount) as TOTAL_DEPOSITS FROM transactions WHERE type ='Creditor' GROUP BY account_id, DATE_ADD(date(day), INTERVAL 1- EXTRACT(DAY FROM date(day)) DAY) ), suspcious_transactions as ( SELECT m.account_id as account_id, MONTH_BEGINING_DATE FROM monthly_transactions m JOIN accounts a ON m.account_id = a.account_id AND m.TOTAL_DEPOSITS > a.max_income ) SELECT DISTINCT s1.ACCOUNT_ID AS ACCOUNT_ID FROM suspcious_transactions s1 JOIN suspcious_transactions s2 ON s1.account_id = s2.account_id AND DATE_ADD(s1.MONTH_BEGINING_DATE , INTERVAL '1' MONTH ) = s2.MONTH_BEGINING_DATE
with recursive cte_months as ( select last_day(date(min(day))) as eom from Transactions union all select date_add(eom, interval 1 month) as eom from cte_months where eom < ( select date(max(day)) from Transactions ) ), cte_agg as ( select a.account_id, m.eom, sum( case when t.type = 'Creditor' then t.amount else 0 end) > avg(a.max_income) as is_sus_acct_mth from Accounts as a cross join cte_months as m left join Transactions as t on a.account_id = t.account_id and month(t.day) = month(m.eom) and year(t.day) = year(m.eom) group by 1, 2 ), cte_window as ( select account_id, is_sus_acct_mth + coalesce(lead(is_sus_acct_mth, 1) over ( partition by account_id order by eom ), 0) = 2 as is_sus_account from cte_agg ), cte_final as ( select distinct account_id from cte_window where is_sus_account = 1 order by 1 ) select * from cte_final
with search as( select accounts.account_id, MONTH(DAY) as MM, case when (max_income < sum(amount)) then 'true' else 'false' end as fraud from transactions,accounts where transactions.account_id = accounts.account_id and type = 'Creditor' group by 1,2 ) select distinct s1.account_id from search s1, search s2 where s1.account_id = s2.account_id AND s1.MM+1 = s2.MM and s1.fraud = 'true' and s2.fraud = 'true'
with suspicious as ( select t.transaction_id, t.account_id, t.type, month(t.day) month,sum(t.amount) total_income, a.max_income from Transactions t join Accounts a on t.account_id = a.account_id where t.type = 'Creditor' group by t.account_id, month(t.day) having sum(t.amount) > a.max_income )select distinct s1.account_id from suspicious s1 join suspicious s2 on s1.account_id = s2.account_id where s1.month-s2.month=1 order by s1.transaction_id
with t as ( select a.account_id, year(day) as year, month(day) as month, sum(t.amount) as total_income, a.max_income from accounts a left join transactions t on t.account_id = a.account_id where t.type="Creditor" group by a.account_id, year(day), month(day) having sum(t.amount)> a.max_income) select distinct t1.account_id from t t1 left join t t2 on t1.account_id = t2.account_id and t1.month+1=t2.month where t2.month is not null
with t as ( select account_id, date_format(day,'%Y%m') as date, sum(amount) as total from transactions where type = 'Creditor' group by 1, 2) select distinct t1.account_id from t t1 join t t2 on t1.account_id = t2.account_id and period_diff(t1.date, t2.date) = 1 join accounts a on a.account_id = t1.account_id where t1.total>a.max_income and t2.total>a.max_income
with t as ( select account_id, month(day) month, sum(amount) total from transactions where type ='Creditor' group by 1,2) select distinct a.account_id from t a join t b on a.month + 1 = b.month join accounts c on a.account_id = c.account_id and b.account_id = c.account_id where a.total > max_income and b.total > max_income
with t as ( select account_id, transaction_id, sum(amount) as month_income, month(day) as month from transactions where type = 'Creditor' group by 1,4 ) select distinct ac.account_id from accounts as ac left join t as t1 on ac.account_id = t1.account_id left join t as t2 on t1.account_id = t2.account_id and t1.month +1 = t2.month where t1.month_income > ac.max_income and t2.month_income > ac.max_income order by t1.transaction_id asc
with t as ( with t as ( select sum(amount) tot, year(day) * 12 + month(day) d, account_id from Transactions where type = 'Creditor' group by account_id, substring(day, 1, 7) order by account_id, d ) select t.account_id, t.d from t join accounts a on t.account_id = a.account_id and t.tot > a.max_income ) select distinct a.account_id as account_id from t as a join t as b on a.account_id = b.account_id and b.d = a.d + 1
with t as ( with t as ( select sum(amount) tot, year(day) * 12 + month(day) d, account_id from Transactions where type = 'Creditor' group by account_id, year(day) * 12 + month(day) order by account_id, d ) select t.account_id, t.d from t join accounts a on t.account_id = a.account_id and t.tot > a.max_income ) select distinct a.account_id as account_id from t as a join t as b on a.account_id = b.account_id and b.d = a.d + 1
with t as (select account_id, date(day) as date_new, sum(case when type = 'Creditor' then amount else 0 end) as total from transactions group by account_id, month(date_new) order by 1, 2), c as ( select t1.account_id, t1.date_new as date_1, t2.date_new as date_2, t1.total as total_1, t2.total as total_2 from t as t1 join t as t2 on t1.account_id = t2.account_id and date_format(date_add(t1.date_new, interval 1 month), '%Y-%m') = date_format(t2.date_new, '%Y-%m')), c1 as ( select c.account_id from c left join accounts as a on c.account_id = a.account_id where total_1>max_income and total_2>max_income) select distinct account_id from c1
with t as (select account_id, date_format(day, '%m') as month, sum(amount) as total from Transactions where type = 'Creditor' group by 1, 2) select distinct t1.account_id from Accounts a, t t1, t t2 where a.account_id = t1.account_id and a.account_id = t2.account_id and t1.month + 1 = t2.month and t1.total > max_income and t2.total > max_income
with t as (select account_id, extract(year_month from day) as month, sum(amount) as total_income from Transactions where type='Creditor' group by account_id, month) select distinct t1.account_id from t t1, t t2, accounts a where t1.account_id=t2.account_id and t1.account_id=a.account_id and (t1.month - t2.month)=1 and t1.total_income > max_income and t2.total_income > max_income group by t1.account_id order by t1.account_id
with t as (select account_id, min(day) day from Transactions join Accounts using(account_id) where type='Creditor' group by account_id, date_format(day, '%Y-%m') having sum(amount) > max(max_income)) select distinct t1.account_id from t as t1 join t as t2 on t1.account_id=t2.account_id and case when month(t1.day)!=12 then month(t1.day+ interval 1 month)=month(t2.day) and year(t1.day)=year(t2.day) else month(t1.day+ interval 1 month)=month(t2.day) and year(t1.day)+1=year(t2.day) end
with t as (select account_id, min(day) day from Transactions join Accounts using(account_id) where type='Creditor' group by account_id, date_format(day, '%Y-%m') having sum(amount) > max(max_income)) select distinct t1.account_id from t as t1 join t as t2 on t1.account_id=t2.account_id and date_format(t1.day+ interval 1 month, '%Y-%m')=date_format(t2.day, '%Y-%m')
with t as (select account_id, min(day) day from Transactions join Accounts using(account_id) where type='Creditor' group by account_id, date_format(day, '%Y-%m') having sum(amount) > max(max_income)) select distinct t1.account_id from t as t1 join t as t2 on t1.account_id=t2.account_id and date_format(t1.day+interval 1 month, '%Y-%m')=date_format(t2.day, '%Y-%m') order by t1.account_id
with t as (select account_id, sum(if(type='Creditor',amount,0)) income, month(day) month from transactions group by account_id, month(day)) select distinct account_id from (select t.account_id, income, lag(income) over (partition by t.account_id order by month) l1income, max_income, month, lag(month) over (partition by t.account_id order by month) lmonth from t join accounts a on t.account_id=a.account_id) m where l1income>max_income and income>max_income and abs(month-lmonth)=1
with t as (select t.account_id,year(day)*12 + month(day) as month,max_income from transactions as t inner join accounts as a on t.account_id = a.account_id where type = 'Creditor' group by 1,2,3 having max_income< sum( amount ) ) select distinct a.account_id from t as a inner join t as b on a.account_id = b.account_id and abs(a.month - b.month) = 1
with t as (select t.account_id,year(day)*12 + month(day) as month,max_income,sum( amount )as amount from transactions as t inner join accounts as a on t.account_id = a.account_id where type = 'Creditor' group by 1,2,3 having max_income< sum( amount ) ) select distinct a.account_id from t as a inner join t as b on a.account_id = b.account_id and abs(a.month - b.month) = 1
with t1 as ( select account_id, month(day) as mm, sum(amount) as total from transactions where type = 'Creditor' group by 1, 2), t2 as ( select t1.account_id, t1.mm, t1.total, lead(mm) over(partition by t1.account_id order by t1.mm) as next_mm, lead(total) over(partition by t1.account_id order by t1.mm) as next_total, b.max_income from t1 join accounts b on t1.account_id=b.account_id) select account_id from t2 where total>max_income and next_total>max_income and next_mm-mm=1 group by 1
with t1 as ( select distinct t.account_id, t.acct_month from ( select account_id, month(day) as acct_month, sum(amount) as monthly_income from transactions where type = 'Creditor' group by account_id, acct_month ) t join accounts a on t.account_id = a.account_id where t.monthly_income > a.max_income ), t2 as ( select account_id, acct_month, lag(acct_month) over (partition by account_id order by acct_month) as prev_month from t1 ) select distinct account_id from t2 where acct_month - prev_month = 1 order by account_id
with t1 as( select account_id, month(day) as month, sum(case when type = 'Creditor' then amount else 0 end) as total_income, max_income from transactions join accounts using(account_id) group by 1, 2 order by 1, 2 ) select distinct a.account_id from t1 a join t1 b on a.account_id = b.account_id and a.month+1=b.month where a.total_income > a.max_income and b.total_income > b.max_income
with tb as (select account_id, amount, month(day) as dt from transactions where type = 'Creditor'), tb2 as (select account_id, sum(amount) as sm, dt from tb group by account_id, dt) select distinct a.account_id from tb2 a, tb2 b, accounts c where a.dt - b.dt = 1 and a.account_id = b.account_id and a.account_id = c.account_id and b.account_id = c.account_id and a.sm > c.max_income and b.sm > c.max_income
with tbSum as ( select account_id, year(day) as year_, month(day) as month_, sum(amount) as total_income from transactions where type = "Creditor" group by account_id, year(day), month(day) ), tbExceed as ( select tbSum.account_id, tbSum.year_, tbSum.month_ from tbSum join accounts as a on tbSum.account_id = a.account_id where tbSum.total_income > a.max_income ) select distinct tbE1.account_id from tbExceed as tbE1 join tbExceed as tbE2 on tbE1.account_id = tbE2.account_id where (tbE1.year_ = tbE2.year_ and tbE1.month_ = tbE2.month_+1) or (tbE1.year_ = tbE2.year_-1 and tbE1.month_ = 12 and tbE2.month_= 12)
with temp as ( select account_id, amount, month(day) as months from transactions where type='Creditor' order by 1,3), temp1 as (select account_id, sum(amount) as sums, months from temp group by account_id, months order by account_id), temp2 as( select t.*,a.max_income, case when sums>a.max_income then 1 else 0 end as bin from temp1 t left join accounts a on t.account_id=a.account_id) select distinct a.account_id from temp2 a left join temp2 b on a.account_id=b.account_id where a.months=b.months-1 and a.bin=1 and b.bin=1
with temp as ( select distinct a.account_id, a.max_income, (year(b.day)*12+month(b.day)) as month, sum(b.amount) as total_income from accounts a join transactions b on a.account_id = b.account_id where b.type = 'Creditor' group by a.account_id, a.max_income, month having total_income > max_income ) select distinct temp1.account_id from temp temp1 join temp temp2 on temp1.month + 1 = temp2.month and temp1.account_id = temp2.account_id
with temp as ( select t.account_id, date_format(day, '%Y%m') as date, sum(amount) as 'income', accounts.max_income from transactions t left join accounts on accounts.account_id = t.account_id where t.type = 'Creditor' group by t.account_id, date_format(day, '%Y%m') having sum(amount) > accounts.max_income ) select t1.account_id from temp t1, temp t2 where t1.account_id = t2.account_id and period_diff(t1.date, t2.date) = 1 group by t1.account_id order by t1.account_id
with temp as ( select t.account_id, date_format(day, '%Y%m') as date, sum(amount) as income, a.max_income from transactions t left join accounts a using(account_id) where t.type='Creditor' group by t.account_id, date_format(t.day, '%Y%m') having sum(t.amount) > a.max_income ) select t1.account_id from temp t1, temp t2 where t1.account_id = t2.account_id and period_diff(t1.date, t2.date) = 1 group by t1.account_id
with temp as ( select t.account_id, date_format(day,'%Y%m') as month, sum(t.amount) as tot, a.max_income from transactions t left join accounts a on t.account_id = a.account_id where t.type = 'Creditor' group by 1,2 having sum(t.amount) > a.max_income order by 1 ) SELECT t1.account_id FROM temp t1, temp t2 WHERE t1.account_id=t2.account_id AND PERIOD_DIFF(t1.month, t2.month)=1 GROUP BY t1.account_id ORDER BY t1.account_id
with temp as ( select t.account_id, year(day)*12+month(day) as 'month', (case when sum(amount) > max_income then 1 else 0 end) as 'exceed' from Transactions t join Accounts a on t.account_id = a.account_id where type = 'Creditor' group by 1,2 ) select distinct a.account_id from temp a join temp b on a.account_id = b.account_id and a.exceed = 1 and b.exceed = 1 and b.month - a.month = 1
with temp as ( select tr.account_id, date_format(tr.day,"%Y%m") as month, if(sum(tr.amount) > ac.max_income, 1, 0) as flag from transactions tr join accounts ac on tr.account_id = ac.account_id where tr.type = 'Creditor' group by 1,2 ) select distinct t1.account_id from temp t1 join temp t2 on t1.account_id = t2.account_id and t1.month- t2.month =1 where t1.flag =1 and t2.flag =1
with temp as (select a.account_id, YEAR(day) as year, MONTH(day) as month, sum( case when type = 'Creditor' then amount else 0 end ) as total_income, max_income from Accounts as a join Transactions as t on a.account_id = t.account_id group by a.account_id, LEFT(day, 7) having total_income > max_income) select distinct t.account_id from temp as t join temp as u on t.account_id = u.account_id where t.year = u.year and t.month + 1 = u.month order by account_id
with temp as (select a.account_id, date_format(a.day,"%Y%m") as date, sum(a.amount) as total_amount, b.max_income from transactions a join accounts b on a.account_id=b.account_id where a.type='Creditor' group by 1,2 having sum(a.amount)>b.max_income) SELECT t1.account_id FROM temp t1, temp t2 WHERE t1.account_id=t2.account_id AND PERIOD_DIFF(t1.date, t2.date)=1 GROUP BY t1.account_id ORDER BY t1.account_id
with temp as (select account_id, date_format(day, '%Y-%m-01') as month, sum(amount) as deposit from transactions where type = 'Creditor' group by 1, 2) select distinct eligible_account as account_id from (select case when t1.deposit > accounts.max_income and t2.deposit > accounts.max_income then t1.account_id else null end as eligible_account from temp t1 inner join temp t2 on t1.account_id = t2.account_id and TIMESTAMPDIFF(MONTH, t1.month, t2.month) = 1 inner join accounts on t1.account_id = accounts.account_id) p where eligible_account is not null
with temp as (select account_id, date_format(day, '%m') as month, sum(amount) as income from transactions where type='Creditor' group by account_id, month) select distinct t.account_id from temp t left join accounts a using (account_id) left join temp t2 on t.account_id = t2.account_id and t.month=t2.month-1 where t.income > a.max_income and t2.income > a.max_income
with temp as (select account_id, left(day, 7) as month, sum(amount) as s from Transactions where type = 'Creditor' group by account_id, left(day, 7)) select distinct t1.account_id from temp t1 join temp t2 on t1.account_id=t2.account_id and (right(t1.month,2)+1= right(t2.month,2) or (right(t1.month,2)=12 and right(t2.month,2) = '01' and left(t1.month,4)+1=left(t2.month,4))) join accounts a on a.account_id = t1.account_id where t1.s>max_income and t2.s>max_income
with temp as (select account_id, month(day) as months, sum(amount) as total from Transactions where type='Creditor' group by account_id, months) select distinct a.account_id from Accounts a join temp t1 on t1.account_id=a.account_id and t1.total > a.max_income join temp t2 on t2.account_id=a.account_id and t1.months=t2.months-1 and t2.total > a.max_income order by a.account_id
with temp as (select t.account_id , left(day, 7) as month , sum(case when type = 'creditor' then amount else 0 end) - max_income as monthly from transactions t join accounts a on t.account_id = a.account_id group by 1, 2) select distinct t1.account_id from temp t1, temp t2 where t1.account_id = t2.account_id and t1.monthly > 0 and t2.monthly >0 and right(t1.month,2) = right(t2.month,2) + 1
with temp as (select t.account_id, date_format(day, '%Y-%m') y_m, month(day) as m, sum(amount) tot_cred, max_income from transactions t join accounts a on t.account_id=a.account_id where type='Creditor' group by 1,2) select distinct t1.account_id from temp t1 join temp t2 on t1.account_id=t2.account_id and t1.m = t2.m+1 where t1.tot_cred > t1.max_income and t2.tot_cred > t2.max_income
with temp as (select t.account_id, date_format(day, '%Y-%m') y_m, month(day) as m, year(day) as y, sum(amount) tot_cred, max_income from transactions t join accounts a on t.account_id=a.account_id where type='Creditor' group by 1,2) select distinct t1.account_id from temp t1 join temp t2 on t1.account_id=t2.account_id and t1.m = t2.m+1 and t1.y=t2.y where t1.tot_cred > t1.max_income and t2.tot_cred > t2.max_income
with ti as ( select month(day) month, t.account_id,a.max_income,sum(amount) total_income from Transactions t join Accounts a on t.account_id = a.account_id where type = 'Creditor' and year(day) = 2021 group by 1,2,3 having sum(amount) > max_income) select distinct a.account_id from ti a join ti b on a.account_id = b.account_id and b.month= a.month+1
with ti as ( select month(day) month, t.account_id,a.max_income,sum(amount) total_income from Transactions t join Accounts a on t.account_id = a.account_id where type = 'Creditor' group by 1,2,3 having sum(amount) > max_income) select distinct a.account_id from ti a join ti b on a.account_id = b.account_id and b.month= a.month+1
with tmp as ( SELECT account_id,LEFT(day,4) as year,month(day) as day,sum(amount) as amount FROM Transactions WHERE type='Creditor' GROUP BY 1,2,3 ORDER BY 1) SELECT distinct a.account_id FROM tmp a JOIN Accounts c ON a.account_id=c.account_id and a.amount > c.max_income JOIN tmp b ON b.account_id=c.account_id and b.amount > c.max_income and b.day=a.day+1
with tmp as ( select account_id, month(day) month, sum(amount) tot from Transactions where type = "Creditor" group by 1,2 ) select distinct account_id from( select a.account_id, a.month, lag(a.month) over(partition by a.account_id order by a.month) lg from tmp a join Accounts b on a.account_id = b.account_id and a.tot > b.max_income ) T where month-lg = 1
with tmp as (SELECT account_id, mon, sum(balance) as mbalance FROM (SELECT account_id, CASE WHEN type = 'Creditor' THEN amount else 0 end as balance, date_format(day, '%Y%m') as mon FROM transactions) X GROUP BY 1,2 order by 1,2) ,tmp2 as (SELECT a.account_id, a.mon FROM TMP A JOIN ACCOUNTS B ON A.ACCOUNT_ID = B.ACCOUNT_ID where mbalance > max_income ) select DISTINCT A.ACCOUNT_ID FROM TMP2 A, TMP2 B WHERE a.account_id = b.account_id AND PERIOD_DIFF(a.MON, B.MON) = 1 group by 1 order by 1
with tmp as (select * from( select a.account_id, month(day) as mon, max_income, sum(amount) as total_income from transactions a inner join accounts b using (account_id) where type='Creditor' group by 1,2,3) t where total_income > max_income order by 1,2 ) select distinct account_id from (select *, lag(mon,1) over (partition by account_id order by mon) as mon_lag from tmp ) t where mon-mon_lag=1
with tmp as (select a.account_id, str_to_date(date_format(day,'%Y-%m-01'),'%Y-%m-%d') as mon, case when sum(amount)>max_income then 1 else 0 end as flg from Transactions a inner join Accounts b on a.account_id=b.account_id where type='Creditor' group by account_id, mon, max_income order by 1,2 ) select distinct account_id from( select *, lag(mon,1) over (partition by account_id order by mon) as lag_mon, lag(flg,1) over (partition by account_id order by mon) as lag_flg from tmp) t where flg=1 and lag_flg=1 and date_sub(mon, interval 1 month)=lag_mon
with tmp as (select account_id, sum(amount) income, month(day) time1 from transactions where type='Creditor' group by account_id, month(day)), tmp2 as (select tmp.account_id, time1, lead(time1,1) over(partition by tmp.account_id order by time1) time2 from tmp join accounts on tmp.account_id=accounts.account_id where max_income<income) select distinct account_id from tmp2 where (time1)+1=(time2)
with tmp as (select account_id, sum(if(type = 'Creditor', amount, 0)) as amount, month(day) as month from transactions group by account_id, month) select distinct a.account_id from tmp a join tmp b on b.month - a.month = 1 and a.account_id = b.account_id join accounts c on a.account_id = c.account_id where a.amount > max_income and b.amount > max_income order by account_id
with tmp as( select transactions.account_id, sum(amount) as total, DATE_FORMAT(day,'%Y%m') as month, accounts.max_income from transactions join accounts on transactions.account_id=accounts.account_id where type = 'Creditor' group by transactions.account_id, left(day, 7) ) select distinct i1.account_id from tmp i1 join tmp i2 on i1.account_id = i2.account_id and PERIOD_DIFF(i1.month, i2.month) = 1 where i1.total > i1.max_income and i2.total > i2.max_income
with tmp as( select transactions.account_id, sum(amount) as total, concat(left(day, 7), '-01') as month, accounts.max_income from transactions join accounts on transactions.account_id=accounts.account_id where type = 'Creditor' group by transactions.account_id, date_format(day,'%Y-%m') ) select distinct i1.account_id from tmp i1 join tmp i2 on i1.account_id = i2.account_id and timestampdiff(month, i1.month, i2.month) = 1 where i1.total > i1.max_income and i2.total > i2.max_income
with tmp as( select transactions.account_id, sum(amount) as total, concat(left(day, 7), '-01') as month, accounts.max_income from transactions join accounts on transactions.account_id=accounts.account_id where type = 'Creditor' group by transactions.account_id, left(day, 7) ) select distinct i1.account_id from tmp i1 join tmp i2 on i1.account_id = i2.account_id and timestampdiff(month, i1.month, i2.month) = 1 where i1.total > i1.max_income and i2.total > i2.max_income
with tot_income as (select account_id,DATE_FORMAT(day,'%Y%m') AS date_month,sum(amount) as amt1 from transactions where type='Creditor' group by account_id,DATE_FORMAT(day,'%Y%m')) select distinct t1.account_id from tot_income t1 join tot_income t2 on t1.account_id=t1.account_id and t1.date_month+1=t2.date_month left join accounts a on t1.account_id=a.account_id and t2.account_id=a.account_id where t1.amt1 > a.max_income and t2.amt1 > a.max_income
with total_amt as ( SELECT t.account_id as account_id, MONTH(T.DAY) as mnth, sum(amount) as total_inc, a.max_income as max_income from Transactions t join accounts a on (t.account_id = a.account_id) where type = 'Creditor' group by 1,2 ) select t.account_id from total_amt t join total_amt t1 on (t.account_id = t1.account_id and t.mnth = t1.mnth +1 ) where t.total_inc > t.max_income and t1.total_inc > t1.max_income group by 1 order by 1 asc
with total_income as ( select account_id, year(day) as year1, month(day) as month1, sum(amount) as total_income from Transactions where type='Creditor' group by account_id,year1,month1), cte as ( select distinct a.account_id, t.year1, t.month1, lag(year1,1) over(partition by account_id order by year1,month1 asc) as prev_row_year, lag(month1,1) over(partition by account_id order by year1,month1 asc) as prev_row_month from Accounts a join total_income t on a.account_id=t.account_id where t.total_income > a.max_income order by 1,2,3) select distinct account_id from cte where year1=prev_row_year and month1-prev_row_month=1
with total_income as ( select t.account_id, month(day) as month from Transactions t left join Accounts a on t.account_id = a.account_id group by t.account_id, date_format(day, '%Y-%m') having sum(case type when 'Creditor' then amount else 0 end) > avg(a.max_income) ) select distinct account_id from ( select lag(month, 1) over(partition by account_id order by month asc) as prior_month, month, account_id from total_income )t where month - prior_month = 1
with totalincome as ( select t.account_id, date_format(day,'%Y%m') as ym from transactions t join accounts a on t.account_id=a.account_id group by 1,2 having sum(case when type='Creditor' then amount else 0 end)>max(max_income)) select distinct t1.account_id from totalincome t1, totalincome t2 where t2.ym-t1.ym=1 and t1.account_id = t2.account_id group by t1.account_id having count(t1.account_id)>=1 order by t1.account_id
with trans as ( select account_id, extract(year_month from day) "month", sum(amount) "amt" from transactions where type = 'creditor' group by 1, 2 ) select distinct a.account_id from accounts a join trans t1 on a.account_id = t1.account_id join trans t2 on t2.account_id = t1.account_id and t1.month = t2.month + 1 where t1.amt > a.max_income and t2.amt > a.max_income
with trans1 as ( select account_id, concat(left(day,7),'-01') as month, sum(amount) as total from transactions where type = 'Creditor' group by 1,2 ) select distinct a.account_id from trans1 a JOIN trans1 b on a.account_id = b.account_id and timestampdiff(month, a.month, b.month) = 1 JOIN accounts c ON a.account_id = c.account_id where a.total > c.max_income and b.total > c.max_income
with trns as ( select account_id, sum(amount) amt, extract(year_month from day) as yearmonth from transactions where type='Creditor' group by account_id, extract(year_month from day) ), trns2 as ( select t.account_id, amt, yearmonth, (yearmonth - dense_rank() over(partition by t.account_id order by yearmonth)) rn from trns t, accounts a where t.account_id = a.account_id and amt > max_income ), trns3 as ( select t.account_id as account_id from trns2 t group by account_id, rn having count(*)>1) select distinct account_id from trns3
with x as ( select a.* from ( select account_id, date_format(day, '%m') as month, sum(amount) as total_income from transactions where type = 'Creditor' group by 1, 2 ) a inner join accounts b using (account_id) where a.total_income > b.max_income ) select distinct account_id from ( select a.* from x a inner join x b on a.account_id = b.account_id and cast(a.month as unsigned) = cast(b.month as unsigned)-1) c order by account_id
with x as ( select t.account_id, year(t.day)*12+month(t.day) as month, sum(t.amount) - a.max_income as exceed_income from transactions t join accounts a on t.account_id = a.account_id where t.type = 'Creditor' group by t.account_id, year(t.day)*12+month(t.day) ) select distinct x1.account_id from x x1 left join x x2 on x1.account_id = x2.account_id and x1.month = x2.month - 1 where x1.exceed_income > 0 and x2.exceed_income > 0
with x as (select t.account_id, month(t.day) month from Transactions t where t.type = 'Creditor' group by t.account_id, month having sum(t.amount) > (select max_income from accounts where account_id = t.account_id) order by t.transaction_id) select distinct x1.account_id from x x1 join x x2 on x1.account_id = x2.account_id and x1.month = x2.month - 1
with zte as (select temp.account_id, month from (select account_id, year(day)*12+month(day) as month, sum(amount) as totAmount from Transactions where type = "Creditor" group by 1, 2) temp left join Accounts on temp.account_id = Accounts.account_id where max_income < totAmount) select distinct A.account_id from zte A left join zte B on A.account_id = B.account_id where A.month = B.month +1
