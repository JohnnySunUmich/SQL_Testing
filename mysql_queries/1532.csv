SELECT A.customer_name, A.customer_id, A.order_id, A.order_date FROM (SELECT c.name AS customer_name, o.customer_id, o.order_id, o.order_date, RANK() OVER(PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS rank_date FROM Customers AS c INNER JOIN Orders AS o ON c.customer_id = o.customer_id) AS A WHERE A.rank_date <= 3 ORDER BY A.customer_name ASC, A.customer_id ASC, A.order_date DESC
SELECT A.name AS customer_name, A.customer_id, B.order_id, B.order_date FROM Customers AS A JOIN Orders AS B ON A.customer_id = B.customer_id JOIN Orders AS C ON B.customer_id=C.customer_id AND B.order_date<=C.order_date GROUP BY A.name, A.customer_id, B.order_id, B.order_date HAVING COUNT(C.order_date)<=3 ORDER BY A.name ASC, A.customer_id ASC, B.order_date DESC
SELECT B.name AS customer_name, A.customer_id, A.order_id, A.order_date FROM (SELECT customer_id, order_date, order_id, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS ranking FROM Orders) A INNER JOIN Customers B ON A.customer_id = B.customer_id AND A.ranking <= 3 ORDER BY B.name, A.customer_id, A.order_date DESC
SELECT C.NAME AS CUSTOMER_NAME,C.CUSTOMER_ID, ORDER_ID, ORDER_DATE FROM (SELECT CUSTOMER_ID, ORDER_ID, ORDER_DATE, ROW_NUMBER() OVER(PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE DESC) AS RO FROM ORDERS) O JOIN CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID WHERE RO < 4 ORDER BY C.NAME, C.CUSTOMER_ID, ORDER_DATE DESC
SELECT C.name AS customer_name, A.customer_id, A.order_id, A.order_date FROM (SELECT *, DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS recentOrder FROM Orders) A JOIN Customers C ON A.customer_id = C.customer_id WHERE recentOrder BETWEEN 1 AND 3 ORDER BY C.name, A.customer_id, A.order_date DESC
SELECT C.name AS customer_name, C.customer_id, O1.order_id, O1.order_date FROM Customers C JOIN Orders O1 ON C.customer_id=O1.customer_id JOIN Orders O2 ON O1.customer_id=O2.customer_id AND O1.order_date<=O2.order_date GROUP BY 1,2,3,4 HAVING COUNT(O2.order_date) <=3 ORDER BY 1,2,4 DESC
SELECT C.name AS customer_name, C.customer_id, O1.order_id, O1.order_date FROM Customers C JOIN Orders O1 ON C.customer_id=O1.customer_id LEFT JOIN Orders O2 ON O1.customer_id=O2.customer_id AND O1.order_date<=O2.order_date GROUP BY 1,2,3,4 HAVING COUNT(O2.order_date) <=3 ORDER BY 1,2,4 DESC
SELECT C.name AS customer_name, O.customer_id, order_id, order_date FROM Customers C JOIN Orders O on C.customer_id = O.customer_id WHERE (O.customer_id, order_id) in (SELECT customer_id, order_id FROM (SELECT customer_id, order_id, rank() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM Orders) temp1 WHERE rk < 4) ORDER BY customer_name, O.customer_id, order_date DESC
SELECT C.name AS customer_name,O1.customer_id,O1.order_id,O1.order_dateFROM Orders AS O1 JOIN Customers AS C ON O1.customer_id=C.customer_id JOIN ( SELECT customer_id,IF(COUNT(order_id)>3,3,COUNT(order_id)) AS maxnum FROM Orders GROUP BY customer_id ) AS tmp ON O1.customer_id=tmp.customer_id JOIN Orders AS O2 ON O1.customer_id=O2.customer_id AND O1.order_date<=O2.Order_date GROUP BY O1.customer_id,O1.order_date HAVING COUNT(O2.Order_date)<=3 ORDER BY customer_name,customer_id,o1.order_date DESC
SELECT C.name as customer_name, T.customer_id, T.order_id, T.order_date FROM ( SELECT customer_id, order_date, order_id, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS 'most_recent' FROM Orders ) AS T LEFT JOIN Customers C ON T.customer_id = C.customer_id WHERE T.most_recent <= 3 ORDER BY C.name, T.customer_id, T.order_date DESC
SELECT Customers.name AS customer_name, Customers.customer_id, order_id, order_date FROM ( SELECT *, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS order_rank FROM Orders ) AS ranked_orders JOIN Customers ON Customers.customer_id = ranked_orders.customer_id AND ranked_orders.order_rank <= 3 ORDER BY customer_name, Customers.customer_id, ranked_orders.order_rank
SELECT Customers.name AS customer_name, sub2.customer_id, sub2.order_id, sub2.order_date FROM Customers JOIN (SELECT sub1.* FROM (SELECT ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS r, customer_id, order_id, order_date FROM Orders) sub1 WHERE sub1.r <=3) sub2 ON Customers.customer_id = sub2.customer_id ORDER BY Customers.name, sub2.customer_id, sub2.order_date DESC
SELECT Customers.name AS customer_name,rank_ordered_table.customer_id, rank_ordered_table.order_id, rank_ordered_table.order_date FROM ( SELECT customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) as rank_ordered FROM Orders ) as rank_ordered_table JOIN Customers ON rank_ordered_table.customer_id = Customers.customer_id WHERE rank_ordered <= 3 ORDER BY 1,2, 4 desc
SELECT NAME CUSTOMER_NAME, CUSTOMER_ID, ORDER_ID, ORDER_DATE FROM ( SELECT C.NAME, C.CUSTOMER_ID, O.ORDER_ID, O.ORDER_DATE, RANK() OVER (PARTITION BY O.CUSTOMER_ID ORDER BY O.ORDER_DATE DESC) ORD_RANK FROM ORDERS O, CUSTOMERS C WHERE O.CUSTOMER_ID = C.CUSTOMER_ID ) X WHERE X.ORD_RANK <= 3 ORDER BY NAME, CUSTOMER_ID ASC, ORDER_DATE DESC
SELECT a.customer_name, a.customer_id, a.order_id, a.order_date FROM (SELECT c.name as customer_name, o.customer_id, o.order_id, o.order_date, rank() over(PARTITION BY c.customer_id ORDER BY o.order_date DESC) as ranking FROM customers c JOIN orders o ON c.customer_id=o.customer_id) AS a WHERE a.ranking<=3 ORDER BY a.customer_name, a.customer_id, a.order_date DESC
SELECT a.customer_name, a.customer_id, a.order_id, a.order_date FROM (SELECT c.name as customer_name, o.customer_id, o.order_id, o.order_date, rank() over(PARTITION BY o.customer_id ORDER BY o.order_date DESC) as ranking FROM customers c JOIN orders o ON c.customer_id=o.customer_id ) AS a WHERE a.ranking<=3 ORDER BY a.customer_name, a.customer_id, a.order_date DESC
SELECT a.name AS customer_name, a.customer_id, b.order_id, b.order_date FROM Customers a JOIN Orders b ON a.customer_id = b.customer_id JOIN Orders c ON b.customer_id = c.customer_id AND b.order_date <=c.order_date GROUP BY a.name, a.customer_id, b.order_id, b.order_date HAVING COUNT(c.order_date) <= 3 ORDER BY a.name, a.customer_id, b.order_date DESC
SELECT a.name as customer_name, a.customer_id, order_id, order_date FROM ( SELECT o.customer_id, c.name, o.order_date, o.order_id, ROW_NUMBER() OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) as ranking FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id ) a WHERE ranking <= 3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
SELECT a.name as customer_name, a.customer_id,b.order_id,b.order_date FROM Customers as a JOIN Orders as b ON a.customer_id=b.customer_id JOIN Orders as c ON b.customer_id=c.customer_id and b.order_date<=c.order_date GROUP BY customer_name,a.customer_id,b.order_id,b.order_date HAVING COUNT(c.order_date) <= 3 ORDER by customer_name,customer_id,order_date DESC
SELECT a.name as customer_name,a.customer_id,b.order_id,b.order_date FROM Customers as a JOIN Orders as b ON a.customer_id=b.customer_id JOIN Orders as c ON b.customer_id=c.customer_id AND b.order_date <= c.order_date GROUP BY customer_name,a.customer_id,b.order_id,b.order_date HAVING COUNT(c.order_date)<=3 ORDER BY customer_name,customer_id,order_date DESC
SELECT a.name as customer_name,a.customer_id,b.order_id,b.order_date FROM Customers as a JOIN Orders as b ON a.customer_id=b.customer_id JOIN Orders as c ON b.customer_id=c.customer_id AND b.order_date<=c.order_date GROUP BY customer_name,a.customer_id,b.order_id,b.order_date HAVING COUNT(b.order_date)<=3 ORDER BY customer_name,customer_id,order_date DESC
SELECT a.name as customer_name,a.customer_id,b.order_id,b.order_date FROM Customers as a JOIN Orders as b ON a.customer_id=b.customer_id JOIN Orders as c ON b.customer_id=c.customer_id AND b.order_date<=c.order_date GROUP BY customer_name,a.customer_id,b.order_id,b.order_date HAVING COUNT(c.order_date)<=3 ORDER BY customer_name,customer_id,order_date DESC
SELECT a.name as customer_name,a.customer_id,b.order_id,b.order_date FROM Customers as a JOIN Orders as b ON a.customer_id=b.customer_id WHERE ( SELECT COUNT(*) FROM Orders as c WHERE b.customer_id=c.customer_id AND b.order_date<c.order_date )<=2 ORDER BY customer_name,customer_id,order_date DESC
SELECT a.name as customer_name,a.customer_id,b.order_id,b.order_date FROM Customers as a JOIN Orders as b ON a.customer_id=b.customer_id WHERE ( SELECT COUNT(order_id) FROM Orders as c WHERE b.customer_id=c.customer_id AND b.order_date<=c.order_date )<=3 ORDER BY customer_name,customer_id,order_date DESC
SELECT b.name AS customer_name,a.customer_id,a.order_id,a.order_date FROM (SELECT order_id,order_date,customer_id,ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date DESC) as row_n FROM Orders) AS a INNER JOIN Customers AS b ON a.customer_id = b.customer_id WHERE a.row_n <=3 GROUP BY b.name,a.customer_id,a.order_id ORDER BY b.name,a.customer_id,a.order_date DESC
SELECT c.NAME AS CUSTOMER_NAME, t.CUSTOMER_ID, t.ORDER_ID, t.ORDER_DATE FROM (SELECT CUSTOMER_ID, ORDER_ID, ORDER_DATE, RANK() OVER(PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE DESC) AS DATE_RANK FROM ORDERS) t JOIN CUSTOMERS c ON t.CUSTOMER_ID = c.CUSTOMER_ID WHERE t.DATE_RANK <= 3 ORDER BY c.NAME, t.CUSTOMER_ID, t.ORDER_DATE DESC
SELECT c.name AS customer_name ,o1.customer_id ,o1.order_id ,o1.order_date FROM Orders o1 INNER JOIN Orders o2 ON o1.customer_id = o2.customer_id AND o1.order_date <= o2.order_date INNER JOIN Customers C ON o1.customer_id = c.customer_id GROUP BY c.name, o1.customer_id, o1.order_id, o1.order_date HAVING COUNT(o2.order_date) <= 3 ORDER BY c.name, o1.customer_id, o1.order_date DESC
SELECT c.name AS customer_name, a.customer_id, a.order_id, a.order_date FROM (SELECT *, DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rnk FROM Orders) a JOIN Customers c ON a.customer_id = c.customer_id WHERE rnk <= 3 ORDER BY c.name, a.customer_id , a.order_date DESC
SELECT c.name AS customer_name, c.customer_id, o1.order_id, o1.order_date FROM Customers c JOIN Orders o1 ON c.customer_id = o1.customer_id JOIN Orders o2 ON o1.customer_id = o2.customer_id AND o1.order_date <= o2.order_date GROUP BY c.name, c.customer_id, o1.order_id, o1.order_date HAVING COUNT(o2.order_date) <= 3 ORDER BY c.name, c.customer_id, o1.order_date DESC
SELECT c.name AS customer_name, c.customer_id, r.order_id, r.order_date FROM ( SELECT order_id, customer_id, order_date, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS row_num FROM Orders ) r INNER JOIN Customers c ON r.customer_id = c.customer_id WHERE r.row_num <= 3 ORDER BY c.name, c.customer_id, r.order_date DESC
SELECT c.name AS customer_name, c.customer_id, t.order_id, t.order_date FROM ( SELECT *, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS r FROM Orders ) t JOIN Customers c ON t.customer_id = c.customer_id WHERE t.r <= 3 ORDER BY c.name ASC, c.customer_id ASC, t.order_date DESC
SELECT c.name AS customer_name, c.customer_id,t.order_id,t.order_date FROM customers c LEFT JOIN (SELECT *,dense_rank()over(partition by customer_id order by order_date DESC)AS rnk FROM orders)t ON t.customer_id = c.customer_id WHERE rnk<=3 order by 1,customer_id, order_date DESC
SELECT c.name AS customer_name, o.customer_id, o.order_id, o.order_date FROM ( SELECT order_id, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS order_date_rank FROM Orders) order_date_ranks JOIN Orders o ON order_date_ranks.order_id = o.order_id JOIN Customers c ON o.customer_id = c.customer_id WHERE order_date_rank <= 3 ORDER BY c.name, o.customer_id, o.order_date DESC
SELECT c.name AS customer_name, o1.customer_id, o1.order_id, o1.order_date FROM orders o1 LEFT JOIN orders o2 ON o1.customer_id = o2.customer_id AND o1.order_date < o2.order_date INNER JOIN customers c ON o1.customer_id = c.customer_id GROUP BY o1.customer_id, c.name, o1.order_id, o1.order_date HAVING COUNT(o2.order_date) <= 2 ORDER BY c.name, o1.customer_id, o1.order_date desc
SELECT c.name AS customer_name, o1.customer_id, o1.order_id, o1.order_date FROM orders o1 LEFT JOIN orders o2 ON o1.customer_id = o2.customer_id AND o1.order_date < o2.order_date INNER JOIN customers c ON o1.customer_id = c.customer_id GROUP BY o1.customer_id, o1.order_date HAVING COUNT(o2.order_date) <= 2 ORDER BY c.name, o1.customer_id, o1.order_date desc
SELECT c.name AS customer_name, o1.customer_id, o1.order_id, o1.order_date FROM orders o1 LEFT JOIN orders o2 ON o1.customer_id = o2.customer_id AND o1.order_date < o2.order_date INNER JOIN customers c ON o1.customer_id = c.customer_id GROUP BY o1.customer_id, o1.order_id HAVING COUNT(o2.order_date) <= 2 ORDER BY c.name, o1.customer_id, o1.order_date desc
SELECT c.name AS customer_name, t.customer_id, order_id, order_date FROM ( SELECT *, ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM Orders ) t JOIN Customers c ON t.customer_id = c.customer_id WHERE rk <=3 ORDER BY customer_name, customer_id, order_date DESC
SELECT c.name AS customer_name, t.customer_id, t.order_id, t.order_date FROM (SELECT customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rnk FROM Orders) t LEFT JOIN Customers c ON c.customer_id = t.customer_id WHERE rnk IN (1,2,3) ORDER BY c.name ASC, t.customer_id ASC, t.order_date DESC
SELECT c.name AS customer_name, t.customer_id, t.order_id, t.order_date FROM( SELECT order_id, order_date, customer_id, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM Orders) t JOIN Customers c ON c.customer_id = t.customer_id WHERE t.rk<=3 ORDER BY 1, 2, 4 DESC
SELECT c.name AS customer_name, t1.customer_id, t1.order_id, t1.order_date FROM Customers c INNER JOIN ( SELECT customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS order_rank FROM Orders )t1 ON c.customer_id = t1.customer_id AND t1.order_rank <= 3 ORDER BY c.name ASC, c.customer_id ASC, t1.order_date DESC
SELECT c.name as 'customer_name', o.customer_id, order_id, order_date FROM (SELECT *, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) as rn FROM orders) o LEFT JOIN customers c ON c.customer_id = o.customer_id WHERE rn <= 3 ORDER BY c.name, c.customer_id, o.order_date DESC
SELECT c.name as customer_name ,t.customer_id ,t.order_id ,t.order_date FROM ( SELECT customer_id ,order_id ,order_date ,cost ,DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) as Ranking FROM Orders ) t INNER JOIN customers c on t.customer_id = c.customer_id WHERE Ranking <= 3 ORDER BY c.name ASC, t.customer_id ASC, t.order_date DESC
SELECT c.name as customer_name, c.customer_id, o.order_id, o.order_date FROM Customers c RIGHT JOIN (SELECT order_id, order_date, customer_id, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) as rnk FROM Orders) o ON o.customer_id = c.customer_id WHERE o.rnk <= 3 ORDER BY c.name ASC, c.customer_id ASC, o.order_date DESC
SELECT c.name as customer_name, o.customer_id, o.order_id, o.order_date FROM Orders O JOIN Customers C ON o.customer_id = c.customer_id INNER JOIN Orders O1 ON O1.customer_id = O.customer_id AND O.order_date <= O1.order_date GROUP BY customer_name, c.customer_id, o.order_date, o.order_id HAVING count(o1.order_date) <= 3 ORDER BY c.name ASC, o.customer_id ASC, o.order_date DESC
SELECT c.name as customer_name,c.customer_id,a.order_id,a.order_date FROM customers as c inner join (SELECT *,dense_rank() over (partition by customer_id order by order_date desc) as Ranks from orders ) as a on c.customer_id=a.customer_id where ranks<=3 order by name,customer_id,order_date desc
SELECT c.name as customer_name,o.customer_id,o.order_id,o.order_date FROM (Select customer_id,order_id,order_date, rank()over(partition by customer_id order by order_date desc) as rnk FROM Orders) as o JOIN Customers as c ON c.customer_id = o.customer_id WHERE o.rnk<=3 ORDER BY customer_name,customer_id,order_date DESC
SELECT c.name as customer_name,t1.customer_id as customer_id,t1.order_id as order_id,t1.order_date as order_date FROM (SELECT order_id,customer_id,order_date,RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS rank_order FROM Orders ORDER BY customer_id) t1 LEFT JOIN Customers c ON t1.customer_id=c.customer_id WHERE t1.rank_order <=3 ORDER BY c.name,t1.customer_id, t1.order_date DESC
SELECT c.name customer_name , c.customer_id, order_id, order_date FROM( SELECT c.customer_id, c.name, order_id, order_date, rank() OVER (PARTITION BY c.customer_id ORDER BY order_date DESC) r FROM customers c JOIN orders o ON c.customer_id = o.customer_id ) c WHERE r <= 3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
SELECT c.name customer_name,c.customer_id, temp.order_id ,temp.order_date FROM CUstomers c JOIN (SELECT *, DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) rnk FROM Orders ) temp ON c.customer_id = temp.customer_id WHERE rnk <=3 ORDER BY c.name,c.customer_id,order_date DESC
SELECT c.name customer_name,c.customer_id, temp.order_id ,temp.order_date FROM CUstomers c JOIN (SELECT *, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) rnk FROM Orders ) temp ON c.customer_id = temp.customer_id WHERE rnk <=3 ORDER BY c.name,c.customer_id,order_date DESC
SELECT customer_name , customer_id , order_id , order_date from (SELECT name as customer_name , o.customer_id , order_id , order_date, row_number() over(partition by o.customer_id order by order_date DESC) as ranking FROM Orders o left join Customers c on c.customer_id=o.customer_id)p1 WHERE ranking <=3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name , customer_id, order_id, order_date FROM (SELECT order_id, order_date, o.customer_id, name AS customer_name, RANK() OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) AS rnk FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id )t WHERE rnk < 4 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
SELECT customer_name, customer_id, order_id ,order_date FROM (SELECT name AS customer_name, customer_id, order_id ,order_date, RANK()OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS order_rank FROM Orders JOIN Customers USING(customer_id))AS temp WHERE order_rank<=3 ORDER BY customer_name,customer_id,order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT c.name AS customer_name, c.customer_id, o.order_id, o.order_date, RANK() OVER(PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS rnk FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id ) t WHERE rnk <= 3 ORDER BY 1, 2, 4 DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT c.name AS customer_name, c.customer_id, o.order_id, o.order_date, RANK() OVER(Partition BY c.customer_id Order BY order_date DESC) AS rnk FROM Customers AS c JOIN Orders AS o USING(customer_id) ) As sub WHERE rnk <= 3 ORDER BY 1, 2, 4 DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT c.name customer_name, c.customer_id, order_id, order_date, RANK() OVER (PARTITION BY c.customer_id ORDER BY order_date DESC) rnk FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id ) t WHERE rnk <= 3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT customer_name, customer_id, order_id, order_date, row_number() over (partition by customer_id order by order_date desc) as reverse_order_index FROM ( SELECT c.name as customer_name, o.customer_id, o.order_id, o.order_date, row_number() over (partition by customer_id order by order_date asc) as order_index, count(*) over(partition by customer_id) as num_orders FROM orders o JOIN Customers c on c.customer_id = o.customer_id ) a WHERE not(order_index=1 and num_orders > 3) )b where reverse_order_index <= 3 order by customer_name asc, customer_id asc, order_date desc
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT name AS customer_name, c.customer_id, order_id, order_date, RANK() OVER (PARTITION BY c.customer_id ORDER BY order_date DESC) as rnk FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id ) A WHERE rnk <= 3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT name AS customer_name, customer_id, order_id, order_date, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS recent_order_rank FROM Orders JOIN Customers USING (customer_id) GROUP BY 1,2,3,4 ) AS base WHERE recent_order_rank <= 3 ORDER BY 1, 2, 4 DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT name AS customer_name, o.customer_id, order_id, order_date, RANK() OVER(PARTITION BY o.customer_id order by order_date DESC) as ranking FROM Orders o JOIN Customers a ON a.customer_id = o.customer_id ) temp WHERE ranking <= 3 ORDER BY customer_name,customer_id, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT o.customer_id, c.name as customer_name, o.order_date, o.order_id, RANK() OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) as ranking FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id ) a WHERE ranking <= 3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT o.customer_id, c.name as customer_name, o.order_date, o.order_id, ROW_NUMBER() OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) as ranking FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id ) a WHERE ranking <= 3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM ( SELECT o.order_id, o.order_date, o.customer_id, c.name AS customer_name, RANK() OVER (PARTITION BY o.customer_id ORDER BY order_date DESC) AS rnk FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id ) t WHERE rnk <= 3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM (SELECT C.name AS customer_name, C.customer_id AS customer_id, O.order_id AS order_id, O.order_date AS order_date, Rank() OVER(PARTITION BY C.customer_id ORDER BY O.order_date DESC) as rnk FROM Customers C JOIN Orders O ON C.customer_id=O.customer_id) Temp WHERE rnk<=3 ORDER BY 1,2,4 DESC
SELECT customer_name, customer_id, order_id, order_date FROM (SELECT c.name AS customer_name, c.customer_id, o.order_id, o.order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rnk FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id) AS customer_rank WHERE rnk <=3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM (SELECT c.name AS customer_name, o.customer_id, o.order_id, o.order_date, RANK() OVER (PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS r FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id) AS t WHERE r <= 3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM (SELECT name AS customer_name, c.customer_id, order_id, order_date, RANK() OVER(PARTITION BY c.customer_id ORDER BY order_date DESC) AS rnk FROM Customers c RIGHT JOIN Orders o ON c.customer_id=o.customer_id) t1 WHERE rnk<=3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM (SELECT name AS customer_name, customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS ranks FROM Customers INNER JOIN Orders USING(customer_id)) temp WHERE ranks <=3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM (SELECT name AS customer_name, customer_id, order_id, order_date, RANK()OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rnk FROM orders LEFT JOIN customers USING (customer_id)) a WHERE rnk = 1 OR rnk = 2 OR rnk = 3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM (SELECT name as customer_name, c.customer_id, order_id, order_date, DENSE_RANK() OVER(PARTITION BY c.customer_id ORDER BY order_date DESC) AS order_date_rank FROM Customers c, Orders o WHERE c.customer_id = o.customer_id) tmp WHERE order_date_rank <= 3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM( SELECT c.name AS customer_name, c.customer_id, o.order_id, o.order_date, RANK()OVER(PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS ranks FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id) temp WHERE ranks <= 3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name, customer_id, order_id, order_date FROM( SELECT c.name AS customer_name, c.customer_id,o.order_id, o.order_date, row_number() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM Orders o JOIN Customers c ON o.customer_id= c.customer_id ) temp WHERE rk<=3 ORDER BY 1,2, 4 DESC
SELECT customer_name, customer_id, order_id,order_date FROM (SELECT c.name AS customer_name, o.customer_id, o.order_id,o.order_date, RANK() OVER (PARTITION BY customer_id ORDER BY Order_date DESC) AS rnk FROM Orders o LEFT JOIN Customers c USING (customer_id) GROUP BY c.name, o.customer_id, o.order_id,o.order_date) t WHERE rnk <=3 ORDER BY customer_name, customer_id, order_date DESC
SELECT customer_name, t1.customer_id, t1.order_id, order_date FROM (SELECT name as customer_name, c.customer_id, order_id, order_date, RANK() over(partition by c.customer_id order by order_date desc) as rnk FROM customers c JOIN orders o ON c.customer_id = o.customer_id) t1 WHERE t1.rnk <= 3 ORDER BY customer_name asc, customer_id asc, order_date desc
SELECT customer_name,customer_id,order_id, order_date FROM ( SELECT name as customer_name,c.customer_id,order_id, order_date, rank() over (partition by customer_id ORDER BY name asc ,customer_id asc, order_date desc) as ranking FROM orders AS o JOIN customers AS c ON o.customer_id = c.customer_id ORDER BY customer_name asc ,customer_id asc, order_date desc ) as A where ranking <= 3
SELECT customer_name,customer_id,order_id,order_date FROM (SELECT c.name AS customer_name, c.customer_id,o.order_id,o.order_date, RANK() OVER(PARTITION BY c.customer_id ORDER BY o.order_date DESC) AS rk FROM Customers AS c JOIN Orders AS o ON c.customer_id=o.customer_id ) t WHERE rk<=3 ORDER BY 1,2,4 DESC
SELECT name AS customer_name, customer_id , order_id, order_date FROM (Select C.name, O.customer_id ,O.order_id , O.order_date , row_number() Over(Partition by customer_id Order by order_date desc) AS CustOrderNumSequece FROM Orders O Join Customers C USING (customer_id) ) Orders_Customer_Seq WHERE CustOrderNumSequece < 4 ORDER BY customer_name, customer_id , order_date desc
SELECT name AS customer_name, customer_id, order_id , order_date FROM (SELECT name, a.customer_id, order_id , order_date, RANK()OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rnk FROM Customers a JOIN Orders b ON a.customer_id = b.customer_id ) t WHERE rnk <= 3 ORDER BY 1, 2, 4 DESC
SELECT name AS customer_name, customer_id, order_id, order_date FROM ( SELECT c.name, c.customer_id, o.order_id, o.order_date, RANK() OVER (PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS rank1 FROM Orders o LEFT JOIN Customers c ON c.customer_id = o.customer_id ) xx WHERE rank1 < 4 ORDER BY name, customer_id, order_date DESC
SELECT name AS customer_name, customer_id, order_id, order_date FROM ( SELECT name, c.customer_id, order_id, order_date, rank() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS r FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id ) AS T WHERE r <= 3 ORDER BY name ASC, customer_id ASC, order_date DESC
SELECT name AS customer_name, customer_id, order_id, order_date FROM ( SELECT o.customer_id, order_id, order_date, c.name, DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) ranks FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id )t WHERE ranks <=3 ORDER BY name ASC , customer_id ASC, order_date DESC
SELECT name AS customer_name, customer_id, order_id, order_date FROM (SELECT *, DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS rnk FROM Customers JOIN Orders USING (customer_id)) t WHERE rnk <= 3 ORDER BY customer_name, customer_id, order_date DESC
SELECT name AS customer_name, customer_id, order_id, order_date FROM (SELECT c.name, c.customer_id, o.order_id, o.order_date, RANK() OVER (PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS order_date_rnk FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id) AS sorted_orders WHERE order_date_rnk <= 3 ORDER BY name ASC, customer_id ASC, order_date DESC
SELECT name AS customer_name, customer_id, order_id, order_date FROM (SELECT o.*, c.name, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) rk FROM Orders o LEFT JOIN Customers c ON o.customer_id=c.customer_id) temp WHERE rk BETWEEN 1 AND 3 ORDER BY customer_name ASC, customer_id ASC,order_date DESC
SELECT name AS customer_name, customer_id, order_id, order_date FROM Customers C JOIN (SELECT order_id, customer_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS RNK FROM Orders) O USING(customer_id) WHERE RNK <= 3 ORDER BY 1,2,4 DESC
SELECT name AS customer_name, main.customer_id, main.order_id, main.order_date FROM orders main INNER JOIN orders newest ON main.order_date <= newest.order_date AND main.customer_id = newest.customer_id INNER JOIN customers ON main.customer_id = customers.customer_id GROUP BY main.order_id HAVING COUNT(newest.order_id) <= 3 ORDER BY customer_name, main.customer_id, main.order_date DESC
SELECT name AS customer_name, t.customer_id, order_id, order_date FROM ( SELECT customer_id, order_id, order_date, ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS order_r FROM Orders ) t INNER JOIN Customers c ON t.customer_id = c.customer_id WHERE order_r <= 3 ORDER BY customer_name, customer_id, order_date DESC
SELECT name AS customer_name, temp1.customer_id, order_id, order_date FROM ( SELECT *, rank() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM Orders ) temp1 JOIN Customers ON temp1.customer_id = Customers.customer_id WHERE rk <= 3 ORDER BY name, customer_id, order_date DESC
SELECT name as customer_name ,customer_id ,order_id ,order_date from (select Orders.* , Customers.name, RANK() over (PARTITION by Orders.customer_id ORDER BY order_date desc) rk from Orders, Customers WHERE Orders.customer_id = Customers.customer_id ) t where rk <= 3 order by 1,2,4 desc
SELECT name as customer_name, customer_id, order_id, order_date FROM ( SELECT d2.name, d1.customer_id, d1.order_id, d1.order_date, RANK() OVER(PARTITION BY d1.customer_id ORDER BY d1.order_date DESC) as ranking FROM Orders as d1 JOIN Customers as d2 ON d1.customer_id = d2.customer_id) as sub WHERE ranking IN (1,2,3) ORDER BY 1, 2, 4 DESC
SELECT name as customer_name, customer_id, order_id, order_date FROM (SELECT c.name,o.order_date,o.customer_id,o.order_id, DENSE_RANK() OVER(PARTITION BY o.customer_id ORDER BY o.order_date DESC) as r FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id) as tab1 WHERE r = 1 or r = 2 or r = 3 ORDER BY name,customer_id,order_date DESC
SELECT name as customer_name, customer_id, order_id, order_date FROM (SELECT name, o.customer_id, order_id, order_date, dense_rank()over(partition by o.customer_id order by order_date desc) as rnk FROM Orders as o JOIN Customers as c ON c.customer_id=o.customer_id) as r WHERE rnk <= 3 ORDER BY name asc, customer_id asc, order_date desc
SELECT name as customer_name, r.customer_id, order_id, order_date FROM (SELECT order_id, order_date, customer_id, RANK() OVER(Partition by customer_id Order by order_date desc) ranked FROM Orders) r INNER JOIN Customers ON r.customer_id = Customers.customer_id where ranked <= 3 ORDER BY customer_name, customer_id, order_date desc
SELECT name customer_name, T.customer_id, order_id, order_date FROM( SELECT customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS RNK FROM Orders) AS T JOIN Customers AS C ON T.customer_id = C.customer_id WHERE RNK <= 3 ORDER BY customer_name, T.customer_id, order_date DESC
SELECT name customer_name, c.customer_id, order_id, order_date FROM (SELECT *, RANK() OVER(partition by customer_id order by order_date desc) num FROM ORDERS) o JOIN Customers c ON o.customer_id = c.customer_id WHERE num <= 3 ORDER BY customer_name, customer_id, order_date desc
SELECT name customer_name, customer_id, order_id, order_date FROM ( SELECT Orders.*, Customers.name, RANK() over (PARTITION by Orders.customer_id ORDER BY order_date desc) rk FROM Orders, Customers WHERE Orders.customer_id = Customers.customer_id ) t WHERE rk<=3 ORDER BY 1,2,4 desc
SELECT name customer_name, customer_id, order_id, order_date FROM ( SELECT c.name, c.customer_id, o.order_id, o.order_date, RANK() OVER(PARTITION BY c.customer_id ORDER BY o.order_date DESC) order_rank FROM customers c JOIN orders o ON c.customer_id = o.customer_id ) ranked_orders WHERE order_rank <= 3 ORDER BY name, customer_id, order_date DESC
SELECT name customer_name, customer_id, order_id, order_date FROM ( SELECT c.name, c.customer_id, o.order_id, o.order_date, RANK() OVER(PARTITION BY c.name, c.customer_id ORDER BY o.order_date DESC) order_rank FROM customers c JOIN orders o ON c.customer_id = o.customer_id ) ranked_orders WHERE order_rank <= 3 ORDER BY name, customer_id, order_date DESC
SELECT name customer_name,a.customer_id,order_id,order_date FROM (SELECT o1.customer_id, o1.order_id, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) r, o1.order_date FROM Orders o1 LEFT JOIN Orders o2 on o1.order_date >= o2.order_date GROUP BY o1.customer_id,o1.order_date) a LEFT JOIN Customers c ON a.customer_id=c.customer_id WHERE r<=3 ORDER BY 1 ASC,2 ASC,4 DESC
SELECT sub.name as customer_name, sub.customer_id, sub.order_id, sub.order_date FROM (SELECT c.name, o.customer_id, o.order_id, o.order_date, ROW_NUMBER() OVER(PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS ranked FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id ) sub WHERE sub.ranked<=3 ORDER BY 1, 2, 4 DESC
SELECT t.customer_name, t.customer_id, t.order_id, t.order_date FROM (SELECT c.name customer_name, c.customer_id, o.order_id, o.order_date, DENSE_RANK()OVER(PARTITION BY o.customer_id ORDER BY o.order_date DESC) rnk FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id) t WHERE t.rnk <=3 ORDER BY t.customer_name, t.customer_id, t.order_date DESC
SELECT t.customer_name, t.customer_id, t.order_id, t.order_date FROM (SELECT c.name customer_name, c.customer_id, o.order_id, o.order_date, RANK()OVER(PARTITION BY o.customer_id ORDER BY o.order_date DESC) rnk FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id) t WHERE t.rnk <=3 ORDER BY t.customer_name, t.customer_id, t.order_date DESC
Select C.name as customer_name, R.customer_id, R.order_id, R.order_date From Customers as C Join (Select order_id, order_date, customer_id, cost, Rank() over (Partition by customer_id order by order_date DESC) as rnk From Orders) as R On C.customer_id = R.customer_id Where rnk <=3 Order by 1, C.customer_id, R.order_date DESC
Select customer_name, customer_id , order_id, order_date FROM (Select name AS customer_name , O.customer_id , O.order_id , O.order_date , dense_rank() Over(Partition by customer_id Order by order_date desc) AS CustOrderNumSequece FROM Orders O Join Customers C USING (customer_id) ) Orders_Customer_Seq WHERE CustOrderNumSequece < 4 ORDER BY customer_name, customer_id , order_date desc
Select customer_name, customer_id , order_id, order_date FROM (Select name AS customer_name , O.customer_id , O.order_id , O.order_date , row_number() Over(Partition by customer_id Order by order_date desc) AS CustOrderNumSequece FROM Orders O Join Customers C On O.customer_id = C.customer_id ) Orders_Customer_Seq WHERE CustOrderNumSequece < 4 ORDER BY customer_name, customer_id , order_date desc
Select customer_name, customer_id , order_id, order_date FROM (Select name AS customer_name , O.customer_id ,O.order_id , O.order_date , row_number() Over( Partition by customer_id Order by order_date desc) AS CustOrderNumSequece FROM Orders O Left Join Customers C On O.customer_id = C.customer_id ) Orders_Customer_Seq WHERE CustOrderNumSequece < 4 ORDER BY customer_name, customer_id , order_date desc
Select customer_name, customer_id, order_id, order_date FROM ( Select c.name as customer_name, c.customer_id, o.order_id, o.order_date , RANK() OVER(PARTITION BY c.customer_id ORDER BY order_date DESC) as Rank_ From Customers c JOIN Orders O ON c.customer_id = o.customer_id ) a WHERE Rank_ < 4 ORDER BY customer_name asc, customer_id asc, order_date desc
Select customer_name, customer_id, order_id, order_date from ( Select o.customer_id, o.order_id, o.order_date, c.name customer_name, dense_rank() over (partition by customer_id order by order_date desc) holder from Customers c join Orders o on o.customer_id = c.customer_id ) temp where holder <=3 order by customer_name, customer_id, order_date desc
Select customer_name,customer_id,order_id, order_date from (Select c.name as customer_name, c.customer_id,o.order_id,o.order_date, dense_rank() over (partition by c.name,c.customer_id order by o.order_date desc) as drnk from Customers as c join orders as o on c.customer_id =o.customer_id order by 1,2,4 desc) as tab1 where drnk=1 or drnk=2 or drnk=3
Select name as customer_name, c.customer_id, o.order_id, o.order_date from Orders o JOIN Customers c ON c.customer_id = o.customer_id JOIN Orders r ON r.customer_id = o.customer_id and o.order_date <= r.order_date Group By o.customer_id, o.order_id, o.order_date Having Count(r.order_date) <= 3 Order By name, o.customer_id, o.order_date desc
Select name as customer_name, customer_id , order_id, order_date FROM (Select C.name, O.customer_id ,O.order_id , O.order_date , row_number() Over(Partition by customer_id Order by order_date desc) AS CustOrderNumSequece FROM Orders O Join Customers C USING (customer_id) ) Orders_Customer_Seq WHERE CustOrderNumSequece < 4 ORDER BY customer_name, customer_id , order_date desc
Select name as customer_name, customer_id, order_id, order_date from (select cust.name, ord.customer_id, ord.order_id, ord.order_date, row_number()over(partition by customer_id order by order_date desc) as rnk from Orders ord , Customers cust where cust.customer_id = ord.customer_id )a where rnk <=3 order by name,customer_id,order_date desc
Select t1.name as Customer_name, t1.customer_id, t1.order_id, t1.order_date from (Select C.Customer_id, C.name, O.Order_date, O.order_id, Rank () Over ( Partition by C.customer_id Order by O.Order_date Desc) as Order_rank from Customers C join Orders O on O.Customer_id = C.Customer_id ) t1 where t1.Order_rank <=3 Order by t1.name, t1.customer_id, t1.order_date Desc
WITH C AS ( SELECT c.name, o.customer_id, o.order_id, o.order_date, RANK() OVER( PARTITION BY customer_id ORDER BY order_date DESC ) AS rk FROM Orders o, Customers c WHERE o.customer_id=c.customer_id ) SELECT name AS customer_name, customer_id, order_id, order_date FROM C WHERE rk<=3 ORDER BY name ASC, customer_id ASC, order_date DESC
WITH CTE AS ( SELECT *, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM orders ) SELECT b.name AS customer_name, a.customer_id, a.order_id, a.order_date FROM CTE a INNER JOIN customers b USING(customer_id) WHERE a.rk<=3 ORDER BY customer_name, customer_id, order_date DESC
WITH CTE AS ( SELECT c.name as customer_name ,c.customer_id ,o.order_id ,o.order_date ,RANK() OVER(partition by customer_id order by order_date DESC) AS RNK FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id ) SELECT customer_name,customer_id,order_id,order_date FROM CTE WHERE RNK <= 3 ORDER BY customer_name, customer_id ASC, order_date DESC
WITH CTE AS ( SELECT customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM Orders ) SELECT c.name AS customer_name, c.customer_id, CTE.order_id, CTE.order_date FROM Customers c JOIN CTE ON c.customer_id = CTE.customer_id WHERE CTE.rk BETWEEN 1 AND 3 ORDER BY c.name, c.customer_id, CTE.order_date DESC
WITH CTE AS ( SELECT order_id, order_date, customer_id, DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS value FROM Orders ORDER BY customer_id) SELECT name AS customer_name, c1.customer_id, order_id, order_date FROM CTE JOIN Customers c1 ON CTE.customer_id = c1.customer_id WHERE value IN (1,2,3) ORDER BY name ASC, customer_id ASC, order_date DESC
WITH CTE AS (SELECT order_id, order_date, customer_id, cost, DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) rnk FROM orders) SELECT name as customer_name, c.customer_id, order_id, order_date FROM CTE c LEFT JOIN customers d ON c.customer_id=d.customer_id WHERE rnk<4 ORDER BY customer_name, customer_id, order_date DESC
WITH CTE1 AS ( SELECT order_id, customer_id, order_date, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS rks FROM Orders), CTE2 AS ( SELECT order_id, customer_id, order_date FROM CTE1 WHERE rks<=3) SELECT name AS customer_name, CTE2.customer_id, order_id, order_date FROM CTE2 JOIN Customers ON Customers.customer_id = CTE2.customer_id ORDER BY customer_name, customer_id, order_date DESC
WITH CUST_ORDER AS ( SELECT C.NAME AS CUSTOMER_NAME, C.CUSTOMER_ID, O.ORDER_ID, O.ORDER_DATE, RANK() OVER(PARTITION BY C.CUSTOMER_ID ORDER BY ORDER_DATE DESC) AS RN FROM CUSTOMERS C INNER JOIN ORDERS O ON C.CUSTOMER_ID=O.CUSTOMER_ID) SELECT CUSTOMER_NAME, CUSTOMER_ID, ORDER_ID, ORDER_DATE FROM CUST_ORDER WHERE RN<=3 ORDER BY CUSTOMER_NAME, CUSTOMER_ID, ORDER_dATE DESC
WITH OrderRanking AS (SELECT customer_id ,order_id ,order_date ,DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS Rk FROM Orders) SELECT C.name AS customer_name ,C.customer_id ,OdR.order_id ,OdR.order_date FROM Customers C INNER JOIN OrderRanking OdR ON Odr.customer_id = C.customer_id AND Rk <= 3 ORDER BY 1 ASC, 2 ASC, 4 DESC
WITH OrderRanking AS (SELECT order_id ,customer_id ,order_date ,DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS Rk FROM Orders) SELECT C.name AS customer_name ,C.customer_id ,ORR.order_id ,ORR.order_date FROM Customers C INNER JOIN OrderRanking ORR ON ORR.customer_id = C.customer_id AND ORR.Rk <= 3 ORDER BY 1 ASC, 2 ASC, 4 DESC
WITH RankedOrders AS ( SELECT customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS OrderRank FROM Orders ) SELECT Customers.name AS customer_name, RankedOrders.customer_id, RankedOrders.order_id, RankedOrders.order_date FROM RankedOrders INNER JOIN Customers ON Customers.customer_id = RankedOrders.customer_id WHERE OrderRank <= 3 ORDER BY 1, 2, 4 DESC
WITH RecentOrders AS (SELECT customer_id ,order_id ,order_date ,DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS Rk FROM Orders) SELECT C.name AS customer_name ,RO.customer_id ,RO.order_id ,RO.order_date FROM RecentOrders RO INNER JOIN Customers C ON C.customer_id = RO.customer_id WHERE Rk <= 3 ORDER BY 1 ASC, 2 ASC, 4 DESC
WITH T AS ( SELECT customer_id FROM Orders GROUP BY customer_id HAVING COUNT(order_id) <= 3 ), G AS ( SELECT DISTINCT customer_id FROM Orders WHERE customer_id NOT IN (SELECT * FROM T) ), M AS ( SELECT O.order_id, O.order_date, O.customer_id, RANK() OVER(PARTITION BY O.customer_id ORDER BY O.order_date DESC) AS r FROM G INNER JOIN Orders O USING(customer_id) ), A AS ( SELECT O.order_id, O.order_date, O.customer_id FROM T INNER JOIN Orders O ON T.customer_id = O.customer_id UNION SELECT M.order_id, M.order_date, M.customer_id FROM M WHERE r <= 3 ) SELECT C.name AS customer_name, A.customer_id, A.order_id, A.order_date FROM A INNER JOIN Customers C ON A.customer_id = C.customer_id ORDER BY customer_name ASC, A.customer_id ASC, A.order_date DESC
WITH T1 AS ( SELECT name customer_name, c.customer_id, order_id, order_date, DENSE_RANK() OVER (PARTITION BY c.customer_id ORDER BY order_date DESC) AS r1 FROM customers c JOIN orders USING(customer_id) ORDER BY customer_name, c.customer_id, order_date DESC) SELECT customer_name, customer_id, order_id, order_date FROM T1 WHERE r1 <= 3
WITH TEMP AS (SELECT c.name, c.customer_id, o.order_id, o.order_date, ROW_NUMBER() OVER (PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS row_num FROM Customers c JOIN Orders o USING (customer_id)) SELECT name AS customer_name, customer_id, order_id, order_date FROM TEMP WHERE row_num <= "3" ORDER BY 1, 2, 4 DESC
WITH TEMP AS (SELECT c.name, c.customer_id, o.order_id, o.order_date, ROW_NUMBER() OVER (PARTITION BY o.customer_id ORDER BY o.order_date DESC) AS row_num FROM Customers c JOIN Orders o USING (customer_id)) SELECT name AS customer_name, customer_id, order_id, order_date FROM TEMP WHERE row_num = '1' OR row_num = '2' OR row_num = '3' ORDER BY 1, 2, 4 DESC
WITH TEMP AS (select c.name as customer_name, o.customer_id as customer_id, o.order_id as order_id, o.order_date as order_date, rank() over(partition by c.customer_id order by o.order_date desc) as Rnk from customers c inner join orders o on o.customer_id = c.customer_id ) select customer_name, customer_id, order_id, order_date from temp where Rnk <= 3 order by customer_name, customer_id, order_date desc
WITH a AS ( SELECT order_id, order_date, customer_id, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date DESC) as ct FROM ORDERS), b AS ( SELECT * FROM a WHERE ct<4 ) SELECT Customers.name AS customer_name, b.customer_id, b.order_id, b.order_date FROM b JOIN Customers ON b.customer_id = Customers.customer_id ORDER BY customer_name, customer_id, order_date DESC
WITH all_orders as ( SELECT o.order_id, o.order_date, o.customer_id, o.cost, c.name, ROW_NUMBER() OVER (PARTITION BY o.customer_id ORDER BY o.order_date DESC) as ranking FROM orders o INNER JOIN customers c ON o.customer_id = c.customer_id ) SELECT name as customer_name, customer_id, order_id, order_date FROM all_orders WHERE ranking < 4 ORDER BY name ASC, customer_id ASC,order_date DESC
WITH cte AS ( SELECT *, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS rnk FROM Orders ) SELECT t1.name AS customer_name, t1.customer_id, t2.order_id, t2.order_date FROM Customers t1 JOIN cte t2 ON (t1.customer_id = t2.customer_id) WHERE t2.rnk <= 3 ORDER BY t1.name ASC, t1.customer_id ASC, t2.order_date DESC
WITH cte AS ( SELECT a.*,b.name, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS rank_order_date FROM Orders a JOIN Customers b ON a.customer_id = b.customer_id ) SELECT customer_name,customer_id,order_id,order_date FROM( SELECT name AS customer_name,customer_id,order_id,order_date FROM cte WHERE customer_id IN ( SELECT customer_id FROM cte GROUP BY customer_id HAVING MAX(rank_order_date)<3 ) UNION SELECT name AS customer_name,customer_id,order_id,order_date FROM cte WHERE customer_id IN ( SELECT customer_id FROM cte GROUP BY customer_id HAVING MAX(rank_order_date)>=3 ) AND rank_order_date<=3 ) temp ORDER BY customer_name,customer_id,order_date DESC
WITH cte AS ( SELECT customer_id ,order_id ,order_date ,ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date DESC) rn_c FROM Orders ) SELECT c.name AS customer_name ,ct.customer_id ,ct.order_id ,ct.order_date FROM cte ct JOIN Customers c ON ct.customer_id = c.customer_id WHERE rn_c <= 3 ORDER BY c.name ,ct.customer_id ,ct.order_date DESC
WITH cte AS (SELECT c.name,o1.customer_id, o1.order_id, count(*) c, o1.order_date FROM Orders o1 LEFT JOIN Orders o2 on o1.order_date >= o2.order_date LEFT JOIN Customers c on o1.customer_id = c.customer_id GROUP BY o1.customer_id,o1.order_date), cte_2 AS (SELECT name, customer_id,order_id,order_date, RANK() OVER (PARTITION BY customer_id ORDER BY c DESC) r FROM cte) SELECT name customer_name, customer_id,order_id,order_date FROM cte_2 WHERE r<=3 ORDER BY 1 ASC,2 ASC,4 DESC
WITH cte AS (SELECT customer_id, order_id, order_date from ( SELECT customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date DESC) AS rnk FROM orders order by customer_id, order_date DESC) a where rnk <4) select name AS customer_name,cte.customer_id,order_id, order_date FROM CTE JOIN customers USING(customer_id) order by name, customer_id,order_date DESC
WITH cte AS (SELECT order_id, customer_id, order_date, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) AS Ranks FROM Orders) SELECT b.name AS customer_name, a.customer_id, a.order_id, a.order_date FROM cte a LEFT JOIN Customers b ON a.customer_id = b.customer_id WHERE a.Ranks<=3 ORDER BY customer_name, customer_id, order_date DESC
WITH cte as (select order_date, customer_id, order_id from (select order_date, customer_id, order_id, rank() over(PARTITION BY customer_id Order by order_date desc) as rnk from Orders) temp where rnk < 4) select name as customer_name, cust.customer_id, order_id, order_date from Customers cust JOIN cte ON cust.customer_id = cte.customer_id Order by customer_name asc, customer_id asc, order_date desc
WITH main AS ( SELECT name AS customer_name, customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS ranking FROM Customers C INNER JOIN Orders O USING(customer_id) ) SELECT customer_name, customer_id, order_id, order_date FROM main WHERE ranking <= 3 ORDER BY customer_name, customer_id, order_date DESC
WITH orderRank as ( select c.name as customer_name, o.customer_id, o.order_id, o.order_date, dense_rank() over (partition by customer_id order by order_date DESC) as ranks from orders as o join customers as c on o.customer_id = c.customer_id ) SELECT customer_name, customer_id, order_id, order_date FROM orderRank where ranks <= 3 order by customer_name, customer_id, order_date desc
WITH rank1 AS (SELECT customer_id, order_date, order_id, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) rank_date FROM Orders) SELECT c.name customer_name, c.customer_id, r.order_id, r.order_date FROM Customers c, rank1 r WHERE c.customer_id = r.customer_id AND r.rank_date <= 3 ORDER BY 1, 2, 4 DESC
WITH ranked_orders AS ( SELECT order_id , order_date , customer_id , cost , RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) as order_rank FROM Orders ) SELECT c.name as customer_name , c.customer_id , o.order_id , o.order_date FROM Customers as c LEFT JOIN ranked_orders as o ON (o.customer_id = c.customer_id) WHERE o.order_rank <= 3 ORDER BY c.name, c.customer_id, o.order_date DESC
WITH result AS ( SELECT customer_id, order_date, order_id, ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS R FROM orders ) SELECT c.name AS customer_name, r.customer_id, r.order_id, r.order_date FROM result AS r LEFT JOIN customers AS c ON r.customer_id = c.customer_id WHERE R <= 3 ORDER BY 1, 2, 4 DESC
WITH sort_order as(SELECT customer_id, order_date, order_id, rank() OVER(PARTITION BY customer_id ORDER BY order_date DESC) as rnk FROM Orders) SELECT c.name as customer_name, c.customer_id as customer_id, s.order_id as order_id, s.order_date as order_date FROM sort_order s INNER JOIN Customers c ON s.customer_id = c.customer_id WHERE rnk < 4 ORDER BY customer_name, customer_id, order_date DESC
WITH sub AS ( SELECT order_id, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS order_rank FROM Orders ) SELECT c.name AS customer_name, c.customer_id, o.order_id, o.order_date FROM Orders o JOIN Customers c ON o.customer_id = c.customer_id WHERE o.order_id IN ( SELECT order_id FROM sub WHERE order_rank <=3 ) ORDER BY c.name ASC, c.customer_id ASC, o.order_date DESC
WITH sub1 AS(SELECT customer_id, order_id, order_date, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date DESC) order_rank FROM Orders) SELECT c.name customer_name, sub1.customer_id, sub1.order_id, sub1.order_date FROM sub1 JOIN Customers c ON sub1.customer_id=c.customer_id WHERE sub1.order_rank<=3 ORDER BY 1,2,4 DESC
WITH t AS ( SELECT *, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) rk FROM orders ) SELECT name customer_name, t.customer_id customer_id, order_id, order_date FROM t JOIN customers c ON t.customer_id=c.customer_id WHERE rk<=3 ORDER BY customer_name, customer_id, order_date DESC
WITH t AS ( SELECT customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM Orders ) SELECT name AS customer_name, t.customer_id, order_id, order_date FROM t JOIN Customers c ON t.customer_id = c.customer_id AND rk <= 3 ORDER BY customer_name, customer_id, order_date DESC
WITH t AS ( SELECT o.order_id, o.order_date, o.customer_id,o.cost,c.name, DENSE_RANK() OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) as rk FROM orders o JOIN customers c ON o.customer_id = c.customer_id) SELECT name as customer_name, customer_id, order_id, order_date FROM t WHERE rk <= 3 ORDER BY name, customer_id, order_date DESC
WITH t AS ( SELECT o.order_id, o.order_date, o.customer_id,o.cost,c.name, RANK() OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) as rk FROM orders o JOIN customers c ON o.customer_id = c.customer_id) SELECT name as customer_name, customer_id, order_id, order_date FROM t WHERE rk <= 3 ORDER BY name, customer_id, order_date DESC
WITH t AS (select customer_id, order_id, order_date, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date DESC) as serial_num FROM Orders) SELECT t1.name as customer_name, t.customer_id, t.order_id, t.order_date FROM t LEFT JOIN Customers as t1 USING (customer_id) WHERE serial_num < 4 ORDER BY customer_name, customer_id, order_date DESC
WITH t AS(SELECT c.name, c.customer_id, o.order_id, o.order_date, DENSE_RANK() OVER (PARTITION BY c.customer_id ORDER BY o.order_date DESC) r FROM customers c JOIN orders o ON c.customer_id = o.customer_id) SELECT name customer_name, customer_id, order_id, order_date FROM t WHERE r <= 3 ORDER BY 1, 2, 4 DESC
WITH table1 AS( SELECT name AS customer_name, o.customer_id, order_id, order_date, RANK()OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) AS rn FROM Customers c INNER JOIN Orders o USING (customer_id) ) SELECT customer_name, customer_id, order_id, order_date FROM table1 WHERE rn <=3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
WITH table1 AS( SELECT name AS customer_name, o.customer_id, order_id, order_date, ROW_NUMBER()OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) AS rn FROM Customers c INNER JOIN Orders o USING (customer_id) ) SELECT customer_name, customer_id, order_id, order_date FROM table1 WHERE rn <=3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
WITH temp AS ( SELECT customer_id, order_id, order_date, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rk FROM Orders ) SELECT c.name AS customer_name, t.customer_id, t.order_id, t.order_date FROM temp t JOIN Customers c ON t.customer_id = c.customer_id WHERE rk <= 3 ORDER BY c.name ASC, t.customer_id ASC, t.order_date DESC
WITH temp AS ( SELECT order_id, order_date, customer_id, cost, ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY order_date desc) AS row_num FROM Orders ) SELECT Customers.name AS customer_name, temp.customer_id, temp.order_id, temp.order_date FROM temp INNER JOIN Customers ON temp.customer_id = Customers.customer_id WHERE row_num <= 3 ORDER BY customer_name, customer_id, order_date desc
WITH temp AS (SELECT name,customer_id,order_id,order_date,dense_rank() over (partition by customer_id order by order_date DESC) rk FROM Customers JOIN Orders USING (customer_id)) SELECT name AS customer_name,customer_id,order_id,order_date FROM temp WHERE rk<=3 ORDER BY 1,2,4 desc
WITH temp AS (SELECT name,customer_id,order_id,order_date,rank() over (partition by customer_id order by order_date DESC) rk FROM Customers JOIN Orders USING (customer_id)) SELECT name AS customer_name,customer_id,order_id,order_date FROM temp WHERE rk<=3 ORDER BY 1,2,4 desc
WITH tmp AS ( SELECT *, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rnk FROM Orders ORDER BY order_date DESC ) SELECT c.name AS customer_name, o.customer_id, o.order_id, o.order_date FROM tmp o JOIN Customers c ON o.customer_id = c.customer_id WHERE rnk <= 3 ORDER BY customer_name, o.customer_id, o.order_date DESC
With T as ( select c.name as 'customer_name', c.customer_id as 'customer_id', o.order_id as 'order_id', o.order_date as 'order_date', rank() over (partition by o.customer_id order by o.order_date desc) as 'R' from customers c right join orders o on c.customer_id = o.customer_id) select customer_name, customer_id, order_id, order_date from T where R <=3 order by customer_name,customer_id, order_date desc
With a as ( select customer_id, order_id, order_date from( select customer_id, order_id, order_date, dense_rank() over(partition by customer_id order by order_date desc) as rnk from orders)t where rnk <= 3) select c.name as customer_name, a.customer_id, a.order_id, a.order_date from a join customers c on c.customer_id = a.customer_id order by 1,2,4 desc
With cte as( select o.order_id, o.order_date, c.name, o.customer_id, rank() over(partition by o.customer_id order by o.order_date desc) as rnk1 from orders o left join customers c on o.customer_id = c.customer_id ) select name as customer_name, customer_id, order_id, order_date from cte where rnk1 <=3 order by customer_name asc, customer_id asc, order_date desc
With most_recent as( select a.name, a.customer_id, b.order_id, b.order_date, ROW_NUMBER() over(partition by a.customer_id order by b.order_date desc) as rnk from customers as a inner join orders as b on a.customer_id = b.customer_id ) select name as customer_name, customer_id, order_id, order_date from most_recent where rnk <=3 ORDER BY customer_name, customer_id, order_date DESC
With orders_rnk as ( select customer_id, order_id, order_date, dense_rank() over(partition by customer_id order by order_date desc) as rnk from orders ) select name as customer_name, c.customer_id, o.order_id, o.order_date from customers c join orders_rnk o on c.customer_id = o.customer_id where rnk <= 3 order by customer_name, customer_id, order_date desc
select C.name as customer_name, C.customer_id, O.order_id, O.order_date from Customers C join( select *, rank() over(partition by customer_id order by order_date desc) as order_rank from Orders ) O on C.customer_id = O.customer_id where order_rank < 4 order by customer_name, customer_id, order_date desc
select C.name as customer_name, T.customer_id, T.order_id, T.order_date from( select * , row_number() over (partition by customer_id order by order_date desc) as RN from Orders ) T join Customers C on T.customer_id = C.customer_id where RN <= 3 order by name, customer_id, order_date desc
select Customers.name customer_name, Orders.customer_id, tbl1.order_id, order_date from Orders join (select order_id, rank() over (partition by customer_id order by order_date desc) as rnk from Orders) tbl1 on Orders.order_id = tbl1.order_id join Customers on Customers.customer_id = Orders.customer_id where tbl1.rnk < 4 order by Customers.name, Orders.customer_id, order_date desc
select a.name as customer_name, a.customer_id as customer_id, a.order_id, a.order_date from (select c.name, c.customer_id, o.order_id, o.order_date, rank() over(partition by c.customer_id order by o.order_date desc) as r from customers c right join orders o on c.customer_id= o.customer_id ) a where a.r<=3 order by 1 asc, 2 asc, 4 desc
select a.name as customer_name, a.customer_id, a.order_id, a.order_date from ( select *, rank() over (partition by customer_id order by order_date desc) ranking from Orders join Customers using (customer_id)) a where ranking <= 3 order by customer_name asc, customer_id asc, order_date desc
select a.name as customer_name, b.customer_id, b.order_id, b.order_date from customers a join ( select customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) as ranking from orders ) b on a.customer_id = b.customer_id where ranking <= 3 order by a.name, b.customer_id, b.order_date desc
select b.name as customer_name, a.customer_id, a.order_id, a.order_date from (select order_id, order_date, customer_id, rank()over(partition by customer_id order by order_date desc) as recent_order from orders) as a left join customers b on a.customer_id = b.customer_id where recent_order <=3 order by b.name,a.customer_id,a.order_date desc
select b.name as customer_name, b.customer_id, a.order_id, a.order_date from (select *, rank() over (partition by customer_id order by order_date desc) as RK from orders ) a left join customers b on a.customer_id=b.customer_id where a.RK<=3 order by customer_name, customer_id, order_date desc
select b.name as customer_name, b.customer_id, a.order_id, a.order_date from (select order_id, order_date, customer_id, row_number() over (partition by customer_id order by order_date desc) rownums from orders) a inner join customers b on a.customer_id = b.customer_id where a.rownums <4 order by customer_name, b.customer_id, order_date desc
select b.name as customer_name,a.customer_id,a.order_id,a.order_date from (select customer_id,order_id,order_date from (select customer_id,order_id,order_date,dense_rank() over(partition by customer_id order by order_date desc) as the_rank from Orders)a where the_rank<=3)a left join Customers b on a.customer_id=b.customer_id order by b.name,a.customer_id,order_date desc
select b.name customer_name, a.* from ( select customer_id, order_id, order_date from ( select customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) rk from Orders ) T where rk <= 3 ) a join Customers b on a.customer_id = b.customer_id order by customer_name, customer_id, order_date desc
select b.name customer_name, a.customer_id, a.order_id, a.order_date from (select customer_id, order_id, order_date,rank() over( partition by customer_id order by order_date desc) hr from Orders group by 1,2,3) a join Customers b using(customer_id) where hr <=3 order by 1,2,a.order_date desc
select c.name as customer_name, a.customer_id, a.order_id, a.order_date from (select *, row_number() over (partition by customer_id order by order_date desc) as rn from orders) a join customers c using (customer_id) where a.rn <= 3 order by 1, 2, 4 desc
select c.name as customer_name, b.customer_id as customer_id, b.order_id as order_id , b.order_date from (Select order_id, order_date,customer_id, dense_rank() over(partition by customer_id order by order_date desc) as ran from orders) b join customers c on b.customer_id = c.customer_id where b.ran <=3 order by c.name asc, b.customer_id asc, b.order_date desc
select c.name as customer_name, b.customer_id as customer_id, b.order_id as order_id , b.order_date from (Select order_id, order_date,customer_id, rank() over(partition by customer_id order by order_date desc) as ran from orders) b join customers c on b.customer_id = c.customer_id where b.ran <=3 order by c.name asc, b.customer_id asc, b.order_date desc
select c.name as customer_name, c.customer_id as customer_id, o.order_id as order_id, o.order_date as order_date from (select customer_id, order_id, order_date, row_number() over(partition by customer_id order by order_date desc) as order_num from orders) o join customers c on c.customer_id = o.customer_id where o.order_num <=3 order by c.name, c.customer_id, o.order_date desc
select c.name as customer_name, c.customer_id as customer_id, tab.order_id as order_id, tab.order_date as order_date from Customers c inner join (select o.customer_id as customer_id, o.order_id as order_id, o.order_date as order_date, rank() over(partition by o.customer_id order by o.order_date desc) as rnk from Orders o ) as tab on c.customer_id = tab.customer_id where rnk <= 3 order by 1, 2, 4 desc
select c.name as customer_name, c.customer_id, b.order_id, b.order_date from Customers c, (select * from (select o.customer_id, o.order_id, o.order_date, row_number() over(partition by o.customer_id order by order_date desc, order_id ) as rn from orders o ) a where rn<=3 order by order_date) b where c.customer_id = b.customer_id order by c.name, customer_id, order_date desc
select c.name as customer_name, c.customer_id, o.order_id, o.order_date from Customers c join ( select customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) rnk from Orders ) o using (customer_id) where rnk <= 3 group by 1,2,3 order by 1, 2, 4 desc
select c.name as customer_name, c.customer_id, o.order_id, o.order_date from Customers c join (select customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) rnk from Orders) o using (customer_id) where rnk <= 3 group by 1,2,3 order by 1, 2, 4 desc
select c.name as customer_name, c.customer_id, o.order_id, o.order_date from Customers c join (select order_id,customer_id, order_date, rank () over (partition by customer_id order by order_date desc) as rank1 from Orders) o on c.customer_id= o.customer_id where rank1<=3 order by customer_name asc, customer_id asc, order_date desc
select c.name as customer_name, c.customer_id, o.order_id, o.order_date from Customers c join Orders o on c.customer_id=o.customer_id where order_date in (select order_date from (select order_date, rank() over(partition by customer_id order by order_date desc) as nr from Orders o2 where o2.customer_id=o.customer_id) temp where nr in (1,2,3)) order by name, customer_id, order_date desc
select c.name as customer_name, c.customer_id, o.order_id, o.order_date from customers c join ( select order_id, order_date, customer_id, cost, rank() over(partition by customer_id order by order_date desc) as order_rank from orders ) as o on o.customer_id = c.customer_id where o.order_rank < 4 order by c.name, c.customer_id, o.order_date desc
select c.name as customer_name, c.customer_id, o.order_id, order_date from Customers c join (select o1.customer_id, o1.order_id, order_date, row_number() over (partition by o1.customer_id order by o1.order_date desc) as row_ from Orders o1) o on c.customer_id = o.customer_id where o.row_ < 4 order by customer_name asc, c.customer_id asc, order_date desc
select c.name as customer_name, c.customer_id, o1.order_id, o1.order_date from customers as c join orders as o1 on c.customer_id = o1.customer_id join orders as o2 on o1.customer_id = o2.customer_id and o1.order_date<=o2.order_date group by 1, 2, 3, 4 having count(o2.order_date)<=3 order by 1, 2, 4 desc
select c.name as customer_name, c.customer_id, t.order_id, t.order_date from customers c join (select rank() over(partition by customer_id order by order_date desc, order_id asc) as rown, customer_id, order_date, order_id, cost from orders)t on t.customer_id = c.customer_id where t.rown<=3 order by c.name, c.customer_id, t.order_date desc
select c.name as customer_name, c.customer_id, t1.order_id, t1.order_date from ( select *, rank() over(partition by customer_id order by order_date desc) as rk from orders ) t1 join customers c on t1.customer_id = c.customer_id where t1.rk <= 3 order by c.name, c.customer_id, t1.order_date desc
select c.name as customer_name, c.customer_id, t1.order_id, t1.order_date from (select customer_id, order_date, order_id, rank () over (partition by customer_id order by order_date desc) as rnk from orders) as t1 left join customers as c on t1.customer_id=c.customer_id where t1.rnk<=3 order by customer_name asc, c.customer_id asc, t1.order_date desc
select c.name as customer_name, c.customer_id, tb.order_id, tb.order_date from ( select customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) as rnk from orders ) tb join customers c on c.customer_id=tb.customer_id where rnk < 4 order by name, customer_id, order_date desc
select c.name as customer_name, o.customer_id as customer_id, o.order_id as order_id, o.order_date as order_date from orders o join customers c on o.customer_id = c.customer_id where 3 > (select count(distinct order_date) from orders where customer_id = o.customer_id and order_date > o.order_date) order by c.name, o.customer_id, o.order_date desc
select c.name as customer_name, o.customer_id, o.order_id , o.order_date from (select customer_id,order_id, order_date, rank() over(partition by customer_id order by order_date desc) rnk from Orders) o join Customers c using(customer_id) where rnk between 1 and 3 order by 1,2,4 DESC
select c.name as customer_name, o.customer_id, o.order_id, o.order_date from Customers c join ( select order_id, order_date, customer_id, rank() over (partition by customer_id order by order_date desc) rn from Orders ) o on o.customer_id = c.customer_id and rn <= 3 order by c.name asc, o.customer_id asc, order_date desc
select c.name as customer_name, o.customer_id, o.order_id, o.order_date from customers as c join( select customer_id, order_id, order_date, dense_rank()over(partition by customer_id order by order_date desc) as ordrank from orders )o using (customer_id) where ordrank<=3 order by customer_name, o.customer_id, o.order_date desc
select c.name as customer_name, o.customer_id, o.order_id, o.order_date from customers c, ( select customer_id, order_id, order_date, row_number() over(partition by customer_id order by order_date desc) as rk from orders ) o where c.customer_id = o.customer_id and o.rk <= 3 order by c.name, o.customer_id, o.order_date desc
select c.name as customer_name, o.customer_id, o.order_id, o.order_date from orders o join customers c on c.customer_id = o.customer_id where 3 > (select count(t.order_date) from orders t where o.order_date < t.order_date and o.customer_id = t.customer_id) order by c.name, o.customer_id, o.order_date desc
select c.name as customer_name, r.customer_id, r.order_id, r.order_date from ( select order_id, order_date, customer_id, rank() over (partition by customer_id order by order_date desc) ranking from Orders) r join Customers c on c.customer_id = r.customer_id where r.ranking <=3 order by c.name, r.customer_id, r.order_date desc
select c.name as customer_name, t.customer_id, t.order_id, t.order_date from ( select customer_id, order_id, order_date , dense_rank() over(partition by customer_id order by order_date desc) as rnk from orders ) t right join customers c using(customer_id) where t.rnk between 1 and 3 order by 1 asc, 2 asc, 4 desc
select c.name as customer_name, t1.customer_id,t1.order_id,t1.order_date from Customers c left join (select *, row_number()over(partition by customer_id order by order_date DESC)as rk from Orders o)t1 on c.customer_id=t1.customer_id where rk<=3 order by customer_name, customer_id,order_date DESC
select c.name as customer_name,c.customer_id,order_id,order_date from orders o join customers c on c.customer_id=o.customer_id where 2>=(select count(distinct order_date) from orders where o.customer_id=customer_id and o.order_date<order_date) order by 1,2,4 desc
select c.name as customer_name,customer_id, order_id, order_date from ( select customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) as rnk from orders ) a inner join customers c using(customer_id) where rnk in (1,2,3) order by 1,2,4 desc
select c.name as customer_name,o.customer_id,o.order_id,o.order_date from customers c join (select order_id,order_date,customer_id,rank() over(partition by customer_id order by order_date desc)as count_value from orders)o on c.customer_id=o.customer_id where o.count_value<=3 order by customer_name,c.customer_id,o.order_date desc
select c.name as customer_name,t2.customer_id,t2.order_id,t2.order_date from (select t.customer_id,t.order_id,t.order_date from (select customer_id,order_id,order_date,rank() over (partition by customer_id order by order_date desc) as rnk from Orders)as t where t.rnk<=3) as t2 join Customers c on t2.customer_id = c.customer_id order by customer_name,t2.customer_id,t2.order_date desc
select c.name customer_name, c.customer_id, o.order_id, o.order_date from Customers c inner join (select order_id, order_date, customer_id, rank() over(partition by customer_id order by order_date desc) rnk from Orders ) o on c.customer_id = o.customer_id where o.rnk < 4 order by customer_name, customer_id, order_date desc
select c1.name as customer_name, c1.customer_id,c1.order_id, c1.order_date from (select name, order_id, order_date, o.customer_id, rank() over (partition by o.customer_id order by order_date desc) as order_rank from orders o left join customers c on c.customer_id = o.customer_id) c1 where c1.order_rank < 4 order by c1.name, c1.customer_id, c1.order_date desc
select cust.name as customer_name ,cust.customer_id as customer_id ,ord.order_id as order_id ,ord.order_date as order_date from Customers cust join ( select customer_id ,order_id ,order_date ,dense_rank() over (partition by customer_id order by order_date desc) as rk from Orders ) ord on cust.customer_id = ord.customer_id where ord.rk <= 3 order by customer_name, customer_id,order_date desc
select customer_name , customer_id , order_id , order_date from ( select c.name as customer_name, o.customer_id , o.order_id , o.order_date ,dense_rank() over(partition by customer_id order by order_date desc, name asc, customer_id asc, order_date desc) as rn from Customers c join Orders o on c.customer_id=o.customer_id ) a where a.rn<4 order by 1,2,4 desc
select customer_name, customer_id, order_id, order_date FROM ( select name customer_name, c.customer_id, order_id, order_date, RANK() OVER ( PARTITION by c.customer_id order by order_date desc) AS ranki from customers c inner join orders o on c.customer_id = o.customer_id) temp where ranki <=3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date FROM (select name as customer_name, o.customer_id, o.order_id, o.order_date, rank() over(partition by o.customer_id order by order_date desc) rank1 from orders o join customers c on c.customer_id=o.customer_id) temp where rank1<=3 order by customer_name asc, customer_id asc, order_date desc
select customer_name, customer_id, order_id, order_date from ( select A.name as customer_name, A.customer_id, B.order_id, B.order_date, rank() over (partition by A.customer_id order by B.order_date DESC) as rnk from Customers A inner join Orders B on A.customer_id = B.customer_id order by customer_name, customer_id, order_date desc ) as sub where sub.rnk <= 3
select customer_name, customer_id, order_id, order_date from ( select C.name as customer_name, O.customer_id, O.order_id, O.order_date, dense_rank() over(partition by O.customer_id order by O.order_date desc) as rnk from Orders O left join Customers C on O.customer_id = C.customer_id ) TBL where rnk <= 3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from ( select b.name as customer_name, a.customer_id, a.order_id, a.order_date, rank() over (partition by a.customer_id order by a.order_date desc) as rnk from orders a join customers b on a.customer_id = b.customer_id ) t where rnk <= 3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from ( select c.name as customer_name, c.customer_id as customer_id, o.order_id as order_id, o.order_date as order_date, DENSE_RANK() OVER(PARTITION BY c.customer_id ORDER BY order_date DESC) recent_ord from customers c inner join orders o on c.customer_id = o.customer_id) t where t.recent_ord <=3 order by customer_name ASC ,customer_id ASC ,order_date DESC
select customer_name, customer_id, order_id, order_date from ( select c.name as customer_name, c.customer_id, o.order_id, o.order_date, rank() over (partition by o.customer_id order by o.order_date desc ) as rn from Customers c join Orders o on c.customer_id= o.customer_id) a where a.rn <=3 order by customer_name, customer_id, order_date DESC
select customer_name, customer_id, order_id, order_date from ( select c.name as customer_name, c.customer_id, o.order_id, o.order_date, row_number() over(partition by c.customer_id order by o.order_date desc) as nrow from Orders as o left join Customers as c using (customer_id) ) sub where nrow <= 3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from ( select c.name as customer_name, o.customer_id, o.order_id, o.order_date, dense_rank() over (partition by o.customer_id order by order_date desc) as rk from Customers c join Orders o using(customer_id) ) t where rk <= 3 order by 1, 2, 4 desc
select customer_name, customer_id, order_id, order_date from ( select c.name as customer_name, o.customer_id, o.order_id, o.order_date, rank() over (partition by o.customer_id order by order_date desc) as rk from orders o left join customers c on c.customer_id = o.customer_id )src where rk <= 3 order by 1, 2, 4 desc
select customer_name, customer_id, order_id, order_date from ( select cusinfo.name as customer_name, ord.customer_id, ord.order_id, ord.order_date, rank() over (partition by ord.customer_id order by ord.order_date desc) as rk from Orders ord left join Customers cusinfo on ord.customer_id = cusinfo.customer_id ) tmp where rk <= 3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from ( select name as customer_name, a.customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date desc) as rnk from orders a inner join customers b using (customer_id)) t where rnk<=3 order by 1,2,4 desc
select customer_name, customer_id, order_id, order_date from ( select name as customer_name, c.customer_id, o.order_id, o.order_date, rank() over (partition by customer_id order by order_date desc) as rk from Orders o join Customers c on o.customer_id = c.customer_id ) x where rk <= 3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from ( select name as customer_name, o.customer_id, order_id, order_date, dense_rank() over (partition by o.customer_id order by order_date desc) as rn from orders o join customers c on o.customer_id = c.customer_id ) subq where rn < 4 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from ( select name as customer_name, o.customer_id, order_id, order_date, row_number() over(partition by customer_id order by name, customer_id, order_date desc) as rn from Orders o left join Customers c on o.customer_id = c.customer_id) t where rn <= 3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from ( select name as customer_name, o.customer_id, order_id,order_date, dense_rank() over(partition by customer_id order by order_date desc) as rnk from Orders o left join Customers c using(customer_id) ) t where rnk = 1 or rnk = 2 or rnk = 3 order by 1, 2, 4 desc
select customer_name, customer_id, order_id, order_date from ( select name as customer_name, o.customer_id, order_id,order_date, rank() over(partition by customer_id order by order_date desc) as rnk from Orders o left join Customers c using(customer_id) ) t where rnk <= 3 order by 1, 2, 4 desc
select customer_name, customer_id, order_id, order_date from ( select name customer_name, o.customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) rnk from orders o join customers c on o.customer_id = c.customer_id )z where rnk in (1,2,3) order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from ( select o.customer_id, order_id, order_date, c.name customer_name, rank() over(partition by customer_id order by order_date desc) rnk from orders o join customers c on o.customer_id = c.customer_id ) tb where rnk <= 3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from (select b.name as customer_name, a.customer_id, a.order_id, a.order_date, row_number() over (partition by a.customer_id order by a.order_date desc) as latest from Orders a join Customers b on a.customer_id=b.customer_id) d where latest <=3 ORDER BY customer_name,customer_id,order_date DESC
select customer_name, customer_id, order_id, order_date from (select c.name "customer_name", c.customer_id, o.order_id, o.order_date, rank() over (partition by o.customer_id order by o.order_date desc) "date_rank" from customers c join orders o on c.customer_id = o.customer_id group by 1, 2, 4 order by 1, 2, 4 desc ) result_table where date_rank < 4
select customer_name, customer_id, order_id, order_date from (select c.name as customer_name, o.customer_id, o.order_id, o.order_date, RANK() OVER(Partition by o.customer_id order by o.order_date desc) as rnk from Customers c JOIN Orders o ON c.customer_id = o.customer_id) t where rnk <= 3 order by customer_name asc, customer_id asc, order_date desc
select customer_name, customer_id, order_id, order_date from (select name as customer_name, Orders.customer_id, order_id, order_date, rank( ) over (partition by customer_id order by order_date desc) rank_num from Orders left join Customers on Orders.customer_id = Customers.customer_id) tbl where rank_num <=3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from (select name as customer_name, c.customer_id, o.order_id, order_date, dense_rank() over(partition by c.customer_id order by order_date desc) as rnk from customers c inner join orders o using(customer_id)) tmp where rnk<=3 order by 1,2,4 desc
select customer_name, customer_id, order_id, order_date from (select name as customer_name, c.customer_id, order_id, order_date, rank() over (partition by c.customer_id order by order_date desc) as rn from customers c join orders o on o.customer_id = c.customer_id)a where a.rn <=3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from (select name as customer_name, o.customer_id, order_id, order_date, rank() over (partition by o.customer_id order by order_date desc) as r from orders o left join customers c on o.customer_id = c.customer_id) a where r < 4 order by 1,2,4 desc
select customer_name, customer_id, order_id, order_date from (select name customer_name, c.customer_id, order_id, order_date, rank() over(partition by c.customer_id order by order_date desc) `rank` from customers c inner join orders o on c.customer_id = o.customer_id) temp where `rank` <=3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from (select name customer_name, c.customer_id, order_id, order_date, rank() over(partition by c.customer_id order by order_date desc) rank1 from customers c inner join orders o on c.customer_id = o.customer_id) temp where rank1 <=3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from( select b.name as customer_name,a.customer_id, a.order_id, a.order_date, rank() over(partition by customer_id order by order_date desc ) as rnk from Orders a left join Customers b on a.customer_id=b.customer_id ) t where t.rnk=1 or t.rnk=2 or t.rnk=3 order by customer_name, customer_id, order_date desc
select customer_name, customer_id, order_id, order_date from( select c.name as customer_name,c.customer_id,order_id,order_date, dense_rank()over(partition by c.customer_id order by order_date desc) as rnk from Customers c join Orders o on c.customer_id = o.customer_id) t where rnk <= 3 order by 1,2,4 desc
select customer_name, customer_id, order_id, order_date from( select name as customer_name, o.customer_id, order_id, order_date, rank() over (partition by o.customer_id order by order_date desc) as rnk from Customers c join Orders o on c.customer_id = o.customer_id ) as cte where rnk <= 3 order by 1, 2, 4 desc
select customer_name, customer_id,order_id,order_date from (select c.name as customer_name, c.customer_id,o.order_id,o.order_date, rank() over (partition by o.customer_id order by o.order_date desc) as "rnk" from Customers c join orders o on c.customer_id = o.customer_id group by 1,2,4 order by 1,2,4 desc ) result where rnk < 4
select customer_name,customer_id ,order_id,order_date from ( select c.name as customer_name, o.customer_id, (o.order_id), o.order_date, dense_rank() over(partition by customer_id order by order_date desc) as rnk from Customers c join Orders o on c.customer_id=o.customer_id order by customer_name,customer_id,order_date desc) a where rnk<=3
select customer_name,customer_id, order_id,order_date from ( select name as customer_name, o.customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) as rnk from Orders o join customers c on o.customer_id = c.customer_id)a where rnk <=3 order by customer_name,customer_id, order_date desc
select customer_name,customer_id, order_id,order_date from (select name as customer_name, orders.customer_id as customer_id,order_id as order_id, order_date as order_date, rank() over (partition by customer_id order by order_date desc) as rnk from orders join customers on orders.customer_id = customers.customer_id ) temp where rnk = 1 or rnk = 2 or rnk = 3 order by customer_name, customer_id, order_date desc
select customer_name,customer_id,order_id,order_date from (select b.name as customer_name, a.customer_id, a.order_id, a.order_date, row_number() over (partition by a.customer_id order by order_date desc) as r from orders as a join Customers as b on a.customer_id=b.customer_id) as c where r<=3 order by customer_name, customer_id, order_date desc
select customer_name,customer_id,order_id,order_date from (select c.name as customer_name,c.customer_id,o.order_id,o.order_date,dense_rank() over(partition by customer_id order by order_date desc) as rk from orders o join customers c on o.customer_id=c.customer_id)t where rk<=3 order by 1,2,4 desc
select customer_name,customer_id,order_id,order_date from (select name as customer_name, o.customer_id, order_id, order_date, dense_rank() OVER (PARTITION BY name,o.customer_id ORDER BY order_date desc) as rank_ from customers c, orders o where o.customer_id = c.customer_id) as A where rank_<=3 order by customer_name asc, customer_id asc, order_date desc
select customer_name,customer_id,order_id,order_date from(select c.name as customer_name, c.customer_id, o.order_id, o.order_date, dense_rank() over(partition by customer_id order by order_date desc) rnk from Customers c join Orders o using(customer_id) order by customer_name,customer_id,order_date desc)a where rnk<=3
select customers.name as customer_name ,customers.customer_id customer_id ,orders.order_id order_id ,orders.order_date order_date from Customers customers join( select order1.customer_id ,order1.order_date ,count(distinct order2.order_date) as cnt from Orders order1 join Orders order2 on order1.customer_id = order2.customer_id and order1.order_date <= order2.order_date group by customer_id,order1.order_date having cnt<=3 ) ro on customers.customer_id = ro.customer_id join Orders orders on orders.customer_id = ro.customer_id and orders.order_date = ro.order_date order by customer_name,customer_id,order_date desc
select distinct name as customer_name, t.customer_id, t.order_id, t.order_date from (select *, rank() over (partition by customer_id order by order_date desc) as recent_order_rank from Orders order by customer_id, order_date desc) t left join Customers c on t.customer_id = c.customer_id where t.recent_order_rank <= 3 order by customer_name, customer_id, order_date desc
select m.customer_name, m.customer_id, m.order_id, m.order_date from ( select a.name as customer_name, a.customer_id, b.order_id, b.order_date, dense_rank() over (partition by a.customer_id order by b.order_date desc) as rnk from Customers a inner join Orders b on a.customer_id=b.customer_id ) m where m.rnk in (1,2,3) order by m.customer_name, m.customer_id, m.order_date desc
select name Customer_name, customer_id, order_id, order_date from( select c.name, c.customer_id, o.order_id, o.order_date, rank() over(PARTITION BY customer_id order by order_date DESC) as rnk from Orders o join Customers c on o.customer_id = c.customer_id) x where rnk <= 3 order by name asc, customer_id asc, order_date desc
select name as 'customer_name' ,c.customer_id ,order_id ,order_date from customers c inner join orders o on c.customer_id=o.customer_id where 3>( select count(distinct order_date) from customers c1 inner join orders o1 on c1.customer_id=o1.customer_id where c.customer_id=c1.customer_id and o1.order_date>o.order_date ) order by name,c.customer_id,order_date desc
select name as 'customer_name', customer_id, order_id, order_date from ( select c.name, c.customer_id, o.order_id, o.order_date, dense_rank() over(partition by customer_id order by order_date desc) as 'c_rank' from orders o left join customers c on c.customer_id = o.customer_id ) as A where c_rank <= 3 order by customer_name, customer_id, order_date desc
select name as 'customer_name', customer_id, order_id, order_date from ( select c.name, c.customer_id, o.order_id, o.order_date, dense_rank() over(partition by customer_id order by order_date desc) as 'c_rank', '3' as 'num_set' from orders o left join customers c on c.customer_id = o.customer_id ) as A where num_set - c_rank >= 0 order by customer_name, customer_id, order_date desc
select name as 'customer_name',customer_id , order_id, order_date from (select c.customer_id , c.name, o.order_id, o.order_date, rank() over(partition by o.customer_id order by o.order_date desc) as rnk from customers c join orders o on c.customer_id = o.customer_id) a where a.rnk <4 order by a.name, a.customer_id ,a.order_date desc
select name as customer_name , c.customer_id , o.order_id , order_date from orders o join customers c on c.customer_id = o.customer_id join (select order_id , rank() over(partition by customer_id order by order_date desc) as o_rank from orders) r on r.order_id = o.order_id where o_rank <=3 order by 1, 2, 4 desc
select name as customer_name , customer_id , order_id , order_date from ( select c.name , c.customer_id , o.order_id , o.order_date , rank() over(partition by o.customer_id order by o.order_date desc) as rnk from customers c join orders o on o.customer_id=c.customer_id ) tmp where tmp.rnk <= 3 order by 1, 2, 4 desc
select name as customer_name , customer_id , order_id , order_date from ( select name , o.customer_id , o.order_id , o.order_date , row_number() over(partition by customer_id order by order_date desc) as seq from orders o join customers c on o.customer_id = c.customer_id) x where seq < 4 order by 1 , 2, 4 desc
select name as customer_name , customer_id , order_id , order_date from ( select name , o.customer_id , order_id , order_date , rank() over (partition by customer_id order by order_date desc) as rn from Orders o join Customers c on o.customer_id=c.customer_id) a where rn<=3 order by customer_name,customer_id,order_date desc
select name as customer_name , customer_id , order_id , order_date from ( select name , o.customer_id , order_id , order_date , row_number() over (partition by customer_id order by order_date desc) as rn from Orders o join Customers c on o.customer_id=c.customer_id) a where rn<=3 order by customer_name,customer_id,order_date desc
select name as customer_name ,c.customer_id, order_id,order_date from ( select o1.order_id, o1.customer_id,o1.order_date from Orders o1 join Orders o2 on o1.customer_id = o2.customer_id and o1.order_date <=o2.order_date group by o1.order_id having count(o2.order_id)<=3)a join Customers c on a.customer_id = c.customer_id order by customer_name,c.customer_id,order_date desc
select name as customer_name, c.customer_id, o1.order_id, o1.order_date from Customers c inner join Orders o1 on c.customer_id=o1.customer_id inner join Orders o2 on (o1.customer_id=o2.customer_id and o1.order_date<=o2.order_date) group by c.customer_id, o1.order_date having count(o2.order_date)<=3 order by name, customer_id, order_date desc
select name as customer_name, c.customer_id, order_id, order_date from customers c left join (select *, rank() over(partition by customer_id order by order_date desc) as order_rank from orders) o on c.customer_id=o.customer_id where order_rank <= 3 order by name, c.customer_id, order_date desc
select name as customer_name, c.customer_id, order_id, order_date from(select customer_id,order_id,order_date, dense_rank()over(partition by customer_id order by order_date desc) as rnk from Orders)t inner join Customers as c on t.customer_id = c.customer_id where rnk <= 3 order by name asc, customer_id asc, order_date desc
select name as customer_name, cust.customer_id, order_id, order_date from Customers cust JOIN (select order_date, customer_id, order_id, rank() over(PARTITION BY customer_id Order by order_date desc) as rnk from Orders) temp ON cust.customer_id = temp.customer_id where rnk < 4 Order by customer_name asc, customer_id asc, order_date desc
select name as customer_name, cust.customer_id, order_id, order_date from Customers cust JOIN (select order_date, customer_id, order_id, rank() over(PARTITION BY customer_id Order by order_date desc) as rnk from Orders) temp ON rnk < 4 AND cust.customer_id = temp.customer_id Order by customer_name asc, customer_id asc, order_date desc
select name as customer_name, customer_id , order_id , order_date from ( select orders.*, Customers.name, rank() over (partition by orders.customer_id order by order_date desc) as rk_o from orders, Customers where orders.customer_id = Customers.customer_id) temp where rk_o <= 3 order by customer_name,customer_id,order_date desc
select name as customer_name, customer_id, order_id, order_date from ( select c.name , c.customer_id, o.order_id, Order_date, RANK() OVER(PARTITION BY c.customer_id ORDER BY o.order_date DESC) order_rank from customers c join orders o on c.customer_id = o.customer_id) r where order_rank <=3 order by name, customer_id,order_date desc
select name as customer_name, customer_id, order_id, order_date from ( select c.name, c.customer_id, o.order_id, o.order_date, dense_rank() over(partition by customer_id order by order_date desc) as ran from Orders o join Customers c on o.customer_id = c.customer_id) a where ran <= 3 order by customer_name,customer_id,order_date desc
select name as customer_name, customer_id, order_id, order_date from ( select c.name, o.customer_id, o.order_id, o.order_date, rank () over (partition by customer_id order by order_date desc) as rank_ from orders o left join customers c on o.customer_id=c.customer_id) as a where rank_<=3 order by 1, 2, 4 desc
select name as customer_name, customer_id, order_id, order_date from ( select c.name, o.customer_id, o.order_id, o.order_date, rank() over (partition by o.customer_id order by o.order_date desc) as r from orders o left join customers c on o.customer_id = c.customer_id )a where a.r <= 3 order by 1,2, 4 desc
select name as customer_name, customer_id, order_id, order_date from ( select c.name, o.customer_id, o.order_id, o.order_date, rank() over (partition by o.customer_id order by o.order_date desc) as rnk from Orders o join Customers c on o.customer_id=c.customer_id ) a where rnk<=3 order by 1 asc, 2 asc, 4 desc
select name as customer_name, customer_id, order_id, order_date from ( select name, o.customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date desc) as rnk from Orders o left join Customers c on o.customer_id = c.customer_id) sub where rnk <=3 order by 1, 2, 4 desc
select name as customer_name, customer_id, order_id, order_date from ( select name, o.customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) ranks from orders o left join customers c on o.customer_id = c.customer_id )t where ranks <= 3 order by name, customer_id, order_date desc
select name as customer_name, customer_id, order_id, order_date from (select *, dense_rank() over (partition by c.customer_id order by order_date desc) as rnk from Customers as c join Orders as o using(customer_id)) a where a.rnk <=3 order by 1,2,4 desc
select name as customer_name, customer_id, order_id, order_date from (select c.customer_id, c.name,o.order_id,o.order_date, rank() over(partition by o.customer_id order by order_date desc) as rnk from orders o join customers c on c.customer_id = o.customer_id) a where rnk<=3 order by name,customer_id,order_date desc
select name as customer_name, customer_id, order_id, order_date from (select c.name, o.customer_id, o.order_id, o.order_date, rank() over (partition by o.customer_id order by o.order_date DESC) as ranking from customers c join orders o on c.customer_id=o.customer_id) r where ranking<=3 order by customer_name,customer_id,order_date DESC
select name as customer_name, customer_id, order_id, order_date from (select c.name, o.customer_id, o.order_id, o.order_date, rank()over(partition by customer_id order by order_date desc) as rown from orders o left join customers c on o.customer_id = c.customer_id) ord where rown < 4 order by name, customer_id, order_date desc
select name as customer_name, customer_id, order_id, order_date from (select name, a.customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date desc) as ranks from Orders a inner join Customers b using (customer_id))t where ranks <=3 order by 1,2,4 desc
select name as customer_name, customer_id, order_id, order_date from (select name, c.customer_id, order_date, order_id, RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) rnk from Customers c join Orders o on c.customer_id = o.customer_id ) s where rnk < 4 order by 1 ASC, 2 ASC, 4 DESC
select name as customer_name, customer_id, order_id, order_date from (select name, customer_id, order_id, order_date, ranks, max(ranks) over (partition by customer_id) as max_rank from (select name, a.customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date) as ranks from Orders a inner join Customers b using (customer_id))t1)t2 where (case when max_rank <= 3 then ranks <= max_rank else ranks <= max_rank and ranks > max_rank - 3 end) order by customer_name, customer_id, order_date desc
select name as customer_name, customer_id, order_id, order_date from (select name, o.customer_id, order_id, order_date, dense_rank() over(partition by customer_id order by order_date desc) as dr from orders o left join customers c on o.customer_id = c.customer_id ) t where dr <= 3 order by customer_name, customer_id, order_date desc
select name as customer_name, customer_id, order_id, order_date from (select o.customer_id, order_id, order_date, dense_rank() over (partition by o.customer_id order by order_date desc) as num, name from orders o join customers c on o.customer_id = c.customer_id) a where num <= 3 order by customer_name asc, customer_id asc, order_date desc
select name as customer_name, customer_id, order_id, order_date from (select order_id, order_date, customer_id from (select order_id, order_date, customer_id, dense_rank() over(partition by customer_id order by order_date desc) as rn_max from orders )a where rn_max <= 3 )b join ( select customer_id, name from customers group by 1,2 )c using(customer_id) order by 1,2,4 desc
select name as customer_name, customer_id, order_id, order_date from (select order_id,order_date, o.customer_id, name, rank()over(partition by customer_id order by order_date desc) as ranks from orders as o join customers as c using (customer_id)) as temp where ranks <= 3 order by customer_name, customer_id, order_date desc
select name as customer_name, customer_id, order_id, order_date from (select t1.name, t1.customer_id, t2.order_id, t2.order_date, dense_rank() over(partition by customer_id order by order_date desc) as ranking from Customers as t1 join Orders as t2 on (t1.customer_id = t2.customer_id)) as t where ranking <= 3 order by 1,2,4 desc
select name as customer_name, customer_id, order_id, order_date from( select c.customer_id, c.name, o.order_id, o.order_date, rank() over(partition by c.customer_id order by o.order_date desc) as rnk from Customers c left join Orders o on c.customer_id = o.customer_id) t where rnk <= 3 and order_id is not null order by 1,2, 4 desc
select name as customer_name, customer_id,order_id,order_date from( select name, orders.customer_id,order_id,order_date, row_number() over (partition by customer_id order by order_date DESC) as rownum from orders left join customers on orders.customer_id=customers.customer_id) a where rownum<=3 order by 1,2 ASC, 4 DESC
select name as customer_name, f.customer_id, order_id, order_date from ( select *, row_number() over (partition by customer_id order by order_date desc) as ranked from orders ) f join customers c on c.customer_id = f.customer_id where f.ranked <= 3 order by 1, 2, 4 desc
select name as customer_name, f.customer_id, order_id, order_date from ( select *, row_number() over(partition by customer_id order by order_date desc) as ranked from orders ) f join customers c on c.customer_id = f.customer_id where f.ranked <= 3 order by 1, 2, 4 desc
select name as customer_name, new.customer_id, new.order_id, new.order_date from (select customer_id, order_id, order_date, dense_rank() over(partition by customer_id order by order_date DESC) as "ranks" from orders) new join customers c on new.customer_id = c.customer_id where ranks in (1,2,3) order by customer_name, customer_id,order_date DESC
select name as customer_name, o.customer_id, o.order_id , o.order_date from orders o left join Customers c on c.customer_id = o.customer_id left join orders o1 on o.customer_id = o1.customer_id and o1.order_date>=o.order_date group by o.customer_id,o.order_date having count(distinct o1.order_date)<=3 order by customer_name, customer_id, order_date desc
select name as customer_name, s.customer_id,order_id,order_date from ( select customer_id, order_id,order_date from ( select customer_id, order_id,order_date, rank() over(partition by customer_id order by order_date desc) as ranking from orders) as t where ranking <=3) as s join customers on customers.customer_id = s.customer_id order by 1, 2,4 desc
select name as customer_name, t.customer_id, order_id, order_date from ( select *, rank() over (partition by customer_id order by order_date desc) as rnk from Orders ) as t join Customers as c on t.customer_id= c.customer_id where rnk <= 3 order by customer_name, customer_id, order_date desc
select name as customer_name, t.customer_id, t.order_id, t.order_date from (select *, dense_rank() over(partition by customer_id order by order_date desc) as nrank from Orders) as t left join Customers on t.customer_id = Customers.customer_id where nrank <= 3 order by 1, 2, 4 desc
select name as customer_name,A.customer_id,order_id,order_date from (select *, row_number() over(partition by customer_id order by order_date desc) as order_rank from orders)A inner join Customers C on C.customer_id=A.customer_id and A.order_rank<=3 order by name,customer_id,order_date desc
select name as customer_name,a.customer_id, order_id, date(order_date) as order_date from (select customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date desc) as rk from orders)a inner join Customers c on a.customer_id=c.customer_id and rk<=3 order by name asc, a.customer_id asc, order_date desc
select name as customer_name,customer_id, order_id, order_date from (select c.name, c.customer_id, o.order_id, o.order_date, dense_rank() over (partition by c.customer_id order by o.order_date desc) as rank1 from Customers c join orders o on c.customer_id = o.customer_id) a where rank1 <=3 order by name, customer_id, order_date desc
select name as customer_name,customer_id,order_id,order_date from (select name,O.customer_id,order_id,order_date, dense_rank() over(partition by customer_id order by order_date desc) as ranker from customers C join orders O on C.customer_id = O.customer_id) as T where ranker<=3 order by customer_name asc,customer_id asc, order_date desc
select name as customer_name,customer_id,order_id,order_date from (select o.customer_id,o.order_id,o.order_date, RANK() OVER (PARTITION BY o.customer_id order by o.order_date desc) as rk, c.name from orders o JOIN customers c ON o.customer_id = c.customer_id) t where rk <=3 order by customer_name,customer_id,order_date desc
select name as customer_name,customer_id,order_id,order_date from (select order_id,order_date,a.customer_id,name,cost,rank() over (partition by customer_id order by order_date desc) as rnk from orders a left join customers b on a.customer_id=b.customer_id)c where rnk<=3 order by customer_name, customer_id,order_date desc
select name as customer_name,o1.customer_id,o1.order_id,o1.order_date from orders o1 left join orders o2 on o1.customer_id=o2.customer_id and o1.order_date<=o2.order_date join customers on o1.customer_id=customers.customer_id group by o1.order_id,o1.order_date,o1.customer_id having count(o2.order_date)<=3 order by customer_name,o1.customer_id,o1.order_date desc
select name as customer_name,r_ord.customer_id,r_ord.order_id,r_ord.order_date from Customers cust join (select order_id, order_date, customer_id, dense_rank() over(partition by customer_id order by order_date desc) as r_cust from orders) r_ord on cust.customer_id = r_ord.customer_id where r_cust <= 3 order by name, r_ord.customer_id, r_ord.order_date desc
select name as customer_name,temp.customer_id,order_id,order_date from ( select *,rank() over(partition by customer_id order by order_date desc)as rk from orders ) as temp join customers on temp.customer_id=customers.customer_id where rk<=3 order by customer_name,customer_id,order_date desc
select name customer_name, a.customer_id, order_id, order_date from customers a join (select *, rank() over (partition by customer_id order by order_date desc) rnk from orders ) b using (customer_id) where rnk <= 3 order by 1, 2, 4 desc
select name customer_name, customer_id, order_id, order_date from ( select name, c.customer_id, order_id, order_date, rank() over(partition by o.customer_id order by order_date desc) rnk from customers c join orders o where c.customer_id = o.customer_id ) tmp where rnk <= 3 order by customer_name asc, customer_id asc, order_date desc
select name customer_name, customer_id, order_id, order_date from (select order_id, order_date, o.customer_id, name, rank() over (partition by customer_id order by order_date desc) as rk from Orders o inner join Customers c on o.customer_id=c.customer_id) as t where rk<=3 order by 1,2,4 desc
select name customer_name, customer_id, order_id, order_date from customers join ( select customer_id, order_id, order_date, dense_rank() over (partition by customer_id order by order_date desc) ranking from orders )t using (customer_id) where ranking <=3 order by 1, 2, 4 desc
select name customer_name, o.customer_id, order_id, order_date from (select *, rank() over(partition by customer_id order by order_date desc) ranked from Orders) o join Customers c on c.customer_id = o.customer_id where ranked <= 3 order by customer_name, customer_id, order_date desc
select name customer_name, t.customer_id, order_id,order_date from ( select customer_id, order_id, order_date, dense_rank() over (partition by customer_id order by order_date desc) rnk from orders) t join customers c on t.customer_id = c.customer_id where rnk <= 3 order by 1, t.customer_id,order_date desc
select name customer_name,customer_id,order_id, order_date from( select name,o.customer_id,o.order_id, o.order_date, rank() OVER(partition by o.customer_id order by o.order_date desc) r from orders o inner join customers c on c.customer_id = o.customer_id ) t where t.r<=3 order by name, customer_id, order_date desc
select name customer_name,customer_id,order_id,order_date from(select c.name,o.customer_id,o.order_id,o.order_date, dense_rank() over (partition by o.customer_id order by order_date desc)rnk from orders o join customers c on o.customer_id = c.customer_id)aa where rnk <=3 order by customer_name,customer_id,order_date desc
select name customer_name,u.customer_id,order_id,order_date from customers u join ( select customer_id,order_id,order_date, dense_rank() over (partition by customer_id order by order_date desc) orderr from orders ) o on u.customer_id=o.customer_id where orderr <4 order by 1,2, 4 desc
select p.name as customer_name, p.customer_id, p.order_id, p.order_date from( select c.name, c.customer_id, o.order_id, o.order_date, dense_rank() over (partition by c.customer_id order by o.order_date desc) as rk from customers c inner join orders o using(customer_id)) p where p.rk <= 3 order by p.name asc, p.customer_id asc, p.order_date desc
select sub.name as customer_name, sub.customer_id,sub.order_id,sub.order_date from (select name,customer_id,order_id,order_date, rank() over (Partition by customer_id order by order_date desc) as rnk from Orders LEFT JOIN Customers using(customer_id)) sub where sub.rnk <= 3 order by 1 ASC,2 ASC, 4 DESC
select t.customer_name, t.customer_id, t.order_id, t.order_date from (select c.name as customer_name, o.customer_id, o.order_id, o.order_date, RANK() over (partition by o.customer_id order by o.order_date desc) as rnk from Orders o inner join customers c on o.customer_id = c.customer_id) as t where rnk <4 order by t.customer_name, t.customer_id, t.order_date desc
select t1.name as customer_name, t1.customer_id, t2.order_id, t2.order_date from Customers t1 left join (select order_id, order_date, customer_id, dense_rank() over(partition by customer_id order by order_date DESC) as rk from Orders) t2 on t1.customer_id = t2.customer_id where rk <= 3 order by 1,2,4 DESC
with O as ( select order_id, order_date, customer_id, row_number() over(partition by customer_id order by order_date desc) as rn from Orders ) select C.name as customer_name, C.customer_id, O.order_id, O.order_date from Customers as C inner join O on C.customer_id=O.customer_id where O.rn<=3 order by C.name asc, C.customer_id asc, O.order_date desc
with a as ( select customer_id, order_id, order_date, (rank() over (partition by customer_id order by order_date desc)) nr from Orders) select c.name as customer_name, a.customer_id, a.order_id, a.order_date from a join Customers c on a.customer_id=c.customer_id where a.nr<=3 order by 1 asc, 2 asc, 4 desc
with c_order as ( select name, c.customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) as rk from Customers c inner join Orders o on c.customer_id = o.customer_id ) select name as customer_name, customer_id, order_id, order_date from c_order where rk <= 3 order by 1, 2, 4 desc
with cte AS ( SELECT *, rank () over (partition by customer_id order by order_date desc) as rk FROM orders ) SELECT c.name as customer_name, cte.customer_id, cte.order_id, cte.order_date FROM cte JOIN customers as c ON cte.customer_id = c.customer_id WHERE rk <= 3 ORDER BY 1, 2, 4 desc
with cte AS(SELECT c.name as customer_name, o.customer_id as customer_id, o.order_id as order_id, o.order_date as order_date, RANK() OVER (PARTITION BY customer_id ORDER BY order_date DESC) as rk FROM Orders o LEFT JOIN Customers c ON o.customer_id = c.customer_id ORDER BY customer_name,customer_id, order_date DESC) SELECT customer_name, customer_id, order_id, order_date FROM cte WHERE rk <= 3
with cte as ( SELECT *, DENSE_RANK()OVER(PARTITION BY customer_id ORDER BY order_date DESC) as 'RNK' FROM Orders ) SELECT c.name as customer_name , cte.customer_id , order_id, order_date FROM Customers c JOIN cte USING(customer_id) WHERE RNK<=3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
with cte as ( SELECT *, DENSE_RANK()OVER(PARTITION BY o.customer_id ORDER BY order_date DESC) as 'RNK' FROM Orders o JOIN Customers c USING(customer_id)) SELECT name as customer_name, customer_id, order_id, order_date FROM cte WHERE RNK<=3 ORDER BY customer_name ASC, customer_id ASC, order_date DESC
with cte as ( SELECT customer_id, order_id, order_date, rank() OVER(PARTITION BY customer_id ORDER BY order_date DESC) as rr FROM Orders ) select name as customer_name, customer_id, order_id, order_date from cte join Customers c USING (customer_id) where rr <= 3 order by customer_name, customer_id, order_date desc
with cte as ( select a.customer_id, a.order_id, a.order_date from (select *, rank() over(partition by customer_id order by customer_id asc, order_date desc) as ranknum from orders) a where a.ranknum <= 3 ) select c.name as customer_name, a.* from customers c join cte a on c.customer_id = a.customer_id order by 1, a.customer_id, a.order_date desc
with cte as ( select c.customer_id, c.name as customer_name, o.order_id, o.order_date from Customers c inner join Orders o on c.customer_id = o.customer_id ) select customer_name, customer_id, order_id, order_date from ( select *, count(order_id) over(partition by customer_id order by order_date desc) as order_rank from cte ) as tmp where order_rank <= 3 order by customer_name, customer_id, order_date desc
with cte as ( select c.name , o.customer_id , o.order_id , o.order_date , dense_rank() over(partition by name, o.customer_id order by order_date desc ) as ranking from orders as o left join Customers as c using (customer_id) ) select name as customer_name , customer_id , order_id , order_date from cte where ranking <= 3 order by 1,2,4 desc
with cte as ( select c.name as customer_name, c.customer_id, o.order_id, o.order_date, dense_rank() over(partition by c.customer_id order by o.order_date desc) as rnk from Customers c inner join Orders o on c.customer_id = o.customer_id ) select customer_name, customer_id, order_id, order_date from cte where rnk <= 3 order by customer_name asc, customer_id asc, order_date desc
with cte as ( select c.name as customer_name,o.customer_id,o.order_id,o.order_date, dense_rank() over(partition by o.customer_id order by order_date desc) as rn from orders o inner join customers c on o.customer_id = c.customer_id ) select customer_name, customer_id, order_id, order_date from cte where rn <= 3 order by 1,2, 4 desc
with cte as ( select c.name, c.customer_id, o.order_date, o.order_id, rank() over(partition by customer_id order by order_date desc) as rk from customers c join orders o on c.customer_id = o.customer_id ) select name as customer_name, customer_id, order_id, order_date from cte where rk<=3 order by customer_name asc, customer_id asc, order_date desc
with cte as ( select c.name, c.customer_id, o.order_date, o.order_id, rank() over(partition by customer_id order by order_date desc) as rk from customers c join orders o on c.customer_id = o.customer_id order by 1 asc, 2 asc, 3 desc ) select name as customer_name, customer_id, order_id, order_date from cte where rk<=3
with cte as ( select c.name, order_id, order_date, o.customer_id, row_number() over ( partition by customer_id order by order_date desc) as rn from Customers c join Orders o on c.customer_id = o.customer_id) select name as customer_name, customer_id, order_id, order_date from cte where rn <= 3 order by 1, 2,4 desc
with cte as ( select customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date desc) as rnk_order from Orders) select c.name as customer_name, c.customer_id, order_id, order_date from cte join Customers c on cte.customer_id = c.customer_id where rnk_order <=3 order by 1 asc,2 asc, 4 desc
with cte as ( select name as customer_name , o.customer_id , order_id , order_date , row_number() over (partition by customer_id order by order_date desc) as purchase from Orders o join Customers c on o.customer_id = c.customer_id ) select customer_name , customer_id , order_id , order_date from cte where purchase < 4 order by customer_name , customer_id ,order_date desc
with cte as ( select name as customer_name ,c.customer_id , order_id,order_date , row_number() over (partition by customer_id order by order_date desc) rn from Orders as o join Customers as c on c.customer_id = o.customer_id ) select customer_name, customer_id,order_id,order_date from cte where rn<=3 order by customer_name asc, customer_id asc , order_date desc
with cte as ( select order_id, customer_id, order_date, rank() over(partition by customer_id order by order_date desc) as recency from Orders ) select name as customer_name,C.customer_id, order_id, order_date from Customers C left join cte T on C.customer_id = T.customer_id where recency <= 3 order by customer_name, customer_id, order_date desc
with cte as ( select order_id, order_date, customer_id, cost, row_number() over(partition by customer_id order by order_date desc) as rownumber from Orders ) select c.name as customer_name, o.customer_id, o.order_id, o.order_date from cte as o join Customers as c on (o.customer_id = c.customer_id) where rownumber<=3 order by c.name, o.customer_id, o.order_date desc
with cte as ( select order_id, order_date,customer_id, RANK() over (partition by customer_id order by order_date desc) as rnk from Orders) select c.name as customer_name, cte.customer_id, cte.order_id,cte.order_date from cte left join Customers c on cte.customer_id = c.customer_id where rnk <= 3 order by customer_name asc, customer_id asc, order_date desc
with cte as ( select order_id,order_date,name,c.customer_id, row_number() over(partition by customer_id order by order_date desc) as rn from Customers c join Orders o on c.customer_id = o.customer_id) select name as customer_name, customer_id, order_id, order_date from cte where rn <= 3 order by 1,2,4 desc
with cte as ( select orders.customer_id, orders.order_id, orders.order_date, rank()over (partition by orders.customer_id order by orders.order_date desc) as rnk, Customers.name as customer_name from orders join Customers on customers.customer_id = orders.customer_id ) select customer_name , customer_id , order_id , order_date from cte where rnk <= 3 order by 1, 2 asc, order_date desc
with cte as (select *, dense_rank()over(partition by customer_id order by order_date desc) as ranking from orders) select name as customer_name, customer_id, order_id, order_date from cte join customers using (customer_id) where ranking <=3 order by 1 asc, 2 asc, 4 desc
with cte as (select *, rank() over (partition by customer_id order by order_date desc) as r from Orders) select b.name as customer_name, a.customer_id, a.order_id, a.order_date from cte a join Customers b on (a.customer_id = b.customer_id) where r <=3 order by name asc, customer_id asc, order_date desc
with cte as (select *,rank()over(partition by o.customer_id order by order_date desc) as rk from orders as o join customers as c using (customer_id)) select name as customer_name, customer_id, order_id, order_date from cte where rk in (1, 2, 3) order by 1, 2, 4 desc
with cte as (select *,row_number() over(partition by customer_id order by order_date desc) as RN from orders) select name as customer_name, a.customer_id,order_id,order_date from cte a left join customers b on a.customer_id=b.customer_id where RN in (1,2,3) order by name,a.customer_id,order_date desc
with cte as (select a.customer_id , a.order_date, b.name,a.order_id, dense_rank() over(partition by a.customer_id order by order_date desc) as rn from orders a inner join customers b on a.customer_id = b.customer_id) select name as customer_name , customer_id , order_id , order_date from cte where rn <=3 order by name, customer_id, order_date desc
with cte as (select c.name as customer_name, c.customer_id, o.order_id, o.order_date, rank() over (partition by c.customer_id order by o.order_date desc) as 'ranking' from customers as c join orders as o on c.customer_id = o.customer_id) select customer_name, customer_id, order_id, order_date from cte where ranking <= 3 order by customer_name asc, customer_id asc, order_date desc
with cte as (select c.name as customer_name, o.customer_id, o.order_id, o.order_date, rank() over(partition by customer_id order by order_date desc) as flag from Orders o left join Customers c on o.customer_id = c.customer_id) select customer_name, customer_id, order_id, order_date from cte where flag <= 3 group by customer_id, order_id, order_date order by customer_name, customer_id, order_date desc
with cte as (select c.name, o.customer_id, o.order_id, o.order_date, dense_rank() over (partition by o.customer_id order by order_date desc) as rnk from customers c join orders o on c.customer_id = o.customer_id) select name as customer_name, customer_id, order_id, order_date from cte where rnk <= 3 order by 1, 2, 4 desc
with cte as (select c.name,o.order_id,o.order_date,o.customer_id, rank() over(partition by customer_id order by order_date desc) rk from Customers c join Orders o using (customer_id) ) select name as customer_name,customer_id,order_id,order_date from cte where rk<=3 order by 1,2,4 desc
with cte as (select customer_id , order_id , order_date , rank() over ( partition by customer_id order by order_date DESC ) as rnk from Orders) select c.name as customer_name , cte.customer_id , order_id , order_date from cte join Customers c On cte.customer_id = c.customer_id where rnk <=3 order by 1 ASC , 2 ASC , order_date DESC
with cte as (select customer_id, order_id, order_date, dense_rank() over(partition by customer_id order by order_date desc) as rnk from orders) select C.name customer_name, t.customer_id, t.order_id, t.order_date from cte t join customers c using(customer_id) where rnk BETWEEN 1 and 3 order by 1 asc, 2 asc, 4 desc
with cte as (select name as customer_name, orders.customer_id, orders.order_id, rank()over(partition by customer_id order by order_date desc) as rnk, orders.order_date from orders left join customers on orders.customer_id = customers.customer_id) select customer_name, customer_id, order_id, order_date from cte where rnk <=3 order by customer_name asc, customer_id, order_date desc
with cte as( select *, rank() over (partition by customer_id order by order_date desc ) ranking from orders ) select c.name customer_name, c.customer_id, cte.order_id, cte.order_date from customers c join cte on cte.customer_id = c.customer_id where ranking <= 3 order by c.name , c.customer_id, cte.order_date desc
with cte as( select customer_id, order_date, order_id, rank()over(partition by customer_id order by order_date desc) as rnk from orders ) select cc.name as customer_name,c.customer_id, c.order_id, c.order_date from cte c join Customers cc on cc.customer_id = c.customer_id where rnk <=3 order by 1,2,4 desc
with cte as( select customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date desc,order_id asc) as rnk from Orders ) select name as customer_name , cte.customer_id, order_id, order_date from cte join customers c on c.customer_id=cte.customer_id where rnk<=3 order by name asc,customer_id asc,order_date desc
with cte as( select customer_id, order_id, order_date, rank()over(partition by customer_id order by order_date desc) as rk from orders) select c.name as customer_name, c.customer_id, cte.order_id, cte.order_date from cte inner join customers c on cte.customer_id=c.customer_id where rk<=3 order by 1, 2, 4 desc
with cte as( select customer_id,order_id,order_date , DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rnk from orders ) select name AS customer_name, CTE.customer_id as customer_id,order_id,order_date from cte join Customers c on cte.customer_id = c.customer_id where cte.rnk<=3 order by 1 ,2 asc, 4 desc
with cte as( select name as customer_name ,c.customer_id, order_id , order_date, dense_rank()over(partition by c.customer_id order by order_date desc ) as rnk from Customers as c, Orders as o where c.customer_id=o.customer_id ) Select customer_name,customer_id,order_id,order_date from cte where rnk in(1,2,3) order by customer_name asc, customer_id asc, order_date desc
with cte as( select order_id, order_date, o.customer_id, c.name, dense_rank() over (partition by o.customer_id order by order_date desc) as rnk from Orders o left join Customers c on o.customer_id = c.customer_id) select name as customer_name, customer_id, order_id, order_date from cte where rnk<=3 order by name, customer_id, order_date desc
with cte as( select order_id, order_date, o.customer_id, c.name, dense_rank() over (partition by o.customer_id order by order_date desc) as rnk, count(order_id) over (partition by o.customer_id) as cnt from Orders o left join Customers c on o.customer_id = c.customer_id) select name as customer_name, customer_id, order_id, order_date from cte where rnk<=3 order by name, customer_id, order_date desc
with cte as(select c.name,c.customer_id,o.order_id,o.order_date,rank()over(partition by c.customer_id order by o.order_date desc) as rk from customers c join orders o on c.customer_id=o.customer_id) select name as customer_name,customer_id,order_id,order_date from cte where rk<4 order by customer_name,customer_id,order_date desc
with cte as(select name as customer_name, c.customer_id, order_id, order_date, dense_rank() over (partition by customer_id order by order_date desc) rnk from Customers c join Orders o on c.customer_id = o.customer_id) select customer_name, customer_id, order_id, order_date from cte where rnk <=3 order by customer_name, customer_id, order_date desc
with cte1 as (select sub1.customer_id, sub1.order_id, sub1.order_date from (select *, rank() over(partition by od.customer_id order by od.order_date desc) as orderrank from orders od) sub1 where sub1.orderrank <= 3) select cs.name as customer_name, ct1.customer_id, ct1.order_id, ct1.order_date from cte1 ct1 left join customers cs on cs.customer_id = ct1.customer_id order by 1,2 asc, 4 desc
with cte_order_seq as ( select c.name as customer_name, c.customer_id, o.order_id, o.order_date, row_number() over ( partition by customer_id order by order_date desc ) as recent_order_seq from Orders as o join Customers as c on o.customer_id = c.customer_id ) select customer_name, customer_id, order_id, order_date from cte_order_seq where recent_order_seq <= 3 order by 1, 2, 4 desc
with cte_t as ( SELECT b.name as customer_name , a.customer_id , a.order_id , a.order_date, dense_rank() OVER (PARTITION BY a.customer_id order by a.order_date desc) as rk FROM orders a JOIN customers b on a.customer_id=b.customer_id ) SELECT customer_name,customer_id,order_id,order_date FROM cte_t where rk <= 3 ORDER BY 1,2,4 DESC
with cte_t as ( SELECT b.name as customer_name , a.customer_id , a.order_id , a.order_date, row_number() over (PARTITION BY a.customer_id order by a.order_date desc ) as rk FROM orders a JOIN customers b on a.customer_id=b.customer_id ) select customer_name,customer_id,order_id,order_date from cte_t where rk <=3 order by 1, 2, 4 desc
with cust_rank as ( select c.name as customer_name, c.customer_id as customer_id, o.order_id as order_id, o.order_date as order_date, rank() over(partition by customer_id order by order_date desc) as rnk from orders o join customers c on o.customer_id = c.customer_id ) select customer_name, customer_id, order_id, order_date from cust_rank where rnk <= 3 order by customer_name, customer_id, order_date desc
with customer_recent as ( select customer_id, order_id, order_date, dense_rank() over (partition by customer_id order by order_date desc) as "rnks" from orders ) select c.name as "customer_name", cr.customer_id, order_id, order_date from customer_recent cr inner join customers c on c.customer_id = cr.customer_id where rnks <= 3 order by 1, 2, 4 desc
with data_2 as ( select c.name as customer_name, c.customer_id, o.order_id, o.order_date, rank() over (partition by c.customer_id order by o.order_date desc) as rn from customers c join orders o on o.customer_id = c.customer_id order by 1 asc, 2 asc, 4 desc ) select dd.customer_name, dd.customer_id, dd.order_id, dd.order_date from data_2 dd where rn < 4
with etc as (select c.name,c.customer_id,o.order_id,str_to_date(o.order_date,'%Y-%m-%d') as order_date from orders o join customers c on c.customer_id=o.customer_id) , etc2 as(select *, DENSE_RANK() over (partition by a.customer_id order by a.order_date desc) ranking from etc a) select etc2.name as customer_name,etc2.customer_id,etc2.order_id,etc2.order_date from etc2 where etc2.ranking<=3 order by customer_name,customer_id asc,order_date desc
with filter as ( select customer_id, order_id, order_date, rank() over (partition by customer_id order by order_date desc) as rnk from orders ) select c.name as customer_name, f.customer_id, f.order_id, f.order_date from filter f inner join Customers c on f.customer_id = c.customer_id where f.rnk <= 3 order by 1 , 2, 4 desc
with helper_rank as ( select customer_id, order_date, order_id, rank() over (partition by customer_id order by order_date desc) as 'rank' from orders ) select c.name as customer_name, o.customer_id, o.order_id, o.order_date from helper_rank o inner join customers c on o.customer_id = c.customer_id where o.rank < 4 order by customer_name, o.customer_id, o.order_date desc
with o_rank as ( select *, rank() over (partition by customer_id order by order_date desc) as order_rank from orders ), list_df as ( select c.name as customer_name, c.customer_id, o.order_id, o.order_date from customers as c left join (select * from o_rank where order_rank < 4) as o on c.customer_id = o.customer_id order by c.name, c.customer_id, o.order_date desc) select * from list_df where order_id is not null
with ord as(select customer_id, order_id, order_Date, rank() over(partition by customer_id order by order_Date desc) as r from Orders) select c.name as customer_name, o.customer_id, o.order_id, o.order_Date from ord o join customers c on o.customer_id=c.customer_id where o.r<=3 order by c.name asc, o.customer_id asc , o.order_Date desc
with order_rank_table as ( select order_id, order_date, customer_id, rank() over (partition by customer_id order by order_date desc) as order_order from Orders ) select name as customer_name, o.customer_id, order_id, order_date from order_rank_table o join Customers c on c.customer_id = o.customer_id where order_order <= 3 order by 1, 2, 4 desc
with order_ranking as ( select *, row_number() over (partition by customer_id order by order_date desc) rn from Orders ) select c.name as customer_name, c.customer_id, o.order_id, o.order_date from order_ranking o join Customers c on o.customer_id = c.customer_id where rn <=3 order by c.name asc, customer_id asc, order_date desc
with order_results as (select customer_id,order_id, order_date, (rank() over (partition by customer_id order by order_date desc)) as order_rank from Orders) select Customers.name as customer_name, order_results.customer_id, order_results.order_id, order_results.order_date from order_results join Customers on (order_results.customer_id=Customers.customer_id) where order_results.order_rank<4 order by Customers.name, order_results.customer_id, order_results.order_date desc
with ordered_orders as ( select o.*, row_number() over(partition by customer_id order by order_date desc) as row_n from orders o ) select c.name as customer_name, o.customer_id, o.order_id, o.order_date from ordered_orders o left join customers c on c.customer_id = o.customer_id where o.row_n <= 3 order by 1, 2, 4 desc
with orders_rnked as ( select o.*, c.name as customer_name, row_number() over(partition by o.customer_id order by order_date desc) as dt_rnk from Orders o LEFT JOIN Customers c on o.customer_id = c.customer_id ) select customer_name, customer_id, order_id, order_date from orders_rnked where dt_rnk <= 3 order by customer_name, customer_id, order_date desc
with r as ( select name as customer_name, c.customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) as rnk from customers c join orders o using(customer_id) order by 1,2,4 desc ) select customer_name,customer_id,order_id,order_date from r where rnk <= 3
with r as (SELECT customer_id , order_id ,order_date , row_number() over(partition by customer_id order by order_date desc) rnk FROM Orders) SELECT c.name as customer_name, c.customer_id, r.order_id, r.order_date FROM Customers c Join r on c.customer_id=r.customer_id Where r.rnk<=3 order by c.name, c.customer_id, r.order_date desc
with ranked as ( select * , row_number() over(partition by customer_id order by order_date desc) as order_rn from orders ) , top_orders as ( select customer_id, order_id, order_date from ranked where order_rn <= 3 ) select c.name as customer_name , r.customer_id , r.order_id , r.order_date from top_orders as r inner join customers as c on r.customer_id = c.customer_id order by c.name, r.customer_id, r.order_date desc
with ranktable as( select customer_id,order_id, order_date, rank() over(partition by customer_id order by order_date desc) as rnk from Orders) select c.name as customer_name, r.customer_id, r.order_id, r.order_date from ranktable r, customers c where r.customer_id = c.customer_id and r.rnk<=3 order by c.name , r.customer_id, r.order_date desc
with ranktb as ( select *, rank() over (partition by customer_id order by order_date desc) as ranknumber from Orders ) select c.name as customer_name, c.customer_id, order_id, order_date from ranktb join Customers c on ranktb.customer_id = c.customer_id where ranknumber <= 3 order by customer_name, c.customer_id, order_date desc
with recent_order as( select customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) as ranks from orders) select name as customer_name, r.customer_id, order_id, order_date from recent_order as r join customers as c on r.customer_id = c.customer_id where ranks < 4 order by customer_name, customer_id, order_date desc
with t as ( select *, rank() over(partition by customer_id order by order_date desc) ranks from orders ) select name customer_name ,t.customer_id ,order_id ,order_date from t, customers where t.customer_id = customers.customer_id and ranks<=3 order by customer_name, customer_id ,order_date desc
with t as ( select customer_id, order_id, order_date, rank() over(partition by customer_id order by order_date desc) as rnk from Orders ) select c.name as customer_name, t.customer_id, t.order_id, t.order_date from t left join Customers c on t.customer_id = c.customer_id where t.rnk <= 3 order by customer_name asc, t.customer_id asc, t.order_date desc
with t as ( select order_id, order_date, customer_id, RANK() over (partition by customer_id order by order_date desc) as r from orders ) select c.name customer_name, c.customer_id, t.order_id, t.order_date from t join customers c on t.customer_id=c.customer_id where t.r<4 order by customer_name asc, customer_id asc, order_date desc
with t as ( select order_id, order_date, o.customer_id, name, rank() over(partition by o.customer_id order by order_date desc) as rk from orders o join customers c using(customer_id) ) select name as customer_name, customer_id, order_id, order_date from t where rk <= 3 order by customer_name, customer_id, order_date desc
with t as (select * ,dense_rank() over (partition by customer_id order by order_date desc) as dr from Orders) select c.name as customer_name, t.customer_id, t.order_id, t.order_date from t inner join Customers c on t.customer_id = c.customer_id where dr <= 3 order by 1, 2, 4 desc
with t as (select *, row_number() over(partition by customer_id order by order_date desc) rn from orders) select name customer_name, t.customer_id, order_id, order_date from t join customers c on t.customer_id=c.customer_id and t.rn<=3 order by customer_name, customer_id, order_date desc
with t as (select c.name as customer_name, c.customer_id, o.order_id, o.order_date, rank() over(partition by o.customer_id order by order_date desc) as orank from customers c right join orders o on c.customer_id=o.customer_id) select customer_name, customer_id, order_id, order_date from t where orank<=3 order by customer_name, customer_id, order_date desc
with t as (select name as customer_name , c.customer_id , order_id , order_date, dense_rank()over(partition by c.customer_id order by order_date desc) as rnk from orders as o inner join customers as c on o.customer_id = c.customer_id) select customer_name , customer_id , order_id , order_date from t where rnk <= 3 order by 1,2,4 desc
with t as (select name, c.customer_id, order_id, order_date, rank() over (partition by c.customer_id order by order_date desc) as rk from orders o join Customers c on o.customer_id =c.customer_id ) select name as customer_name, customer_id, order_id, order_date from t where rk<=3 order by customer_name, customer_id, order_date desc
with t as (select order_id, order_date, customer_id, rank() over (partition by customer_id order by order_date desc) as r from orders) select name as customer_name, t.customer_id, order_id, order_date from customers c join t on c.customer_id = t.customer_id and r <= 3 order by 1, 2, 4 desc
with t as( select *, rank() over(partition by customer_id order by order_date desc) recent from orders ) select name customer_name, t.customer_id, order_id, order_date from t join customers c on t.customer_id = c.customer_id where recent <= 3 order by customer_name, t.customer_id, order_date desc
with t as( select c.name as customer_name,o.customer_id,o.order_id,o.order_date,rank()over(partition by o.customer_id order by order_date desc) rak from (orders o left join customers c on c.customer_id=o.customer_id)) select customer_name, customer_id,order_id,order_date from t where rak<=3 order by 1,2,order_date desc
with t as( select customer_id, order_id, order_date, rank()over(partition by customer_id order by order_date desc) as 'rank_o' from Orders ) select name as 'customer_name', t.customer_id, order_id, order_date from Customers c join t on t.customer_id = c.customer_id where rank_o < 4 order by 1, 2, 4 desc
with t as( select o.*, (select name from Customers where customer_id = o.customer_id) as customer_name, row_number() over (partition by customer_id order by order_date desc) as row_i from Orders o ) select customer_name, customer_id, order_id, order_date from t where row_i<=3 order by customer_name asc, customer_id asc, order_date desc
with t as(select order_id ori, order_date ord, customer_id cus, dense_rank() over(partition by customer_id order by order_date desc) ran from orders o) select c.name as customer_name, t.cus as customer_id, t.ori as order_id, t.ord as order_date from customers c join t on c.customer_id = t.cus where t.ran < 4 order by c.name asc, t.cus asc, t.ord desc
with t1 as ( select *, rank() over (partition by customer_id order by order_date desc) as date_rnk from orders ) select b.name as customer_name, a.customer_id, a.order_id, a.order_date from t1 a left join customers b on a.customer_id = b.customer_id where a.date_rnk < 4 order by 1 asc, 2 asc, 4 desc
with t1 as (select *,dense_rank()over (partition by customer_id order by order_date desc)rk from Orders) select c.name as customer_name, c.customer_id as customer_id, order_id, order_date from Customers c left join t1 on c.customer_id = t1.customer_id where rk < 4 order by 1,2,4 desc
with t1 as (select a.customer_id, name, order_id, order_date, rank() over (partition by a.customer_id order by order_date desc) as rnk from customers a join orders b on a.customer_id = b.customer_id) select name as customer_name, customer_id, order_id, order_date from t1 where rnk <= 3 order by 1, 2, 4 desc
with t1 as (select name as customer_name, a.customer_id, b.order_id, order_date, dense_rank() over (partition by b.customer_ID order by name, a.customer_id asc, order_date desc) as rn from customers a right join orders b on a.customer_id = b.customer_id) select customer_name, customer_id, order_id, order_date from t1 where rn <=3 order by customer_name, customer_id asc, order_date desc
with t1 as( select o.*, c.name, row_number() over(partition by o.customer_id order by order_date desc) as rnk from orders as o join customers as c on o.customer_id = c.customer_id ) select name as customer_name, customer_id, order_id, order_date from t1 where rnk <= 3 order by customer_name asc, customer_id asc, order_date desc
with t1 as(select c.name as customer_name, o.customer_id, o.order_id, o.order_date, row_number() over(partition by c.customer_id order by o.order_date desc) as rnk from orders as o join customers as c using(customer_id) ) select customer_name, customer_id, order_id, order_date from t1 where rnk <= 3 order by customer_name asc, customer_id asc, order_date desc
with tb1 as ( select *, row_number() over(partition by customer_id order by order_date desc) as rw from orders) select c.name as customer_name, tb1.customer_id, tb1.order_id, tb1.order_date from tb1 join customers c on tb1.customer_id=c.customer_id where rw <= 3 order by c.name, tb1.customer_id, order_date desc
with tb1 as( select customer_id, order_date, order_id, row_number()over(partition by customer_id order by order_date desc) as rnk from Orders ) select c.name as customer_name, tb2.customer_id,tb2.order_id,tb2.order_date from (select * from tb1 where rnk <=3) as tb2 left join Customers c on tb2.customer_id = c.customer_id order by customer_name asc, customer_id asc, order_date desc
with temp as ( select *, rank() over (partition by customer_id order by order_date desc) as rnk from orders ) select name as customer_name, customer_id, order_id, order_date from temp join customers using(customer_id) where rnk <= 3 order by customer_name, customer_id, order_date desc
with temp as ( select customer_id, order_id, order_date, row_number() over (partition by customer_id order by order_date DESC) order_rk from Orders ) select c.name as customer_name, t.customer_id, t.order_id, t.order_date from temp t left join Customers c on t.customer_id = c.customer_id where t.order_rk <= 3 order by c.name ASC, t.customer_id ASC, t.order_date DESC
with temp as ( select order_id, order_date, customer_id, row_number() over (partition by customer_id order by order_date desc) as r from orders ) select name as customer_name, c.customer_id, order_id, order_date from temp join customers c on temp.customer_id=c.customer_id where r<=3 order by name, customer_id, order_date desc
with temp as (select a.name as customer_name, a.customer_id, b.order_id, b.order_date, rank() over (partition by customer_id order by b.order_date desc) as seq from Customers a right join Orders b on a.customer_id = b.customer_id) select customer_name, customer_id, order_id, order_date from temp where seq <= 3 order by 1, 2, 4 desc
with temp as (select customers.name, customers.customer_id, order_id, orders.order_date, rank() over(partition by orders.customer_id order by order_date desc) as ranking, count(order_id) over(partition by orders.customer_id) as num_orders from customers join orders on customers.customer_id = orders.customer_id) select name as customer_name, customer_id, order_id, order_date from temp where ranking between 1 and 3 order by customer_name,customer_id,order_date desc
with temp1 as ( select a.*, b.name as customer_name, row_number() over (partition by customer_id order by order_date desc) as rnk from orders as a left join customers as b on a.customer_id=b.customer_id) select customer_name, customer_id, order_id, order_date from temp1 where rnk <=3 order by customer_name asc, customer_id asc, order_date desc
with tmp as (select order_id, customer_id, order_date, rank() over (partition by customer_id order by order_date desc) as rk from orders) select name as customer_name, a.customer_id, order_id, order_date from tmp a join customers b on a.customer_id = b.customer_id where rk < 4 order by customer_name, customer_id, order_date desc
with tmp as( select *, row_number() over(partition by customer_id order by order_date desc) as rn from orders natural join customers ) select name as customer_name, customer_id, order_id, order_date from tmp where rn <= 3 order by 1, 2, 4 desc
with tmp as( select customer_id, order_id, order_date, rank()over(partition by customer_id order by order_date desc) as rnk from orders ) select c.name as customer_name, c.customer_id, tmp.order_id, tmp.order_date from Customers as c left join tmp on c.customer_id = tmp.customer_id where rnk <= 3 order by c.name, c.customer_id, order_date desc
with tmp_table as (select o.order_id, o.order_date,o.customer_id,o.cost,c.name, dense_rank() over (partition by o.customer_id order by order_date desc) as rnk from orders o join customers c on o.customer_id = c.customer_id) select name as customer_name, customer_id, order_id, order_date from tmp_table where rnk<=3 order by name, customer_id, order_date desc
with x as ( select c.name as customer_name, o.order_id, o.order_date, o.customer_id, rank() over (partition by customer_id order by order_date desc) as rnk from orders as o inner join customers as c on o.customer_id = c.customer_id ) select customer_name,customer_id,order_id,order_date from x where rnk <= 3 order by 1 asc, 2 asc, 4 desc
with x as ( select o.*,name,row_number() over (partition by c.customer_id order by order_date desc) rn from customers c join orders o on c.customer_id = o.customer_id ) select name customer_name, customer_id, order_id, order_date from x where rn <= 3 order by 1,2,4 desc
with x as (select c.name as customer_name , o.customer_id, o.order_id, o.order_date, rank() over(partition by o.customer_id order by o.order_date desc) as rnk from Orders as o left join Customers as c on c.customer_id = o.customer_id ) select customer_name, customer_id, order_id, order_date from x where rnk <=3 order by customer_name asc, customer_id asc, order_date desc
